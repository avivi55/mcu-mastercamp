

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jun 21 11:29:19 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    25                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    26                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,merge=1,delta=2
    35                           	psect	text2,local,class=CODE,merge=1,delta=2
    36                           	psect	text3,local,class=CODE,merge=1,delta=2
    37                           	psect	text4,local,class=CODE,merge=1,delta=2
    38                           	psect	text5,local,class=CODE,merge=1,delta=2
    39                           	psect	text6,local,class=CODE,merge=1,delta=2
    40                           	psect	text7,local,class=CODE,merge=1,delta=2
    41                           	psect	text8,local,class=CODE,merge=1,delta=2
    42                           	psect	text9,local,class=CODE,merge=1,delta=2
    43                           	psect	text10,local,class=CODE,merge=1,delta=2
    44                           	psect	text11,local,class=CODE,merge=1,delta=2
    45                           	psect	text12,local,class=CODE,merge=1,delta=2
    46                           	psect	text13,local,class=CODE,merge=1,delta=2
    47                           	psect	text14,local,class=CODE,merge=1,delta=2
    48                           	psect	text15,local,class=CODE,merge=1,delta=2
    49                           	psect	text16,local,class=CODE,merge=1,delta=2
    50                           	psect	text17,local,class=CODE,merge=1,delta=2
    51                           	psect	text18,local,class=CODE,merge=1,delta=2
    52                           	psect	text19,local,class=CODE,merge=1,delta=2
    53                           	psect	text20,local,class=CODE,merge=1,delta=2
    54                           	psect	text21,local,class=CODE,merge=1,delta=2
    55                           	psect	text22,local,class=CODE,merge=1,delta=2
    56                           	psect	text23,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text25,local,class=CODE,merge=1,delta=2
    59                           	psect	text26,local,class=CODE,merge=1,delta=2
    60                           	psect	text27,local,class=CODE,merge=1,delta=2
    61                           	psect	text28,local,class=CODE,merge=1,delta=2
    62                           	psect	text29,local,class=CODE,merge=1,delta=2
    63                           	psect	text30,local,class=CODE,merge=1,delta=2
    64                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text32,local,class=CODE,merge=1,delta=2
    66                           	psect	text33,local,class=CODE,merge=1,delta=2
    67                           	psect	text34,local,class=CODE,merge=1,delta=2
    68                           	psect	text35,local,class=CODE,merge=1,delta=2
    69                           	psect	text36,local,class=CODE,merge=1,delta=2
    70                           	psect	text37,local,class=CODE,merge=1,delta=2
    71                           	psect	text38,local,class=CODE,merge=1,delta=2
    72                           	psect	text39,local,class=CODE,merge=1,delta=2
    73                           	psect	text40,local,class=CODE,merge=1,delta=2
    74                           	psect	text41,local,class=CODE,merge=1,delta=2
    75                           	psect	text42,local,class=CODE,merge=1,delta=2
    76                           	psect	text43,local,class=CODE,merge=1,delta=2
    77                           	psect	text44,local,class=CODE,merge=1,delta=2
    78                           	psect	text45,local,class=CODE,merge=1,delta=2
    79                           	psect	text46,local,class=CODE,merge=1,delta=2
    80                           	psect	text47,local,class=CODE,merge=1,delta=2
    81                           	psect	text48,local,class=CODE,merge=1,delta=2
    82                           	psect	text49,local,class=CODE,merge=1,delta=2
    83                           	psect	text50,local,class=CODE,merge=1,delta=2
    84                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text52,local,class=CODE,merge=1,delta=2
    86                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text56,local,class=CODE,merge=1,delta=2
    90                           	psect	text57,local,class=CODE,merge=1,delta=2
    91                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text60,local,class=CODE,merge=1,delta=2
    94                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text65,local,class=CODE,merge=1,delta=2
    99                           	psect	text66,local,class=CODE,merge=1,delta=2
   100                           	psect	text67,local,class=CODE,merge=1,delta=2
   101                           	psect	text68,local,class=CODE,merge=1,delta=2,group=3
   102                           	psect	text69,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text70,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
   105                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
   106                           	psect	text73,local,class=CODE,merge=1,delta=2,group=2
   107                           	psect	text74,local,class=CODE,merge=1,delta=2,group=1
   108                           	psect	text75,local,class=CODE,merge=1,delta=2,group=3
   109                           	psect	text76,local,class=CODE,merge=1,delta=2,group=1
   110                           	psect	text77,local,class=CODE,merge=1,delta=2,group=3
   111                           	psect	text78,local,class=CODE,merge=1,delta=2,group=3
   112                           	psect	text79,local,class=CODE,merge=1,delta=2,group=3
   113                           	psect	text80,local,class=CODE,merge=1,delta=2,group=3
   114                           	psect	text81,local,class=CODE,merge=1,delta=2,group=3
   115                           	psect	text82,local,class=CODE,merge=1,delta=2,group=3
   116                           	psect	text83,local,class=CODE,merge=1,delta=2,group=3
   117                           	psect	text84,local,class=CODE,merge=1,delta=2,group=2
   118                           	psect	text85,local,class=CODE,merge=1,delta=2,group=2
   119                           	psect	text86,local,class=CODE,merge=1,delta=2,group=2
   120                           	psect	text87,local,class=CODE,merge=1,delta=2,group=2
   121                           	psect	text88,local,class=CODE,merge=1,delta=2,group=2
   122                           	psect	text89,local,class=CODE,merge=1,delta=2,group=2
   123                           	psect	text90,local,class=CODE,merge=1,delta=2,group=2
   124                           	psect	text91,local,class=CODE,merge=1,delta=2,group=2
   125                           	psect	text92,local,class=CODE,merge=1,delta=2,group=2
   126                           	psect	text93,local,class=CODE,merge=1,delta=2
   127                           	psect	text94,local,class=CODE,merge=1,delta=2
   128                           	psect	text95,local,class=CODE,merge=1,delta=2
   129                           	psect	text96,local,class=CODE,merge=1,delta=2
   130                           	psect	text97,local,class=CODE,merge=1,delta=2
   131                           	psect	text98,local,class=CODE,merge=1,delta=2
   132                           	psect	text99,local,class=CODE,merge=1,delta=2
   133                           	psect	text100,local,class=CODE,merge=1,delta=2
   134                           	psect	text101,local,class=CODE,merge=1,delta=2
   135                           	psect	text102,local,class=CODE,merge=1,delta=2
   136                           	psect	text103,local,class=CODE,merge=1,delta=2
   137                           	psect	text104,local,class=CODE,merge=1,delta=2
   138                           	psect	text105,local,class=CODE,merge=1,delta=2
   139                           	psect	text106,local,class=CODE,merge=1,delta=2
   140                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   141                           	dabs	1,0x620,48
   142                           	dabs	1,0x5A0,80
   143                           	dabs	1,0x2370,0,_eusartRxStatusBuffer
   144                           	dabs	1,0x7E,2
   145     0000                     
   146                           ; Generated 07/09/2023 GMT
   147                           ; 
   148                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   149                           ; All rights reserved.
   150                           ; 
   151                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   152                           ; 
   153                           ; Redistribution and use in source and binary forms, with or without modification, are
   154                           ; permitted provided that the following conditions are met:
   155                           ; 
   156                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   157                           ;        conditions and the following disclaimer.
   158                           ; 
   159                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   160                           ;        of conditions and the following disclaimer in the documentation and/or other
   161                           ;        materials provided with the distribution. Publication is not required when
   162                           ;        this file is used in an embedded application.
   163                           ; 
   164                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   165                           ;        software without specific prior written permission.
   166                           ; 
   167                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   168                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   169                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   170                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   171                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   172                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   173                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   174                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   175                           ; 
   176                           ; 
   177                           ; Code-generator required, PIC16F1619 Definitions
   178                           ; 
   179                           ; SFR Addresses
   180     0000                     	;# 
   181     0001                     	;# 
   182     0002                     	;# 
   183     0003                     	;# 
   184     0004                     	;# 
   185     0005                     	;# 
   186     0006                     	;# 
   187     0007                     	;# 
   188     0008                     	;# 
   189     0009                     	;# 
   190     000A                     	;# 
   191     000B                     	;# 
   192     000C                     	;# 
   193     000D                     	;# 
   194     000E                     	;# 
   195     0010                     	;# 
   196     0011                     	;# 
   197     0012                     	;# 
   198     0013                     	;# 
   199     0014                     	;# 
   200     0015                     	;# 
   201     0016                     	;# 
   202     0016                     	;# 
   203     0017                     	;# 
   204     0018                     	;# 
   205     0019                     	;# 
   206     001A                     	;# 
   207     001A                     	;# 
   208     001B                     	;# 
   209     001B                     	;# 
   210     001C                     	;# 
   211     001D                     	;# 
   212     001E                     	;# 
   213     001F                     	;# 
   214     008C                     	;# 
   215     008D                     	;# 
   216     008E                     	;# 
   217     0090                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0095                     	;# 
   223     0096                     	;# 
   224     0098                     	;# 
   225     0099                     	;# 
   226     009A                     	;# 
   227     009B                     	;# 
   228     009B                     	;# 
   229     009C                     	;# 
   230     009D                     	;# 
   231     009E                     	;# 
   232     009F                     	;# 
   233     010C                     	;# 
   234     010D                     	;# 
   235     010E                     	;# 
   236     0111                     	;# 
   237     0112                     	;# 
   238     0113                     	;# 
   239     0114                     	;# 
   240     0115                     	;# 
   241     0116                     	;# 
   242     0117                     	;# 
   243     0118                     	;# 
   244     0119                     	;# 
   245     011C                     	;# 
   246     018C                     	;# 
   247     018D                     	;# 
   248     018E                     	;# 
   249     0191                     	;# 
   250     0191                     	;# 
   251     0192                     	;# 
   252     0193                     	;# 
   253     0193                     	;# 
   254     0194                     	;# 
   255     0195                     	;# 
   256     0196                     	;# 
   257     0197                     	;# 
   258     0199                     	;# 
   259     0199                     	;# 
   260     0199                     	;# 
   261     019A                     	;# 
   262     019A                     	;# 
   263     019A                     	;# 
   264     019B                     	;# 
   265     019B                     	;# 
   266     019B                     	;# 
   267     019B                     	;# 
   268     019B                     	;# 
   269     019C                     	;# 
   270     019C                     	;# 
   271     019C                     	;# 
   272     019D                     	;# 
   273     019D                     	;# 
   274     019D                     	;# 
   275     019E                     	;# 
   276     019E                     	;# 
   277     019E                     	;# 
   278     019F                     	;# 
   279     019F                     	;# 
   280     019F                     	;# 
   281     019F                     	;# 
   282     019F                     	;# 
   283     020C                     	;# 
   284     020D                     	;# 
   285     020E                     	;# 
   286     0211                     	;# 
   287     0211                     	;# 
   288     0212                     	;# 
   289     0212                     	;# 
   290     0213                     	;# 
   291     0213                     	;# 
   292     0214                     	;# 
   293     0214                     	;# 
   294     0215                     	;# 
   295     0215                     	;# 
   296     0215                     	;# 
   297     0215                     	;# 
   298     0216                     	;# 
   299     0216                     	;# 
   300     0217                     	;# 
   301     0217                     	;# 
   302     028C                     	;# 
   303     028D                     	;# 
   304     028E                     	;# 
   305     0291                     	;# 
   306     0291                     	;# 
   307     0292                     	;# 
   308     0293                     	;# 
   309     0294                     	;# 
   310     0298                     	;# 
   311     0298                     	;# 
   312     0299                     	;# 
   313     029A                     	;# 
   314     029B                     	;# 
   315     029E                     	;# 
   316     030C                     	;# 
   317     030D                     	;# 
   318     030E                     	;# 
   319     038C                     	;# 
   320     038D                     	;# 
   321     038E                     	;# 
   322     0391                     	;# 
   323     0392                     	;# 
   324     0393                     	;# 
   325     0394                     	;# 
   326     0395                     	;# 
   327     0396                     	;# 
   328     0397                     	;# 
   329     0398                     	;# 
   330     0399                     	;# 
   331     040E                     	;# 
   332     0413                     	;# 
   333     0413                     	;# 
   334     0414                     	;# 
   335     0414                     	;# 
   336     0415                     	;# 
   337     0416                     	;# 
   338     0417                     	;# 
   339     0418                     	;# 
   340     041A                     	;# 
   341     041A                     	;# 
   342     041B                     	;# 
   343     041B                     	;# 
   344     041C                     	;# 
   345     041D                     	;# 
   346     041E                     	;# 
   347     041F                     	;# 
   348     0493                     	;# 
   349     0494                     	;# 
   350     0495                     	;# 
   351     0496                     	;# 
   352     049A                     	;# 
   353     049B                     	;# 
   354     049C                     	;# 
   355     049D                     	;# 
   356     058C                     	;# 
   357     058C                     	;# 
   358     058D                     	;# 
   359     058E                     	;# 
   360     058E                     	;# 
   361     058F                     	;# 
   362     0590                     	;# 
   363     0590                     	;# 
   364     0591                     	;# 
   365     0592                     	;# 
   366     0592                     	;# 
   367     0593                     	;# 
   368     0594                     	;# 
   369     0594                     	;# 
   370     0595                     	;# 
   371     0596                     	;# 
   372     0596                     	;# 
   373     0597                     	;# 
   374     0598                     	;# 
   375     0599                     	;# 
   376     059A                     	;# 
   377     059B                     	;# 
   378     059B                     	;# 
   379     059C                     	;# 
   380     059D                     	;# 
   381     060C                     	;# 
   382     060C                     	;# 
   383     060D                     	;# 
   384     060E                     	;# 
   385     060F                     	;# 
   386     060F                     	;# 
   387     0610                     	;# 
   388     0611                     	;# 
   389     0612                     	;# 
   390     0613                     	;# 
   391     0614                     	;# 
   392     0617                     	;# 
   393     0617                     	;# 
   394     0618                     	;# 
   395     0619                     	;# 
   396     061A                     	;# 
   397     061A                     	;# 
   398     061B                     	;# 
   399     061C                     	;# 
   400     0691                     	;# 
   401     0692                     	;# 
   402     0693                     	;# 
   403     0694                     	;# 
   404     0695                     	;# 
   405     0696                     	;# 
   406     0697                     	;# 
   407     0699                     	;# 
   408     069A                     	;# 
   409     0711                     	;# 
   410     0712                     	;# 
   411     0713                     	;# 
   412     0714                     	;# 
   413     0715                     	;# 
   414     0718                     	;# 
   415     0718                     	;# 
   416     0719                     	;# 
   417     071A                     	;# 
   418     071A                     	;# 
   419     071B                     	;# 
   420     071C                     	;# 
   421     071D                     	;# 
   422     0791                     	;# 
   423     0791                     	;# 
   424     0792                     	;# 
   425     0793                     	;# 
   426     0793                     	;# 
   427     0794                     	;# 
   428     0795                     	;# 
   429     0795                     	;# 
   430     0796                     	;# 
   431     0797                     	;# 
   432     0797                     	;# 
   433     0798                     	;# 
   434     0799                     	;# 
   435     079A                     	;# 
   436     080C                     	;# 
   437     080C                     	;# 
   438     080D                     	;# 
   439     080E                     	;# 
   440     080E                     	;# 
   441     080F                     	;# 
   442     0810                     	;# 
   443     0810                     	;# 
   444     0811                     	;# 
   445     0812                     	;# 
   446     0812                     	;# 
   447     0813                     	;# 
   448     0814                     	;# 
   449     0815                     	;# 
   450     0816                     	;# 
   451     0817                     	;# 
   452     0818                     	;# 
   453     0819                     	;# 
   454     081A                     	;# 
   455     081A                     	;# 
   456     081B                     	;# 
   457     081C                     	;# 
   458     081C                     	;# 
   459     081D                     	;# 
   460     088C                     	;# 
   461     088D                     	;# 
   462     088E                     	;# 
   463     088F                     	;# 
   464     088F                     	;# 
   465     0890                     	;# 
   466     0891                     	;# 
   467     0892                     	;# 
   468     0893                     	;# 
   469     0893                     	;# 
   470     0894                     	;# 
   471     0895                     	;# 
   472     0896                     	;# 
   473     0897                     	;# 
   474     0897                     	;# 
   475     0898                     	;# 
   476     0899                     	;# 
   477     0D8C                     	;# 
   478     0D8C                     	;# 
   479     0D8D                     	;# 
   480     0D8E                     	;# 
   481     0D8F                     	;# 
   482     0D8F                     	;# 
   483     0D90                     	;# 
   484     0D91                     	;# 
   485     0D92                     	;# 
   486     0D92                     	;# 
   487     0D93                     	;# 
   488     0D94                     	;# 
   489     0D95                     	;# 
   490     0D95                     	;# 
   491     0D96                     	;# 
   492     0D97                     	;# 
   493     0D98                     	;# 
   494     0D99                     	;# 
   495     0D9A                     	;# 
   496     0D9B                     	;# 
   497     0D9C                     	;# 
   498     0D9D                     	;# 
   499     0D9E                     	;# 
   500     0D9E                     	;# 
   501     0D9F                     	;# 
   502     0DA0                     	;# 
   503     0DA1                     	;# 
   504     0DA1                     	;# 
   505     0DA2                     	;# 
   506     0DA3                     	;# 
   507     0DA4                     	;# 
   508     0DA4                     	;# 
   509     0DA5                     	;# 
   510     0DA6                     	;# 
   511     0DA7                     	;# 
   512     0DA7                     	;# 
   513     0DA8                     	;# 
   514     0DA9                     	;# 
   515     0DAA                     	;# 
   516     0DAB                     	;# 
   517     0DAC                     	;# 
   518     0DAD                     	;# 
   519     0DAE                     	;# 
   520     0DAF                     	;# 
   521     0E0F                     	;# 
   522     0E10                     	;# 
   523     0E11                     	;# 
   524     0E12                     	;# 
   525     0E13                     	;# 
   526     0E14                     	;# 
   527     0E15                     	;# 
   528     0E16                     	;# 
   529     0E17                     	;# 
   530     0E17                     	;# 
   531     0E18                     	;# 
   532     0E18                     	;# 
   533     0E19                     	;# 
   534     0E1A                     	;# 
   535     0E1B                     	;# 
   536     0E1B                     	;# 
   537     0E1C                     	;# 
   538     0E1D                     	;# 
   539     0E1E                     	;# 
   540     0E1E                     	;# 
   541     0E1F                     	;# 
   542     0E20                     	;# 
   543     0E21                     	;# 
   544     0E22                     	;# 
   545     0E23                     	;# 
   546     0E24                     	;# 
   547     0E25                     	;# 
   548     0E26                     	;# 
   549     0E27                     	;# 
   550     0E28                     	;# 
   551     0E29                     	;# 
   552     0E2A                     	;# 
   553     0E2B                     	;# 
   554     0E2C                     	;# 
   555     0E2D                     	;# 
   556     0E2E                     	;# 
   557     0E90                     	;# 
   558     0E91                     	;# 
   559     0E92                     	;# 
   560     0E94                     	;# 
   561     0E95                     	;# 
   562     0E9C                     	;# 
   563     0E9D                     	;# 
   564     0E9E                     	;# 
   565     0E9F                     	;# 
   566     0EA0                     	;# 
   567     0EA1                     	;# 
   568     0EA2                     	;# 
   569     0EA3                     	;# 
   570     0EA4                     	;# 
   571     0EA5                     	;# 
   572     0EA6                     	;# 
   573     0EA7                     	;# 
   574     0F0F                     	;# 
   575     0F10                     	;# 
   576     0F11                     	;# 
   577     0F12                     	;# 
   578     0F13                     	;# 
   579     0F14                     	;# 
   580     0F15                     	;# 
   581     0F16                     	;# 
   582     0F17                     	;# 
   583     0F18                     	;# 
   584     0F19                     	;# 
   585     0F1A                     	;# 
   586     0F1B                     	;# 
   587     0F1C                     	;# 
   588     0F1D                     	;# 
   589     0F1E                     	;# 
   590     0F1F                     	;# 
   591     0F20                     	;# 
   592     0F21                     	;# 
   593     0F22                     	;# 
   594     0F23                     	;# 
   595     0F24                     	;# 
   596     0F25                     	;# 
   597     0F26                     	;# 
   598     0F27                     	;# 
   599     0F28                     	;# 
   600     0F29                     	;# 
   601     0F2A                     	;# 
   602     0F2B                     	;# 
   603     0F2C                     	;# 
   604     0F2D                     	;# 
   605     0F2E                     	;# 
   606     0F2F                     	;# 
   607     0F30                     	;# 
   608     0F31                     	;# 
   609     0F32                     	;# 
   610     0F33                     	;# 
   611     0F34                     	;# 
   612     0F35                     	;# 
   613     0F36                     	;# 
   614     0F37                     	;# 
   615     0FE4                     	;# 
   616     0FE5                     	;# 
   617     0FE6                     	;# 
   618     0FE7                     	;# 
   619     0FE8                     	;# 
   620     0FE9                     	;# 
   621     0FEA                     	;# 
   622     0FEB                     	;# 
   623     0FED                     	;# 
   624     0FEE                     	;# 
   625     0FEF                     	;# 
   626     0000                     	;# 
   627     0001                     	;# 
   628     0002                     	;# 
   629     0003                     	;# 
   630     0004                     	;# 
   631     0005                     	;# 
   632     0006                     	;# 
   633     0007                     	;# 
   634     0008                     	;# 
   635     0009                     	;# 
   636     000A                     	;# 
   637     000B                     	;# 
   638     000C                     	;# 
   639     000D                     	;# 
   640     000E                     	;# 
   641     0010                     	;# 
   642     0011                     	;# 
   643     0012                     	;# 
   644     0013                     	;# 
   645     0014                     	;# 
   646     0015                     	;# 
   647     0016                     	;# 
   648     0016                     	;# 
   649     0017                     	;# 
   650     0018                     	;# 
   651     0019                     	;# 
   652     001A                     	;# 
   653     001A                     	;# 
   654     001B                     	;# 
   655     001B                     	;# 
   656     001C                     	;# 
   657     001D                     	;# 
   658     001E                     	;# 
   659     001F                     	;# 
   660     008C                     	;# 
   661     008D                     	;# 
   662     008E                     	;# 
   663     0090                     	;# 
   664     0091                     	;# 
   665     0092                     	;# 
   666     0093                     	;# 
   667     0094                     	;# 
   668     0095                     	;# 
   669     0096                     	;# 
   670     0098                     	;# 
   671     0099                     	;# 
   672     009A                     	;# 
   673     009B                     	;# 
   674     009B                     	;# 
   675     009C                     	;# 
   676     009D                     	;# 
   677     009E                     	;# 
   678     009F                     	;# 
   679     010C                     	;# 
   680     010D                     	;# 
   681     010E                     	;# 
   682     0111                     	;# 
   683     0112                     	;# 
   684     0113                     	;# 
   685     0114                     	;# 
   686     0115                     	;# 
   687     0116                     	;# 
   688     0117                     	;# 
   689     0118                     	;# 
   690     0119                     	;# 
   691     011C                     	;# 
   692     018C                     	;# 
   693     018D                     	;# 
   694     018E                     	;# 
   695     0191                     	;# 
   696     0191                     	;# 
   697     0192                     	;# 
   698     0193                     	;# 
   699     0193                     	;# 
   700     0194                     	;# 
   701     0195                     	;# 
   702     0196                     	;# 
   703     0197                     	;# 
   704     0199                     	;# 
   705     0199                     	;# 
   706     0199                     	;# 
   707     019A                     	;# 
   708     019A                     	;# 
   709     019A                     	;# 
   710     019B                     	;# 
   711     019B                     	;# 
   712     019B                     	;# 
   713     019B                     	;# 
   714     019B                     	;# 
   715     019C                     	;# 
   716     019C                     	;# 
   717     019C                     	;# 
   718     019D                     	;# 
   719     019D                     	;# 
   720     019D                     	;# 
   721     019E                     	;# 
   722     019E                     	;# 
   723     019E                     	;# 
   724     019F                     	;# 
   725     019F                     	;# 
   726     019F                     	;# 
   727     019F                     	;# 
   728     019F                     	;# 
   729     020C                     	;# 
   730     020D                     	;# 
   731     020E                     	;# 
   732     0211                     	;# 
   733     0211                     	;# 
   734     0212                     	;# 
   735     0212                     	;# 
   736     0213                     	;# 
   737     0213                     	;# 
   738     0214                     	;# 
   739     0214                     	;# 
   740     0215                     	;# 
   741     0215                     	;# 
   742     0215                     	;# 
   743     0215                     	;# 
   744     0216                     	;# 
   745     0216                     	;# 
   746     0217                     	;# 
   747     0217                     	;# 
   748     028C                     	;# 
   749     028D                     	;# 
   750     028E                     	;# 
   751     0291                     	;# 
   752     0291                     	;# 
   753     0292                     	;# 
   754     0293                     	;# 
   755     0294                     	;# 
   756     0298                     	;# 
   757     0298                     	;# 
   758     0299                     	;# 
   759     029A                     	;# 
   760     029B                     	;# 
   761     029E                     	;# 
   762     030C                     	;# 
   763     030D                     	;# 
   764     030E                     	;# 
   765     038C                     	;# 
   766     038D                     	;# 
   767     038E                     	;# 
   768     0391                     	;# 
   769     0392                     	;# 
   770     0393                     	;# 
   771     0394                     	;# 
   772     0395                     	;# 
   773     0396                     	;# 
   774     0397                     	;# 
   775     0398                     	;# 
   776     0399                     	;# 
   777     040E                     	;# 
   778     0413                     	;# 
   779     0413                     	;# 
   780     0414                     	;# 
   781     0414                     	;# 
   782     0415                     	;# 
   783     0416                     	;# 
   784     0417                     	;# 
   785     0418                     	;# 
   786     041A                     	;# 
   787     041A                     	;# 
   788     041B                     	;# 
   789     041B                     	;# 
   790     041C                     	;# 
   791     041D                     	;# 
   792     041E                     	;# 
   793     041F                     	;# 
   794     0493                     	;# 
   795     0494                     	;# 
   796     0495                     	;# 
   797     0496                     	;# 
   798     049A                     	;# 
   799     049B                     	;# 
   800     049C                     	;# 
   801     049D                     	;# 
   802     058C                     	;# 
   803     058C                     	;# 
   804     058D                     	;# 
   805     058E                     	;# 
   806     058E                     	;# 
   807     058F                     	;# 
   808     0590                     	;# 
   809     0590                     	;# 
   810     0591                     	;# 
   811     0592                     	;# 
   812     0592                     	;# 
   813     0593                     	;# 
   814     0594                     	;# 
   815     0594                     	;# 
   816     0595                     	;# 
   817     0596                     	;# 
   818     0596                     	;# 
   819     0597                     	;# 
   820     0598                     	;# 
   821     0599                     	;# 
   822     059A                     	;# 
   823     059B                     	;# 
   824     059B                     	;# 
   825     059C                     	;# 
   826     059D                     	;# 
   827     060C                     	;# 
   828     060C                     	;# 
   829     060D                     	;# 
   830     060E                     	;# 
   831     060F                     	;# 
   832     060F                     	;# 
   833     0610                     	;# 
   834     0611                     	;# 
   835     0612                     	;# 
   836     0613                     	;# 
   837     0614                     	;# 
   838     0617                     	;# 
   839     0617                     	;# 
   840     0618                     	;# 
   841     0619                     	;# 
   842     061A                     	;# 
   843     061A                     	;# 
   844     061B                     	;# 
   845     061C                     	;# 
   846     0691                     	;# 
   847     0692                     	;# 
   848     0693                     	;# 
   849     0694                     	;# 
   850     0695                     	;# 
   851     0696                     	;# 
   852     0697                     	;# 
   853     0699                     	;# 
   854     069A                     	;# 
   855     0711                     	;# 
   856     0712                     	;# 
   857     0713                     	;# 
   858     0714                     	;# 
   859     0715                     	;# 
   860     0718                     	;# 
   861     0718                     	;# 
   862     0719                     	;# 
   863     071A                     	;# 
   864     071A                     	;# 
   865     071B                     	;# 
   866     071C                     	;# 
   867     071D                     	;# 
   868     0791                     	;# 
   869     0791                     	;# 
   870     0792                     	;# 
   871     0793                     	;# 
   872     0793                     	;# 
   873     0794                     	;# 
   874     0795                     	;# 
   875     0795                     	;# 
   876     0796                     	;# 
   877     0797                     	;# 
   878     0797                     	;# 
   879     0798                     	;# 
   880     0799                     	;# 
   881     079A                     	;# 
   882     080C                     	;# 
   883     080C                     	;# 
   884     080D                     	;# 
   885     080E                     	;# 
   886     080E                     	;# 
   887     080F                     	;# 
   888     0810                     	;# 
   889     0810                     	;# 
   890     0811                     	;# 
   891     0812                     	;# 
   892     0812                     	;# 
   893     0813                     	;# 
   894     0814                     	;# 
   895     0815                     	;# 
   896     0816                     	;# 
   897     0817                     	;# 
   898     0818                     	;# 
   899     0819                     	;# 
   900     081A                     	;# 
   901     081A                     	;# 
   902     081B                     	;# 
   903     081C                     	;# 
   904     081C                     	;# 
   905     081D                     	;# 
   906     088C                     	;# 
   907     088D                     	;# 
   908     088E                     	;# 
   909     088F                     	;# 
   910     088F                     	;# 
   911     0890                     	;# 
   912     0891                     	;# 
   913     0892                     	;# 
   914     0893                     	;# 
   915     0893                     	;# 
   916     0894                     	;# 
   917     0895                     	;# 
   918     0896                     	;# 
   919     0897                     	;# 
   920     0897                     	;# 
   921     0898                     	;# 
   922     0899                     	;# 
   923     0D8C                     	;# 
   924     0D8C                     	;# 
   925     0D8D                     	;# 
   926     0D8E                     	;# 
   927     0D8F                     	;# 
   928     0D8F                     	;# 
   929     0D90                     	;# 
   930     0D91                     	;# 
   931     0D92                     	;# 
   932     0D92                     	;# 
   933     0D93                     	;# 
   934     0D94                     	;# 
   935     0D95                     	;# 
   936     0D95                     	;# 
   937     0D96                     	;# 
   938     0D97                     	;# 
   939     0D98                     	;# 
   940     0D99                     	;# 
   941     0D9A                     	;# 
   942     0D9B                     	;# 
   943     0D9C                     	;# 
   944     0D9D                     	;# 
   945     0D9E                     	;# 
   946     0D9E                     	;# 
   947     0D9F                     	;# 
   948     0DA0                     	;# 
   949     0DA1                     	;# 
   950     0DA1                     	;# 
   951     0DA2                     	;# 
   952     0DA3                     	;# 
   953     0DA4                     	;# 
   954     0DA4                     	;# 
   955     0DA5                     	;# 
   956     0DA6                     	;# 
   957     0DA7                     	;# 
   958     0DA7                     	;# 
   959     0DA8                     	;# 
   960     0DA9                     	;# 
   961     0DAA                     	;# 
   962     0DAB                     	;# 
   963     0DAC                     	;# 
   964     0DAD                     	;# 
   965     0DAE                     	;# 
   966     0DAF                     	;# 
   967     0E0F                     	;# 
   968     0E10                     	;# 
   969     0E11                     	;# 
   970     0E12                     	;# 
   971     0E13                     	;# 
   972     0E14                     	;# 
   973     0E15                     	;# 
   974     0E16                     	;# 
   975     0E17                     	;# 
   976     0E17                     	;# 
   977     0E18                     	;# 
   978     0E18                     	;# 
   979     0E19                     	;# 
   980     0E1A                     	;# 
   981     0E1B                     	;# 
   982     0E1B                     	;# 
   983     0E1C                     	;# 
   984     0E1D                     	;# 
   985     0E1E                     	;# 
   986     0E1E                     	;# 
   987     0E1F                     	;# 
   988     0E20                     	;# 
   989     0E21                     	;# 
   990     0E22                     	;# 
   991     0E23                     	;# 
   992     0E24                     	;# 
   993     0E25                     	;# 
   994     0E26                     	;# 
   995     0E27                     	;# 
   996     0E28                     	;# 
   997     0E29                     	;# 
   998     0E2A                     	;# 
   999     0E2B                     	;# 
  1000     0E2C                     	;# 
  1001     0E2D                     	;# 
  1002     0E2E                     	;# 
  1003     0E90                     	;# 
  1004     0E91                     	;# 
  1005     0E92                     	;# 
  1006     0E94                     	;# 
  1007     0E95                     	;# 
  1008     0E9C                     	;# 
  1009     0E9D                     	;# 
  1010     0E9E                     	;# 
  1011     0E9F                     	;# 
  1012     0EA0                     	;# 
  1013     0EA1                     	;# 
  1014     0EA2                     	;# 
  1015     0EA3                     	;# 
  1016     0EA4                     	;# 
  1017     0EA5                     	;# 
  1018     0EA6                     	;# 
  1019     0EA7                     	;# 
  1020     0F0F                     	;# 
  1021     0F10                     	;# 
  1022     0F11                     	;# 
  1023     0F12                     	;# 
  1024     0F13                     	;# 
  1025     0F14                     	;# 
  1026     0F15                     	;# 
  1027     0F16                     	;# 
  1028     0F17                     	;# 
  1029     0F18                     	;# 
  1030     0F19                     	;# 
  1031     0F1A                     	;# 
  1032     0F1B                     	;# 
  1033     0F1C                     	;# 
  1034     0F1D                     	;# 
  1035     0F1E                     	;# 
  1036     0F1F                     	;# 
  1037     0F20                     	;# 
  1038     0F21                     	;# 
  1039     0F22                     	;# 
  1040     0F23                     	;# 
  1041     0F24                     	;# 
  1042     0F25                     	;# 
  1043     0F26                     	;# 
  1044     0F27                     	;# 
  1045     0F28                     	;# 
  1046     0F29                     	;# 
  1047     0F2A                     	;# 
  1048     0F2B                     	;# 
  1049     0F2C                     	;# 
  1050     0F2D                     	;# 
  1051     0F2E                     	;# 
  1052     0F2F                     	;# 
  1053     0F30                     	;# 
  1054     0F31                     	;# 
  1055     0F32                     	;# 
  1056     0F33                     	;# 
  1057     0F34                     	;# 
  1058     0F35                     	;# 
  1059     0F36                     	;# 
  1060     0F37                     	;# 
  1061     0FE4                     	;# 
  1062     0FE5                     	;# 
  1063     0FE6                     	;# 
  1064     0FE7                     	;# 
  1065     0FE8                     	;# 
  1066     0FE9                     	;# 
  1067     0FEA                     	;# 
  1068     0FEB                     	;# 
  1069     0FED                     	;# 
  1070     0FEE                     	;# 
  1071     0FEF                     	;# 
  1072     0000                     	;# 
  1073     0001                     	;# 
  1074     0002                     	;# 
  1075     0003                     	;# 
  1076     0004                     	;# 
  1077     0005                     	;# 
  1078     0006                     	;# 
  1079     0007                     	;# 
  1080     0008                     	;# 
  1081     0009                     	;# 
  1082     000A                     	;# 
  1083     000B                     	;# 
  1084     000C                     	;# 
  1085     000D                     	;# 
  1086     000E                     	;# 
  1087     0010                     	;# 
  1088     0011                     	;# 
  1089     0012                     	;# 
  1090     0013                     	;# 
  1091     0014                     	;# 
  1092     0015                     	;# 
  1093     0016                     	;# 
  1094     0016                     	;# 
  1095     0017                     	;# 
  1096     0018                     	;# 
  1097     0019                     	;# 
  1098     001A                     	;# 
  1099     001A                     	;# 
  1100     001B                     	;# 
  1101     001B                     	;# 
  1102     001C                     	;# 
  1103     001D                     	;# 
  1104     001E                     	;# 
  1105     001F                     	;# 
  1106     008C                     	;# 
  1107     008D                     	;# 
  1108     008E                     	;# 
  1109     0090                     	;# 
  1110     0091                     	;# 
  1111     0092                     	;# 
  1112     0093                     	;# 
  1113     0094                     	;# 
  1114     0095                     	;# 
  1115     0096                     	;# 
  1116     0098                     	;# 
  1117     0099                     	;# 
  1118     009A                     	;# 
  1119     009B                     	;# 
  1120     009B                     	;# 
  1121     009C                     	;# 
  1122     009D                     	;# 
  1123     009E                     	;# 
  1124     009F                     	;# 
  1125     010C                     	;# 
  1126     010D                     	;# 
  1127     010E                     	;# 
  1128     0111                     	;# 
  1129     0112                     	;# 
  1130     0113                     	;# 
  1131     0114                     	;# 
  1132     0115                     	;# 
  1133     0116                     	;# 
  1134     0117                     	;# 
  1135     0118                     	;# 
  1136     0119                     	;# 
  1137     011C                     	;# 
  1138     018C                     	;# 
  1139     018D                     	;# 
  1140     018E                     	;# 
  1141     0191                     	;# 
  1142     0191                     	;# 
  1143     0192                     	;# 
  1144     0193                     	;# 
  1145     0193                     	;# 
  1146     0194                     	;# 
  1147     0195                     	;# 
  1148     0196                     	;# 
  1149     0197                     	;# 
  1150     0199                     	;# 
  1151     0199                     	;# 
  1152     0199                     	;# 
  1153     019A                     	;# 
  1154     019A                     	;# 
  1155     019A                     	;# 
  1156     019B                     	;# 
  1157     019B                     	;# 
  1158     019B                     	;# 
  1159     019B                     	;# 
  1160     019B                     	;# 
  1161     019C                     	;# 
  1162     019C                     	;# 
  1163     019C                     	;# 
  1164     019D                     	;# 
  1165     019D                     	;# 
  1166     019D                     	;# 
  1167     019E                     	;# 
  1168     019E                     	;# 
  1169     019E                     	;# 
  1170     019F                     	;# 
  1171     019F                     	;# 
  1172     019F                     	;# 
  1173     019F                     	;# 
  1174     019F                     	;# 
  1175     020C                     	;# 
  1176     020D                     	;# 
  1177     020E                     	;# 
  1178     0211                     	;# 
  1179     0211                     	;# 
  1180     0212                     	;# 
  1181     0212                     	;# 
  1182     0213                     	;# 
  1183     0213                     	;# 
  1184     0214                     	;# 
  1185     0214                     	;# 
  1186     0215                     	;# 
  1187     0215                     	;# 
  1188     0215                     	;# 
  1189     0215                     	;# 
  1190     0216                     	;# 
  1191     0216                     	;# 
  1192     0217                     	;# 
  1193     0217                     	;# 
  1194     028C                     	;# 
  1195     028D                     	;# 
  1196     028E                     	;# 
  1197     0291                     	;# 
  1198     0291                     	;# 
  1199     0292                     	;# 
  1200     0293                     	;# 
  1201     0294                     	;# 
  1202     0298                     	;# 
  1203     0298                     	;# 
  1204     0299                     	;# 
  1205     029A                     	;# 
  1206     029B                     	;# 
  1207     029E                     	;# 
  1208     030C                     	;# 
  1209     030D                     	;# 
  1210     030E                     	;# 
  1211     038C                     	;# 
  1212     038D                     	;# 
  1213     038E                     	;# 
  1214     0391                     	;# 
  1215     0392                     	;# 
  1216     0393                     	;# 
  1217     0394                     	;# 
  1218     0395                     	;# 
  1219     0396                     	;# 
  1220     0397                     	;# 
  1221     0398                     	;# 
  1222     0399                     	;# 
  1223     040E                     	;# 
  1224     0413                     	;# 
  1225     0413                     	;# 
  1226     0414                     	;# 
  1227     0414                     	;# 
  1228     0415                     	;# 
  1229     0416                     	;# 
  1230     0417                     	;# 
  1231     0418                     	;# 
  1232     041A                     	;# 
  1233     041A                     	;# 
  1234     041B                     	;# 
  1235     041B                     	;# 
  1236     041C                     	;# 
  1237     041D                     	;# 
  1238     041E                     	;# 
  1239     041F                     	;# 
  1240     0493                     	;# 
  1241     0494                     	;# 
  1242     0495                     	;# 
  1243     0496                     	;# 
  1244     049A                     	;# 
  1245     049B                     	;# 
  1246     049C                     	;# 
  1247     049D                     	;# 
  1248     058C                     	;# 
  1249     058C                     	;# 
  1250     058D                     	;# 
  1251     058E                     	;# 
  1252     058E                     	;# 
  1253     058F                     	;# 
  1254     0590                     	;# 
  1255     0590                     	;# 
  1256     0591                     	;# 
  1257     0592                     	;# 
  1258     0592                     	;# 
  1259     0593                     	;# 
  1260     0594                     	;# 
  1261     0594                     	;# 
  1262     0595                     	;# 
  1263     0596                     	;# 
  1264     0596                     	;# 
  1265     0597                     	;# 
  1266     0598                     	;# 
  1267     0599                     	;# 
  1268     059A                     	;# 
  1269     059B                     	;# 
  1270     059B                     	;# 
  1271     059C                     	;# 
  1272     059D                     	;# 
  1273     060C                     	;# 
  1274     060C                     	;# 
  1275     060D                     	;# 
  1276     060E                     	;# 
  1277     060F                     	;# 
  1278     060F                     	;# 
  1279     0610                     	;# 
  1280     0611                     	;# 
  1281     0612                     	;# 
  1282     0613                     	;# 
  1283     0614                     	;# 
  1284     0617                     	;# 
  1285     0617                     	;# 
  1286     0618                     	;# 
  1287     0619                     	;# 
  1288     061A                     	;# 
  1289     061A                     	;# 
  1290     061B                     	;# 
  1291     061C                     	;# 
  1292     0691                     	;# 
  1293     0692                     	;# 
  1294     0693                     	;# 
  1295     0694                     	;# 
  1296     0695                     	;# 
  1297     0696                     	;# 
  1298     0697                     	;# 
  1299     0699                     	;# 
  1300     069A                     	;# 
  1301     0711                     	;# 
  1302     0712                     	;# 
  1303     0713                     	;# 
  1304     0714                     	;# 
  1305     0715                     	;# 
  1306     0718                     	;# 
  1307     0718                     	;# 
  1308     0719                     	;# 
  1309     071A                     	;# 
  1310     071A                     	;# 
  1311     071B                     	;# 
  1312     071C                     	;# 
  1313     071D                     	;# 
  1314     0791                     	;# 
  1315     0791                     	;# 
  1316     0792                     	;# 
  1317     0793                     	;# 
  1318     0793                     	;# 
  1319     0794                     	;# 
  1320     0795                     	;# 
  1321     0795                     	;# 
  1322     0796                     	;# 
  1323     0797                     	;# 
  1324     0797                     	;# 
  1325     0798                     	;# 
  1326     0799                     	;# 
  1327     079A                     	;# 
  1328     080C                     	;# 
  1329     080C                     	;# 
  1330     080D                     	;# 
  1331     080E                     	;# 
  1332     080E                     	;# 
  1333     080F                     	;# 
  1334     0810                     	;# 
  1335     0810                     	;# 
  1336     0811                     	;# 
  1337     0812                     	;# 
  1338     0812                     	;# 
  1339     0813                     	;# 
  1340     0814                     	;# 
  1341     0815                     	;# 
  1342     0816                     	;# 
  1343     0817                     	;# 
  1344     0818                     	;# 
  1345     0819                     	;# 
  1346     081A                     	;# 
  1347     081A                     	;# 
  1348     081B                     	;# 
  1349     081C                     	;# 
  1350     081C                     	;# 
  1351     081D                     	;# 
  1352     088C                     	;# 
  1353     088D                     	;# 
  1354     088E                     	;# 
  1355     088F                     	;# 
  1356     088F                     	;# 
  1357     0890                     	;# 
  1358     0891                     	;# 
  1359     0892                     	;# 
  1360     0893                     	;# 
  1361     0893                     	;# 
  1362     0894                     	;# 
  1363     0895                     	;# 
  1364     0896                     	;# 
  1365     0897                     	;# 
  1366     0897                     	;# 
  1367     0898                     	;# 
  1368     0899                     	;# 
  1369     0D8C                     	;# 
  1370     0D8C                     	;# 
  1371     0D8D                     	;# 
  1372     0D8E                     	;# 
  1373     0D8F                     	;# 
  1374     0D8F                     	;# 
  1375     0D90                     	;# 
  1376     0D91                     	;# 
  1377     0D92                     	;# 
  1378     0D92                     	;# 
  1379     0D93                     	;# 
  1380     0D94                     	;# 
  1381     0D95                     	;# 
  1382     0D95                     	;# 
  1383     0D96                     	;# 
  1384     0D97                     	;# 
  1385     0D98                     	;# 
  1386     0D99                     	;# 
  1387     0D9A                     	;# 
  1388     0D9B                     	;# 
  1389     0D9C                     	;# 
  1390     0D9D                     	;# 
  1391     0D9E                     	;# 
  1392     0D9E                     	;# 
  1393     0D9F                     	;# 
  1394     0DA0                     	;# 
  1395     0DA1                     	;# 
  1396     0DA1                     	;# 
  1397     0DA2                     	;# 
  1398     0DA3                     	;# 
  1399     0DA4                     	;# 
  1400     0DA4                     	;# 
  1401     0DA5                     	;# 
  1402     0DA6                     	;# 
  1403     0DA7                     	;# 
  1404     0DA7                     	;# 
  1405     0DA8                     	;# 
  1406     0DA9                     	;# 
  1407     0DAA                     	;# 
  1408     0DAB                     	;# 
  1409     0DAC                     	;# 
  1410     0DAD                     	;# 
  1411     0DAE                     	;# 
  1412     0DAF                     	;# 
  1413     0E0F                     	;# 
  1414     0E10                     	;# 
  1415     0E11                     	;# 
  1416     0E12                     	;# 
  1417     0E13                     	;# 
  1418     0E14                     	;# 
  1419     0E15                     	;# 
  1420     0E16                     	;# 
  1421     0E17                     	;# 
  1422     0E17                     	;# 
  1423     0E18                     	;# 
  1424     0E18                     	;# 
  1425     0E19                     	;# 
  1426     0E1A                     	;# 
  1427     0E1B                     	;# 
  1428     0E1B                     	;# 
  1429     0E1C                     	;# 
  1430     0E1D                     	;# 
  1431     0E1E                     	;# 
  1432     0E1E                     	;# 
  1433     0E1F                     	;# 
  1434     0E20                     	;# 
  1435     0E21                     	;# 
  1436     0E22                     	;# 
  1437     0E23                     	;# 
  1438     0E24                     	;# 
  1439     0E25                     	;# 
  1440     0E26                     	;# 
  1441     0E27                     	;# 
  1442     0E28                     	;# 
  1443     0E29                     	;# 
  1444     0E2A                     	;# 
  1445     0E2B                     	;# 
  1446     0E2C                     	;# 
  1447     0E2D                     	;# 
  1448     0E2E                     	;# 
  1449     0E90                     	;# 
  1450     0E91                     	;# 
  1451     0E92                     	;# 
  1452     0E94                     	;# 
  1453     0E95                     	;# 
  1454     0E9C                     	;# 
  1455     0E9D                     	;# 
  1456     0E9E                     	;# 
  1457     0E9F                     	;# 
  1458     0EA0                     	;# 
  1459     0EA1                     	;# 
  1460     0EA2                     	;# 
  1461     0EA3                     	;# 
  1462     0EA4                     	;# 
  1463     0EA5                     	;# 
  1464     0EA6                     	;# 
  1465     0EA7                     	;# 
  1466     0F0F                     	;# 
  1467     0F10                     	;# 
  1468     0F11                     	;# 
  1469     0F12                     	;# 
  1470     0F13                     	;# 
  1471     0F14                     	;# 
  1472     0F15                     	;# 
  1473     0F16                     	;# 
  1474     0F17                     	;# 
  1475     0F18                     	;# 
  1476     0F19                     	;# 
  1477     0F1A                     	;# 
  1478     0F1B                     	;# 
  1479     0F1C                     	;# 
  1480     0F1D                     	;# 
  1481     0F1E                     	;# 
  1482     0F1F                     	;# 
  1483     0F20                     	;# 
  1484     0F21                     	;# 
  1485     0F22                     	;# 
  1486     0F23                     	;# 
  1487     0F24                     	;# 
  1488     0F25                     	;# 
  1489     0F26                     	;# 
  1490     0F27                     	;# 
  1491     0F28                     	;# 
  1492     0F29                     	;# 
  1493     0F2A                     	;# 
  1494     0F2B                     	;# 
  1495     0F2C                     	;# 
  1496     0F2D                     	;# 
  1497     0F2E                     	;# 
  1498     0F2F                     	;# 
  1499     0F30                     	;# 
  1500     0F31                     	;# 
  1501     0F32                     	;# 
  1502     0F33                     	;# 
  1503     0F34                     	;# 
  1504     0F35                     	;# 
  1505     0F36                     	;# 
  1506     0F37                     	;# 
  1507     0FE4                     	;# 
  1508     0FE5                     	;# 
  1509     0FE6                     	;# 
  1510     0FE7                     	;# 
  1511     0FE8                     	;# 
  1512     0FE9                     	;# 
  1513     0FEA                     	;# 
  1514     0FEB                     	;# 
  1515     0FED                     	;# 
  1516     0FEE                     	;# 
  1517     0FEF                     	;# 
  1518     0000                     	;# 
  1519     0001                     	;# 
  1520     0002                     	;# 
  1521     0003                     	;# 
  1522     0004                     	;# 
  1523     0005                     	;# 
  1524     0006                     	;# 
  1525     0007                     	;# 
  1526     0008                     	;# 
  1527     0009                     	;# 
  1528     000A                     	;# 
  1529     000B                     	;# 
  1530     000C                     	;# 
  1531     000D                     	;# 
  1532     000E                     	;# 
  1533     0010                     	;# 
  1534     0011                     	;# 
  1535     0012                     	;# 
  1536     0013                     	;# 
  1537     0014                     	;# 
  1538     0015                     	;# 
  1539     0016                     	;# 
  1540     0016                     	;# 
  1541     0017                     	;# 
  1542     0018                     	;# 
  1543     0019                     	;# 
  1544     001A                     	;# 
  1545     001A                     	;# 
  1546     001B                     	;# 
  1547     001B                     	;# 
  1548     001C                     	;# 
  1549     001D                     	;# 
  1550     001E                     	;# 
  1551     001F                     	;# 
  1552     008C                     	;# 
  1553     008D                     	;# 
  1554     008E                     	;# 
  1555     0090                     	;# 
  1556     0091                     	;# 
  1557     0092                     	;# 
  1558     0093                     	;# 
  1559     0094                     	;# 
  1560     0095                     	;# 
  1561     0096                     	;# 
  1562     0098                     	;# 
  1563     0099                     	;# 
  1564     009A                     	;# 
  1565     009B                     	;# 
  1566     009B                     	;# 
  1567     009C                     	;# 
  1568     009D                     	;# 
  1569     009E                     	;# 
  1570     009F                     	;# 
  1571     010C                     	;# 
  1572     010D                     	;# 
  1573     010E                     	;# 
  1574     0111                     	;# 
  1575     0112                     	;# 
  1576     0113                     	;# 
  1577     0114                     	;# 
  1578     0115                     	;# 
  1579     0116                     	;# 
  1580     0117                     	;# 
  1581     0118                     	;# 
  1582     0119                     	;# 
  1583     011C                     	;# 
  1584     018C                     	;# 
  1585     018D                     	;# 
  1586     018E                     	;# 
  1587     0191                     	;# 
  1588     0191                     	;# 
  1589     0192                     	;# 
  1590     0193                     	;# 
  1591     0193                     	;# 
  1592     0194                     	;# 
  1593     0195                     	;# 
  1594     0196                     	;# 
  1595     0197                     	;# 
  1596     0199                     	;# 
  1597     0199                     	;# 
  1598     0199                     	;# 
  1599     019A                     	;# 
  1600     019A                     	;# 
  1601     019A                     	;# 
  1602     019B                     	;# 
  1603     019B                     	;# 
  1604     019B                     	;# 
  1605     019B                     	;# 
  1606     019B                     	;# 
  1607     019C                     	;# 
  1608     019C                     	;# 
  1609     019C                     	;# 
  1610     019D                     	;# 
  1611     019D                     	;# 
  1612     019D                     	;# 
  1613     019E                     	;# 
  1614     019E                     	;# 
  1615     019E                     	;# 
  1616     019F                     	;# 
  1617     019F                     	;# 
  1618     019F                     	;# 
  1619     019F                     	;# 
  1620     019F                     	;# 
  1621     020C                     	;# 
  1622     020D                     	;# 
  1623     020E                     	;# 
  1624     0211                     	;# 
  1625     0211                     	;# 
  1626     0212                     	;# 
  1627     0212                     	;# 
  1628     0213                     	;# 
  1629     0213                     	;# 
  1630     0214                     	;# 
  1631     0214                     	;# 
  1632     0215                     	;# 
  1633     0215                     	;# 
  1634     0215                     	;# 
  1635     0215                     	;# 
  1636     0216                     	;# 
  1637     0216                     	;# 
  1638     0217                     	;# 
  1639     0217                     	;# 
  1640     028C                     	;# 
  1641     028D                     	;# 
  1642     028E                     	;# 
  1643     0291                     	;# 
  1644     0291                     	;# 
  1645     0292                     	;# 
  1646     0293                     	;# 
  1647     0294                     	;# 
  1648     0298                     	;# 
  1649     0298                     	;# 
  1650     0299                     	;# 
  1651     029A                     	;# 
  1652     029B                     	;# 
  1653     029E                     	;# 
  1654     030C                     	;# 
  1655     030D                     	;# 
  1656     030E                     	;# 
  1657     038C                     	;# 
  1658     038D                     	;# 
  1659     038E                     	;# 
  1660     0391                     	;# 
  1661     0392                     	;# 
  1662     0393                     	;# 
  1663     0394                     	;# 
  1664     0395                     	;# 
  1665     0396                     	;# 
  1666     0397                     	;# 
  1667     0398                     	;# 
  1668     0399                     	;# 
  1669     040E                     	;# 
  1670     0413                     	;# 
  1671     0413                     	;# 
  1672     0414                     	;# 
  1673     0414                     	;# 
  1674     0415                     	;# 
  1675     0416                     	;# 
  1676     0417                     	;# 
  1677     0418                     	;# 
  1678     041A                     	;# 
  1679     041A                     	;# 
  1680     041B                     	;# 
  1681     041B                     	;# 
  1682     041C                     	;# 
  1683     041D                     	;# 
  1684     041E                     	;# 
  1685     041F                     	;# 
  1686     0493                     	;# 
  1687     0494                     	;# 
  1688     0495                     	;# 
  1689     0496                     	;# 
  1690     049A                     	;# 
  1691     049B                     	;# 
  1692     049C                     	;# 
  1693     049D                     	;# 
  1694     058C                     	;# 
  1695     058C                     	;# 
  1696     058D                     	;# 
  1697     058E                     	;# 
  1698     058E                     	;# 
  1699     058F                     	;# 
  1700     0590                     	;# 
  1701     0590                     	;# 
  1702     0591                     	;# 
  1703     0592                     	;# 
  1704     0592                     	;# 
  1705     0593                     	;# 
  1706     0594                     	;# 
  1707     0594                     	;# 
  1708     0595                     	;# 
  1709     0596                     	;# 
  1710     0596                     	;# 
  1711     0597                     	;# 
  1712     0598                     	;# 
  1713     0599                     	;# 
  1714     059A                     	;# 
  1715     059B                     	;# 
  1716     059B                     	;# 
  1717     059C                     	;# 
  1718     059D                     	;# 
  1719     060C                     	;# 
  1720     060C                     	;# 
  1721     060D                     	;# 
  1722     060E                     	;# 
  1723     060F                     	;# 
  1724     060F                     	;# 
  1725     0610                     	;# 
  1726     0611                     	;# 
  1727     0612                     	;# 
  1728     0613                     	;# 
  1729     0614                     	;# 
  1730     0617                     	;# 
  1731     0617                     	;# 
  1732     0618                     	;# 
  1733     0619                     	;# 
  1734     061A                     	;# 
  1735     061A                     	;# 
  1736     061B                     	;# 
  1737     061C                     	;# 
  1738     0691                     	;# 
  1739     0692                     	;# 
  1740     0693                     	;# 
  1741     0694                     	;# 
  1742     0695                     	;# 
  1743     0696                     	;# 
  1744     0697                     	;# 
  1745     0699                     	;# 
  1746     069A                     	;# 
  1747     0711                     	;# 
  1748     0712                     	;# 
  1749     0713                     	;# 
  1750     0714                     	;# 
  1751     0715                     	;# 
  1752     0718                     	;# 
  1753     0718                     	;# 
  1754     0719                     	;# 
  1755     071A                     	;# 
  1756     071A                     	;# 
  1757     071B                     	;# 
  1758     071C                     	;# 
  1759     071D                     	;# 
  1760     0791                     	;# 
  1761     0791                     	;# 
  1762     0792                     	;# 
  1763     0793                     	;# 
  1764     0793                     	;# 
  1765     0794                     	;# 
  1766     0795                     	;# 
  1767     0795                     	;# 
  1768     0796                     	;# 
  1769     0797                     	;# 
  1770     0797                     	;# 
  1771     0798                     	;# 
  1772     0799                     	;# 
  1773     079A                     	;# 
  1774     080C                     	;# 
  1775     080C                     	;# 
  1776     080D                     	;# 
  1777     080E                     	;# 
  1778     080E                     	;# 
  1779     080F                     	;# 
  1780     0810                     	;# 
  1781     0810                     	;# 
  1782     0811                     	;# 
  1783     0812                     	;# 
  1784     0812                     	;# 
  1785     0813                     	;# 
  1786     0814                     	;# 
  1787     0815                     	;# 
  1788     0816                     	;# 
  1789     0817                     	;# 
  1790     0818                     	;# 
  1791     0819                     	;# 
  1792     081A                     	;# 
  1793     081A                     	;# 
  1794     081B                     	;# 
  1795     081C                     	;# 
  1796     081C                     	;# 
  1797     081D                     	;# 
  1798     088C                     	;# 
  1799     088D                     	;# 
  1800     088E                     	;# 
  1801     088F                     	;# 
  1802     088F                     	;# 
  1803     0890                     	;# 
  1804     0891                     	;# 
  1805     0892                     	;# 
  1806     0893                     	;# 
  1807     0893                     	;# 
  1808     0894                     	;# 
  1809     0895                     	;# 
  1810     0896                     	;# 
  1811     0897                     	;# 
  1812     0897                     	;# 
  1813     0898                     	;# 
  1814     0899                     	;# 
  1815     0D8C                     	;# 
  1816     0D8C                     	;# 
  1817     0D8D                     	;# 
  1818     0D8E                     	;# 
  1819     0D8F                     	;# 
  1820     0D8F                     	;# 
  1821     0D90                     	;# 
  1822     0D91                     	;# 
  1823     0D92                     	;# 
  1824     0D92                     	;# 
  1825     0D93                     	;# 
  1826     0D94                     	;# 
  1827     0D95                     	;# 
  1828     0D95                     	;# 
  1829     0D96                     	;# 
  1830     0D97                     	;# 
  1831     0D98                     	;# 
  1832     0D99                     	;# 
  1833     0D9A                     	;# 
  1834     0D9B                     	;# 
  1835     0D9C                     	;# 
  1836     0D9D                     	;# 
  1837     0D9E                     	;# 
  1838     0D9E                     	;# 
  1839     0D9F                     	;# 
  1840     0DA0                     	;# 
  1841     0DA1                     	;# 
  1842     0DA1                     	;# 
  1843     0DA2                     	;# 
  1844     0DA3                     	;# 
  1845     0DA4                     	;# 
  1846     0DA4                     	;# 
  1847     0DA5                     	;# 
  1848     0DA6                     	;# 
  1849     0DA7                     	;# 
  1850     0DA7                     	;# 
  1851     0DA8                     	;# 
  1852     0DA9                     	;# 
  1853     0DAA                     	;# 
  1854     0DAB                     	;# 
  1855     0DAC                     	;# 
  1856     0DAD                     	;# 
  1857     0DAE                     	;# 
  1858     0DAF                     	;# 
  1859     0E0F                     	;# 
  1860     0E10                     	;# 
  1861     0E11                     	;# 
  1862     0E12                     	;# 
  1863     0E13                     	;# 
  1864     0E14                     	;# 
  1865     0E15                     	;# 
  1866     0E16                     	;# 
  1867     0E17                     	;# 
  1868     0E17                     	;# 
  1869     0E18                     	;# 
  1870     0E18                     	;# 
  1871     0E19                     	;# 
  1872     0E1A                     	;# 
  1873     0E1B                     	;# 
  1874     0E1B                     	;# 
  1875     0E1C                     	;# 
  1876     0E1D                     	;# 
  1877     0E1E                     	;# 
  1878     0E1E                     	;# 
  1879     0E1F                     	;# 
  1880     0E20                     	;# 
  1881     0E21                     	;# 
  1882     0E22                     	;# 
  1883     0E23                     	;# 
  1884     0E24                     	;# 
  1885     0E25                     	;# 
  1886     0E26                     	;# 
  1887     0E27                     	;# 
  1888     0E28                     	;# 
  1889     0E29                     	;# 
  1890     0E2A                     	;# 
  1891     0E2B                     	;# 
  1892     0E2C                     	;# 
  1893     0E2D                     	;# 
  1894     0E2E                     	;# 
  1895     0E90                     	;# 
  1896     0E91                     	;# 
  1897     0E92                     	;# 
  1898     0E94                     	;# 
  1899     0E95                     	;# 
  1900     0E9C                     	;# 
  1901     0E9D                     	;# 
  1902     0E9E                     	;# 
  1903     0E9F                     	;# 
  1904     0EA0                     	;# 
  1905     0EA1                     	;# 
  1906     0EA2                     	;# 
  1907     0EA3                     	;# 
  1908     0EA4                     	;# 
  1909     0EA5                     	;# 
  1910     0EA6                     	;# 
  1911     0EA7                     	;# 
  1912     0F0F                     	;# 
  1913     0F10                     	;# 
  1914     0F11                     	;# 
  1915     0F12                     	;# 
  1916     0F13                     	;# 
  1917     0F14                     	;# 
  1918     0F15                     	;# 
  1919     0F16                     	;# 
  1920     0F17                     	;# 
  1921     0F18                     	;# 
  1922     0F19                     	;# 
  1923     0F1A                     	;# 
  1924     0F1B                     	;# 
  1925     0F1C                     	;# 
  1926     0F1D                     	;# 
  1927     0F1E                     	;# 
  1928     0F1F                     	;# 
  1929     0F20                     	;# 
  1930     0F21                     	;# 
  1931     0F22                     	;# 
  1932     0F23                     	;# 
  1933     0F24                     	;# 
  1934     0F25                     	;# 
  1935     0F26                     	;# 
  1936     0F27                     	;# 
  1937     0F28                     	;# 
  1938     0F29                     	;# 
  1939     0F2A                     	;# 
  1940     0F2B                     	;# 
  1941     0F2C                     	;# 
  1942     0F2D                     	;# 
  1943     0F2E                     	;# 
  1944     0F2F                     	;# 
  1945     0F30                     	;# 
  1946     0F31                     	;# 
  1947     0F32                     	;# 
  1948     0F33                     	;# 
  1949     0F34                     	;# 
  1950     0F35                     	;# 
  1951     0F36                     	;# 
  1952     0F37                     	;# 
  1953     0FE4                     	;# 
  1954     0FE5                     	;# 
  1955     0FE6                     	;# 
  1956     0FE7                     	;# 
  1957     0FE8                     	;# 
  1958     0FE9                     	;# 
  1959     0FEA                     	;# 
  1960     0FEB                     	;# 
  1961     0FED                     	;# 
  1962     0FEE                     	;# 
  1963     0FEF                     	;# 
  1964     0000                     	;# 
  1965     0001                     	;# 
  1966     0002                     	;# 
  1967     0003                     	;# 
  1968     0004                     	;# 
  1969     0005                     	;# 
  1970     0006                     	;# 
  1971     0007                     	;# 
  1972     0008                     	;# 
  1973     0009                     	;# 
  1974     000A                     	;# 
  1975     000B                     	;# 
  1976     000C                     	;# 
  1977     000D                     	;# 
  1978     000E                     	;# 
  1979     0010                     	;# 
  1980     0011                     	;# 
  1981     0012                     	;# 
  1982     0013                     	;# 
  1983     0014                     	;# 
  1984     0015                     	;# 
  1985     0016                     	;# 
  1986     0016                     	;# 
  1987     0017                     	;# 
  1988     0018                     	;# 
  1989     0019                     	;# 
  1990     001A                     	;# 
  1991     001A                     	;# 
  1992     001B                     	;# 
  1993     001B                     	;# 
  1994     001C                     	;# 
  1995     001D                     	;# 
  1996     001E                     	;# 
  1997     001F                     	;# 
  1998     008C                     	;# 
  1999     008D                     	;# 
  2000     008E                     	;# 
  2001     0090                     	;# 
  2002     0091                     	;# 
  2003     0092                     	;# 
  2004     0093                     	;# 
  2005     0094                     	;# 
  2006     0095                     	;# 
  2007     0096                     	;# 
  2008     0098                     	;# 
  2009     0099                     	;# 
  2010     009A                     	;# 
  2011     009B                     	;# 
  2012     009B                     	;# 
  2013     009C                     	;# 
  2014     009D                     	;# 
  2015     009E                     	;# 
  2016     009F                     	;# 
  2017     010C                     	;# 
  2018     010D                     	;# 
  2019     010E                     	;# 
  2020     0111                     	;# 
  2021     0112                     	;# 
  2022     0113                     	;# 
  2023     0114                     	;# 
  2024     0115                     	;# 
  2025     0116                     	;# 
  2026     0117                     	;# 
  2027     0118                     	;# 
  2028     0119                     	;# 
  2029     011C                     	;# 
  2030     018C                     	;# 
  2031     018D                     	;# 
  2032     018E                     	;# 
  2033     0191                     	;# 
  2034     0191                     	;# 
  2035     0192                     	;# 
  2036     0193                     	;# 
  2037     0193                     	;# 
  2038     0194                     	;# 
  2039     0195                     	;# 
  2040     0196                     	;# 
  2041     0197                     	;# 
  2042     0199                     	;# 
  2043     0199                     	;# 
  2044     0199                     	;# 
  2045     019A                     	;# 
  2046     019A                     	;# 
  2047     019A                     	;# 
  2048     019B                     	;# 
  2049     019B                     	;# 
  2050     019B                     	;# 
  2051     019B                     	;# 
  2052     019B                     	;# 
  2053     019C                     	;# 
  2054     019C                     	;# 
  2055     019C                     	;# 
  2056     019D                     	;# 
  2057     019D                     	;# 
  2058     019D                     	;# 
  2059     019E                     	;# 
  2060     019E                     	;# 
  2061     019E                     	;# 
  2062     019F                     	;# 
  2063     019F                     	;# 
  2064     019F                     	;# 
  2065     019F                     	;# 
  2066     019F                     	;# 
  2067     020C                     	;# 
  2068     020D                     	;# 
  2069     020E                     	;# 
  2070     0211                     	;# 
  2071     0211                     	;# 
  2072     0212                     	;# 
  2073     0212                     	;# 
  2074     0213                     	;# 
  2075     0213                     	;# 
  2076     0214                     	;# 
  2077     0214                     	;# 
  2078     0215                     	;# 
  2079     0215                     	;# 
  2080     0215                     	;# 
  2081     0215                     	;# 
  2082     0216                     	;# 
  2083     0216                     	;# 
  2084     0217                     	;# 
  2085     0217                     	;# 
  2086     028C                     	;# 
  2087     028D                     	;# 
  2088     028E                     	;# 
  2089     0291                     	;# 
  2090     0291                     	;# 
  2091     0292                     	;# 
  2092     0293                     	;# 
  2093     0294                     	;# 
  2094     0298                     	;# 
  2095     0298                     	;# 
  2096     0299                     	;# 
  2097     029A                     	;# 
  2098     029B                     	;# 
  2099     029E                     	;# 
  2100     030C                     	;# 
  2101     030D                     	;# 
  2102     030E                     	;# 
  2103     038C                     	;# 
  2104     038D                     	;# 
  2105     038E                     	;# 
  2106     0391                     	;# 
  2107     0392                     	;# 
  2108     0393                     	;# 
  2109     0394                     	;# 
  2110     0395                     	;# 
  2111     0396                     	;# 
  2112     0397                     	;# 
  2113     0398                     	;# 
  2114     0399                     	;# 
  2115     040E                     	;# 
  2116     0413                     	;# 
  2117     0413                     	;# 
  2118     0414                     	;# 
  2119     0414                     	;# 
  2120     0415                     	;# 
  2121     0416                     	;# 
  2122     0417                     	;# 
  2123     0418                     	;# 
  2124     041A                     	;# 
  2125     041A                     	;# 
  2126     041B                     	;# 
  2127     041B                     	;# 
  2128     041C                     	;# 
  2129     041D                     	;# 
  2130     041E                     	;# 
  2131     041F                     	;# 
  2132     0493                     	;# 
  2133     0494                     	;# 
  2134     0495                     	;# 
  2135     0496                     	;# 
  2136     049A                     	;# 
  2137     049B                     	;# 
  2138     049C                     	;# 
  2139     049D                     	;# 
  2140     058C                     	;# 
  2141     058C                     	;# 
  2142     058D                     	;# 
  2143     058E                     	;# 
  2144     058E                     	;# 
  2145     058F                     	;# 
  2146     0590                     	;# 
  2147     0590                     	;# 
  2148     0591                     	;# 
  2149     0592                     	;# 
  2150     0592                     	;# 
  2151     0593                     	;# 
  2152     0594                     	;# 
  2153     0594                     	;# 
  2154     0595                     	;# 
  2155     0596                     	;# 
  2156     0596                     	;# 
  2157     0597                     	;# 
  2158     0598                     	;# 
  2159     0599                     	;# 
  2160     059A                     	;# 
  2161     059B                     	;# 
  2162     059B                     	;# 
  2163     059C                     	;# 
  2164     059D                     	;# 
  2165     060C                     	;# 
  2166     060C                     	;# 
  2167     060D                     	;# 
  2168     060E                     	;# 
  2169     060F                     	;# 
  2170     060F                     	;# 
  2171     0610                     	;# 
  2172     0611                     	;# 
  2173     0612                     	;# 
  2174     0613                     	;# 
  2175     0614                     	;# 
  2176     0617                     	;# 
  2177     0617                     	;# 
  2178     0618                     	;# 
  2179     0619                     	;# 
  2180     061A                     	;# 
  2181     061A                     	;# 
  2182     061B                     	;# 
  2183     061C                     	;# 
  2184     0691                     	;# 
  2185     0692                     	;# 
  2186     0693                     	;# 
  2187     0694                     	;# 
  2188     0695                     	;# 
  2189     0696                     	;# 
  2190     0697                     	;# 
  2191     0699                     	;# 
  2192     069A                     	;# 
  2193     0711                     	;# 
  2194     0712                     	;# 
  2195     0713                     	;# 
  2196     0714                     	;# 
  2197     0715                     	;# 
  2198     0718                     	;# 
  2199     0718                     	;# 
  2200     0719                     	;# 
  2201     071A                     	;# 
  2202     071A                     	;# 
  2203     071B                     	;# 
  2204     071C                     	;# 
  2205     071D                     	;# 
  2206     0791                     	;# 
  2207     0791                     	;# 
  2208     0792                     	;# 
  2209     0793                     	;# 
  2210     0793                     	;# 
  2211     0794                     	;# 
  2212     0795                     	;# 
  2213     0795                     	;# 
  2214     0796                     	;# 
  2215     0797                     	;# 
  2216     0797                     	;# 
  2217     0798                     	;# 
  2218     0799                     	;# 
  2219     079A                     	;# 
  2220     080C                     	;# 
  2221     080C                     	;# 
  2222     080D                     	;# 
  2223     080E                     	;# 
  2224     080E                     	;# 
  2225     080F                     	;# 
  2226     0810                     	;# 
  2227     0810                     	;# 
  2228     0811                     	;# 
  2229     0812                     	;# 
  2230     0812                     	;# 
  2231     0813                     	;# 
  2232     0814                     	;# 
  2233     0815                     	;# 
  2234     0816                     	;# 
  2235     0817                     	;# 
  2236     0818                     	;# 
  2237     0819                     	;# 
  2238     081A                     	;# 
  2239     081A                     	;# 
  2240     081B                     	;# 
  2241     081C                     	;# 
  2242     081C                     	;# 
  2243     081D                     	;# 
  2244     088C                     	;# 
  2245     088D                     	;# 
  2246     088E                     	;# 
  2247     088F                     	;# 
  2248     088F                     	;# 
  2249     0890                     	;# 
  2250     0891                     	;# 
  2251     0892                     	;# 
  2252     0893                     	;# 
  2253     0893                     	;# 
  2254     0894                     	;# 
  2255     0895                     	;# 
  2256     0896                     	;# 
  2257     0897                     	;# 
  2258     0897                     	;# 
  2259     0898                     	;# 
  2260     0899                     	;# 
  2261     0D8C                     	;# 
  2262     0D8C                     	;# 
  2263     0D8D                     	;# 
  2264     0D8E                     	;# 
  2265     0D8F                     	;# 
  2266     0D8F                     	;# 
  2267     0D90                     	;# 
  2268     0D91                     	;# 
  2269     0D92                     	;# 
  2270     0D92                     	;# 
  2271     0D93                     	;# 
  2272     0D94                     	;# 
  2273     0D95                     	;# 
  2274     0D95                     	;# 
  2275     0D96                     	;# 
  2276     0D97                     	;# 
  2277     0D98                     	;# 
  2278     0D99                     	;# 
  2279     0D9A                     	;# 
  2280     0D9B                     	;# 
  2281     0D9C                     	;# 
  2282     0D9D                     	;# 
  2283     0D9E                     	;# 
  2284     0D9E                     	;# 
  2285     0D9F                     	;# 
  2286     0DA0                     	;# 
  2287     0DA1                     	;# 
  2288     0DA1                     	;# 
  2289     0DA2                     	;# 
  2290     0DA3                     	;# 
  2291     0DA4                     	;# 
  2292     0DA4                     	;# 
  2293     0DA5                     	;# 
  2294     0DA6                     	;# 
  2295     0DA7                     	;# 
  2296     0DA7                     	;# 
  2297     0DA8                     	;# 
  2298     0DA9                     	;# 
  2299     0DAA                     	;# 
  2300     0DAB                     	;# 
  2301     0DAC                     	;# 
  2302     0DAD                     	;# 
  2303     0DAE                     	;# 
  2304     0DAF                     	;# 
  2305     0E0F                     	;# 
  2306     0E10                     	;# 
  2307     0E11                     	;# 
  2308     0E12                     	;# 
  2309     0E13                     	;# 
  2310     0E14                     	;# 
  2311     0E15                     	;# 
  2312     0E16                     	;# 
  2313     0E17                     	;# 
  2314     0E17                     	;# 
  2315     0E18                     	;# 
  2316     0E18                     	;# 
  2317     0E19                     	;# 
  2318     0E1A                     	;# 
  2319     0E1B                     	;# 
  2320     0E1B                     	;# 
  2321     0E1C                     	;# 
  2322     0E1D                     	;# 
  2323     0E1E                     	;# 
  2324     0E1E                     	;# 
  2325     0E1F                     	;# 
  2326     0E20                     	;# 
  2327     0E21                     	;# 
  2328     0E22                     	;# 
  2329     0E23                     	;# 
  2330     0E24                     	;# 
  2331     0E25                     	;# 
  2332     0E26                     	;# 
  2333     0E27                     	;# 
  2334     0E28                     	;# 
  2335     0E29                     	;# 
  2336     0E2A                     	;# 
  2337     0E2B                     	;# 
  2338     0E2C                     	;# 
  2339     0E2D                     	;# 
  2340     0E2E                     	;# 
  2341     0E90                     	;# 
  2342     0E91                     	;# 
  2343     0E92                     	;# 
  2344     0E94                     	;# 
  2345     0E95                     	;# 
  2346     0E9C                     	;# 
  2347     0E9D                     	;# 
  2348     0E9E                     	;# 
  2349     0E9F                     	;# 
  2350     0EA0                     	;# 
  2351     0EA1                     	;# 
  2352     0EA2                     	;# 
  2353     0EA3                     	;# 
  2354     0EA4                     	;# 
  2355     0EA5                     	;# 
  2356     0EA6                     	;# 
  2357     0EA7                     	;# 
  2358     0F0F                     	;# 
  2359     0F10                     	;# 
  2360     0F11                     	;# 
  2361     0F12                     	;# 
  2362     0F13                     	;# 
  2363     0F14                     	;# 
  2364     0F15                     	;# 
  2365     0F16                     	;# 
  2366     0F17                     	;# 
  2367     0F18                     	;# 
  2368     0F19                     	;# 
  2369     0F1A                     	;# 
  2370     0F1B                     	;# 
  2371     0F1C                     	;# 
  2372     0F1D                     	;# 
  2373     0F1E                     	;# 
  2374     0F1F                     	;# 
  2375     0F20                     	;# 
  2376     0F21                     	;# 
  2377     0F22                     	;# 
  2378     0F23                     	;# 
  2379     0F24                     	;# 
  2380     0F25                     	;# 
  2381     0F26                     	;# 
  2382     0F27                     	;# 
  2383     0F28                     	;# 
  2384     0F29                     	;# 
  2385     0F2A                     	;# 
  2386     0F2B                     	;# 
  2387     0F2C                     	;# 
  2388     0F2D                     	;# 
  2389     0F2E                     	;# 
  2390     0F2F                     	;# 
  2391     0F30                     	;# 
  2392     0F31                     	;# 
  2393     0F32                     	;# 
  2394     0F33                     	;# 
  2395     0F34                     	;# 
  2396     0F35                     	;# 
  2397     0F36                     	;# 
  2398     0F37                     	;# 
  2399     0FE4                     	;# 
  2400     0FE5                     	;# 
  2401     0FE6                     	;# 
  2402     0FE7                     	;# 
  2403     0FE8                     	;# 
  2404     0FE9                     	;# 
  2405     0FEA                     	;# 
  2406     0FEB                     	;# 
  2407     0FED                     	;# 
  2408     0FEE                     	;# 
  2409     0FEF                     	;# 
  2410     0000                     	;# 
  2411     0001                     	;# 
  2412     0002                     	;# 
  2413     0003                     	;# 
  2414     0004                     	;# 
  2415     0005                     	;# 
  2416     0006                     	;# 
  2417     0007                     	;# 
  2418     0008                     	;# 
  2419     0009                     	;# 
  2420     000A                     	;# 
  2421     000B                     	;# 
  2422     000C                     	;# 
  2423     000D                     	;# 
  2424     000E                     	;# 
  2425     0010                     	;# 
  2426     0011                     	;# 
  2427     0012                     	;# 
  2428     0013                     	;# 
  2429     0014                     	;# 
  2430     0015                     	;# 
  2431     0016                     	;# 
  2432     0016                     	;# 
  2433     0017                     	;# 
  2434     0018                     	;# 
  2435     0019                     	;# 
  2436     001A                     	;# 
  2437     001A                     	;# 
  2438     001B                     	;# 
  2439     001B                     	;# 
  2440     001C                     	;# 
  2441     001D                     	;# 
  2442     001E                     	;# 
  2443     001F                     	;# 
  2444     008C                     	;# 
  2445     008D                     	;# 
  2446     008E                     	;# 
  2447     0090                     	;# 
  2448     0091                     	;# 
  2449     0092                     	;# 
  2450     0093                     	;# 
  2451     0094                     	;# 
  2452     0095                     	;# 
  2453     0096                     	;# 
  2454     0098                     	;# 
  2455     0099                     	;# 
  2456     009A                     	;# 
  2457     009B                     	;# 
  2458     009B                     	;# 
  2459     009C                     	;# 
  2460     009D                     	;# 
  2461     009E                     	;# 
  2462     009F                     	;# 
  2463     010C                     	;# 
  2464     010D                     	;# 
  2465     010E                     	;# 
  2466     0111                     	;# 
  2467     0112                     	;# 
  2468     0113                     	;# 
  2469     0114                     	;# 
  2470     0115                     	;# 
  2471     0116                     	;# 
  2472     0117                     	;# 
  2473     0118                     	;# 
  2474     0119                     	;# 
  2475     011C                     	;# 
  2476     018C                     	;# 
  2477     018D                     	;# 
  2478     018E                     	;# 
  2479     0191                     	;# 
  2480     0191                     	;# 
  2481     0192                     	;# 
  2482     0193                     	;# 
  2483     0193                     	;# 
  2484     0194                     	;# 
  2485     0195                     	;# 
  2486     0196                     	;# 
  2487     0197                     	;# 
  2488     0199                     	;# 
  2489     0199                     	;# 
  2490     0199                     	;# 
  2491     019A                     	;# 
  2492     019A                     	;# 
  2493     019A                     	;# 
  2494     019B                     	;# 
  2495     019B                     	;# 
  2496     019B                     	;# 
  2497     019B                     	;# 
  2498     019B                     	;# 
  2499     019C                     	;# 
  2500     019C                     	;# 
  2501     019C                     	;# 
  2502     019D                     	;# 
  2503     019D                     	;# 
  2504     019D                     	;# 
  2505     019E                     	;# 
  2506     019E                     	;# 
  2507     019E                     	;# 
  2508     019F                     	;# 
  2509     019F                     	;# 
  2510     019F                     	;# 
  2511     019F                     	;# 
  2512     019F                     	;# 
  2513     020C                     	;# 
  2514     020D                     	;# 
  2515     020E                     	;# 
  2516     0211                     	;# 
  2517     0211                     	;# 
  2518     0212                     	;# 
  2519     0212                     	;# 
  2520     0213                     	;# 
  2521     0213                     	;# 
  2522     0214                     	;# 
  2523     0214                     	;# 
  2524     0215                     	;# 
  2525     0215                     	;# 
  2526     0215                     	;# 
  2527     0215                     	;# 
  2528     0216                     	;# 
  2529     0216                     	;# 
  2530     0217                     	;# 
  2531     0217                     	;# 
  2532     028C                     	;# 
  2533     028D                     	;# 
  2534     028E                     	;# 
  2535     0291                     	;# 
  2536     0291                     	;# 
  2537     0292                     	;# 
  2538     0293                     	;# 
  2539     0294                     	;# 
  2540     0298                     	;# 
  2541     0298                     	;# 
  2542     0299                     	;# 
  2543     029A                     	;# 
  2544     029B                     	;# 
  2545     029E                     	;# 
  2546     030C                     	;# 
  2547     030D                     	;# 
  2548     030E                     	;# 
  2549     038C                     	;# 
  2550     038D                     	;# 
  2551     038E                     	;# 
  2552     0391                     	;# 
  2553     0392                     	;# 
  2554     0393                     	;# 
  2555     0394                     	;# 
  2556     0395                     	;# 
  2557     0396                     	;# 
  2558     0397                     	;# 
  2559     0398                     	;# 
  2560     0399                     	;# 
  2561     040E                     	;# 
  2562     0413                     	;# 
  2563     0413                     	;# 
  2564     0414                     	;# 
  2565     0414                     	;# 
  2566     0415                     	;# 
  2567     0416                     	;# 
  2568     0417                     	;# 
  2569     0418                     	;# 
  2570     041A                     	;# 
  2571     041A                     	;# 
  2572     041B                     	;# 
  2573     041B                     	;# 
  2574     041C                     	;# 
  2575     041D                     	;# 
  2576     041E                     	;# 
  2577     041F                     	;# 
  2578     0493                     	;# 
  2579     0494                     	;# 
  2580     0495                     	;# 
  2581     0496                     	;# 
  2582     049A                     	;# 
  2583     049B                     	;# 
  2584     049C                     	;# 
  2585     049D                     	;# 
  2586     058C                     	;# 
  2587     058C                     	;# 
  2588     058D                     	;# 
  2589     058E                     	;# 
  2590     058E                     	;# 
  2591     058F                     	;# 
  2592     0590                     	;# 
  2593     0590                     	;# 
  2594     0591                     	;# 
  2595     0592                     	;# 
  2596     0592                     	;# 
  2597     0593                     	;# 
  2598     0594                     	;# 
  2599     0594                     	;# 
  2600     0595                     	;# 
  2601     0596                     	;# 
  2602     0596                     	;# 
  2603     0597                     	;# 
  2604     0598                     	;# 
  2605     0599                     	;# 
  2606     059A                     	;# 
  2607     059B                     	;# 
  2608     059B                     	;# 
  2609     059C                     	;# 
  2610     059D                     	;# 
  2611     060C                     	;# 
  2612     060C                     	;# 
  2613     060D                     	;# 
  2614     060E                     	;# 
  2615     060F                     	;# 
  2616     060F                     	;# 
  2617     0610                     	;# 
  2618     0611                     	;# 
  2619     0612                     	;# 
  2620     0613                     	;# 
  2621     0614                     	;# 
  2622     0617                     	;# 
  2623     0617                     	;# 
  2624     0618                     	;# 
  2625     0619                     	;# 
  2626     061A                     	;# 
  2627     061A                     	;# 
  2628     061B                     	;# 
  2629     061C                     	;# 
  2630     0691                     	;# 
  2631     0692                     	;# 
  2632     0693                     	;# 
  2633     0694                     	;# 
  2634     0695                     	;# 
  2635     0696                     	;# 
  2636     0697                     	;# 
  2637     0699                     	;# 
  2638     069A                     	;# 
  2639     0711                     	;# 
  2640     0712                     	;# 
  2641     0713                     	;# 
  2642     0714                     	;# 
  2643     0715                     	;# 
  2644     0718                     	;# 
  2645     0718                     	;# 
  2646     0719                     	;# 
  2647     071A                     	;# 
  2648     071A                     	;# 
  2649     071B                     	;# 
  2650     071C                     	;# 
  2651     071D                     	;# 
  2652     0791                     	;# 
  2653     0791                     	;# 
  2654     0792                     	;# 
  2655     0793                     	;# 
  2656     0793                     	;# 
  2657     0794                     	;# 
  2658     0795                     	;# 
  2659     0795                     	;# 
  2660     0796                     	;# 
  2661     0797                     	;# 
  2662     0797                     	;# 
  2663     0798                     	;# 
  2664     0799                     	;# 
  2665     079A                     	;# 
  2666     080C                     	;# 
  2667     080C                     	;# 
  2668     080D                     	;# 
  2669     080E                     	;# 
  2670     080E                     	;# 
  2671     080F                     	;# 
  2672     0810                     	;# 
  2673     0810                     	;# 
  2674     0811                     	;# 
  2675     0812                     	;# 
  2676     0812                     	;# 
  2677     0813                     	;# 
  2678     0814                     	;# 
  2679     0815                     	;# 
  2680     0816                     	;# 
  2681     0817                     	;# 
  2682     0818                     	;# 
  2683     0819                     	;# 
  2684     081A                     	;# 
  2685     081A                     	;# 
  2686     081B                     	;# 
  2687     081C                     	;# 
  2688     081C                     	;# 
  2689     081D                     	;# 
  2690     088C                     	;# 
  2691     088D                     	;# 
  2692     088E                     	;# 
  2693     088F                     	;# 
  2694     088F                     	;# 
  2695     0890                     	;# 
  2696     0891                     	;# 
  2697     0892                     	;# 
  2698     0893                     	;# 
  2699     0893                     	;# 
  2700     0894                     	;# 
  2701     0895                     	;# 
  2702     0896                     	;# 
  2703     0897                     	;# 
  2704     0897                     	;# 
  2705     0898                     	;# 
  2706     0899                     	;# 
  2707     0D8C                     	;# 
  2708     0D8C                     	;# 
  2709     0D8D                     	;# 
  2710     0D8E                     	;# 
  2711     0D8F                     	;# 
  2712     0D8F                     	;# 
  2713     0D90                     	;# 
  2714     0D91                     	;# 
  2715     0D92                     	;# 
  2716     0D92                     	;# 
  2717     0D93                     	;# 
  2718     0D94                     	;# 
  2719     0D95                     	;# 
  2720     0D95                     	;# 
  2721     0D96                     	;# 
  2722     0D97                     	;# 
  2723     0D98                     	;# 
  2724     0D99                     	;# 
  2725     0D9A                     	;# 
  2726     0D9B                     	;# 
  2727     0D9C                     	;# 
  2728     0D9D                     	;# 
  2729     0D9E                     	;# 
  2730     0D9E                     	;# 
  2731     0D9F                     	;# 
  2732     0DA0                     	;# 
  2733     0DA1                     	;# 
  2734     0DA1                     	;# 
  2735     0DA2                     	;# 
  2736     0DA3                     	;# 
  2737     0DA4                     	;# 
  2738     0DA4                     	;# 
  2739     0DA5                     	;# 
  2740     0DA6                     	;# 
  2741     0DA7                     	;# 
  2742     0DA7                     	;# 
  2743     0DA8                     	;# 
  2744     0DA9                     	;# 
  2745     0DAA                     	;# 
  2746     0DAB                     	;# 
  2747     0DAC                     	;# 
  2748     0DAD                     	;# 
  2749     0DAE                     	;# 
  2750     0DAF                     	;# 
  2751     0E0F                     	;# 
  2752     0E10                     	;# 
  2753     0E11                     	;# 
  2754     0E12                     	;# 
  2755     0E13                     	;# 
  2756     0E14                     	;# 
  2757     0E15                     	;# 
  2758     0E16                     	;# 
  2759     0E17                     	;# 
  2760     0E17                     	;# 
  2761     0E18                     	;# 
  2762     0E18                     	;# 
  2763     0E19                     	;# 
  2764     0E1A                     	;# 
  2765     0E1B                     	;# 
  2766     0E1B                     	;# 
  2767     0E1C                     	;# 
  2768     0E1D                     	;# 
  2769     0E1E                     	;# 
  2770     0E1E                     	;# 
  2771     0E1F                     	;# 
  2772     0E20                     	;# 
  2773     0E21                     	;# 
  2774     0E22                     	;# 
  2775     0E23                     	;# 
  2776     0E24                     	;# 
  2777     0E25                     	;# 
  2778     0E26                     	;# 
  2779     0E27                     	;# 
  2780     0E28                     	;# 
  2781     0E29                     	;# 
  2782     0E2A                     	;# 
  2783     0E2B                     	;# 
  2784     0E2C                     	;# 
  2785     0E2D                     	;# 
  2786     0E2E                     	;# 
  2787     0E90                     	;# 
  2788     0E91                     	;# 
  2789     0E92                     	;# 
  2790     0E94                     	;# 
  2791     0E95                     	;# 
  2792     0E9C                     	;# 
  2793     0E9D                     	;# 
  2794     0E9E                     	;# 
  2795     0E9F                     	;# 
  2796     0EA0                     	;# 
  2797     0EA1                     	;# 
  2798     0EA2                     	;# 
  2799     0EA3                     	;# 
  2800     0EA4                     	;# 
  2801     0EA5                     	;# 
  2802     0EA6                     	;# 
  2803     0EA7                     	;# 
  2804     0F0F                     	;# 
  2805     0F10                     	;# 
  2806     0F11                     	;# 
  2807     0F12                     	;# 
  2808     0F13                     	;# 
  2809     0F14                     	;# 
  2810     0F15                     	;# 
  2811     0F16                     	;# 
  2812     0F17                     	;# 
  2813     0F18                     	;# 
  2814     0F19                     	;# 
  2815     0F1A                     	;# 
  2816     0F1B                     	;# 
  2817     0F1C                     	;# 
  2818     0F1D                     	;# 
  2819     0F1E                     	;# 
  2820     0F1F                     	;# 
  2821     0F20                     	;# 
  2822     0F21                     	;# 
  2823     0F22                     	;# 
  2824     0F23                     	;# 
  2825     0F24                     	;# 
  2826     0F25                     	;# 
  2827     0F26                     	;# 
  2828     0F27                     	;# 
  2829     0F28                     	;# 
  2830     0F29                     	;# 
  2831     0F2A                     	;# 
  2832     0F2B                     	;# 
  2833     0F2C                     	;# 
  2834     0F2D                     	;# 
  2835     0F2E                     	;# 
  2836     0F2F                     	;# 
  2837     0F30                     	;# 
  2838     0F31                     	;# 
  2839     0F32                     	;# 
  2840     0F33                     	;# 
  2841     0F34                     	;# 
  2842     0F35                     	;# 
  2843     0F36                     	;# 
  2844     0F37                     	;# 
  2845     0FE4                     	;# 
  2846     0FE5                     	;# 
  2847     0FE6                     	;# 
  2848     0FE7                     	;# 
  2849     0FE8                     	;# 
  2850     0FE9                     	;# 
  2851     0FEA                     	;# 
  2852     0FEB                     	;# 
  2853     0FED                     	;# 
  2854     0FEE                     	;# 
  2855     0FEF                     	;# 
  2856     0000                     	;# 
  2857     0001                     	;# 
  2858     0002                     	;# 
  2859     0003                     	;# 
  2860     0004                     	;# 
  2861     0005                     	;# 
  2862     0006                     	;# 
  2863     0007                     	;# 
  2864     0008                     	;# 
  2865     0009                     	;# 
  2866     000A                     	;# 
  2867     000B                     	;# 
  2868     000C                     	;# 
  2869     000D                     	;# 
  2870     000E                     	;# 
  2871     0010                     	;# 
  2872     0011                     	;# 
  2873     0012                     	;# 
  2874     0013                     	;# 
  2875     0014                     	;# 
  2876     0015                     	;# 
  2877     0016                     	;# 
  2878     0016                     	;# 
  2879     0017                     	;# 
  2880     0018                     	;# 
  2881     0019                     	;# 
  2882     001A                     	;# 
  2883     001A                     	;# 
  2884     001B                     	;# 
  2885     001B                     	;# 
  2886     001C                     	;# 
  2887     001D                     	;# 
  2888     001E                     	;# 
  2889     001F                     	;# 
  2890     008C                     	;# 
  2891     008D                     	;# 
  2892     008E                     	;# 
  2893     0090                     	;# 
  2894     0091                     	;# 
  2895     0092                     	;# 
  2896     0093                     	;# 
  2897     0094                     	;# 
  2898     0095                     	;# 
  2899     0096                     	;# 
  2900     0098                     	;# 
  2901     0099                     	;# 
  2902     009A                     	;# 
  2903     009B                     	;# 
  2904     009B                     	;# 
  2905     009C                     	;# 
  2906     009D                     	;# 
  2907     009E                     	;# 
  2908     009F                     	;# 
  2909     010C                     	;# 
  2910     010D                     	;# 
  2911     010E                     	;# 
  2912     0111                     	;# 
  2913     0112                     	;# 
  2914     0113                     	;# 
  2915     0114                     	;# 
  2916     0115                     	;# 
  2917     0116                     	;# 
  2918     0117                     	;# 
  2919     0118                     	;# 
  2920     0119                     	;# 
  2921     011C                     	;# 
  2922     018C                     	;# 
  2923     018D                     	;# 
  2924     018E                     	;# 
  2925     0191                     	;# 
  2926     0191                     	;# 
  2927     0192                     	;# 
  2928     0193                     	;# 
  2929     0193                     	;# 
  2930     0194                     	;# 
  2931     0195                     	;# 
  2932     0196                     	;# 
  2933     0197                     	;# 
  2934     0199                     	;# 
  2935     0199                     	;# 
  2936     0199                     	;# 
  2937     019A                     	;# 
  2938     019A                     	;# 
  2939     019A                     	;# 
  2940     019B                     	;# 
  2941     019B                     	;# 
  2942     019B                     	;# 
  2943     019B                     	;# 
  2944     019B                     	;# 
  2945     019C                     	;# 
  2946     019C                     	;# 
  2947     019C                     	;# 
  2948     019D                     	;# 
  2949     019D                     	;# 
  2950     019D                     	;# 
  2951     019E                     	;# 
  2952     019E                     	;# 
  2953     019E                     	;# 
  2954     019F                     	;# 
  2955     019F                     	;# 
  2956     019F                     	;# 
  2957     019F                     	;# 
  2958     019F                     	;# 
  2959     020C                     	;# 
  2960     020D                     	;# 
  2961     020E                     	;# 
  2962     0211                     	;# 
  2963     0211                     	;# 
  2964     0212                     	;# 
  2965     0212                     	;# 
  2966     0213                     	;# 
  2967     0213                     	;# 
  2968     0214                     	;# 
  2969     0214                     	;# 
  2970     0215                     	;# 
  2971     0215                     	;# 
  2972     0215                     	;# 
  2973     0215                     	;# 
  2974     0216                     	;# 
  2975     0216                     	;# 
  2976     0217                     	;# 
  2977     0217                     	;# 
  2978     028C                     	;# 
  2979     028D                     	;# 
  2980     028E                     	;# 
  2981     0291                     	;# 
  2982     0291                     	;# 
  2983     0292                     	;# 
  2984     0293                     	;# 
  2985     0294                     	;# 
  2986     0298                     	;# 
  2987     0298                     	;# 
  2988     0299                     	;# 
  2989     029A                     	;# 
  2990     029B                     	;# 
  2991     029E                     	;# 
  2992     030C                     	;# 
  2993     030D                     	;# 
  2994     030E                     	;# 
  2995     038C                     	;# 
  2996     038D                     	;# 
  2997     038E                     	;# 
  2998     0391                     	;# 
  2999     0392                     	;# 
  3000     0393                     	;# 
  3001     0394                     	;# 
  3002     0395                     	;# 
  3003     0396                     	;# 
  3004     0397                     	;# 
  3005     0398                     	;# 
  3006     0399                     	;# 
  3007     040E                     	;# 
  3008     0413                     	;# 
  3009     0413                     	;# 
  3010     0414                     	;# 
  3011     0414                     	;# 
  3012     0415                     	;# 
  3013     0416                     	;# 
  3014     0417                     	;# 
  3015     0418                     	;# 
  3016     041A                     	;# 
  3017     041A                     	;# 
  3018     041B                     	;# 
  3019     041B                     	;# 
  3020     041C                     	;# 
  3021     041D                     	;# 
  3022     041E                     	;# 
  3023     041F                     	;# 
  3024     0493                     	;# 
  3025     0494                     	;# 
  3026     0495                     	;# 
  3027     0496                     	;# 
  3028     049A                     	;# 
  3029     049B                     	;# 
  3030     049C                     	;# 
  3031     049D                     	;# 
  3032     058C                     	;# 
  3033     058C                     	;# 
  3034     058D                     	;# 
  3035     058E                     	;# 
  3036     058E                     	;# 
  3037     058F                     	;# 
  3038     0590                     	;# 
  3039     0590                     	;# 
  3040     0591                     	;# 
  3041     0592                     	;# 
  3042     0592                     	;# 
  3043     0593                     	;# 
  3044     0594                     	;# 
  3045     0594                     	;# 
  3046     0595                     	;# 
  3047     0596                     	;# 
  3048     0596                     	;# 
  3049     0597                     	;# 
  3050     0598                     	;# 
  3051     0599                     	;# 
  3052     059A                     	;# 
  3053     059B                     	;# 
  3054     059B                     	;# 
  3055     059C                     	;# 
  3056     059D                     	;# 
  3057     060C                     	;# 
  3058     060C                     	;# 
  3059     060D                     	;# 
  3060     060E                     	;# 
  3061     060F                     	;# 
  3062     060F                     	;# 
  3063     0610                     	;# 
  3064     0611                     	;# 
  3065     0612                     	;# 
  3066     0613                     	;# 
  3067     0614                     	;# 
  3068     0617                     	;# 
  3069     0617                     	;# 
  3070     0618                     	;# 
  3071     0619                     	;# 
  3072     061A                     	;# 
  3073     061A                     	;# 
  3074     061B                     	;# 
  3075     061C                     	;# 
  3076     0691                     	;# 
  3077     0692                     	;# 
  3078     0693                     	;# 
  3079     0694                     	;# 
  3080     0695                     	;# 
  3081     0696                     	;# 
  3082     0697                     	;# 
  3083     0699                     	;# 
  3084     069A                     	;# 
  3085     0711                     	;# 
  3086     0712                     	;# 
  3087     0713                     	;# 
  3088     0714                     	;# 
  3089     0715                     	;# 
  3090     0718                     	;# 
  3091     0718                     	;# 
  3092     0719                     	;# 
  3093     071A                     	;# 
  3094     071A                     	;# 
  3095     071B                     	;# 
  3096     071C                     	;# 
  3097     071D                     	;# 
  3098     0791                     	;# 
  3099     0791                     	;# 
  3100     0792                     	;# 
  3101     0793                     	;# 
  3102     0793                     	;# 
  3103     0794                     	;# 
  3104     0795                     	;# 
  3105     0795                     	;# 
  3106     0796                     	;# 
  3107     0797                     	;# 
  3108     0797                     	;# 
  3109     0798                     	;# 
  3110     0799                     	;# 
  3111     079A                     	;# 
  3112     080C                     	;# 
  3113     080C                     	;# 
  3114     080D                     	;# 
  3115     080E                     	;# 
  3116     080E                     	;# 
  3117     080F                     	;# 
  3118     0810                     	;# 
  3119     0810                     	;# 
  3120     0811                     	;# 
  3121     0812                     	;# 
  3122     0812                     	;# 
  3123     0813                     	;# 
  3124     0814                     	;# 
  3125     0815                     	;# 
  3126     0816                     	;# 
  3127     0817                     	;# 
  3128     0818                     	;# 
  3129     0819                     	;# 
  3130     081A                     	;# 
  3131     081A                     	;# 
  3132     081B                     	;# 
  3133     081C                     	;# 
  3134     081C                     	;# 
  3135     081D                     	;# 
  3136     088C                     	;# 
  3137     088D                     	;# 
  3138     088E                     	;# 
  3139     088F                     	;# 
  3140     088F                     	;# 
  3141     0890                     	;# 
  3142     0891                     	;# 
  3143     0892                     	;# 
  3144     0893                     	;# 
  3145     0893                     	;# 
  3146     0894                     	;# 
  3147     0895                     	;# 
  3148     0896                     	;# 
  3149     0897                     	;# 
  3150     0897                     	;# 
  3151     0898                     	;# 
  3152     0899                     	;# 
  3153     0D8C                     	;# 
  3154     0D8C                     	;# 
  3155     0D8D                     	;# 
  3156     0D8E                     	;# 
  3157     0D8F                     	;# 
  3158     0D8F                     	;# 
  3159     0D90                     	;# 
  3160     0D91                     	;# 
  3161     0D92                     	;# 
  3162     0D92                     	;# 
  3163     0D93                     	;# 
  3164     0D94                     	;# 
  3165     0D95                     	;# 
  3166     0D95                     	;# 
  3167     0D96                     	;# 
  3168     0D97                     	;# 
  3169     0D98                     	;# 
  3170     0D99                     	;# 
  3171     0D9A                     	;# 
  3172     0D9B                     	;# 
  3173     0D9C                     	;# 
  3174     0D9D                     	;# 
  3175     0D9E                     	;# 
  3176     0D9E                     	;# 
  3177     0D9F                     	;# 
  3178     0DA0                     	;# 
  3179     0DA1                     	;# 
  3180     0DA1                     	;# 
  3181     0DA2                     	;# 
  3182     0DA3                     	;# 
  3183     0DA4                     	;# 
  3184     0DA4                     	;# 
  3185     0DA5                     	;# 
  3186     0DA6                     	;# 
  3187     0DA7                     	;# 
  3188     0DA7                     	;# 
  3189     0DA8                     	;# 
  3190     0DA9                     	;# 
  3191     0DAA                     	;# 
  3192     0DAB                     	;# 
  3193     0DAC                     	;# 
  3194     0DAD                     	;# 
  3195     0DAE                     	;# 
  3196     0DAF                     	;# 
  3197     0E0F                     	;# 
  3198     0E10                     	;# 
  3199     0E11                     	;# 
  3200     0E12                     	;# 
  3201     0E13                     	;# 
  3202     0E14                     	;# 
  3203     0E15                     	;# 
  3204     0E16                     	;# 
  3205     0E17                     	;# 
  3206     0E17                     	;# 
  3207     0E18                     	;# 
  3208     0E18                     	;# 
  3209     0E19                     	;# 
  3210     0E1A                     	;# 
  3211     0E1B                     	;# 
  3212     0E1B                     	;# 
  3213     0E1C                     	;# 
  3214     0E1D                     	;# 
  3215     0E1E                     	;# 
  3216     0E1E                     	;# 
  3217     0E1F                     	;# 
  3218     0E20                     	;# 
  3219     0E21                     	;# 
  3220     0E22                     	;# 
  3221     0E23                     	;# 
  3222     0E24                     	;# 
  3223     0E25                     	;# 
  3224     0E26                     	;# 
  3225     0E27                     	;# 
  3226     0E28                     	;# 
  3227     0E29                     	;# 
  3228     0E2A                     	;# 
  3229     0E2B                     	;# 
  3230     0E2C                     	;# 
  3231     0E2D                     	;# 
  3232     0E2E                     	;# 
  3233     0E90                     	;# 
  3234     0E91                     	;# 
  3235     0E92                     	;# 
  3236     0E94                     	;# 
  3237     0E95                     	;# 
  3238     0E9C                     	;# 
  3239     0E9D                     	;# 
  3240     0E9E                     	;# 
  3241     0E9F                     	;# 
  3242     0EA0                     	;# 
  3243     0EA1                     	;# 
  3244     0EA2                     	;# 
  3245     0EA3                     	;# 
  3246     0EA4                     	;# 
  3247     0EA5                     	;# 
  3248     0EA6                     	;# 
  3249     0EA7                     	;# 
  3250     0F0F                     	;# 
  3251     0F10                     	;# 
  3252     0F11                     	;# 
  3253     0F12                     	;# 
  3254     0F13                     	;# 
  3255     0F14                     	;# 
  3256     0F15                     	;# 
  3257     0F16                     	;# 
  3258     0F17                     	;# 
  3259     0F18                     	;# 
  3260     0F19                     	;# 
  3261     0F1A                     	;# 
  3262     0F1B                     	;# 
  3263     0F1C                     	;# 
  3264     0F1D                     	;# 
  3265     0F1E                     	;# 
  3266     0F1F                     	;# 
  3267     0F20                     	;# 
  3268     0F21                     	;# 
  3269     0F22                     	;# 
  3270     0F23                     	;# 
  3271     0F24                     	;# 
  3272     0F25                     	;# 
  3273     0F26                     	;# 
  3274     0F27                     	;# 
  3275     0F28                     	;# 
  3276     0F29                     	;# 
  3277     0F2A                     	;# 
  3278     0F2B                     	;# 
  3279     0F2C                     	;# 
  3280     0F2D                     	;# 
  3281     0F2E                     	;# 
  3282     0F2F                     	;# 
  3283     0F30                     	;# 
  3284     0F31                     	;# 
  3285     0F32                     	;# 
  3286     0F33                     	;# 
  3287     0F34                     	;# 
  3288     0F35                     	;# 
  3289     0F36                     	;# 
  3290     0F37                     	;# 
  3291     0FE4                     	;# 
  3292     0FE5                     	;# 
  3293     0FE6                     	;# 
  3294     0FE7                     	;# 
  3295     0FE8                     	;# 
  3296     0FE9                     	;# 
  3297     0FEA                     	;# 
  3298     0FEB                     	;# 
  3299     0FED                     	;# 
  3300     0FEE                     	;# 
  3301     0FEF                     	;# 
  3302     0000                     	;# 
  3303     0001                     	;# 
  3304     0002                     	;# 
  3305     0003                     	;# 
  3306     0004                     	;# 
  3307     0005                     	;# 
  3308     0006                     	;# 
  3309     0007                     	;# 
  3310     0008                     	;# 
  3311     0009                     	;# 
  3312     000A                     	;# 
  3313     000B                     	;# 
  3314     000C                     	;# 
  3315     000D                     	;# 
  3316     000E                     	;# 
  3317     0010                     	;# 
  3318     0011                     	;# 
  3319     0012                     	;# 
  3320     0013                     	;# 
  3321     0014                     	;# 
  3322     0015                     	;# 
  3323     0016                     	;# 
  3324     0016                     	;# 
  3325     0017                     	;# 
  3326     0018                     	;# 
  3327     0019                     	;# 
  3328     001A                     	;# 
  3329     001A                     	;# 
  3330     001B                     	;# 
  3331     001B                     	;# 
  3332     001C                     	;# 
  3333     001D                     	;# 
  3334     001E                     	;# 
  3335     001F                     	;# 
  3336     008C                     	;# 
  3337     008D                     	;# 
  3338     008E                     	;# 
  3339     0090                     	;# 
  3340     0091                     	;# 
  3341     0092                     	;# 
  3342     0093                     	;# 
  3343     0094                     	;# 
  3344     0095                     	;# 
  3345     0096                     	;# 
  3346     0098                     	;# 
  3347     0099                     	;# 
  3348     009A                     	;# 
  3349     009B                     	;# 
  3350     009B                     	;# 
  3351     009C                     	;# 
  3352     009D                     	;# 
  3353     009E                     	;# 
  3354     009F                     	;# 
  3355     010C                     	;# 
  3356     010D                     	;# 
  3357     010E                     	;# 
  3358     0111                     	;# 
  3359     0112                     	;# 
  3360     0113                     	;# 
  3361     0114                     	;# 
  3362     0115                     	;# 
  3363     0116                     	;# 
  3364     0117                     	;# 
  3365     0118                     	;# 
  3366     0119                     	;# 
  3367     011C                     	;# 
  3368     018C                     	;# 
  3369     018D                     	;# 
  3370     018E                     	;# 
  3371     0191                     	;# 
  3372     0191                     	;# 
  3373     0192                     	;# 
  3374     0193                     	;# 
  3375     0193                     	;# 
  3376     0194                     	;# 
  3377     0195                     	;# 
  3378     0196                     	;# 
  3379     0197                     	;# 
  3380     0199                     	;# 
  3381     0199                     	;# 
  3382     0199                     	;# 
  3383     019A                     	;# 
  3384     019A                     	;# 
  3385     019A                     	;# 
  3386     019B                     	;# 
  3387     019B                     	;# 
  3388     019B                     	;# 
  3389     019B                     	;# 
  3390     019B                     	;# 
  3391     019C                     	;# 
  3392     019C                     	;# 
  3393     019C                     	;# 
  3394     019D                     	;# 
  3395     019D                     	;# 
  3396     019D                     	;# 
  3397     019E                     	;# 
  3398     019E                     	;# 
  3399     019E                     	;# 
  3400     019F                     	;# 
  3401     019F                     	;# 
  3402     019F                     	;# 
  3403     019F                     	;# 
  3404     019F                     	;# 
  3405     020C                     	;# 
  3406     020D                     	;# 
  3407     020E                     	;# 
  3408     0211                     	;# 
  3409     0211                     	;# 
  3410     0212                     	;# 
  3411     0212                     	;# 
  3412     0213                     	;# 
  3413     0213                     	;# 
  3414     0214                     	;# 
  3415     0214                     	;# 
  3416     0215                     	;# 
  3417     0215                     	;# 
  3418     0215                     	;# 
  3419     0215                     	;# 
  3420     0216                     	;# 
  3421     0216                     	;# 
  3422     0217                     	;# 
  3423     0217                     	;# 
  3424     028C                     	;# 
  3425     028D                     	;# 
  3426     028E                     	;# 
  3427     0291                     	;# 
  3428     0291                     	;# 
  3429     0292                     	;# 
  3430     0293                     	;# 
  3431     0294                     	;# 
  3432     0298                     	;# 
  3433     0298                     	;# 
  3434     0299                     	;# 
  3435     029A                     	;# 
  3436     029B                     	;# 
  3437     029E                     	;# 
  3438     030C                     	;# 
  3439     030D                     	;# 
  3440     030E                     	;# 
  3441     038C                     	;# 
  3442     038D                     	;# 
  3443     038E                     	;# 
  3444     0391                     	;# 
  3445     0392                     	;# 
  3446     0393                     	;# 
  3447     0394                     	;# 
  3448     0395                     	;# 
  3449     0396                     	;# 
  3450     0397                     	;# 
  3451     0398                     	;# 
  3452     0399                     	;# 
  3453     040E                     	;# 
  3454     0413                     	;# 
  3455     0413                     	;# 
  3456     0414                     	;# 
  3457     0414                     	;# 
  3458     0415                     	;# 
  3459     0416                     	;# 
  3460     0417                     	;# 
  3461     0418                     	;# 
  3462     041A                     	;# 
  3463     041A                     	;# 
  3464     041B                     	;# 
  3465     041B                     	;# 
  3466     041C                     	;# 
  3467     041D                     	;# 
  3468     041E                     	;# 
  3469     041F                     	;# 
  3470     0493                     	;# 
  3471     0494                     	;# 
  3472     0495                     	;# 
  3473     0496                     	;# 
  3474     049A                     	;# 
  3475     049B                     	;# 
  3476     049C                     	;# 
  3477     049D                     	;# 
  3478     058C                     	;# 
  3479     058C                     	;# 
  3480     058D                     	;# 
  3481     058E                     	;# 
  3482     058E                     	;# 
  3483     058F                     	;# 
  3484     0590                     	;# 
  3485     0590                     	;# 
  3486     0591                     	;# 
  3487     0592                     	;# 
  3488     0592                     	;# 
  3489     0593                     	;# 
  3490     0594                     	;# 
  3491     0594                     	;# 
  3492     0595                     	;# 
  3493     0596                     	;# 
  3494     0596                     	;# 
  3495     0597                     	;# 
  3496     0598                     	;# 
  3497     0599                     	;# 
  3498     059A                     	;# 
  3499     059B                     	;# 
  3500     059B                     	;# 
  3501     059C                     	;# 
  3502     059D                     	;# 
  3503     060C                     	;# 
  3504     060C                     	;# 
  3505     060D                     	;# 
  3506     060E                     	;# 
  3507     060F                     	;# 
  3508     060F                     	;# 
  3509     0610                     	;# 
  3510     0611                     	;# 
  3511     0612                     	;# 
  3512     0613                     	;# 
  3513     0614                     	;# 
  3514     0617                     	;# 
  3515     0617                     	;# 
  3516     0618                     	;# 
  3517     0619                     	;# 
  3518     061A                     	;# 
  3519     061A                     	;# 
  3520     061B                     	;# 
  3521     061C                     	;# 
  3522     0691                     	;# 
  3523     0692                     	;# 
  3524     0693                     	;# 
  3525     0694                     	;# 
  3526     0695                     	;# 
  3527     0696                     	;# 
  3528     0697                     	;# 
  3529     0699                     	;# 
  3530     069A                     	;# 
  3531     0711                     	;# 
  3532     0712                     	;# 
  3533     0713                     	;# 
  3534     0714                     	;# 
  3535     0715                     	;# 
  3536     0718                     	;# 
  3537     0718                     	;# 
  3538     0719                     	;# 
  3539     071A                     	;# 
  3540     071A                     	;# 
  3541     071B                     	;# 
  3542     071C                     	;# 
  3543     071D                     	;# 
  3544     0791                     	;# 
  3545     0791                     	;# 
  3546     0792                     	;# 
  3547     0793                     	;# 
  3548     0793                     	;# 
  3549     0794                     	;# 
  3550     0795                     	;# 
  3551     0795                     	;# 
  3552     0796                     	;# 
  3553     0797                     	;# 
  3554     0797                     	;# 
  3555     0798                     	;# 
  3556     0799                     	;# 
  3557     079A                     	;# 
  3558     080C                     	;# 
  3559     080C                     	;# 
  3560     080D                     	;# 
  3561     080E                     	;# 
  3562     080E                     	;# 
  3563     080F                     	;# 
  3564     0810                     	;# 
  3565     0810                     	;# 
  3566     0811                     	;# 
  3567     0812                     	;# 
  3568     0812                     	;# 
  3569     0813                     	;# 
  3570     0814                     	;# 
  3571     0815                     	;# 
  3572     0816                     	;# 
  3573     0817                     	;# 
  3574     0818                     	;# 
  3575     0819                     	;# 
  3576     081A                     	;# 
  3577     081A                     	;# 
  3578     081B                     	;# 
  3579     081C                     	;# 
  3580     081C                     	;# 
  3581     081D                     	;# 
  3582     088C                     	;# 
  3583     088D                     	;# 
  3584     088E                     	;# 
  3585     088F                     	;# 
  3586     088F                     	;# 
  3587     0890                     	;# 
  3588     0891                     	;# 
  3589     0892                     	;# 
  3590     0893                     	;# 
  3591     0893                     	;# 
  3592     0894                     	;# 
  3593     0895                     	;# 
  3594     0896                     	;# 
  3595     0897                     	;# 
  3596     0897                     	;# 
  3597     0898                     	;# 
  3598     0899                     	;# 
  3599     0D8C                     	;# 
  3600     0D8C                     	;# 
  3601     0D8D                     	;# 
  3602     0D8E                     	;# 
  3603     0D8F                     	;# 
  3604     0D8F                     	;# 
  3605     0D90                     	;# 
  3606     0D91                     	;# 
  3607     0D92                     	;# 
  3608     0D92                     	;# 
  3609     0D93                     	;# 
  3610     0D94                     	;# 
  3611     0D95                     	;# 
  3612     0D95                     	;# 
  3613     0D96                     	;# 
  3614     0D97                     	;# 
  3615     0D98                     	;# 
  3616     0D99                     	;# 
  3617     0D9A                     	;# 
  3618     0D9B                     	;# 
  3619     0D9C                     	;# 
  3620     0D9D                     	;# 
  3621     0D9E                     	;# 
  3622     0D9E                     	;# 
  3623     0D9F                     	;# 
  3624     0DA0                     	;# 
  3625     0DA1                     	;# 
  3626     0DA1                     	;# 
  3627     0DA2                     	;# 
  3628     0DA3                     	;# 
  3629     0DA4                     	;# 
  3630     0DA4                     	;# 
  3631     0DA5                     	;# 
  3632     0DA6                     	;# 
  3633     0DA7                     	;# 
  3634     0DA7                     	;# 
  3635     0DA8                     	;# 
  3636     0DA9                     	;# 
  3637     0DAA                     	;# 
  3638     0DAB                     	;# 
  3639     0DAC                     	;# 
  3640     0DAD                     	;# 
  3641     0DAE                     	;# 
  3642     0DAF                     	;# 
  3643     0E0F                     	;# 
  3644     0E10                     	;# 
  3645     0E11                     	;# 
  3646     0E12                     	;# 
  3647     0E13                     	;# 
  3648     0E14                     	;# 
  3649     0E15                     	;# 
  3650     0E16                     	;# 
  3651     0E17                     	;# 
  3652     0E17                     	;# 
  3653     0E18                     	;# 
  3654     0E18                     	;# 
  3655     0E19                     	;# 
  3656     0E1A                     	;# 
  3657     0E1B                     	;# 
  3658     0E1B                     	;# 
  3659     0E1C                     	;# 
  3660     0E1D                     	;# 
  3661     0E1E                     	;# 
  3662     0E1E                     	;# 
  3663     0E1F                     	;# 
  3664     0E20                     	;# 
  3665     0E21                     	;# 
  3666     0E22                     	;# 
  3667     0E23                     	;# 
  3668     0E24                     	;# 
  3669     0E25                     	;# 
  3670     0E26                     	;# 
  3671     0E27                     	;# 
  3672     0E28                     	;# 
  3673     0E29                     	;# 
  3674     0E2A                     	;# 
  3675     0E2B                     	;# 
  3676     0E2C                     	;# 
  3677     0E2D                     	;# 
  3678     0E2E                     	;# 
  3679     0E90                     	;# 
  3680     0E91                     	;# 
  3681     0E92                     	;# 
  3682     0E94                     	;# 
  3683     0E95                     	;# 
  3684     0E9C                     	;# 
  3685     0E9D                     	;# 
  3686     0E9E                     	;# 
  3687     0E9F                     	;# 
  3688     0EA0                     	;# 
  3689     0EA1                     	;# 
  3690     0EA2                     	;# 
  3691     0EA3                     	;# 
  3692     0EA4                     	;# 
  3693     0EA5                     	;# 
  3694     0EA6                     	;# 
  3695     0EA7                     	;# 
  3696     0F0F                     	;# 
  3697     0F10                     	;# 
  3698     0F11                     	;# 
  3699     0F12                     	;# 
  3700     0F13                     	;# 
  3701     0F14                     	;# 
  3702     0F15                     	;# 
  3703     0F16                     	;# 
  3704     0F17                     	;# 
  3705     0F18                     	;# 
  3706     0F19                     	;# 
  3707     0F1A                     	;# 
  3708     0F1B                     	;# 
  3709     0F1C                     	;# 
  3710     0F1D                     	;# 
  3711     0F1E                     	;# 
  3712     0F1F                     	;# 
  3713     0F20                     	;# 
  3714     0F21                     	;# 
  3715     0F22                     	;# 
  3716     0F23                     	;# 
  3717     0F24                     	;# 
  3718     0F25                     	;# 
  3719     0F26                     	;# 
  3720     0F27                     	;# 
  3721     0F28                     	;# 
  3722     0F29                     	;# 
  3723     0F2A                     	;# 
  3724     0F2B                     	;# 
  3725     0F2C                     	;# 
  3726     0F2D                     	;# 
  3727     0F2E                     	;# 
  3728     0F2F                     	;# 
  3729     0F30                     	;# 
  3730     0F31                     	;# 
  3731     0F32                     	;# 
  3732     0F33                     	;# 
  3733     0F34                     	;# 
  3734     0F35                     	;# 
  3735     0F36                     	;# 
  3736     0F37                     	;# 
  3737     0FE4                     	;# 
  3738     0FE5                     	;# 
  3739     0FE6                     	;# 
  3740     0FE7                     	;# 
  3741     0FE8                     	;# 
  3742     0FE9                     	;# 
  3743     0FEA                     	;# 
  3744     0FEB                     	;# 
  3745     0FED                     	;# 
  3746     0FEE                     	;# 
  3747     0FEF                     	;# 
  3748     0000                     	;# 
  3749     0001                     	;# 
  3750     0002                     	;# 
  3751     0003                     	;# 
  3752     0004                     	;# 
  3753     0005                     	;# 
  3754     0006                     	;# 
  3755     0007                     	;# 
  3756     0008                     	;# 
  3757     0009                     	;# 
  3758     000A                     	;# 
  3759     000B                     	;# 
  3760     000C                     	;# 
  3761     000D                     	;# 
  3762     000E                     	;# 
  3763     0010                     	;# 
  3764     0011                     	;# 
  3765     0012                     	;# 
  3766     0013                     	;# 
  3767     0014                     	;# 
  3768     0015                     	;# 
  3769     0016                     	;# 
  3770     0016                     	;# 
  3771     0017                     	;# 
  3772     0018                     	;# 
  3773     0019                     	;# 
  3774     001A                     	;# 
  3775     001A                     	;# 
  3776     001B                     	;# 
  3777     001B                     	;# 
  3778     001C                     	;# 
  3779     001D                     	;# 
  3780     001E                     	;# 
  3781     001F                     	;# 
  3782     008C                     	;# 
  3783     008D                     	;# 
  3784     008E                     	;# 
  3785     0090                     	;# 
  3786     0091                     	;# 
  3787     0092                     	;# 
  3788     0093                     	;# 
  3789     0094                     	;# 
  3790     0095                     	;# 
  3791     0096                     	;# 
  3792     0098                     	;# 
  3793     0099                     	;# 
  3794     009A                     	;# 
  3795     009B                     	;# 
  3796     009B                     	;# 
  3797     009C                     	;# 
  3798     009D                     	;# 
  3799     009E                     	;# 
  3800     009F                     	;# 
  3801     010C                     	;# 
  3802     010D                     	;# 
  3803     010E                     	;# 
  3804     0111                     	;# 
  3805     0112                     	;# 
  3806     0113                     	;# 
  3807     0114                     	;# 
  3808     0115                     	;# 
  3809     0116                     	;# 
  3810     0117                     	;# 
  3811     0118                     	;# 
  3812     0119                     	;# 
  3813     011C                     	;# 
  3814     018C                     	;# 
  3815     018D                     	;# 
  3816     018E                     	;# 
  3817     0191                     	;# 
  3818     0191                     	;# 
  3819     0192                     	;# 
  3820     0193                     	;# 
  3821     0193                     	;# 
  3822     0194                     	;# 
  3823     0195                     	;# 
  3824     0196                     	;# 
  3825     0197                     	;# 
  3826     0199                     	;# 
  3827     0199                     	;# 
  3828     0199                     	;# 
  3829     019A                     	;# 
  3830     019A                     	;# 
  3831     019A                     	;# 
  3832     019B                     	;# 
  3833     019B                     	;# 
  3834     019B                     	;# 
  3835     019B                     	;# 
  3836     019B                     	;# 
  3837     019C                     	;# 
  3838     019C                     	;# 
  3839     019C                     	;# 
  3840     019D                     	;# 
  3841     019D                     	;# 
  3842     019D                     	;# 
  3843     019E                     	;# 
  3844     019E                     	;# 
  3845     019E                     	;# 
  3846     019F                     	;# 
  3847     019F                     	;# 
  3848     019F                     	;# 
  3849     019F                     	;# 
  3850     019F                     	;# 
  3851     020C                     	;# 
  3852     020D                     	;# 
  3853     020E                     	;# 
  3854     0211                     	;# 
  3855     0211                     	;# 
  3856     0212                     	;# 
  3857     0212                     	;# 
  3858     0213                     	;# 
  3859     0213                     	;# 
  3860     0214                     	;# 
  3861     0214                     	;# 
  3862     0215                     	;# 
  3863     0215                     	;# 
  3864     0215                     	;# 
  3865     0215                     	;# 
  3866     0216                     	;# 
  3867     0216                     	;# 
  3868     0217                     	;# 
  3869     0217                     	;# 
  3870     028C                     	;# 
  3871     028D                     	;# 
  3872     028E                     	;# 
  3873     0291                     	;# 
  3874     0291                     	;# 
  3875     0292                     	;# 
  3876     0293                     	;# 
  3877     0294                     	;# 
  3878     0298                     	;# 
  3879     0298                     	;# 
  3880     0299                     	;# 
  3881     029A                     	;# 
  3882     029B                     	;# 
  3883     029E                     	;# 
  3884     030C                     	;# 
  3885     030D                     	;# 
  3886     030E                     	;# 
  3887     038C                     	;# 
  3888     038D                     	;# 
  3889     038E                     	;# 
  3890     0391                     	;# 
  3891     0392                     	;# 
  3892     0393                     	;# 
  3893     0394                     	;# 
  3894     0395                     	;# 
  3895     0396                     	;# 
  3896     0397                     	;# 
  3897     0398                     	;# 
  3898     0399                     	;# 
  3899     040E                     	;# 
  3900     0413                     	;# 
  3901     0413                     	;# 
  3902     0414                     	;# 
  3903     0414                     	;# 
  3904     0415                     	;# 
  3905     0416                     	;# 
  3906     0417                     	;# 
  3907     0418                     	;# 
  3908     041A                     	;# 
  3909     041A                     	;# 
  3910     041B                     	;# 
  3911     041B                     	;# 
  3912     041C                     	;# 
  3913     041D                     	;# 
  3914     041E                     	;# 
  3915     041F                     	;# 
  3916     0493                     	;# 
  3917     0494                     	;# 
  3918     0495                     	;# 
  3919     0496                     	;# 
  3920     049A                     	;# 
  3921     049B                     	;# 
  3922     049C                     	;# 
  3923     049D                     	;# 
  3924     058C                     	;# 
  3925     058C                     	;# 
  3926     058D                     	;# 
  3927     058E                     	;# 
  3928     058E                     	;# 
  3929     058F                     	;# 
  3930     0590                     	;# 
  3931     0590                     	;# 
  3932     0591                     	;# 
  3933     0592                     	;# 
  3934     0592                     	;# 
  3935     0593                     	;# 
  3936     0594                     	;# 
  3937     0594                     	;# 
  3938     0595                     	;# 
  3939     0596                     	;# 
  3940     0596                     	;# 
  3941     0597                     	;# 
  3942     0598                     	;# 
  3943     0599                     	;# 
  3944     059A                     	;# 
  3945     059B                     	;# 
  3946     059B                     	;# 
  3947     059C                     	;# 
  3948     059D                     	;# 
  3949     060C                     	;# 
  3950     060C                     	;# 
  3951     060D                     	;# 
  3952     060E                     	;# 
  3953     060F                     	;# 
  3954     060F                     	;# 
  3955     0610                     	;# 
  3956     0611                     	;# 
  3957     0612                     	;# 
  3958     0613                     	;# 
  3959     0614                     	;# 
  3960     0617                     	;# 
  3961     0617                     	;# 
  3962     0618                     	;# 
  3963     0619                     	;# 
  3964     061A                     	;# 
  3965     061A                     	;# 
  3966     061B                     	;# 
  3967     061C                     	;# 
  3968     0691                     	;# 
  3969     0692                     	;# 
  3970     0693                     	;# 
  3971     0694                     	;# 
  3972     0695                     	;# 
  3973     0696                     	;# 
  3974     0697                     	;# 
  3975     0699                     	;# 
  3976     069A                     	;# 
  3977     0711                     	;# 
  3978     0712                     	;# 
  3979     0713                     	;# 
  3980     0714                     	;# 
  3981     0715                     	;# 
  3982     0718                     	;# 
  3983     0718                     	;# 
  3984     0719                     	;# 
  3985     071A                     	;# 
  3986     071A                     	;# 
  3987     071B                     	;# 
  3988     071C                     	;# 
  3989     071D                     	;# 
  3990     0791                     	;# 
  3991     0791                     	;# 
  3992     0792                     	;# 
  3993     0793                     	;# 
  3994     0793                     	;# 
  3995     0794                     	;# 
  3996     0795                     	;# 
  3997     0795                     	;# 
  3998     0796                     	;# 
  3999     0797                     	;# 
  4000     0797                     	;# 
  4001     0798                     	;# 
  4002     0799                     	;# 
  4003     079A                     	;# 
  4004     080C                     	;# 
  4005     080C                     	;# 
  4006     080D                     	;# 
  4007     080E                     	;# 
  4008     080E                     	;# 
  4009     080F                     	;# 
  4010     0810                     	;# 
  4011     0810                     	;# 
  4012     0811                     	;# 
  4013     0812                     	;# 
  4014     0812                     	;# 
  4015     0813                     	;# 
  4016     0814                     	;# 
  4017     0815                     	;# 
  4018     0816                     	;# 
  4019     0817                     	;# 
  4020     0818                     	;# 
  4021     0819                     	;# 
  4022     081A                     	;# 
  4023     081A                     	;# 
  4024     081B                     	;# 
  4025     081C                     	;# 
  4026     081C                     	;# 
  4027     081D                     	;# 
  4028     088C                     	;# 
  4029     088D                     	;# 
  4030     088E                     	;# 
  4031     088F                     	;# 
  4032     088F                     	;# 
  4033     0890                     	;# 
  4034     0891                     	;# 
  4035     0892                     	;# 
  4036     0893                     	;# 
  4037     0893                     	;# 
  4038     0894                     	;# 
  4039     0895                     	;# 
  4040     0896                     	;# 
  4041     0897                     	;# 
  4042     0897                     	;# 
  4043     0898                     	;# 
  4044     0899                     	;# 
  4045     0D8C                     	;# 
  4046     0D8C                     	;# 
  4047     0D8D                     	;# 
  4048     0D8E                     	;# 
  4049     0D8F                     	;# 
  4050     0D8F                     	;# 
  4051     0D90                     	;# 
  4052     0D91                     	;# 
  4053     0D92                     	;# 
  4054     0D92                     	;# 
  4055     0D93                     	;# 
  4056     0D94                     	;# 
  4057     0D95                     	;# 
  4058     0D95                     	;# 
  4059     0D96                     	;# 
  4060     0D97                     	;# 
  4061     0D98                     	;# 
  4062     0D99                     	;# 
  4063     0D9A                     	;# 
  4064     0D9B                     	;# 
  4065     0D9C                     	;# 
  4066     0D9D                     	;# 
  4067     0D9E                     	;# 
  4068     0D9E                     	;# 
  4069     0D9F                     	;# 
  4070     0DA0                     	;# 
  4071     0DA1                     	;# 
  4072     0DA1                     	;# 
  4073     0DA2                     	;# 
  4074     0DA3                     	;# 
  4075     0DA4                     	;# 
  4076     0DA4                     	;# 
  4077     0DA5                     	;# 
  4078     0DA6                     	;# 
  4079     0DA7                     	;# 
  4080     0DA7                     	;# 
  4081     0DA8                     	;# 
  4082     0DA9                     	;# 
  4083     0DAA                     	;# 
  4084     0DAB                     	;# 
  4085     0DAC                     	;# 
  4086     0DAD                     	;# 
  4087     0DAE                     	;# 
  4088     0DAF                     	;# 
  4089     0E0F                     	;# 
  4090     0E10                     	;# 
  4091     0E11                     	;# 
  4092     0E12                     	;# 
  4093     0E13                     	;# 
  4094     0E14                     	;# 
  4095     0E15                     	;# 
  4096     0E16                     	;# 
  4097     0E17                     	;# 
  4098     0E17                     	;# 
  4099     0E18                     	;# 
  4100     0E18                     	;# 
  4101     0E19                     	;# 
  4102     0E1A                     	;# 
  4103     0E1B                     	;# 
  4104     0E1B                     	;# 
  4105     0E1C                     	;# 
  4106     0E1D                     	;# 
  4107     0E1E                     	;# 
  4108     0E1E                     	;# 
  4109     0E1F                     	;# 
  4110     0E20                     	;# 
  4111     0E21                     	;# 
  4112     0E22                     	;# 
  4113     0E23                     	;# 
  4114     0E24                     	;# 
  4115     0E25                     	;# 
  4116     0E26                     	;# 
  4117     0E27                     	;# 
  4118     0E28                     	;# 
  4119     0E29                     	;# 
  4120     0E2A                     	;# 
  4121     0E2B                     	;# 
  4122     0E2C                     	;# 
  4123     0E2D                     	;# 
  4124     0E2E                     	;# 
  4125     0E90                     	;# 
  4126     0E91                     	;# 
  4127     0E92                     	;# 
  4128     0E94                     	;# 
  4129     0E95                     	;# 
  4130     0E9C                     	;# 
  4131     0E9D                     	;# 
  4132     0E9E                     	;# 
  4133     0E9F                     	;# 
  4134     0EA0                     	;# 
  4135     0EA1                     	;# 
  4136     0EA2                     	;# 
  4137     0EA3                     	;# 
  4138     0EA4                     	;# 
  4139     0EA5                     	;# 
  4140     0EA6                     	;# 
  4141     0EA7                     	;# 
  4142     0F0F                     	;# 
  4143     0F10                     	;# 
  4144     0F11                     	;# 
  4145     0F12                     	;# 
  4146     0F13                     	;# 
  4147     0F14                     	;# 
  4148     0F15                     	;# 
  4149     0F16                     	;# 
  4150     0F17                     	;# 
  4151     0F18                     	;# 
  4152     0F19                     	;# 
  4153     0F1A                     	;# 
  4154     0F1B                     	;# 
  4155     0F1C                     	;# 
  4156     0F1D                     	;# 
  4157     0F1E                     	;# 
  4158     0F1F                     	;# 
  4159     0F20                     	;# 
  4160     0F21                     	;# 
  4161     0F22                     	;# 
  4162     0F23                     	;# 
  4163     0F24                     	;# 
  4164     0F25                     	;# 
  4165     0F26                     	;# 
  4166     0F27                     	;# 
  4167     0F28                     	;# 
  4168     0F29                     	;# 
  4169     0F2A                     	;# 
  4170     0F2B                     	;# 
  4171     0F2C                     	;# 
  4172     0F2D                     	;# 
  4173     0F2E                     	;# 
  4174     0F2F                     	;# 
  4175     0F30                     	;# 
  4176     0F31                     	;# 
  4177     0F32                     	;# 
  4178     0F33                     	;# 
  4179     0F34                     	;# 
  4180     0F35                     	;# 
  4181     0F36                     	;# 
  4182     0F37                     	;# 
  4183     0FE4                     	;# 
  4184     0FE5                     	;# 
  4185     0FE6                     	;# 
  4186     0FE7                     	;# 
  4187     0FE8                     	;# 
  4188     0FE9                     	;# 
  4189     0FEA                     	;# 
  4190     0FEB                     	;# 
  4191     0FED                     	;# 
  4192     0FEE                     	;# 
  4193     0FEF                     	;# 
  4194     0000                     	;# 
  4195     0001                     	;# 
  4196     0002                     	;# 
  4197     0003                     	;# 
  4198     0004                     	;# 
  4199     0005                     	;# 
  4200     0006                     	;# 
  4201     0007                     	;# 
  4202     0008                     	;# 
  4203     0009                     	;# 
  4204     000A                     	;# 
  4205     000B                     	;# 
  4206     000C                     	;# 
  4207     000D                     	;# 
  4208     000E                     	;# 
  4209     0010                     	;# 
  4210     0011                     	;# 
  4211     0012                     	;# 
  4212     0013                     	;# 
  4213     0014                     	;# 
  4214     0015                     	;# 
  4215     0016                     	;# 
  4216     0016                     	;# 
  4217     0017                     	;# 
  4218     0018                     	;# 
  4219     0019                     	;# 
  4220     001A                     	;# 
  4221     001A                     	;# 
  4222     001B                     	;# 
  4223     001B                     	;# 
  4224     001C                     	;# 
  4225     001D                     	;# 
  4226     001E                     	;# 
  4227     001F                     	;# 
  4228     008C                     	;# 
  4229     008D                     	;# 
  4230     008E                     	;# 
  4231     0090                     	;# 
  4232     0091                     	;# 
  4233     0092                     	;# 
  4234     0093                     	;# 
  4235     0094                     	;# 
  4236     0095                     	;# 
  4237     0096                     	;# 
  4238     0098                     	;# 
  4239     0099                     	;# 
  4240     009A                     	;# 
  4241     009B                     	;# 
  4242     009B                     	;# 
  4243     009C                     	;# 
  4244     009D                     	;# 
  4245     009E                     	;# 
  4246     009F                     	;# 
  4247     010C                     	;# 
  4248     010D                     	;# 
  4249     010E                     	;# 
  4250     0111                     	;# 
  4251     0112                     	;# 
  4252     0113                     	;# 
  4253     0114                     	;# 
  4254     0115                     	;# 
  4255     0116                     	;# 
  4256     0117                     	;# 
  4257     0118                     	;# 
  4258     0119                     	;# 
  4259     011C                     	;# 
  4260     018C                     	;# 
  4261     018D                     	;# 
  4262     018E                     	;# 
  4263     0191                     	;# 
  4264     0191                     	;# 
  4265     0192                     	;# 
  4266     0193                     	;# 
  4267     0193                     	;# 
  4268     0194                     	;# 
  4269     0195                     	;# 
  4270     0196                     	;# 
  4271     0197                     	;# 
  4272     0199                     	;# 
  4273     0199                     	;# 
  4274     0199                     	;# 
  4275     019A                     	;# 
  4276     019A                     	;# 
  4277     019A                     	;# 
  4278     019B                     	;# 
  4279     019B                     	;# 
  4280     019B                     	;# 
  4281     019B                     	;# 
  4282     019B                     	;# 
  4283     019C                     	;# 
  4284     019C                     	;# 
  4285     019C                     	;# 
  4286     019D                     	;# 
  4287     019D                     	;# 
  4288     019D                     	;# 
  4289     019E                     	;# 
  4290     019E                     	;# 
  4291     019E                     	;# 
  4292     019F                     	;# 
  4293     019F                     	;# 
  4294     019F                     	;# 
  4295     019F                     	;# 
  4296     019F                     	;# 
  4297     020C                     	;# 
  4298     020D                     	;# 
  4299     020E                     	;# 
  4300     0211                     	;# 
  4301     0211                     	;# 
  4302     0212                     	;# 
  4303     0212                     	;# 
  4304     0213                     	;# 
  4305     0213                     	;# 
  4306     0214                     	;# 
  4307     0214                     	;# 
  4308     0215                     	;# 
  4309     0215                     	;# 
  4310     0215                     	;# 
  4311     0215                     	;# 
  4312     0216                     	;# 
  4313     0216                     	;# 
  4314     0217                     	;# 
  4315     0217                     	;# 
  4316     028C                     	;# 
  4317     028D                     	;# 
  4318     028E                     	;# 
  4319     0291                     	;# 
  4320     0291                     	;# 
  4321     0292                     	;# 
  4322     0293                     	;# 
  4323     0294                     	;# 
  4324     0298                     	;# 
  4325     0298                     	;# 
  4326     0299                     	;# 
  4327     029A                     	;# 
  4328     029B                     	;# 
  4329     029E                     	;# 
  4330     030C                     	;# 
  4331     030D                     	;# 
  4332     030E                     	;# 
  4333     038C                     	;# 
  4334     038D                     	;# 
  4335     038E                     	;# 
  4336     0391                     	;# 
  4337     0392                     	;# 
  4338     0393                     	;# 
  4339     0394                     	;# 
  4340     0395                     	;# 
  4341     0396                     	;# 
  4342     0397                     	;# 
  4343     0398                     	;# 
  4344     0399                     	;# 
  4345     040E                     	;# 
  4346     0413                     	;# 
  4347     0413                     	;# 
  4348     0414                     	;# 
  4349     0414                     	;# 
  4350     0415                     	;# 
  4351     0416                     	;# 
  4352     0417                     	;# 
  4353     0418                     	;# 
  4354     041A                     	;# 
  4355     041A                     	;# 
  4356     041B                     	;# 
  4357     041B                     	;# 
  4358     041C                     	;# 
  4359     041D                     	;# 
  4360     041E                     	;# 
  4361     041F                     	;# 
  4362     0493                     	;# 
  4363     0494                     	;# 
  4364     0495                     	;# 
  4365     0496                     	;# 
  4366     049A                     	;# 
  4367     049B                     	;# 
  4368     049C                     	;# 
  4369     049D                     	;# 
  4370     058C                     	;# 
  4371     058C                     	;# 
  4372     058D                     	;# 
  4373     058E                     	;# 
  4374     058E                     	;# 
  4375     058F                     	;# 
  4376     0590                     	;# 
  4377     0590                     	;# 
  4378     0591                     	;# 
  4379     0592                     	;# 
  4380     0592                     	;# 
  4381     0593                     	;# 
  4382     0594                     	;# 
  4383     0594                     	;# 
  4384     0595                     	;# 
  4385     0596                     	;# 
  4386     0596                     	;# 
  4387     0597                     	;# 
  4388     0598                     	;# 
  4389     0599                     	;# 
  4390     059A                     	;# 
  4391     059B                     	;# 
  4392     059B                     	;# 
  4393     059C                     	;# 
  4394     059D                     	;# 
  4395     060C                     	;# 
  4396     060C                     	;# 
  4397     060D                     	;# 
  4398     060E                     	;# 
  4399     060F                     	;# 
  4400     060F                     	;# 
  4401     0610                     	;# 
  4402     0611                     	;# 
  4403     0612                     	;# 
  4404     0613                     	;# 
  4405     0614                     	;# 
  4406     0617                     	;# 
  4407     0617                     	;# 
  4408     0618                     	;# 
  4409     0619                     	;# 
  4410     061A                     	;# 
  4411     061A                     	;# 
  4412     061B                     	;# 
  4413     061C                     	;# 
  4414     0691                     	;# 
  4415     0692                     	;# 
  4416     0693                     	;# 
  4417     0694                     	;# 
  4418     0695                     	;# 
  4419     0696                     	;# 
  4420     0697                     	;# 
  4421     0699                     	;# 
  4422     069A                     	;# 
  4423     0711                     	;# 
  4424     0712                     	;# 
  4425     0713                     	;# 
  4426     0714                     	;# 
  4427     0715                     	;# 
  4428     0718                     	;# 
  4429     0718                     	;# 
  4430     0719                     	;# 
  4431     071A                     	;# 
  4432     071A                     	;# 
  4433     071B                     	;# 
  4434     071C                     	;# 
  4435     071D                     	;# 
  4436     0791                     	;# 
  4437     0791                     	;# 
  4438     0792                     	;# 
  4439     0793                     	;# 
  4440     0793                     	;# 
  4441     0794                     	;# 
  4442     0795                     	;# 
  4443     0795                     	;# 
  4444     0796                     	;# 
  4445     0797                     	;# 
  4446     0797                     	;# 
  4447     0798                     	;# 
  4448     0799                     	;# 
  4449     079A                     	;# 
  4450     080C                     	;# 
  4451     080C                     	;# 
  4452     080D                     	;# 
  4453     080E                     	;# 
  4454     080E                     	;# 
  4455     080F                     	;# 
  4456     0810                     	;# 
  4457     0810                     	;# 
  4458     0811                     	;# 
  4459     0812                     	;# 
  4460     0812                     	;# 
  4461     0813                     	;# 
  4462     0814                     	;# 
  4463     0815                     	;# 
  4464     0816                     	;# 
  4465     0817                     	;# 
  4466     0818                     	;# 
  4467     0819                     	;# 
  4468     081A                     	;# 
  4469     081A                     	;# 
  4470     081B                     	;# 
  4471     081C                     	;# 
  4472     081C                     	;# 
  4473     081D                     	;# 
  4474     088C                     	;# 
  4475     088D                     	;# 
  4476     088E                     	;# 
  4477     088F                     	;# 
  4478     088F                     	;# 
  4479     0890                     	;# 
  4480     0891                     	;# 
  4481     0892                     	;# 
  4482     0893                     	;# 
  4483     0893                     	;# 
  4484     0894                     	;# 
  4485     0895                     	;# 
  4486     0896                     	;# 
  4487     0897                     	;# 
  4488     0897                     	;# 
  4489     0898                     	;# 
  4490     0899                     	;# 
  4491     0D8C                     	;# 
  4492     0D8C                     	;# 
  4493     0D8D                     	;# 
  4494     0D8E                     	;# 
  4495     0D8F                     	;# 
  4496     0D8F                     	;# 
  4497     0D90                     	;# 
  4498     0D91                     	;# 
  4499     0D92                     	;# 
  4500     0D92                     	;# 
  4501     0D93                     	;# 
  4502     0D94                     	;# 
  4503     0D95                     	;# 
  4504     0D95                     	;# 
  4505     0D96                     	;# 
  4506     0D97                     	;# 
  4507     0D98                     	;# 
  4508     0D99                     	;# 
  4509     0D9A                     	;# 
  4510     0D9B                     	;# 
  4511     0D9C                     	;# 
  4512     0D9D                     	;# 
  4513     0D9E                     	;# 
  4514     0D9E                     	;# 
  4515     0D9F                     	;# 
  4516     0DA0                     	;# 
  4517     0DA1                     	;# 
  4518     0DA1                     	;# 
  4519     0DA2                     	;# 
  4520     0DA3                     	;# 
  4521     0DA4                     	;# 
  4522     0DA4                     	;# 
  4523     0DA5                     	;# 
  4524     0DA6                     	;# 
  4525     0DA7                     	;# 
  4526     0DA7                     	;# 
  4527     0DA8                     	;# 
  4528     0DA9                     	;# 
  4529     0DAA                     	;# 
  4530     0DAB                     	;# 
  4531     0DAC                     	;# 
  4532     0DAD                     	;# 
  4533     0DAE                     	;# 
  4534     0DAF                     	;# 
  4535     0E0F                     	;# 
  4536     0E10                     	;# 
  4537     0E11                     	;# 
  4538     0E12                     	;# 
  4539     0E13                     	;# 
  4540     0E14                     	;# 
  4541     0E15                     	;# 
  4542     0E16                     	;# 
  4543     0E17                     	;# 
  4544     0E17                     	;# 
  4545     0E18                     	;# 
  4546     0E18                     	;# 
  4547     0E19                     	;# 
  4548     0E1A                     	;# 
  4549     0E1B                     	;# 
  4550     0E1B                     	;# 
  4551     0E1C                     	;# 
  4552     0E1D                     	;# 
  4553     0E1E                     	;# 
  4554     0E1E                     	;# 
  4555     0E1F                     	;# 
  4556     0E20                     	;# 
  4557     0E21                     	;# 
  4558     0E22                     	;# 
  4559     0E23                     	;# 
  4560     0E24                     	;# 
  4561     0E25                     	;# 
  4562     0E26                     	;# 
  4563     0E27                     	;# 
  4564     0E28                     	;# 
  4565     0E29                     	;# 
  4566     0E2A                     	;# 
  4567     0E2B                     	;# 
  4568     0E2C                     	;# 
  4569     0E2D                     	;# 
  4570     0E2E                     	;# 
  4571     0E90                     	;# 
  4572     0E91                     	;# 
  4573     0E92                     	;# 
  4574     0E94                     	;# 
  4575     0E95                     	;# 
  4576     0E9C                     	;# 
  4577     0E9D                     	;# 
  4578     0E9E                     	;# 
  4579     0E9F                     	;# 
  4580     0EA0                     	;# 
  4581     0EA1                     	;# 
  4582     0EA2                     	;# 
  4583     0EA3                     	;# 
  4584     0EA4                     	;# 
  4585     0EA5                     	;# 
  4586     0EA6                     	;# 
  4587     0EA7                     	;# 
  4588     0F0F                     	;# 
  4589     0F10                     	;# 
  4590     0F11                     	;# 
  4591     0F12                     	;# 
  4592     0F13                     	;# 
  4593     0F14                     	;# 
  4594     0F15                     	;# 
  4595     0F16                     	;# 
  4596     0F17                     	;# 
  4597     0F18                     	;# 
  4598     0F19                     	;# 
  4599     0F1A                     	;# 
  4600     0F1B                     	;# 
  4601     0F1C                     	;# 
  4602     0F1D                     	;# 
  4603     0F1E                     	;# 
  4604     0F1F                     	;# 
  4605     0F20                     	;# 
  4606     0F21                     	;# 
  4607     0F22                     	;# 
  4608     0F23                     	;# 
  4609     0F24                     	;# 
  4610     0F25                     	;# 
  4611     0F26                     	;# 
  4612     0F27                     	;# 
  4613     0F28                     	;# 
  4614     0F29                     	;# 
  4615     0F2A                     	;# 
  4616     0F2B                     	;# 
  4617     0F2C                     	;# 
  4618     0F2D                     	;# 
  4619     0F2E                     	;# 
  4620     0F2F                     	;# 
  4621     0F30                     	;# 
  4622     0F31                     	;# 
  4623     0F32                     	;# 
  4624     0F33                     	;# 
  4625     0F34                     	;# 
  4626     0F35                     	;# 
  4627     0F36                     	;# 
  4628     0F37                     	;# 
  4629     0FE4                     	;# 
  4630     0FE5                     	;# 
  4631     0FE6                     	;# 
  4632     0FE7                     	;# 
  4633     0FE8                     	;# 
  4634     0FE9                     	;# 
  4635     0FEA                     	;# 
  4636     0FEB                     	;# 
  4637     0FED                     	;# 
  4638     0FEE                     	;# 
  4639     0FEF                     	;# 
  4640     0000                     	;# 
  4641     0001                     	;# 
  4642     0002                     	;# 
  4643     0003                     	;# 
  4644     0004                     	;# 
  4645     0005                     	;# 
  4646     0006                     	;# 
  4647     0007                     	;# 
  4648     0008                     	;# 
  4649     0009                     	;# 
  4650     000A                     	;# 
  4651     000B                     	;# 
  4652     000C                     	;# 
  4653     000D                     	;# 
  4654     000E                     	;# 
  4655     0010                     	;# 
  4656     0011                     	;# 
  4657     0012                     	;# 
  4658     0013                     	;# 
  4659     0014                     	;# 
  4660     0015                     	;# 
  4661     0016                     	;# 
  4662     0016                     	;# 
  4663     0017                     	;# 
  4664     0018                     	;# 
  4665     0019                     	;# 
  4666     001A                     	;# 
  4667     001A                     	;# 
  4668     001B                     	;# 
  4669     001B                     	;# 
  4670     001C                     	;# 
  4671     001D                     	;# 
  4672     001E                     	;# 
  4673     001F                     	;# 
  4674     008C                     	;# 
  4675     008D                     	;# 
  4676     008E                     	;# 
  4677     0090                     	;# 
  4678     0091                     	;# 
  4679     0092                     	;# 
  4680     0093                     	;# 
  4681     0094                     	;# 
  4682     0095                     	;# 
  4683     0096                     	;# 
  4684     0098                     	;# 
  4685     0099                     	;# 
  4686     009A                     	;# 
  4687     009B                     	;# 
  4688     009B                     	;# 
  4689     009C                     	;# 
  4690     009D                     	;# 
  4691     009E                     	;# 
  4692     009F                     	;# 
  4693     010C                     	;# 
  4694     010D                     	;# 
  4695     010E                     	;# 
  4696     0111                     	;# 
  4697     0112                     	;# 
  4698     0113                     	;# 
  4699     0114                     	;# 
  4700     0115                     	;# 
  4701     0116                     	;# 
  4702     0117                     	;# 
  4703     0118                     	;# 
  4704     0119                     	;# 
  4705     011C                     	;# 
  4706     018C                     	;# 
  4707     018D                     	;# 
  4708     018E                     	;# 
  4709     0191                     	;# 
  4710     0191                     	;# 
  4711     0192                     	;# 
  4712     0193                     	;# 
  4713     0193                     	;# 
  4714     0194                     	;# 
  4715     0195                     	;# 
  4716     0196                     	;# 
  4717     0197                     	;# 
  4718     0199                     	;# 
  4719     0199                     	;# 
  4720     0199                     	;# 
  4721     019A                     	;# 
  4722     019A                     	;# 
  4723     019A                     	;# 
  4724     019B                     	;# 
  4725     019B                     	;# 
  4726     019B                     	;# 
  4727     019B                     	;# 
  4728     019B                     	;# 
  4729     019C                     	;# 
  4730     019C                     	;# 
  4731     019C                     	;# 
  4732     019D                     	;# 
  4733     019D                     	;# 
  4734     019D                     	;# 
  4735     019E                     	;# 
  4736     019E                     	;# 
  4737     019E                     	;# 
  4738     019F                     	;# 
  4739     019F                     	;# 
  4740     019F                     	;# 
  4741     019F                     	;# 
  4742     019F                     	;# 
  4743     020C                     	;# 
  4744     020D                     	;# 
  4745     020E                     	;# 
  4746     0211                     	;# 
  4747     0211                     	;# 
  4748     0212                     	;# 
  4749     0212                     	;# 
  4750     0213                     	;# 
  4751     0213                     	;# 
  4752     0214                     	;# 
  4753     0214                     	;# 
  4754     0215                     	;# 
  4755     0215                     	;# 
  4756     0215                     	;# 
  4757     0215                     	;# 
  4758     0216                     	;# 
  4759     0216                     	;# 
  4760     0217                     	;# 
  4761     0217                     	;# 
  4762     028C                     	;# 
  4763     028D                     	;# 
  4764     028E                     	;# 
  4765     0291                     	;# 
  4766     0291                     	;# 
  4767     0292                     	;# 
  4768     0293                     	;# 
  4769     0294                     	;# 
  4770     0298                     	;# 
  4771     0298                     	;# 
  4772     0299                     	;# 
  4773     029A                     	;# 
  4774     029B                     	;# 
  4775     029E                     	;# 
  4776     030C                     	;# 
  4777     030D                     	;# 
  4778     030E                     	;# 
  4779     038C                     	;# 
  4780     038D                     	;# 
  4781     038E                     	;# 
  4782     0391                     	;# 
  4783     0392                     	;# 
  4784     0393                     	;# 
  4785     0394                     	;# 
  4786     0395                     	;# 
  4787     0396                     	;# 
  4788     0397                     	;# 
  4789     0398                     	;# 
  4790     0399                     	;# 
  4791     040E                     	;# 
  4792     0413                     	;# 
  4793     0413                     	;# 
  4794     0414                     	;# 
  4795     0414                     	;# 
  4796     0415                     	;# 
  4797     0416                     	;# 
  4798     0417                     	;# 
  4799     0418                     	;# 
  4800     041A                     	;# 
  4801     041A                     	;# 
  4802     041B                     	;# 
  4803     041B                     	;# 
  4804     041C                     	;# 
  4805     041D                     	;# 
  4806     041E                     	;# 
  4807     041F                     	;# 
  4808     0493                     	;# 
  4809     0494                     	;# 
  4810     0495                     	;# 
  4811     0496                     	;# 
  4812     049A                     	;# 
  4813     049B                     	;# 
  4814     049C                     	;# 
  4815     049D                     	;# 
  4816     058C                     	;# 
  4817     058C                     	;# 
  4818     058D                     	;# 
  4819     058E                     	;# 
  4820     058E                     	;# 
  4821     058F                     	;# 
  4822     0590                     	;# 
  4823     0590                     	;# 
  4824     0591                     	;# 
  4825     0592                     	;# 
  4826     0592                     	;# 
  4827     0593                     	;# 
  4828     0594                     	;# 
  4829     0594                     	;# 
  4830     0595                     	;# 
  4831     0596                     	;# 
  4832     0596                     	;# 
  4833     0597                     	;# 
  4834     0598                     	;# 
  4835     0599                     	;# 
  4836     059A                     	;# 
  4837     059B                     	;# 
  4838     059B                     	;# 
  4839     059C                     	;# 
  4840     059D                     	;# 
  4841     060C                     	;# 
  4842     060C                     	;# 
  4843     060D                     	;# 
  4844     060E                     	;# 
  4845     060F                     	;# 
  4846     060F                     	;# 
  4847     0610                     	;# 
  4848     0611                     	;# 
  4849     0612                     	;# 
  4850     0613                     	;# 
  4851     0614                     	;# 
  4852     0617                     	;# 
  4853     0617                     	;# 
  4854     0618                     	;# 
  4855     0619                     	;# 
  4856     061A                     	;# 
  4857     061A                     	;# 
  4858     061B                     	;# 
  4859     061C                     	;# 
  4860     0691                     	;# 
  4861     0692                     	;# 
  4862     0693                     	;# 
  4863     0694                     	;# 
  4864     0695                     	;# 
  4865     0696                     	;# 
  4866     0697                     	;# 
  4867     0699                     	;# 
  4868     069A                     	;# 
  4869     0711                     	;# 
  4870     0712                     	;# 
  4871     0713                     	;# 
  4872     0714                     	;# 
  4873     0715                     	;# 
  4874     0718                     	;# 
  4875     0718                     	;# 
  4876     0719                     	;# 
  4877     071A                     	;# 
  4878     071A                     	;# 
  4879     071B                     	;# 
  4880     071C                     	;# 
  4881     071D                     	;# 
  4882     0791                     	;# 
  4883     0791                     	;# 
  4884     0792                     	;# 
  4885     0793                     	;# 
  4886     0793                     	;# 
  4887     0794                     	;# 
  4888     0795                     	;# 
  4889     0795                     	;# 
  4890     0796                     	;# 
  4891     0797                     	;# 
  4892     0797                     	;# 
  4893     0798                     	;# 
  4894     0799                     	;# 
  4895     079A                     	;# 
  4896     080C                     	;# 
  4897     080C                     	;# 
  4898     080D                     	;# 
  4899     080E                     	;# 
  4900     080E                     	;# 
  4901     080F                     	;# 
  4902     0810                     	;# 
  4903     0810                     	;# 
  4904     0811                     	;# 
  4905     0812                     	;# 
  4906     0812                     	;# 
  4907     0813                     	;# 
  4908     0814                     	;# 
  4909     0815                     	;# 
  4910     0816                     	;# 
  4911     0817                     	;# 
  4912     0818                     	;# 
  4913     0819                     	;# 
  4914     081A                     	;# 
  4915     081A                     	;# 
  4916     081B                     	;# 
  4917     081C                     	;# 
  4918     081C                     	;# 
  4919     081D                     	;# 
  4920     088C                     	;# 
  4921     088D                     	;# 
  4922     088E                     	;# 
  4923     088F                     	;# 
  4924     088F                     	;# 
  4925     0890                     	;# 
  4926     0891                     	;# 
  4927     0892                     	;# 
  4928     0893                     	;# 
  4929     0893                     	;# 
  4930     0894                     	;# 
  4931     0895                     	;# 
  4932     0896                     	;# 
  4933     0897                     	;# 
  4934     0897                     	;# 
  4935     0898                     	;# 
  4936     0899                     	;# 
  4937     0D8C                     	;# 
  4938     0D8C                     	;# 
  4939     0D8D                     	;# 
  4940     0D8E                     	;# 
  4941     0D8F                     	;# 
  4942     0D8F                     	;# 
  4943     0D90                     	;# 
  4944     0D91                     	;# 
  4945     0D92                     	;# 
  4946     0D92                     	;# 
  4947     0D93                     	;# 
  4948     0D94                     	;# 
  4949     0D95                     	;# 
  4950     0D95                     	;# 
  4951     0D96                     	;# 
  4952     0D97                     	;# 
  4953     0D98                     	;# 
  4954     0D99                     	;# 
  4955     0D9A                     	;# 
  4956     0D9B                     	;# 
  4957     0D9C                     	;# 
  4958     0D9D                     	;# 
  4959     0D9E                     	;# 
  4960     0D9E                     	;# 
  4961     0D9F                     	;# 
  4962     0DA0                     	;# 
  4963     0DA1                     	;# 
  4964     0DA1                     	;# 
  4965     0DA2                     	;# 
  4966     0DA3                     	;# 
  4967     0DA4                     	;# 
  4968     0DA4                     	;# 
  4969     0DA5                     	;# 
  4970     0DA6                     	;# 
  4971     0DA7                     	;# 
  4972     0DA7                     	;# 
  4973     0DA8                     	;# 
  4974     0DA9                     	;# 
  4975     0DAA                     	;# 
  4976     0DAB                     	;# 
  4977     0DAC                     	;# 
  4978     0DAD                     	;# 
  4979     0DAE                     	;# 
  4980     0DAF                     	;# 
  4981     0E0F                     	;# 
  4982     0E10                     	;# 
  4983     0E11                     	;# 
  4984     0E12                     	;# 
  4985     0E13                     	;# 
  4986     0E14                     	;# 
  4987     0E15                     	;# 
  4988     0E16                     	;# 
  4989     0E17                     	;# 
  4990     0E17                     	;# 
  4991     0E18                     	;# 
  4992     0E18                     	;# 
  4993     0E19                     	;# 
  4994     0E1A                     	;# 
  4995     0E1B                     	;# 
  4996     0E1B                     	;# 
  4997     0E1C                     	;# 
  4998     0E1D                     	;# 
  4999     0E1E                     	;# 
  5000     0E1E                     	;# 
  5001     0E1F                     	;# 
  5002     0E20                     	;# 
  5003     0E21                     	;# 
  5004     0E22                     	;# 
  5005     0E23                     	;# 
  5006     0E24                     	;# 
  5007     0E25                     	;# 
  5008     0E26                     	;# 
  5009     0E27                     	;# 
  5010     0E28                     	;# 
  5011     0E29                     	;# 
  5012     0E2A                     	;# 
  5013     0E2B                     	;# 
  5014     0E2C                     	;# 
  5015     0E2D                     	;# 
  5016     0E2E                     	;# 
  5017     0E90                     	;# 
  5018     0E91                     	;# 
  5019     0E92                     	;# 
  5020     0E94                     	;# 
  5021     0E95                     	;# 
  5022     0E9C                     	;# 
  5023     0E9D                     	;# 
  5024     0E9E                     	;# 
  5025     0E9F                     	;# 
  5026     0EA0                     	;# 
  5027     0EA1                     	;# 
  5028     0EA2                     	;# 
  5029     0EA3                     	;# 
  5030     0EA4                     	;# 
  5031     0EA5                     	;# 
  5032     0EA6                     	;# 
  5033     0EA7                     	;# 
  5034     0F0F                     	;# 
  5035     0F10                     	;# 
  5036     0F11                     	;# 
  5037     0F12                     	;# 
  5038     0F13                     	;# 
  5039     0F14                     	;# 
  5040     0F15                     	;# 
  5041     0F16                     	;# 
  5042     0F17                     	;# 
  5043     0F18                     	;# 
  5044     0F19                     	;# 
  5045     0F1A                     	;# 
  5046     0F1B                     	;# 
  5047     0F1C                     	;# 
  5048     0F1D                     	;# 
  5049     0F1E                     	;# 
  5050     0F1F                     	;# 
  5051     0F20                     	;# 
  5052     0F21                     	;# 
  5053     0F22                     	;# 
  5054     0F23                     	;# 
  5055     0F24                     	;# 
  5056     0F25                     	;# 
  5057     0F26                     	;# 
  5058     0F27                     	;# 
  5059     0F28                     	;# 
  5060     0F29                     	;# 
  5061     0F2A                     	;# 
  5062     0F2B                     	;# 
  5063     0F2C                     	;# 
  5064     0F2D                     	;# 
  5065     0F2E                     	;# 
  5066     0F2F                     	;# 
  5067     0F30                     	;# 
  5068     0F31                     	;# 
  5069     0F32                     	;# 
  5070     0F33                     	;# 
  5071     0F34                     	;# 
  5072     0F35                     	;# 
  5073     0F36                     	;# 
  5074     0F37                     	;# 
  5075     0FE4                     	;# 
  5076     0FE5                     	;# 
  5077     0FE6                     	;# 
  5078     0FE7                     	;# 
  5079     0FE8                     	;# 
  5080     0FE9                     	;# 
  5081     0FEA                     	;# 
  5082     0FEB                     	;# 
  5083     0FED                     	;# 
  5084     0FEE                     	;# 
  5085     0FEF                     	;# 
  5086     0000                     	;# 
  5087     0001                     	;# 
  5088     0002                     	;# 
  5089     0003                     	;# 
  5090     0004                     	;# 
  5091     0005                     	;# 
  5092     0006                     	;# 
  5093     0007                     	;# 
  5094     0008                     	;# 
  5095     0009                     	;# 
  5096     000A                     	;# 
  5097     000B                     	;# 
  5098     000C                     	;# 
  5099     000D                     	;# 
  5100     000E                     	;# 
  5101     0010                     	;# 
  5102     0011                     	;# 
  5103     0012                     	;# 
  5104     0013                     	;# 
  5105     0014                     	;# 
  5106     0015                     	;# 
  5107     0016                     	;# 
  5108     0016                     	;# 
  5109     0017                     	;# 
  5110     0018                     	;# 
  5111     0019                     	;# 
  5112     001A                     	;# 
  5113     001A                     	;# 
  5114     001B                     	;# 
  5115     001B                     	;# 
  5116     001C                     	;# 
  5117     001D                     	;# 
  5118     001E                     	;# 
  5119     001F                     	;# 
  5120     008C                     	;# 
  5121     008D                     	;# 
  5122     008E                     	;# 
  5123     0090                     	;# 
  5124     0091                     	;# 
  5125     0092                     	;# 
  5126     0093                     	;# 
  5127     0094                     	;# 
  5128     0095                     	;# 
  5129     0096                     	;# 
  5130     0098                     	;# 
  5131     0099                     	;# 
  5132     009A                     	;# 
  5133     009B                     	;# 
  5134     009B                     	;# 
  5135     009C                     	;# 
  5136     009D                     	;# 
  5137     009E                     	;# 
  5138     009F                     	;# 
  5139     010C                     	;# 
  5140     010D                     	;# 
  5141     010E                     	;# 
  5142     0111                     	;# 
  5143     0112                     	;# 
  5144     0113                     	;# 
  5145     0114                     	;# 
  5146     0115                     	;# 
  5147     0116                     	;# 
  5148     0117                     	;# 
  5149     0118                     	;# 
  5150     0119                     	;# 
  5151     011C                     	;# 
  5152     018C                     	;# 
  5153     018D                     	;# 
  5154     018E                     	;# 
  5155     0191                     	;# 
  5156     0191                     	;# 
  5157     0192                     	;# 
  5158     0193                     	;# 
  5159     0193                     	;# 
  5160     0194                     	;# 
  5161     0195                     	;# 
  5162     0196                     	;# 
  5163     0197                     	;# 
  5164     0199                     	;# 
  5165     0199                     	;# 
  5166     0199                     	;# 
  5167     019A                     	;# 
  5168     019A                     	;# 
  5169     019A                     	;# 
  5170     019B                     	;# 
  5171     019B                     	;# 
  5172     019B                     	;# 
  5173     019B                     	;# 
  5174     019B                     	;# 
  5175     019C                     	;# 
  5176     019C                     	;# 
  5177     019C                     	;# 
  5178     019D                     	;# 
  5179     019D                     	;# 
  5180     019D                     	;# 
  5181     019E                     	;# 
  5182     019E                     	;# 
  5183     019E                     	;# 
  5184     019F                     	;# 
  5185     019F                     	;# 
  5186     019F                     	;# 
  5187     019F                     	;# 
  5188     019F                     	;# 
  5189     020C                     	;# 
  5190     020D                     	;# 
  5191     020E                     	;# 
  5192     0211                     	;# 
  5193     0211                     	;# 
  5194     0212                     	;# 
  5195     0212                     	;# 
  5196     0213                     	;# 
  5197     0213                     	;# 
  5198     0214                     	;# 
  5199     0214                     	;# 
  5200     0215                     	;# 
  5201     0215                     	;# 
  5202     0215                     	;# 
  5203     0215                     	;# 
  5204     0216                     	;# 
  5205     0216                     	;# 
  5206     0217                     	;# 
  5207     0217                     	;# 
  5208     028C                     	;# 
  5209     028D                     	;# 
  5210     028E                     	;# 
  5211     0291                     	;# 
  5212     0291                     	;# 
  5213     0292                     	;# 
  5214     0293                     	;# 
  5215     0294                     	;# 
  5216     0298                     	;# 
  5217     0298                     	;# 
  5218     0299                     	;# 
  5219     029A                     	;# 
  5220     029B                     	;# 
  5221     029E                     	;# 
  5222     030C                     	;# 
  5223     030D                     	;# 
  5224     030E                     	;# 
  5225     038C                     	;# 
  5226     038D                     	;# 
  5227     038E                     	;# 
  5228     0391                     	;# 
  5229     0392                     	;# 
  5230     0393                     	;# 
  5231     0394                     	;# 
  5232     0395                     	;# 
  5233     0396                     	;# 
  5234     0397                     	;# 
  5235     0398                     	;# 
  5236     0399                     	;# 
  5237     040E                     	;# 
  5238     0413                     	;# 
  5239     0413                     	;# 
  5240     0414                     	;# 
  5241     0414                     	;# 
  5242     0415                     	;# 
  5243     0416                     	;# 
  5244     0417                     	;# 
  5245     0418                     	;# 
  5246     041A                     	;# 
  5247     041A                     	;# 
  5248     041B                     	;# 
  5249     041B                     	;# 
  5250     041C                     	;# 
  5251     041D                     	;# 
  5252     041E                     	;# 
  5253     041F                     	;# 
  5254     0493                     	;# 
  5255     0494                     	;# 
  5256     0495                     	;# 
  5257     0496                     	;# 
  5258     049A                     	;# 
  5259     049B                     	;# 
  5260     049C                     	;# 
  5261     049D                     	;# 
  5262     058C                     	;# 
  5263     058C                     	;# 
  5264     058D                     	;# 
  5265     058E                     	;# 
  5266     058E                     	;# 
  5267     058F                     	;# 
  5268     0590                     	;# 
  5269     0590                     	;# 
  5270     0591                     	;# 
  5271     0592                     	;# 
  5272     0592                     	;# 
  5273     0593                     	;# 
  5274     0594                     	;# 
  5275     0594                     	;# 
  5276     0595                     	;# 
  5277     0596                     	;# 
  5278     0596                     	;# 
  5279     0597                     	;# 
  5280     0598                     	;# 
  5281     0599                     	;# 
  5282     059A                     	;# 
  5283     059B                     	;# 
  5284     059B                     	;# 
  5285     059C                     	;# 
  5286     059D                     	;# 
  5287     060C                     	;# 
  5288     060C                     	;# 
  5289     060D                     	;# 
  5290     060E                     	;# 
  5291     060F                     	;# 
  5292     060F                     	;# 
  5293     0610                     	;# 
  5294     0611                     	;# 
  5295     0612                     	;# 
  5296     0613                     	;# 
  5297     0614                     	;# 
  5298     0617                     	;# 
  5299     0617                     	;# 
  5300     0618                     	;# 
  5301     0619                     	;# 
  5302     061A                     	;# 
  5303     061A                     	;# 
  5304     061B                     	;# 
  5305     061C                     	;# 
  5306     0691                     	;# 
  5307     0692                     	;# 
  5308     0693                     	;# 
  5309     0694                     	;# 
  5310     0695                     	;# 
  5311     0696                     	;# 
  5312     0697                     	;# 
  5313     0699                     	;# 
  5314     069A                     	;# 
  5315     0711                     	;# 
  5316     0712                     	;# 
  5317     0713                     	;# 
  5318     0714                     	;# 
  5319     0715                     	;# 
  5320     0718                     	;# 
  5321     0718                     	;# 
  5322     0719                     	;# 
  5323     071A                     	;# 
  5324     071A                     	;# 
  5325     071B                     	;# 
  5326     071C                     	;# 
  5327     071D                     	;# 
  5328     0791                     	;# 
  5329     0791                     	;# 
  5330     0792                     	;# 
  5331     0793                     	;# 
  5332     0793                     	;# 
  5333     0794                     	;# 
  5334     0795                     	;# 
  5335     0795                     	;# 
  5336     0796                     	;# 
  5337     0797                     	;# 
  5338     0797                     	;# 
  5339     0798                     	;# 
  5340     0799                     	;# 
  5341     079A                     	;# 
  5342     080C                     	;# 
  5343     080C                     	;# 
  5344     080D                     	;# 
  5345     080E                     	;# 
  5346     080E                     	;# 
  5347     080F                     	;# 
  5348     0810                     	;# 
  5349     0810                     	;# 
  5350     0811                     	;# 
  5351     0812                     	;# 
  5352     0812                     	;# 
  5353     0813                     	;# 
  5354     0814                     	;# 
  5355     0815                     	;# 
  5356     0816                     	;# 
  5357     0817                     	;# 
  5358     0818                     	;# 
  5359     0819                     	;# 
  5360     081A                     	;# 
  5361     081A                     	;# 
  5362     081B                     	;# 
  5363     081C                     	;# 
  5364     081C                     	;# 
  5365     081D                     	;# 
  5366     088C                     	;# 
  5367     088D                     	;# 
  5368     088E                     	;# 
  5369     088F                     	;# 
  5370     088F                     	;# 
  5371     0890                     	;# 
  5372     0891                     	;# 
  5373     0892                     	;# 
  5374     0893                     	;# 
  5375     0893                     	;# 
  5376     0894                     	;# 
  5377     0895                     	;# 
  5378     0896                     	;# 
  5379     0897                     	;# 
  5380     0897                     	;# 
  5381     0898                     	;# 
  5382     0899                     	;# 
  5383     0D8C                     	;# 
  5384     0D8C                     	;# 
  5385     0D8D                     	;# 
  5386     0D8E                     	;# 
  5387     0D8F                     	;# 
  5388     0D8F                     	;# 
  5389     0D90                     	;# 
  5390     0D91                     	;# 
  5391     0D92                     	;# 
  5392     0D92                     	;# 
  5393     0D93                     	;# 
  5394     0D94                     	;# 
  5395     0D95                     	;# 
  5396     0D95                     	;# 
  5397     0D96                     	;# 
  5398     0D97                     	;# 
  5399     0D98                     	;# 
  5400     0D99                     	;# 
  5401     0D9A                     	;# 
  5402     0D9B                     	;# 
  5403     0D9C                     	;# 
  5404     0D9D                     	;# 
  5405     0D9E                     	;# 
  5406     0D9E                     	;# 
  5407     0D9F                     	;# 
  5408     0DA0                     	;# 
  5409     0DA1                     	;# 
  5410     0DA1                     	;# 
  5411     0DA2                     	;# 
  5412     0DA3                     	;# 
  5413     0DA4                     	;# 
  5414     0DA4                     	;# 
  5415     0DA5                     	;# 
  5416     0DA6                     	;# 
  5417     0DA7                     	;# 
  5418     0DA7                     	;# 
  5419     0DA8                     	;# 
  5420     0DA9                     	;# 
  5421     0DAA                     	;# 
  5422     0DAB                     	;# 
  5423     0DAC                     	;# 
  5424     0DAD                     	;# 
  5425     0DAE                     	;# 
  5426     0DAF                     	;# 
  5427     0E0F                     	;# 
  5428     0E10                     	;# 
  5429     0E11                     	;# 
  5430     0E12                     	;# 
  5431     0E13                     	;# 
  5432     0E14                     	;# 
  5433     0E15                     	;# 
  5434     0E16                     	;# 
  5435     0E17                     	;# 
  5436     0E17                     	;# 
  5437     0E18                     	;# 
  5438     0E18                     	;# 
  5439     0E19                     	;# 
  5440     0E1A                     	;# 
  5441     0E1B                     	;# 
  5442     0E1B                     	;# 
  5443     0E1C                     	;# 
  5444     0E1D                     	;# 
  5445     0E1E                     	;# 
  5446     0E1E                     	;# 
  5447     0E1F                     	;# 
  5448     0E20                     	;# 
  5449     0E21                     	;# 
  5450     0E22                     	;# 
  5451     0E23                     	;# 
  5452     0E24                     	;# 
  5453     0E25                     	;# 
  5454     0E26                     	;# 
  5455     0E27                     	;# 
  5456     0E28                     	;# 
  5457     0E29                     	;# 
  5458     0E2A                     	;# 
  5459     0E2B                     	;# 
  5460     0E2C                     	;# 
  5461     0E2D                     	;# 
  5462     0E2E                     	;# 
  5463     0E90                     	;# 
  5464     0E91                     	;# 
  5465     0E92                     	;# 
  5466     0E94                     	;# 
  5467     0E95                     	;# 
  5468     0E9C                     	;# 
  5469     0E9D                     	;# 
  5470     0E9E                     	;# 
  5471     0E9F                     	;# 
  5472     0EA0                     	;# 
  5473     0EA1                     	;# 
  5474     0EA2                     	;# 
  5475     0EA3                     	;# 
  5476     0EA4                     	;# 
  5477     0EA5                     	;# 
  5478     0EA6                     	;# 
  5479     0EA7                     	;# 
  5480     0F0F                     	;# 
  5481     0F10                     	;# 
  5482     0F11                     	;# 
  5483     0F12                     	;# 
  5484     0F13                     	;# 
  5485     0F14                     	;# 
  5486     0F15                     	;# 
  5487     0F16                     	;# 
  5488     0F17                     	;# 
  5489     0F18                     	;# 
  5490     0F19                     	;# 
  5491     0F1A                     	;# 
  5492     0F1B                     	;# 
  5493     0F1C                     	;# 
  5494     0F1D                     	;# 
  5495     0F1E                     	;# 
  5496     0F1F                     	;# 
  5497     0F20                     	;# 
  5498     0F21                     	;# 
  5499     0F22                     	;# 
  5500     0F23                     	;# 
  5501     0F24                     	;# 
  5502     0F25                     	;# 
  5503     0F26                     	;# 
  5504     0F27                     	;# 
  5505     0F28                     	;# 
  5506     0F29                     	;# 
  5507     0F2A                     	;# 
  5508     0F2B                     	;# 
  5509     0F2C                     	;# 
  5510     0F2D                     	;# 
  5511     0F2E                     	;# 
  5512     0F2F                     	;# 
  5513     0F30                     	;# 
  5514     0F31                     	;# 
  5515     0F32                     	;# 
  5516     0F33                     	;# 
  5517     0F34                     	;# 
  5518     0F35                     	;# 
  5519     0F36                     	;# 
  5520     0F37                     	;# 
  5521     0FE4                     	;# 
  5522     0FE5                     	;# 
  5523     0FE6                     	;# 
  5524     0FE7                     	;# 
  5525     0FE8                     	;# 
  5526     0FE9                     	;# 
  5527     0FEA                     	;# 
  5528     0FEB                     	;# 
  5529     0FED                     	;# 
  5530     0FEE                     	;# 
  5531     0FEF                     	;# 
  5532     0000                     	;# 
  5533     0001                     	;# 
  5534     0002                     	;# 
  5535     0003                     	;# 
  5536     0004                     	;# 
  5537     0005                     	;# 
  5538     0006                     	;# 
  5539     0007                     	;# 
  5540     0008                     	;# 
  5541     0009                     	;# 
  5542     000A                     	;# 
  5543     000B                     	;# 
  5544     000C                     	;# 
  5545     000D                     	;# 
  5546     000E                     	;# 
  5547     0010                     	;# 
  5548     0011                     	;# 
  5549     0012                     	;# 
  5550     0013                     	;# 
  5551     0014                     	;# 
  5552     0015                     	;# 
  5553     0016                     	;# 
  5554     0016                     	;# 
  5555     0017                     	;# 
  5556     0018                     	;# 
  5557     0019                     	;# 
  5558     001A                     	;# 
  5559     001A                     	;# 
  5560     001B                     	;# 
  5561     001B                     	;# 
  5562     001C                     	;# 
  5563     001D                     	;# 
  5564     001E                     	;# 
  5565     001F                     	;# 
  5566     008C                     	;# 
  5567     008D                     	;# 
  5568     008E                     	;# 
  5569     0090                     	;# 
  5570     0091                     	;# 
  5571     0092                     	;# 
  5572     0093                     	;# 
  5573     0094                     	;# 
  5574     0095                     	;# 
  5575     0096                     	;# 
  5576     0098                     	;# 
  5577     0099                     	;# 
  5578     009A                     	;# 
  5579     009B                     	;# 
  5580     009B                     	;# 
  5581     009C                     	;# 
  5582     009D                     	;# 
  5583     009E                     	;# 
  5584     009F                     	;# 
  5585     010C                     	;# 
  5586     010D                     	;# 
  5587     010E                     	;# 
  5588     0111                     	;# 
  5589     0112                     	;# 
  5590     0113                     	;# 
  5591     0114                     	;# 
  5592     0115                     	;# 
  5593     0116                     	;# 
  5594     0117                     	;# 
  5595     0118                     	;# 
  5596     0119                     	;# 
  5597     011C                     	;# 
  5598     018C                     	;# 
  5599     018D                     	;# 
  5600     018E                     	;# 
  5601     0191                     	;# 
  5602     0191                     	;# 
  5603     0192                     	;# 
  5604     0193                     	;# 
  5605     0193                     	;# 
  5606     0194                     	;# 
  5607     0195                     	;# 
  5608     0196                     	;# 
  5609     0197                     	;# 
  5610     0199                     	;# 
  5611     0199                     	;# 
  5612     0199                     	;# 
  5613     019A                     	;# 
  5614     019A                     	;# 
  5615     019A                     	;# 
  5616     019B                     	;# 
  5617     019B                     	;# 
  5618     019B                     	;# 
  5619     019B                     	;# 
  5620     019B                     	;# 
  5621     019C                     	;# 
  5622     019C                     	;# 
  5623     019C                     	;# 
  5624     019D                     	;# 
  5625     019D                     	;# 
  5626     019D                     	;# 
  5627     019E                     	;# 
  5628     019E                     	;# 
  5629     019E                     	;# 
  5630     019F                     	;# 
  5631     019F                     	;# 
  5632     019F                     	;# 
  5633     019F                     	;# 
  5634     019F                     	;# 
  5635     020C                     	;# 
  5636     020D                     	;# 
  5637     020E                     	;# 
  5638     0211                     	;# 
  5639     0211                     	;# 
  5640     0212                     	;# 
  5641     0212                     	;# 
  5642     0213                     	;# 
  5643     0213                     	;# 
  5644     0214                     	;# 
  5645     0214                     	;# 
  5646     0215                     	;# 
  5647     0215                     	;# 
  5648     0215                     	;# 
  5649     0215                     	;# 
  5650     0216                     	;# 
  5651     0216                     	;# 
  5652     0217                     	;# 
  5653     0217                     	;# 
  5654     028C                     	;# 
  5655     028D                     	;# 
  5656     028E                     	;# 
  5657     0291                     	;# 
  5658     0291                     	;# 
  5659     0292                     	;# 
  5660     0293                     	;# 
  5661     0294                     	;# 
  5662     0298                     	;# 
  5663     0298                     	;# 
  5664     0299                     	;# 
  5665     029A                     	;# 
  5666     029B                     	;# 
  5667     029E                     	;# 
  5668     030C                     	;# 
  5669     030D                     	;# 
  5670     030E                     	;# 
  5671     038C                     	;# 
  5672     038D                     	;# 
  5673     038E                     	;# 
  5674     0391                     	;# 
  5675     0392                     	;# 
  5676     0393                     	;# 
  5677     0394                     	;# 
  5678     0395                     	;# 
  5679     0396                     	;# 
  5680     0397                     	;# 
  5681     0398                     	;# 
  5682     0399                     	;# 
  5683     040E                     	;# 
  5684     0413                     	;# 
  5685     0413                     	;# 
  5686     0414                     	;# 
  5687     0414                     	;# 
  5688     0415                     	;# 
  5689     0416                     	;# 
  5690     0417                     	;# 
  5691     0418                     	;# 
  5692     041A                     	;# 
  5693     041A                     	;# 
  5694     041B                     	;# 
  5695     041B                     	;# 
  5696     041C                     	;# 
  5697     041D                     	;# 
  5698     041E                     	;# 
  5699     041F                     	;# 
  5700     0493                     	;# 
  5701     0494                     	;# 
  5702     0495                     	;# 
  5703     0496                     	;# 
  5704     049A                     	;# 
  5705     049B                     	;# 
  5706     049C                     	;# 
  5707     049D                     	;# 
  5708     058C                     	;# 
  5709     058C                     	;# 
  5710     058D                     	;# 
  5711     058E                     	;# 
  5712     058E                     	;# 
  5713     058F                     	;# 
  5714     0590                     	;# 
  5715     0590                     	;# 
  5716     0591                     	;# 
  5717     0592                     	;# 
  5718     0592                     	;# 
  5719     0593                     	;# 
  5720     0594                     	;# 
  5721     0594                     	;# 
  5722     0595                     	;# 
  5723     0596                     	;# 
  5724     0596                     	;# 
  5725     0597                     	;# 
  5726     0598                     	;# 
  5727     0599                     	;# 
  5728     059A                     	;# 
  5729     059B                     	;# 
  5730     059B                     	;# 
  5731     059C                     	;# 
  5732     059D                     	;# 
  5733     060C                     	;# 
  5734     060C                     	;# 
  5735     060D                     	;# 
  5736     060E                     	;# 
  5737     060F                     	;# 
  5738     060F                     	;# 
  5739     0610                     	;# 
  5740     0611                     	;# 
  5741     0612                     	;# 
  5742     0613                     	;# 
  5743     0614                     	;# 
  5744     0617                     	;# 
  5745     0617                     	;# 
  5746     0618                     	;# 
  5747     0619                     	;# 
  5748     061A                     	;# 
  5749     061A                     	;# 
  5750     061B                     	;# 
  5751     061C                     	;# 
  5752     0691                     	;# 
  5753     0692                     	;# 
  5754     0693                     	;# 
  5755     0694                     	;# 
  5756     0695                     	;# 
  5757     0696                     	;# 
  5758     0697                     	;# 
  5759     0699                     	;# 
  5760     069A                     	;# 
  5761     0711                     	;# 
  5762     0712                     	;# 
  5763     0713                     	;# 
  5764     0714                     	;# 
  5765     0715                     	;# 
  5766     0718                     	;# 
  5767     0718                     	;# 
  5768     0719                     	;# 
  5769     071A                     	;# 
  5770     071A                     	;# 
  5771     071B                     	;# 
  5772     071C                     	;# 
  5773     071D                     	;# 
  5774     0791                     	;# 
  5775     0791                     	;# 
  5776     0792                     	;# 
  5777     0793                     	;# 
  5778     0793                     	;# 
  5779     0794                     	;# 
  5780     0795                     	;# 
  5781     0795                     	;# 
  5782     0796                     	;# 
  5783     0797                     	;# 
  5784     0797                     	;# 
  5785     0798                     	;# 
  5786     0799                     	;# 
  5787     079A                     	;# 
  5788     080C                     	;# 
  5789     080C                     	;# 
  5790     080D                     	;# 
  5791     080E                     	;# 
  5792     080E                     	;# 
  5793     080F                     	;# 
  5794     0810                     	;# 
  5795     0810                     	;# 
  5796     0811                     	;# 
  5797     0812                     	;# 
  5798     0812                     	;# 
  5799     0813                     	;# 
  5800     0814                     	;# 
  5801     0815                     	;# 
  5802     0816                     	;# 
  5803     0817                     	;# 
  5804     0818                     	;# 
  5805     0819                     	;# 
  5806     081A                     	;# 
  5807     081A                     	;# 
  5808     081B                     	;# 
  5809     081C                     	;# 
  5810     081C                     	;# 
  5811     081D                     	;# 
  5812     088C                     	;# 
  5813     088D                     	;# 
  5814     088E                     	;# 
  5815     088F                     	;# 
  5816     088F                     	;# 
  5817     0890                     	;# 
  5818     0891                     	;# 
  5819     0892                     	;# 
  5820     0893                     	;# 
  5821     0893                     	;# 
  5822     0894                     	;# 
  5823     0895                     	;# 
  5824     0896                     	;# 
  5825     0897                     	;# 
  5826     0897                     	;# 
  5827     0898                     	;# 
  5828     0899                     	;# 
  5829     0D8C                     	;# 
  5830     0D8C                     	;# 
  5831     0D8D                     	;# 
  5832     0D8E                     	;# 
  5833     0D8F                     	;# 
  5834     0D8F                     	;# 
  5835     0D90                     	;# 
  5836     0D91                     	;# 
  5837     0D92                     	;# 
  5838     0D92                     	;# 
  5839     0D93                     	;# 
  5840     0D94                     	;# 
  5841     0D95                     	;# 
  5842     0D95                     	;# 
  5843     0D96                     	;# 
  5844     0D97                     	;# 
  5845     0D98                     	;# 
  5846     0D99                     	;# 
  5847     0D9A                     	;# 
  5848     0D9B                     	;# 
  5849     0D9C                     	;# 
  5850     0D9D                     	;# 
  5851     0D9E                     	;# 
  5852     0D9E                     	;# 
  5853     0D9F                     	;# 
  5854     0DA0                     	;# 
  5855     0DA1                     	;# 
  5856     0DA1                     	;# 
  5857     0DA2                     	;# 
  5858     0DA3                     	;# 
  5859     0DA4                     	;# 
  5860     0DA4                     	;# 
  5861     0DA5                     	;# 
  5862     0DA6                     	;# 
  5863     0DA7                     	;# 
  5864     0DA7                     	;# 
  5865     0DA8                     	;# 
  5866     0DA9                     	;# 
  5867     0DAA                     	;# 
  5868     0DAB                     	;# 
  5869     0DAC                     	;# 
  5870     0DAD                     	;# 
  5871     0DAE                     	;# 
  5872     0DAF                     	;# 
  5873     0E0F                     	;# 
  5874     0E10                     	;# 
  5875     0E11                     	;# 
  5876     0E12                     	;# 
  5877     0E13                     	;# 
  5878     0E14                     	;# 
  5879     0E15                     	;# 
  5880     0E16                     	;# 
  5881     0E17                     	;# 
  5882     0E17                     	;# 
  5883     0E18                     	;# 
  5884     0E18                     	;# 
  5885     0E19                     	;# 
  5886     0E1A                     	;# 
  5887     0E1B                     	;# 
  5888     0E1B                     	;# 
  5889     0E1C                     	;# 
  5890     0E1D                     	;# 
  5891     0E1E                     	;# 
  5892     0E1E                     	;# 
  5893     0E1F                     	;# 
  5894     0E20                     	;# 
  5895     0E21                     	;# 
  5896     0E22                     	;# 
  5897     0E23                     	;# 
  5898     0E24                     	;# 
  5899     0E25                     	;# 
  5900     0E26                     	;# 
  5901     0E27                     	;# 
  5902     0E28                     	;# 
  5903     0E29                     	;# 
  5904     0E2A                     	;# 
  5905     0E2B                     	;# 
  5906     0E2C                     	;# 
  5907     0E2D                     	;# 
  5908     0E2E                     	;# 
  5909     0E90                     	;# 
  5910     0E91                     	;# 
  5911     0E92                     	;# 
  5912     0E94                     	;# 
  5913     0E95                     	;# 
  5914     0E9C                     	;# 
  5915     0E9D                     	;# 
  5916     0E9E                     	;# 
  5917     0E9F                     	;# 
  5918     0EA0                     	;# 
  5919     0EA1                     	;# 
  5920     0EA2                     	;# 
  5921     0EA3                     	;# 
  5922     0EA4                     	;# 
  5923     0EA5                     	;# 
  5924     0EA6                     	;# 
  5925     0EA7                     	;# 
  5926     0F0F                     	;# 
  5927     0F10                     	;# 
  5928     0F11                     	;# 
  5929     0F12                     	;# 
  5930     0F13                     	;# 
  5931     0F14                     	;# 
  5932     0F15                     	;# 
  5933     0F16                     	;# 
  5934     0F17                     	;# 
  5935     0F18                     	;# 
  5936     0F19                     	;# 
  5937     0F1A                     	;# 
  5938     0F1B                     	;# 
  5939     0F1C                     	;# 
  5940     0F1D                     	;# 
  5941     0F1E                     	;# 
  5942     0F1F                     	;# 
  5943     0F20                     	;# 
  5944     0F21                     	;# 
  5945     0F22                     	;# 
  5946     0F23                     	;# 
  5947     0F24                     	;# 
  5948     0F25                     	;# 
  5949     0F26                     	;# 
  5950     0F27                     	;# 
  5951     0F28                     	;# 
  5952     0F29                     	;# 
  5953     0F2A                     	;# 
  5954     0F2B                     	;# 
  5955     0F2C                     	;# 
  5956     0F2D                     	;# 
  5957     0F2E                     	;# 
  5958     0F2F                     	;# 
  5959     0F30                     	;# 
  5960     0F31                     	;# 
  5961     0F32                     	;# 
  5962     0F33                     	;# 
  5963     0F34                     	;# 
  5964     0F35                     	;# 
  5965     0F36                     	;# 
  5966     0F37                     	;# 
  5967     0FE4                     	;# 
  5968     0FE5                     	;# 
  5969     0FE6                     	;# 
  5970     0FE7                     	;# 
  5971     0FE8                     	;# 
  5972     0FE9                     	;# 
  5973     0FEA                     	;# 
  5974     0FEB                     	;# 
  5975     0FED                     	;# 
  5976     0FEE                     	;# 
  5977     0FEF                     	;# 
  5978     0000                     	;# 
  5979     0001                     	;# 
  5980     0002                     	;# 
  5981     0003                     	;# 
  5982     0004                     	;# 
  5983     0005                     	;# 
  5984     0006                     	;# 
  5985     0007                     	;# 
  5986     0008                     	;# 
  5987     0009                     	;# 
  5988     000A                     	;# 
  5989     000B                     	;# 
  5990     000C                     	;# 
  5991     000D                     	;# 
  5992     000E                     	;# 
  5993     0010                     	;# 
  5994     0011                     	;# 
  5995     0012                     	;# 
  5996     0013                     	;# 
  5997     0014                     	;# 
  5998     0015                     	;# 
  5999     0016                     	;# 
  6000     0016                     	;# 
  6001     0017                     	;# 
  6002     0018                     	;# 
  6003     0019                     	;# 
  6004     001A                     	;# 
  6005     001A                     	;# 
  6006     001B                     	;# 
  6007     001B                     	;# 
  6008     001C                     	;# 
  6009     001D                     	;# 
  6010     001E                     	;# 
  6011     001F                     	;# 
  6012     008C                     	;# 
  6013     008D                     	;# 
  6014     008E                     	;# 
  6015     0090                     	;# 
  6016     0091                     	;# 
  6017     0092                     	;# 
  6018     0093                     	;# 
  6019     0094                     	;# 
  6020     0095                     	;# 
  6021     0096                     	;# 
  6022     0098                     	;# 
  6023     0099                     	;# 
  6024     009A                     	;# 
  6025     009B                     	;# 
  6026     009B                     	;# 
  6027     009C                     	;# 
  6028     009D                     	;# 
  6029     009E                     	;# 
  6030     009F                     	;# 
  6031     010C                     	;# 
  6032     010D                     	;# 
  6033     010E                     	;# 
  6034     0111                     	;# 
  6035     0112                     	;# 
  6036     0113                     	;# 
  6037     0114                     	;# 
  6038     0115                     	;# 
  6039     0116                     	;# 
  6040     0117                     	;# 
  6041     0118                     	;# 
  6042     0119                     	;# 
  6043     011C                     	;# 
  6044     018C                     	;# 
  6045     018D                     	;# 
  6046     018E                     	;# 
  6047     0191                     	;# 
  6048     0191                     	;# 
  6049     0192                     	;# 
  6050     0193                     	;# 
  6051     0193                     	;# 
  6052     0194                     	;# 
  6053     0195                     	;# 
  6054     0196                     	;# 
  6055     0197                     	;# 
  6056     0199                     	;# 
  6057     0199                     	;# 
  6058     0199                     	;# 
  6059     019A                     	;# 
  6060     019A                     	;# 
  6061     019A                     	;# 
  6062     019B                     	;# 
  6063     019B                     	;# 
  6064     019B                     	;# 
  6065     019B                     	;# 
  6066     019B                     	;# 
  6067     019C                     	;# 
  6068     019C                     	;# 
  6069     019C                     	;# 
  6070     019D                     	;# 
  6071     019D                     	;# 
  6072     019D                     	;# 
  6073     019E                     	;# 
  6074     019E                     	;# 
  6075     019E                     	;# 
  6076     019F                     	;# 
  6077     019F                     	;# 
  6078     019F                     	;# 
  6079     019F                     	;# 
  6080     019F                     	;# 
  6081     020C                     	;# 
  6082     020D                     	;# 
  6083     020E                     	;# 
  6084     0211                     	;# 
  6085     0211                     	;# 
  6086     0212                     	;# 
  6087     0212                     	;# 
  6088     0213                     	;# 
  6089     0213                     	;# 
  6090     0214                     	;# 
  6091     0214                     	;# 
  6092     0215                     	;# 
  6093     0215                     	;# 
  6094     0215                     	;# 
  6095     0215                     	;# 
  6096     0216                     	;# 
  6097     0216                     	;# 
  6098     0217                     	;# 
  6099     0217                     	;# 
  6100     028C                     	;# 
  6101     028D                     	;# 
  6102     028E                     	;# 
  6103     0291                     	;# 
  6104     0291                     	;# 
  6105     0292                     	;# 
  6106     0293                     	;# 
  6107     0294                     	;# 
  6108     0298                     	;# 
  6109     0298                     	;# 
  6110     0299                     	;# 
  6111     029A                     	;# 
  6112     029B                     	;# 
  6113     029E                     	;# 
  6114     030C                     	;# 
  6115     030D                     	;# 
  6116     030E                     	;# 
  6117     038C                     	;# 
  6118     038D                     	;# 
  6119     038E                     	;# 
  6120     0391                     	;# 
  6121     0392                     	;# 
  6122     0393                     	;# 
  6123     0394                     	;# 
  6124     0395                     	;# 
  6125     0396                     	;# 
  6126     0397                     	;# 
  6127     0398                     	;# 
  6128     0399                     	;# 
  6129     040E                     	;# 
  6130     0413                     	;# 
  6131     0413                     	;# 
  6132     0414                     	;# 
  6133     0414                     	;# 
  6134     0415                     	;# 
  6135     0416                     	;# 
  6136     0417                     	;# 
  6137     0418                     	;# 
  6138     041A                     	;# 
  6139     041A                     	;# 
  6140     041B                     	;# 
  6141     041B                     	;# 
  6142     041C                     	;# 
  6143     041D                     	;# 
  6144     041E                     	;# 
  6145     041F                     	;# 
  6146     0493                     	;# 
  6147     0494                     	;# 
  6148     0495                     	;# 
  6149     0496                     	;# 
  6150     049A                     	;# 
  6151     049B                     	;# 
  6152     049C                     	;# 
  6153     049D                     	;# 
  6154     058C                     	;# 
  6155     058C                     	;# 
  6156     058D                     	;# 
  6157     058E                     	;# 
  6158     058E                     	;# 
  6159     058F                     	;# 
  6160     0590                     	;# 
  6161     0590                     	;# 
  6162     0591                     	;# 
  6163     0592                     	;# 
  6164     0592                     	;# 
  6165     0593                     	;# 
  6166     0594                     	;# 
  6167     0594                     	;# 
  6168     0595                     	;# 
  6169     0596                     	;# 
  6170     0596                     	;# 
  6171     0597                     	;# 
  6172     0598                     	;# 
  6173     0599                     	;# 
  6174     059A                     	;# 
  6175     059B                     	;# 
  6176     059B                     	;# 
  6177     059C                     	;# 
  6178     059D                     	;# 
  6179     060C                     	;# 
  6180     060C                     	;# 
  6181     060D                     	;# 
  6182     060E                     	;# 
  6183     060F                     	;# 
  6184     060F                     	;# 
  6185     0610                     	;# 
  6186     0611                     	;# 
  6187     0612                     	;# 
  6188     0613                     	;# 
  6189     0614                     	;# 
  6190     0617                     	;# 
  6191     0617                     	;# 
  6192     0618                     	;# 
  6193     0619                     	;# 
  6194     061A                     	;# 
  6195     061A                     	;# 
  6196     061B                     	;# 
  6197     061C                     	;# 
  6198     0691                     	;# 
  6199     0692                     	;# 
  6200     0693                     	;# 
  6201     0694                     	;# 
  6202     0695                     	;# 
  6203     0696                     	;# 
  6204     0697                     	;# 
  6205     0699                     	;# 
  6206     069A                     	;# 
  6207     0711                     	;# 
  6208     0712                     	;# 
  6209     0713                     	;# 
  6210     0714                     	;# 
  6211     0715                     	;# 
  6212     0718                     	;# 
  6213     0718                     	;# 
  6214     0719                     	;# 
  6215     071A                     	;# 
  6216     071A                     	;# 
  6217     071B                     	;# 
  6218     071C                     	;# 
  6219     071D                     	;# 
  6220     0791                     	;# 
  6221     0791                     	;# 
  6222     0792                     	;# 
  6223     0793                     	;# 
  6224     0793                     	;# 
  6225     0794                     	;# 
  6226     0795                     	;# 
  6227     0795                     	;# 
  6228     0796                     	;# 
  6229     0797                     	;# 
  6230     0797                     	;# 
  6231     0798                     	;# 
  6232     0799                     	;# 
  6233     079A                     	;# 
  6234     080C                     	;# 
  6235     080C                     	;# 
  6236     080D                     	;# 
  6237     080E                     	;# 
  6238     080E                     	;# 
  6239     080F                     	;# 
  6240     0810                     	;# 
  6241     0810                     	;# 
  6242     0811                     	;# 
  6243     0812                     	;# 
  6244     0812                     	;# 
  6245     0813                     	;# 
  6246     0814                     	;# 
  6247     0815                     	;# 
  6248     0816                     	;# 
  6249     0817                     	;# 
  6250     0818                     	;# 
  6251     0819                     	;# 
  6252     081A                     	;# 
  6253     081A                     	;# 
  6254     081B                     	;# 
  6255     081C                     	;# 
  6256     081C                     	;# 
  6257     081D                     	;# 
  6258     088C                     	;# 
  6259     088D                     	;# 
  6260     088E                     	;# 
  6261     088F                     	;# 
  6262     088F                     	;# 
  6263     0890                     	;# 
  6264     0891                     	;# 
  6265     0892                     	;# 
  6266     0893                     	;# 
  6267     0893                     	;# 
  6268     0894                     	;# 
  6269     0895                     	;# 
  6270     0896                     	;# 
  6271     0897                     	;# 
  6272     0897                     	;# 
  6273     0898                     	;# 
  6274     0899                     	;# 
  6275     0D8C                     	;# 
  6276     0D8C                     	;# 
  6277     0D8D                     	;# 
  6278     0D8E                     	;# 
  6279     0D8F                     	;# 
  6280     0D8F                     	;# 
  6281     0D90                     	;# 
  6282     0D91                     	;# 
  6283     0D92                     	;# 
  6284     0D92                     	;# 
  6285     0D93                     	;# 
  6286     0D94                     	;# 
  6287     0D95                     	;# 
  6288     0D95                     	;# 
  6289     0D96                     	;# 
  6290     0D97                     	;# 
  6291     0D98                     	;# 
  6292     0D99                     	;# 
  6293     0D9A                     	;# 
  6294     0D9B                     	;# 
  6295     0D9C                     	;# 
  6296     0D9D                     	;# 
  6297     0D9E                     	;# 
  6298     0D9E                     	;# 
  6299     0D9F                     	;# 
  6300     0DA0                     	;# 
  6301     0DA1                     	;# 
  6302     0DA1                     	;# 
  6303     0DA2                     	;# 
  6304     0DA3                     	;# 
  6305     0DA4                     	;# 
  6306     0DA4                     	;# 
  6307     0DA5                     	;# 
  6308     0DA6                     	;# 
  6309     0DA7                     	;# 
  6310     0DA7                     	;# 
  6311     0DA8                     	;# 
  6312     0DA9                     	;# 
  6313     0DAA                     	;# 
  6314     0DAB                     	;# 
  6315     0DAC                     	;# 
  6316     0DAD                     	;# 
  6317     0DAE                     	;# 
  6318     0DAF                     	;# 
  6319     0E0F                     	;# 
  6320     0E10                     	;# 
  6321     0E11                     	;# 
  6322     0E12                     	;# 
  6323     0E13                     	;# 
  6324     0E14                     	;# 
  6325     0E15                     	;# 
  6326     0E16                     	;# 
  6327     0E17                     	;# 
  6328     0E17                     	;# 
  6329     0E18                     	;# 
  6330     0E18                     	;# 
  6331     0E19                     	;# 
  6332     0E1A                     	;# 
  6333     0E1B                     	;# 
  6334     0E1B                     	;# 
  6335     0E1C                     	;# 
  6336     0E1D                     	;# 
  6337     0E1E                     	;# 
  6338     0E1E                     	;# 
  6339     0E1F                     	;# 
  6340     0E20                     	;# 
  6341     0E21                     	;# 
  6342     0E22                     	;# 
  6343     0E23                     	;# 
  6344     0E24                     	;# 
  6345     0E25                     	;# 
  6346     0E26                     	;# 
  6347     0E27                     	;# 
  6348     0E28                     	;# 
  6349     0E29                     	;# 
  6350     0E2A                     	;# 
  6351     0E2B                     	;# 
  6352     0E2C                     	;# 
  6353     0E2D                     	;# 
  6354     0E2E                     	;# 
  6355     0E90                     	;# 
  6356     0E91                     	;# 
  6357     0E92                     	;# 
  6358     0E94                     	;# 
  6359     0E95                     	;# 
  6360     0E9C                     	;# 
  6361     0E9D                     	;# 
  6362     0E9E                     	;# 
  6363     0E9F                     	;# 
  6364     0EA0                     	;# 
  6365     0EA1                     	;# 
  6366     0EA2                     	;# 
  6367     0EA3                     	;# 
  6368     0EA4                     	;# 
  6369     0EA5                     	;# 
  6370     0EA6                     	;# 
  6371     0EA7                     	;# 
  6372     0F0F                     	;# 
  6373     0F10                     	;# 
  6374     0F11                     	;# 
  6375     0F12                     	;# 
  6376     0F13                     	;# 
  6377     0F14                     	;# 
  6378     0F15                     	;# 
  6379     0F16                     	;# 
  6380     0F17                     	;# 
  6381     0F18                     	;# 
  6382     0F19                     	;# 
  6383     0F1A                     	;# 
  6384     0F1B                     	;# 
  6385     0F1C                     	;# 
  6386     0F1D                     	;# 
  6387     0F1E                     	;# 
  6388     0F1F                     	;# 
  6389     0F20                     	;# 
  6390     0F21                     	;# 
  6391     0F22                     	;# 
  6392     0F23                     	;# 
  6393     0F24                     	;# 
  6394     0F25                     	;# 
  6395     0F26                     	;# 
  6396     0F27                     	;# 
  6397     0F28                     	;# 
  6398     0F29                     	;# 
  6399     0F2A                     	;# 
  6400     0F2B                     	;# 
  6401     0F2C                     	;# 
  6402     0F2D                     	;# 
  6403     0F2E                     	;# 
  6404     0F2F                     	;# 
  6405     0F30                     	;# 
  6406     0F31                     	;# 
  6407     0F32                     	;# 
  6408     0F33                     	;# 
  6409     0F34                     	;# 
  6410     0F35                     	;# 
  6411     0F36                     	;# 
  6412     0F37                     	;# 
  6413     0FE4                     	;# 
  6414     0FE5                     	;# 
  6415     0FE6                     	;# 
  6416     0FE7                     	;# 
  6417     0FE8                     	;# 
  6418     0FE9                     	;# 
  6419     0FEA                     	;# 
  6420     0FEB                     	;# 
  6421     0FED                     	;# 
  6422     0FEE                     	;# 
  6423     0FEF                     	;# 
  6424     0000                     	;# 
  6425     0001                     	;# 
  6426     0002                     	;# 
  6427     0003                     	;# 
  6428     0004                     	;# 
  6429     0005                     	;# 
  6430     0006                     	;# 
  6431     0007                     	;# 
  6432     0008                     	;# 
  6433     0009                     	;# 
  6434     000A                     	;# 
  6435     000B                     	;# 
  6436     000C                     	;# 
  6437     000D                     	;# 
  6438     000E                     	;# 
  6439     0010                     	;# 
  6440     0011                     	;# 
  6441     0012                     	;# 
  6442     0013                     	;# 
  6443     0014                     	;# 
  6444     0015                     	;# 
  6445     0016                     	;# 
  6446     0016                     	;# 
  6447     0017                     	;# 
  6448     0018                     	;# 
  6449     0019                     	;# 
  6450     001A                     	;# 
  6451     001A                     	;# 
  6452     001B                     	;# 
  6453     001B                     	;# 
  6454     001C                     	;# 
  6455     001D                     	;# 
  6456     001E                     	;# 
  6457     001F                     	;# 
  6458     008C                     	;# 
  6459     008D                     	;# 
  6460     008E                     	;# 
  6461     0090                     	;# 
  6462     0091                     	;# 
  6463     0092                     	;# 
  6464     0093                     	;# 
  6465     0094                     	;# 
  6466     0095                     	;# 
  6467     0096                     	;# 
  6468     0098                     	;# 
  6469     0099                     	;# 
  6470     009A                     	;# 
  6471     009B                     	;# 
  6472     009B                     	;# 
  6473     009C                     	;# 
  6474     009D                     	;# 
  6475     009E                     	;# 
  6476     009F                     	;# 
  6477     010C                     	;# 
  6478     010D                     	;# 
  6479     010E                     	;# 
  6480     0111                     	;# 
  6481     0112                     	;# 
  6482     0113                     	;# 
  6483     0114                     	;# 
  6484     0115                     	;# 
  6485     0116                     	;# 
  6486     0117                     	;# 
  6487     0118                     	;# 
  6488     0119                     	;# 
  6489     011C                     	;# 
  6490     018C                     	;# 
  6491     018D                     	;# 
  6492     018E                     	;# 
  6493     0191                     	;# 
  6494     0191                     	;# 
  6495     0192                     	;# 
  6496     0193                     	;# 
  6497     0193                     	;# 
  6498     0194                     	;# 
  6499     0195                     	;# 
  6500     0196                     	;# 
  6501     0197                     	;# 
  6502     0199                     	;# 
  6503     0199                     	;# 
  6504     0199                     	;# 
  6505     019A                     	;# 
  6506     019A                     	;# 
  6507     019A                     	;# 
  6508     019B                     	;# 
  6509     019B                     	;# 
  6510     019B                     	;# 
  6511     019B                     	;# 
  6512     019B                     	;# 
  6513     019C                     	;# 
  6514     019C                     	;# 
  6515     019C                     	;# 
  6516     019D                     	;# 
  6517     019D                     	;# 
  6518     019D                     	;# 
  6519     019E                     	;# 
  6520     019E                     	;# 
  6521     019E                     	;# 
  6522     019F                     	;# 
  6523     019F                     	;# 
  6524     019F                     	;# 
  6525     019F                     	;# 
  6526     019F                     	;# 
  6527     020C                     	;# 
  6528     020D                     	;# 
  6529     020E                     	;# 
  6530     0211                     	;# 
  6531     0211                     	;# 
  6532     0212                     	;# 
  6533     0212                     	;# 
  6534     0213                     	;# 
  6535     0213                     	;# 
  6536     0214                     	;# 
  6537     0214                     	;# 
  6538     0215                     	;# 
  6539     0215                     	;# 
  6540     0215                     	;# 
  6541     0215                     	;# 
  6542     0216                     	;# 
  6543     0216                     	;# 
  6544     0217                     	;# 
  6545     0217                     	;# 
  6546     028C                     	;# 
  6547     028D                     	;# 
  6548     028E                     	;# 
  6549     0291                     	;# 
  6550     0291                     	;# 
  6551     0292                     	;# 
  6552     0293                     	;# 
  6553     0294                     	;# 
  6554     0298                     	;# 
  6555     0298                     	;# 
  6556     0299                     	;# 
  6557     029A                     	;# 
  6558     029B                     	;# 
  6559     029E                     	;# 
  6560     030C                     	;# 
  6561     030D                     	;# 
  6562     030E                     	;# 
  6563     038C                     	;# 
  6564     038D                     	;# 
  6565     038E                     	;# 
  6566     0391                     	;# 
  6567     0392                     	;# 
  6568     0393                     	;# 
  6569     0394                     	;# 
  6570     0395                     	;# 
  6571     0396                     	;# 
  6572     0397                     	;# 
  6573     0398                     	;# 
  6574     0399                     	;# 
  6575     040E                     	;# 
  6576     0413                     	;# 
  6577     0413                     	;# 
  6578     0414                     	;# 
  6579     0414                     	;# 
  6580     0415                     	;# 
  6581     0416                     	;# 
  6582     0417                     	;# 
  6583     0418                     	;# 
  6584     041A                     	;# 
  6585     041A                     	;# 
  6586     041B                     	;# 
  6587     041B                     	;# 
  6588     041C                     	;# 
  6589     041D                     	;# 
  6590     041E                     	;# 
  6591     041F                     	;# 
  6592     0493                     	;# 
  6593     0494                     	;# 
  6594     0495                     	;# 
  6595     0496                     	;# 
  6596     049A                     	;# 
  6597     049B                     	;# 
  6598     049C                     	;# 
  6599     049D                     	;# 
  6600     058C                     	;# 
  6601     058C                     	;# 
  6602     058D                     	;# 
  6603     058E                     	;# 
  6604     058E                     	;# 
  6605     058F                     	;# 
  6606     0590                     	;# 
  6607     0590                     	;# 
  6608     0591                     	;# 
  6609     0592                     	;# 
  6610     0592                     	;# 
  6611     0593                     	;# 
  6612     0594                     	;# 
  6613     0594                     	;# 
  6614     0595                     	;# 
  6615     0596                     	;# 
  6616     0596                     	;# 
  6617     0597                     	;# 
  6618     0598                     	;# 
  6619     0599                     	;# 
  6620     059A                     	;# 
  6621     059B                     	;# 
  6622     059B                     	;# 
  6623     059C                     	;# 
  6624     059D                     	;# 
  6625     060C                     	;# 
  6626     060C                     	;# 
  6627     060D                     	;# 
  6628     060E                     	;# 
  6629     060F                     	;# 
  6630     060F                     	;# 
  6631     0610                     	;# 
  6632     0611                     	;# 
  6633     0612                     	;# 
  6634     0613                     	;# 
  6635     0614                     	;# 
  6636     0617                     	;# 
  6637     0617                     	;# 
  6638     0618                     	;# 
  6639     0619                     	;# 
  6640     061A                     	;# 
  6641     061A                     	;# 
  6642     061B                     	;# 
  6643     061C                     	;# 
  6644     0691                     	;# 
  6645     0692                     	;# 
  6646     0693                     	;# 
  6647     0694                     	;# 
  6648     0695                     	;# 
  6649     0696                     	;# 
  6650     0697                     	;# 
  6651     0699                     	;# 
  6652     069A                     	;# 
  6653     0711                     	;# 
  6654     0712                     	;# 
  6655     0713                     	;# 
  6656     0714                     	;# 
  6657     0715                     	;# 
  6658     0718                     	;# 
  6659     0718                     	;# 
  6660     0719                     	;# 
  6661     071A                     	;# 
  6662     071A                     	;# 
  6663     071B                     	;# 
  6664     071C                     	;# 
  6665     071D                     	;# 
  6666     0791                     	;# 
  6667     0791                     	;# 
  6668     0792                     	;# 
  6669     0793                     	;# 
  6670     0793                     	;# 
  6671     0794                     	;# 
  6672     0795                     	;# 
  6673     0795                     	;# 
  6674     0796                     	;# 
  6675     0797                     	;# 
  6676     0797                     	;# 
  6677     0798                     	;# 
  6678     0799                     	;# 
  6679     079A                     	;# 
  6680     080C                     	;# 
  6681     080C                     	;# 
  6682     080D                     	;# 
  6683     080E                     	;# 
  6684     080E                     	;# 
  6685     080F                     	;# 
  6686     0810                     	;# 
  6687     0810                     	;# 
  6688     0811                     	;# 
  6689     0812                     	;# 
  6690     0812                     	;# 
  6691     0813                     	;# 
  6692     0814                     	;# 
  6693     0815                     	;# 
  6694     0816                     	;# 
  6695     0817                     	;# 
  6696     0818                     	;# 
  6697     0819                     	;# 
  6698     081A                     	;# 
  6699     081A                     	;# 
  6700     081B                     	;# 
  6701     081C                     	;# 
  6702     081C                     	;# 
  6703     081D                     	;# 
  6704     088C                     	;# 
  6705     088D                     	;# 
  6706     088E                     	;# 
  6707     088F                     	;# 
  6708     088F                     	;# 
  6709     0890                     	;# 
  6710     0891                     	;# 
  6711     0892                     	;# 
  6712     0893                     	;# 
  6713     0893                     	;# 
  6714     0894                     	;# 
  6715     0895                     	;# 
  6716     0896                     	;# 
  6717     0897                     	;# 
  6718     0897                     	;# 
  6719     0898                     	;# 
  6720     0899                     	;# 
  6721     0D8C                     	;# 
  6722     0D8C                     	;# 
  6723     0D8D                     	;# 
  6724     0D8E                     	;# 
  6725     0D8F                     	;# 
  6726     0D8F                     	;# 
  6727     0D90                     	;# 
  6728     0D91                     	;# 
  6729     0D92                     	;# 
  6730     0D92                     	;# 
  6731     0D93                     	;# 
  6732     0D94                     	;# 
  6733     0D95                     	;# 
  6734     0D95                     	;# 
  6735     0D96                     	;# 
  6736     0D97                     	;# 
  6737     0D98                     	;# 
  6738     0D99                     	;# 
  6739     0D9A                     	;# 
  6740     0D9B                     	;# 
  6741     0D9C                     	;# 
  6742     0D9D                     	;# 
  6743     0D9E                     	;# 
  6744     0D9E                     	;# 
  6745     0D9F                     	;# 
  6746     0DA0                     	;# 
  6747     0DA1                     	;# 
  6748     0DA1                     	;# 
  6749     0DA2                     	;# 
  6750     0DA3                     	;# 
  6751     0DA4                     	;# 
  6752     0DA4                     	;# 
  6753     0DA5                     	;# 
  6754     0DA6                     	;# 
  6755     0DA7                     	;# 
  6756     0DA7                     	;# 
  6757     0DA8                     	;# 
  6758     0DA9                     	;# 
  6759     0DAA                     	;# 
  6760     0DAB                     	;# 
  6761     0DAC                     	;# 
  6762     0DAD                     	;# 
  6763     0DAE                     	;# 
  6764     0DAF                     	;# 
  6765     0E0F                     	;# 
  6766     0E10                     	;# 
  6767     0E11                     	;# 
  6768     0E12                     	;# 
  6769     0E13                     	;# 
  6770     0E14                     	;# 
  6771     0E15                     	;# 
  6772     0E16                     	;# 
  6773     0E17                     	;# 
  6774     0E17                     	;# 
  6775     0E18                     	;# 
  6776     0E18                     	;# 
  6777     0E19                     	;# 
  6778     0E1A                     	;# 
  6779     0E1B                     	;# 
  6780     0E1B                     	;# 
  6781     0E1C                     	;# 
  6782     0E1D                     	;# 
  6783     0E1E                     	;# 
  6784     0E1E                     	;# 
  6785     0E1F                     	;# 
  6786     0E20                     	;# 
  6787     0E21                     	;# 
  6788     0E22                     	;# 
  6789     0E23                     	;# 
  6790     0E24                     	;# 
  6791     0E25                     	;# 
  6792     0E26                     	;# 
  6793     0E27                     	;# 
  6794     0E28                     	;# 
  6795     0E29                     	;# 
  6796     0E2A                     	;# 
  6797     0E2B                     	;# 
  6798     0E2C                     	;# 
  6799     0E2D                     	;# 
  6800     0E2E                     	;# 
  6801     0E90                     	;# 
  6802     0E91                     	;# 
  6803     0E92                     	;# 
  6804     0E94                     	;# 
  6805     0E95                     	;# 
  6806     0E9C                     	;# 
  6807     0E9D                     	;# 
  6808     0E9E                     	;# 
  6809     0E9F                     	;# 
  6810     0EA0                     	;# 
  6811     0EA1                     	;# 
  6812     0EA2                     	;# 
  6813     0EA3                     	;# 
  6814     0EA4                     	;# 
  6815     0EA5                     	;# 
  6816     0EA6                     	;# 
  6817     0EA7                     	;# 
  6818     0F0F                     	;# 
  6819     0F10                     	;# 
  6820     0F11                     	;# 
  6821     0F12                     	;# 
  6822     0F13                     	;# 
  6823     0F14                     	;# 
  6824     0F15                     	;# 
  6825     0F16                     	;# 
  6826     0F17                     	;# 
  6827     0F18                     	;# 
  6828     0F19                     	;# 
  6829     0F1A                     	;# 
  6830     0F1B                     	;# 
  6831     0F1C                     	;# 
  6832     0F1D                     	;# 
  6833     0F1E                     	;# 
  6834     0F1F                     	;# 
  6835     0F20                     	;# 
  6836     0F21                     	;# 
  6837     0F22                     	;# 
  6838     0F23                     	;# 
  6839     0F24                     	;# 
  6840     0F25                     	;# 
  6841     0F26                     	;# 
  6842     0F27                     	;# 
  6843     0F28                     	;# 
  6844     0F29                     	;# 
  6845     0F2A                     	;# 
  6846     0F2B                     	;# 
  6847     0F2C                     	;# 
  6848     0F2D                     	;# 
  6849     0F2E                     	;# 
  6850     0F2F                     	;# 
  6851     0F30                     	;# 
  6852     0F31                     	;# 
  6853     0F32                     	;# 
  6854     0F33                     	;# 
  6855     0F34                     	;# 
  6856     0F35                     	;# 
  6857     0F36                     	;# 
  6858     0F37                     	;# 
  6859     0FE4                     	;# 
  6860     0FE5                     	;# 
  6861     0FE6                     	;# 
  6862     0FE7                     	;# 
  6863     0FE8                     	;# 
  6864     0FE9                     	;# 
  6865     0FEA                     	;# 
  6866     0FEB                     	;# 
  6867     0FED                     	;# 
  6868     0FEE                     	;# 
  6869     0FEF                     	;_eusartRxStatusBuffer
  6870                           
  6871 ;; Function _I2C1_Deinitialize is unused but had its address taken
  6872     0000                     
  6873 ;; Function _I2C1_Write is unused but had its address taken
  6874     0000                     
  6875 ;; Function _I2C1_Read is unused but had its address taken
  6876     0000                     
  6877 ;; Function _I2C1_WriteRead is unused but had its address taken
  6878     0000                     
  6879 ;; Function _I2C1_ErrorGet is unused but had its address taken
  6880     0000                     
  6881 ;; Function _I2C1_IsBusy is unused but had its address taken
  6882     0000                     
  6883 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  6884     0000                     
  6885 ;; Function _TMR2_Start is unused but had its address taken
  6886     0000                     
  6887 ;; Function _TMR2_Stop is unused but had its address taken
  6888     0000                     
  6889 ;; Function _TMR2_PeriodCountSet is unused but had its address taken
  6890     0000                     
  6891 ;; Function _TMR2_Tasks is unused but had its address taken
  6892     0000                     
  6893 ;; Function _Timer0_PeriodCountSet is unused but had its address taken
  6894     0000                     
  6895 ;; Function _TMR1_Write is unused but had its address taken
  6896     0000                     
  6897 ;; Function _TMR1_Tasks is unused but had its address taken
  6898     0000                     
  6899 ;; Function _TMR4_Start is unused but had its address taken
  6900     0000                     
  6901 ;; Function _TMR4_Stop is unused but had its address taken
  6902     0000                     
  6903 ;; Function _TMR4_PeriodCountSet is unused but had its address taken
  6904     0000                     
  6905 ;; Function _TMR4_Tasks is unused but had its address taken
  6906     0000                     
  6907 ;; Function _EUSART_Deinitialize is unused but had its address taken
  6908     0000                     
  6909 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  6910     0000                     
  6911 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  6912     0000                     
  6913 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  6914     0000                     
  6915 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  6916     0000                     
  6917 ;; Function _EUSART_IsRxReady is unused but had its address taken
  6918     0000                     
  6919 ;; Function _EUSART_IsTxReady is unused but had its address taken
  6920     0000                     
  6921 ;; Function _EUSART_IsTxDone is unused but had its address taken
  6922     0000                     
  6923 ;; Function _EUSART_ErrorGet is unused but had its address taken
  6924     0000                     
  6925 ;; Function _EUSART_Read is unused but had its address taken
  6926     0000                     
  6927 ;; Function _EUSART_Write is unused but had its address taken
  6928     0000                     
  6929                           	psect	idataBANK2
  6930     0003                     __pidataBANK2:
  6931                           
  6932                           ;initializer for _BackLight_State
  6933     0003  3408               	retlw	8
  6934                           
  6935                           	psect	stringtext1
  6936     1800                     __pstringtext1:
  6937     1800                     _UART1:
  6938     1800  3407               	retlw	low _EUSART_Initialize
  6939     1801  3411               	retlw	high _EUSART_Initialize
  6940     1802  3400               	retlw	0
  6941     1803  3400               	retlw	0
  6942     1804  3400               	retlw	0
  6943     1805  3400               	retlw	0
  6944     1806  3400               	retlw	0
  6945     1807  3400               	retlw	0
  6946     1808  3400               	retlw	0
  6947     1809  3400               	retlw	0
  6948     180A  3400               	retlw	0
  6949     180B  3400               	retlw	0
  6950     180C  3400               	retlw	0
  6951     180D  3400               	retlw	0
  6952     180E  3400               	retlw	0
  6953     180F  3400               	retlw	0
  6954     1810  3400               	retlw	0
  6955     1811  3400               	retlw	0
  6956     1812  3400               	retlw	0
  6957     1813  3400               	retlw	0
  6958     1814  3400               	retlw	0
  6959     1815  3400               	retlw	0
  6960     1816  3400               	retlw	0
  6961     1817  3400               	retlw	0
  6962     1818  3400               	retlw	0
  6963     1819  3400               	retlw	0
  6964     181A  3400               	retlw	0
  6965     181B  3400               	retlw	0
  6966     181C  3400               	retlw	0
  6967     181D  3400               	retlw	0
  6968     181E  3400               	retlw	0
  6969     181F  3400               	retlw	0
  6970     1820  3400               	retlw	0
  6971     1821  3400               	retlw	0
  6972     1822  3400               	retlw	0
  6973     1823  3400               	retlw	0
  6974     1824  34CD               	retlw	low _EUSART_RxCompleteCallbackRegister
  6975     1825  341D               	retlw	high _EUSART_RxCompleteCallbackRegister
  6976     1826  3400               	retlw	0
  6977     1827  3400               	retlw	0
  6978     1828  34FD               	retlw	low _EUSART_FramingErrorCallbackRegister
  6979     1829  341D               	retlw	high _EUSART_FramingErrorCallbackRegister
  6980     182A  340C               	retlw	low _EUSART_OverrunErrorCallbackRegister
  6981     182B  341E               	retlw	high _EUSART_OverrunErrorCallbackRegister
  6982     182C  3400               	retlw	0
  6983     182D  3400               	retlw	0
  6984     182E  3400               	retlw	0
  6985     182F  3400               	retlw	0
  6986     1830                     __end_of_UART1:
  6987                           
  6988                           	psect	stringtext2
  6989     184C                     __pstringtext2:
  6990     184C                     _I2C1_Host:
  6991     184C  343E               	retlw	low _I2C1_Initialize
  6992     184D  341E               	retlw	high _I2C1_Initialize
  6993     184E  3400               	retlw	0
  6994     184F  3400               	retlw	0
  6995     1850  3400               	retlw	0
  6996     1851  3400               	retlw	0
  6997     1852  3400               	retlw	0
  6998     1853  3400               	retlw	0
  6999     1854  3400               	retlw	0
  7000     1855  3400               	retlw	0
  7001     1856  3400               	retlw	0
  7002     1857  3400               	retlw	0
  7003     1858  3400               	retlw	0
  7004     1859  3400               	retlw	0
  7005     185A  3400               	retlw	0
  7006     185B  3400               	retlw	0
  7007     185C  34D9               	retlw	low _I2C1_CallbackRegister
  7008     185D  341D               	retlw	high _I2C1_CallbackRegister
  7009     185E  3400               	retlw	0
  7010     185F  3400               	retlw	0
  7011     1860                     __end_of_I2C1_Host:
  7012                           
  7013                           	psect	stringtext3
  7014     1860                     __pstringtext3:
  7015     1860                     _i2c1_eventTable:
  7016     1860  340F               	retlw	low _I2C1_EVENT_IDLE
  7017     1861  341D               	retlw	high _I2C1_EVENT_IDLE
  7018     1862  3476               	retlw	low _I2C1_EVENT_SEND_RD_ADDR
  7019     1863  341D               	retlw	high _I2C1_EVENT_SEND_RD_ADDR
  7020     1864  3459               	retlw	low _I2C1_EVENT_SEND_WR_ADDR
  7021     1865  341D               	retlw	high _I2C1_EVENT_SEND_WR_ADDR
  7022     1866  3434               	retlw	low _I2C1_EVENT_TX
  7023     1867  3411               	retlw	high _I2C1_EVENT_TX
  7024     1868  34C9               	retlw	low _I2C1_EVENT_RX
  7025     1869  3411               	retlw	high _I2C1_EVENT_RX
  7026     186A  3435               	retlw	low _I2C1_EVENT_NACK
  7027     186B  341D               	retlw	high _I2C1_EVENT_NACK
  7028     186C  343B               	retlw	low _I2C1_EVENT_ERROR
  7029     186D  341D               	retlw	high _I2C1_EVENT_ERROR
  7030     186E  347E               	retlw	low _I2C1_EVENT_STOP
  7031     186F  341D               	retlw	high _I2C1_EVENT_STOP
  7032     1870  3460               	retlw	low _I2C1_EVENT_RESET
  7033     1871  341D               	retlw	high _I2C1_EVENT_RESET
  7034     1872                     __end_of_i2c1_eventTable:
  7035                           
  7036                           	psect	stringtext4
  7037     18AA                     __pstringtext4:
  7038     18AA                     _Timer4:
  7039     18AA  34BA               	retlw	low _TMR4_Initialize
  7040     18AB  341E               	retlw	high _TMR4_Initialize
  7041     18AC  3400               	retlw	0
  7042     18AD  3400               	retlw	0
  7043     18AE  3400               	retlw	0
  7044     18AF  3400               	retlw	0
  7045     18B0  3400               	retlw	0
  7046     18B1  3400               	retlw	0
  7047     18B2  3453               	retlw	low _TMR4_OverflowCallbackRegister
  7048     18B3  341D               	retlw	high _TMR4_OverflowCallbackRegister
  7049     18B4  3400               	retlw	0
  7050     18B5  3400               	retlw	0
  7051     18B6                     __end_of_Timer4:
  7052                           
  7053                           	psect	stringtext5
  7054     18B6                     __pstringtext5:
  7055     18B6                     _tmr1:
  7056     18B6  3449               	retlw	low _TMR1_Initialize
  7057     18B7  341F               	retlw	high _TMR1_Initialize
  7058     18B8  34F1               	retlw	low _TMR1_Start
  7059     18B9  341C               	retlw	high _TMR1_Start
  7060     18BA  34F4               	retlw	low _TMR1_Stop
  7061     18BB  341C               	retlw	high _TMR1_Stop
  7062     18BC  3400               	retlw	0
  7063     18BD  3400               	retlw	0
  7064     18BE  3447               	retlw	low _TMR1_OverflowCallbackRegister
  7065     18BF  341D               	retlw	high _TMR1_OverflowCallbackRegister
  7066     18C0  3400               	retlw	0
  7067     18C1  3400               	retlw	0
  7068     18C2                     __end_of_tmr1:
  7069                           
  7070                           	psect	stringtext6
  7071     18C2                     __pstringtext6:
  7072     18C2                     _Timer0:
  7073     18C2  34E5               	retlw	low _Timer0_Initialize
  7074     18C3  341E               	retlw	high _Timer0_Initialize
  7075     18C4  3400               	retlw	0
  7076     18C5  3400               	retlw	0
  7077     18C6  3400               	retlw	0
  7078     18C7  3400               	retlw	0
  7079     18C8  3400               	retlw	0
  7080     18C9  3400               	retlw	0
  7081     18CA  3498               	retlw	low _Timer0_OverflowCallbackRegister
  7082     18CB  341D               	retlw	high _Timer0_OverflowCallbackRegister
  7083     18CC  3400               	retlw	0
  7084     18CD  3400               	retlw	0
  7085     18CE                     __end_of_Timer0:
  7086                           
  7087                           	psect	stringtext7
  7088     1830                     __pstringtext7:
  7089     1830                     _Timer2:
  7090     1830  3452               	retlw	low _TMR2_Initialize
  7091     1831  341E               	retlw	high _TMR2_Initialize
  7092     1832  3400               	retlw	0
  7093     1833  3400               	retlw	0
  7094     1834  3400               	retlw	0
  7095     1835  3400               	retlw	0
  7096     1836  3400               	retlw	0
  7097     1837  3400               	retlw	0
  7098     1838  344D               	retlw	low _TMR2_OverflowCallbackRegister
  7099     1839  341D               	retlw	high _TMR2_OverflowCallbackRegister
  7100     183A  3400               	retlw	0
  7101     183B  3400               	retlw	0
  7102     183C                     __end_of_Timer2:
  7103     000E                     _PORTCbits	set	14
  7104     0019                     _T1GCONbits	set	25
  7105     0018                     _T1CONbits	set	24
  7106     0018                     _T1CON	set	24
  7107     0016                     _TMR1L	set	22
  7108     0017                     _TMR1H	set	23
  7109     0019                     _T1GCON	set	25
  7110     0015                     _TMR0	set	21
  7111     001B                     _PR2	set	27
  7112     001A                     _TMR2	set	26
  7113     001C                     _T2CONbits	set	28
  7114     001F                     _T2RSTbits	set	31
  7115     001D                     _T2HLTbits	set	29
  7116     001C                     _T2CON	set	28
  7117     001A                     _T2TMR	set	26
  7118     001B                     _T2PR	set	27
  7119     001F                     _T2RST	set	31
  7120     001D                     _T2HLT	set	29
  7121     001E                     _T2CLKCON	set	30
  7122     000B                     _INTCONbits	set	11
  7123     0011                     _PIR2bits	set	17
  7124     0010                     _PIR1bits	set	16
  7125     0095                     _OPTION_REG	set	149
  7126     0095                     _OPTION_REGbits	set	149
  7127     008E                     _TRISC	set	142
  7128     008D                     _TRISB	set	141
  7129     008C                     _TRISA	set	140
  7130     0098                     _OSCTUNE	set	152
  7131     0099                     _OSCCON	set	153
  7132     0091                     _PIE2bits	set	145
  7133     0090                     _PIE1bits	set	144
  7134     009D                     _ADCON0bits	set	157
  7135     009D                     _ADCON0	set	157
  7136     009F                     _ADCON2	set	159
  7137     009C                     _ADRESH	set	156
  7138     009B                     _ADRESL	set	155
  7139     009E                     _ADCON1	set	158
  7140     0473                     _TRISC3	set	1139
  7141     0474                     _TRISC4	set	1140
  7142     010E                     _LATCbits	set	270
  7143     010D                     _LATBbits	set	269
  7144     010E                     _LATC	set	270
  7145     010D                     _LATB	set	269
  7146     010C                     _LATA	set	268
  7147     0116                     _BORCON	set	278
  7148     019A                     _TX1REG	set	410
  7149     0199                     _RC1REG	set	409
  7150     019F                     _BAUD1CONbits	set	415
  7151     019E                     _TX1STAbits	set	414
  7152     019D                     _RC1STAbits	set	413
  7153     019C                     _SPBRGH	set	412
  7154     019B                     _SPBRGL	set	411
  7155     019E                     _TX1STA	set	414
  7156     019D                     _RC1STA	set	413
  7157     019F                     _BAUD1CON	set	415
  7158     018E                     _ANSELC	set	398
  7159     018D                     _ANSELB	set	397
  7160     018C                     _ANSELA	set	396
  7161     020E                     _WPUC	set	526
  7162     020D                     _WPUB	set	525
  7163     020C                     _WPUA	set	524
  7164     0216                     _SSP1CON2bits	set	534
  7165     0211                     _SSP1BUF	set	529
  7166     0214                     _SSP1STATbits	set	532
  7167     0215                     _SSP1CON1bits	set	533
  7168     0212                     _SSP1ADD	set	530
  7169     0217                     _SSP1CON3	set	535
  7170     0216                     _SSP1CON2	set	534
  7171     0215                     _SSP1CON1	set	533
  7172     0214                     _SSP1STAT	set	532
  7173     028E                     _ODCONC	set	654
  7174     028D                     _ODCONB	set	653
  7175     028C                     _ODCONA	set	652
  7176     029A                     _CCP2CONbits	set	666
  7177     0298                     _CCPR2L	set	664
  7178     0299                     _CCPR2H	set	665
  7179     029A                     _CCP2CON	set	666
  7180     0293                     _CCP1CONbits	set	659
  7181     029E                     _CCPTMRSbits	set	670
  7182     0291                     _CCPR1L	set	657
  7183     0292                     _CCPR1H	set	658
  7184     0293                     _CCP1CON	set	659
  7185     030E                     _SLRCONC	set	782
  7186     030D                     _SLRCONB	set	781
  7187     030C                     _SLRCONA	set	780
  7188     0399                     _IOCCF	set	921
  7189     0398                     _IOCCN	set	920
  7190     0397                     _IOCCP	set	919
  7191     0396                     _IOCBF	set	918
  7192     0395                     _IOCBN	set	917
  7193     0394                     _IOCBP	set	916
  7194     0393                     _IOCAF	set	915
  7195     0392                     _IOCAN	set	914
  7196     0391                     _IOCAP	set	913
  7197     038E                     _INLVLC	set	910
  7198     038D                     _INLVLB	set	909
  7199     038C                     _INLVLA	set	908
  7200     0414                     _PR4	set	1044
  7201     0413                     _TMR4	set	1043
  7202     0415                     _T4CONbits	set	1045
  7203     0418                     _T4RSTbits	set	1048
  7204     0416                     _T4HLTbits	set	1046
  7205     0415                     _T4CON	set	1045
  7206     0413                     _T4TMR	set	1043
  7207     0414                     _T4PR	set	1044
  7208     0418                     _T4RST	set	1048
  7209     0416                     _T4HLT	set	1046
  7210     0417                     _T4CLKCON	set	1047
  7211     0E14                     _CCP1PPS	set	3604
  7212     0E15                     _CCP2PPS	set	3605
  7213     0E21                     _SSPDATPPS	set	3617
  7214     0E20                     _SSPCLKPPS	set	3616
  7215     0E24                     _RXPPS	set	3620
  7216     0EA5                     _RC5PPS	set	3749
  7217     0E92                     _RA2PPS	set	3730
  7218     0EA3                     _RC3PPS	set	3747
  7219     0EA4                     _RC4PPS	set	3748
  7220     0EA6                     _RC6PPS	set	3750
  7221     183C                     STR_3:
  7222     183C  3453               	retlw	83	;'S'
  7223     183D  3465               	retlw	101	;'e'
  7224     183E  346E               	retlw	110	;'n'
  7225     183F  3474               	retlw	116	;'t'
  7226     1840  3420               	retlw	32	;' '
  7227     1841  3463               	retlw	99	;'c'
  7228     1842  346F               	retlw	111	;'o'
  7229     1843  3464               	retlw	100	;'d'
  7230     1844  3465               	retlw	101	;'e'
  7231     1845  343A               	retlw	58	;':'
  7232     1846  3420               	retlw	32	;' '
  7233     1847  3425               	retlw	37	;'%'
  7234     1848  3468               	retlw	104	;'h'
  7235     1849  3468               	retlw	104	;'h'
  7236     184A  3478               	retlw	120	;'x'
  7237     184B  3400               	retlw	0
  7238                           
  7239                           	psect	stringtext8
  7240     1872                     __pstringtext8:
  7241     1872                     STR_6:
  7242     1872  3444               	retlw	68	;'D'
  7243     1873  3469               	retlw	105	;'i'
  7244     1874  3473               	retlw	115	;'s'
  7245     1875  3474               	retlw	116	;'t'
  7246     1876  342E               	retlw	46	;'.'
  7247     1877  343A               	retlw	58	;':'
  7248     1878  3420               	retlw	32	;' '
  7249     1879  3425               	retlw	37	;'%'
  7250     187A  342E               	retlw	46	;'.'
  7251     187B  3432               	retlw	50	;'2'
  7252     187C  3466               	retlw	102	;'f'
  7253     187D  3420               	retlw	32	;' '
  7254     187E  3463               	retlw	99	;'c'
  7255     187F  346D               	retlw	109	;'m'
  7256     1880  3400               	retlw	0
  7257                           
  7258                           	psect	stringtext9
  7259     1881                     __pstringtext9:
  7260     1881                     STR_8:
  7261     1881  3454               	retlw	84	;'T'
  7262     1882  3465               	retlw	101	;'e'
  7263     1883  346D               	retlw	109	;'m'
  7264     1884  3470               	retlw	112	;'p'
  7265     1885  342E               	retlw	46	;'.'
  7266     1886  343A               	retlw	58	;':'
  7267     1887  3420               	retlw	32	;' '
  7268     1888  3425               	retlw	37	;'%'
  7269     1889  342E               	retlw	46	;'.'
  7270     188A  3432               	retlw	50	;'2'
  7271     188B  3466               	retlw	102	;'f'
  7272     188C  3420               	retlw	32	;' '
  7273     188D  3443               	retlw	67	;'C'
  7274     188E  3400               	retlw	0
  7275                           
  7276                           	psect	stringtext10
  7277     188F                     __pstringtext10:
  7278     188F                     STR_2:
  7279     188F  3420               	retlw	32	;' '
  7280     1890  342E               	retlw	46	;'.'
  7281     1891  342E               	retlw	46	;'.'
  7282     1892  3420               	retlw	32	;' '
  7283     1893  3449               	retlw	73	;'I'
  7284     1894  346E               	retlw	110	;'n'
  7285     1895  3474               	retlw	116	;'t'
  7286     1896  3465               	retlw	101	;'e'
  7287     1897  3472               	retlw	114	;'r'
  7288     1898  3472               	retlw	114	;'r'
  7289     1899  3475               	retlw	117	;'u'
  7290     189A  3470               	retlw	112	;'p'
  7291     189B  3474               	retlw	116	;'t'
  7292     189C  3400               	retlw	0
  7293                           
  7294                           	psect	stringtext11
  7295     189D                     __pstringtext11:
  7296     189D                     STR_7:
  7297     189D  344F               	retlw	79	;'O'
  7298     189E  3475               	retlw	117	;'u'
  7299     189F  3474               	retlw	116	;'t'
  7300     18A0  3420               	retlw	32	;' '
  7301     18A1  346F               	retlw	111	;'o'
  7302     18A2  3466               	retlw	102	;'f'
  7303     18A3  3420               	retlw	32	;' '
  7304     18A4  3452               	retlw	82	;'R'
  7305     18A5  3461               	retlw	97	;'a'
  7306     18A6  346E               	retlw	110	;'n'
  7307     18A7  3467               	retlw	103	;'g'
  7308     18A8  3465               	retlw	101	;'e'
  7309     18A9  3400               	retlw	0
  7310                           
  7311                           	psect	stringtext12
  7312     18CE                     __pstringtext12:
  7313     18CE                     STR_4:
  7314     18CE  3420               	retlw	32	;' '
  7315     18CF  3454               	retlw	84	;'T'
  7316     18D0  344D               	retlw	77	;'M'
  7317     18D1  3452               	retlw	82	;'R'
  7318     18D2  3430               	retlw	48	;'0'
  7319     18D3  3420               	retlw	32	;' '
  7320     18D4  342E               	retlw	46	;'.'
  7321     18D5  342E               	retlw	46	;'.'
  7322     18D6  3400               	retlw	0
  7323                           
  7324                           	psect	stringtext13
  7325     18D7                     __pstringtext13:
  7326     18D7                     STR_1:
  7327     18D7  3420               	retlw	32	;' '
  7328     18D8  3455               	retlw	85	;'U'
  7329     18D9  3441               	retlw	65	;'A'
  7330     18DA  3452               	retlw	82	;'R'
  7331     18DB  3454               	retlw	84	;'T'
  7332     18DC  3420               	retlw	32	;' '
  7333     18DD  342E               	retlw	46	;'.'
  7334     18DE  342E               	retlw	46	;'.'
  7335     18DF  3400               	retlw	0
  7336                           
  7337                           	psect	stringtext14
  7338     18E0                     __pstringtext14:
  7339     18E0                     STR_9:
  7340     18E0  3469               	retlw	105	;'i'
  7341     18E1  346E               	retlw	110	;'n'
  7342     18E2  3466               	retlw	102	;'f'
  7343     18E3  3400               	retlw	0
  7344                           
  7345                           	psect	stringtext15
  7346     18E4                     __pstringtext15:
  7347     18E4                     STR_12:
  7348     18E4  346E               	retlw	110	;'n'
  7349     18E5  3461               	retlw	97	;'a'
  7350     18E6  346E               	retlw	110	;'n'
  7351     18E7  3400               	retlw	0
  7352                           
  7353                           	psect	stringtext16
  7354     0000                     __pstringtext16:
  7355     18E0                     
  7356                           	psect	cinit
  7357     0043                     start_initialization:	
  7358                           ; #config settings
  7359                           
  7360     0043                     __initialization:	;BIGRAM
  7361                           
  7362                           ; Initialize objects allocated to BANK2
  7363     0043  0022               	movlb	2	; select bank2
  7364     0044  3180  2003  3180   	fcall	__pidataBANK2	;fetch initializer
  7365     0047  00EC               	movwf	__pdataBANK2& (0+127)
  7366                           
  7367                           ; Clear objects allocated to BIGRAM
  7368     0048  3070               	movlw	low (0+9072)
  7369     0049  0084               	movwf	4
  7370     004A  3023               	movlw	high (0+9072)
  7371     004B  0085               	movwf	5
  7372     004C  3080               	movlw	128
  7373     004D  00FE               	movwf	btemp
  7374     004E  3000               	movlw	0
  7375     004F  00FF               	movwf	btemp+1
  7376     0050  319D  25F1  3180   	fcall	clear_ram0
  7377                           
  7378                           ; Clear objects allocated to BANK2
  7379     0053  3047               	movlw	low __pbssBANK2
  7380     0054  0084               	movwf	4
  7381     0055  3001               	movlw	high __pbssBANK2
  7382     0056  0085               	movwf	5
  7383     0057  3025               	movlw	37
  7384     0058  00FE               	movwf	btemp
  7385     0059  3000               	movlw	0
  7386     005A  00FF               	movwf	btemp+1
  7387     005B  319D  25F1  3180   	fcall	clear_ram0
  7388                           
  7389                           ; Clear objects allocated to BANK3
  7390     005E  30A0               	movlw	low __pbssBANK3
  7391     005F  0084               	movwf	4
  7392     0060  3001               	movlw	high __pbssBANK3
  7393     0061  0085               	movwf	5
  7394     0062  301E               	movlw	30
  7395     0063  00FE               	movwf	btemp
  7396     0064  3000               	movlw	0
  7397     0065  00FF               	movwf	btemp+1
  7398     0066  319D  25F1  3180   	fcall	clear_ram0
  7399                           
  7400                           ; Clear objects allocated to BANK4
  7401     0069  3020               	movlw	low __pbssBANK4
  7402     006A  0084               	movwf	4
  7403     006B  3002               	movlw	high __pbssBANK4
  7404     006C  0085               	movwf	5
  7405     006D  3050               	movlw	80
  7406     006E  00FE               	movwf	btemp
  7407     006F  3000               	movlw	0
  7408     0070  00FF               	movwf	btemp+1
  7409     0071  319D  25F1  3180   	fcall	clear_ram0
  7410                           
  7411                           ; Clear objects allocated to BANK5
  7412     0074  30A0               	movlw	low __pbssBANK5
  7413     0075  0084               	movwf	4
  7414     0076  3002               	movlw	high __pbssBANK5
  7415     0077  0085               	movwf	5
  7416     0078  3040               	movlw	64
  7417     0079  00FE               	movwf	btemp
  7418     007A  3000               	movlw	0
  7419     007B  00FF               	movwf	btemp+1
  7420     007C  319D  25F1  3180   	fcall	clear_ram0
  7421     007F                     end_of_initialization:	
  7422                           ;End of C runtime variable initialization code
  7423                           
  7424     007F                     __end_of__initialization:
  7425     007F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7426     0080  0020               	movlb	0
  7427     0081  3191  2993         	ljmp	_main	;jump to C main() function
  7428                           
  7429                           	psect	bssBANK2
  7430     0147                     __pbssBANK2:
  7431     0147                     _i2c1Status:
  7432     0147                     	ds	14
  7433     0155                     _width:
  7434     0155                     	ds	2
  7435     0157                     _prec:
  7436     0157                     	ds	2
  7437     0159                     _EUSART_OverrunErrorHandler:
  7438     0159                     	ds	2
  7439     015B                     _EUSART_FramingErrorHandler:
  7440     015B                     	ds	2
  7441     015D                     _timer1ReloadVal:
  7442     015D                     	ds	2
  7443     015F                     Timer0_OverflowISR@CountCallBack:
  7444     015F                     	ds	2
  7445     0161                     _Timer0_OverflowCallback:
  7446     0161                     	ds	2
  7447     0163                     _INT_InterruptHandler:
  7448     0163                     	ds	2
  7449     0165                     _flags:
  7450     0165                     	ds	1
  7451     0166                     _i2c_add:
  7452     0166                     	ds	1
  7453     0167                     _RS:
  7454     0167                     	ds	1
  7455     0168                     _eusartRxCount:
  7456     0168                     	ds	1
  7457     0169                     _eusartRxTail:
  7458     0169                     	ds	1
  7459     016A                     _eusartRxHead:
  7460     016A                     	ds	1
  7461     016B                     _timer0ReloadVal:
  7462     016B                     	ds	1
  7463                           
  7464                           	psect	dataBANK2
  7465     016C                     __pdataBANK2:
  7466     016C                     _BackLight_State:
  7467     016C                     	ds	1
  7468                           
  7469                           	psect	bssBANK3
  7470     01A0                     __pbssBANK3:
  7471     01A0                     floorf@F521:
  7472     01A0                     	ds	4
  7473     01A4                     ___fpclassifyf@F465:
  7474     01A4                     	ds	4
  7475     01A8                     _temperature:
  7476     01A8                     	ds	4
  7477     01AC                     _distance:
  7478     01AC                     	ds	4
  7479     01B0                     _eusartRxLastError:
  7480     01B0                     	ds	2
  7481     01B2                     _TMR4_OverflowCallback:
  7482     01B2                     	ds	2
  7483     01B4                     _TMR1_OverflowCallback:
  7484     01B4                     	ds	2
  7485     01B6                     _TMR1_InterruptHandler:
  7486     01B6                     	ds	2
  7487     01B8                     _TMR2_OverflowCallback:
  7488     01B8                     	ds	2
  7489     01BA                     _EUSART_RxInterruptHandler:
  7490     01BA                     	ds	2
  7491     01BC                     _I2C1_Callback:
  7492     01BC                     	ds	2
  7493                           
  7494                           	psect	bssBANK4
  7495     0220                     __pbssBANK4:
  7496     0220                     _dbuf:
  7497     0220                     	ds	80
  7498                           
  7499                           	psect	bssBANK5
  7500     02A0                     __pbssBANK5:
  7501     02A0                     _eusartRxBuffer:
  7502     02A0                     	ds	64
  7503                           
  7504                           	psect	clrtext
  7505     1DF1                     clear_ram0:	
  7506                           ;	Called with FSR0 containing the base address, and
  7507                           ;	btemp/btemp+1 has the size to clear
  7508                           
  7509     1DF1  0064               	clrwdt	;clear the watchdog before getting into this loop
  7510     1DF2                     clrloop0:
  7511     1DF2  0180               	clrf	0	;clear RAM location pointed to by FSR
  7512     1DF3  3101               	addfsr 0,1
  7513     1DF4  3001               	movlw	1
  7514     1DF5  02FE               	subwf	btemp,f
  7515     1DF6  3000               	movlw	0
  7516     1DF7  3BFF               	subwfb	btemp+1,f
  7517     1DF8  087F               	movf	btemp+1,w
  7518     1DF9  047E               	iorwf	btemp,w
  7519     1DFA  1D03               	skipz
  7520     1DFB  2DF2               	goto	clrloop0	;have we reached the end yet?
  7521     1DFC  3400               	retlw	0	;all done for this memory range, return
  7522                           
  7523                           	psect	cstackBANK3
  7524     01BE                     __pcstackBANK3:
  7525     01BE                     ?_I2C1_CallbackRegister:
  7526     01BE                     ??_CLOCK_Initialize:	
  7527                           ; 1 bytes @ 0x0
  7528                           
  7529     01BE                     ??_PIN_MANAGER_Initialize:	
  7530                           ; 1 bytes @ 0x0
  7531                           
  7532     01BE                     ?_INT_SetInterruptHandler:	
  7533                           ; 1 bytes @ 0x0
  7534                           
  7535     01BE                     ?_TMR2_OverflowCallbackRegister:	
  7536                           ; 1 bytes @ 0x0
  7537                           
  7538     01BE                     ?_Timer0_OverflowCallbackRegister:	
  7539                           ; 1 bytes @ 0x0
  7540                           
  7541     01BE                     ?_TMR1_OverflowCallbackRegister:	
  7542                           ; 1 bytes @ 0x0
  7543                           
  7544     01BE                     ?_TMR4_OverflowCallbackRegister:	
  7545                           ; 1 bytes @ 0x0
  7546                           
  7547     01BE                     ?_EUSART_RxCompleteCallbackRegister:	
  7548                           ; 1 bytes @ 0x0
  7549                           
  7550     01BE                     ?_EUSART_FramingErrorCallbackRegister:	
  7551                           ; 1 bytes @ 0x0
  7552                           
  7553     01BE                     ?_EUSART_OverrunErrorCallbackRegister:	
  7554                           ; 1 bytes @ 0x0
  7555                           
  7556     01BE                     ??_ADC_Initialize:	
  7557                           ; 1 bytes @ 0x0
  7558                           
  7559     01BE                     ??_CCP1_Initialize:	
  7560                           ; 1 bytes @ 0x0
  7561                           
  7562     01BE                     ??_CCP2_Initialize:	
  7563                           ; 1 bytes @ 0x0
  7564                           
  7565     01BE                     ?_CCP2_LoadDutyValue:	
  7566                           ; 1 bytes @ 0x0
  7567                           
  7568     01BE                     I2C1_CallbackRegister@callbackHandler:	
  7569                           ; 1 bytes @ 0x0
  7570                           
  7571     01BE                     CCP2_LoadDutyValue@dutyValue:	
  7572                           ; 2 bytes @ 0x0
  7573                           
  7574     01BE                     INT_SetInterruptHandler@InterruptHandler:	
  7575                           ; 2 bytes @ 0x0
  7576                           
  7577     01BE                     TMR2_OverflowCallbackRegister@InterruptHandler:	
  7578                           ; 2 bytes @ 0x0
  7579                           
  7580     01BE                     Timer0_OverflowCallbackRegister@CallbackHandler:	
  7581                           ; 2 bytes @ 0x0
  7582                           
  7583     01BE                     TMR1_OverflowCallbackRegister@CallbackHandler:	
  7584                           ; 2 bytes @ 0x0
  7585                           
  7586     01BE                     TMR4_OverflowCallbackRegister@InterruptHandler:	
  7587                           ; 2 bytes @ 0x0
  7588                           
  7589     01BE                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  7590                           ; 2 bytes @ 0x0
  7591                           
  7592     01BE                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  7593                           ; 2 bytes @ 0x0
  7594                           
  7595     01BE                     EUSART_RxCompleteCallbackRegister@callbackHandler:	
  7596                           ; 2 bytes @ 0x0
  7597                           
  7598                           
  7599                           ; 2 bytes @ 0x0
  7600     01BE                     	ds	2
  7601     01C0                     ??_I2C1_Initialize:
  7602     01C0                     ??_I2C1_CallbackRegister:	
  7603                           ; 1 bytes @ 0x2
  7604                           
  7605     01C0                     ??_EUSART_Initialize:	
  7606                           ; 1 bytes @ 0x2
  7607                           
  7608     01C0                     ??_Timer0_Initialize:	
  7609                           ; 1 bytes @ 0x2
  7610                           
  7611     01C0                     ??_TMR1_Initialize:	
  7612                           ; 1 bytes @ 0x2
  7613                           
  7614     01C0                     ??_TMR2_Initialize:	
  7615                           ; 1 bytes @ 0x2
  7616                           
  7617     01C0                     ??_TMR4_Initialize:	
  7618                           ; 1 bytes @ 0x2
  7619                           
  7620     01C0                     ??_INTERRUPT_Initialize:	
  7621                           ; 1 bytes @ 0x2
  7622                           
  7623     01C0                     ??_INT_SetInterruptHandler:	
  7624                           ; 1 bytes @ 0x2
  7625                           
  7626     01C0                     ??_TMR2_OverflowCallbackRegister:	
  7627                           ; 1 bytes @ 0x2
  7628                           
  7629     01C0                     ??_Timer0_OverflowCallbackRegister:	
  7630                           ; 1 bytes @ 0x2
  7631                           
  7632     01C0                     ??_TMR1_OverflowCallbackRegister:	
  7633                           ; 1 bytes @ 0x2
  7634                           
  7635     01C0                     ??_TMR4_OverflowCallbackRegister:	
  7636                           ; 1 bytes @ 0x2
  7637                           
  7638     01C0                     ??_EUSART_RxCompleteCallbackRegister:	
  7639                           ; 1 bytes @ 0x2
  7640                           
  7641     01C0                     ??_EUSART_FramingErrorCallbackRegister:	
  7642                           ; 1 bytes @ 0x2
  7643                           
  7644     01C0                     ??_EUSART_OverrunErrorCallbackRegister:	
  7645                           ; 1 bytes @ 0x2
  7646                           
  7647     01C0                     ??_CCP2_LoadDutyValue:	
  7648                           ; 1 bytes @ 0x2
  7649                           
  7650     01C0                     ??_SYSTEM_Initialize:	
  7651                           ; 1 bytes @ 0x2
  7652                           
  7653     01C0                     ??_main:	
  7654                           ; 1 bytes @ 0x2
  7655                           
  7656                           
  7657                           ; 1 bytes @ 0x2
  7658     01C0                     	ds	2
  7659                           
  7660                           	psect	cstackBANK2
  7661     0120                     __pcstackBANK2:
  7662     0120                     sprintf@s:
  7663                           
  7664                           ; 1 bytes @ 0x0
  7665     0120                     	ds	1
  7666     0121                     sprintf@ap:
  7667                           
  7668                           ; 1 bytes @ 0x1
  7669     0121                     	ds	1
  7670     0122                     sprintf@f:
  7671                           
  7672                           ; 11 bytes @ 0x2
  7673     0122                     	ds	11
  7674     012D                     ??_TMR0_Custom_ISR:
  7675     012D                     ??_UART_Custom_ISR:	
  7676                           ; 1 bytes @ 0xD
  7677                           
  7678                           
  7679                           ; 1 bytes @ 0xD
  7680     012D                     	ds	2
  7681     012F                     UART_Custom_ISR@buffer:
  7682                           
  7683                           ; 16 bytes @ 0xF
  7684     012F                     	ds	4
  7685     0133                     TMR0_Custom_ISR@buffer:
  7686                           
  7687                           ; 16 bytes @ 0x13
  7688     0133                     	ds	12
  7689     013F                     UART_Custom_ISR@Rx_Code:
  7690                           
  7691                           ; 1 bytes @ 0x1F
  7692     013F                     	ds	1
  7693     0140                     ??_EUSART_ReceiveISR:
  7694                           
  7695                           ; 1 bytes @ 0x20
  7696     0140                     	ds	3
  7697     0143                     _TMR0_Custom_ISR$3563:
  7698                           
  7699                           ; 4 bytes @ 0x23
  7700     0143                     	ds	1
  7701     0144                     EUSART_ReceiveISR@regValue:
  7702                           
  7703                           ; 1 bytes @ 0x24
  7704     0144                     	ds	1
  7705     0145                     EUSART_ReceiveISR@tempRxHead:
  7706                           
  7707                           ; 1 bytes @ 0x25
  7708     0145                     	ds	2
  7709                           
  7710                           	psect	cstackBANK1
  7711     00A0                     __pcstackBANK1:
  7712     00A0                     ?_efgtoa:
  7713     00A0                     efgtoa@f:	
  7714                           ; 1 bytes @ 0x0
  7715                           
  7716                           
  7717                           ; 4 bytes @ 0x0
  7718     00A0                     	ds	4
  7719     00A4                     efgtoa@c:
  7720                           
  7721                           ; 1 bytes @ 0x4
  7722     00A4                     	ds	1
  7723     00A5                     ??_efgtoa:
  7724                           
  7725                           ; 1 bytes @ 0x5
  7726     00A5                     	ds	4
  7727     00A9                     efgtoa@ne:
  7728                           
  7729                           ; 2 bytes @ 0x9
  7730     00A9                     	ds	2
  7731     00AB                     efgtoa@p:
  7732                           
  7733                           ; 2 bytes @ 0xB
  7734     00AB                     	ds	2
  7735     00AD                     efgtoa@t:
  7736                           
  7737                           ; 2 bytes @ 0xD
  7738     00AD                     	ds	2
  7739     00AF                     _efgtoa$3140:
  7740                           
  7741                           ; 2 bytes @ 0xF
  7742     00AF                     	ds	2
  7743     00B1                     efgtoa@pp:
  7744                           
  7745                           ; 1 bytes @ 0x11
  7746     00B1                     	ds	1
  7747     00B2                     efgtoa@mode:
  7748                           
  7749                           ; 1 bytes @ 0x12
  7750     00B2                     	ds	1
  7751     00B3                     efgtoa@nmode:
  7752                           
  7753                           ; 1 bytes @ 0x13
  7754     00B3                     	ds	1
  7755     00B4                     efgtoa@d:
  7756                           
  7757                           ; 2 bytes @ 0x14
  7758     00B4                     	ds	2
  7759     00B6                     efgtoa@m:
  7760                           
  7761                           ; 2 bytes @ 0x16
  7762     00B6                     	ds	2
  7763     00B8                     efgtoa@fp:
  7764                           
  7765                           ; 1 bytes @ 0x18
  7766     00B8                     	ds	1
  7767     00B9                     efgtoa@e:
  7768                           
  7769                           ; 2 bytes @ 0x19
  7770     00B9                     	ds	2
  7771     00BB                     efgtoa@w:
  7772                           
  7773                           ; 2 bytes @ 0x1B
  7774     00BB                     	ds	2
  7775     00BD                     efgtoa@ou:
  7776                           
  7777                           ; 4 bytes @ 0x1D
  7778     00BD                     	ds	4
  7779     00C1                     efgtoa@i:
  7780                           
  7781                           ; 2 bytes @ 0x21
  7782     00C1                     	ds	2
  7783     00C3                     efgtoa@h:
  7784                           
  7785                           ; 4 bytes @ 0x23
  7786     00C3                     	ds	4
  7787     00C7                     efgtoa@l:
  7788                           
  7789                           ; 4 bytes @ 0x27
  7790     00C7                     	ds	4
  7791     00CB                     efgtoa@sign:
  7792                           
  7793                           ; 1 bytes @ 0x2B
  7794     00CB                     	ds	1
  7795     00CC                     efgtoa@n:
  7796                           
  7797                           ; 2 bytes @ 0x2C
  7798     00CC                     	ds	2
  7799     00CE                     efgtoa@g:
  7800                           
  7801                           ; 4 bytes @ 0x2E
  7802     00CE                     	ds	4
  7803     00D2                     efgtoa@u:
  7804                           
  7805                           ; 4 bytes @ 0x32
  7806     00D2                     	ds	4
  7807     00D6                     ??_vfpfcnvrt:
  7808                           
  7809                           ; 1 bytes @ 0x36
  7810     00D6                     	ds	4
  7811     00DA                     vfpfcnvrt@convarg:
  7812                           
  7813                           ; 4 bytes @ 0x3A
  7814     00DA                     	ds	4
  7815     00DE                     vfpfcnvrt@fp:
  7816                           
  7817                           ; 1 bytes @ 0x3E
  7818     00DE                     	ds	1
  7819     00DF                     vfpfcnvrt@c:
  7820                           
  7821                           ; 1 bytes @ 0x3F
  7822     00DF                     	ds	1
  7823     00E0                     vfpfcnvrt@cp:
  7824                           
  7825                           ; 2 bytes @ 0x40
  7826     00E0                     	ds	2
  7827     00E2                     ?_vfprintf:
  7828     00E2                     vfprintf@fmt:	
  7829                           ; 2 bytes @ 0x42
  7830                           
  7831                           
  7832                           ; 2 bytes @ 0x42
  7833     00E2                     	ds	2
  7834     00E4                     vfprintf@ap:
  7835                           
  7836                           ; 1 bytes @ 0x44
  7837     00E4                     	ds	1
  7838     00E5                     ??_vfprintf:
  7839                           
  7840                           ; 1 bytes @ 0x45
  7841     00E5                     	ds	1
  7842     00E6                     vfprintf@fp:
  7843                           
  7844                           ; 1 bytes @ 0x46
  7845     00E6                     	ds	1
  7846     00E7                     vfprintf@cfmt:
  7847                           
  7848                           ; 2 bytes @ 0x47
  7849     00E7                     	ds	2
  7850     00E9                     ?_sprintf:
  7851     00E9                     sprintf@fmt:	
  7852                           ; 2 bytes @ 0x49
  7853                           
  7854                           
  7855                           ; 2 bytes @ 0x49
  7856     00E9                     	ds	6
  7857     00EF                     ??_sprintf:
  7858                           
  7859                           ; 1 bytes @ 0x4F
  7860     00EF                     	ds	1
  7861                           
  7862                           	psect	cstackCOMMON
  7863     0070                     __pcstackCOMMON:
  7864     0070                     ?___fleq:
  7865     0070                     ?_I2C1_Initialize:	
  7866                           ; 1 bit 
  7867                           
  7868     0070                     ?_I2C1_EVENT_IDLE:	
  7869                           ; 1 bytes @ 0x0
  7870                           
  7871     0070                     ??_I2C1_EVENT_IDLE:	
  7872                           ; 1 bytes @ 0x0
  7873                           
  7874     0070                     ?_I2C1_EVENT_SEND_RD_ADDR:	
  7875                           ; 1 bytes @ 0x0
  7876                           
  7877     0070                     ??_I2C1_EVENT_SEND_RD_ADDR:	
  7878                           ; 1 bytes @ 0x0
  7879                           
  7880     0070                     ?_I2C1_EVENT_SEND_WR_ADDR:	
  7881                           ; 1 bytes @ 0x0
  7882                           
  7883     0070                     ?_I2C1_EVENT_TX:	
  7884                           ; 1 bytes @ 0x0
  7885                           
  7886     0070                     ?_I2C1_EVENT_RX:	
  7887                           ; 1 bytes @ 0x0
  7888                           
  7889     0070                     ??_I2C1_EVENT_RX:	
  7890                           ; 1 bytes @ 0x0
  7891                           
  7892     0070                     ?_I2C1_EVENT_NACK:	
  7893                           ; 1 bytes @ 0x0
  7894                           
  7895     0070                     ??_I2C1_EVENT_NACK:	
  7896                           ; 1 bytes @ 0x0
  7897                           
  7898     0070                     ?_I2C1_EVENT_ERROR:	
  7899                           ; 1 bytes @ 0x0
  7900                           
  7901     0070                     ??_I2C1_EVENT_ERROR:	
  7902                           ; 1 bytes @ 0x0
  7903                           
  7904     0070                     ?_I2C1_EVENT_STOP:	
  7905                           ; 1 bytes @ 0x0
  7906                           
  7907     0070                     ??_I2C1_EVENT_STOP:	
  7908                           ; 1 bytes @ 0x0
  7909                           
  7910     0070                     ?_I2C1_EVENT_RESET:	
  7911                           ; 1 bytes @ 0x0
  7912                           
  7913     0070                     ??_I2C1_EVENT_RESET:	
  7914                           ; 1 bytes @ 0x0
  7915                           
  7916     0070                     ?_I2C1_DefaultCallback:	
  7917                           ; 1 bytes @ 0x0
  7918                           
  7919     0070                     ??_I2C1_DefaultCallback:	
  7920                           ; 1 bytes @ 0x0
  7921                           
  7922     0070                     ?_I2C1_EventHandler:	
  7923                           ; 1 bytes @ 0x0
  7924                           
  7925     0070                     ?_I2C1_ErrorEventHandler:	
  7926                           ; 1 bytes @ 0x0
  7927                           
  7928     0070                     ?_I2C1_InterruptClear:	
  7929                           ; 1 bytes @ 0x0
  7930                           
  7931     0070                     ??_I2C1_InterruptClear:	
  7932                           ; 1 bytes @ 0x0
  7933                           
  7934     0070                     ?_I2C1_ErrorInterruptClear:	
  7935                           ; 1 bytes @ 0x0
  7936                           
  7937     0070                     ??_I2C1_ErrorInterruptClear:	
  7938                           ; 1 bytes @ 0x0
  7939                           
  7940     0070                     ?_I2C1_StatusFlagsClear:	
  7941                           ; 1 bytes @ 0x0
  7942                           
  7943     0070                     ??_I2C1_StatusFlagsClear:	
  7944                           ; 1 bytes @ 0x0
  7945                           
  7946     0070                     ?_I2C1_IsAddr:	
  7947                           ; 1 bytes @ 0x0
  7948                           
  7949     0070                     ??_I2C1_IsAddr:	
  7950                           ; 1 bytes @ 0x0
  7951                           
  7952     0070                     ?_I2C1_IsNack:	
  7953                           ; 1 bytes @ 0x0
  7954                           
  7955     0070                     ??_I2C1_IsNack:	
  7956                           ; 1 bytes @ 0x0
  7957                           
  7958     0070                     ?_I2C1_IsData:	
  7959                           ; 1 bytes @ 0x0
  7960                           
  7961     0070                     ??_I2C1_IsData:	
  7962                           ; 1 bytes @ 0x0
  7963                           
  7964     0070                     ?_I2C1_DataTransmit:	
  7965                           ; 1 bytes @ 0x0
  7966                           
  7967     0070                     ??_I2C1_DataTransmit:	
  7968                           ; 1 bytes @ 0x0
  7969                           
  7970     0070                     ?_I2C1_RestartEnable:	
  7971                           ; 1 bytes @ 0x0
  7972                           
  7973     0070                     ??_I2C1_RestartEnable:	
  7974                           ; 1 bytes @ 0x0
  7975                           
  7976     0070                     ?_I2C1_IsRxBufFull:	
  7977                           ; 1 bytes @ 0x0
  7978                           
  7979     0070                     ??_I2C1_IsRxBufFull:	
  7980                           ; 1 bytes @ 0x0
  7981                           
  7982     0070                     ?_I2C1_DataReceive:	
  7983                           ; 1 bytes @ 0x0
  7984                           
  7985     0070                     ??_I2C1_DataReceive:	
  7986                           ; 1 bytes @ 0x0
  7987                           
  7988     0070                     ?_I2C1_AckSend:	
  7989                           ; 1 bytes @ 0x0
  7990                           
  7991     0070                     ??_I2C1_AckSend:	
  7992                           ; 1 bytes @ 0x0
  7993                           
  7994     0070                     ?_I2C1_RestartDisable:	
  7995                           ; 1 bytes @ 0x0
  7996                           
  7997     0070                     ??_I2C1_RestartDisable:	
  7998                           ; 1 bytes @ 0x0
  7999                           
  8000     0070                     ?_I2C1_NackSend:	
  8001                           ; 1 bytes @ 0x0
  8002                           
  8003     0070                     ??_I2C1_NackSend:	
  8004                           ; 1 bytes @ 0x0
  8005                           
  8006     0070                     ?_I2C1_ReceiveEnable:	
  8007                           ; 1 bytes @ 0x0
  8008                           
  8009     0070                     ??_I2C1_ReceiveEnable:	
  8010                           ; 1 bytes @ 0x0
  8011                           
  8012     0070                     ?_I2C1_StopSend:	
  8013                           ; 1 bytes @ 0x0
  8014                           
  8015     0070                     ??_I2C1_StopSend:	
  8016                           ; 1 bytes @ 0x0
  8017                           
  8018     0070                     ?_I2C1_BusReset:	
  8019                           ; 1 bytes @ 0x0
  8020                           
  8021     0070                     ??_I2C1_BusReset:	
  8022                           ; 1 bytes @ 0x0
  8023                           
  8024     0070                     ?_CLOCK_Initialize:	
  8025                           ; 1 bytes @ 0x0
  8026                           
  8027     0070                     ?_PIN_MANAGER_Initialize:	
  8028                           ; 1 bytes @ 0x0
  8029                           
  8030     0070                     ?_EUSART_Initialize:	
  8031                           ; 1 bytes @ 0x0
  8032                           
  8033     0070                     ?_Timer0_Initialize:	
  8034                           ; 1 bytes @ 0x0
  8035                           
  8036     0070                     ?_TMR1_Initialize:	
  8037                           ; 1 bytes @ 0x0
  8038                           
  8039     0070                     ?_TMR2_Initialize:	
  8040                           ; 1 bytes @ 0x0
  8041                           
  8042     0070                     ?_TMR4_Initialize:	
  8043                           ; 1 bytes @ 0x0
  8044                           
  8045     0070                     ?_INTERRUPT_Initialize:	
  8046                           ; 1 bytes @ 0x0
  8047                           
  8048     0070                     ?_Timer0_OverflowISR:	
  8049                           ; 1 bytes @ 0x0
  8050                           
  8051     0070                     ?_TMR2_DefaultOverflowCallback:	
  8052                           ; 1 bytes @ 0x0
  8053                           
  8054     0070                     ??_TMR2_DefaultOverflowCallback:	
  8055                           ; 1 bytes @ 0x0
  8056                           
  8057     0070                     ?_Timer0_DefaultOverflowCallback:	
  8058                           ; 1 bytes @ 0x0
  8059                           
  8060     0070                     ?_TMR0_Custom_ISR:	
  8061                           ; 1 bytes @ 0x0
  8062                           
  8063     0070                     ?_TMR1_Start:	
  8064                           ; 1 bytes @ 0x0
  8065                           
  8066     0070                     ??_TMR1_Start:	
  8067                           ; 1 bytes @ 0x0
  8068                           
  8069     0070                     ?_TMR1_Stop:	
  8070                           ; 1 bytes @ 0x0
  8071                           
  8072     0070                     ??_TMR1_Stop:	
  8073                           ; 1 bytes @ 0x0
  8074                           
  8075     0070                     ?_TMR1_DefaultOverflowCallback:	
  8076                           ; 1 bytes @ 0x0
  8077                           
  8078     0070                     ??_TMR1_DefaultOverflowCallback:	
  8079                           ; 1 bytes @ 0x0
  8080                           
  8081     0070                     ?_TMR4_DefaultOverflowCallback:	
  8082                           ; 1 bytes @ 0x0
  8083                           
  8084     0070                     ??_TMR4_DefaultOverflowCallback:	
  8085                           ; 1 bytes @ 0x0
  8086                           
  8087     0070                     ?_EUSART_ReceiveISR:	
  8088                           ; 1 bytes @ 0x0
  8089                           
  8090     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  8091                           ; 1 bytes @ 0x0
  8092                           
  8093     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  8094                           ; 1 bytes @ 0x0
  8095                           
  8096     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  8097                           ; 1 bytes @ 0x0
  8098                           
  8099     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  8100                           ; 1 bytes @ 0x0
  8101                           
  8102     0070                     ?_UART_Custom_ISR:	
  8103                           ; 1 bytes @ 0x0
  8104                           
  8105     0070                     ?_IO_Expander_Write:	
  8106                           ; 1 bytes @ 0x0
  8107                           
  8108     0070                     ?_LCD_CMD:	
  8109                           ; 1 bytes @ 0x0
  8110                           
  8111     0070                     ?_strcpy:	
  8112                           ; 1 bytes @ 0x0
  8113                           
  8114     0070                     ?_memcpy:	
  8115                           ; 1 bytes @ 0x0
  8116                           
  8117     0070                     ?_putch:	
  8118                           ; 1 bytes @ 0x0
  8119                           
  8120     0070                     ??_putch:	
  8121                           ; 1 bytes @ 0x0
  8122                           
  8123     0070                     ?_ADC_Initialize:	
  8124                           ; 1 bytes @ 0x0
  8125                           
  8126     0070                     ?_I2C1_ISR:	
  8127                           ; 1 bytes @ 0x0
  8128                           
  8129     0070                     ?_I2C1_ERROR_ISR:	
  8130                           ; 1 bytes @ 0x0
  8131                           
  8132     0070                     ?_I2C1_Close:	
  8133                           ; 1 bytes @ 0x0
  8134                           
  8135     0070                     ??_I2C1_Close:	
  8136                           ; 1 bytes @ 0x0
  8137                           
  8138     0070                     ?_CCP1_Initialize:	
  8139                           ; 1 bytes @ 0x0
  8140                           
  8141     0070                     ?_CCP2_Initialize:	
  8142                           ; 1 bytes @ 0x0
  8143                           
  8144     0070                     ?_SYSTEM_Initialize:	
  8145                           ; 1 bytes @ 0x0
  8146                           
  8147     0070                     ?_INTERRUPT_InterruptManager:	
  8148                           ; 1 bytes @ 0x0
  8149                           
  8150     0070                     ?_I2C_Master_Wait:	
  8151                           ; 1 bytes @ 0x0
  8152                           
  8153     0070                     ??_I2C_Master_Wait:	
  8154                           ; 1 bytes @ 0x0
  8155                           
  8156     0070                     ?_I2C_Master_Start:	
  8157                           ; 1 bytes @ 0x0
  8158                           
  8159     0070                     ??_I2C_Master_Start:	
  8160                           ; 1 bytes @ 0x0
  8161                           
  8162     0070                     ?_I2C_Master_Stop:	
  8163                           ; 1 bytes @ 0x0
  8164                           
  8165     0070                     ??_I2C_Master_Stop:	
  8166                           ; 1 bytes @ 0x0
  8167                           
  8168     0070                     ?_I2C_Master_Write:	
  8169                           ; 1 bytes @ 0x0
  8170                           
  8171     0070                     ??_I2C_Master_Write:	
  8172                           ; 1 bytes @ 0x0
  8173                           
  8174     0070                     ?_LCD_Write_4Bit:	
  8175                           ; 1 bytes @ 0x0
  8176                           
  8177     0070                     ?_LCD_Write_Char:	
  8178                           ; 1 bytes @ 0x0
  8179                           
  8180     0070                     ?_Backlight:	
  8181                           ; 1 bytes @ 0x0
  8182                           
  8183     0070                     ?_LCD_Clear:	
  8184                           ; 1 bytes @ 0x0
  8185                           
  8186     0070                     ?__Umul8_16:	
  8187                           ; 1 bytes @ 0x0
  8188                           
  8189     0070                     ?_fputc:	
  8190                           ; 2 bytes @ 0x0
  8191                           
  8192     0070                     ?___fpclassifyf:	
  8193                           ; 2 bytes @ 0x0
  8194                           
  8195     0070                     ?_ADC_GetConversion:	
  8196                           ; 2 bytes @ 0x0
  8197                           
  8198     0070                     ?_main:	
  8199                           ; 2 bytes @ 0x0
  8200                           
  8201     0070                     ?___wmul:	
  8202                           ; 2 bytes @ 0x0
  8203                           
  8204     0070                     ?_labs:	
  8205                           ; 2 bytes @ 0x0
  8206                           
  8207     0070                     ?___flneg:	
  8208                           ; 4 bytes @ 0x0
  8209                           
  8210     0070                     ?___fltol:	
  8211                           ; 4 bytes @ 0x0
  8212                           
  8213     0070                     ?___fladd:	
  8214                           ; 4 bytes @ 0x0
  8215                           
  8216     0070                     I2C1_EVENT_NACK@retEventState:	
  8217                           ; 4 bytes @ 0x0
  8218                           
  8219     0070                     I2C1_EVENT_ERROR@retEventState:	
  8220                           ; 1 bytes @ 0x0
  8221                           
  8222     0070                     I2C1_DataTransmit@data:	
  8223                           ; 1 bytes @ 0x0
  8224                           
  8225     0070                     I2C_Master_Write@data:	
  8226                           ; 1 bytes @ 0x0
  8227                           
  8228     0070                     __Umul8_16@multiplicand:	
  8229                           ; 1 bytes @ 0x0
  8230                           
  8231     0070                     memcpy@s1:	
  8232                           ; 1 bytes @ 0x0
  8233                           
  8234     0070                     putch@c:	
  8235                           ; 1 bytes @ 0x0
  8236                           
  8237     0070                     ___wmul@multiplier:	
  8238                           ; 1 bytes @ 0x0
  8239                           
  8240     0070                     fputc@c:	
  8241                           ; 2 bytes @ 0x0
  8242                           
  8243     0070                     strcpy@src:	
  8244                           ; 2 bytes @ 0x0
  8245                           
  8246     0070                     ___fleq@ff1:	
  8247                           ; 2 bytes @ 0x0
  8248                           
  8249     0070                     ___flneg@f1:	
  8250                           ; 4 bytes @ 0x0
  8251                           
  8252     0070                     ___fltol@f1:	
  8253                           ; 4 bytes @ 0x0
  8254                           
  8255     0070                     ___fladd@b:	
  8256                           ; 4 bytes @ 0x0
  8257                           
  8258     0070                     ___fpclassifyf@x:	
  8259                           ; 4 bytes @ 0x0
  8260                           
  8261     0070                     labs@a:	
  8262                           ; 4 bytes @ 0x0
  8263                           
  8264                           
  8265                           ; 4 bytes @ 0x0
  8266     0070                     	ds	1
  8267     0071                     ??_I2C1_EVENT_SEND_WR_ADDR:
  8268     0071                     ??_I2C1_EVENT_TX:	
  8269                           ; 1 bytes @ 0x1
  8270                           
  8271     0071                     ??_IO_Expander_Write:	
  8272                           ; 1 bytes @ 0x1
  8273                           
  8274     0071                     I2C1_EVENT_RX@retEventState:	
  8275                           ; 1 bytes @ 0x1
  8276                           
  8277     0071                     IO_Expander_Write@Data:	
  8278                           ; 1 bytes @ 0x1
  8279                           
  8280     0071                     memcpy@n:	
  8281                           ; 1 bytes @ 0x1
  8282                           
  8283                           
  8284                           ; 2 bytes @ 0x1
  8285     0071                     	ds	1
  8286     0072                     ??__Umul8_16:
  8287     0072                     ??_strcpy:	
  8288                           ; 1 bytes @ 0x2
  8289                           
  8290     0072                     ??_ADC_GetConversion:	
  8291                           ; 1 bytes @ 0x2
  8292                           
  8293     0072                     ??_LCD_Write_4Bit:	
  8294                           ; 1 bytes @ 0x2
  8295                           
  8296     0072                     ??_Backlight:	
  8297                           ; 1 bytes @ 0x2
  8298                           
  8299     0072                     fputc@fp:	
  8300                           ; 1 bytes @ 0x2
  8301                           
  8302     0072                     ___wmul@multiplicand:	
  8303                           ; 1 bytes @ 0x2
  8304                           
  8305                           
  8306                           ; 2 bytes @ 0x2
  8307     0072                     	ds	1
  8308     0073                     ??_fputc:
  8309     0073                     ??_memcpy:	
  8310                           ; 1 bytes @ 0x3
  8311                           
  8312     0073                     ADC_GetConversion@channel:	
  8313                           ; 1 bytes @ 0x3
  8314                           
  8315     0073                     I2C1_EVENT_TX@retEventState:	
  8316                           ; 1 bytes @ 0x3
  8317                           
  8318     0073                     LCD_Write_4Bit@Nibble:	
  8319                           ; 1 bytes @ 0x3
  8320                           
  8321                           
  8322                           ; 1 bytes @ 0x3
  8323     0073                     	ds	1
  8324     0074                     ??_I2C1_EventHandler:
  8325     0074                     ??_I2C1_ErrorEventHandler:	
  8326                           ; 1 bytes @ 0x4
  8327                           
  8328     0074                     ??_LCD_CMD:	
  8329                           ; 1 bytes @ 0x4
  8330                           
  8331     0074                     ??___fpclassifyf:	
  8332                           ; 1 bytes @ 0x4
  8333                           
  8334     0074                     ??_labs:	
  8335                           ; 1 bytes @ 0x4
  8336                           
  8337     0074                     ??_LCD_Write_Char:	
  8338                           ; 1 bytes @ 0x4
  8339                           
  8340     0074                     ??___wmul:	
  8341                           ; 1 bytes @ 0x4
  8342                           
  8343     0074                     ??___flneg:	
  8344                           ; 1 bytes @ 0x4
  8345                           
  8346     0074                     ??___fltol:	
  8347                           ; 1 bytes @ 0x4
  8348                           
  8349     0074                     ?___xxtofl:	
  8350                           ; 1 bytes @ 0x4
  8351                           
  8352     0074                     memcpy@tmp:	
  8353                           ; 4 bytes @ 0x4
  8354                           
  8355     0074                     strcpy@d:	
  8356                           ; 1 bytes @ 0x4
  8357                           
  8358     0074                     ___wmul@product:	
  8359                           ; 1 bytes @ 0x4
  8360                           
  8361     0074                     __Umul8_16@product:	
  8362                           ; 2 bytes @ 0x4
  8363                           
  8364     0074                     ___fleq@ff2:	
  8365                           ; 2 bytes @ 0x4
  8366                           
  8367     0074                     ___fladd@a:	
  8368                           ; 4 bytes @ 0x4
  8369                           
  8370     0074                     ___xxtofl@val:	
  8371                           ; 4 bytes @ 0x4
  8372                           
  8373                           
  8374                           ; 4 bytes @ 0x4
  8375     0074                     	ds	1
  8376     0075                     LCD_CMD@CMD:
  8377     0075                     LCD_Write_Char@Data:	
  8378                           ; 1 bytes @ 0x5
  8379                           
  8380     0075                     memcpy@d1:	
  8381                           ; 1 bytes @ 0x5
  8382                           
  8383     0075                     strcpy@dest:	
  8384                           ; 1 bytes @ 0x5
  8385                           
  8386                           
  8387                           ; 1 bytes @ 0x5
  8388     0075                     	ds	1
  8389     0076                     ??_I2C1_ISR:
  8390     0076                     ??_I2C1_ERROR_ISR:	
  8391                           ; 1 bytes @ 0x6
  8392                           
  8393     0076                     ?_LCD_Write_String:	
  8394                           ; 1 bytes @ 0x6
  8395                           
  8396     0076                     ?_LCD_Set_Cursor:	
  8397                           ; 1 bytes @ 0x6
  8398                           
  8399     0076                     ??_LCD_Clear:	
  8400                           ; 1 bytes @ 0x6
  8401                           
  8402     0076                     ?_read_prec_or_width:	
  8403                           ; 1 bytes @ 0x6
  8404                           
  8405     0076                     LCD_Set_Cursor@COL:	
  8406                           ; 2 bytes @ 0x6
  8407                           
  8408     0076                     read_prec_or_width@ap:	
  8409                           ; 1 bytes @ 0x6
  8410                           
  8411     0076                     memcpy@d:	
  8412                           ; 1 bytes @ 0x6
  8413                           
  8414     0076                     LCD_Write_String@Str:	
  8415                           ; 1 bytes @ 0x6
  8416                           
  8417     0076                     __Umul8_16@word_mpld:	
  8418                           ; 2 bytes @ 0x6
  8419                           
  8420                           
  8421                           ; 2 bytes @ 0x6
  8422     0076                     	ds	1
  8423     0077                     ??_LCD_Set_Cursor:
  8424     0077                     LCD_Set_Cursor@ROW:	
  8425                           ; 1 bytes @ 0x7
  8426                           
  8427     0077                     memcpy@s:	
  8428                           ; 1 bytes @ 0x7
  8429                           
  8430                           
  8431                           ; 1 bytes @ 0x7
  8432     0077                     	ds	1
  8433     0078                     ??_LCD_Write_String:
  8434     0078                     ??___fleq:	
  8435                           ; 1 bytes @ 0x8
  8436                           
  8437     0078                     ??___xxtofl:	
  8438                           ; 1 bytes @ 0x8
  8439                           
  8440     0078                     ??_read_prec_or_width:	
  8441                           ; 1 bytes @ 0x8
  8442                           
  8443     0078                     ?_fputs:	
  8444                           ; 1 bytes @ 0x8
  8445                           
  8446     0078                     ___fltol@sign1:	
  8447                           ; 2 bytes @ 0x8
  8448                           
  8449     0078                     ___fladd@signs:	
  8450                           ; 1 bytes @ 0x8
  8451                           
  8452     0078                     __Umul8_16@multiplier:	
  8453                           ; 1 bytes @ 0x8
  8454                           
  8455     0078                     fputs@fp:	
  8456                           ; 1 bytes @ 0x8
  8457                           
  8458                           
  8459                           ; 1 bytes @ 0x8
  8460     0078                     	ds	1
  8461     0079                     ??_fputs:
  8462     0079                     ___fltol@exp1:	
  8463                           ; 1 bytes @ 0x9
  8464                           
  8465     0079                     ___fladd@aexp:	
  8466                           ; 1 bytes @ 0x9
  8467                           
  8468     0079                     LCD_Write_String@i:	
  8469                           ; 1 bytes @ 0x9
  8470                           
  8471                           
  8472                           ; 2 bytes @ 0x9
  8473     0079                     	ds	1
  8474     007A                     ___fladd@bexp:
  8475                           
  8476                           ; 1 bytes @ 0xA
  8477     007A                     	ds	1
  8478     007B                     ?_pad:
  8479     007B                     ___fladd@grs:	
  8480                           ; 1 bytes @ 0xB
  8481                           
  8482     007B                     pad@buf:	
  8483                           ; 1 bytes @ 0xB
  8484                           
  8485                           
  8486                           ; 1 bytes @ 0xB
  8487     007B                     	ds	1
  8488     007C                     ??___flsub:
  8489     007C                     pad@p:	
  8490                           ; 1 bytes @ 0xC
  8491                           
  8492                           
  8493                           ; 2 bytes @ 0xC
  8494     007C                     	ds	2
  8495     007E                     ??_Timer0_OverflowISR:
  8496     007E                     ??_Timer0_DefaultOverflowCallback:	
  8497                           ; 1 bytes @ 0xE
  8498                           
  8499     007E                     ??_INTERRUPT_InterruptManager:	
  8500                           ; 1 bytes @ 0xE
  8501                           
  8502                           
  8503                           	psect	cstackBANK0
  8504     0020                     __pcstackBANK0:	
  8505                           ; 1 bytes @ 0xE
  8506                           
  8507     0020                     ??___fladd:
  8508     0020                     ___xxtofl@sign:	
  8509                           ; 1 bytes @ 0x0
  8510                           
  8511     0020                     read_prec_or_width@c:	
  8512                           ; 1 bytes @ 0x0
  8513                           
  8514     0020                     fputs@c:	
  8515                           ; 1 bytes @ 0x0
  8516                           
  8517     0020                     ___fpclassifyf@e:	
  8518                           ; 1 bytes @ 0x0
  8519                           
  8520                           
  8521                           ; 2 bytes @ 0x0
  8522     0020                     	ds	1
  8523     0021                     ___xxtofl@exp:
  8524     0021                     read_prec_or_width@n:	
  8525                           ; 1 bytes @ 0x1
  8526                           
  8527     0021                     fputs@i:	
  8528                           ; 2 bytes @ 0x1
  8529                           
  8530                           
  8531                           ; 2 bytes @ 0x1
  8532     0021                     	ds	1
  8533     0022                     ___xxtofl@arg:
  8534     0022                     ___fpclassifyf@u:	
  8535                           ; 4 bytes @ 0x2
  8536                           
  8537                           
  8538                           ; 4 bytes @ 0x2
  8539     0022                     	ds	1
  8540     0023                     read_prec_or_width@fmt:
  8541     0023                     fputs@s:	
  8542                           ; 1 bytes @ 0x3
  8543                           
  8544                           
  8545                           ; 1 bytes @ 0x3
  8546     0023                     	ds	1
  8547     0024                     ??_pad:
  8548                           
  8549                           ; 1 bytes @ 0x4
  8550     0024                     	ds	1
  8551     0025                     pad@i:
  8552                           
  8553                           ; 2 bytes @ 0x5
  8554     0025                     	ds	1
  8555     0026                     ?___flmul:
  8556     0026                     ___flmul@b:	
  8557                           ; 4 bytes @ 0x6
  8558                           
  8559                           
  8560                           ; 4 bytes @ 0x6
  8561     0026                     	ds	1
  8562     0027                     pad@fp:
  8563                           
  8564                           ; 1 bytes @ 0x7
  8565     0027                     	ds	1
  8566     0028                     ?_xtoa:
  8567     0028                     xtoa@d:	
  8568                           ; 1 bytes @ 0x8
  8569                           
  8570                           
  8571                           ; 2 bytes @ 0x8
  8572     0028                     	ds	2
  8573     002A                     ??_xtoa:
  8574     002A                     ___flmul@a:	
  8575                           ; 1 bytes @ 0xA
  8576                           
  8577                           
  8578                           ; 4 bytes @ 0xA
  8579     002A                     	ds	1
  8580     002B                     xtoa@w:
  8581                           
  8582                           ; 2 bytes @ 0xB
  8583     002B                     	ds	2
  8584     002D                     xtoa@fp:
  8585                           
  8586                           ; 1 bytes @ 0xD
  8587     002D                     	ds	1
  8588     002E                     ??___flmul:
  8589     002E                     xtoa@p:	
  8590                           ; 1 bytes @ 0xE
  8591                           
  8592                           
  8593                           ; 2 bytes @ 0xE
  8594     002E                     	ds	2
  8595     0030                     xtoa@c:
  8596                           
  8597                           ; 1 bytes @ 0x10
  8598     0030                     	ds	1
  8599     0031                     xtoa@i:
  8600                           
  8601                           ; 2 bytes @ 0x11
  8602     0031                     	ds	2
  8603     0033                     ___flmul@sign:
  8604                           
  8605                           ; 1 bytes @ 0x13
  8606     0033                     	ds	1
  8607     0034                     ___flmul@grs:
  8608                           
  8609                           ; 4 bytes @ 0x14
  8610     0034                     	ds	4
  8611     0038                     ___flmul@aexp:
  8612                           
  8613                           ; 1 bytes @ 0x18
  8614     0038                     	ds	1
  8615     0039                     ___flmul@bexp:
  8616                           
  8617                           ; 1 bytes @ 0x19
  8618     0039                     	ds	1
  8619     003A                     ___flmul@prod:
  8620                           
  8621                           ; 4 bytes @ 0x1A
  8622     003A                     	ds	4
  8623     003E                     ___flmul@temp:
  8624                           
  8625                           ; 2 bytes @ 0x1E
  8626     003E                     	ds	2
  8627     0040                     ?___flge:
  8628     0040                     ?___flsub:	
  8629                           ; 1 bit 
  8630                           
  8631     0040                     ?___fldiv:	
  8632                           ; 4 bytes @ 0x20
  8633                           
  8634     0040                     ___flge@ff1:	
  8635                           ; 4 bytes @ 0x20
  8636                           
  8637     0040                     ___flsub@a:	
  8638                           ; 4 bytes @ 0x20
  8639                           
  8640     0040                     ___fldiv@a:	
  8641                           ; 4 bytes @ 0x20
  8642                           
  8643                           
  8644                           ; 4 bytes @ 0x20
  8645     0040                     	ds	4
  8646     0044                     ___flge@ff2:
  8647     0044                     ___flsub@b:	
  8648                           ; 4 bytes @ 0x24
  8649                           
  8650     0044                     ___fldiv@b:	
  8651                           ; 4 bytes @ 0x24
  8652                           
  8653                           
  8654                           ; 4 bytes @ 0x24
  8655     0044                     	ds	4
  8656     0048                     ??___flge:
  8657     0048                     ??___fldiv:	
  8658                           ; 1 bytes @ 0x28
  8659                           
  8660                           
  8661                           ; 1 bytes @ 0x28
  8662     0048                     	ds	5
  8663     004D                     ___fldiv@rem:
  8664                           
  8665                           ; 4 bytes @ 0x2D
  8666     004D                     	ds	4
  8667     0051                     ___fldiv@sign:
  8668                           
  8669                           ; 1 bytes @ 0x31
  8670     0051                     	ds	1
  8671     0052                     ___fldiv@new_exp:
  8672                           
  8673                           ; 2 bytes @ 0x32
  8674     0052                     	ds	2
  8675     0054                     ___fldiv@grs:
  8676                           
  8677                           ; 4 bytes @ 0x34
  8678     0054                     	ds	4
  8679     0058                     ___fldiv@bexp:
  8680                           
  8681                           ; 1 bytes @ 0x38
  8682     0058                     	ds	1
  8683     0059                     ___fldiv@aexp:
  8684                           
  8685                           ; 1 bytes @ 0x39
  8686     0059                     	ds	1
  8687     005A                     ?_floorf:
  8688     005A                     floorf@x:	
  8689                           ; 4 bytes @ 0x3A
  8690                           
  8691                           
  8692                           ; 4 bytes @ 0x3A
  8693     005A                     	ds	4
  8694     005E                     ??_floorf:
  8695                           
  8696                           ; 1 bytes @ 0x3E
  8697     005E                     	ds	6
  8698     0064                     floorf@m:
  8699                           
  8700                           ; 4 bytes @ 0x44
  8701     0064                     	ds	4
  8702     0068                     floorf@e:
  8703                           
  8704                           ; 2 bytes @ 0x48
  8705     0068                     	ds	2
  8706     006A                     floorf@u:
  8707                           
  8708                           ; 4 bytes @ 0x4A
  8709     006A                     	ds	4
  8710     006E                     ?_vfpfcnvrt:
  8711     006E                     vfpfcnvrt@fmt:	
  8712                           ; 1 bytes @ 0x4E
  8713                           
  8714                           
  8715                           ; 1 bytes @ 0x4E
  8716     006E                     	ds	1
  8717     006F                     vfpfcnvrt@ap:
  8718                           
  8719                           ; 1 bytes @ 0x4F
  8720     006F                     	ds	1
  8721                           
  8722                           	psect	maintext
  8723     1193                     __pmaintext:	
  8724 ;;
  8725 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8726 ;;
  8727 ;; *************** function _main *****************
  8728 ;; Defined at:
  8729 ;;		line 46 in file "main.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;		None
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;  i               2    0        int 
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  2  1137[None  ] int 
  8736 ;; Registers used:
  8737 ;;		wreg, status,2, status,0, pclath, cstack
  8738 ;; Tracked objects:
  8739 ;;		On entry : B1F/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  8746 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  8747 ;;Total ram usage:        2 bytes
  8748 ;; Hardware stack levels required when called: 15
  8749 ;; This function calls:
  8750 ;;		_CCP2_LoadDutyValue
  8751 ;;		_SYSTEM_Initialize
  8752 ;; This function is called by:
  8753 ;;		Startup code after reset
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757     1193                     _main:	
  8758                           ;psect for function _main
  8759                           
  8760     1193                     l6284:	
  8761                           ;incstack = 0
  8762                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  8763                           
  8764                           
  8765                           ;main.c: 48:     SYSTEM_Initialize();
  8766     1193  3190  2095  3191   	fcall	_SYSTEM_Initialize
  8767     1196                     l6286:
  8768                           
  8769                           ;main.c: 51:     PIE1bits.SSP1IE = 0;
  8770     1196  0021               	movlb	1	; select bank1
  8771     1197  1190               	bcf	16,3	;volatile
  8772     1198                     l6288:
  8773                           
  8774                           ;main.c: 52:     PIE2bits.BCL1IE = 0;
  8775     1198  1191               	bcf	17,3	;volatile
  8776     1199                     l6290:
  8777                           
  8778                           ;main.c: 59:     (INTCONbits.GIE = 1);
  8779     1199  178B               	bsf	11,7	;volatile
  8780     119A                     l6292:
  8781                           
  8782                           ;main.c: 65:     (INTCONbits.PEIE = 1);
  8783     119A  170B               	bsf	11,6	;volatile
  8784     119B                     l6294:
  8785     119B                     l6296:
  8786                           
  8787                           ;main.c: 81:     INTCONbits.TMR0IE = 0;
  8788     119B  128B               	bcf	11,5	;volatile
  8789     119C                     l6298:
  8790                           
  8791                           ;main.c: 82:     LATBbits.LATB4 = 0;
  8792     119C  0022               	movlb	2	; select bank2
  8793     119D  120D               	bcf	13,4	;volatile
  8794     119E                     l6300:
  8795                           
  8796                           ;main.c: 83:     LATBbits.LATB5 = 0;
  8797     119E  128D               	bcf	13,5	;volatile
  8798     119F                     l6302:
  8799                           
  8800                           ;main.c: 84:     LATBbits.LATB6 = 0;
  8801     119F  130D               	bcf	13,6	;volatile
  8802     11A0                     l6304:
  8803                           
  8804                           ;main.c: 85:     CCP2_LoadDutyValue(500);
  8805     11A0  30F4               	movlw	244
  8806     11A1  0023               	movlb	3	; select bank3
  8807     11A2  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  8808     11A3  3001               	movlw	1
  8809     11A4  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  8810     11A5  319E  26FB  3191   	fcall	_CCP2_LoadDutyValue
  8811     11A8                     l6306:
  8812                           
  8813                           ;main.c: 87:     {;main.c: 99:         LATBbits.LATB6 = 0;
  8814     11A8  0022               	movlb	2	; select bank2
  8815     11A9  130D               	bcf	13,6	;volatile
  8816                           
  8817                           ;main.c: 100:         _delay((unsigned long)((500)*(4000000/4000.0)));
  8818     11AA  3003               	movlw	3
  8819     11AB  0023               	movlb	3	; select bank3
  8820     11AC  00C1               	movwf	(??_main^(0+384)+1)
  8821     11AD  308A               	movlw	138
  8822     11AE  00C0               	movwf	??_main^(0+384)
  8823     11AF  3055               	movlw	85
  8824     11B0                     u5427:
  8825     11B0  0B89               	decfsz	9,f
  8826     11B1  29B0               	goto	u5427
  8827     11B2  0BC0               	decfsz	??_main^(0+384),f
  8828     11B3  29B0               	goto	u5427
  8829     11B4  0BC1               	decfsz	(??_main^(0+384)+1),f
  8830     11B5  29B0               	goto	u5427
  8831     11B6  3200               	nop2
  8832     11B7                     l6308:
  8833                           
  8834                           ;main.c: 101:         LATBbits.LATB6 = 1;
  8835     11B7  0022               	movlb	2	; select bank2
  8836     11B8  170D               	bsf	13,6	;volatile
  8837                           
  8838                           ;main.c: 102:         _delay((unsigned long)((500)*(4000000/4000.0)));
  8839     11B9  3003               	movlw	3
  8840     11BA  0023               	movlb	3	; select bank3
  8841     11BB  00C1               	movwf	(??_main^(0+384)+1)
  8842     11BC  308A               	movlw	138
  8843     11BD  00C0               	movwf	??_main^(0+384)
  8844     11BE  3055               	movlw	85
  8845     11BF                     u5437:
  8846     11BF  0B89               	decfsz	9,f
  8847     11C0  29BF               	goto	u5437
  8848     11C1  0BC0               	decfsz	??_main^(0+384),f
  8849     11C2  29BF               	goto	u5437
  8850     11C3  0BC1               	decfsz	(??_main^(0+384)+1),f
  8851     11C4  29BF               	goto	u5437
  8852     11C5  3200               	nop2
  8853     11C6  29A8               	goto	l6306
  8854     11C7  3180  2841         	ljmp	start
  8855     11C9                     __end_of_main:
  8856                           
  8857                           	psect	text1
  8858     1095                     __ptext1:	
  8859 ;; *************** function _SYSTEM_Initialize *****************
  8860 ;; Defined at:
  8861 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;		None
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;		None
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      void 
  8868 ;; Registers used:
  8869 ;;		wreg, status,2, status,0, pclath, cstack
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;Total ram usage:        0 bytes
  8880 ;; Hardware stack levels used: 1
  8881 ;; Hardware stack levels required when called: 14
  8882 ;; This function calls:
  8883 ;;		_ADC_Initialize
  8884 ;;		_CCP1_Initialize
  8885 ;;		_CCP2_Initialize
  8886 ;;		_CLOCK_Initialize
  8887 ;;		_EUSART_Initialize
  8888 ;;		_I2C1_Initialize
  8889 ;;		_INTERRUPT_Initialize
  8890 ;;		_PIN_MANAGER_Initialize
  8891 ;;		_TMR1_Initialize
  8892 ;;		_TMR2_Initialize
  8893 ;;		_TMR4_Initialize
  8894 ;;		_Timer0_Initialize
  8895 ;; This function is called by:
  8896 ;;		_main
  8897 ;; This function uses a non-reentrant model
  8898 ;;
  8899                           
  8900     1095                     _SYSTEM_Initialize:	
  8901                           ;psect for function _SYSTEM_Initialize
  8902                           
  8903     1095                     l6276:	
  8904                           ;incstack = 0
  8905                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8906                           
  8907                           
  8908                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  8909     1095  3190  2000  3190   	fcall	_CLOCK_Initialize
  8910                           
  8911                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  8912     1098  3192  229B  3190   	fcall	_PIN_MANAGER_Initialize
  8913                           
  8914                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  8915     109B  319D  25B6  3190   	fcall	_ADC_Initialize
  8916                           
  8917                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
  8918     109E  3191  2107  3190   	fcall	_EUSART_Initialize
  8919                           
  8920                           ;mcc_generated_files/system/src/system.c: 46:     I2C1_Initialize();
  8921     10A1  319E  263E  3190   	fcall	_I2C1_Initialize
  8922                           
  8923                           ;mcc_generated_files/system/src/system.c: 47:     CCP1_Initialize();
  8924     10A4  319D  25A1  3190   	fcall	_CCP1_Initialize
  8925                           
  8926                           ;mcc_generated_files/system/src/system.c: 48:     CCP2_Initialize();
  8927     10A7  3187  27F5  3190   	fcall	_CCP2_Initialize
  8928                           
  8929                           ;mcc_generated_files/system/src/system.c: 49:     Timer0_Initialize();
  8930     10AA  319E  26E5  3190   	fcall	_Timer0_Initialize
  8931                           
  8932                           ;mcc_generated_files/system/src/system.c: 50:     TMR1_Initialize();
  8933     10AD  319F  2749  3190   	fcall	_TMR1_Initialize
  8934                           
  8935                           ;mcc_generated_files/system/src/system.c: 51:     TMR2_Initialize();
  8936     10B0  319E  2652  3190   	fcall	_TMR2_Initialize
  8937                           
  8938                           ;mcc_generated_files/system/src/system.c: 52:     TMR4_Initialize();
  8939     10B3  319E  26BA  3190   	fcall	_TMR4_Initialize
  8940                           
  8941                           ;mcc_generated_files/system/src/system.c: 53:     INTERRUPT_Initialize();
  8942     10B6  319D  25E5  3190   	fcall	_INTERRUPT_Initialize
  8943     10B9                     l375:
  8944     10B9  0008               	return
  8945     10BA                     __end_of_SYSTEM_Initialize:
  8946                           
  8947                           	psect	text2
  8948     1EE5                     __ptext2:	
  8949 ;; *************** function _Timer0_Initialize *****************
  8950 ;; Defined at:
  8951 ;;		line 51 in file "mcc_generated_files/timer/src/tmr0.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;		None
  8954 ;; Auto vars:     Size  Location     Type
  8955 ;;		None
  8956 ;; Return value:  Size  Location     Type
  8957 ;;                  1    wreg      void 
  8958 ;; Registers used:
  8959 ;;		wreg, status,2, status,0, pclath, cstack
  8960 ;; Tracked objects:
  8961 ;;		On entry : 0/0
  8962 ;;		On exit  : 0/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8969 ;;Total ram usage:        0 bytes
  8970 ;; Hardware stack levels used: 1
  8971 ;; Hardware stack levels required when called: 13
  8972 ;; This function calls:
  8973 ;;		_Timer0_OverflowCallbackRegister
  8974 ;; This function is called by:
  8975 ;;		_SYSTEM_Initialize
  8976 ;; This function uses a non-reentrant model
  8977 ;;
  8978                           
  8979     1EE5                     _Timer0_Initialize:	
  8980                           ;psect for function _Timer0_Initialize
  8981                           
  8982     1EE5                     l6206:	
  8983                           ;incstack = 0
  8984                           ; Regs used in _Timer0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8985                           
  8986                           
  8987                           ;mcc_generated_files/timer/src/tmr0.c: 54:   OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) 
      +                          | (0xD7 & 0x3F));
  8988     1EE5  0021               	movlb	1	; select bank1
  8989     1EE6  0815               	movf	21,w	;volatile
  8990     1EE7  39C0               	andlw	192
  8991     1EE8  3817               	iorlw	23
  8992     1EE9  0095               	movwf	21	;volatile
  8993     1EEA                     l6208:
  8994                           
  8995                           ;mcc_generated_files/timer/src/tmr0.c: 57:   TMR0 = 0x3D;
  8996     1EEA  303D               	movlw	61
  8997     1EEB  0020               	movlb	0	; select bank0
  8998     1EEC  0095               	movwf	21	;volatile
  8999     1EED                     l6210:
  9000                           
  9001                           ;mcc_generated_files/timer/src/tmr0.c: 60:   timer0ReloadVal = 61;
  9002     1EED  303D               	movlw	61
  9003     1EEE  0022               	movlb	2	; select bank2
  9004     1EEF  00EB               	movwf	_timer0ReloadVal^(0+256)	;volatile
  9005     1EF0                     l6212:
  9006                           
  9007                           ;mcc_generated_files/timer/src/tmr0.c: 63:   Timer0_OverflowCallbackRegister(Timer0_Defa
      +                          ultOverflowCallback);
  9008     1EF0  301B               	movlw	low _Timer0_DefaultOverflowCallback
  9009     1EF1  0023               	movlb	3	; select bank3
  9010     1EF2  00BE               	movwf	Timer0_OverflowCallbackRegister@CallbackHandler^(0+384)
  9011     1EF3  301D               	movlw	high _Timer0_DefaultOverflowCallback
  9012     1EF4  00BF               	movwf	(Timer0_OverflowCallbackRegister@CallbackHandler^(0+384)+1)
  9013     1EF5  319D  2598  319E   	fcall	_Timer0_OverflowCallbackRegister
  9014     1EF8                     l6214:
  9015                           
  9016                           ;mcc_generated_files/timer/src/tmr0.c: 66:   INTCONbits.TMR0IF = 0;
  9017     1EF8  110B               	bcf	11,2	;volatile
  9018     1EF9                     l6216:
  9019                           
  9020                           ;mcc_generated_files/timer/src/tmr0.c: 69:   INTCONbits.TMR0IE = 1;
  9021     1EF9  168B               	bsf	11,5	;volatile
  9022     1EFA                     l627:
  9023     1EFA  0008               	return
  9024     1EFB                     __end_of_Timer0_Initialize:
  9025                           
  9026                           	psect	text3
  9027     1D98                     __ptext3:	
  9028 ;; *************** function _Timer0_OverflowCallbackRegister *****************
  9029 ;; Defined at:
  9030 ;;		line 121 in file "mcc_generated_files/timer/src/tmr0.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;  CallbackHand    2    0[BANK3 ] PTR FTN()void 
  9033 ;;		 -> TMR4_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), Timer0_DefaultOverflowCallback(1), TMR2_Defaul
      +tOverflowCallback(1), 
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;		None
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  1    wreg      void 
  9038 ;; Registers used:
  9039 ;;		wreg
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9045 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9048 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9049 ;;Total ram usage:        2 bytes
  9050 ;; Hardware stack levels used: 1
  9051 ;; Hardware stack levels required when called: 12
  9052 ;; This function calls:
  9053 ;;		Nothing
  9054 ;; This function is called by:
  9055 ;;		_Timer0_Initialize
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059     1D98                     _Timer0_OverflowCallbackRegister:	
  9060                           ;psect for function _Timer0_OverflowCallbackRegister
  9061                           
  9062     1D98                     l6048:	
  9063                           ;incstack = 0
  9064                           ; Regs used in _Timer0_OverflowCallbackRegister: [wreg]
  9065                           
  9066                           
  9067                           ;mcc_generated_files/timer/src/tmr0.c: 121: void Timer0_OverflowCallbackRegister(void (*
      +                           CallbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 122: {;mcc_generated_file
      +                          s/timer/src/tmr0.c: 123:   Timer0_OverflowCallback = CallbackHandler;
  9068     1D98  0023               	movlb	3	; select bank3
  9069     1D99  083F               	movf	(Timer0_OverflowCallbackRegister@CallbackHandler+1)^(0+384),w
  9070     1D9A  0022               	movlb	2	; select bank2
  9071     1D9B  00E2               	movwf	(_Timer0_OverflowCallback+1)^(0+256)
  9072     1D9C  0023               	movlb	3	; select bank3
  9073     1D9D  083E               	movf	Timer0_OverflowCallbackRegister@CallbackHandler^(0+384),w
  9074     1D9E  0022               	movlb	2	; select bank2
  9075     1D9F  00E1               	movwf	_Timer0_OverflowCallback^(0+256)
  9076     1DA0                     l649:
  9077     1DA0  0008               	return
  9078     1DA1                     __end_of_Timer0_OverflowCallbackRegister:
  9079                           
  9080                           	psect	text4
  9081     1EBA                     __ptext4:	
  9082 ;; *************** function _TMR4_Initialize *****************
  9083 ;; Defined at:
  9084 ;;		line 57 in file "mcc_generated_files/timer/src/tmr4.c"
  9085 ;; Parameters:    Size  Location     Type
  9086 ;;		None
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;		None
  9089 ;; Return value:  Size  Location     Type
  9090 ;;                  1    wreg      void 
  9091 ;; Registers used:
  9092 ;;		wreg, status,2, status,0, pclath, cstack
  9093 ;; Tracked objects:
  9094 ;;		On entry : 0/0
  9095 ;;		On exit  : 0/0
  9096 ;;		Unchanged: 0/0
  9097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;Total ram usage:        0 bytes
  9103 ;; Hardware stack levels used: 1
  9104 ;; Hardware stack levels required when called: 13
  9105 ;; This function calls:
  9106 ;;		_TMR4_OverflowCallbackRegister
  9107 ;; This function is called by:
  9108 ;;		_SYSTEM_Initialize
  9109 ;; This function uses a non-reentrant model
  9110 ;;
  9111                           
  9112     1EBA                     _TMR4_Initialize:	
  9113                           ;psect for function _TMR4_Initialize
  9114                           
  9115     1EBA                     l6246:	
  9116                           ;incstack = 0
  9117                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9118                           
  9119                           
  9120                           ;mcc_generated_files/timer/src/tmr4.c: 61:     T4CLKCON = 0x0;
  9121     1EBA  0028               	movlb	8	; select bank8
  9122     1EBB  0197               	clrf	23	;volatile
  9123                           
  9124                           ;mcc_generated_files/timer/src/tmr4.c: 63:     T4HLT = 0x0;
  9125     1EBC  0196               	clrf	22	;volatile
  9126                           
  9127                           ;mcc_generated_files/timer/src/tmr4.c: 65:     T4RST = 0x0;
  9128     1EBD  0198               	clrf	24	;volatile
  9129     1EBE                     l6248:
  9130                           
  9131                           ;mcc_generated_files/timer/src/tmr4.c: 67:     T4PR = 0x9C;
  9132     1EBE  309C               	movlw	156
  9133     1EBF  0094               	movwf	20	;volatile
  9134     1EC0                     l6250:
  9135                           
  9136                           ;mcc_generated_files/timer/src/tmr4.c: 69:     T4TMR = 0x0;
  9137     1EC0  0193               	clrf	19	;volatile
  9138     1EC1                     l6252:
  9139                           
  9140                           ;mcc_generated_files/timer/src/tmr4.c: 72:     TMR4_OverflowCallbackRegister(TMR4_Defaul
      +                          tOverflowCallback);
  9141     1EC1  30DB               	movlw	low _TMR4_DefaultOverflowCallback
  9142     1EC2  0023               	movlb	3	; select bank3
  9143     1EC3  00BE               	movwf	TMR4_OverflowCallbackRegister@InterruptHandler^(0+384)
  9144     1EC4  301C               	movlw	high _TMR4_DefaultOverflowCallback
  9145     1EC5  00BF               	movwf	(TMR4_OverflowCallbackRegister@InterruptHandler^(0+384)+1)
  9146     1EC6  319D  2553  319E   	fcall	_TMR4_OverflowCallbackRegister
  9147     1EC9                     l6254:
  9148                           
  9149                           ;mcc_generated_files/timer/src/tmr4.c: 75:     PIR2bits.TMR4IF = 0;
  9150     1EC9  0020               	movlb	0	; select bank0
  9151     1ECA  1091               	bcf	17,1	;volatile
  9152     1ECB                     l6256:
  9153                           
  9154                           ;mcc_generated_files/timer/src/tmr4.c: 77:     T4CON = 0xF0;
  9155     1ECB  30F0               	movlw	240
  9156     1ECC  0028               	movlb	8	; select bank8
  9157     1ECD  0095               	movwf	21	;volatile
  9158     1ECE                     l778:
  9159     1ECE  0008               	return
  9160     1ECF                     __end_of_TMR4_Initialize:
  9161                           
  9162                           	psect	text5
  9163     1D53                     __ptext5:	
  9164 ;; *************** function _TMR4_OverflowCallbackRegister *****************
  9165 ;; Defined at:
  9166 ;;		line 122 in file "mcc_generated_files/timer/src/tmr4.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;  InterruptHan    2    0[BANK3 ] PTR FTN()void 
  9169 ;;		 -> TMR4_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), Timer0_DefaultOverflowCallback(1), TMR2_Defaul
      +tOverflowCallback(1), 
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;		None
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1    wreg      void 
  9174 ;; Registers used:
  9175 ;;		wreg
  9176 ;; Tracked objects:
  9177 ;;		On entry : 0/0
  9178 ;;		On exit  : 0/0
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9181 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9185 ;;Total ram usage:        2 bytes
  9186 ;; Hardware stack levels used: 1
  9187 ;; Hardware stack levels required when called: 12
  9188 ;; This function calls:
  9189 ;;		Nothing
  9190 ;; This function is called by:
  9191 ;;		_TMR4_Initialize
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195     1D53                     _TMR4_OverflowCallbackRegister:	
  9196                           ;psect for function _TMR4_OverflowCallbackRegister
  9197                           
  9198     1D53                     l6052:	
  9199                           ;incstack = 0
  9200                           ; Regs used in _TMR4_OverflowCallbackRegister: [wreg]
  9201                           
  9202                           
  9203                           ;mcc_generated_files/timer/src/tmr4.c: 122: void TMR4_OverflowCallbackRegister(void (* I
      +                          nterruptHandler)(void));mcc_generated_files/timer/src/tmr4.c: 123: {;mcc_generated_files
      +                          /timer/src/tmr4.c: 124:    TMR4_OverflowCallback = InterruptHandler;
  9204     1D53  0023               	movlb	3	; select bank3
  9205     1D54  083F               	movf	(TMR4_OverflowCallbackRegister@InterruptHandler+1)^(0+384),w
  9206     1D55  00B3               	movwf	(_TMR4_OverflowCallback+1)^(0+384)
  9207     1D56  083E               	movf	TMR4_OverflowCallbackRegister@InterruptHandler^(0+384),w
  9208     1D57  00B2               	movwf	_TMR4_OverflowCallback^(0+384)
  9209     1D58                     l802:
  9210     1D58  0008               	return
  9211     1D59                     __end_of_TMR4_OverflowCallbackRegister:
  9212                           
  9213                           	psect	text6
  9214     1E52                     __ptext6:	
  9215 ;; *************** function _TMR2_Initialize *****************
  9216 ;; Defined at:
  9217 ;;		line 57 in file "mcc_generated_files/timer/src/tmr2.c"
  9218 ;; Parameters:    Size  Location     Type
  9219 ;;		None
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;		None
  9222 ;; Return value:  Size  Location     Type
  9223 ;;                  1    wreg      void 
  9224 ;; Registers used:
  9225 ;;		wreg, status,2, status,0, pclath, cstack
  9226 ;; Tracked objects:
  9227 ;;		On entry : 0/0
  9228 ;;		On exit  : 0/0
  9229 ;;		Unchanged: 0/0
  9230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;Total ram usage:        0 bytes
  9236 ;; Hardware stack levels used: 1
  9237 ;; Hardware stack levels required when called: 13
  9238 ;; This function calls:
  9239 ;;		_TMR2_OverflowCallbackRegister
  9240 ;; This function is called by:
  9241 ;;		_SYSTEM_Initialize
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245     1E52                     _TMR2_Initialize:	
  9246                           ;psect for function _TMR2_Initialize
  9247                           
  9248     1E52                     l6234:	
  9249                           ;incstack = 0
  9250                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9251                           
  9252                           
  9253                           ;mcc_generated_files/timer/src/tmr2.c: 61:     T2CLKCON = 0x0;
  9254     1E52  0020               	movlb	0	; select bank0
  9255     1E53  019E               	clrf	30	;volatile
  9256                           
  9257                           ;mcc_generated_files/timer/src/tmr2.c: 63:     T2HLT = 0x0;
  9258     1E54  019D               	clrf	29	;volatile
  9259                           
  9260                           ;mcc_generated_files/timer/src/tmr2.c: 65:     T2RST = 0x0;
  9261     1E55  019F               	clrf	31	;volatile
  9262     1E56                     l6236:
  9263                           
  9264                           ;mcc_generated_files/timer/src/tmr2.c: 67:     T2PR = 0xFF;
  9265     1E56  30FF               	movlw	255
  9266     1E57  009B               	movwf	27	;volatile
  9267     1E58                     l6238:
  9268                           
  9269                           ;mcc_generated_files/timer/src/tmr2.c: 69:     T2TMR = 0x0;
  9270     1E58  019A               	clrf	26	;volatile
  9271     1E59                     l6240:
  9272                           
  9273                           ;mcc_generated_files/timer/src/tmr2.c: 72:     TMR2_OverflowCallbackRegister(TMR2_Defaul
      +                          tOverflowCallback);
  9274     1E59  30D9               	movlw	low _TMR2_DefaultOverflowCallback
  9275     1E5A  0023               	movlb	3	; select bank3
  9276     1E5B  00BE               	movwf	TMR2_OverflowCallbackRegister@InterruptHandler^(0+384)
  9277     1E5C  301C               	movlw	high _TMR2_DefaultOverflowCallback
  9278     1E5D  00BF               	movwf	(TMR2_OverflowCallbackRegister@InterruptHandler^(0+384)+1)
  9279     1E5E  319D  254D  319E   	fcall	_TMR2_OverflowCallbackRegister
  9280     1E61                     l6242:
  9281                           
  9282                           ;mcc_generated_files/timer/src/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  9283     1E61  0020               	movlb	0	; select bank0
  9284     1E62  1090               	bcf	16,1	;volatile
  9285     1E63                     l6244:
  9286                           
  9287                           ;mcc_generated_files/timer/src/tmr2.c: 77:     T2CON = 0xF0;
  9288     1E63  30F0               	movlw	240
  9289     1E64  009C               	movwf	28	;volatile
  9290     1E65                     l571:
  9291     1E65  0008               	return
  9292     1E66                     __end_of_TMR2_Initialize:
  9293                           
  9294                           	psect	text7
  9295     1D4D                     __ptext7:	
  9296 ;; *************** function _TMR2_OverflowCallbackRegister *****************
  9297 ;; Defined at:
  9298 ;;		line 122 in file "mcc_generated_files/timer/src/tmr2.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;  InterruptHan    2    0[BANK3 ] PTR FTN()void 
  9301 ;;		 -> TMR4_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), Timer0_DefaultOverflowCallback(1), TMR2_Defaul
      +tOverflowCallback(1), 
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;		None
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  1    wreg      void 
  9306 ;; Registers used:
  9307 ;;		wreg
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9313 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9316 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9317 ;;Total ram usage:        2 bytes
  9318 ;; Hardware stack levels used: 1
  9319 ;; Hardware stack levels required when called: 12
  9320 ;; This function calls:
  9321 ;;		Nothing
  9322 ;; This function is called by:
  9323 ;;		_TMR2_Initialize
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327     1D4D                     _TMR2_OverflowCallbackRegister:	
  9328                           ;psect for function _TMR2_OverflowCallbackRegister
  9329                           
  9330     1D4D                     l6046:	
  9331                           ;incstack = 0
  9332                           ; Regs used in _TMR2_OverflowCallbackRegister: [wreg]
  9333                           
  9334                           
  9335                           ;mcc_generated_files/timer/src/tmr2.c: 122: void TMR2_OverflowCallbackRegister(void (* I
      +                          nterruptHandler)(void));mcc_generated_files/timer/src/tmr2.c: 123: {;mcc_generated_files
      +                          /timer/src/tmr2.c: 124:    TMR2_OverflowCallback = InterruptHandler;
  9336     1D4D  0023               	movlb	3	; select bank3
  9337     1D4E  083F               	movf	(TMR2_OverflowCallbackRegister@InterruptHandler+1)^(0+384),w
  9338     1D4F  00B9               	movwf	(_TMR2_OverflowCallback+1)^(0+384)
  9339     1D50  083E               	movf	TMR2_OverflowCallbackRegister@InterruptHandler^(0+384),w
  9340     1D51  00B8               	movwf	_TMR2_OverflowCallback^(0+384)
  9341     1D52                     l595:
  9342     1D52  0008               	return
  9343     1D53                     __end_of_TMR2_OverflowCallbackRegister:
  9344                           
  9345                           	psect	text8
  9346     1F49                     __ptext8:	
  9347 ;; *************** function _TMR1_Initialize *****************
  9348 ;; Defined at:
  9349 ;;		line 57 in file "mcc_generated_files/timer/src/tmr1.c"
  9350 ;; Parameters:    Size  Location     Type
  9351 ;;		None
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;		None
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  1    wreg      void 
  9356 ;; Registers used:
  9357 ;;		wreg, status,2, status,0, pclath, cstack
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;Total ram usage:        0 bytes
  9368 ;; Hardware stack levels used: 1
  9369 ;; Hardware stack levels required when called: 13
  9370 ;; This function calls:
  9371 ;;		_TMR1_OverflowCallbackRegister
  9372 ;; This function is called by:
  9373 ;;		_SYSTEM_Initialize
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377     1F49                     _TMR1_Initialize:	
  9378                           ;psect for function _TMR1_Initialize
  9379                           
  9380     1F49                     l6218:	
  9381                           ;incstack = 0
  9382                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9383                           
  9384                           
  9385                           ;mcc_generated_files/timer/src/tmr1.c: 60:     T1GCON = 0x0;
  9386     1F49  0020               	movlb	0	; select bank0
  9387     1F4A  0199               	clrf	25	;volatile
  9388     1F4B                     l6220:
  9389                           
  9390                           ;mcc_generated_files/timer/src/tmr1.c: 62:     TMR1H = 0xFF;
  9391     1F4B  30FF               	movlw	255
  9392     1F4C  0097               	movwf	23	;volatile
  9393     1F4D                     l6222:
  9394                           
  9395                           ;mcc_generated_files/timer/src/tmr1.c: 64:     TMR1L = 0xFF;
  9396     1F4D  30FF               	movlw	255
  9397     1F4E  0096               	movwf	22	;volatile
  9398     1F4F                     l6224:
  9399                           
  9400                           ;mcc_generated_files/timer/src/tmr1.c: 67:     timer1ReloadVal=((uint16_t)TMR1H << 8) | 
      +                          TMR1L;
  9401     1F4F  0817               	movf	23,w	;volatile
  9402     1F50  0022               	movlb	2	; select bank2
  9403     1F51  00DE               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  9404     1F52  0020               	movlb	0	; select bank0
  9405     1F53  0816               	movf	22,w	;volatile
  9406     1F54  0022               	movlb	2	; select bank2
  9407     1F55  00DD               	movwf	_timer1ReloadVal^(0+256)	;volatile
  9408     1F56                     l6226:
  9409                           
  9410                           ;mcc_generated_files/timer/src/tmr1.c: 70:     TMR1_OverflowCallbackRegister(TMR1_Defaul
      +                          tOverflowCallback);
  9411     1F56  30DA               	movlw	low _TMR1_DefaultOverflowCallback
  9412     1F57  0023               	movlb	3	; select bank3
  9413     1F58  00BE               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler^(0+384)
  9414     1F59  301C               	movlw	high _TMR1_DefaultOverflowCallback
  9415     1F5A  00BF               	movwf	(TMR1_OverflowCallbackRegister@CallbackHandler^(0+384)+1)
  9416     1F5B  319D  2547  319F   	fcall	_TMR1_OverflowCallbackRegister
  9417     1F5E                     l6228:
  9418                           
  9419                           ;mcc_generated_files/timer/src/tmr1.c: 73:     PIR1bits.TMR1IF = 0;
  9420     1F5E  0020               	movlb	0	; select bank0
  9421     1F5F  1010               	bcf	16,0	;volatile
  9422     1F60                     l6230:
  9423                           
  9424                           ;mcc_generated_files/timer/src/tmr1.c: 74:     PIR1bits.TMR1GIF = 0;
  9425     1F60  1390               	bcf	16,7	;volatile
  9426     1F61                     l6232:
  9427                           
  9428                           ;mcc_generated_files/timer/src/tmr1.c: 77:     T1CON = 0x1;
  9429     1F61  3001               	movlw	1
  9430     1F62  0098               	movwf	24	;volatile
  9431     1F63                     l691:
  9432     1F63  0008               	return
  9433     1F64                     __end_of_TMR1_Initialize:
  9434                           
  9435                           	psect	text9
  9436     1D47                     __ptext9:	
  9437 ;; *************** function _TMR1_OverflowCallbackRegister *****************
  9438 ;; Defined at:
  9439 ;;		line 150 in file "mcc_generated_files/timer/src/tmr1.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  CallbackHand    2    0[BANK3 ] PTR FTN()void 
  9442 ;;		 -> TMR4_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), Timer0_DefaultOverflowCallback(1), TMR2_Defaul
      +tOverflowCallback(1), 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      void 
  9447 ;; Registers used:
  9448 ;;		wreg
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9454 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9458 ;;Total ram usage:        2 bytes
  9459 ;; Hardware stack levels used: 1
  9460 ;; Hardware stack levels required when called: 12
  9461 ;; This function calls:
  9462 ;;		Nothing
  9463 ;; This function is called by:
  9464 ;;		_TMR1_Initialize
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468     1D47                     _TMR1_OverflowCallbackRegister:	
  9469                           ;psect for function _TMR1_OverflowCallbackRegister
  9470                           
  9471     1D47                     l6050:	
  9472                           ;incstack = 0
  9473                           ; Regs used in _TMR1_OverflowCallbackRegister: [wreg]
  9474                           
  9475                           
  9476                           ;mcc_generated_files/timer/src/tmr1.c: 150: void TMR1_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr1.c: 151: {;mcc_generated_files/
      +                          timer/src/tmr1.c: 152:     TMR1_OverflowCallback = CallbackHandler;
  9477     1D47  0023               	movlb	3	; select bank3
  9478     1D48  083F               	movf	(TMR1_OverflowCallbackRegister@CallbackHandler+1)^(0+384),w
  9479     1D49  00B5               	movwf	(_TMR1_OverflowCallback+1)^(0+384)
  9480     1D4A  083E               	movf	TMR1_OverflowCallbackRegister@CallbackHandler^(0+384),w
  9481     1D4B  00B4               	movwf	_TMR1_OverflowCallback^(0+384)
  9482     1D4C                     l720:
  9483     1D4C  0008               	return
  9484     1D4D                     __end_of_TMR1_OverflowCallbackRegister:
  9485                           
  9486                           	psect	text10
  9487     129B                     __ptext10:	
  9488 ;; *************** function _PIN_MANAGER_Initialize *****************
  9489 ;; Defined at:
  9490 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;		None
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;		None
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      void 
  9497 ;; Registers used:
  9498 ;;		wreg, status,2
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;Total ram usage:        0 bytes
  9509 ;; Hardware stack levels used: 1
  9510 ;; Hardware stack levels required when called: 12
  9511 ;; This function calls:
  9512 ;;		Nothing
  9513 ;; This function is called by:
  9514 ;;		_SYSTEM_Initialize
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518     129B                     _PIN_MANAGER_Initialize:	
  9519                           ;psect for function _PIN_MANAGER_Initialize
  9520                           
  9521     129B                     l6106:	
  9522                           ;incstack = 0
  9523                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9524                           
  9525                           
  9526                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  9527     129B  0022               	movlb	2	; select bank2
  9528     129C  018C               	clrf	12	;volatile
  9529                           
  9530                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  9531     129D  018D               	clrf	13	;volatile
  9532     129E                     l6108:
  9533                           
  9534                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x18;
  9535     129E  3018               	movlw	24
  9536     129F  008E               	movwf	14	;volatile
  9537     12A0                     l6110:
  9538                           
  9539                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
  9540     12A0  3019               	movlw	25
  9541     12A1  0021               	movlb	1	; select bank1
  9542     12A2  008C               	movwf	12	;volatile
  9543     12A3                     l6112:
  9544                           
  9545                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x80;
  9546     12A3  3080               	movlw	128
  9547     12A4  008D               	movwf	13	;volatile
  9548     12A5                     l6114:
  9549                           
  9550                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x9B;
  9551     12A5  309B               	movlw	155
  9552     12A6  008E               	movwf	14	;volatile
  9553     12A7                     l6116:
  9554                           
  9555                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x15;
  9556     12A7  3015               	movlw	21
  9557     12A8  0023               	movlb	3	; select bank3
  9558     12A9  008C               	movwf	12	;volatile
  9559     12AA                     l6118:
  9560                           
  9561                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x0;
  9562     12AA  018D               	clrf	13	;volatile
  9563                           
  9564                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0x1;
  9565     12AB  3001               	movlw	1
  9566     12AC  008E               	movwf	14	;volatile
  9567                           
  9568                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x3A;
  9569     12AD  303A               	movlw	58
  9570     12AE  0024               	movlb	4	; select bank4
  9571     12AF  008C               	movwf	12	;volatile
  9572                           
  9573                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xF0;
  9574     12B0  30F0               	movlw	240
  9575     12B1  008D               	movwf	13	;volatile
  9576                           
  9577                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0xDF;
  9578     12B2  30DF               	movlw	223
  9579     12B3  008E               	movwf	14	;volatile
  9580     12B4                     l6120:
  9581                           
  9582                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  9583     12B4  0021               	movlb	1	; select bank1
  9584     12B5  1395               	bcf	21,7	;volatile
  9585     12B6                     l6122:
  9586                           
  9587                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  9588     12B6  0025               	movlb	5	; select bank5
  9589     12B7  018C               	clrf	12	;volatile
  9590     12B8                     l6124:
  9591                           
  9592                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  9593     12B8  018D               	clrf	13	;volatile
  9594     12B9                     l6126:
  9595                           
  9596                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  9597     12B9  018E               	clrf	14	;volatile
  9598     12BA                     l6128:
  9599                           
  9600                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x36;
  9601     12BA  3036               	movlw	54
  9602     12BB  0026               	movlb	6	; select bank6
  9603     12BC  008C               	movwf	12	;volatile
  9604     12BD                     l6130:
  9605                           
  9606                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  9607     12BD  30F0               	movlw	240
  9608     12BE  008D               	movwf	13	;volatile
  9609     12BF                     l6132:
  9610                           
  9611                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  9612     12BF  30FF               	movlw	255
  9613     12C0  008E               	movwf	14	;volatile
  9614     12C1                     l6134:
  9615                           
  9616                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x18;
  9617     12C1  3018               	movlw	24
  9618     12C2  0027               	movlb	7	; select bank7
  9619     12C3  008C               	movwf	12	;volatile
  9620     12C4                     l6136:
  9621                           
  9622                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  9623     12C4  30F0               	movlw	240
  9624     12C5  008D               	movwf	13	;volatile
  9625     12C6                     l6138:
  9626                           
  9627                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0x7;
  9628     12C6  3007               	movlw	7
  9629     12C7  008E               	movwf	14	;volatile
  9630     12C8                     l6140:
  9631                           
  9632                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0x17;
  9633     12C8  3017               	movlw	23
  9634     12C9  003C               	movlb	28	; select bank28
  9635     12CA  00A4               	movwf	36	;volatile
  9636     12CB                     l6142:
  9637                           
  9638                           ;mcc_generated_files/system/src/pins.c: 93:     RC6PPS = 18;
  9639     12CB  3012               	movlw	18
  9640     12CC  003D               	movlb	29	; select bank29
  9641     12CD  00A6               	movwf	38	;volatile
  9642     12CE                     l6144:
  9643                           
  9644                           ;mcc_generated_files/system/src/pins.c: 94:     SSPCLKPPS = 0x14;
  9645     12CE  3014               	movlw	20
  9646     12CF  003C               	movlb	28	; select bank28
  9647     12D0  00A0               	movwf	32	;volatile
  9648     12D1                     l6146:
  9649                           
  9650                           ;mcc_generated_files/system/src/pins.c: 95:     RC4PPS = 16;
  9651     12D1  3010               	movlw	16
  9652     12D2  003D               	movlb	29	; select bank29
  9653     12D3  00A4               	movwf	36	;volatile
  9654     12D4                     l6148:
  9655                           
  9656                           ;mcc_generated_files/system/src/pins.c: 96:     SSPDATPPS = 0x13;
  9657     12D4  3013               	movlw	19
  9658     12D5  003C               	movlb	28	; select bank28
  9659     12D6  00A1               	movwf	33	;volatile
  9660     12D7                     l6150:
  9661                           
  9662                           ;mcc_generated_files/system/src/pins.c: 97:     RC3PPS = 17;
  9663     12D7  3011               	movlw	17
  9664     12D8  003D               	movlb	29	; select bank29
  9665     12D9  00A3               	movwf	35	;volatile
  9666     12DA                     l6152:
  9667                           
  9668                           ;mcc_generated_files/system/src/pins.c: 98:     CCP2PPS = 0x2;
  9669     12DA  3002               	movlw	2
  9670     12DB  003C               	movlb	28	; select bank28
  9671     12DC  0095               	movwf	21	;volatile
  9672     12DD                     l6154:
  9673                           
  9674                           ;mcc_generated_files/system/src/pins.c: 99:     RA2PPS = 13;
  9675     12DD  300D               	movlw	13
  9676     12DE  003D               	movlb	29	; select bank29
  9677     12DF  0092               	movwf	18	;volatile
  9678     12E0                     l6156:
  9679                           
  9680                           ;mcc_generated_files/system/src/pins.c: 100:     CCP1PPS = 0x15;
  9681     12E0  3015               	movlw	21
  9682     12E1  003C               	movlb	28	; select bank28
  9683     12E2  0094               	movwf	20	;volatile
  9684     12E3                     l6158:
  9685                           
  9686                           ;mcc_generated_files/system/src/pins.c: 101:     RC5PPS = 12;
  9687     12E3  300C               	movlw	12
  9688     12E4  003D               	movlb	29	; select bank29
  9689     12E5  00A5               	movwf	37	;volatile
  9690     12E6                     l6160:
  9691                           
  9692                           ;mcc_generated_files/system/src/pins.c: 110:     IOCAP = 0x0;
  9693     12E6  0027               	movlb	7	; select bank7
  9694     12E7  0191               	clrf	17	;volatile
  9695     12E8                     l6162:
  9696                           
  9697                           ;mcc_generated_files/system/src/pins.c: 111:     IOCAN = 0x0;
  9698     12E8  0192               	clrf	18	;volatile
  9699     12E9                     l6164:
  9700                           
  9701                           ;mcc_generated_files/system/src/pins.c: 112:     IOCAF = 0x0;
  9702     12E9  0193               	clrf	19	;volatile
  9703     12EA                     l6166:
  9704                           
  9705                           ;mcc_generated_files/system/src/pins.c: 113:     IOCBP = 0x0;
  9706     12EA  0194               	clrf	20	;volatile
  9707     12EB                     l6168:
  9708                           
  9709                           ;mcc_generated_files/system/src/pins.c: 114:     IOCBN = 0x0;
  9710     12EB  0195               	clrf	21	;volatile
  9711     12EC                     l6170:
  9712                           
  9713                           ;mcc_generated_files/system/src/pins.c: 115:     IOCBF = 0x0;
  9714     12EC  0196               	clrf	22	;volatile
  9715     12ED                     l6172:
  9716                           
  9717                           ;mcc_generated_files/system/src/pins.c: 116:     IOCCP = 0x0;
  9718     12ED  0197               	clrf	23	;volatile
  9719     12EE                     l6174:
  9720                           
  9721                           ;mcc_generated_files/system/src/pins.c: 117:     IOCCN = 0x0;
  9722     12EE  0198               	clrf	24	;volatile
  9723     12EF                     l6176:
  9724                           
  9725                           ;mcc_generated_files/system/src/pins.c: 118:     IOCCF = 0x0;
  9726     12EF  0199               	clrf	25	;volatile
  9727     12F0                     l469:
  9728     12F0  0008               	return
  9729     12F1                     __end_of_PIN_MANAGER_Initialize:
  9730                           
  9731                           	psect	text11
  9732     1DE5                     __ptext11:	
  9733 ;; *************** function _INTERRUPT_Initialize *****************
  9734 ;; Defined at:
  9735 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;		None
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;		None
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  1    wreg      void 
  9742 ;; Registers used:
  9743 ;;		wreg, status,2, status,0, pclath, cstack
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9753 ;;Total ram usage:        0 bytes
  9754 ;; Hardware stack levels used: 1
  9755 ;; Hardware stack levels required when called: 13
  9756 ;; This function calls:
  9757 ;;		_INT_SetInterruptHandler
  9758 ;; This function is called by:
  9759 ;;		_SYSTEM_Initialize
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763     1DE5                     _INTERRUPT_Initialize:	
  9764                           ;psect for function _INTERRUPT_Initialize
  9765                           
  9766     1DE5                     l6258:	
  9767                           ;incstack = 0
  9768                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9769                           
  9770                           
  9771                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  9772     1DE5  108B               	bcf	11,1	;volatile
  9773                           
  9774                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  9775     1DE6  0021               	movlb	1	; select bank1
  9776     1DE7  1715               	bsf	21,6	;volatile
  9777     1DE8                     l6260:
  9778                           
  9779                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  9780     1DE8  3000               	movlw	0
  9781     1DE9  0023               	movlb	3	; select bank3
  9782     1DEA  00BE               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+384)
  9783     1DEB  3000               	movlw	0
  9784     1DEC  00BF               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+384)+1)
  9785     1DED  319D  258F  319D   	fcall	_INT_SetInterruptHandler
  9786     1DF0                     l503:
  9787     1DF0  0008               	return
  9788     1DF1                     __end_of_INTERRUPT_Initialize:
  9789                           
  9790                           	psect	text12
  9791     1D8F                     __ptext12:	
  9792 ;; *************** function _INT_SetInterruptHandler *****************
  9793 ;; Defined at:
  9794 ;;		line 101 in file "mcc_generated_files/system/src/interrupt.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;  InterruptHan    2    0[BANK3 ] PTR FTN()void 
  9797 ;;		 -> INT_DefaultInterruptHandler(1), 
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;		None
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  1    wreg      void 
  9802 ;; Registers used:
  9803 ;;		wreg
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9809 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9813 ;;Total ram usage:        2 bytes
  9814 ;; Hardware stack levels used: 1
  9815 ;; Hardware stack levels required when called: 12
  9816 ;; This function calls:
  9817 ;;		Nothing
  9818 ;; This function is called by:
  9819 ;;		_INTERRUPT_Initialize
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823     1D8F                     _INT_SetInterruptHandler:	
  9824                           ;psect for function _INT_SetInterruptHandler
  9825                           
  9826     1D8F                     l6044:	
  9827                           ;incstack = 0
  9828                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  9829                           
  9830                           
  9831                           ;mcc_generated_files/system/src/interrupt.c: 102:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  9832     1D8F  0023               	movlb	3	; select bank3
  9833     1D90  083F               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+384),w
  9834     1D91  0022               	movlb	2	; select bank2
  9835     1D92  00E4               	movwf	(_INT_InterruptHandler+1)^(0+256)
  9836     1D93  0023               	movlb	3	; select bank3
  9837     1D94  083E               	movf	INT_SetInterruptHandler@InterruptHandler^(0+384),w
  9838     1D95  0022               	movlb	2	; select bank2
  9839     1D96  00E3               	movwf	_INT_InterruptHandler^(0+256)
  9840     1D97                     l523:
  9841     1D97  0008               	return
  9842     1D98                     __end_of_INT_SetInterruptHandler:
  9843                           
  9844                           	psect	text13
  9845     1E3E                     __ptext13:	
  9846 ;; *************** function _I2C1_Initialize *****************
  9847 ;; Defined at:
  9848 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9849 ;; Parameters:    Size  Location     Type
  9850 ;;		None
  9851 ;; Auto vars:     Size  Location     Type
  9852 ;;		None
  9853 ;; Return value:  Size  Location     Type
  9854 ;;                  1    wreg      void 
  9855 ;; Registers used:
  9856 ;;		wreg, status,2, status,0, pclath, cstack
  9857 ;; Tracked objects:
  9858 ;;		On entry : 0/0
  9859 ;;		On exit  : 0/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;Total ram usage:        0 bytes
  9867 ;; Hardware stack levels used: 1
  9868 ;; Hardware stack levels required when called: 13
  9869 ;; This function calls:
  9870 ;;		_I2C1_CallbackRegister
  9871 ;; This function is called by:
  9872 ;;		_SYSTEM_Initialize
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875                           
  9876     1E3E                     _I2C1_Initialize:	
  9877                           ;psect for function _I2C1_Initialize
  9878                           
  9879     1E3E                     l6078:	
  9880                           ;incstack = 0
  9881                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9882                           
  9883                           
  9884                           ;mcc_generated_files/i2c_host/src/mssp.c: 117:     SSP1STAT = 0x80;
  9885     1E3E  3080               	movlw	128
  9886     1E3F  0024               	movlb	4	; select bank4
  9887     1E40  0094               	movwf	20	;volatile
  9888                           
  9889                           ;mcc_generated_files/i2c_host/src/mssp.c: 119:     SSP1CON1 = 0x8;
  9890     1E41  3008               	movlw	8
  9891     1E42  0095               	movwf	21	;volatile
  9892     1E43                     l6080:
  9893                           
  9894                           ;mcc_generated_files/i2c_host/src/mssp.c: 121:     SSP1CON2 = 0x0;
  9895     1E43  0196               	clrf	22	;volatile
  9896     1E44                     l6082:
  9897                           
  9898                           ;mcc_generated_files/i2c_host/src/mssp.c: 123:     SSP1CON3 = 0x0;
  9899     1E44  0197               	clrf	23	;volatile
  9900                           
  9901                           ;mcc_generated_files/i2c_host/src/mssp.c: 125:     SSP1ADD = 0x9;
  9902     1E45  3009               	movlw	9
  9903     1E46  0092               	movwf	18	;volatile
  9904     1E47                     l6084:
  9905                           
  9906                           ;mcc_generated_files/i2c_host/src/mssp.c: 127:     I2C1_CallbackRegister(I2C1_DefaultCal
      +                          lback);
  9907     1E47  30D8               	movlw	low _I2C1_DefaultCallback
  9908     1E48  0023               	movlb	3	; select bank3
  9909     1E49  00BE               	movwf	I2C1_CallbackRegister@callbackHandler^(0+384)
  9910     1E4A  301C               	movlw	high _I2C1_DefaultCallback
  9911     1E4B  00BF               	movwf	(I2C1_CallbackRegister@callbackHandler^(0+384)+1)
  9912     1E4C  319D  25D9  319E   	fcall	_I2C1_CallbackRegister
  9913     1E4F                     l6086:
  9914                           
  9915                           ;mcc_generated_files/i2c_host/src/mssp.c: 128:     SSP1CON1bits.SSPEN = 1;
  9916     1E4F  0024               	movlb	4	; select bank4
  9917     1E50  1695               	bsf	21,5	;volatile
  9918     1E51                     l157:
  9919     1E51  0008               	return
  9920     1E52                     __end_of_I2C1_Initialize:
  9921                           
  9922                           	psect	text14
  9923     1DD9                     __ptext14:	
  9924 ;; *************** function _I2C1_CallbackRegister *****************
  9925 ;; Defined at:
  9926 ;;		line 211 in file "mcc_generated_files/i2c_host/src/mssp.c"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;  callbackHand    2    0[BANK3 ] PTR FTN()void 
  9929 ;;		 -> I2C1_DefaultCallback(1), 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      void 
  9934 ;; Registers used:
  9935 ;;		wreg, status,2, status,0
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9941 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9945 ;;Total ram usage:        2 bytes
  9946 ;; Hardware stack levels used: 1
  9947 ;; Hardware stack levels required when called: 12
  9948 ;; This function calls:
  9949 ;;		Nothing
  9950 ;; This function is called by:
  9951 ;;		_I2C1_Initialize
  9952 ;;		_I2C1_Deinitialize
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956     1DD9                     _I2C1_CallbackRegister:	
  9957                           ;psect for function _I2C1_CallbackRegister
  9958                           
  9959     1DD9                     l6040:	
  9960                           ;incstack = 0
  9961                           ; Regs used in _I2C1_CallbackRegister: [wreg+status,2+status,0]
  9962                           
  9963                           
  9964                           ;mcc_generated_files/i2c_host/src/mssp.c: 211: void I2C1_CallbackRegister(void (*callbac
      +                          kHandler)(void));mcc_generated_files/i2c_host/src/mssp.c: 212: {;mcc_generated_files/i2c
      +                          _host/src/mssp.c: 213:     if (callbackHandler != ((void*)0))
  9965     1DD9  0023               	movlb	3	; select bank3
  9966     1DDA  083E               	movf	I2C1_CallbackRegister@callbackHandler^(0+384),w
  9967     1DDB  043F               	iorwf	(I2C1_CallbackRegister@callbackHandler+1)^(0+384),w
  9968     1DDC  1903               	btfsc	3,2
  9969     1DDD  2DDF               	goto	u5361
  9970     1DDE  2DE0               	goto	u5360
  9971     1DDF                     u5361:
  9972     1DDF  2DE4               	goto	l184
  9973     1DE0                     u5360:
  9974     1DE0                     l6042:
  9975                           
  9976                           ;mcc_generated_files/i2c_host/src/mssp.c: 214:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 215:         I2C1_Callback = callbackHandler;
  9977     1DE0  083F               	movf	(I2C1_CallbackRegister@callbackHandler+1)^(0+384),w
  9978     1DE1  00BD               	movwf	(_I2C1_Callback+1)^(0+384)
  9979     1DE2  083E               	movf	I2C1_CallbackRegister@callbackHandler^(0+384),w
  9980     1DE3  00BC               	movwf	_I2C1_Callback^(0+384)
  9981     1DE4                     l184:
  9982     1DE4  0008               	return
  9983     1DE5                     __end_of_I2C1_CallbackRegister:
  9984                           
  9985                           	psect	text15
  9986     1107                     __ptext15:	
  9987 ;; *************** function _EUSART_Initialize *****************
  9988 ;; Defined at:
  9989 ;;		line 108 in file "mcc_generated_files/uart/src/eusart.c"
  9990 ;; Parameters:    Size  Location     Type
  9991 ;;		None
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;		None
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  1    wreg      void 
  9996 ;; Registers used:
  9997 ;;		wreg, status,2, status,0, pclath, cstack
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/0
 10000 ;;		On exit  : 0/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10007 ;;Total ram usage:        0 bytes
 10008 ;; Hardware stack levels used: 1
 10009 ;; Hardware stack levels required when called: 13
 10010 ;; This function calls:
 10011 ;;		_EUSART_FramingErrorCallbackRegister
 10012 ;;		_EUSART_OverrunErrorCallbackRegister
 10013 ;;		_EUSART_RxCompleteCallbackRegister
 10014 ;; This function is called by:
 10015 ;;		_SYSTEM_Initialize
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019     1107                     _EUSART_Initialize:	
 10020                           ;psect for function _EUSART_Initialize
 10021                           
 10022     1107                     l6178:	
 10023                           ;incstack = 0
 10024                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10025                           
 10026                           
 10027                           ;mcc_generated_files/uart/src/eusart.c: 110:     PIE1bits.RCIE = 0;
 10028     1107  0021               	movlb	1	; select bank1
 10029     1108  1290               	bcf	16,5	;volatile
 10030     1109                     l6180:
 10031                           
 10032                           ;mcc_generated_files/uart/src/eusart.c: 111:     EUSART_RxCompleteCallbackRegister(EUSAR
      +                          T_ReceiveISR);
 10033     1109  30C2               	movlw	low _EUSART_ReceiveISR
 10034     110A  0023               	movlb	3	; select bank3
 10035     110B  00BE               	movwf	EUSART_RxCompleteCallbackRegister@callbackHandler^(0+384)
 10036     110C  3013               	movlw	high _EUSART_ReceiveISR
 10037     110D  00BF               	movwf	(EUSART_RxCompleteCallbackRegister@callbackHandler^(0+384)+1)
 10038     110E  319D  25CD  3191   	fcall	_EUSART_RxCompleteCallbackRegister
 10039     1111                     l6182:
 10040                           
 10041                           ;mcc_generated_files/uart/src/eusart.c: 116:     BAUD1CON = 0x48;
 10042     1111  3048               	movlw	72
 10043     1112  0023               	movlb	3	; select bank3
 10044     1113  009F               	movwf	31	;volatile
 10045     1114                     l6184:
 10046                           
 10047                           ;mcc_generated_files/uart/src/eusart.c: 118:     RC1STA = 0x90;
 10048     1114  3090               	movlw	144
 10049     1115  009D               	movwf	29	;volatile
 10050     1116                     l6186:
 10051                           
 10052                           ;mcc_generated_files/uart/src/eusart.c: 120:     TX1STA = 0x26;
 10053     1116  3026               	movlw	38
 10054     1117  009E               	movwf	30	;volatile
 10055     1118                     l6188:
 10056                           
 10057                           ;mcc_generated_files/uart/src/eusart.c: 122:     SPBRGL = 0x67;
 10058     1118  3067               	movlw	103
 10059     1119  009B               	movwf	27	;volatile
 10060     111A                     l6190:
 10061                           
 10062                           ;mcc_generated_files/uart/src/eusart.c: 124:     SPBRGH = 0x0;
 10063     111A  019C               	clrf	28	;volatile
 10064     111B                     l6192:
 10065                           
 10066                           ;mcc_generated_files/uart/src/eusart.c: 126:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 10067     111B  30D6               	movlw	low _EUSART_DefaultFramingErrorCallback
 10068     111C  00BE               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+384)
 10069     111D  301C               	movlw	high _EUSART_DefaultFramingErrorCallback
 10070     111E  00BF               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+384)+1)
 10071     111F  319D  25FD  3191   	fcall	_EUSART_FramingErrorCallbackRegister
 10072     1122                     l6194:
 10073                           
 10074                           ;mcc_generated_files/uart/src/eusart.c: 127:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 10075     1122  30F7               	movlw	low _EUSART_DefaultOverrunErrorCallback
 10076     1123  0023               	movlb	3	; select bank3
 10077     1124  00BE               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+384)
 10078     1125  301C               	movlw	high _EUSART_DefaultOverrunErrorCallback
 10079     1126  00BF               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+384)+1)
 10080     1127  319E  260C  3191   	fcall	_EUSART_OverrunErrorCallbackRegister
 10081     112A                     l6196:
 10082                           
 10083                           ;mcc_generated_files/uart/src/eusart.c: 128:     eusartRxLastError.status = 0;
 10084     112A  0023               	movlb	3	; select bank3
 10085     112B  01B0               	clrf	_eusartRxLastError^(0+384)	;volatile
 10086     112C  01B1               	clrf	(_eusartRxLastError+1)^(0+384)	;volatile
 10087     112D                     l6198:
 10088                           
 10089                           ;mcc_generated_files/uart/src/eusart.c: 130:     eusartRxHead = 0;
 10090     112D  0022               	movlb	2	; select bank2
 10091     112E  01EA               	clrf	_eusartRxHead^(0+256)	;volatile
 10092     112F                     l6200:
 10093                           
 10094                           ;mcc_generated_files/uart/src/eusart.c: 131:     eusartRxTail = 0;
 10095     112F  01E9               	clrf	_eusartRxTail^(0+256)	;volatile
 10096     1130                     l6202:
 10097                           
 10098                           ;mcc_generated_files/uart/src/eusart.c: 132:     eusartRxCount = 0;
 10099     1130  01E8               	clrf	_eusartRxCount^(0+256)	;volatile
 10100     1131                     l6204:
 10101                           
 10102                           ;mcc_generated_files/uart/src/eusart.c: 134:     PIE1bits.RCIE = 1;
 10103     1131  0021               	movlb	1	; select bank1
 10104     1132  1690               	bsf	16,5	;volatile
 10105     1133                     l896:
 10106     1133  0008               	return
 10107     1134                     __end_of_EUSART_Initialize:
 10108                           
 10109                           	psect	text16
 10110     1DCD                     __ptext16:	
 10111 ;; *************** function _EUSART_RxCompleteCallbackRegister *****************
 10112 ;; Defined at:
 10113 ;;		line 346 in file "mcc_generated_files/uart/src/eusart.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;  callbackHand    2    0[BANK3 ] PTR FTN()void 
 10116 ;;		 -> EUSART_ReceiveISR(1), 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;		None
 10119 ;; Return value:  Size  Location     Type
 10120 ;;                  1    wreg      void 
 10121 ;; Registers used:
 10122 ;;		wreg, status,2, status,0
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10128 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10131 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10132 ;;Total ram usage:        2 bytes
 10133 ;; Hardware stack levels used: 1
 10134 ;; Hardware stack levels required when called: 12
 10135 ;; This function calls:
 10136 ;;		Nothing
 10137 ;; This function is called by:
 10138 ;;		_EUSART_Initialize
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142     1DCD                     _EUSART_RxCompleteCallbackRegister:	
 10143                           ;psect for function _EUSART_RxCompleteCallbackRegister
 10144                           
 10145     1DCD                     l6054:	
 10146                           ;incstack = 0
 10147                           ; Regs used in _EUSART_RxCompleteCallbackRegister: [wreg+status,2+status,0]
 10148                           
 10149                           
 10150                           ;mcc_generated_files/uart/src/eusart.c: 346: void EUSART_RxCompleteCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 347: {;mcc_generated_
      +                          files/uart/src/eusart.c: 348:     if(((void*)0) != callbackHandler)
 10151     1DCD  0023               	movlb	3	; select bank3
 10152     1DCE  083E               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler^(0+384),w
 10153     1DCF  043F               	iorwf	(EUSART_RxCompleteCallbackRegister@callbackHandler+1)^(0+384),w
 10154     1DD0  1903               	btfsc	3,2
 10155     1DD1  2DD3               	goto	u5371
 10156     1DD2  2DD4               	goto	u5370
 10157     1DD3                     u5371:
 10158     1DD3  2DD8               	goto	l991
 10159     1DD4                     u5370:
 10160     1DD4                     l6056:
 10161                           
 10162                           ;mcc_generated_files/uart/src/eusart.c: 349:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 350:        EUSART_RxInterruptHandler = callbackHandler;
 10163     1DD4  083F               	movf	(EUSART_RxCompleteCallbackRegister@callbackHandler+1)^(0+384),w
 10164     1DD5  00BB               	movwf	(_EUSART_RxInterruptHandler+1)^(0+384)
 10165     1DD6  083E               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler^(0+384),w
 10166     1DD7  00BA               	movwf	_EUSART_RxInterruptHandler^(0+384)
 10167     1DD8                     l991:
 10168     1DD8  0008               	return
 10169     1DD9                     __end_of_EUSART_RxCompleteCallbackRegister:
 10170                           
 10171                           	psect	text17
 10172     1E0C                     __ptext17:	
 10173 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 10174 ;; Defined at:
 10175 ;;		line 338 in file "mcc_generated_files/uart/src/eusart.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  callbackHand    2    0[BANK3 ] PTR FTN()void 
 10178 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;		None
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  1    wreg      void 
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10190 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10193 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10194 ;;Total ram usage:        2 bytes
 10195 ;; Hardware stack levels used: 1
 10196 ;; Hardware stack levels required when called: 12
 10197 ;; This function calls:
 10198 ;;		Nothing
 10199 ;; This function is called by:
 10200 ;;		_EUSART_Initialize
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204     1E0C                     _EUSART_OverrunErrorCallbackRegister:	
 10205                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 10206                           
 10207     1E0C                     l6062:	
 10208                           ;incstack = 0
 10209                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 10210                           
 10211                           
 10212                           ;mcc_generated_files/uart/src/eusart.c: 338: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 339: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 340:     if(((void*)0) != callbackHandler)
 10213     1E0C  0023               	movlb	3	; select bank3
 10214     1E0D  083E               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+384),w
 10215     1E0E  043F               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+384),w
 10216     1E0F  1903               	btfsc	3,2
 10217     1E10  2E12               	goto	u5391
 10218     1E11  2E13               	goto	u5390
 10219     1E12                     u5391:
 10220     1E12  2E1A               	goto	l987
 10221     1E13                     u5390:
 10222     1E13                     l6064:
 10223                           
 10224                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         EUSART_OverrunErrorHandler = callbackHandler;
 10225     1E13  083F               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+384),w
 10226     1E14  0022               	movlb	2	; select bank2
 10227     1E15  00DA               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 10228     1E16  0023               	movlb	3	; select bank3
 10229     1E17  083E               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+384),w
 10230     1E18  0022               	movlb	2	; select bank2
 10231     1E19  00D9               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 10232     1E1A                     l987:
 10233     1E1A  0008               	return
 10234     1E1B                     __end_of_EUSART_OverrunErrorCallbackRegister:
 10235                           
 10236                           	psect	text18
 10237     1DFD                     __ptext18:	
 10238 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 10239 ;; Defined at:
 10240 ;;		line 330 in file "mcc_generated_files/uart/src/eusart.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;  callbackHand    2    0[BANK3 ] PTR FTN()void 
 10243 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 10244 ;; Auto vars:     Size  Location     Type
 10245 ;;		None
 10246 ;; Return value:  Size  Location     Type
 10247 ;;                  1    wreg      void 
 10248 ;; Registers used:
 10249 ;;		wreg, status,2, status,0
 10250 ;; Tracked objects:
 10251 ;;		On entry : 0/0
 10252 ;;		On exit  : 0/0
 10253 ;;		Unchanged: 0/0
 10254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10255 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10259 ;;Total ram usage:        2 bytes
 10260 ;; Hardware stack levels used: 1
 10261 ;; Hardware stack levels required when called: 12
 10262 ;; This function calls:
 10263 ;;		Nothing
 10264 ;; This function is called by:
 10265 ;;		_EUSART_Initialize
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269     1DFD                     _EUSART_FramingErrorCallbackRegister:	
 10270                           ;psect for function _EUSART_FramingErrorCallbackRegister
 10271                           
 10272     1DFD                     l6058:	
 10273                           ;incstack = 0
 10274                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 10275                           
 10276                           
 10277                           ;mcc_generated_files/uart/src/eusart.c: 330: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 331: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 332:     if(((void*)0) != callbackHandler)
 10278     1DFD  0023               	movlb	3	; select bank3
 10279     1DFE  083E               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+384),w
 10280     1DFF  043F               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+384),w
 10281     1E00  1903               	btfsc	3,2
 10282     1E01  2E03               	goto	u5381
 10283     1E02  2E04               	goto	u5380
 10284     1E03                     u5381:
 10285     1E03  2E0B               	goto	l983
 10286     1E04                     u5380:
 10287     1E04                     l6060:
 10288                           
 10289                           ;mcc_generated_files/uart/src/eusart.c: 333:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 334:         EUSART_FramingErrorHandler = callbackHandler;
 10290     1E04  083F               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+384),w
 10291     1E05  0022               	movlb	2	; select bank2
 10292     1E06  00DC               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
 10293     1E07  0023               	movlb	3	; select bank3
 10294     1E08  083E               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+384),w
 10295     1E09  0022               	movlb	2	; select bank2
 10296     1E0A  00DB               	movwf	_EUSART_FramingErrorHandler^(0+256)
 10297     1E0B                     l983:
 10298     1E0B  0008               	return
 10299     1E0C                     __end_of_EUSART_FramingErrorCallbackRegister:
 10300                           
 10301                           	psect	text19
 10302     1000                     __ptext19:	
 10303 ;; *************** function _CLOCK_Initialize *****************
 10304 ;; Defined at:
 10305 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;		None
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1    wreg      void 
 10312 ;; Registers used:
 10313 ;;		wreg, status,2
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10323 ;;Total ram usage:        0 bytes
 10324 ;; Hardware stack levels used: 1
 10325 ;; Hardware stack levels required when called: 12
 10326 ;; This function calls:
 10327 ;;		Nothing
 10328 ;; This function is called by:
 10329 ;;		_SYSTEM_Initialize
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333     1000                     _CLOCK_Initialize:	
 10334                           ;psect for function _CLOCK_Initialize
 10335                           
 10336     1000                     l6100:	
 10337                           ;incstack = 0
 10338                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
 10339                           
 10340                           
 10341                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (13 << 0x3)
 10342     1000  306A               	movlw	106
 10343     1001  0021               	movlb	1	; select bank1
 10344     1002  0099               	movwf	25	;volatile
 10345     1003                     l6102:
 10346                           
 10347                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7)
 10348     1003  0022               	movlb	2	; select bank2
 10349     1004  0196               	clrf	22	;volatile
 10350     1005                     l6104:
 10351                           
 10352                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
 10353     1005  0021               	movlb	1	; select bank1
 10354     1006  0198               	clrf	24	;volatile
 10355     1007                     l384:
 10356     1007  0008               	return
 10357     1008                     __end_of_CLOCK_Initialize:
 10358                           
 10359                           	psect	text20
 10360     07F5                     __ptext20:	
 10361 ;; *************** function _CCP2_Initialize *****************
 10362 ;; Defined at:
 10363 ;;		line 50 in file "mcc_generated_files/pwm/src/ccp2.c"
 10364 ;; Parameters:    Size  Location     Type
 10365 ;;		None
 10366 ;; Auto vars:     Size  Location     Type
 10367 ;;		None
 10368 ;; Return value:  Size  Location     Type
 10369 ;;                  1    wreg      void 
 10370 ;; Registers used:
 10371 ;;		wreg, status,2, status,0
 10372 ;; Tracked objects:
 10373 ;;		On entry : 0/0
 10374 ;;		On exit  : 0/0
 10375 ;;		Unchanged: 0/0
 10376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10381 ;;Total ram usage:        0 bytes
 10382 ;; Hardware stack levels used: 1
 10383 ;; Hardware stack levels required when called: 12
 10384 ;; This function calls:
 10385 ;;		Nothing
 10386 ;; This function is called by:
 10387 ;;		_SYSTEM_Initialize
 10388 ;; This function uses a non-reentrant model
 10389 ;;
 10390                           
 10391     07F5                     _CCP2_Initialize:	
 10392                           ;psect for function _CCP2_Initialize
 10393                           
 10394     07F5                     l6092:	
 10395                           ;incstack = 0
 10396                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0]
 10397                           
 10398                           
 10399                           ;mcc_generated_files/pwm/src/ccp2.c: 55:     CCP2CON = 0x8F;
 10400     07F5  308F               	movlw	143
 10401     07F6  0025               	movlb	5	; select bank5
 10402     07F7  009A               	movwf	26	;volatile
 10403     07F8                     l6094:
 10404                           
 10405                           ;mcc_generated_files/pwm/src/ccp2.c: 58:     CCPR2H = 0x0;
 10406     07F8  0199               	clrf	25	;volatile
 10407     07F9                     l6096:
 10408                           
 10409                           ;mcc_generated_files/pwm/src/ccp2.c: 61:     CCPR2L = 0x18;
 10410     07F9  3018               	movlw	24
 10411     07FA  0098               	movwf	24	;volatile
 10412     07FB                     l6098:
 10413                           
 10414                           ;mcc_generated_files/pwm/src/ccp2.c: 64:     CCPTMRSbits.CCP2TSEL = 0x1;
 10415     07FB  081E               	movf	30,w	;volatile
 10416     07FC  39F3               	andlw	-13
 10417     07FD  3804               	iorlw	4
 10418     07FE  009E               	movwf	30	;volatile
 10419     07FF                     l338:
 10420     07FF  0008               	return
 10421     0800                     __end_of_CCP2_Initialize:
 10422                           
 10423                           	psect	text21
 10424     1DA1                     __ptext21:	
 10425 ;; *************** function _CCP1_Initialize *****************
 10426 ;; Defined at:
 10427 ;;		line 50 in file "mcc_generated_files/pwm/src/ccp1.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;		None
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;		None
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  1    wreg      void 
 10434 ;; Registers used:
 10435 ;;		wreg, status,2, status,0
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10445 ;;Total ram usage:        0 bytes
 10446 ;; Hardware stack levels used: 1
 10447 ;; Hardware stack levels required when called: 12
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		_SYSTEM_Initialize
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455     1DA1                     _CCP1_Initialize:	
 10456                           ;psect for function _CCP1_Initialize
 10457                           
 10458     1DA1                     l6088:	
 10459                           ;incstack = 0
 10460                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0]
 10461                           
 10462                           
 10463                           ;mcc_generated_files/pwm/src/ccp1.c: 55:     CCP1CON = 0x8F;
 10464     1DA1  308F               	movlw	143
 10465     1DA2  0025               	movlb	5	; select bank5
 10466     1DA3  0093               	movwf	19	;volatile
 10467                           
 10468                           ;mcc_generated_files/pwm/src/ccp1.c: 58:     CCPR1H = 0x1;
 10469     1DA4  3001               	movlw	1
 10470     1DA5  0092               	movwf	18	;volatile
 10471                           
 10472                           ;mcc_generated_files/pwm/src/ccp1.c: 61:     CCPR1L = 0xFF;
 10473     1DA6  30FF               	movlw	255
 10474     1DA7  0091               	movwf	17	;volatile
 10475     1DA8                     l6090:
 10476                           
 10477                           ;mcc_generated_files/pwm/src/ccp1.c: 64:     CCPTMRSbits.CCP1TSEL = 0x0;
 10478     1DA8  30FC               	movlw	-4
 10479     1DA9  059E               	andwf	30,f	;volatile
 10480     1DAA                     l317:
 10481     1DAA  0008               	return
 10482     1DAB                     __end_of_CCP1_Initialize:
 10483                           
 10484                           	psect	text22
 10485     1DB6                     __ptext22:	
 10486 ;; *************** function _ADC_Initialize *****************
 10487 ;; Defined at:
 10488 ;;		line 53 in file "mcc_generated_files/adc/src/adc.c"
 10489 ;; Parameters:    Size  Location     Type
 10490 ;;		None
 10491 ;; Auto vars:     Size  Location     Type
 10492 ;;		None
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  1    wreg      void 
 10495 ;; Registers used:
 10496 ;;		wreg, status,2
 10497 ;; Tracked objects:
 10498 ;;		On entry : 0/0
 10499 ;;		On exit  : 0/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10506 ;;Total ram usage:        0 bytes
 10507 ;; Hardware stack levels used: 1
 10508 ;; Hardware stack levels required when called: 12
 10509 ;; This function calls:
 10510 ;;		Nothing
 10511 ;; This function is called by:
 10512 ;;		_SYSTEM_Initialize
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516     1DB6                     _ADC_Initialize:	
 10517                           ;psect for function _ADC_Initialize
 10518                           
 10519     1DB6                     l6066:	
 10520                           ;incstack = 0
 10521                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 10522                           
 10523                           
 10524                           ;mcc_generated_files/adc/src/adc.c: 56:     ADCON1 = 0x90;
 10525     1DB6  3090               	movlw	144
 10526     1DB7  0021               	movlb	1	; select bank1
 10527     1DB8  009E               	movwf	30	;volatile
 10528     1DB9                     l6068:
 10529                           
 10530                           ;mcc_generated_files/adc/src/adc.c: 59:     ADRESL = 0x0;
 10531     1DB9  019B               	clrf	27	;volatile
 10532     1DBA                     l6070:
 10533                           
 10534                           ;mcc_generated_files/adc/src/adc.c: 62:     ADRESH = 0x0;
 10535     1DBA  019C               	clrf	28	;volatile
 10536     1DBB                     l6072:
 10537                           
 10538                           ;mcc_generated_files/adc/src/adc.c: 65:     ADCON2 = 0x0;
 10539     1DBB  019F               	clrf	31	;volatile
 10540     1DBC                     l6074:
 10541                           
 10542                           ;mcc_generated_files/adc/src/adc.c: 68:     ADCON0 = 0x1;
 10543     1DBC  3001               	movlw	1
 10544     1DBD  009D               	movwf	29	;volatile
 10545     1DBE                     l6076:
 10546                           
 10547                           ;mcc_generated_files/adc/src/adc.c: 71:     PIR1bits.ADIF = 0;
 10548     1DBE  0020               	movlb	0	; select bank0
 10549     1DBF  1310               	bcf	16,6	;volatile
 10550     1DC0                     l19:
 10551     1DC0  0008               	return
 10552     1DC1                     __end_of_ADC_Initialize:
 10553                           
 10554                           	psect	text23
 10555     1EFB                     __ptext23:	
 10556 ;; *************** function _CCP2_LoadDutyValue *****************
 10557 ;; Defined at:
 10558 ;;		line 67 in file "mcc_generated_files/pwm/src/ccp2.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  dutyValue       2    0[BANK3 ] unsigned short 
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;		None
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  1    wreg      void 
 10565 ;; Registers used:
 10566 ;;		wreg, status,2
 10567 ;; Tracked objects:
 10568 ;;		On entry : 0/0
 10569 ;;		On exit  : 0/0
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10572 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10575 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10576 ;;Total ram usage:        2 bytes
 10577 ;; Hardware stack levels used: 1
 10578 ;; Hardware stack levels required when called: 12
 10579 ;; This function calls:
 10580 ;;		Nothing
 10581 ;; This function is called by:
 10582 ;;		_main
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586     1EFB                     _CCP2_LoadDutyValue:	
 10587                           ;psect for function _CCP2_LoadDutyValue
 10588                           
 10589     1EFB                     l6262:	
 10590                           ;incstack = 0
 10591                           ; Regs used in _CCP2_LoadDutyValue: [wreg+status,2]
 10592                           
 10593                           
 10594                           ;mcc_generated_files/pwm/src/ccp2.c: 67: void CCP2_LoadDutyValue(uint16_t dutyValue);mcc
      +                          _generated_files/pwm/src/ccp2.c: 68: {;mcc_generated_files/pwm/src/ccp2.c: 69:    dutyVa
      +                          lue &= 0x03FF;
 10595     1EFB  30FF               	movlw	255
 10596     1EFC  0023               	movlb	3	; select bank3
 10597     1EFD  05BE               	andwf	CCP2_LoadDutyValue@dutyValue^(0+384),f
 10598     1EFE  3003               	movlw	3
 10599     1EFF  05BF               	andwf	(CCP2_LoadDutyValue@dutyValue+1)^(0+384),f
 10600     1F00                     l6264:
 10601                           
 10602                           ;mcc_generated_files/pwm/src/ccp2.c: 72:     if(CCP2CONbits.FMT)
 10603     1F00  0025               	movlb	5	; select bank5
 10604     1F01  1E1A               	btfss	26,4	;volatile
 10605     1F02  2F04               	goto	u5401
 10606     1F03  2F05               	goto	u5400
 10607     1F04                     u5401:
 10608     1F04  2F0B               	goto	l6268
 10609     1F05                     u5400:
 10610     1F05                     l6266:
 10611                           
 10612                           ;mcc_generated_files/pwm/src/ccp2.c: 73:     {;mcc_generated_files/pwm/src/ccp2.c: 74:  
      +                                 dutyValue <<= 6;
 10613     1F05  3006               	movlw	6
 10614     1F06  0023               	movlb	3	; select bank3
 10615     1F07                     u5415:
 10616     1F07  35BE               	lslf	CCP2_LoadDutyValue@dutyValue^(0+384),f
 10617     1F08  0DBF               	rlf	(CCP2_LoadDutyValue@dutyValue+1)^(0+384),f
 10618     1F09  0B89               	decfsz	9,f
 10619     1F0A  2F07               	goto	u5415
 10620     1F0B                     l6268:
 10621                           
 10622                           ;mcc_generated_files/pwm/src/ccp2.c: 75:         CCPR2H = (uint8_t)(dutyValue >> 8);
 10623     1F0B  0023               	movlb	3	; select bank3
 10624     1F0C  083F               	movf	(CCP2_LoadDutyValue@dutyValue+1)^(0+384),w
 10625     1F0D  0025               	movlb	5	; select bank5
 10626     1F0E  0099               	movwf	25	;volatile
 10627     1F0F                     l6270:
 10628                           
 10629                           ;mcc_generated_files/pwm/src/ccp2.c: 76:         CCPR2L = (uint8_t)dutyValue;
 10630     1F0F  0023               	movlb	3	; select bank3
 10631     1F10  083E               	movf	CCP2_LoadDutyValue@dutyValue^(0+384),w
 10632     1F11  0025               	movlb	5	; select bank5
 10633     1F12  0098               	movwf	24	;volatile
 10634     1F13                     l343:	
 10635                           ;mcc_generated_files/pwm/src/ccp2.c: 77:     }
 10636                           
 10637     1F13  0008               	return
 10638     1F14                     __end_of_CCP2_LoadDutyValue:
 10639                           
 10640                           	psect	intentry
 10641     0004                     __pintentry:	
 10642 ;; *************** function _INTERRUPT_InterruptManager *****************
 10643 ;; Defined at:
 10644 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;		None
 10647 ;; Auto vars:     Size  Location     Type
 10648 ;;		None
 10649 ;; Return value:  Size  Location     Type
 10650 ;;                  1    wreg      void 
 10651 ;; Registers used:
 10652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10653 ;; Tracked objects:
 10654 ;;		On entry : 0/0
 10655 ;;		On exit  : 0/0
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10662 ;;Total ram usage:        0 bytes
 10663 ;; Hardware stack levels used: 1
 10664 ;; Hardware stack levels required when called: 11
 10665 ;; This function calls:
 10666 ;;		NULL
 10667 ;;		_EUSART_ReceiveISR
 10668 ;;		_I2C1_ERROR_ISR
 10669 ;;		_I2C1_ISR
 10670 ;;		_Timer0_OverflowISR
 10671 ;; This function is called by:
 10672 ;;		Interrupt level 1
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676     0004                     _INTERRUPT_InterruptManager:
 10677                           
 10678                           ;incstack = 0
 10679     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 10680                           
 10681                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10682     0005  3180               	pagesel	$
 10683     0006                     i1l5892:
 10684                           
 10685                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 10686     0006  1F0B               	btfss	11,6	;volatile
 10687     0007  2809               	goto	u522_21
 10688     0008  280A               	goto	u522_20
 10689     0009                     u522_21:
 10690     0009  283F               	goto	i1l513
 10691     000A                     u522_20:
 10692     000A                     i1l5894:
 10693                           
 10694                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 10695     000A  0021               	movlb	1	; select bank1
 10696     000B  1D90               	btfss	16,3	;volatile
 10697     000C  280E               	goto	u523_21
 10698     000D  280F               	goto	u523_20
 10699     000E                     u523_21:
 10700     000E  2817               	goto	i1l5900
 10701     000F                     u523_20:
 10702     000F                     i1l5896:
 10703     000F  0020               	movlb	0	; select bank0
 10704     0010  1D90               	btfss	16,3	;volatile
 10705     0011  2813               	goto	u524_21
 10706     0012  2814               	goto	u524_20
 10707     0013                     u524_21:
 10708     0013  2817               	goto	i1l5900
 10709     0014                     u524_20:
 10710     0014                     i1l5898:
 10711                           
 10712                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             I2C1_ISR();
 10713     0014  319D  2517  3180   	fcall	_I2C1_ISR
 10714     0017                     i1l5900:
 10715                           
 10716                           ;mcc_generated_files/system/src/interrupt.c: 68:         if(PIE1bits.RCIE == 1 && PIR1bi
      +                          ts.RCIF == 1)
 10717     0017  0021               	movlb	1	; select bank1
 10718     0018  1E90               	btfss	16,5	;volatile
 10719     0019  281B               	goto	u525_21
 10720     001A  281C               	goto	u525_20
 10721     001B                     u525_21:
 10722     001B  2827               	goto	i1l5906
 10723     001C                     u525_20:
 10724     001C                     i1l5902:
 10725     001C  0020               	movlb	0	; select bank0
 10726     001D  1E90               	btfss	16,5	;volatile
 10727     001E  2820               	goto	u526_21
 10728     001F  2821               	goto	u526_20
 10729     0020                     u526_21:
 10730     0020  2827               	goto	i1l5906
 10731     0021                     u526_20:
 10732     0021                     i1l5904:
 10733                           
 10734                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 10735     0021  0023               	movlb	3	; select bank3
 10736     0022  083B               	movf	(_EUSART_RxInterruptHandler+1)^(0+384),w
 10737     0023  008A               	movwf	10
 10738     0024  083A               	movf	_EUSART_RxInterruptHandler^(0+384),w
 10739     0025  000A               	callw
 10740     0026  3180               	pagesel	$
 10741     0027                     i1l5906:
 10742                           
 10743                           ;mcc_generated_files/system/src/interrupt.c: 72:         if(PIE2bits.BCL1IE == 1 && PIR2
      +                          bits.BCL1IF == 1)
 10744     0027  0021               	movlb	1	; select bank1
 10745     0028  1D91               	btfss	17,3	;volatile
 10746     0029  282B               	goto	u527_21
 10747     002A  282C               	goto	u527_20
 10748     002B                     u527_21:
 10749     002B  2834               	goto	i1l5912
 10750     002C                     u527_20:
 10751     002C                     i1l5908:
 10752     002C  0020               	movlb	0	; select bank0
 10753     002D  1D91               	btfss	17,3	;volatile
 10754     002E  2830               	goto	u528_21
 10755     002F  2831               	goto	u528_20
 10756     0030                     u528_21:
 10757     0030  2834               	goto	i1l5912
 10758     0031                     u528_20:
 10759     0031                     i1l5910:
 10760                           
 10761                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             I2C1_ERROR_ISR();
 10762     0031  319D  2513  3180   	fcall	_I2C1_ERROR_ISR
 10763     0034                     i1l5912:
 10764                           
 10765                           ;mcc_generated_files/system/src/interrupt.c: 76:         if(INTCONbits.TMR0IE == 1 && IN
      +                          TCONbits.TMR0IF == 1)
 10766     0034  1E8B               	btfss	11,5	;volatile
 10767     0035  2837               	goto	u529_21
 10768     0036  2838               	goto	u529_20
 10769     0037                     u529_21:
 10770     0037  283F               	goto	i1l513
 10771     0038                     u529_20:
 10772     0038                     i1l5914:
 10773     0038  1D0B               	btfss	11,2	;volatile
 10774     0039  283B               	goto	u530_21
 10775     003A  283C               	goto	u530_20
 10776     003B                     u530_21:
 10777     003B  283F               	goto	i1l513
 10778     003C                     u530_20:
 10779     003C                     i1l5916:
 10780                           
 10781                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             Timer0_OverflowISR();
 10782     003C  3190  2008  3180   	fcall	_Timer0_OverflowISR
 10783     003F                     i1l513:
 10784     003F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10785     0040  0009               	retfie
 10786     0041                     __end_of_INTERRUPT_InterruptManager:
 10787                           
 10788                           	psect	text25
 10789     1008                     __ptext25:	
 10790 ;; *************** function _Timer0_OverflowISR *****************
 10791 ;; Defined at:
 10792 ;;		line 99 in file "mcc_generated_files/timer/src/tmr0.c"
 10793 ;; Parameters:    Size  Location     Type
 10794 ;;		None
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;		None
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  1    wreg      void 
 10799 ;; Registers used:
 10800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;Total ram usage:        0 bytes
 10811 ;; Hardware stack levels used: 1
 10812 ;; Hardware stack levels required when called: 10
 10813 ;; This function calls:
 10814 ;;		NULL
 10815 ;;		_TMR1_DefaultOverflowCallback
 10816 ;;		_TMR2_DefaultOverflowCallback
 10817 ;;		_TMR4_DefaultOverflowCallback
 10818 ;;		_Timer0_DefaultOverflowCallback
 10819 ;; This function is called by:
 10820 ;;		_INTERRUPT_InterruptManager
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824     1008                     _Timer0_OverflowISR:	
 10825                           ;psect for function _Timer0_OverflowISR
 10826                           
 10827     1008                     i1l5736:	
 10828                           ;incstack = 0
 10829                           ; Regs used in _Timer0_OverflowISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10830                           
 10831                           
 10832                           ;mcc_generated_files/timer/src/tmr0.c: 101:   static volatile uint16_t CountCallBack = 0
      +                          ;;mcc_generated_files/timer/src/tmr0.c: 104:   INTCONbits.TMR0IF = 0;
 10833     1008  110B               	bcf	11,2	;volatile
 10834     1009                     i1l5738:
 10835                           
 10836                           ;mcc_generated_files/timer/src/tmr0.c: 106:   TMR0 = timer0ReloadVal;
 10837     1009  0022               	movlb	2	; select bank2
 10838     100A  086B               	movf	_timer0ReloadVal^(0+256),w	;volatile
 10839     100B  0020               	movlb	0	; select bank0
 10840     100C  0095               	movwf	21	;volatile
 10841                           
 10842                           ;mcc_generated_files/timer/src/tmr0.c: 109:   if (++CountCallBack >= 100)
 10843     100D  3001               	movlw	1
 10844     100E  0022               	movlb	2	; select bank2
 10845     100F  07DF               	addwf	Timer0_OverflowISR@CountCallBack^(0+256),f	;volatile
 10846     1010  3000               	movlw	0
 10847     1011  3DE0               	addwfc	(Timer0_OverflowISR@CountCallBack+1)^(0+256),f	;volatile
 10848     1012  3000               	movlw	0
 10849     1013  0260               	subwf	(Timer0_OverflowISR@CountCallBack+1)^(0+256),w	;volatile
 10850     1014  3064               	movlw	100
 10851     1015  1903               	skipnz
 10852     1016  025F               	subwf	Timer0_OverflowISR@CountCallBack^(0+256),w	;volatile
 10853     1017  1C03               	skipc
 10854     1018  281A               	goto	u509_21
 10855     1019  281B               	goto	u509_20
 10856     101A                     u509_21:
 10857     101A  2829               	goto	i1l646
 10858     101B                     u509_20:
 10859     101B                     i1l5740:
 10860                           
 10861                           ;mcc_generated_files/timer/src/tmr0.c: 110:   {;mcc_generated_files/timer/src/tmr0.c: 11
      +                          2:     if(Timer0_OverflowCallback)
 10862     101B  0861               	movf	_Timer0_OverflowCallback^(0+256),w
 10863     101C  0462               	iorwf	(_Timer0_OverflowCallback+1)^(0+256),w
 10864     101D  1903               	btfsc	3,2
 10865     101E  2820               	goto	u510_21
 10866     101F  2821               	goto	u510_20
 10867     1020                     u510_21:
 10868     1020  2826               	goto	i1l5744
 10869     1021                     u510_20:
 10870     1021                     i1l5742:
 10871                           
 10872                           ;mcc_generated_files/timer/src/tmr0.c: 113:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          114:       Timer0_OverflowCallback();
 10873     1021  0862               	movf	(_Timer0_OverflowCallback+1)^(0+256),w
 10874     1022  008A               	movwf	10
 10875     1023  0861               	movf	_Timer0_OverflowCallback^(0+256),w
 10876     1024  000A               	callw
 10877     1025  3190               	pagesel	$
 10878     1026                     i1l5744:
 10879                           
 10880                           ;mcc_generated_files/timer/src/tmr0.c: 117:       CountCallBack = 0;
 10881     1026  0022               	movlb	2	; select bank2
 10882     1027  01DF               	clrf	Timer0_OverflowISR@CountCallBack^(0+256)	;volatile
 10883     1028  01E0               	clrf	(Timer0_OverflowISR@CountCallBack+1)^(0+256)	;volatile
 10884     1029                     i1l646:
 10885     1029  0008               	return
 10886     102A                     __end_of_Timer0_OverflowISR:
 10887                           
 10888                           	psect	text26
 10889     1CDB                     __ptext26:	
 10890 ;; *************** function _TMR4_DefaultOverflowCallback *****************
 10891 ;; Defined at:
 10892 ;;		line 127 in file "mcc_generated_files/timer/src/tmr4.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;		None
 10895 ;; Auto vars:     Size  Location     Type
 10896 ;;		None
 10897 ;; Return value:  Size  Location     Type
 10898 ;;                  1    wreg      void 
 10899 ;; Registers used:
 10900 ;;		None
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;Total ram usage:        0 bytes
 10911 ;; Hardware stack levels used: 1
 10912 ;; This function calls:
 10913 ;;		Nothing
 10914 ;; This function is called by:
 10915 ;;		_TMR4_Initialize
 10916 ;;		_Timer0_OverflowISR
 10917 ;;		_TMR2_Tasks
 10918 ;;		_TMR1_Tasks
 10919 ;;		_TMR4_Tasks
 10920 ;; This function uses a non-reentrant model
 10921 ;;
 10922                           
 10923     1CDB                     _TMR4_DefaultOverflowCallback:	
 10924                           ;psect for function _TMR4_DefaultOverflowCallback
 10925                           
 10926     1CDB                     i1l805:	
 10927                           ;incstack = 0
 10928                           ; Regs used in _TMR4_DefaultOverflowCallback: []
 10929                           
 10930     1CDB  0008               	return
 10931     1CDC                     __end_of_TMR4_DefaultOverflowCallback:
 10932                           
 10933                           	psect	text27
 10934     1CDA                     __ptext27:	
 10935 ;; *************** function _TMR1_DefaultOverflowCallback *****************
 10936 ;; Defined at:
 10937 ;;		line 155 in file "mcc_generated_files/timer/src/tmr1.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;		None
 10940 ;; Auto vars:     Size  Location     Type
 10941 ;;		None
 10942 ;; Return value:  Size  Location     Type
 10943 ;;                  1    wreg      void 
 10944 ;; Registers used:
 10945 ;;		None
 10946 ;; Tracked objects:
 10947 ;;		On entry : 0/0
 10948 ;;		On exit  : 0/0
 10949 ;;		Unchanged: 0/0
 10950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;Total ram usage:        0 bytes
 10956 ;; Hardware stack levels used: 1
 10957 ;; This function calls:
 10958 ;;		Nothing
 10959 ;; This function is called by:
 10960 ;;		_TMR1_Initialize
 10961 ;;		_Timer0_OverflowISR
 10962 ;;		_TMR2_Tasks
 10963 ;;		_TMR1_Tasks
 10964 ;;		_TMR4_Tasks
 10965 ;; This function uses a non-reentrant model
 10966 ;;
 10967                           
 10968     1CDA                     _TMR1_DefaultOverflowCallback:	
 10969                           ;psect for function _TMR1_DefaultOverflowCallback
 10970                           
 10971     1CDA                     i1l723:	
 10972                           ;incstack = 0
 10973                           ; Regs used in _TMR1_DefaultOverflowCallback: []
 10974                           
 10975     1CDA  0008               	return
 10976     1CDB                     __end_of_TMR1_DefaultOverflowCallback:
 10977                           
 10978                           	psect	text28
 10979     1CD9                     __ptext28:	
 10980 ;; *************** function _TMR2_DefaultOverflowCallback *****************
 10981 ;; Defined at:
 10982 ;;		line 127 in file "mcc_generated_files/timer/src/tmr2.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;		None
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;		None
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  1    wreg      void 
 10989 ;; Registers used:
 10990 ;;		None
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11000 ;;Total ram usage:        0 bytes
 11001 ;; Hardware stack levels used: 1
 11002 ;; This function calls:
 11003 ;;		Nothing
 11004 ;; This function is called by:
 11005 ;;		_TMR2_Initialize
 11006 ;;		_Timer0_OverflowISR
 11007 ;;		_TMR2_Tasks
 11008 ;;		_TMR1_Tasks
 11009 ;;		_TMR4_Tasks
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013     1CD9                     _TMR2_DefaultOverflowCallback:	
 11014                           ;psect for function _TMR2_DefaultOverflowCallback
 11015                           
 11016     1CD9                     i1l598:	
 11017                           ;incstack = 0
 11018                           ; Regs used in _TMR2_DefaultOverflowCallback: []
 11019                           
 11020     1CD9  0008               	return
 11021     1CDA                     __end_of_TMR2_DefaultOverflowCallback:
 11022                           
 11023                           	psect	text29
 11024     1D1B                     __ptext29:	
 11025 ;; *************** function _Timer0_DefaultOverflowCallback *****************
 11026 ;; Defined at:
 11027 ;;		line 126 in file "mcc_generated_files/timer/src/tmr0.c"
 11028 ;; Parameters:    Size  Location     Type
 11029 ;;		None
 11030 ;; Auto vars:     Size  Location     Type
 11031 ;;		None
 11032 ;; Return value:  Size  Location     Type
 11033 ;;                  1    wreg      void 
 11034 ;; Registers used:
 11035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11036 ;; Tracked objects:
 11037 ;;		On entry : 0/0
 11038 ;;		On exit  : 0/0
 11039 ;;		Unchanged: 0/0
 11040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11045 ;;Total ram usage:        0 bytes
 11046 ;; Hardware stack levels used: 1
 11047 ;; Hardware stack levels required when called: 9
 11048 ;; This function calls:
 11049 ;;		_TMR0_Custom_ISR
 11050 ;; This function is called by:
 11051 ;;		_Timer0_Initialize
 11052 ;;		_Timer0_OverflowISR
 11053 ;;		_TMR2_Tasks
 11054 ;;		_TMR1_Tasks
 11055 ;;		_TMR4_Tasks
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059     1D1B                     _Timer0_DefaultOverflowCallback:	
 11060                           ;psect for function _Timer0_DefaultOverflowCallback
 11061                           
 11062     1D1B                     i1l5694:	
 11063                           ;incstack = 0
 11064                           ; Regs used in _Timer0_DefaultOverflowCallback: [wreg-fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 11065                           
 11066                           
 11067                           ;mcc_generated_files/timer/src/tmr0.c: 130:     TMR0_Custom_ISR();
 11068     1D1B  318A  2201  319D   	fcall	_TMR0_Custom_ISR
 11069     1D1E                     i1l652:
 11070     1D1E  0008               	return
 11071     1D1F                     __end_of_Timer0_DefaultOverflowCallback:
 11072                           
 11073                           	psect	text30
 11074     0A01                     __ptext30:	
 11075 ;; *************** function _TMR0_Custom_ISR *****************
 11076 ;; Defined at:
 11077 ;;		line 205 in file "main.c"
 11078 ;; Parameters:    Size  Location     Type
 11079 ;;		None
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;  buffer         16   19[BANK2 ] unsigned char [16]
 11082 ;; Return value:  Size  Location     Type
 11083 ;;                  1    wreg      void 
 11084 ;; Registers used:
 11085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11086 ;; Tracked objects:
 11087 ;;		On entry : 0/0
 11088 ;;		On exit  : 0/0
 11089 ;;		Unchanged: 0/0
 11090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;      Locals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Totals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;Total ram usage:       26 bytes
 11096 ;; Hardware stack levels used: 1
 11097 ;; Hardware stack levels required when called: 8
 11098 ;; This function calls:
 11099 ;;		_ADC_GetConversion
 11100 ;;		_Backlight
 11101 ;;		_LCD_Clear
 11102 ;;		_LCD_Set_Cursor
 11103 ;;		_LCD_Write_String
 11104 ;;		_TMR1_Start
 11105 ;;		_TMR1_Stop
 11106 ;;		___fldiv
 11107 ;;		___flge
 11108 ;;		___flmul
 11109 ;;		___xxtofl
 11110 ;;		_sprintf
 11111 ;; This function is called by:
 11112 ;;		_Timer0_DefaultOverflowCallback
 11113 ;; This function uses a non-reentrant model
 11114 ;;
 11115                           
 11116     0A01                     _TMR0_Custom_ISR:	
 11117                           ;psect for function _TMR0_Custom_ISR
 11118                           
 11119     0A01                     i1l5406:	
 11120                           ;incstack = 0
 11121                           ; Regs used in _TMR0_Custom_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11122                           
 11123                           
 11124                           ;main.c: 207:     char buffer[16];;main.c: 209:     LCD_Clear();
 11125     0A01  319D  2586  318A   	fcall	_LCD_Clear
 11126     0A04                     i1l5408:
 11127                           
 11128                           ;main.c: 210:     LCD_Set_Cursor(1, 1);
 11129     0A04  01F6               	clrf	LCD_Set_Cursor@COL
 11130     0A05  0AF6               	incf	LCD_Set_Cursor@COL,f
 11131     0A06  3001               	movlw	1
 11132     0A07  3190  20BA  318A   	fcall	_LCD_Set_Cursor
 11133     0A0A                     i1l5410:
 11134                           
 11135                           ;main.c: 211:     Backlight();
 11136     0A0A  319D  256E  318A   	fcall	_Backlight
 11137                           
 11138                           ;main.c: 212:     LCD_Write_String(" TMR0 ..");
 11139     0A0D  30CE               	movlw	low (STR_4| (0+32768))
 11140     0A0E  00F6               	movwf	LCD_Write_String@Str
 11141     0A0F  3098               	movlw	high (STR_4| (0+32768))
 11142     0A10  00F7               	movwf	LCD_Write_String@Str+1
 11143     0A11  319F  2764  318A   	fcall	_LCD_Write_String
 11144                           
 11145                           ;main.c: 213:     LCD_Set_Cursor(2, 1);
 11146     0A14  01F6               	clrf	LCD_Set_Cursor@COL
 11147     0A15  0AF6               	incf	LCD_Set_Cursor@COL,f
 11148     0A16  3002               	movlw	2
 11149     0A17  3190  20BA  318A   	fcall	_LCD_Set_Cursor
 11150                           
 11151                           ;main.c: 214:     LCD_Write_String(" .. Interrupt");
 11152     0A1A  308F               	movlw	low (STR_2| (0+32768))
 11153     0A1B  00F6               	movwf	LCD_Write_String@Str
 11154     0A1C  3098               	movlw	high (STR_2| (0+32768))
 11155     0A1D  00F7               	movwf	LCD_Write_String@Str+1
 11156     0A1E  319F  2764  318A   	fcall	_LCD_Write_String
 11157     0A21                     i1l5412:
 11158                           
 11159                           ;main.c: 215:     _delay((unsigned long)((1000)*(4000000/4000.0)));
 11160     0A21  3006               	movlw	6
 11161     0A22  0022               	movlb	2	; select bank2
 11162     0A23  00AE               	movwf	(??_TMR0_Custom_ISR^(0+256)+1)
 11163     0A24  3013               	movlw	19
 11164     0A25  00AD               	movwf	??_TMR0_Custom_ISR^(0+256)
 11165     0A26  30AD               	movlw	173
 11166     0A27                     u544_27:
 11167     0A27  0B89               	decfsz	9,f
 11168     0A28  2A27               	goto	u544_27
 11169     0A29  0BAD               	decfsz	??_TMR0_Custom_ISR^(0+256),f
 11170     0A2A  2A27               	goto	u544_27
 11171     0A2B  0BAE               	decfsz	(??_TMR0_Custom_ISR^(0+256)+1),f
 11172     0A2C  2A27               	goto	u544_27
 11173     0A2D  3200               	nop2
 11174     0A2E                     i1l5414:
 11175                           
 11176                           ;main.c: 217:     TMR1H = 0x00;
 11177     0A2E  0020               	movlb	0	; select bank0
 11178     0A2F  0197               	clrf	23	;volatile
 11179     0A30                     i1l5416:
 11180                           
 11181                           ;main.c: 218:     TMR1L = 0x00;
 11182     0A30  0196               	clrf	22	;volatile
 11183     0A31                     i1l5418:
 11184     0A31  0022               	movlb	2	; select bank2
 11185     0A32  150E               	bsf	14,2	;volatile
 11186     0A33                     i1l5420:
 11187                           
 11188                           ;main.c: 221:     _delay((unsigned long)((10)*(4000000/4000000.0)));
 11189     0A33  3003               	movlw	3
 11190     0A34                     u545_27:
 11191     0A34  0B89               	decfsz	9,f
 11192     0A35  2A34               	goto	u545_27
 11193     0A36  0000               	nop
 11194     0A37                     i1l5422:
 11195     0A37  0022               	movlb	2	; select bank2
 11196     0A38  110E               	bcf	14,2	;volatile
 11197     0A39                     i1l1151:
 11198     0A39  0020               	movlb	0	; select bank0
 11199     0A3A  1C8E               	btfss	14,1	;volatile
 11200     0A3B  2A3D               	goto	u496_21
 11201     0A3C  2A3E               	goto	u496_20
 11202     0A3D                     u496_21:
 11203     0A3D  2A39               	goto	i1l1151
 11204     0A3E                     u496_20:
 11205     0A3E                     i1l5424:
 11206                           
 11207                           ;main.c: 226:     TMR1_Start();
 11208     0A3E  319C  24F1  318A   	fcall	_TMR1_Start
 11209     0A41                     i1l1154:	
 11210                           ;main.c: 228:     while(PORTCbits.RC1 == 1);
 11211                           
 11212     0A41  0020               	movlb	0	; select bank0
 11213     0A42  188E               	btfsc	14,1	;volatile
 11214     0A43  2A45               	goto	u497_21
 11215     0A44  2A46               	goto	u497_20
 11216     0A45                     u497_21:
 11217     0A45  2A41               	goto	i1l1154
 11218     0A46                     u497_20:
 11219     0A46                     i1l5426:
 11220                           
 11221                           ;main.c: 230:     TMR1_Stop();
 11222     0A46  319C  24F4  318A   	fcall	_TMR1_Stop
 11223     0A49                     i1l5428:
 11224                           
 11225                           ;main.c: 232:     distance = ((double)((TMR1H<<8) + TMR1L))/58.82;
 11226     0A49  3042               	movlw	66
 11227     0A4A  0020               	movlb	0	; select bank0
 11228     0A4B  00C3               	movwf	___fldiv@a+3
 11229     0A4C  306B               	movlw	107
 11230     0A4D  00C2               	movwf	___fldiv@a+2
 11231     0A4E  3047               	movlw	71
 11232     0A4F  00C1               	movwf	___fldiv@a+1
 11233     0A50  30AE               	movlw	174
 11234     0A51  00C0               	movwf	___fldiv@a
 11235     0A52  0816               	movf	22,w	;volatile
 11236     0A53  0022               	movlb	2	; select bank2
 11237     0A54  00AD               	movwf	??_TMR0_Custom_ISR^(0+256)
 11238     0A55  01AE               	clrf	(??_TMR0_Custom_ISR^(0+256)+1)
 11239     0A56  0020               	movlb	0	; select bank0
 11240     0A57  0817               	movf	23,w	;volatile
 11241     0A58  0022               	movlb	2	; select bank2
 11242     0A59  00AF               	movwf	(??_TMR0_Custom_ISR+2)^(0+256)
 11243     0A5A  01B0               	clrf	((??_TMR0_Custom_ISR+2)^(0+256)+1)
 11244     0A5B  082F               	movf	(??_TMR0_Custom_ISR+2)^(0+256),w
 11245     0A5C  00B0               	movwf	((??_TMR0_Custom_ISR+2)^(0+256)+1)
 11246     0A5D  01AF               	clrf	(??_TMR0_Custom_ISR+2)^(0+256)
 11247     0A5E  082D               	movf	??_TMR0_Custom_ISR^(0+256),w
 11248     0A5F  072F               	addwf	(??_TMR0_Custom_ISR+2)^(0+256),w
 11249     0A60  00F4               	movwf	___xxtofl@val
 11250     0A61  082E               	movf	(??_TMR0_Custom_ISR+1)^(0+256),w
 11251     0A62  3D30               	addwfc	(??_TMR0_Custom_ISR+3)^(0+256),w
 11252     0A63  00F5               	movwf	___xxtofl@val+1
 11253     0A64  01F6               	clrf	___xxtofl@val+2
 11254     0A65  1BF5               	btfsc	___xxtofl@val+1,7
 11255     0A66  03F6               	decf	___xxtofl@val+2,f
 11256     0A67  0876               	movf	___xxtofl@val+2,w
 11257     0A68  00F7               	movwf	___xxtofl@val+3
 11258     0A69  3001               	movlw	1
 11259     0A6A  3195  25C5  318A   	fcall	___xxtofl
 11260     0A6D  0877               	movf	?___xxtofl+3,w
 11261     0A6E  0020               	movlb	0	; select bank0
 11262     0A6F  00C7               	movwf	___fldiv@b+3
 11263     0A70  0876               	movf	?___xxtofl+2,w
 11264     0A71  00C6               	movwf	___fldiv@b+2
 11265     0A72  0875               	movf	?___xxtofl+1,w
 11266     0A73  00C5               	movwf	___fldiv@b+1
 11267     0A74  0874               	movf	?___xxtofl,w
 11268     0A75  00C4               	movwf	___fldiv@b
 11269     0A76  3188  2057  318A   	fcall	___fldiv
 11270     0A79  0020               	movlb	0	; select bank0
 11271     0A7A  0843               	movf	?___fldiv+3,w
 11272     0A7B  0023               	movlb	3	; select bank3
 11273     0A7C  00AF               	movwf	(_distance+3)^(0+384)
 11274     0A7D  0020               	movlb	0	; select bank0
 11275     0A7E  0842               	movf	?___fldiv+2,w
 11276     0A7F  0023               	movlb	3	; select bank3
 11277     0A80  00AE               	movwf	(_distance+2)^(0+384)
 11278     0A81  0020               	movlb	0	; select bank0
 11279     0A82  0841               	movf	?___fldiv+1,w
 11280     0A83  0023               	movlb	3	; select bank3
 11281     0A84  00AD               	movwf	(_distance+1)^(0+384)
 11282     0A85  0020               	movlb	0	; select bank0
 11283     0A86  0840               	movf	?___fldiv,w
 11284     0A87  0023               	movlb	3	; select bank3
 11285     0A88  00AC               	movwf	_distance^(0+384)
 11286     0A89                     i1l5430:
 11287                           
 11288                           ;main.c: 233:     if(distance >= 2 && distance <= 400)
 11289     0A89  082F               	movf	(_distance+3)^(0+384),w
 11290     0A8A  0020               	movlb	0	; select bank0
 11291     0A8B  00C3               	movwf	___flge@ff1+3
 11292     0A8C  0023               	movlb	3	; select bank3
 11293     0A8D  082E               	movf	(_distance+2)^(0+384),w
 11294     0A8E  0020               	movlb	0	; select bank0
 11295     0A8F  00C2               	movwf	___flge@ff1+2
 11296     0A90  0023               	movlb	3	; select bank3
 11297     0A91  082D               	movf	(_distance+1)^(0+384),w
 11298     0A92  0020               	movlb	0	; select bank0
 11299     0A93  00C1               	movwf	___flge@ff1+1
 11300     0A94  0023               	movlb	3	; select bank3
 11301     0A95  082C               	movf	_distance^(0+384),w
 11302     0A96  0020               	movlb	0	; select bank0
 11303     0A97  00C0               	movwf	___flge@ff1
 11304     0A98  3040               	movlw	64
 11305     0A99  00C7               	movwf	___flge@ff2+3
 11306     0A9A  3000               	movlw	0
 11307     0A9B  00C6               	movwf	___flge@ff2+2
 11308     0A9C  3000               	movlw	0
 11309     0A9D  00C5               	movwf	___flge@ff2+1
 11310     0A9E  3000               	movlw	0
 11311     0A9F  00C4               	movwf	___flge@ff2
 11312     0AA0  3195  253A  318A   	fcall	___flge
 11313     0AA3  1C03               	btfss	3,0
 11314     0AA4  2AA6               	goto	u498_21
 11315     0AA5  2AA7               	goto	u498_20
 11316     0AA6                     u498_21:
 11317     0AA6  2AF1               	goto	i1l5442
 11318     0AA7                     u498_20:
 11319     0AA7                     i1l5432:
 11320     0AA7  3043               	movlw	67
 11321     0AA8  0020               	movlb	0	; select bank0
 11322     0AA9  00C3               	movwf	___flge@ff1+3
 11323     0AAA  30C8               	movlw	200
 11324     0AAB  00C2               	movwf	___flge@ff1+2
 11325     0AAC  3000               	movlw	0
 11326     0AAD  00C1               	movwf	___flge@ff1+1
 11327     0AAE  3000               	movlw	0
 11328     0AAF  00C0               	movwf	___flge@ff1
 11329     0AB0  0023               	movlb	3	; select bank3
 11330     0AB1  082F               	movf	(_distance+3)^(0+384),w
 11331     0AB2  0020               	movlb	0	; select bank0
 11332     0AB3  00C7               	movwf	___flge@ff2+3
 11333     0AB4  0023               	movlb	3	; select bank3
 11334     0AB5  082E               	movf	(_distance+2)^(0+384),w
 11335     0AB6  0020               	movlb	0	; select bank0
 11336     0AB7  00C6               	movwf	___flge@ff2+2
 11337     0AB8  0023               	movlb	3	; select bank3
 11338     0AB9  082D               	movf	(_distance+1)^(0+384),w
 11339     0ABA  0020               	movlb	0	; select bank0
 11340     0ABB  00C5               	movwf	___flge@ff2+1
 11341     0ABC  0023               	movlb	3	; select bank3
 11342     0ABD  082C               	movf	_distance^(0+384),w
 11343     0ABE  0020               	movlb	0	; select bank0
 11344     0ABF  00C4               	movwf	___flge@ff2
 11345     0AC0  3195  253A  318A   	fcall	___flge
 11346     0AC3  1C03               	btfss	3,0
 11347     0AC4  2AC6               	goto	u499_21
 11348     0AC5  2AC7               	goto	u499_20
 11349     0AC6                     u499_21:
 11350     0AC6  2AF1               	goto	i1l5442
 11351     0AC7                     u499_20:
 11352     0AC7                     i1l5434:
 11353                           
 11354                           ;main.c: 234:     {;main.c: 235:         LCD_Clear();
 11355     0AC7  319D  2586  318A   	fcall	_LCD_Clear
 11356     0ACA                     i1l5436:
 11357                           
 11358                           ;main.c: 236:         LCD_Set_Cursor(1, 1);
 11359     0ACA  01F6               	clrf	LCD_Set_Cursor@COL
 11360     0ACB  0AF6               	incf	LCD_Set_Cursor@COL,f
 11361     0ACC  3001               	movlw	1
 11362     0ACD  3190  20BA  318A   	fcall	_LCD_Set_Cursor
 11363     0AD0                     i1l5438:
 11364                           
 11365                           ;main.c: 237:         sprintf(buffer, "Dist.: %.2f cm", distance);
 11366     0AD0  3072               	movlw	low (STR_6| (0+32768))
 11367     0AD1  0021               	movlb	1	; select bank1
 11368     0AD2  00E9               	movwf	sprintf@fmt^(0+128)
 11369     0AD3  3098               	movlw	high (STR_6| (0+32768))
 11370     0AD4  00EA               	movwf	(sprintf@fmt^(0+128)+1)
 11371     0AD5  0023               	movlb	3	; select bank3
 11372     0AD6  082F               	movf	(_distance+3)^(0+384),w
 11373     0AD7  0021               	movlb	1	; select bank1
 11374     0AD8  00EE               	movwf	((?_sprintf+3)^(0+128)+2)
 11375     0AD9  0023               	movlb	3	; select bank3
 11376     0ADA  082E               	movf	(_distance+2)^(0+384),w
 11377     0ADB  0021               	movlb	1	; select bank1
 11378     0ADC  00ED               	movwf	((?_sprintf+2)^(0+128)+2)
 11379     0ADD  0023               	movlb	3	; select bank3
 11380     0ADE  082D               	movf	(_distance+1)^(0+384),w
 11381     0ADF  0021               	movlb	1	; select bank1
 11382     0AE0  00EC               	movwf	((?_sprintf+1)^(0+128)+2)
 11383     0AE1  0023               	movlb	3	; select bank3
 11384     0AE2  082C               	movf	_distance^(0+384),w
 11385     0AE3  0021               	movlb	1	; select bank1
 11386     0AE4  00EB               	movwf	(?_sprintf^(0+128)+2)
 11387     0AE5  3033               	movlw	(low (TMR0_Custom_ISR@buffer| (0+256)))& (0+255)
 11388     0AE6  319F  27E0  318A   	fcall	_sprintf
 11389     0AE9                     i1l5440:
 11390                           
 11391                           ;main.c: 238:         LCD_Write_String(buffer);
 11392     0AE9  3033               	movlw	low TMR0_Custom_ISR@buffer
 11393     0AEA  00F6               	movwf	LCD_Write_String@Str
 11394     0AEB  3001               	movlw	high TMR0_Custom_ISR@buffer
 11395     0AEC  00F7               	movwf	LCD_Write_String@Str+1
 11396     0AED  319F  2764  318A   	fcall	_LCD_Write_String
 11397                           
 11398                           ;main.c: 239:     }
 11399     0AF0  2B01               	goto	i1l1158
 11400     0AF1                     i1l5442:
 11401                           
 11402                           ;main.c: 241:     {;main.c: 242:         LCD_Clear();
 11403     0AF1  319D  2586  318A   	fcall	_LCD_Clear
 11404     0AF4                     i1l5444:
 11405                           
 11406                           ;main.c: 243:         LCD_Set_Cursor(1, 1);
 11407     0AF4  01F6               	clrf	LCD_Set_Cursor@COL
 11408     0AF5  0AF6               	incf	LCD_Set_Cursor@COL,f
 11409     0AF6  3001               	movlw	1
 11410     0AF7  3190  20BA  318A   	fcall	_LCD_Set_Cursor
 11411     0AFA                     i1l5446:
 11412                           
 11413                           ;main.c: 244:         LCD_Write_String("Out of Range");
 11414     0AFA  309D               	movlw	low (STR_7| (0+32768))
 11415     0AFB  00F6               	movwf	LCD_Write_String@Str
 11416     0AFC  3098               	movlw	high (STR_7| (0+32768))
 11417     0AFD  00F7               	movwf	LCD_Write_String@Str+1
 11418     0AFE  319F  2764  318A   	fcall	_LCD_Write_String
 11419     0B01                     i1l1158:	
 11420                           ;main.c: 245:     }
 11421                           
 11422                           
 11423                           ;main.c: 247:     temperature = ((double)(ADC_GetConversion(0) & 0x3FF) * 3.3/1023)*100;
 11424     0B01  3044               	movlw	68
 11425     0B02  0020               	movlb	0	; select bank0
 11426     0B03  00C3               	movwf	___fldiv@a+3
 11427     0B04  307F               	movlw	127
 11428     0B05  00C2               	movwf	___fldiv@a+2
 11429     0B06  30C0               	movlw	192
 11430     0B07  00C1               	movwf	___fldiv@a+1
 11431     0B08  3000               	movlw	0
 11432     0B09  00C0               	movwf	___fldiv@a
 11433     0B0A  3040               	movlw	64
 11434     0B0B  00A9               	movwf	___flmul@b+3
 11435     0B0C  3053               	movlw	83
 11436     0B0D  00A8               	movwf	___flmul@b+2
 11437     0B0E  3033               	movlw	51
 11438     0B0F  00A7               	movwf	___flmul@b+1
 11439     0B10  3033               	movlw	51
 11440     0B11  00A6               	movwf	___flmul@b
 11441     0B12  3000               	movlw	0
 11442     0B13  319F  2714  318A   	fcall	_ADC_GetConversion
 11443     0B16  30FF               	movlw	255
 11444     0B17  0570               	andwf	?_ADC_GetConversion,w
 11445     0B18  0022               	movlb	2	; select bank2
 11446     0B19  00AD               	movwf	??_TMR0_Custom_ISR^(0+256)
 11447     0B1A  3003               	movlw	3
 11448     0B1B  0571               	andwf	?_ADC_GetConversion+1,w
 11449     0B1C  00AE               	movwf	(??_TMR0_Custom_ISR+1)^(0+256)
 11450     0B1D  082D               	movf	??_TMR0_Custom_ISR^(0+256),w
 11451     0B1E  00AF               	movwf	(??_TMR0_Custom_ISR+2)^(0+256)
 11452     0B1F  082E               	movf	(??_TMR0_Custom_ISR+1)^(0+256),w
 11453     0B20  00B0               	movwf	((??_TMR0_Custom_ISR+2)^(0+256)+1)
 11454     0B21  01B1               	clrf	((??_TMR0_Custom_ISR+2)^(0+256)+2)
 11455     0B22  01B2               	clrf	((??_TMR0_Custom_ISR+2)^(0+256)+3)
 11456     0B23  0832               	movf	(??_TMR0_Custom_ISR+5)^(0+256),w
 11457     0B24  00F7               	movwf	___xxtofl@val+3
 11458     0B25  0831               	movf	(??_TMR0_Custom_ISR+4)^(0+256),w
 11459     0B26  00F6               	movwf	___xxtofl@val+2
 11460     0B27  0830               	movf	(??_TMR0_Custom_ISR+3)^(0+256),w
 11461     0B28  00F5               	movwf	___xxtofl@val+1
 11462     0B29  082F               	movf	(??_TMR0_Custom_ISR+2)^(0+256),w
 11463     0B2A  00F4               	movwf	___xxtofl@val
 11464     0B2B  3000               	movlw	0
 11465     0B2C  3195  25C5  318A   	fcall	___xxtofl
 11466     0B2F  0877               	movf	?___xxtofl+3,w
 11467     0B30  0020               	movlb	0	; select bank0
 11468     0B31  00AD               	movwf	___flmul@a+3
 11469     0B32  0876               	movf	?___xxtofl+2,w
 11470     0B33  00AC               	movwf	___flmul@a+2
 11471     0B34  0875               	movf	?___xxtofl+1,w
 11472     0B35  00AB               	movwf	___flmul@a+1
 11473     0B36  0874               	movf	?___xxtofl,w
 11474     0B37  00AA               	movwf	___flmul@a
 11475     0B38  318D  25C5  318A   	fcall	___flmul
 11476     0B3B  0020               	movlb	0	; select bank0
 11477     0B3C  0829               	movf	?___flmul+3,w
 11478     0B3D  00C7               	movwf	___fldiv@b+3
 11479     0B3E  0828               	movf	?___flmul+2,w
 11480     0B3F  00C6               	movwf	___fldiv@b+2
 11481     0B40  0827               	movf	?___flmul+1,w
 11482     0B41  00C5               	movwf	___fldiv@b+1
 11483     0B42  0826               	movf	?___flmul,w
 11484     0B43  00C4               	movwf	___fldiv@b
 11485     0B44  3188  2057  318A   	fcall	___fldiv
 11486     0B47  0020               	movlb	0	; select bank0
 11487     0B48  0843               	movf	?___fldiv+3,w
 11488     0B49  0022               	movlb	2	; select bank2
 11489     0B4A  00C6               	movwf	(_TMR0_Custom_ISR$3563+3)^(0+256)
 11490     0B4B  0020               	movlb	0	; select bank0
 11491     0B4C  0842               	movf	?___fldiv+2,w
 11492     0B4D  0022               	movlb	2	; select bank2
 11493     0B4E  00C5               	movwf	(_TMR0_Custom_ISR$3563+2)^(0+256)
 11494     0B4F  0020               	movlb	0	; select bank0
 11495     0B50  0841               	movf	?___fldiv+1,w
 11496     0B51  0022               	movlb	2	; select bank2
 11497     0B52  00C4               	movwf	(_TMR0_Custom_ISR$3563+1)^(0+256)
 11498     0B53  0020               	movlb	0	; select bank0
 11499     0B54  0840               	movf	?___fldiv,w
 11500     0B55  0022               	movlb	2	; select bank2
 11501     0B56  00C3               	movwf	_TMR0_Custom_ISR$3563^(0+256)
 11502                           
 11503                           ;main.c: 247:     temperature = ((double)(ADC_GetConversion(0) & 0x3FF) * 3.3/1023)*100;
 11504     0B57  3042               	movlw	66
 11505     0B58  0020               	movlb	0	; select bank0
 11506     0B59  00A9               	movwf	___flmul@b+3
 11507     0B5A  30C8               	movlw	200
 11508     0B5B  00A8               	movwf	___flmul@b+2
 11509     0B5C  3000               	movlw	0
 11510     0B5D  00A7               	movwf	___flmul@b+1
 11511     0B5E  3000               	movlw	0
 11512     0B5F  00A6               	movwf	___flmul@b
 11513     0B60  0022               	movlb	2	; select bank2
 11514     0B61  0846               	movf	(_TMR0_Custom_ISR$3563+3)^(0+256),w
 11515     0B62  0020               	movlb	0	; select bank0
 11516     0B63  00AD               	movwf	___flmul@a+3
 11517     0B64  0022               	movlb	2	; select bank2
 11518     0B65  0845               	movf	(_TMR0_Custom_ISR$3563+2)^(0+256),w
 11519     0B66  0020               	movlb	0	; select bank0
 11520     0B67  00AC               	movwf	___flmul@a+2
 11521     0B68  0022               	movlb	2	; select bank2
 11522     0B69  0844               	movf	(_TMR0_Custom_ISR$3563+1)^(0+256),w
 11523     0B6A  0020               	movlb	0	; select bank0
 11524     0B6B  00AB               	movwf	___flmul@a+1
 11525     0B6C  0022               	movlb	2	; select bank2
 11526     0B6D  0843               	movf	_TMR0_Custom_ISR$3563^(0+256),w
 11527     0B6E  0020               	movlb	0	; select bank0
 11528     0B6F  00AA               	movwf	___flmul@a
 11529     0B70  318D  25C5  318A   	fcall	___flmul
 11530     0B73  0020               	movlb	0	; select bank0
 11531     0B74  0829               	movf	?___flmul+3,w
 11532     0B75  0023               	movlb	3	; select bank3
 11533     0B76  00AB               	movwf	(_temperature+3)^(0+384)
 11534     0B77  0020               	movlb	0	; select bank0
 11535     0B78  0828               	movf	?___flmul+2,w
 11536     0B79  0023               	movlb	3	; select bank3
 11537     0B7A  00AA               	movwf	(_temperature+2)^(0+384)
 11538     0B7B  0020               	movlb	0	; select bank0
 11539     0B7C  0827               	movf	?___flmul+1,w
 11540     0B7D  0023               	movlb	3	; select bank3
 11541     0B7E  00A9               	movwf	(_temperature+1)^(0+384)
 11542     0B7F  0020               	movlb	0	; select bank0
 11543     0B80  0826               	movf	?___flmul,w
 11544     0B81  0023               	movlb	3	; select bank3
 11545     0B82  00A8               	movwf	_temperature^(0+384)
 11546     0B83                     i1l5448:
 11547                           
 11548                           ;main.c: 248:     ADCON0bits.ADON = 0;
 11549     0B83  0021               	movlb	1	; select bank1
 11550     0B84  101D               	bcf	29,0	;volatile
 11551     0B85                     i1l5450:
 11552                           
 11553                           ;main.c: 250:     LCD_Set_Cursor(2, 1);
 11554     0B85  01F6               	clrf	LCD_Set_Cursor@COL
 11555     0B86  0AF6               	incf	LCD_Set_Cursor@COL,f
 11556     0B87  3002               	movlw	2
 11557     0B88  3190  20BA  318A   	fcall	_LCD_Set_Cursor
 11558     0B8B                     i1l5452:
 11559                           
 11560                           ;main.c: 251:     sprintf(buffer, "Temp.: %.2f C", temperature);
 11561     0B8B  3081               	movlw	low (STR_8| (0+32768))
 11562     0B8C  0021               	movlb	1	; select bank1
 11563     0B8D  00E9               	movwf	sprintf@fmt^(0+128)
 11564     0B8E  3098               	movlw	high (STR_8| (0+32768))
 11565     0B8F  00EA               	movwf	(sprintf@fmt^(0+128)+1)
 11566     0B90  0023               	movlb	3	; select bank3
 11567     0B91  082B               	movf	(_temperature+3)^(0+384),w
 11568     0B92  0021               	movlb	1	; select bank1
 11569     0B93  00EE               	movwf	((?_sprintf+3)^(0+128)+2)
 11570     0B94  0023               	movlb	3	; select bank3
 11571     0B95  082A               	movf	(_temperature+2)^(0+384),w
 11572     0B96  0021               	movlb	1	; select bank1
 11573     0B97  00ED               	movwf	((?_sprintf+2)^(0+128)+2)
 11574     0B98  0023               	movlb	3	; select bank3
 11575     0B99  0829               	movf	(_temperature+1)^(0+384),w
 11576     0B9A  0021               	movlb	1	; select bank1
 11577     0B9B  00EC               	movwf	((?_sprintf+1)^(0+128)+2)
 11578     0B9C  0023               	movlb	3	; select bank3
 11579     0B9D  0828               	movf	_temperature^(0+384),w
 11580     0B9E  0021               	movlb	1	; select bank1
 11581     0B9F  00EB               	movwf	(?_sprintf^(0+128)+2)
 11582     0BA0  3033               	movlw	(low (TMR0_Custom_ISR@buffer| (0+256)))& (0+255)
 11583     0BA1  319F  27E0  318A   	fcall	_sprintf
 11584     0BA4                     i1l5454:
 11585                           
 11586                           ;main.c: 252:     LCD_Write_String(buffer);
 11587     0BA4  3033               	movlw	low TMR0_Custom_ISR@buffer
 11588     0BA5  00F6               	movwf	LCD_Write_String@Str
 11589     0BA6  3001               	movlw	high TMR0_Custom_ISR@buffer
 11590     0BA7  00F7               	movwf	LCD_Write_String@Str+1
 11591     0BA8  319F  2764  318A   	fcall	_LCD_Write_String
 11592     0BAB                     i1l5456:
 11593                           
 11594                           ;main.c: 254:     _delay((unsigned long)((1000)*(4000000/4000.0)));
 11595     0BAB  3006               	movlw	6
 11596     0BAC  0022               	movlb	2	; select bank2
 11597     0BAD  00AE               	movwf	(??_TMR0_Custom_ISR^(0+256)+1)
 11598     0BAE  3013               	movlw	19
 11599     0BAF  00AD               	movwf	??_TMR0_Custom_ISR^(0+256)
 11600     0BB0  30AD               	movlw	173
 11601     0BB1                     u546_27:
 11602     0BB1  0B89               	decfsz	9,f
 11603     0BB2  2BB1               	goto	u546_27
 11604     0BB3  0BAD               	decfsz	??_TMR0_Custom_ISR^(0+256),f
 11605     0BB4  2BB1               	goto	u546_27
 11606     0BB5  0BAE               	decfsz	(??_TMR0_Custom_ISR^(0+256)+1),f
 11607     0BB6  2BB1               	goto	u546_27
 11608     0BB7  3200               	nop2
 11609     0BB8                     i1l1159:
 11610     0BB8  0008               	return
 11611     0BB9                     __end_of_TMR0_Custom_ISR:
 11612                           
 11613                           	psect	text31
 11614     15C5                     __ptext31:	
 11615 ;; *************** function ___xxtofl *****************
 11616 ;; Defined at:
 11617 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;  sign            1    wreg     unsigned char 
 11620 ;;  val             4    4[COMMON] long 
 11621 ;; Auto vars:     Size  Location     Type
 11622 ;;  sign            1    0[BANK0 ] unsigned char 
 11623 ;;  arg             4    2[BANK0 ] unsigned long 
 11624 ;;  exp             1    1[BANK0 ] unsigned char 
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  4    4[COMMON] unsigned char 
 11627 ;; Registers used:
 11628 ;;		wreg, status,2, status,0
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11636 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11638 ;;Total ram usage:       14 bytes
 11639 ;; Hardware stack levels used: 1
 11640 ;; This function calls:
 11641 ;;		Nothing
 11642 ;; This function is called by:
 11643 ;;		_TMR0_Custom_ISR
 11644 ;; This function uses a non-reentrant model
 11645 ;;
 11646                           
 11647     15C5                     ___xxtofl:	
 11648                           ;psect for function ___xxtofl
 11649                           
 11650                           
 11651                           ;incstack = 0
 11652                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11653                           ;___xxtofl@sign stored from wreg
 11654     15C5  0020               	movlb	0	; select bank0
 11655     15C6  00A0               	movwf	___xxtofl@sign
 11656     15C7                     i1l5256:
 11657     15C7  0820               	movf	___xxtofl@sign,w
 11658     15C8  1903               	btfsc	3,2
 11659     15C9  2DCB               	goto	u476_21
 11660     15CA  2DCC               	goto	u476_20
 11661     15CB                     u476_21:
 11662     15CB  2DE0               	goto	i1l5262
 11663     15CC                     u476_20:
 11664     15CC                     i1l5258:
 11665     15CC  1FF7               	btfss	___xxtofl@val+3,7
 11666     15CD  2DCF               	goto	u477_21
 11667     15CE  2DD0               	goto	u477_20
 11668     15CF                     u477_21:
 11669     15CF  2DE0               	goto	i1l5262
 11670     15D0                     u477_20:
 11671     15D0                     i1l5260:
 11672     15D0  0974               	comf	___xxtofl@val,w
 11673     15D1  00A2               	movwf	___xxtofl@arg
 11674     15D2  0975               	comf	___xxtofl@val+1,w
 11675     15D3  00A3               	movwf	___xxtofl@arg+1
 11676     15D4  0976               	comf	___xxtofl@val+2,w
 11677     15D5  00A4               	movwf	___xxtofl@arg+2
 11678     15D6  0977               	comf	___xxtofl@val+3,w
 11679     15D7  00A5               	movwf	___xxtofl@arg+3
 11680     15D8  0AA2               	incf	___xxtofl@arg,f
 11681     15D9  1903               	skipnz
 11682     15DA  0AA3               	incf	___xxtofl@arg+1,f
 11683     15DB  1903               	skipnz
 11684     15DC  0AA4               	incf	___xxtofl@arg+2,f
 11685     15DD  1903               	skipnz
 11686     15DE  0AA5               	incf	___xxtofl@arg+3,f
 11687     15DF  2DE8               	goto	i1l1668
 11688     15E0                     i1l5262:
 11689     15E0  0877               	movf	___xxtofl@val+3,w
 11690     15E1  00A5               	movwf	___xxtofl@arg+3
 11691     15E2  0876               	movf	___xxtofl@val+2,w
 11692     15E3  00A4               	movwf	___xxtofl@arg+2
 11693     15E4  0875               	movf	___xxtofl@val+1,w
 11694     15E5  00A3               	movwf	___xxtofl@arg+1
 11695     15E6  0874               	movf	___xxtofl@val,w
 11696     15E7  00A2               	movwf	___xxtofl@arg
 11697     15E8                     i1l1668:
 11698     15E8  0877               	movf	___xxtofl@val+3,w
 11699     15E9  0476               	iorwf	___xxtofl@val+2,w
 11700     15EA  0475               	iorwf	___xxtofl@val+1,w
 11701     15EB  0474               	iorwf	___xxtofl@val,w
 11702     15EC  1D03               	skipz
 11703     15ED  2DEF               	goto	u478_21
 11704     15EE  2DF0               	goto	u478_20
 11705     15EF                     u478_21:
 11706     15EF  2DF9               	goto	i1l5268
 11707     15F0                     u478_20:
 11708     15F0                     i1l5264:
 11709     15F0  3000               	movlw	0
 11710     15F1  00F7               	movwf	?___xxtofl+3
 11711     15F2  3000               	movlw	0
 11712     15F3  00F6               	movwf	?___xxtofl+2
 11713     15F4  3000               	movlw	0
 11714     15F5  00F5               	movwf	?___xxtofl+1
 11715     15F6  3000               	movlw	0
 11716     15F7  00F4               	movwf	?___xxtofl
 11717     15F8  2E6F               	goto	i1l1670
 11718     15F9                     i1l5268:
 11719     15F9  3096               	movlw	150
 11720     15FA  00A1               	movwf	___xxtofl@exp
 11721     15FB  2E07               	goto	i1l5272
 11722     15FC                     i1l5270:
 11723     15FC  3001               	movlw	1
 11724     15FD  00F8               	movwf	??___xxtofl
 11725     15FE  0878               	movf	??___xxtofl,w
 11726     15FF  07A1               	addwf	___xxtofl@exp,f
 11727     1600  3001               	movlw	1
 11728     1601                     u479_25:
 11729     1601  36A5               	lsrf	___xxtofl@arg+3,f
 11730     1602  0CA4               	rrf	___xxtofl@arg+2,f
 11731     1603  0CA3               	rrf	___xxtofl@arg+1,f
 11732     1604  0CA2               	rrf	___xxtofl@arg,f
 11733     1605  0B89               	decfsz	9,f
 11734     1606  2E01               	goto	u479_25
 11735     1607                     i1l5272:
 11736     1607  30FE               	movlw	254
 11737     1608  0525               	andwf	___xxtofl@arg+3,w
 11738     1609  1D03               	btfss	3,2
 11739     160A  2E0C               	goto	u480_21
 11740     160B  2E0D               	goto	u480_20
 11741     160C                     u480_21:
 11742     160C  2DFC               	goto	i1l5270
 11743     160D                     u480_20:
 11744     160D  2E21               	goto	i1l1674
 11745     160E                     i1l5274:
 11746     160E  3001               	movlw	1
 11747     160F  00F8               	movwf	??___xxtofl
 11748     1610  0878               	movf	??___xxtofl,w
 11749     1611  07A1               	addwf	___xxtofl@exp,f
 11750     1612                     i1l5276:
 11751     1612  3001               	movlw	1
 11752     1613  07A2               	addwf	___xxtofl@arg,f
 11753     1614  3000               	movlw	0
 11754     1615  3DA3               	addwfc	___xxtofl@arg+1,f
 11755     1616  3000               	movlw	0
 11756     1617  3DA4               	addwfc	___xxtofl@arg+2,f
 11757     1618  3000               	movlw	0
 11758     1619  3DA5               	addwfc	___xxtofl@arg+3,f
 11759     161A                     i1l5278:
 11760     161A  3001               	movlw	1
 11761     161B                     u481_25:
 11762     161B  36A5               	lsrf	___xxtofl@arg+3,f
 11763     161C  0CA4               	rrf	___xxtofl@arg+2,f
 11764     161D  0CA3               	rrf	___xxtofl@arg+1,f
 11765     161E  0CA2               	rrf	___xxtofl@arg,f
 11766     161F  0B89               	decfsz	9,f
 11767     1620  2E1B               	goto	u481_25
 11768     1621                     i1l1674:
 11769     1621  30FF               	movlw	255
 11770     1622  0525               	andwf	___xxtofl@arg+3,w
 11771     1623  1D03               	btfss	3,2
 11772     1624  2E26               	goto	u482_21
 11773     1625  2E27               	goto	u482_20
 11774     1626                     u482_21:
 11775     1626  2E0E               	goto	i1l5274
 11776     1627                     u482_20:
 11777     1627  2E31               	goto	i1l5282
 11778     1628                     i1l5280:
 11779     1628  3001               	movlw	1
 11780     1629  02A1               	subwf	___xxtofl@exp,f
 11781     162A  3001               	movlw	1
 11782     162B                     u483_25:
 11783     162B  35A2               	lslf	___xxtofl@arg,f
 11784     162C  0DA3               	rlf	___xxtofl@arg+1,f
 11785     162D  0DA4               	rlf	___xxtofl@arg+2,f
 11786     162E  0DA5               	rlf	___xxtofl@arg+3,f
 11787     162F  0B89               	decfsz	9,f
 11788     1630  2E2B               	goto	u483_25
 11789     1631                     i1l5282:
 11790     1631  1BA4               	btfsc	___xxtofl@arg+2,7
 11791     1632  2E34               	goto	u484_21
 11792     1633  2E35               	goto	u484_20
 11793     1634                     u484_21:
 11794     1634  2E3B               	goto	i1l1681
 11795     1635                     u484_20:
 11796     1635                     i1l5284:
 11797     1635  3002               	movlw	2
 11798     1636  0221               	subwf	___xxtofl@exp,w
 11799     1637  1803               	skipnc
 11800     1638  2E3A               	goto	u485_21
 11801     1639  2E3B               	goto	u485_20
 11802     163A                     u485_21:
 11803     163A  2E28               	goto	i1l5280
 11804     163B                     u485_20:
 11805     163B                     i1l1681:
 11806     163B  1821               	btfsc	___xxtofl@exp,0
 11807     163C  2E3E               	goto	u486_21
 11808     163D  2E3F               	goto	u486_20
 11809     163E                     u486_21:
 11810     163E  2E47               	goto	i1l1682
 11811     163F                     u486_20:
 11812     163F                     i1l5286:
 11813     163F  30FF               	movlw	255
 11814     1640  05A2               	andwf	___xxtofl@arg,f
 11815     1641  30FF               	movlw	255
 11816     1642  05A3               	andwf	___xxtofl@arg+1,f
 11817     1643  307F               	movlw	127
 11818     1644  05A4               	andwf	___xxtofl@arg+2,f
 11819     1645  30FF               	movlw	255
 11820     1646  05A5               	andwf	___xxtofl@arg+3,f
 11821     1647                     i1l1682:
 11822     1647  1003               	clrc
 11823     1648  0CA1               	rrf	___xxtofl@exp,f
 11824     1649                     i1l5288:
 11825     1649  0821               	movf	___xxtofl@exp,w
 11826     164A  00F8               	movwf	??___xxtofl
 11827     164B  01F9               	clrf	??___xxtofl+1
 11828     164C  01FA               	clrf	??___xxtofl+2
 11829     164D  01FB               	clrf	??___xxtofl+3
 11830     164E  3018               	movlw	24
 11831     164F                     u487_25:
 11832     164F  35F8               	lslf	??___xxtofl,f
 11833     1650  0DF9               	rlf	??___xxtofl+1,f
 11834     1651  0DFA               	rlf	??___xxtofl+2,f
 11835     1652  0DFB               	rlf	??___xxtofl+3,f
 11836     1653                     u487_20:
 11837     1653  0B89               	decfsz	9,f
 11838     1654  2E4F               	goto	u487_25
 11839     1655  0878               	movf	??___xxtofl,w
 11840     1656  04A2               	iorwf	___xxtofl@arg,f
 11841     1657  0879               	movf	??___xxtofl+1,w
 11842     1658  04A3               	iorwf	___xxtofl@arg+1,f
 11843     1659  087A               	movf	??___xxtofl+2,w
 11844     165A  04A4               	iorwf	___xxtofl@arg+2,f
 11845     165B  087B               	movf	??___xxtofl+3,w
 11846     165C  04A5               	iorwf	___xxtofl@arg+3,f
 11847     165D                     i1l5290:
 11848     165D  0820               	movf	___xxtofl@sign,w
 11849     165E  1903               	btfsc	3,2
 11850     165F  2E61               	goto	u488_21
 11851     1660  2E62               	goto	u488_20
 11852     1661                     u488_21:
 11853     1661  2E67               	goto	i1l5296
 11854     1662                     u488_20:
 11855     1662                     i1l5292:
 11856     1662  1FF7               	btfss	___xxtofl@val+3,7
 11857     1663  2E65               	goto	u489_21
 11858     1664  2E66               	goto	u489_20
 11859     1665                     u489_21:
 11860     1665  2E67               	goto	i1l5296
 11861     1666                     u489_20:
 11862     1666                     i1l5294:
 11863     1666  17A5               	bsf	___xxtofl@arg+3,7
 11864     1667                     i1l5296:
 11865     1667  0825               	movf	___xxtofl@arg+3,w
 11866     1668  00F7               	movwf	?___xxtofl+3
 11867     1669  0824               	movf	___xxtofl@arg+2,w
 11868     166A  00F6               	movwf	?___xxtofl+2
 11869     166B  0823               	movf	___xxtofl@arg+1,w
 11870     166C  00F5               	movwf	?___xxtofl+1
 11871     166D  0822               	movf	___xxtofl@arg,w
 11872     166E  00F4               	movwf	?___xxtofl
 11873     166F                     i1l1670:
 11874     166F  0008               	return
 11875     1670                     __end_of___xxtofl:
 11876                           
 11877                           	psect	text32
 11878     1CF4                     __ptext32:	
 11879 ;; *************** function _TMR1_Stop *****************
 11880 ;; Defined at:
 11881 ;;		line 86 in file "mcc_generated_files/timer/src/tmr1.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;		None
 11884 ;; Auto vars:     Size  Location     Type
 11885 ;;		None
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  1    wreg      void 
 11888 ;; Registers used:
 11889 ;;		None
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;Total ram usage:        0 bytes
 11900 ;; Hardware stack levels used: 1
 11901 ;; This function calls:
 11902 ;;		Nothing
 11903 ;; This function is called by:
 11904 ;;		_TMR0_Custom_ISR
 11905 ;; This function uses a non-reentrant model
 11906 ;;
 11907                           
 11908     1CF4                     _TMR1_Stop:	
 11909                           ;psect for function _TMR1_Stop
 11910                           
 11911     1CF4                     i1l5214:	
 11912                           ;incstack = 0
 11913                           ; Regs used in _TMR1_Stop: []
 11914                           
 11915                           
 11916                           ;mcc_generated_files/timer/src/tmr1.c: 89:     T1CONbits.TMR1ON = 0;
 11917     1CF4  0020               	movlb	0	; select bank0
 11918     1CF5  1018               	bcf	24,0	;volatile
 11919     1CF6                     i1l697:
 11920     1CF6  0008               	return
 11921     1CF7                     __end_of_TMR1_Stop:
 11922                           
 11923                           	psect	text33
 11924     1CF1                     __ptext33:	
 11925 ;; *************** function _TMR1_Start *****************
 11926 ;; Defined at:
 11927 ;;		line 80 in file "mcc_generated_files/timer/src/tmr1.c"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;		None
 11930 ;; Auto vars:     Size  Location     Type
 11931 ;;		None
 11932 ;; Return value:  Size  Location     Type
 11933 ;;                  1    wreg      void 
 11934 ;; Registers used:
 11935 ;;		None
 11936 ;; Tracked objects:
 11937 ;;		On entry : 0/0
 11938 ;;		On exit  : 0/0
 11939 ;;		Unchanged: 0/0
 11940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;Total ram usage:        0 bytes
 11946 ;; Hardware stack levels used: 1
 11947 ;; This function calls:
 11948 ;;		Nothing
 11949 ;; This function is called by:
 11950 ;;		_TMR0_Custom_ISR
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954     1CF1                     _TMR1_Start:	
 11955                           ;psect for function _TMR1_Start
 11956                           
 11957     1CF1                     i1l5212:	
 11958                           ;incstack = 0
 11959                           ; Regs used in _TMR1_Start: []
 11960                           
 11961                           
 11962                           ;mcc_generated_files/timer/src/tmr1.c: 83:     T1CONbits.TMR1ON = 1;
 11963     1CF1  0020               	movlb	0	; select bank0
 11964     1CF2  1418               	bsf	24,0	;volatile
 11965     1CF3                     i1l694:
 11966     1CF3  0008               	return
 11967     1CF4                     __end_of_TMR1_Start:
 11968                           
 11969                           	psect	text34
 11970     1F14                     __ptext34:	
 11971 ;; *************** function _ADC_GetConversion *****************
 11972 ;; Defined at:
 11973 ;;		line 98 in file "mcc_generated_files/adc/src/adc.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;  channel         1    wreg     enum E9885
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;  channel         1    3[COMMON] enum E9885
 11978 ;; Return value:  Size  Location     Type
 11979 ;;                  2    0[COMMON] unsigned short 
 11980 ;; Registers used:
 11981 ;;		wreg, status,2, status,0
 11982 ;; Tracked objects:
 11983 ;;		On entry : 0/0
 11984 ;;		On exit  : 0/0
 11985 ;;		Unchanged: 0/0
 11986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11989 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11990 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;Total ram usage:        4 bytes
 11992 ;; Hardware stack levels used: 1
 11993 ;; This function calls:
 11994 ;;		Nothing
 11995 ;; This function is called by:
 11996 ;;		_TMR0_Custom_ISR
 11997 ;; This function uses a non-reentrant model
 11998 ;;
 11999                           
 12000     1F14                     _ADC_GetConversion:	
 12001                           ;psect for function _ADC_GetConversion
 12002                           
 12003                           
 12004                           ;incstack = 0
 12005                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 12006                           ;ADC_GetConversion@channel stored from wreg
 12007     1F14  00F3               	movwf	ADC_GetConversion@channel
 12008     1F15                     i1l5166:
 12009                           
 12010                           ;mcc_generated_files/adc/src/adc.c: 98: adc_result_t ADC_GetConversion(adc_channel_t cha
      +                          nnel);mcc_generated_files/adc/src/adc.c: 99: {;mcc_generated_files/adc/src/adc.c: 101:  
      +                             ADCON0bits.CHS = channel;
 12011     1F15  0873               	movf	ADC_GetConversion@channel,w
 12012     1F16  00F2               	movwf	??_ADC_GetConversion
 12013     1F17  0DF2               	rlf	??_ADC_GetConversion,f
 12014     1F18  0DF2               	rlf	??_ADC_GetConversion,f
 12015     1F19  0021               	movlb	1	; select bank1
 12016     1F1A  081D               	movf	29,w	;volatile
 12017     1F1B  0672               	xorwf	??_ADC_GetConversion,w
 12018     1F1C  3983               	andlw	-125
 12019     1F1D  0672               	xorwf	??_ADC_GetConversion,w
 12020     1F1E  009D               	movwf	29	;volatile
 12021     1F1F                     i1l5168:
 12022                           
 12023                           ;mcc_generated_files/adc/src/adc.c: 104:     ADCON0bits.ADON = 1;
 12024     1F1F  141D               	bsf	29,0	;volatile
 12025     1F20                     i1l5170:
 12026                           
 12027                           ;mcc_generated_files/adc/src/adc.c: 107:     _delay((unsigned long)((5)*(4000000/4000000
      +                          .0)));
 12028     1F20  3200               	nop2	;2 cycle nop
 12029     1F21  3200               	nop2	;2 cycle nop
 12030     1F22  0000               	nop
 12031     1F23                     i1l5172:
 12032                           
 12033                           ;mcc_generated_files/adc/src/adc.c: 110:     ADCON0bits.GO_nDONE = 1;
 12034     1F23  0021               	movlb	1	; select bank1
 12035     1F24  149D               	bsf	29,1	;volatile
 12036     1F25                     i1l34:	
 12037                           ;mcc_generated_files/adc/src/adc.c: 114:     {;mcc_generated_files/adc/src/adc.c: 115:  
      +                             }
 12038                           
 12039                           
 12040                           ;mcc_generated_files/adc/src/adc.c: 113:     while (ADCON0bits.GO_nDONE)
 12041     1F25  189D               	btfsc	29,1	;volatile
 12042     1F26  2F28               	goto	u474_21
 12043     1F27  2F29               	goto	u474_20
 12044     1F28                     u474_21:
 12045     1F28  2F25               	goto	i1l34
 12046     1F29                     u474_20:
 12047     1F29                     i1l5174:
 12048                           
 12049                           ;mcc_generated_files/adc/src/adc.c: 118:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 12050     1F29  081C               	movf	28,w	;volatile
 12051     1F2A  00F1               	movwf	?_ADC_GetConversion+1
 12052     1F2B  081B               	movf	27,w	;volatile
 12053     1F2C  00F0               	movwf	?_ADC_GetConversion
 12054     1F2D                     i1l37:
 12055     1F2D  0008               	return
 12056     1F2E                     __end_of_ADC_GetConversion:
 12057                           
 12058                           	psect	text35
 12059     1D17                     __ptext35:	
 12060 ;; *************** function _I2C1_ISR *****************
 12061 ;; Defined at:
 12062 ;;		line 219 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12063 ;; Parameters:    Size  Location     Type
 12064 ;;		None
 12065 ;; Auto vars:     Size  Location     Type
 12066 ;;		None
 12067 ;; Return value:  Size  Location     Type
 12068 ;;                  1    wreg      void 
 12069 ;; Registers used:
 12070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12071 ;; Tracked objects:
 12072 ;;		On entry : 0/0
 12073 ;;		On exit  : 0/0
 12074 ;;		Unchanged: 0/0
 12075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12080 ;;Total ram usage:        0 bytes
 12081 ;; Hardware stack levels used: 1
 12082 ;; Hardware stack levels required when called: 5
 12083 ;; This function calls:
 12084 ;;		_I2C1_EventHandler
 12085 ;; This function is called by:
 12086 ;;		_INTERRUPT_InterruptManager
 12087 ;; This function uses a non-reentrant model
 12088 ;;
 12089                           
 12090     1D17                     _I2C1_ISR:	
 12091                           ;psect for function _I2C1_ISR
 12092                           
 12093     1D17                     i1l5716:	
 12094                           ;incstack = 0
 12095                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12096                           
 12097                           
 12098                           ;mcc_generated_files/i2c_host/src/mssp.c: 221:     I2C1_EventHandler();
 12099     1D17  3192  220A  319D   	fcall	_I2C1_EventHandler
 12100     1D1A                     i1l187:
 12101     1D1A  0008               	return
 12102     1D1B                     __end_of_I2C1_ISR:
 12103                           
 12104                           	psect	text36
 12105     120A                     __ptext36:	
 12106 ;; *************** function _I2C1_EventHandler *****************
 12107 ;; Defined at:
 12108 ;;		line 256 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12109 ;; Parameters:    Size  Location     Type
 12110 ;;		None
 12111 ;; Auto vars:     Size  Location     Type
 12112 ;;		None
 12113 ;; Return value:  Size  Location     Type
 12114 ;;                  1    wreg      void 
 12115 ;; Registers used:
 12116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12117 ;; Tracked objects:
 12118 ;;		On entry : 0/0
 12119 ;;		On exit  : 0/0
 12120 ;;		Unchanged: 0/0
 12121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12126 ;;Total ram usage:        2 bytes
 12127 ;; Hardware stack levels used: 1
 12128 ;; Hardware stack levels required when called: 4
 12129 ;; This function calls:
 12130 ;;		_I2C1_EVENT_ERROR
 12131 ;;		_I2C1_EVENT_IDLE
 12132 ;;		_I2C1_EVENT_NACK
 12133 ;;		_I2C1_EVENT_RESET
 12134 ;;		_I2C1_EVENT_RX
 12135 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12136 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12137 ;;		_I2C1_EVENT_STOP
 12138 ;;		_I2C1_EVENT_TX
 12139 ;;		_I2C1_InterruptClear
 12140 ;;		_I2C1_IsAddr
 12141 ;;		_I2C1_IsData
 12142 ;;		_I2C1_IsNack
 12143 ;; This function is called by:
 12144 ;;		_I2C1_ISR
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148     120A                     _I2C1_EventHandler:	
 12149                           ;psect for function _I2C1_EventHandler
 12150                           
 12151     120A                     i1l5496:	
 12152                           ;incstack = 0
 12153                           ; Regs used in _I2C1_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12154                           
 12155                           
 12156                           ;mcc_generated_files/i2c_host/src/mssp.c: 258:     I2C1_InterruptClear();
 12157     120A  319C  24DF  3192   	fcall	_I2C1_InterruptClear
 12158     120D                     i1l5498:
 12159                           
 12160                           ;mcc_generated_files/i2c_host/src/mssp.c: 259:     if (I2C1_IsAddr() && I2C1_IsNack())
 12161     120D  319D  2567  3192   	fcall	_I2C1_IsAddr
 12162     1210  3A00               	xorlw	0
 12163     1211  1903               	skipnz
 12164     1212  2A14               	goto	u503_21
 12165     1213  2A15               	goto	u503_20
 12166     1214                     u503_21:
 12167     1214  2A23               	goto	i1l5504
 12168     1215                     u503_20:
 12169     1215                     i1l5500:
 12170     1215  319D  2541  3192   	fcall	_I2C1_IsNack
 12171     1218  3A00               	xorlw	0
 12172     1219  1903               	skipnz
 12173     121A  2A1C               	goto	u504_21
 12174     121B  2A1D               	goto	u504_20
 12175     121C                     u504_21:
 12176     121C  2A23               	goto	i1l5504
 12177     121D                     u504_20:
 12178     121D                     i1l5502:
 12179                           
 12180                           ;mcc_generated_files/i2c_host/src/mssp.c: 260:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 261:         i2c1Status.state = I2C_STATE_NACK;
 12181     121D  3005               	movlw	5
 12182     121E  0022               	movlb	2	; select bank2
 12183     121F  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 12184                           
 12185                           ;mcc_generated_files/i2c_host/src/mssp.c: 262:         i2c1Status.errorState = I2C_ERROR
      +                          _ADDR_NACK;
 12186     1220  3001               	movlw	1
 12187     1221  00D3               	movwf	(_i2c1Status^(0+256)+12)	;volatile
 12188                           
 12189                           ;mcc_generated_files/i2c_host/src/mssp.c: 263:     }
 12190     1222  2A38               	goto	i1l5510
 12191     1223                     i1l5504:
 12192     1223  319D  2524  3192   	fcall	_I2C1_IsData
 12193     1226  3A00               	xorlw	0
 12194     1227  1903               	skipnz
 12195     1228  2A2A               	goto	u505_21
 12196     1229  2A2B               	goto	u505_20
 12197     122A                     u505_21:
 12198     122A  2A38               	goto	i1l5510
 12199     122B                     u505_20:
 12200     122B                     i1l5506:
 12201     122B  319D  2541  3192   	fcall	_I2C1_IsNack
 12202     122E  3A00               	xorlw	0
 12203     122F  1903               	skipnz
 12204     1230  2A32               	goto	u506_21
 12205     1231  2A33               	goto	u506_20
 12206     1232                     u506_21:
 12207     1232  2A38               	goto	i1l5510
 12208     1233                     u506_20:
 12209     1233                     i1l5508:
 12210                           
 12211                           ;mcc_generated_files/i2c_host/src/mssp.c: 265:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 266:         i2c1Status.state = I2C_STATE_NACK;
 12212     1233  3005               	movlw	5
 12213     1234  0022               	movlb	2	; select bank2
 12214     1235  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 12215                           
 12216                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:         i2c1Status.errorState = I2C_ERROR
      +                          _DATA_NACK;
 12217     1236  3002               	movlw	2
 12218     1237  00D3               	movwf	(_i2c1Status^(0+256)+12)	;volatile
 12219     1238                     i1l5510:
 12220                           
 12221                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 12222     1238  0022               	movlb	2	; select bank2
 12223     1239  0854               	movf	(_i2c1Status^(0+256)+13),w	;volatile
 12224     123A  00F4               	movwf	??_I2C1_EventHandler
 12225     123B  01F5               	clrf	??_I2C1_EventHandler+1
 12226     123C  35F4               	lslf	??_I2C1_EventHandler,f
 12227     123D  0DF5               	rlf	??_I2C1_EventHandler+1,f
 12228     123E  3060               	movlw	low _i2c1_eventTable
 12229     123F  0774               	addwf	??_I2C1_EventHandler,w
 12230     1240  0084               	movwf	4
 12231     1241  3018               	movlw	high _i2c1_eventTable
 12232     1242  3D75               	addwfc	??_I2C1_EventHandler+1,w
 12233     1243  3880               	iorlw	128
 12234     1244  0085               	movwf	5
 12235     1245  3F01               	moviw [1]fsr0
 12236     1246  008A               	movwf	10
 12237     1247  3F00               	moviw [0]fsr0
 12238     1248  000A               	callw
 12239     1249  3192               	pagesel	$
 12240     124A  0022               	movlb	2	; select bank2
 12241     124B  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 12242     124C                     i1l205:
 12243     124C  0008               	return
 12244     124D                     __end_of_I2C1_EventHandler:
 12245                           
 12246                           	psect	text37
 12247     1D41                     __ptext37:	
 12248 ;; *************** function _I2C1_IsNack *****************
 12249 ;; Defined at:
 12250 ;;		line 447 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12251 ;; Parameters:    Size  Location     Type
 12252 ;;		None
 12253 ;; Auto vars:     Size  Location     Type
 12254 ;;		None
 12255 ;; Return value:  Size  Location     Type
 12256 ;;                  1    wreg      _Bool 
 12257 ;; Registers used:
 12258 ;;		wreg, status,2, status,0
 12259 ;; Tracked objects:
 12260 ;;		On entry : 0/0
 12261 ;;		On exit  : 0/0
 12262 ;;		Unchanged: 0/0
 12263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12268 ;;Total ram usage:        0 bytes
 12269 ;; Hardware stack levels used: 1
 12270 ;; This function calls:
 12271 ;;		Nothing
 12272 ;; This function is called by:
 12273 ;;		_I2C1_EventHandler
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277     1D41                     _I2C1_IsNack:	
 12278                           ;psect for function _I2C1_IsNack
 12279                           
 12280     1D41                     i1l5308:	
 12281                           ;incstack = 0
 12282                           ; Regs used in _I2C1_IsNack: [wreg+status,2+status,0]
 12283                           
 12284                           
 12285                           ;mcc_generated_files/i2c_host/src/mssp.c: 449:     return SSP1CON2bits.ACKSTAT;
 12286     1D41  0024               	movlb	4	; select bank4
 12287     1D42  0E16               	swapf	22,w	;volatile
 12288     1D43  0C89               	rrf	9,f
 12289     1D44  0C89               	rrf	9,f
 12290     1D45  3901               	andlw	1
 12291     1D46                     i1l280:
 12292     1D46  0008               	return
 12293     1D47                     __end_of_I2C1_IsNack:
 12294                           
 12295                           	psect	text38
 12296     1D24                     __ptext38:	
 12297 ;; *************** function _I2C1_IsData *****************
 12298 ;; Defined at:
 12299 ;;		line 452 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12300 ;; Parameters:    Size  Location     Type
 12301 ;;		None
 12302 ;; Auto vars:     Size  Location     Type
 12303 ;;		None
 12304 ;; Return value:  Size  Location     Type
 12305 ;;                  1    wreg      _Bool 
 12306 ;; Registers used:
 12307 ;;		wreg, status,2, status,0
 12308 ;; Tracked objects:
 12309 ;;		On entry : 0/0
 12310 ;;		On exit  : 0/0
 12311 ;;		Unchanged: 0/0
 12312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;Total ram usage:        0 bytes
 12318 ;; Hardware stack levels used: 1
 12319 ;; This function calls:
 12320 ;;		Nothing
 12321 ;; This function is called by:
 12322 ;;		_I2C1_EventHandler
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326     1D24                     _I2C1_IsData:	
 12327                           ;psect for function _I2C1_IsData
 12328                           
 12329     1D24                     i1l5312:	
 12330                           ;incstack = 0
 12331                           ; Regs used in _I2C1_IsData: [wreg+status,2+status,0]
 12332                           
 12333                           
 12334                           ;mcc_generated_files/i2c_host/src/mssp.c: 454:     return (SSP1STATbits.D_nA);
 12335     1D24  0024               	movlb	4	; select bank4
 12336     1D25  0E14               	swapf	20,w	;volatile
 12337     1D26  0C89               	rrf	9,f
 12338     1D27  3901               	andlw	1
 12339     1D28                     i1l283:
 12340     1D28  0008               	return
 12341     1D29                     __end_of_I2C1_IsData:
 12342                           
 12343                           	psect	text39
 12344     1D67                     __ptext39:	
 12345 ;; *************** function _I2C1_IsAddr *****************
 12346 ;; Defined at:
 12347 ;;		line 457 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;		None
 12350 ;; Auto vars:     Size  Location     Type
 12351 ;;		None
 12352 ;; Return value:  Size  Location     Type
 12353 ;;                  1    wreg      _Bool 
 12354 ;; Registers used:
 12355 ;;		wreg, status,0
 12356 ;; Tracked objects:
 12357 ;;		On entry : 0/0
 12358 ;;		On exit  : 0/0
 12359 ;;		Unchanged: 0/0
 12360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12365 ;;Total ram usage:        0 bytes
 12366 ;; Hardware stack levels used: 1
 12367 ;; This function calls:
 12368 ;;		Nothing
 12369 ;; This function is called by:
 12370 ;;		_I2C1_EventHandler
 12371 ;; This function uses a non-reentrant model
 12372 ;;
 12373                           
 12374     1D67                     _I2C1_IsAddr:	
 12375                           ;psect for function _I2C1_IsAddr
 12376                           
 12377     1D67                     i1l5304:	
 12378                           ;incstack = 0
 12379                           ; Regs used in _I2C1_IsAddr: [wreg+status,0]
 12380                           
 12381                           
 12382                           ;mcc_generated_files/i2c_host/src/mssp.c: 459:     return !(SSP1STATbits.D_nA);
 12383     1D67  1003               	clrc
 12384     1D68  0024               	movlb	4	; select bank4
 12385     1D69  1E94               	btfss	20,5	;volatile
 12386     1D6A  1403               	setc
 12387     1D6B  3000               	movlw	0
 12388     1D6C  3D09               	addwfc	9,w
 12389     1D6D                     i1l286:
 12390     1D6D  0008               	return
 12391     1D6E                     __end_of_I2C1_IsAddr:
 12392                           
 12393                           	psect	text40
 12394     1D13                     __ptext40:	
 12395 ;; *************** function _I2C1_ERROR_ISR *****************
 12396 ;; Defined at:
 12397 ;;		line 224 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;		None
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;		None
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  1    wreg      void 
 12404 ;; Registers used:
 12405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12415 ;;Total ram usage:        0 bytes
 12416 ;; Hardware stack levels used: 1
 12417 ;; Hardware stack levels required when called: 5
 12418 ;; This function calls:
 12419 ;;		_I2C1_ErrorEventHandler
 12420 ;; This function is called by:
 12421 ;;		_INTERRUPT_InterruptManager
 12422 ;; This function uses a non-reentrant model
 12423 ;;
 12424                           
 12425     1D13                     _I2C1_ERROR_ISR:	
 12426                           ;psect for function _I2C1_ERROR_ISR
 12427                           
 12428     1D13                     i1l5718:	
 12429                           ;incstack = 0
 12430                           ; Regs used in _I2C1_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12431                           
 12432                           
 12433                           ;mcc_generated_files/i2c_host/src/mssp.c: 226:     I2C1_ErrorEventHandler();
 12434     1D13  3190  204D  319D   	fcall	_I2C1_ErrorEventHandler
 12435     1D16                     i1l190:
 12436     1D16  0008               	return
 12437     1D17                     __end_of_I2C1_ERROR_ISR:
 12438                           
 12439                           	psect	text41
 12440     104D                     __ptext41:	
 12441 ;; *************** function _I2C1_ErrorEventHandler *****************
 12442 ;; Defined at:
 12443 ;;		line 272 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12444 ;; Parameters:    Size  Location     Type
 12445 ;;		None
 12446 ;; Auto vars:     Size  Location     Type
 12447 ;;		None
 12448 ;; Return value:  Size  Location     Type
 12449 ;;                  1    wreg      void 
 12450 ;; Registers used:
 12451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12452 ;; Tracked objects:
 12453 ;;		On entry : 0/0
 12454 ;;		On exit  : 0/0
 12455 ;;		Unchanged: 0/0
 12456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12461 ;;Total ram usage:        2 bytes
 12462 ;; Hardware stack levels used: 1
 12463 ;; Hardware stack levels required when called: 4
 12464 ;; This function calls:
 12465 ;;		NULL
 12466 ;;		_I2C1_DefaultCallback
 12467 ;;		_I2C1_EVENT_ERROR
 12468 ;;		_I2C1_EVENT_IDLE
 12469 ;;		_I2C1_EVENT_NACK
 12470 ;;		_I2C1_EVENT_RESET
 12471 ;;		_I2C1_EVENT_RX
 12472 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12473 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12474 ;;		_I2C1_EVENT_STOP
 12475 ;;		_I2C1_EVENT_TX
 12476 ;;		_I2C1_ErrorInterruptClear
 12477 ;; This function is called by:
 12478 ;;		_I2C1_ERROR_ISR
 12479 ;; This function uses a non-reentrant model
 12480 ;;
 12481                           
 12482     104D                     _I2C1_ErrorEventHandler:	
 12483                           ;psect for function _I2C1_ErrorEventHandler
 12484                           
 12485     104D                     i1l5512:	
 12486                           ;incstack = 0
 12487                           ; Regs used in _I2C1_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12488                           
 12489                           
 12490                           ;mcc_generated_files/i2c_host/src/mssp.c: 274:     i2c1Status.state = I2C_STATE_ERROR;
 12491     104D  3006               	movlw	6
 12492     104E  0022               	movlb	2	; select bank2
 12493     104F  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 12494                           
 12495                           ;mcc_generated_files/i2c_host/src/mssp.c: 275:     i2c1Status.errorState = I2C_ERROR_BUS
      +                          _COLLISION;
 12496     1050  3003               	movlw	3
 12497     1051  00D3               	movwf	(_i2c1Status^(0+256)+12)	;volatile
 12498     1052                     i1l5514:
 12499                           
 12500                           ;mcc_generated_files/i2c_host/src/mssp.c: 276:     I2C1_ErrorInterruptClear();
 12501     1052  319C  24DC  3190   	fcall	_I2C1_ErrorInterruptClear
 12502     1055                     i1l5516:
 12503                           
 12504                           ;mcc_generated_files/i2c_host/src/mssp.c: 277:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 12505     1055  0022               	movlb	2	; select bank2
 12506     1056  0854               	movf	(_i2c1Status^(0+256)+13),w	;volatile
 12507     1057  00F4               	movwf	??_I2C1_ErrorEventHandler
 12508     1058  01F5               	clrf	??_I2C1_ErrorEventHandler+1
 12509     1059  35F4               	lslf	??_I2C1_ErrorEventHandler,f
 12510     105A  0DF5               	rlf	??_I2C1_ErrorEventHandler+1,f
 12511     105B  3060               	movlw	low _i2c1_eventTable
 12512     105C  0774               	addwf	??_I2C1_ErrorEventHandler,w
 12513     105D  0084               	movwf	4
 12514     105E  3018               	movlw	high _i2c1_eventTable
 12515     105F  3D75               	addwfc	??_I2C1_ErrorEventHandler+1,w
 12516     1060  3880               	iorlw	128
 12517     1061  0085               	movwf	5
 12518     1062  3F01               	moviw [1]fsr0
 12519     1063  008A               	movwf	10
 12520     1064  3F00               	moviw [0]fsr0
 12521     1065  000A               	callw
 12522     1066  3190               	pagesel	$
 12523     1067  0022               	movlb	2	; select bank2
 12524     1068  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 12525     1069                     i1l5518:
 12526                           
 12527                           ;mcc_generated_files/i2c_host/src/mssp.c: 278:     I2C1_Callback();
 12528     1069  0023               	movlb	3	; select bank3
 12529     106A  083D               	movf	(_I2C1_Callback+1)^(0+384),w
 12530     106B  008A               	movwf	10
 12531     106C  083C               	movf	_I2C1_Callback^(0+384),w
 12532     106D  000A               	callw
 12533     106E  3190               	pagesel	$
 12534     106F                     i1l208:
 12535     106F  0008               	return
 12536     1070                     __end_of_I2C1_ErrorEventHandler:
 12537                           
 12538                           	psect	text42
 12539     1D60                     __ptext42:	
 12540 ;; *************** function _I2C1_EVENT_RESET *****************
 12541 ;; Defined at:
 12542 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12543 ;; Parameters:    Size  Location     Type
 12544 ;;		None
 12545 ;; Auto vars:     Size  Location     Type
 12546 ;;		None
 12547 ;; Return value:  Size  Location     Type
 12548 ;;                  1    wreg      enum E10210
 12549 ;; Registers used:
 12550 ;;		wreg, status,2, status,0, pclath, cstack
 12551 ;; Tracked objects:
 12552 ;;		On entry : 0/0
 12553 ;;		On exit  : 0/0
 12554 ;;		Unchanged: 0/0
 12555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12560 ;;Total ram usage:        0 bytes
 12561 ;; Hardware stack levels used: 1
 12562 ;; Hardware stack levels required when called: 1
 12563 ;; This function calls:
 12564 ;;		_I2C1_BusReset
 12565 ;; This function is called by:
 12566 ;;		_I2C1_EVENT_ERROR
 12567 ;;		_I2C1_EventHandler
 12568 ;;		_I2C1_ErrorEventHandler
 12569 ;; This function uses a non-reentrant model
 12570 ;;
 12571                           
 12572     1D60                     _I2C1_EVENT_RESET:	
 12573                           ;psect for function _I2C1_EVENT_RESET
 12574                           
 12575     1D60                     i1l5204:	
 12576                           ;incstack = 0
 12577                           ; Regs used in _I2C1_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 12578                           
 12579                           
 12580                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:     I2C1_BusReset();
 12581     1D60  319C  24FB  319D   	fcall	_I2C1_BusReset
 12582     1D63                     i1l5206:
 12583                           
 12584                           ;mcc_generated_files/i2c_host/src/mssp.c: 387:     i2c1Status.busy = 0;
 12585     1D63  0022               	movlb	2	; select bank2
 12586     1D64  01C7               	clrf	_i2c1Status^(0+256)	;volatile
 12587     1D65                     i1l5208:
 12588                           
 12589                           ;mcc_generated_files/i2c_host/src/mssp.c: 388:     return I2C_STATE_IDLE;
 12590     1D65  3000               	movlw	0
 12591     1D66                     i1l247:
 12592     1D66  0008               	return
 12593     1D67                     __end_of_I2C1_EVENT_RESET:
 12594                           
 12595                           	psect	text43
 12596     1D7E                     __ptext43:	
 12597 ;; *************** function _I2C1_EVENT_STOP *****************
 12598 ;; Defined at:
 12599 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12600 ;; Parameters:    Size  Location     Type
 12601 ;;		None
 12602 ;; Auto vars:     Size  Location     Type
 12603 ;;		None
 12604 ;; Return value:  Size  Location     Type
 12605 ;;                  1    wreg      enum E10210
 12606 ;; Registers used:
 12607 ;;		wreg, status,2, status,0, pclath, cstack
 12608 ;; Tracked objects:
 12609 ;;		On entry : 0/0
 12610 ;;		On exit  : 0/0
 12611 ;;		Unchanged: 0/0
 12612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12617 ;;Total ram usage:        0 bytes
 12618 ;; Hardware stack levels used: 1
 12619 ;; Hardware stack levels required when called: 2
 12620 ;; This function calls:
 12621 ;;		_I2C1_Close
 12622 ;;		_I2C1_StopSend
 12623 ;; This function is called by:
 12624 ;;		_I2C1_EVENT_TX
 12625 ;;		_I2C1_EVENT_NACK
 12626 ;;		_I2C1_EventHandler
 12627 ;;		_I2C1_ErrorEventHandler
 12628 ;; This function uses a non-reentrant model
 12629 ;;
 12630                           
 12631     1D7E                     _I2C1_EVENT_STOP:	
 12632                           ;psect for function _I2C1_EVENT_STOP
 12633                           
 12634     1D7E                     i1l5182:	
 12635                           ;incstack = 0
 12636                           ; Regs used in _I2C1_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 12637                           
 12638                           
 12639                           ;mcc_generated_files/i2c_host/src/mssp.c: 379:     I2C1_StopSend();
 12640     1D7E  319C  24E2  319D   	fcall	_I2C1_StopSend
 12641                           
 12642                           ;mcc_generated_files/i2c_host/src/mssp.c: 380:     I2C1_Close();
 12643     1D81  319E  26A5  319D   	fcall	_I2C1_Close
 12644     1D84                     i1l5184:
 12645                           
 12646                           ;mcc_generated_files/i2c_host/src/mssp.c: 381:     return I2C_STATE_IDLE;
 12647     1D84  3000               	movlw	0
 12648     1D85                     i1l244:
 12649     1D85  0008               	return
 12650     1D86                     __end_of_I2C1_EVENT_STOP:
 12651                           
 12652                           	psect	text44
 12653     1D3B                     __ptext44:	
 12654 ;; *************** function _I2C1_EVENT_ERROR *****************
 12655 ;; Defined at:
 12656 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12657 ;; Parameters:    Size  Location     Type
 12658 ;;		None
 12659 ;; Auto vars:     Size  Location     Type
 12660 ;;  retEventStat    1    0[COMMON] enum E10210
 12661 ;; Return value:  Size  Location     Type
 12662 ;;                  1    wreg      enum E10210
 12663 ;; Registers used:
 12664 ;;		wreg, status,2, status,0, pclath, cstack
 12665 ;; Tracked objects:
 12666 ;;		On entry : 0/0
 12667 ;;		On exit  : 0/0
 12668 ;;		Unchanged: 0/0
 12669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12673 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12674 ;;Total ram usage:        1 bytes
 12675 ;; Hardware stack levels used: 1
 12676 ;; Hardware stack levels required when called: 2
 12677 ;; This function calls:
 12678 ;;		_I2C1_EVENT_RESET
 12679 ;; This function is called by:
 12680 ;;		_I2C1_EventHandler
 12681 ;;		_I2C1_ErrorEventHandler
 12682 ;; This function uses a non-reentrant model
 12683 ;;
 12684                           
 12685     1D3B                     _I2C1_EVENT_ERROR:	
 12686                           ;psect for function _I2C1_EVENT_ERROR
 12687                           
 12688     1D3B                     i1l5392:	
 12689                           ;incstack = 0
 12690                           ; Regs used in _I2C1_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 12691                           
 12692     1D3B                     i1l5394:
 12693                           
 12694                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     retEventState = I2C1_EVENT_RESET();
 12695     1D3B  319D  2560  319D   	fcall	_I2C1_EVENT_RESET
 12696     1D3E  00F0               	movwf	I2C1_EVENT_ERROR@retEventState
 12697     1D3F                     i1l5396:
 12698                           
 12699                           ;mcc_generated_files/i2c_host/src/mssp.c: 374:     return retEventState;
 12700     1D3F  0870               	movf	I2C1_EVENT_ERROR@retEventState,w
 12701     1D40                     i1l241:
 12702     1D40  0008               	return
 12703     1D41                     __end_of_I2C1_EVENT_ERROR:
 12704                           
 12705                           	psect	text45
 12706     1D35                     __ptext45:	
 12707 ;; *************** function _I2C1_EVENT_NACK *****************
 12708 ;; Defined at:
 12709 ;;		line 363 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12710 ;; Parameters:    Size  Location     Type
 12711 ;;		None
 12712 ;; Auto vars:     Size  Location     Type
 12713 ;;  retEventStat    1    0[COMMON] enum E10210
 12714 ;; Return value:  Size  Location     Type
 12715 ;;                  1    wreg      enum E10210
 12716 ;; Registers used:
 12717 ;;		wreg, status,2, status,0, pclath, cstack
 12718 ;; Tracked objects:
 12719 ;;		On entry : 0/0
 12720 ;;		On exit  : 0/0
 12721 ;;		Unchanged: 0/0
 12722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12727 ;;Total ram usage:        1 bytes
 12728 ;; Hardware stack levels used: 1
 12729 ;; Hardware stack levels required when called: 3
 12730 ;; This function calls:
 12731 ;;		_I2C1_EVENT_STOP
 12732 ;; This function is called by:
 12733 ;;		_I2C1_EventHandler
 12734 ;;		_I2C1_ErrorEventHandler
 12735 ;; This function uses a non-reentrant model
 12736 ;;
 12737                           
 12738     1D35                     _I2C1_EVENT_NACK:	
 12739                           ;psect for function _I2C1_EVENT_NACK
 12740                           
 12741     1D35                     i1l5384:	
 12742                           ;incstack = 0
 12743                           ; Regs used in _I2C1_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 12744                           
 12745     1D35                     i1l5386:
 12746                           
 12747                           ;mcc_generated_files/i2c_host/src/mssp.c: 366:     retEventState = I2C1_EVENT_STOP();
 12748     1D35  319D  257E  319D   	fcall	_I2C1_EVENT_STOP
 12749     1D38  00F0               	movwf	I2C1_EVENT_NACK@retEventState
 12750     1D39                     i1l5388:
 12751                           
 12752                           ;mcc_generated_files/i2c_host/src/mssp.c: 367:     return retEventState;
 12753     1D39  0870               	movf	I2C1_EVENT_NACK@retEventState,w
 12754     1D3A                     i1l238:
 12755     1D3A  0008               	return
 12756     1D3B                     __end_of_I2C1_EVENT_NACK:
 12757                           
 12758                           	psect	text46
 12759     11C9                     __ptext46:	
 12760 ;; *************** function _I2C1_EVENT_RX *****************
 12761 ;; Defined at:
 12762 ;;		line 331 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12763 ;; Parameters:    Size  Location     Type
 12764 ;;		None
 12765 ;; Auto vars:     Size  Location     Type
 12766 ;;  retEventStat    1    1[COMMON] enum E10210
 12767 ;; Return value:  Size  Location     Type
 12768 ;;                  1    wreg      enum E10210
 12769 ;; Registers used:
 12770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12771 ;; Tracked objects:
 12772 ;;		On entry : 0/0
 12773 ;;		On exit  : 0/0
 12774 ;;		Unchanged: 0/0
 12775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12778 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;Total ram usage:        2 bytes
 12781 ;; Hardware stack levels used: 1
 12782 ;; Hardware stack levels required when called: 1
 12783 ;; This function calls:
 12784 ;;		_I2C1_AckSend
 12785 ;;		_I2C1_DataReceive
 12786 ;;		_I2C1_IsRxBufFull
 12787 ;;		_I2C1_NackSend
 12788 ;;		_I2C1_ReceiveEnable
 12789 ;;		_I2C1_RestartDisable
 12790 ;; This function is called by:
 12791 ;;		_I2C1_EventHandler
 12792 ;;		_I2C1_ErrorEventHandler
 12793 ;; This function uses a non-reentrant model
 12794 ;;
 12795                           
 12796     11C9                     _I2C1_EVENT_RX:	
 12797                           ;psect for function _I2C1_EVENT_RX
 12798                           
 12799     11C9                     i1l5358:	
 12800                           ;incstack = 0
 12801                           ; Regs used in _I2C1_EVENT_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12802                           
 12803                           
 12804                           ;mcc_generated_files/i2c_host/src/mssp.c: 333:     i2c_host_event_states_t retEventState
      +                           = I2C_STATE_RX;
 12805     11C9  3004               	movlw	4
 12806     11CA  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12807     11CB                     i1l5360:
 12808                           
 12809                           ;mcc_generated_files/i2c_host/src/mssp.c: 335:     if (I2C1_IsRxBufFull())
 12810     11CB  319D  2507  3191   	fcall	_I2C1_IsRxBufFull
 12811     11CE  3A00               	xorlw	0
 12812     11CF  1903               	skipnz
 12813     11D0  29D2               	goto	u493_21
 12814     11D1  29D3               	goto	u493_20
 12815     11D2                     u493_21:
 12816     11D2  2A05               	goto	i1l5378
 12817     11D3                     u493_20:
 12818     11D3                     i1l5362:
 12819                           
 12820                           ;mcc_generated_files/i2c_host/src/mssp.c: 336:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 337:         if (i2c1Status.readLength > 0)
 12821     11D3  0022               	movlb	2	; select bank2
 12822     11D4  0850               	movf	(_i2c1Status^(0+256)+9),w	;volatile
 12823     11D5  0451               	iorwf	((_i2c1Status+1)^(0+256)+9),w	;volatile
 12824     11D6  1903               	btfsc	3,2
 12825     11D7  29D9               	goto	u494_21
 12826     11D8  29DA               	goto	u494_20
 12827     11D9                     u494_21:
 12828     11D9  29F2               	goto	i1l5370
 12829     11DA                     u494_20:
 12830     11DA                     i1l5364:
 12831                           
 12832                           ;mcc_generated_files/i2c_host/src/mssp.c: 338:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 339:             *i2c1Status.readPtr++ = I2C1_DataReceive();
 12833     11DA  319C  24E5  3191   	fcall	_I2C1_DataReceive
 12834     11DD  00F0               	movwf	??_I2C1_EVENT_RX
 12835     11DE  3007               	movlw	7
 12836     11DF  3E47               	addlw	(low (_i2c1Status| (0+256)))& (0+255)
 12837     11E0  0086               	movwf	6
 12838     11E1  3001               	movlw	1	; select bank2/3
 12839     11E2  0087               	movwf	7
 12840     11E3  3F40               	moviw [0]fsr1
 12841     11E4  0084               	movwf	4
 12842     11E5  3F41               	moviw [1]fsr1
 12843     11E6  0085               	movwf	5
 12844     11E7  0870               	movf	??_I2C1_EVENT_RX,w
 12845     11E8  0080               	movwf	0
 12846     11E9                     i1l5366:
 12847     11E9  3001               	movlw	1
 12848     11EA  0022               	movlb	2	; select bank2
 12849     11EB  07CE               	addwf	(low ((_i2c1Status| (0+256)+7)))^0,f	;volatile
 12850     11EC  3000               	movlw	0
 12851     11ED  3DCF               	addwfc	((low ((_i2c1Status| (0+256)+7))+1))^0,f	;volatile
 12852     11EE                     i1l5368:
 12853                           
 12854                           ;mcc_generated_files/i2c_host/src/mssp.c: 340:             i2c1Status.readLength--;
 12855     11EE  3001               	movlw	1
 12856     11EF  02D0               	subwf	(_i2c1Status^(0+256)+9),f	;volatile
 12857     11F0  3000               	movlw	0
 12858     11F1  3BD1               	subwfb	((_i2c1Status+1)^(0+256)+9),f	;volatile
 12859     11F2                     i1l5370:
 12860                           
 12861                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:         if (i2c1Status.readLength > 0)
 12862     11F2  0850               	movf	(_i2c1Status^(0+256)+9),w	;volatile
 12863     11F3  0451               	iorwf	((_i2c1Status+1)^(0+256)+9),w	;volatile
 12864     11F4  1903               	btfsc	3,2
 12865     11F5  29F7               	goto	u495_21
 12866     11F6  29F8               	goto	u495_20
 12867     11F7                     u495_21:
 12868     11F7  29FC               	goto	i1l5374
 12869     11F8                     u495_20:
 12870     11F8                     i1l5372:
 12871                           
 12872                           ;mcc_generated_files/i2c_host/src/mssp.c: 345:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 346:             I2C1_AckSend();
 12873     11F8  319D  2503  3191   	fcall	_I2C1_AckSend
 12874                           
 12875                           ;mcc_generated_files/i2c_host/src/mssp.c: 347:         }
 12876     11FB  2A08               	goto	i1l5380
 12877     11FC                     i1l5374:
 12878                           
 12879                           ;mcc_generated_files/i2c_host/src/mssp.c: 349:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 350:             I2C1_RestartDisable();
 12880     11FC  319C  24EB  3191   	fcall	_I2C1_RestartDisable
 12881                           
 12882                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:             I2C1_NackSend();
 12883     11FF  319D  250B  3191   	fcall	_I2C1_NackSend
 12884     1202                     i1l5376:
 12885                           
 12886                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:             retEventState = I2C_STATE_STO
      +                          P;
 12887     1202  3007               	movlw	7
 12888     1203  00F1               	movwf	I2C1_EVENT_RX@retEventState
 12889     1204  2A08               	goto	i1l5380
 12890     1205                     i1l5378:
 12891                           
 12892                           ;mcc_generated_files/i2c_host/src/mssp.c: 357:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 358:         I2C1_ReceiveEnable();
 12893     1205  319C  24E8  3191   	fcall	_I2C1_ReceiveEnable
 12894     1208                     i1l5380:
 12895                           
 12896                           ;mcc_generated_files/i2c_host/src/mssp.c: 360:     return retEventState;
 12897     1208  0871               	movf	I2C1_EVENT_RX@retEventState,w
 12898     1209                     i1l235:
 12899     1209  0008               	return
 12900     120A                     __end_of_I2C1_EVENT_RX:
 12901                           
 12902                           	psect	text47
 12903     1D59                     __ptext47:	
 12904 ;; *************** function _I2C1_EVENT_SEND_WR_ADDR *****************
 12905 ;; Defined at:
 12906 ;;		line 299 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12907 ;; Parameters:    Size  Location     Type
 12908 ;;		None
 12909 ;; Auto vars:     Size  Location     Type
 12910 ;;		None
 12911 ;; Return value:  Size  Location     Type
 12912 ;;                  1    wreg      enum E10210
 12913 ;; Registers used:
 12914 ;;		wreg, status,2, status,0, pclath, cstack
 12915 ;; Tracked objects:
 12916 ;;		On entry : 0/0
 12917 ;;		On exit  : 0/0
 12918 ;;		Unchanged: 0/0
 12919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12924 ;;Total ram usage:        0 bytes
 12925 ;; Hardware stack levels used: 1
 12926 ;; Hardware stack levels required when called: 1
 12927 ;; This function calls:
 12928 ;;		_I2C1_DataTransmit
 12929 ;; This function is called by:
 12930 ;;		_I2C1_EventHandler
 12931 ;;		_I2C1_ErrorEventHandler
 12932 ;; This function uses a non-reentrant model
 12933 ;;
 12934                           
 12935     1D59                     _I2C1_EVENT_SEND_WR_ADDR:	
 12936                           ;psect for function _I2C1_EVENT_SEND_WR_ADDR
 12937                           
 12938     1D59                     i1l5328:	
 12939                           ;incstack = 0
 12940                           ; Regs used in _I2C1_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12941                           
 12942                           
 12943                           ;mcc_generated_files/i2c_host/src/mssp.c: 301:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
 12944     1D59  0022               	movlb	2	; select bank2
 12945     1D5A  3548               	lslf	(_i2c1Status^(0+256)+1),w	;volatile
 12946     1D5B  319D  251F  319D   	fcall	_I2C1_DataTransmit
 12947     1D5E                     i1l5330:
 12948                           
 12949                           ;mcc_generated_files/i2c_host/src/mssp.c: 302:     return I2C_STATE_TX;
 12950     1D5E  3003               	movlw	3
 12951     1D5F                     i1l220:
 12952     1D5F  0008               	return
 12953     1D60                     __end_of_I2C1_EVENT_SEND_WR_ADDR:
 12954                           
 12955                           	psect	text48
 12956     1D76                     __ptext48:	
 12957 ;; *************** function _I2C1_EVENT_SEND_RD_ADDR *****************
 12958 ;; Defined at:
 12959 ;;		line 293 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12960 ;; Parameters:    Size  Location     Type
 12961 ;;		None
 12962 ;; Auto vars:     Size  Location     Type
 12963 ;;		None
 12964 ;; Return value:  Size  Location     Type
 12965 ;;                  1    wreg      enum E10210
 12966 ;; Registers used:
 12967 ;;		wreg, status,2, status,0, pclath, cstack
 12968 ;; Tracked objects:
 12969 ;;		On entry : 0/0
 12970 ;;		On exit  : 0/0
 12971 ;;		Unchanged: 0/0
 12972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12977 ;;Total ram usage:        0 bytes
 12978 ;; Hardware stack levels used: 1
 12979 ;; Hardware stack levels required when called: 1
 12980 ;; This function calls:
 12981 ;;		_I2C1_DataTransmit
 12982 ;; This function is called by:
 12983 ;;		_I2C1_EventHandler
 12984 ;;		_I2C1_ErrorEventHandler
 12985 ;; This function uses a non-reentrant model
 12986 ;;
 12987                           
 12988     1D76                     _I2C1_EVENT_SEND_RD_ADDR:	
 12989                           ;psect for function _I2C1_EVENT_SEND_RD_ADDR
 12990                           
 12991     1D76                     i1l5322:	
 12992                           ;incstack = 0
 12993                           ; Regs used in _I2C1_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 12994                           
 12995                           
 12996                           ;mcc_generated_files/i2c_host/src/mssp.c: 295:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1 | 1));
 12997     1D76  1403               	setc
 12998     1D77  0022               	movlb	2	; select bank2
 12999     1D78  0D48               	rlf	(_i2c1Status^(0+256)+1),w	;volatile
 13000     1D79  319D  251F  319D   	fcall	_I2C1_DataTransmit
 13001     1D7C                     i1l5324:
 13002                           
 13003                           ;mcc_generated_files/i2c_host/src/mssp.c: 296:     return I2C_STATE_RX;
 13004     1D7C  3004               	movlw	4
 13005     1D7D                     i1l217:
 13006     1D7D  0008               	return
 13007     1D7E                     __end_of_I2C1_EVENT_SEND_RD_ADDR:
 13008                           
 13009                           	psect	text49
 13010     1D0F                     __ptext49:	
 13011 ;; *************** function _I2C1_EVENT_IDLE *****************
 13012 ;; Defined at:
 13013 ;;		line 287 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;		None
 13016 ;; Auto vars:     Size  Location     Type
 13017 ;;		None
 13018 ;; Return value:  Size  Location     Type
 13019 ;;                  1    wreg      enum E10210
 13020 ;; Registers used:
 13021 ;;		wreg, status,2
 13022 ;; Tracked objects:
 13023 ;;		On entry : 0/0
 13024 ;;		On exit  : 0/0
 13025 ;;		Unchanged: 0/0
 13026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13031 ;;Total ram usage:        0 bytes
 13032 ;; Hardware stack levels used: 1
 13033 ;; This function calls:
 13034 ;;		Nothing
 13035 ;; This function is called by:
 13036 ;;		_I2C1_EventHandler
 13037 ;;		_I2C1_ErrorEventHandler
 13038 ;; This function uses a non-reentrant model
 13039 ;;
 13040                           
 13041     1D0F                     _I2C1_EVENT_IDLE:	
 13042                           ;psect for function _I2C1_EVENT_IDLE
 13043                           
 13044     1D0F                     i1l5316:	
 13045                           ;incstack = 0
 13046                           ; Regs used in _I2C1_EVENT_IDLE: [wreg+status,2]
 13047                           
 13048                           
 13049                           ;mcc_generated_files/i2c_host/src/mssp.c: 289:     i2c1Status.busy = 0;
 13050     1D0F  0022               	movlb	2	; select bank2
 13051     1D10  01C7               	clrf	_i2c1Status^(0+256)	;volatile
 13052     1D11                     i1l5318:
 13053                           
 13054                           ;mcc_generated_files/i2c_host/src/mssp.c: 290:     return I2C_STATE_RESET;
 13055     1D11  3008               	movlw	8
 13056     1D12                     i1l214:
 13057     1D12  0008               	return
 13058     1D13                     __end_of_I2C1_EVENT_IDLE:
 13059                           
 13060                           	psect	text50
 13061     1134                     __ptext50:	
 13062 ;; *************** function _I2C1_EVENT_TX *****************
 13063 ;; Defined at:
 13064 ;;		line 305 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13065 ;; Parameters:    Size  Location     Type
 13066 ;;		None
 13067 ;; Auto vars:     Size  Location     Type
 13068 ;;  retEventStat    1    3[COMMON] enum E10210
 13069 ;; Return value:  Size  Location     Type
 13070 ;;                  1    wreg      enum E10210
 13071 ;; Registers used:
 13072 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13073 ;; Tracked objects:
 13074 ;;		On entry : 0/0
 13075 ;;		On exit  : 0/0
 13076 ;;		Unchanged: 0/0
 13077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13081 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13082 ;;Total ram usage:        3 bytes
 13083 ;; Hardware stack levels used: 1
 13084 ;; Hardware stack levels required when called: 3
 13085 ;; This function calls:
 13086 ;;		_I2C1_DataTransmit
 13087 ;;		_I2C1_EVENT_STOP
 13088 ;;		_I2C1_RestartEnable
 13089 ;; This function is called by:
 13090 ;;		_I2C1_EventHandler
 13091 ;;		_I2C1_ErrorEventHandler
 13092 ;; This function uses a non-reentrant model
 13093 ;;
 13094                           
 13095     1134                     _I2C1_EVENT_TX:	
 13096                           ;psect for function _I2C1_EVENT_TX
 13097                           
 13098     1134                     i1l5334:	
 13099                           ;incstack = 0
 13100                           ; Regs used in _I2C1_EVENT_TX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13101                           
 13102     1134                     i1l5336:
 13103                           
 13104                           ;mcc_generated_files/i2c_host/src/mssp.c: 308:     if (i2c1Status.writeLength)
 13105     1134  0022               	movlb	2	; select bank2
 13106     1135  084C               	movf	(_i2c1Status^(0+256)+5),w	;volatile
 13107     1136  044D               	iorwf	((_i2c1Status+1)^(0+256)+5),w	;volatile
 13108     1137  1903               	btfsc	3,2
 13109     1138  293A               	goto	u491_21
 13110     1139  293B               	goto	u491_20
 13111     113A                     u491_21:
 13112     113A  2951               	goto	i1l5344
 13113     113B                     u491_20:
 13114     113B                     i1l5338:
 13115                           
 13116                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 310:         i2c1Status.writeLength--;
 13117     113B  3001               	movlw	1
 13118     113C  02CC               	subwf	(_i2c1Status^(0+256)+5),f	;volatile
 13119     113D  3000               	movlw	0
 13120     113E  3BCD               	subwfb	((_i2c1Status+1)^(0+256)+5),f	;volatile
 13121     113F                     i1l5340:
 13122                           
 13123                           ;mcc_generated_files/i2c_host/src/mssp.c: 311:         I2C1_DataTransmit(*i2c1Status.wri
      +                          tePtr++);
 13124     113F  084B               	movf	((low ((_i2c1Status| (0+256)+3))+1))^0,w	;volatile
 13125     1140  00F2               	movwf	??_I2C1_EVENT_TX+1
 13126     1141  084A               	movf	(low ((_i2c1Status| (0+256)+3)))^0,w	;volatile
 13127     1142  00F1               	movwf	??_I2C1_EVENT_TX
 13128     1143  0ACA               	incf	(low ((_i2c1Status| (0+256)+3)))^0,f	;volatile
 13129     1144  1903               	skipnz
 13130     1145  0ACB               	incf	((low ((_i2c1Status| (0+256)+3))+1))^0,f	;volatile
 13131     1146  0871               	movf	??_I2C1_EVENT_TX,w
 13132     1147  0086               	movwf	6
 13133     1148  0872               	movf	??_I2C1_EVENT_TX+1,w
 13134     1149  0087               	movwf	7
 13135     114A  0801               	movf	1,w
 13136     114B  319D  251F  3191   	fcall	_I2C1_DataTransmit
 13137     114E                     i1l5342:
 13138                           
 13139                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:         retEventState = I2C_STATE_TX;
 13140     114E  3003               	movlw	3
 13141     114F  00F3               	movwf	I2C1_EVENT_TX@retEventState
 13142                           
 13143                           ;mcc_generated_files/i2c_host/src/mssp.c: 313:     }
 13144     1150  2961               	goto	i1l5354
 13145     1151                     i1l5344:
 13146                           
 13147                           ;mcc_generated_files/i2c_host/src/mssp.c: 315:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 316:         if (i2c1Status.switchToRead)
 13148     1151  0852               	movf	(_i2c1Status^(0+256)+11),w	;volatile
 13149     1152  1903               	btfsc	3,2
 13150     1153  2955               	goto	u492_21
 13151     1154  2956               	goto	u492_20
 13152     1155                     u492_21:
 13153     1155  295D               	goto	i1l5352
 13154     1156                     u492_20:
 13155     1156                     i1l5346:
 13156                           
 13157                           ;mcc_generated_files/i2c_host/src/mssp.c: 317:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 318:             i2c1Status.switchToRead = 0;
 13158     1156  01D2               	clrf	(_i2c1Status^(0+256)+11)	;volatile
 13159     1157                     i1l5348:
 13160                           
 13161                           ;mcc_generated_files/i2c_host/src/mssp.c: 319:             I2C1_RestartEnable();
 13162     1157  319C  24EE  3191   	fcall	_I2C1_RestartEnable
 13163     115A                     i1l5350:
 13164                           
 13165                           ;mcc_generated_files/i2c_host/src/mssp.c: 320:             retEventState = I2C_STATE_SEN
      +                          D_RD_ADDR;
 13166     115A  01F3               	clrf	I2C1_EVENT_TX@retEventState
 13167     115B  0AF3               	incf	I2C1_EVENT_TX@retEventState,f
 13168                           
 13169                           ;mcc_generated_files/i2c_host/src/mssp.c: 321:         }
 13170     115C  2961               	goto	i1l5354
 13171     115D                     i1l5352:
 13172                           
 13173                           ;mcc_generated_files/i2c_host/src/mssp.c: 323:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 324:             retEventState = I2C1_EVENT_STOP();
 13174     115D  319D  257E  3191   	fcall	_I2C1_EVENT_STOP
 13175     1160  00F3               	movwf	I2C1_EVENT_TX@retEventState
 13176     1161                     i1l5354:
 13177                           
 13178                           ;mcc_generated_files/i2c_host/src/mssp.c: 328:     return retEventState;
 13179     1161  0873               	movf	I2C1_EVENT_TX@retEventState,w
 13180     1162                     i1l227:
 13181     1162  0008               	return
 13182     1163                     __end_of_I2C1_EVENT_TX:
 13183                           
 13184                           	psect	text51
 13185     1CEE                     __ptext51:	
 13186 ;; *************** function _I2C1_RestartEnable *****************
 13187 ;; Defined at:
 13188 ;;		line 415 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13189 ;; Parameters:    Size  Location     Type
 13190 ;;		None
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;		None
 13193 ;; Return value:  Size  Location     Type
 13194 ;;                  1    wreg      void 
 13195 ;; Registers used:
 13196 ;;		None
 13197 ;; Tracked objects:
 13198 ;;		On entry : 0/0
 13199 ;;		On exit  : 0/0
 13200 ;;		Unchanged: 0/0
 13201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13206 ;;Total ram usage:        0 bytes
 13207 ;; Hardware stack levels used: 1
 13208 ;; This function calls:
 13209 ;;		Nothing
 13210 ;; This function is called by:
 13211 ;;		_I2C1_EVENT_TX
 13212 ;; This function uses a non-reentrant model
 13213 ;;
 13214                           
 13215     1CEE                     _I2C1_RestartEnable:	
 13216                           ;psect for function _I2C1_RestartEnable
 13217                           
 13218     1CEE                     i1l5180:	
 13219                           ;incstack = 0
 13220                           ; Regs used in _I2C1_RestartEnable: []
 13221                           
 13222                           
 13223                           ;mcc_generated_files/i2c_host/src/mssp.c: 417:     SSP1CON2bits.RSEN = 1;
 13224     1CEE  0024               	movlb	4	; select bank4
 13225     1CEF  1496               	bsf	22,1	;volatile
 13226     1CF0                     i1l262:
 13227     1CF0  0008               	return
 13228     1CF1                     __end_of_I2C1_RestartEnable:
 13229                           
 13230                           	psect	text52
 13231     1D1F                     __ptext52:	
 13232 ;; *************** function _I2C1_DataTransmit *****************
 13233 ;; Defined at:
 13234 ;;		line 399 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13235 ;; Parameters:    Size  Location     Type
 13236 ;;  data            1    wreg     unsigned char 
 13237 ;; Auto vars:     Size  Location     Type
 13238 ;;  data            1    0[COMMON] unsigned char 
 13239 ;; Return value:  Size  Location     Type
 13240 ;;                  1    wreg      void 
 13241 ;; Registers used:
 13242 ;;		wreg
 13243 ;; Tracked objects:
 13244 ;;		On entry : 0/0
 13245 ;;		On exit  : 0/0
 13246 ;;		Unchanged: 0/0
 13247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13251 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13252 ;;Total ram usage:        1 bytes
 13253 ;; Hardware stack levels used: 1
 13254 ;; This function calls:
 13255 ;;		Nothing
 13256 ;; This function is called by:
 13257 ;;		_I2C1_EVENT_SEND_RD_ADDR
 13258 ;;		_I2C1_EVENT_SEND_WR_ADDR
 13259 ;;		_I2C1_EVENT_TX
 13260 ;; This function uses a non-reentrant model
 13261 ;;
 13262                           
 13263     1D1F                     _I2C1_DataTransmit:	
 13264                           ;psect for function _I2C1_DataTransmit
 13265                           
 13266                           
 13267                           ;incstack = 0
 13268                           ; Regs used in _I2C1_DataTransmit: [wreg]
 13269                           ;I2C1_DataTransmit@data stored from wreg
 13270     1D1F  00F0               	movwf	I2C1_DataTransmit@data
 13271     1D20                     i1l5178:
 13272                           
 13273                           ;mcc_generated_files/i2c_host/src/mssp.c: 399: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/mssp.c: 400: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 401:     SSP1BUF = data;
 13274     1D20  0870               	movf	I2C1_DataTransmit@data,w
 13275     1D21  0024               	movlb	4	; select bank4
 13276     1D22  0091               	movwf	17	;volatile
 13277     1D23                     i1l253:
 13278     1D23  0008               	return
 13279     1D24                     __end_of_I2C1_DataTransmit:
 13280                           
 13281                           	psect	text53
 13282     1CEB                     __ptext53:	
 13283 ;; *************** function _I2C1_RestartDisable *****************
 13284 ;; Defined at:
 13285 ;;		line 420 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13286 ;; Parameters:    Size  Location     Type
 13287 ;;		None
 13288 ;; Auto vars:     Size  Location     Type
 13289 ;;		None
 13290 ;; Return value:  Size  Location     Type
 13291 ;;                  1    wreg      void 
 13292 ;; Registers used:
 13293 ;;		None
 13294 ;; Tracked objects:
 13295 ;;		On entry : 0/0
 13296 ;;		On exit  : 0/0
 13297 ;;		Unchanged: 0/0
 13298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13303 ;;Total ram usage:        0 bytes
 13304 ;; Hardware stack levels used: 1
 13305 ;; This function calls:
 13306 ;;		Nothing
 13307 ;; This function is called by:
 13308 ;;		_I2C1_EVENT_RX
 13309 ;; This function uses a non-reentrant model
 13310 ;;
 13311                           
 13312     1CEB                     _I2C1_RestartDisable:	
 13313                           ;psect for function _I2C1_RestartDisable
 13314                           
 13315     1CEB                     i1l5198:	
 13316                           ;incstack = 0
 13317                           ; Regs used in _I2C1_RestartDisable: []
 13318                           
 13319                           
 13320                           ;mcc_generated_files/i2c_host/src/mssp.c: 422:     SSP1CON2bits.RSEN = 0;
 13321     1CEB  0024               	movlb	4	; select bank4
 13322     1CEC  1096               	bcf	22,1	;volatile
 13323     1CED                     i1l265:
 13324     1CED  0008               	return
 13325     1CEE                     __end_of_I2C1_RestartDisable:
 13326                           
 13327                           	psect	text54
 13328     1CE8                     __ptext54:	
 13329 ;; *************** function _I2C1_ReceiveEnable *****************
 13330 ;; Defined at:
 13331 ;;		line 410 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13332 ;; Parameters:    Size  Location     Type
 13333 ;;		None
 13334 ;; Auto vars:     Size  Location     Type
 13335 ;;		None
 13336 ;; Return value:  Size  Location     Type
 13337 ;;                  1    wreg      void 
 13338 ;; Registers used:
 13339 ;;		None
 13340 ;; Tracked objects:
 13341 ;;		On entry : 0/0
 13342 ;;		On exit  : 0/0
 13343 ;;		Unchanged: 0/0
 13344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;Total ram usage:        0 bytes
 13350 ;; Hardware stack levels used: 1
 13351 ;; This function calls:
 13352 ;;		Nothing
 13353 ;; This function is called by:
 13354 ;;		_I2C1_EVENT_RX
 13355 ;; This function uses a non-reentrant model
 13356 ;;
 13357                           
 13358     1CE8                     _I2C1_ReceiveEnable:	
 13359                           ;psect for function _I2C1_ReceiveEnable
 13360                           
 13361     1CE8                     i1l5202:	
 13362                           ;incstack = 0
 13363                           ; Regs used in _I2C1_ReceiveEnable: []
 13364                           
 13365                           
 13366                           ;mcc_generated_files/i2c_host/src/mssp.c: 412:     SSP1CON2bits.RCEN = 1;
 13367     1CE8  0024               	movlb	4	; select bank4
 13368     1CE9  1596               	bsf	22,3	;volatile
 13369     1CEA                     i1l259:
 13370     1CEA  0008               	return
 13371     1CEB                     __end_of_I2C1_ReceiveEnable:
 13372                           
 13373                           	psect	text55
 13374     1D0B                     __ptext55:	
 13375 ;; *************** function _I2C1_NackSend *****************
 13376 ;; Defined at:
 13377 ;;		line 441 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13378 ;; Parameters:    Size  Location     Type
 13379 ;;		None
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;		None
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  1    wreg      void 
 13384 ;; Registers used:
 13385 ;;		None
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 0/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;Total ram usage:        0 bytes
 13396 ;; Hardware stack levels used: 1
 13397 ;; This function calls:
 13398 ;;		Nothing
 13399 ;; This function is called by:
 13400 ;;		_I2C1_EVENT_RX
 13401 ;; This function uses a non-reentrant model
 13402 ;;
 13403                           
 13404     1D0B                     _I2C1_NackSend:	
 13405                           ;psect for function _I2C1_NackSend
 13406                           
 13407     1D0B                     i1l5200:	
 13408                           ;incstack = 0
 13409                           ; Regs used in _I2C1_NackSend: []
 13410                           
 13411                           
 13412                           ;mcc_generated_files/i2c_host/src/mssp.c: 443:     SSP1CON2bits.ACKDT = 1;
 13413     1D0B  0024               	movlb	4	; select bank4
 13414     1D0C  1696               	bsf	22,5	;volatile
 13415                           
 13416                           ;mcc_generated_files/i2c_host/src/mssp.c: 444:     SSP1CON2bits.ACKEN = 1;
 13417     1D0D  1616               	bsf	22,4	;volatile
 13418     1D0E                     i1l277:
 13419     1D0E  0008               	return
 13420     1D0F                     __end_of_I2C1_NackSend:
 13421                           
 13422                           	psect	text56
 13423     1D07                     __ptext56:	
 13424 ;; *************** function _I2C1_IsRxBufFull *****************
 13425 ;; Defined at:
 13426 ;;		line 462 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13427 ;; Parameters:    Size  Location     Type
 13428 ;;		None
 13429 ;; Auto vars:     Size  Location     Type
 13430 ;;		None
 13431 ;; Return value:  Size  Location     Type
 13432 ;;                  1    wreg      _Bool 
 13433 ;; Registers used:
 13434 ;;		wreg, status,2, status,0
 13435 ;; Tracked objects:
 13436 ;;		On entry : 0/0
 13437 ;;		On exit  : 0/0
 13438 ;;		Unchanged: 0/0
 13439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13444 ;;Total ram usage:        0 bytes
 13445 ;; Hardware stack levels used: 1
 13446 ;; This function calls:
 13447 ;;		Nothing
 13448 ;; This function is called by:
 13449 ;;		_I2C1_EVENT_RX
 13450 ;; This function uses a non-reentrant model
 13451 ;;
 13452                           
 13453     1D07                     _I2C1_IsRxBufFull:	
 13454                           ;psect for function _I2C1_IsRxBufFull
 13455                           
 13456     1D07                     i1l5188:	
 13457                           ;incstack = 0
 13458                           ; Regs used in _I2C1_IsRxBufFull: [wreg+status,2+status,0]
 13459                           
 13460                           
 13461                           ;mcc_generated_files/i2c_host/src/mssp.c: 464:     return SSP1STATbits.BF;
 13462     1D07  0024               	movlb	4	; select bank4
 13463     1D08  0814               	movf	20,w	;volatile
 13464     1D09  3901               	andlw	1
 13465     1D0A                     i1l289:
 13466     1D0A  0008               	return
 13467     1D0B                     __end_of_I2C1_IsRxBufFull:
 13468                           
 13469                           	psect	text57
 13470     1CE5                     __ptext57:	
 13471 ;; *************** function _I2C1_DataReceive *****************
 13472 ;; Defined at:
 13473 ;;		line 394 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13474 ;; Parameters:    Size  Location     Type
 13475 ;;		None
 13476 ;; Auto vars:     Size  Location     Type
 13477 ;;		None
 13478 ;; Return value:  Size  Location     Type
 13479 ;;                  1    wreg      unsigned char 
 13480 ;; Registers used:
 13481 ;;		wreg
 13482 ;; Tracked objects:
 13483 ;;		On entry : 0/0
 13484 ;;		On exit  : 0/0
 13485 ;;		Unchanged: 0/0
 13486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13491 ;;Total ram usage:        0 bytes
 13492 ;; Hardware stack levels used: 1
 13493 ;; This function calls:
 13494 ;;		Nothing
 13495 ;; This function is called by:
 13496 ;;		_I2C1_EVENT_RX
 13497 ;; This function uses a non-reentrant model
 13498 ;;
 13499                           
 13500     1CE5                     _I2C1_DataReceive:	
 13501                           ;psect for function _I2C1_DataReceive
 13502                           
 13503     1CE5                     i1l5192:	
 13504                           ;incstack = 0
 13505                           ; Regs used in _I2C1_DataReceive: [wreg]
 13506                           
 13507                           
 13508                           ;mcc_generated_files/i2c_host/src/mssp.c: 396:     return SSP1BUF;
 13509     1CE5  0024               	movlb	4	; select bank4
 13510     1CE6  0811               	movf	17,w	;volatile
 13511     1CE7                     i1l250:
 13512     1CE7  0008               	return
 13513     1CE8                     __end_of_I2C1_DataReceive:
 13514                           
 13515                           	psect	text58
 13516     1D03                     __ptext58:	
 13517 ;; *************** function _I2C1_AckSend *****************
 13518 ;; Defined at:
 13519 ;;		line 435 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;		None
 13522 ;; Auto vars:     Size  Location     Type
 13523 ;;		None
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  1    wreg      void 
 13526 ;; Registers used:
 13527 ;;		None
 13528 ;; Tracked objects:
 13529 ;;		On entry : 0/0
 13530 ;;		On exit  : 0/0
 13531 ;;		Unchanged: 0/0
 13532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13537 ;;Total ram usage:        0 bytes
 13538 ;; Hardware stack levels used: 1
 13539 ;; This function calls:
 13540 ;;		Nothing
 13541 ;; This function is called by:
 13542 ;;		_I2C1_EVENT_RX
 13543 ;; This function uses a non-reentrant model
 13544 ;;
 13545                           
 13546     1D03                     _I2C1_AckSend:	
 13547                           ;psect for function _I2C1_AckSend
 13548                           
 13549     1D03                     i1l5196:	
 13550                           ;incstack = 0
 13551                           ; Regs used in _I2C1_AckSend: []
 13552                           
 13553                           
 13554                           ;mcc_generated_files/i2c_host/src/mssp.c: 437:     SSP1CON2bits.ACKDT = 0;
 13555     1D03  0024               	movlb	4	; select bank4
 13556     1D04  1296               	bcf	22,5	;volatile
 13557                           
 13558                           ;mcc_generated_files/i2c_host/src/mssp.c: 438:     SSP1CON2bits.ACKEN = 1;
 13559     1D05  1616               	bsf	22,4	;volatile
 13560     1D06                     i1l274:
 13561     1D06  0008               	return
 13562     1D07                     __end_of_I2C1_AckSend:
 13563                           
 13564                           	psect	text59
 13565     1CE2                     __ptext59:	
 13566 ;; *************** function _I2C1_StopSend *****************
 13567 ;; Defined at:
 13568 ;;		line 430 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13569 ;; Parameters:    Size  Location     Type
 13570 ;;		None
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;		None
 13573 ;; Return value:  Size  Location     Type
 13574 ;;                  1    wreg      void 
 13575 ;; Registers used:
 13576 ;;		None
 13577 ;; Tracked objects:
 13578 ;;		On entry : 0/0
 13579 ;;		On exit  : 0/0
 13580 ;;		Unchanged: 0/0
 13581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13586 ;;Total ram usage:        0 bytes
 13587 ;; Hardware stack levels used: 1
 13588 ;; This function calls:
 13589 ;;		Nothing
 13590 ;; This function is called by:
 13591 ;;		_I2C1_EVENT_STOP
 13592 ;; This function uses a non-reentrant model
 13593 ;;
 13594                           
 13595     1CE2                     _I2C1_StopSend:	
 13596                           ;psect for function _I2C1_StopSend
 13597                           
 13598     1CE2                     i1l5142:	
 13599                           ;incstack = 0
 13600                           ; Regs used in _I2C1_StopSend: []
 13601                           
 13602                           
 13603                           ;mcc_generated_files/i2c_host/src/mssp.c: 432:     SSP1CON2bits.PEN = 1;
 13604     1CE2  0024               	movlb	4	; select bank4
 13605     1CE3  1516               	bsf	22,2	;volatile
 13606     1CE4                     i1l271:
 13607     1CE4  0008               	return
 13608     1CE5                     __end_of_I2C1_StopSend:
 13609                           
 13610                           	psect	text60
 13611     1EA5                     __ptext60:	
 13612 ;; *************** function _I2C1_Close *****************
 13613 ;; Defined at:
 13614 ;;		line 244 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13615 ;; Parameters:    Size  Location     Type
 13616 ;;		None
 13617 ;; Auto vars:     Size  Location     Type
 13618 ;;		None
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  1    wreg      void 
 13621 ;; Registers used:
 13622 ;;		status,2, status,0, pclath, cstack
 13623 ;; Tracked objects:
 13624 ;;		On entry : 0/0
 13625 ;;		On exit  : 0/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13632 ;;Total ram usage:        0 bytes
 13633 ;; Hardware stack levels used: 1
 13634 ;; Hardware stack levels required when called: 1
 13635 ;; This function calls:
 13636 ;;		_I2C1_ErrorInterruptClear
 13637 ;;		_I2C1_InterruptClear
 13638 ;;		_I2C1_StatusFlagsClear
 13639 ;; This function is called by:
 13640 ;;		_I2C1_EVENT_STOP
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644     1EA5                     _I2C1_Close:	
 13645                           ;psect for function _I2C1_Close
 13646                           
 13647     1EA5                     i1l5132:	
 13648                           ;incstack = 0
 13649                           ; Regs used in _I2C1_Close: [status,2+status,0+pclath+cstack]
 13650                           
 13651                           
 13652                           ;mcc_generated_files/i2c_host/src/mssp.c: 246:     i2c1Status.busy = 0;
 13653     1EA5  0022               	movlb	2	; select bank2
 13654     1EA6  01C7               	clrf	_i2c1Status^(0+256)	;volatile
 13655     1EA7                     i1l5134:
 13656                           
 13657                           ;mcc_generated_files/i2c_host/src/mssp.c: 247:     i2c1Status.address = 0xFF;
 13658     1EA7  3000               	movlw	0
 13659     1EA8  00C9               	movwf	((_i2c1Status+1)^(0+256)+1)	;volatile
 13660     1EA9  30FF               	movlw	255
 13661     1EAA  00C8               	movwf	(_i2c1Status^(0+256)+1)	;volatile
 13662                           
 13663                           ;mcc_generated_files/i2c_host/src/mssp.c: 248:     i2c1Status.writePtr = ((void*)0);
 13664     1EAB  01CA               	clrf	(low ((_i2c1Status| (0+256)+3)))^0	;volatile
 13665     1EAC  01CB               	clrf	((low ((_i2c1Status| (0+256)+3))+1))^0	;volatile
 13666                           
 13667                           ;mcc_generated_files/i2c_host/src/mssp.c: 249:     i2c1Status.readPtr = ((void*)0);
 13668     1EAD  01CE               	clrf	(low ((_i2c1Status| (0+256)+7)))^0	;volatile
 13669     1EAE  01CF               	clrf	((low ((_i2c1Status| (0+256)+7))+1))^0	;volatile
 13670                           
 13671                           ;mcc_generated_files/i2c_host/src/mssp.c: 250:     i2c1Status.state = I2C_STATE_IDLE;
 13672     1EAF  01D4               	clrf	(_i2c1Status^(0+256)+13)	;volatile
 13673     1EB0                     i1l5136:
 13674                           
 13675                           ;mcc_generated_files/i2c_host/src/mssp.c: 251:     I2C1_InterruptClear();
 13676     1EB0  319C  24DF  319E   	fcall	_I2C1_InterruptClear
 13677     1EB3                     i1l5138:
 13678                           
 13679                           ;mcc_generated_files/i2c_host/src/mssp.c: 252:     I2C1_ErrorInterruptClear();
 13680     1EB3  319C  24DC  319E   	fcall	_I2C1_ErrorInterruptClear
 13681     1EB6                     i1l5140:
 13682                           
 13683                           ;mcc_generated_files/i2c_host/src/mssp.c: 253:     I2C1_StatusFlagsClear();
 13684     1EB6  319C  24FF  319E   	fcall	_I2C1_StatusFlagsClear
 13685     1EB9                     i1l199:
 13686     1EB9  0008               	return
 13687     1EBA                     __end_of_I2C1_Close:
 13688                           
 13689                           	psect	text61
 13690     1CFF                     __ptext61:	
 13691 ;; *************** function _I2C1_StatusFlagsClear *****************
 13692 ;; Defined at:
 13693 ;;		line 489 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;		None
 13696 ;; Auto vars:     Size  Location     Type
 13697 ;;		None
 13698 ;; Return value:  Size  Location     Type
 13699 ;;                  1    wreg      void 
 13700 ;; Registers used:
 13701 ;;		None
 13702 ;; Tracked objects:
 13703 ;;		On entry : 0/0
 13704 ;;		On exit  : 0/0
 13705 ;;		Unchanged: 0/0
 13706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13711 ;;Total ram usage:        0 bytes
 13712 ;; Hardware stack levels used: 1
 13713 ;; This function calls:
 13714 ;;		Nothing
 13715 ;; This function is called by:
 13716 ;;		_I2C1_Close
 13717 ;; This function uses a non-reentrant model
 13718 ;;
 13719                           
 13720     1CFF                     _I2C1_StatusFlagsClear:	
 13721                           ;psect for function _I2C1_StatusFlagsClear
 13722                           
 13723     1CFF                     i1l5028:	
 13724                           ;incstack = 0
 13725                           ; Regs used in _I2C1_StatusFlagsClear: []
 13726                           
 13727                           
 13728                           ;mcc_generated_files/i2c_host/src/mssp.c: 491:     SSP1CON1bits.WCOL = 0;
 13729     1CFF  0024               	movlb	4	; select bank4
 13730     1D00  1395               	bcf	21,7	;volatile
 13731                           
 13732                           ;mcc_generated_files/i2c_host/src/mssp.c: 492:     SSP1CON1bits.SSPOV = 0;
 13733     1D01  1315               	bcf	21,6	;volatile
 13734     1D02                     i1l304:
 13735     1D02  0008               	return
 13736     1D03                     __end_of_I2C1_StatusFlagsClear:
 13737                           
 13738                           	psect	text62
 13739     1CDF                     __ptext62:	
 13740 ;; *************** function _I2C1_InterruptClear *****************
 13741 ;; Defined at:
 13742 ;;		line 479 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13743 ;; Parameters:    Size  Location     Type
 13744 ;;		None
 13745 ;; Auto vars:     Size  Location     Type
 13746 ;;		None
 13747 ;; Return value:  Size  Location     Type
 13748 ;;                  1    wreg      void 
 13749 ;; Registers used:
 13750 ;;		None
 13751 ;; Tracked objects:
 13752 ;;		On entry : 0/0
 13753 ;;		On exit  : 0/0
 13754 ;;		Unchanged: 0/0
 13755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13760 ;;Total ram usage:        0 bytes
 13761 ;; Hardware stack levels used: 1
 13762 ;; This function calls:
 13763 ;;		Nothing
 13764 ;; This function is called by:
 13765 ;;		_I2C1_Close
 13766 ;;		_I2C1_EventHandler
 13767 ;; This function uses a non-reentrant model
 13768 ;;
 13769                           
 13770     1CDF                     _I2C1_InterruptClear:	
 13771                           ;psect for function _I2C1_InterruptClear
 13772                           
 13773     1CDF                     i1l5024:	
 13774                           ;incstack = 0
 13775                           ; Regs used in _I2C1_InterruptClear: []
 13776                           
 13777                           
 13778                           ;mcc_generated_files/i2c_host/src/mssp.c: 481:     PIR1bits.SSP1IF = 0;
 13779     1CDF  0020               	movlb	0	; select bank0
 13780     1CE0  1190               	bcf	16,3	;volatile
 13781     1CE1                     i1l298:
 13782     1CE1  0008               	return
 13783     1CE2                     __end_of_I2C1_InterruptClear:
 13784                           
 13785                           	psect	text63
 13786     1CDC                     __ptext63:	
 13787 ;; *************** function _I2C1_ErrorInterruptClear *****************
 13788 ;; Defined at:
 13789 ;;		line 484 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13790 ;; Parameters:    Size  Location     Type
 13791 ;;		None
 13792 ;; Auto vars:     Size  Location     Type
 13793 ;;		None
 13794 ;; Return value:  Size  Location     Type
 13795 ;;                  1    wreg      void 
 13796 ;; Registers used:
 13797 ;;		None
 13798 ;; Tracked objects:
 13799 ;;		On entry : 0/0
 13800 ;;		On exit  : 0/0
 13801 ;;		Unchanged: 0/0
 13802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13807 ;;Total ram usage:        0 bytes
 13808 ;; Hardware stack levels used: 1
 13809 ;; This function calls:
 13810 ;;		Nothing
 13811 ;; This function is called by:
 13812 ;;		_I2C1_Close
 13813 ;;		_I2C1_ErrorEventHandler
 13814 ;; This function uses a non-reentrant model
 13815 ;;
 13816                           
 13817     1CDC                     _I2C1_ErrorInterruptClear:	
 13818                           ;psect for function _I2C1_ErrorInterruptClear
 13819                           
 13820     1CDC                     i1l5026:	
 13821                           ;incstack = 0
 13822                           ; Regs used in _I2C1_ErrorInterruptClear: []
 13823                           
 13824                           
 13825                           ;mcc_generated_files/i2c_host/src/mssp.c: 486:     PIR2bits.BCL1IF = 0;
 13826     1CDC  0020               	movlb	0	; select bank0
 13827     1CDD  1191               	bcf	17,3	;volatile
 13828     1CDE                     i1l301:
 13829     1CDE  0008               	return
 13830     1CDF                     __end_of_I2C1_ErrorInterruptClear:
 13831                           
 13832                           	psect	text64
 13833     1CFB                     __ptext64:	
 13834 ;; *************** function _I2C1_BusReset *****************
 13835 ;; Defined at:
 13836 ;;		line 404 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13837 ;; Parameters:    Size  Location     Type
 13838 ;;		None
 13839 ;; Auto vars:     Size  Location     Type
 13840 ;;		None
 13841 ;; Return value:  Size  Location     Type
 13842 ;;                  1    wreg      void 
 13843 ;; Registers used:
 13844 ;;		None
 13845 ;; Tracked objects:
 13846 ;;		On entry : 0/0
 13847 ;;		On exit  : 0/0
 13848 ;;		Unchanged: 0/0
 13849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13854 ;;Total ram usage:        0 bytes
 13855 ;; Hardware stack levels used: 1
 13856 ;; This function calls:
 13857 ;;		Nothing
 13858 ;; This function is called by:
 13859 ;;		_I2C1_EVENT_RESET
 13860 ;; This function uses a non-reentrant model
 13861 ;;
 13862                           
 13863     1CFB                     _I2C1_BusReset:	
 13864                           ;psect for function _I2C1_BusReset
 13865                           
 13866     1CFB                     i1l5144:	
 13867                           ;incstack = 0
 13868                           ; Regs used in _I2C1_BusReset: []
 13869                           
 13870                           
 13871                           ;mcc_generated_files/i2c_host/src/mssp.c: 406:     SSP1CON1bits.SSPEN = 0;
 13872     1CFB  0024               	movlb	4	; select bank4
 13873     1CFC  1295               	bcf	21,5	;volatile
 13874                           
 13875                           ;mcc_generated_files/i2c_host/src/mssp.c: 407:     SSP1CON1bits.SSPEN = 1;
 13876     1CFD  1695               	bsf	21,5	;volatile
 13877     1CFE                     i1l256:
 13878     1CFE  0008               	return
 13879     1CFF                     __end_of_I2C1_BusReset:
 13880                           
 13881                           	psect	text65
 13882     1CD8                     __ptext65:	
 13883 ;; *************** function _I2C1_DefaultCallback *****************
 13884 ;; Defined at:
 13885 ;;		line 281 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13886 ;; Parameters:    Size  Location     Type
 13887 ;;		None
 13888 ;; Auto vars:     Size  Location     Type
 13889 ;;		None
 13890 ;; Return value:  Size  Location     Type
 13891 ;;                  1    wreg      void 
 13892 ;; Registers used:
 13893 ;;		None
 13894 ;; Tracked objects:
 13895 ;;		On entry : 0/0
 13896 ;;		On exit  : 0/0
 13897 ;;		Unchanged: 0/0
 13898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13903 ;;Total ram usage:        0 bytes
 13904 ;; Hardware stack levels used: 1
 13905 ;; This function calls:
 13906 ;;		Nothing
 13907 ;; This function is called by:
 13908 ;;		_I2C1_Initialize
 13909 ;;		_I2C1_Deinitialize
 13910 ;;		_I2C1_ErrorEventHandler
 13911 ;; This function uses a non-reentrant model
 13912 ;;
 13913                           
 13914     1CD8                     _I2C1_DefaultCallback:	
 13915                           ;psect for function _I2C1_DefaultCallback
 13916                           
 13917     1CD8                     i1l211:	
 13918                           ;incstack = 0
 13919                           ; Regs used in _I2C1_DefaultCallback: []
 13920                           
 13921     1CD8  0008               	return
 13922     1CD9                     __end_of_I2C1_DefaultCallback:
 13923                           
 13924                           	psect	text66
 13925     13C2                     __ptext66:	
 13926 ;; *************** function _EUSART_ReceiveISR *****************
 13927 ;; Defined at:
 13928 ;;		line 269 in file "mcc_generated_files/uart/src/eusart.c"
 13929 ;; Parameters:    Size  Location     Type
 13930 ;;		None
 13931 ;; Auto vars:     Size  Location     Type
 13932 ;;  tempRxHead      1   37[BANK2 ] unsigned char 
 13933 ;;  regValue        1   36[BANK2 ] unsigned char 
 13934 ;; Return value:  Size  Location     Type
 13935 ;;                  1    wreg      void 
 13936 ;; Registers used:
 13937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13938 ;; Tracked objects:
 13939 ;;		On entry : 0/0
 13940 ;;		On exit  : 0/0
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13944 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 13945 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 13947 ;;Total ram usage:        6 bytes
 13948 ;; Hardware stack levels used: 1
 13949 ;; Hardware stack levels required when called: 9
 13950 ;; This function calls:
 13951 ;;		NULL
 13952 ;;		_EUSART_DefaultFramingErrorCallback
 13953 ;;		_EUSART_DefaultOverrunErrorCallback
 13954 ;;		_UART_Custom_ISR
 13955 ;; This function is called by:
 13956 ;;		_EUSART_Initialize
 13957 ;;		_INTERRUPT_InterruptManager
 13958 ;; This function uses a non-reentrant model
 13959 ;;
 13960                           
 13961     13C2                     _EUSART_ReceiveISR:	
 13962                           ;psect for function _EUSART_ReceiveISR
 13963                           
 13964     13C2                     i1l5760:	
 13965                           ;incstack = 0
 13966                           ; Regs used in _EUSART_ReceiveISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13967                           
 13968                           
 13969                           ;mcc_generated_files/uart/src/eusart.c: 271:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 272:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 274: 
      +                              PIR1bits.RCIF = 0;
 13970     13C2  0020               	movlb	0	; select bank0
 13971     13C3  1290               	bcf	16,5	;volatile
 13972     13C4                     i1l5762:
 13973                           
 13974                           ;mcc_generated_files/uart/src/eusart.c: 277:     eusartRxStatusBuffer[eusartRxHead].stat
      +                          us = 0;
 13975     13C4  0022               	movlb	2	; select bank2
 13976     13C5  086A               	movf	_eusartRxHead^(0+256),w	;volatile
 13977     13C6  00C0               	movwf	??_EUSART_ReceiveISR^(0+256)
 13978     13C7  01C1               	clrf	(??_EUSART_ReceiveISR^(0+256)+1)
 13979     13C8  35C0               	lslf	??_EUSART_ReceiveISR^(0+256),f
 13980     13C9  0DC1               	rlf	(??_EUSART_ReceiveISR^(0+256)+1),f
 13981     13CA  3070               	movlw	112
 13982     13CB  00C2               	movwf	(??_EUSART_ReceiveISR+2)^(0+256)
 13983     13CC  3023               	movlw	35
 13984     13CD  00C3               	movwf	((??_EUSART_ReceiveISR+2)^(0+256)+1)
 13985     13CE  0840               	movf	??_EUSART_ReceiveISR^(0+256),w
 13986     13CF  0742               	addwf	(??_EUSART_ReceiveISR+2)^(0+256),w
 13987     13D0  0086               	movwf	6
 13988     13D1  0841               	movf	(??_EUSART_ReceiveISR+1)^(0+256),w
 13989     13D2  3D43               	addwfc	(??_EUSART_ReceiveISR+3)^(0+256),w
 13990     13D3  0087               	movwf	7
 13991     13D4  3000               	movlw	0
 13992     13D5  3FC0               	movwi [0]fsr1
 13993     13D6  3FC1               	movwi [1]fsr1
 13994     13D7                     i1l5764:
 13995                           
 13996                           ;mcc_generated_files/uart/src/eusart.c: 279:     if(RC1STAbits.OERR)
 13997     13D7  0023               	movlb	3	; select bank3
 13998     13D8  1C9D               	btfss	29,1	;volatile
 13999     13D9  2BDB               	goto	u512_21
 14000     13DA  2BDC               	goto	u512_20
 14001     13DB                     u512_21:
 14002     13DB  2BF8               	goto	i1l5772
 14003     13DC                     u512_20:
 14004     13DC                     i1l5766:
 14005                           
 14006                           ;mcc_generated_files/uart/src/eusart.c: 280:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 281:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 14007     13DC  0022               	movlb	2	; select bank2
 14008     13DD  086A               	movf	_eusartRxHead^(0+256),w	;volatile
 14009     13DE  00C0               	movwf	??_EUSART_ReceiveISR^(0+256)
 14010     13DF  01C1               	clrf	(??_EUSART_ReceiveISR^(0+256)+1)
 14011     13E0  35C0               	lslf	??_EUSART_ReceiveISR^(0+256),f
 14012     13E1  0DC1               	rlf	(??_EUSART_ReceiveISR^(0+256)+1),f
 14013     13E2  3070               	movlw	112
 14014     13E3  00C2               	movwf	(??_EUSART_ReceiveISR+2)^(0+256)
 14015     13E4  3023               	movlw	35
 14016     13E5  00C3               	movwf	((??_EUSART_ReceiveISR+2)^(0+256)+1)
 14017     13E6  0840               	movf	??_EUSART_ReceiveISR^(0+256),w
 14018     13E7  0742               	addwf	(??_EUSART_ReceiveISR+2)^(0+256),w
 14019     13E8  0086               	movwf	6
 14020     13E9  0841               	movf	(??_EUSART_ReceiveISR+1)^(0+256),w
 14021     13EA  3D43               	addwfc	(??_EUSART_ReceiveISR+3)^(0+256),w
 14022     13EB  0087               	movwf	7
 14023     13EC  1501               	bsf	1,2
 14024     13ED                     i1l5768:
 14025                           
 14026                           ;mcc_generated_files/uart/src/eusart.c: 282:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 14027     13ED  0859               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 14028     13EE  045A               	iorwf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 14029     13EF  1903               	btfsc	3,2
 14030     13F0  2BF2               	goto	u513_21
 14031     13F1  2BF3               	goto	u513_20
 14032     13F2                     u513_21:
 14033     13F2  2BF8               	goto	i1l5772
 14034     13F3                     u513_20:
 14035     13F3                     i1l5770:
 14036                           
 14037                           ;mcc_generated_files/uart/src/eusart.c: 283:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 284:             EUSART_OverrunErrorHandler();
 14038     13F3  085A               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 14039     13F4  008A               	movwf	10
 14040     13F5  0859               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 14041     13F6  000A               	callw
 14042     13F7  3193               	pagesel	$
 14043     13F8                     i1l5772:
 14044                           
 14045                           ;mcc_generated_files/uart/src/eusart.c: 287:     if(RC1STAbits.FERR)
 14046     13F8  0023               	movlb	3	; select bank3
 14047     13F9  1D1D               	btfss	29,2	;volatile
 14048     13FA  2BFC               	goto	u514_21
 14049     13FB  2BFD               	goto	u514_20
 14050     13FC                     u514_21:
 14051     13FC  2C19               	goto	i1l5780
 14052     13FD                     u514_20:
 14053     13FD                     i1l5774:
 14054                           
 14055                           ;mcc_generated_files/uart/src/eusart.c: 288:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 289:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 14056     13FD  0022               	movlb	2	; select bank2
 14057     13FE  086A               	movf	_eusartRxHead^(0+256),w	;volatile
 14058     13FF  00C0               	movwf	??_EUSART_ReceiveISR^(0+256)
 14059     1400  01C1               	clrf	(??_EUSART_ReceiveISR^(0+256)+1)
 14060     1401  35C0               	lslf	??_EUSART_ReceiveISR^(0+256),f
 14061     1402  0DC1               	rlf	(??_EUSART_ReceiveISR^(0+256)+1),f
 14062     1403  3070               	movlw	112
 14063     1404  00C2               	movwf	(??_EUSART_ReceiveISR+2)^(0+256)
 14064     1405  3023               	movlw	35
 14065     1406  00C3               	movwf	((??_EUSART_ReceiveISR+2)^(0+256)+1)
 14066     1407  0840               	movf	??_EUSART_ReceiveISR^(0+256),w
 14067     1408  0742               	addwf	(??_EUSART_ReceiveISR+2)^(0+256),w
 14068     1409  0086               	movwf	6
 14069     140A  0841               	movf	(??_EUSART_ReceiveISR+1)^(0+256),w
 14070     140B  3D43               	addwfc	(??_EUSART_ReceiveISR+3)^(0+256),w
 14071     140C  0087               	movwf	7
 14072     140D  1481               	bsf	1,1
 14073     140E                     i1l5776:
 14074                           
 14075                           ;mcc_generated_files/uart/src/eusart.c: 290:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 14076     140E  085B               	movf	_EUSART_FramingErrorHandler^(0+256),w
 14077     140F  045C               	iorwf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 14078     1410  1903               	btfsc	3,2
 14079     1411  2C13               	goto	u515_21
 14080     1412  2C14               	goto	u515_20
 14081     1413                     u515_21:
 14082     1413  2C19               	goto	i1l5780
 14083     1414                     u515_20:
 14084     1414                     i1l5778:
 14085                           
 14086                           ;mcc_generated_files/uart/src/eusart.c: 291:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 292:             EUSART_FramingErrorHandler();
 14087     1414  085C               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 14088     1415  008A               	movwf	10
 14089     1416  085B               	movf	_EUSART_FramingErrorHandler^(0+256),w
 14090     1417  000A               	callw
 14091     1418  3193               	pagesel	$
 14092     1419                     i1l5780:
 14093                           
 14094                           ;mcc_generated_files/uart/src/eusart.c: 296:     regValue = RC1REG;
 14095     1419  0023               	movlb	3	; select bank3
 14096     141A  0819               	movf	25,w	;volatile
 14097     141B  0022               	movlb	2	; select bank2
 14098     141C  00C4               	movwf	EUSART_ReceiveISR@regValue^(0+256)
 14099     141D                     i1l5782:
 14100                           
 14101                           ;mcc_generated_files/uart/src/eusart.c: 298:     tempRxHead = (eusartRxHead + 1) & ((64)
      +                          -1);
 14102     141D  086A               	movf	_eusartRxHead^(0+256),w	;volatile
 14103     141E  3E01               	addlw	1
 14104     141F  393F               	andlw	63
 14105     1420  00C5               	movwf	EUSART_ReceiveISR@tempRxHead^(0+256)
 14106     1421                     i1l5784:
 14107                           
 14108                           ;mcc_generated_files/uart/src/eusart.c: 299:     if (tempRxHead == eusartRxTail)
 14109     1421  0845               	movf	EUSART_ReceiveISR@tempRxHead^(0+256),w
 14110     1422  0669               	xorwf	_eusartRxTail^(0+256),w	;volatile
 14111     1423  1D03               	skipz
 14112     1424  2C26               	goto	u516_21
 14113     1425  2C27               	goto	u516_20
 14114     1426                     u516_21:
 14115     1426  2C28               	goto	i1l5788
 14116     1427                     u516_20:
 14117     1427  2C35               	goto	i1l5794
 14118     1428                     i1l5788:
 14119                           
 14120                           ;mcc_generated_files/uart/src/eusart.c: 304:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 305:         eusartRxBuffer[eusartRxHead] = regValue;
 14121     1428  086A               	movf	_eusartRxHead^(0+256),w
 14122     1429  3EA0               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 14123     142A  0086               	movwf	6
 14124     142B  3002               	movlw	2	; select bank5/6
 14125     142C  0087               	movwf	7
 14126     142D  0844               	movf	EUSART_ReceiveISR@regValue^(0+256),w
 14127     142E  0081               	movwf	1
 14128     142F                     i1l5790:
 14129                           
 14130                           ;mcc_generated_files/uart/src/eusart.c: 306:   eusartRxHead = tempRxHead;
 14131     142F  0845               	movf	EUSART_ReceiveISR@tempRxHead^(0+256),w
 14132     1430  00EA               	movwf	_eusartRxHead^(0+256)	;volatile
 14133     1431                     i1l5792:
 14134                           
 14135                           ;mcc_generated_files/uart/src/eusart.c: 307:   eusartRxCount++;
 14136     1431  3001               	movlw	1
 14137     1432  00C0               	movwf	??_EUSART_ReceiveISR^(0+256)
 14138     1433  0840               	movf	??_EUSART_ReceiveISR^(0+256),w
 14139     1434  07E8               	addwf	_eusartRxCount^(0+256),f	;volatile
 14140     1435                     i1l5794:
 14141                           
 14142                           ;mcc_generated_files/uart/src/eusart.c: 310:     UART_Custom_ISR(regValue);
 14143     1435  0844               	movf	EUSART_ReceiveISR@regValue^(0+256),w
 14144     1436  3187  2794  3193   	fcall	_UART_Custom_ISR
 14145     1439                     i1l970:
 14146     1439  0008               	return
 14147     143A                     __end_of_EUSART_ReceiveISR:
 14148                           
 14149                           	psect	text67
 14150     0794                     __ptext67:	
 14151 ;; *************** function _UART_Custom_ISR *****************
 14152 ;; Defined at:
 14153 ;;		line 185 in file "main.c"
 14154 ;; Parameters:    Size  Location     Type
 14155 ;;  Rx_Code         1    wreg     unsigned char 
 14156 ;; Auto vars:     Size  Location     Type
 14157 ;;  Rx_Code         1   31[BANK2 ] unsigned char 
 14158 ;;  buffer         16   15[BANK2 ] unsigned char [16]
 14159 ;; Return value:  Size  Location     Type
 14160 ;;                  1    wreg      void 
 14161 ;; Registers used:
 14162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14163 ;; Tracked objects:
 14164 ;;		On entry : 0/0
 14165 ;;		On exit  : 0/0
 14166 ;;		Unchanged: 0/0
 14167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14169 ;;      Locals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0
 14170 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 14171 ;;      Totals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0
 14172 ;;Total ram usage:       19 bytes
 14173 ;; Hardware stack levels used: 1
 14174 ;; Hardware stack levels required when called: 8
 14175 ;; This function calls:
 14176 ;;		_Backlight
 14177 ;;		_LCD_Clear
 14178 ;;		_LCD_Set_Cursor
 14179 ;;		_LCD_Write_String
 14180 ;;		_sprintf
 14181 ;; This function is called by:
 14182 ;;		_EUSART_ReceiveISR
 14183 ;; This function uses a non-reentrant model
 14184 ;;
 14185                           
 14186     0794                     _UART_Custom_ISR:	
 14187                           ;psect for function _UART_Custom_ISR
 14188                           
 14189                           
 14190                           ;incstack = 0
 14191                           ; Regs used in _UART_Custom_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14192                           ;UART_Custom_ISR@Rx_Code stored from wreg
 14193     0794  0022               	movlb	2	; select bank2
 14194     0795  00BF               	movwf	UART_Custom_ISR@Rx_Code^(0+256)
 14195     0796                     i1l5696:
 14196                           
 14197                           ;main.c: 185: void UART_Custom_ISR(uint8_t Rx_Code);main.c: 186: {;main.c: 187:     char
      +                           buffer[16];;main.c: 189:     LCD_Clear();
 14198     0796  319D  2586  3187   	fcall	_LCD_Clear
 14199     0799                     i1l5698:
 14200                           
 14201                           ;main.c: 190:     LCD_Set_Cursor(1, 1);
 14202     0799  01F6               	clrf	LCD_Set_Cursor@COL
 14203     079A  0AF6               	incf	LCD_Set_Cursor@COL,f
 14204     079B  3001               	movlw	1
 14205     079C  3190  20BA  3187   	fcall	_LCD_Set_Cursor
 14206     079F                     i1l5700:
 14207                           
 14208                           ;main.c: 191:     Backlight();
 14209     079F  319D  256E  3187   	fcall	_Backlight
 14210                           
 14211                           ;main.c: 192:     LCD_Write_String(" UART ..");
 14212     07A2  30D7               	movlw	low (STR_1| (0+32768))
 14213     07A3  00F6               	movwf	LCD_Write_String@Str
 14214     07A4  3098               	movlw	high (STR_1| (0+32768))
 14215     07A5  00F7               	movwf	LCD_Write_String@Str+1
 14216     07A6  319F  2764  3187   	fcall	_LCD_Write_String
 14217                           
 14218                           ;main.c: 193:     LCD_Set_Cursor(2, 1);
 14219     07A9  01F6               	clrf	LCD_Set_Cursor@COL
 14220     07AA  0AF6               	incf	LCD_Set_Cursor@COL,f
 14221     07AB  3002               	movlw	2
 14222     07AC  3190  20BA  3187   	fcall	_LCD_Set_Cursor
 14223                           
 14224                           ;main.c: 194:     LCD_Write_String(" .. Interrupt");
 14225     07AF  308F               	movlw	low (STR_2| (0+32768))
 14226     07B0  00F6               	movwf	LCD_Write_String@Str
 14227     07B1  3098               	movlw	high (STR_2| (0+32768))
 14228     07B2  00F7               	movwf	LCD_Write_String@Str+1
 14229     07B3  319F  2764  3187   	fcall	_LCD_Write_String
 14230     07B6                     i1l5702:
 14231                           
 14232                           ;main.c: 195:     _delay((unsigned long)((350)*(4000000/4000.0)));
 14233     07B6  3002               	movlw	2
 14234     07B7  0022               	movlb	2	; select bank2
 14235     07B8  00AE               	movwf	(??_UART_Custom_ISR^(0+256)+1)
 14236     07B9  30C7               	movlw	199
 14237     07BA  00AD               	movwf	??_UART_Custom_ISR^(0+256)
 14238     07BB  3088               	movlw	136
 14239     07BC                     u547_27:
 14240     07BC  0B89               	decfsz	9,f
 14241     07BD  2FBC               	goto	u547_27
 14242     07BE  0BAD               	decfsz	??_UART_Custom_ISR^(0+256),f
 14243     07BF  2FBC               	goto	u547_27
 14244     07C0  0BAE               	decfsz	(??_UART_Custom_ISR^(0+256)+1),f
 14245     07C1  2FBC               	goto	u547_27
 14246     07C2  0000               	nop
 14247     07C3                     i1l5704:
 14248                           
 14249                           ;main.c: 197:     LCD_Clear();
 14250     07C3  319D  2586  3187   	fcall	_LCD_Clear
 14251     07C6                     i1l5706:
 14252                           
 14253                           ;main.c: 198:     LCD_Set_Cursor(1, 1);
 14254     07C6  01F6               	clrf	LCD_Set_Cursor@COL
 14255     07C7  0AF6               	incf	LCD_Set_Cursor@COL,f
 14256     07C8  3001               	movlw	1
 14257     07C9  3190  20BA  3187   	fcall	_LCD_Set_Cursor
 14258     07CC                     i1l5708:
 14259                           
 14260                           ;main.c: 199:     sprintf(buffer, "Sent code: %hhx", Rx_Code);
 14261     07CC  303C               	movlw	low (STR_3| (0+32768))
 14262     07CD  0021               	movlb	1	; select bank1
 14263     07CE  00E9               	movwf	sprintf@fmt^(0+128)
 14264     07CF  3098               	movlw	high (STR_3| (0+32768))
 14265     07D0  00EA               	movwf	(sprintf@fmt^(0+128)+1)
 14266     07D1  0022               	movlb	2	; select bank2
 14267     07D2  083F               	movf	UART_Custom_ISR@Rx_Code^(0+256),w
 14268     07D3  00AD               	movwf	??_UART_Custom_ISR^(0+256)
 14269     07D4  01AE               	clrf	(??_UART_Custom_ISR^(0+256)+1)
 14270     07D5  082D               	movf	??_UART_Custom_ISR^(0+256),w
 14271     07D6  0021               	movlb	1	; select bank1
 14272     07D7  00EB               	movwf	(?_sprintf^(0+128)+2)
 14273     07D8  0022               	movlb	2	; select bank2
 14274     07D9  082E               	movf	(??_UART_Custom_ISR+1)^(0+256),w
 14275     07DA  0021               	movlb	1	; select bank1
 14276     07DB  00EC               	movwf	((?_sprintf+1)^(0+128)+2)
 14277     07DC  302F               	movlw	(low (UART_Custom_ISR@buffer| (0+256)))& (0+255)
 14278     07DD  319F  27E0  3187   	fcall	_sprintf
 14279     07E0                     i1l5710:
 14280                           
 14281                           ;main.c: 200:     LCD_Write_String(buffer);
 14282     07E0  302F               	movlw	low UART_Custom_ISR@buffer
 14283     07E1  00F6               	movwf	LCD_Write_String@Str
 14284     07E2  3001               	movlw	high UART_Custom_ISR@buffer
 14285     07E3  00F7               	movwf	LCD_Write_String@Str+1
 14286     07E4  319F  2764  3187   	fcall	_LCD_Write_String
 14287     07E7                     i1l5712:
 14288                           
 14289                           ;main.c: 201:     _delay((unsigned long)((350)*(4000000/4000.0)));
 14290     07E7  3002               	movlw	2
 14291     07E8  0022               	movlb	2	; select bank2
 14292     07E9  00AE               	movwf	(??_UART_Custom_ISR^(0+256)+1)
 14293     07EA  30C7               	movlw	199
 14294     07EB  00AD               	movwf	??_UART_Custom_ISR^(0+256)
 14295     07EC  3088               	movlw	136
 14296     07ED                     u548_27:
 14297     07ED  0B89               	decfsz	9,f
 14298     07EE  2FED               	goto	u548_27
 14299     07EF  0BAD               	decfsz	??_UART_Custom_ISR^(0+256),f
 14300     07F0  2FED               	goto	u548_27
 14301     07F1  0BAE               	decfsz	(??_UART_Custom_ISR^(0+256)+1),f
 14302     07F2  2FED               	goto	u548_27
 14303     07F3  0000               	nop
 14304     07F4                     i1l1144:
 14305     07F4  0008               	return
 14306     07F5                     __end_of_UART_Custom_ISR:
 14307                           
 14308                           	psect	text68
 14309     1FE0                     __ptext68:	
 14310 ;; *************** function _sprintf *****************
 14311 ;; Defined at:
 14312 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
 14313 ;; Parameters:    Size  Location     Type
 14314 ;;  s               1    wreg     PTR unsigned char 
 14315 ;;		 -> TMR0_Custom_ISR@buffer(16), UART_Custom_ISR@buffer(16), 
 14316 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
 14317 ;;		 -> STR_8(14), STR_6(15), STR_3(16), 
 14318 ;; Auto vars:     Size  Location     Type
 14319 ;;  s               1    0[BANK2 ] PTR unsigned char 
 14320 ;;		 -> TMR0_Custom_ISR@buffer(16), UART_Custom_ISR@buffer(16), 
 14321 ;;  f              11    2[BANK2 ] struct _IO_FILE
 14322 ;;  ret             2    0        int 
 14323 ;;  ap              1    1[BANK2 ] PTR void [1]
 14324 ;;		 -> ?_sprintf(2), 
 14325 ;; Return value:  Size  Location     Type
 14326 ;;                  2   73[BANK1 ] int 
 14327 ;; Registers used:
 14328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14329 ;; Tracked objects:
 14330 ;;		On entry : 0/0
 14331 ;;		On exit  : 0/0
 14332 ;;		Unchanged: 0/0
 14333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14334 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14335 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
 14336 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14337 ;;      Totals:         0       0       7      13       0       0       0       0       0       0       0       0       
      +0       0
 14338 ;;Total ram usage:       20 bytes
 14339 ;; Hardware stack levels used: 1
 14340 ;; Hardware stack levels required when called: 7
 14341 ;; This function calls:
 14342 ;;		_vfprintf
 14343 ;; This function is called by:
 14344 ;;		_UART_Custom_ISR
 14345 ;;		_TMR0_Custom_ISR
 14346 ;; This function uses a non-reentrant model
 14347 ;;
 14348                           
 14349     1FE0                     _sprintf:	
 14350                           ;psect for function _sprintf
 14351                           
 14352                           
 14353                           ;incstack = 0
 14354                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14355                           ;sprintf@s stored from wreg
 14356     1FE0  0022               	movlb	2	; select bank2
 14357     1FE1  00A0               	movwf	sprintf@s^(0+256)
 14358     1FE2                     i1l5244:
 14359     1FE2  30EB               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 14360     1FE3  00A1               	movwf	sprintf@ap^(0+256)
 14361     1FE4  0820               	movf	sprintf@s^(0+256),w
 14362     1FE5  00A2               	movwf	sprintf@f^(0+256)
 14363     1FE6                     i1l5246:
 14364     1FE6  01A4               	clrf	(sprintf@f^(0+256)+2)
 14365     1FE7  01A5               	clrf	((sprintf@f+1)^(0+256)+2)
 14366     1FE8                     i1l5248:
 14367     1FE8  01AB               	clrf	(sprintf@f^(0+256)+9)
 14368     1FE9  01AC               	clrf	((sprintf@f+1)^(0+256)+9)
 14369     1FEA                     i1l5250:
 14370     1FEA  0021               	movlb	1	; select bank1
 14371     1FEB  086A               	movf	(sprintf@fmt+1)^(0+128),w
 14372     1FEC  00E3               	movwf	(vfprintf@fmt+1)^(0+128)
 14373     1FED  0869               	movf	sprintf@fmt^(0+128),w
 14374     1FEE  00E2               	movwf	vfprintf@fmt^(0+128)
 14375     1FEF  3021               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
 14376     1FF0  00E4               	movwf	vfprintf@ap^(0+128)
 14377     1FF1  3022               	movlw	(low (sprintf@f| (0+256)))& (0+255)
 14378     1FF2  319F  27C0  319F   	fcall	_vfprintf
 14379     1FF5                     i1l5252:
 14380     1FF5  0022               	movlb	2	; select bank2
 14381     1FF6  0824               	movf	(sprintf@f^(0+256)+2),w
 14382     1FF7  0720               	addwf	sprintf@s^(0+256),w
 14383     1FF8  0021               	movlb	1	; select bank1
 14384     1FF9  00EF               	movwf	??_sprintf^(0+128)
 14385     1FFA  086F               	movf	??_sprintf^(0+128),w
 14386     1FFB  0086               	movwf	6
 14387     1FFC  3001               	movlw	1	; select bank2/3
 14388     1FFD  0087               	movwf	7
 14389     1FFE  0181               	clrf	1
 14390     1FFF                     i1l1690:
 14391     1FFF  0008               	return
 14392     2000                     __end_of_sprintf:
 14393                           
 14394                           	psect	text69
 14395     1FC0                     __ptext69:	
 14396 ;; *************** function _vfprintf *****************
 14397 ;; Defined at:
 14398 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;  fp              1    wreg     PTR struct _IO_FILE
 14401 ;;		 -> sprintf@f(11), 
 14402 ;;  fmt             2   66[BANK1 ] PTR const unsigned char 
 14403 ;;		 -> STR_8(14), STR_6(15), STR_3(16), 
 14404 ;;  ap              1   68[BANK1 ] PTR PTR void 
 14405 ;;		 -> sprintf@ap(1), 
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;  fp              1   70[BANK1 ] PTR struct _IO_FILE
 14408 ;;		 -> sprintf@f(11), 
 14409 ;;  cfmt            2   71[BANK1 ] PTR unsigned char 
 14410 ;;		 -> STR_8(14), STR_6(15), STR_3(16), 
 14411 ;; Return value:  Size  Location     Type
 14412 ;;                  2   66[BANK1 ] int 
 14413 ;; Registers used:
 14414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14415 ;; Tracked objects:
 14416 ;;		On entry : 0/0
 14417 ;;		On exit  : 0/0
 14418 ;;		Unchanged: 0/0
 14419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14420 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14421 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14422 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14423 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 14424 ;;Total ram usage:        7 bytes
 14425 ;; Hardware stack levels used: 1
 14426 ;; Hardware stack levels required when called: 6
 14427 ;; This function calls:
 14428 ;;		_vfpfcnvrt
 14429 ;; This function is called by:
 14430 ;;		_sprintf
 14431 ;; This function uses a non-reentrant model
 14432 ;;
 14433                           
 14434     1FC0                     _vfprintf:	
 14435                           ;psect for function _vfprintf
 14436                           
 14437                           
 14438                           ;incstack = 0
 14439                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14440                           ;vfprintf@fp stored from wreg
 14441     1FC0  0021               	movlb	1	; select bank1
 14442     1FC1  00E6               	movwf	vfprintf@fp^(0+128)
 14443     1FC2                     i1l5156:
 14444                           
 14445                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 14446     1FC2  0863               	movf	(vfprintf@fmt+1)^(0+128),w
 14447     1FC3  00E8               	movwf	(vfprintf@cfmt+1)^(0+128)
 14448     1FC4  0862               	movf	vfprintf@fmt^(0+128),w
 14449     1FC5  00E7               	movwf	vfprintf@cfmt^(0+128)
 14450                           
 14451                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 14452     1FC6  2FD3               	goto	i1l5160
 14453     1FC7                     i1l5158:
 14454                           
 14455                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 14456     1FC7  30E7               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 14457     1FC8  0020               	movlb	0	; select bank0
 14458     1FC9  00EE               	movwf	vfpfcnvrt@fmt
 14459     1FCA  0021               	movlb	1	; select bank1
 14460     1FCB  0864               	movf	vfprintf@ap^(0+128),w
 14461     1FCC  0020               	movlb	0	; select bank0
 14462     1FCD  00EF               	movwf	vfpfcnvrt@ap
 14463     1FCE  0021               	movlb	1	; select bank1
 14464     1FCF  0866               	movf	vfprintf@fp^(0+128),w
 14465     1FD0  3196  2670  319F   	fcall	_vfpfcnvrt
 14466     1FD3                     i1l5160:
 14467                           
 14468                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 14469     1FD3  0021               	movlb	1	; select bank1
 14470     1FD4  0867               	movf	vfprintf@cfmt^(0+128),w
 14471     1FD5  0084               	movwf	4
 14472     1FD6  0868               	movf	(vfprintf@cfmt+1)^(0+128),w
 14473     1FD7  0085               	movwf	5
 14474     1FD8  0012               	moviw fsr0++
 14475     1FD9  1D03               	btfss	3,2
 14476     1FDA  2FDC               	goto	u473_21
 14477     1FDB  2FDD               	goto	u473_20
 14478     1FDC                     u473_21:
 14479     1FDC  2FC7               	goto	i1l5158
 14480     1FDD                     u473_20:
 14481     1FDD                     i1l5162:
 14482                           
 14483                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 14484     1FDD  01E2               	clrf	?_vfprintf^(0+128)
 14485     1FDE  01E3               	clrf	(?_vfprintf+1)^(0+128)
 14486     1FDF                     i1l1838:
 14487     1FDF  0008               	return
 14488     1FE0                     __end_of_vfprintf:
 14489                           
 14490                           	psect	text70
 14491     1670                     __ptext70:	
 14492 ;; *************** function _vfpfcnvrt *****************
 14493 ;; Defined at:
 14494 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 14495 ;; Parameters:    Size  Location     Type
 14496 ;;  fp              1    wreg     PTR struct _IO_FILE
 14497 ;;		 -> sprintf@f(11), 
 14498 ;;  fmt             1   78[BANK0 ] PTR PTR unsigned char 
 14499 ;;		 -> vfprintf@cfmt(2), 
 14500 ;;  ap              1   79[BANK0 ] PTR PTR void 
 14501 ;;		 -> sprintf@ap(1), 
 14502 ;; Auto vars:     Size  Location     Type
 14503 ;;  fp              1   62[BANK1 ] PTR struct _IO_FILE
 14504 ;;		 -> sprintf@f(11), 
 14505 ;;  convarg         4   58[BANK1 ] struct .
 14506 ;;  cp              2   64[BANK1 ] PTR unsigned char 
 14507 ;;		 -> STR_8(14), STR_6(15), STR_3(16), 
 14508 ;;  c               1   63[BANK1 ] unsigned char 
 14509 ;;  done            1    0        _Bool 
 14510 ;; Return value:  Size  Location     Type
 14511 ;;                  1    wreg      void 
 14512 ;; Registers used:
 14513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14514 ;; Tracked objects:
 14515 ;;		On entry : 0/0
 14516 ;;		On exit  : 0/0
 14517 ;;		Unchanged: 0/0
 14518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14519 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14520 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14521 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14522 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0
 14523 ;;Total ram usage:       14 bytes
 14524 ;; Hardware stack levels used: 1
 14525 ;; Hardware stack levels required when called: 5
 14526 ;; This function calls:
 14527 ;;		_efgtoa
 14528 ;;		_fputc
 14529 ;;		_read_prec_or_width
 14530 ;;		_xtoa
 14531 ;; This function is called by:
 14532 ;;		_vfprintf
 14533 ;; This function uses a non-reentrant model
 14534 ;;
 14535                           
 14536     1670                     _vfpfcnvrt:	
 14537                           ;psect for function _vfpfcnvrt
 14538                           
 14539                           
 14540                           ;incstack = 0
 14541                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14542                           ;vfpfcnvrt@fp stored from wreg
 14543     1670  0021               	movlb	1	; select bank1
 14544     1671  00DE               	movwf	vfpfcnvrt@fp^(0+128)
 14545     1672                     i1l5036:
 14546                           
 14547                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 14548     1672  0020               	movlb	0	; select bank0
 14549     1673  086E               	movf	vfpfcnvrt@fmt,w
 14550     1674  0086               	movwf	6
 14551     1675  0187               	clrf	7
 14552     1676  3F40               	moviw [0]fsr1
 14553     1677  0021               	movlb	1	; select bank1
 14554     1678  00D6               	movwf	??_vfpfcnvrt^(0+128)
 14555     1679  3F41               	moviw [1]fsr1
 14556     167A  00D7               	movwf	(??_vfpfcnvrt^(0+128)+1)
 14557     167B  0856               	movf	??_vfpfcnvrt^(0+128),w
 14558     167C  0084               	movwf	4
 14559     167D  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 14560     167E  0085               	movwf	5
 14561     167F  0012               	moviw fsr0++
 14562     1680  3A25               	xorlw	37
 14563     1681  1D03               	btfss	3,2
 14564     1682  2E84               	goto	u466_21
 14565     1683  2E85               	goto	u466_20
 14566     1684                     u466_21:
 14567     1684  2FE5               	goto	i1l5126
 14568     1685                     u466_20:
 14569     1685                     i1l5038:
 14570                           
 14571                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 14572     1685  0020               	movlb	0	; select bank0
 14573     1686  086E               	movf	vfpfcnvrt@fmt,w
 14574     1687  0086               	movwf	6
 14575     1688  0187               	clrf	7
 14576     1689  3001               	movlw	1
 14577     168A  0781               	addwf	1,f
 14578     168B  3141               	addfsr 1,1
 14579     168C  1803               	skipnc
 14580     168D  0A81               	incf	1,f
 14581     168E                     i1l5040:
 14582                           
 14583                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 14584     168E  0022               	movlb	2	; select bank2
 14585     168F  01D5               	clrf	_width^(0+256)
 14586     1690  01D6               	clrf	(_width+1)^(0+256)
 14587     1691  1003               	clrc
 14588     1692  3000               	movlw	0
 14589     1693  1803               	btfsc	3,0
 14590     1694  3001               	movlw	1
 14591     1695  00E5               	movwf	_flags^(0+256)
 14592     1696                     i1l5042:
 14593                           
 14594                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 14595     1696  30FF               	movlw	255
 14596     1697  00D7               	movwf	_prec^(0+256)
 14597     1698  30FF               	movlw	255
 14598     1699  00D8               	movwf	(_prec^(0+256)+1)
 14599     169A                     i1l5044:
 14600                           
 14601                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 14602     169A  0020               	movlb	0	; select bank0
 14603     169B  086E               	movf	vfpfcnvrt@fmt,w
 14604     169C  0086               	movwf	6
 14605     169D  0187               	clrf	7
 14606     169E  3F40               	moviw [0]fsr1
 14607     169F  0021               	movlb	1	; select bank1
 14608     16A0  00D6               	movwf	??_vfpfcnvrt^(0+128)
 14609     16A1  3F41               	moviw [1]fsr1
 14610     16A2  00D7               	movwf	(??_vfpfcnvrt^(0+128)+1)
 14611     16A3  0856               	movf	??_vfpfcnvrt^(0+128),w
 14612     16A4  0084               	movwf	4
 14613     16A5  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 14614     16A6  0085               	movwf	5
 14615     16A7  0012               	moviw fsr0++
 14616     16A8  3A2E               	xorlw	46
 14617     16A9  1D03               	btfss	3,2
 14618     16AA  2EAC               	goto	u467_21
 14619     16AB  2EAD               	goto	u467_20
 14620     16AC                     u467_21:
 14621     16AC  2EC1               	goto	i1l5050
 14622     16AD                     u467_20:
 14623     16AD                     i1l5046:
 14624                           
 14625                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 14626     16AD  0020               	movlb	0	; select bank0
 14627     16AE  086E               	movf	vfpfcnvrt@fmt,w
 14628     16AF  0086               	movwf	6
 14629     16B0  0187               	clrf	7
 14630     16B1  3001               	movlw	1
 14631     16B2  0781               	addwf	1,f
 14632     16B3  3141               	addfsr 1,1
 14633     16B4  1803               	skipnc
 14634     16B5  0A81               	incf	1,f
 14635     16B6                     i1l5048:
 14636                           
 14637                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 14638     16B6  086F               	movf	vfpfcnvrt@ap,w
 14639     16B7  00F6               	movwf	read_prec_or_width@ap
 14640     16B8  086E               	movf	vfpfcnvrt@fmt,w
 14641     16B9  3192  22F1  3196   	fcall	_read_prec_or_width
 14642     16BC  0877               	movf	?_read_prec_or_width+1,w
 14643     16BD  0022               	movlb	2	; select bank2
 14644     16BE  00D8               	movwf	(_prec+1)^(0+256)
 14645     16BF  0876               	movf	?_read_prec_or_width,w
 14646     16C0  00D7               	movwf	_prec^(0+256)
 14647     16C1                     i1l5050:
 14648                           
 14649                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 14650     16C1  0020               	movlb	0	; select bank0
 14651     16C2  086E               	movf	vfpfcnvrt@fmt,w
 14652     16C3  0086               	movwf	6
 14653     16C4  0187               	clrf	7
 14654     16C5  3F40               	moviw [0]fsr1
 14655     16C6  0021               	movlb	1	; select bank1
 14656     16C7  00E0               	movwf	vfpfcnvrt@cp^(0+128)
 14657     16C8  3F41               	moviw [1]fsr1
 14658     16C9  00E1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 14659     16CA                     i1l5052:
 14660                           
 14661                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 14662     16CA  0860               	movf	vfpfcnvrt@cp^(0+128),w
 14663     16CB  0084               	movwf	4
 14664     16CC  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 14665     16CD  0085               	movwf	5
 14666     16CE  0800               	movf	0,w	;code access
 14667     16CF  00DF               	movwf	vfpfcnvrt@c^(0+128)
 14668                           
 14669                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 14670     16D0  2EEB               	goto	i1l5066
 14671     16D1                     i1l5054:
 14672                           
 14673                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1298:     cp++;
 14674     16D1  3001               	movlw	1
 14675     16D2  07E0               	addwf	vfpfcnvrt@cp^(0+128),f
 14676     16D3  3000               	movlw	0
 14677     16D4  3DE1               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
 14678     16D5                     i1l5056:
 14679                           
 14680                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1300:     if (*cp
      +                           == 'h') {
 14681     16D5  0860               	movf	vfpfcnvrt@cp^(0+128),w
 14682     16D6  0084               	movwf	4
 14683     16D7  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 14684     16D8  0085               	movwf	5
 14685     16D9  0012               	moviw fsr0++
 14686     16DA  3A68               	xorlw	104
 14687     16DB  1D03               	btfss	3,2
 14688     16DC  2EDE               	goto	u468_21
 14689     16DD  2EDF               	goto	u468_20
 14690     16DE                     u468_21:
 14691     16DE  2EF3               	goto	i1l5068
 14692     16DF                     u468_20:
 14693     16DF                     i1l5058:
 14694                           
 14695                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1301:      c = 'H
      +                          ';
 14696     16DF  3048               	movlw	72
 14697     16E0  00DF               	movwf	vfpfcnvrt@c^(0+128)
 14698                           
 14699                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1302:      cp++;
 14700     16E1  3001               	movlw	1
 14701     16E2  07E0               	addwf	vfpfcnvrt@cp^(0+128),f
 14702     16E3  3000               	movlw	0
 14703     16E4  3DE1               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
 14704     16E5  2EF3               	goto	i1l5068
 14705     16E6                     i1l5060:
 14706                           
 14707                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 14708     16E6  3069               	movlw	105
 14709     16E7  00DF               	movwf	vfpfcnvrt@c^(0+128)
 14710                           
 14711                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1351:     break;
 14712     16E8  2EF3               	goto	i1l5068
 14713     16E9                     i1l5062:
 14714                           
 14715                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 14716     16E9  01DF               	clrf	vfpfcnvrt@c^(0+128)
 14717                           
 14718                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
 14719     16EA  2EF3               	goto	i1l5068
 14720     16EB                     i1l5066:
 14721     16EB  085F               	movf	vfpfcnvrt@c^(0+128),w
 14722                           
 14723                           ; Switch size 1, requested type "simple"
 14724                           ; Number of cases is 2, Range of values is 104 to 120
 14725                           ; switch strategies available:
 14726                           ; Name         Instructions Cycles
 14727                           ; simple_byte            7     4 (average)
 14728                           ; direct_byte           43     9 (fixed)
 14729                           ; jumptable            263     9 (fixed)
 14730                           ;	Chosen strategy is simple_byte
 14731     16EC  3A68               	xorlw	104	; case 104
 14732     16ED  1903               	skipnz
 14733     16EE  2ED1               	goto	i1l5054
 14734     16EF  3A10               	xorlw	16	; case 120
 14735     16F0  1903               	skipnz
 14736     16F1  2EE6               	goto	i1l5060
 14737     16F2  2EE9               	goto	i1l5062
 14738     16F3                     i1l5068:
 14739     16F3  0860               	movf	vfpfcnvrt@cp^(0+128),w
 14740     16F4  0084               	movwf	4
 14741     16F5  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 14742     16F6  0085               	movwf	5
 14743     16F7  0012               	moviw fsr0++
 14744     16F8  3A78               	xorlw	120
 14745     16F9  1D03               	btfss	3,2
 14746     16FA  2EFC               	goto	u469_21
 14747     16FB  2EFD               	goto	u469_20
 14748     16FC                     u469_21:
 14749     16FC  2F4F               	goto	i1l5088
 14750     16FD                     u469_20:
 14751     16FD  2F21               	goto	i1l5076
 14752     16FE                     i1l5070:
 14753                           
 14754                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 14755     16FE  0020               	movlb	0	; select bank0
 14756     16FF  086F               	movf	vfpfcnvrt@ap,w
 14757     1700  0086               	movwf	6
 14758     1701  3001               	movlw	1	; select bank2/3
 14759     1702  0087               	movwf	7
 14760     1703  0801               	movf	1,w
 14761     1704  0084               	movwf	4
 14762     1705  0185               	clrf	5
 14763     1706  3002               	movlw	2
 14764     1707  0781               	addwf	1,f
 14765     1708  3F00               	moviw [0]fsr0
 14766     1709  0021               	movlb	1	; select bank1
 14767     170A  00DA               	movwf	vfpfcnvrt@convarg^(0+128)
 14768     170B  3F01               	moviw [1]fsr0
 14769     170C  00DB               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 14770                           
 14771                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1457:      break;
 14772     170D  2F29               	goto	i1l5078
 14773     170E                     i1l5072:
 14774                           
 14775                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1465:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned char)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (u
      +                          nsigned int)0));
 14776     170E  0020               	movlb	0	; select bank0
 14777     170F  086F               	movf	vfpfcnvrt@ap,w
 14778     1710  0086               	movwf	6
 14779     1711  3001               	movlw	1	; select bank2/3
 14780     1712  0087               	movwf	7
 14781     1713  0801               	movf	1,w
 14782     1714  0084               	movwf	4
 14783     1715  0185               	clrf	5
 14784     1716  3002               	movlw	2
 14785     1717  0781               	addwf	1,f
 14786     1718  0800               	movf	0,w
 14787     1719  0021               	movlb	1	; select bank1
 14788     171A  00D6               	movwf	??_vfpfcnvrt^(0+128)
 14789     171B  01D7               	clrf	(??_vfpfcnvrt^(0+128)+1)
 14790     171C  0856               	movf	??_vfpfcnvrt^(0+128),w
 14791     171D  00DA               	movwf	vfpfcnvrt@convarg^(0+128)
 14792     171E  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 14793     171F  00DB               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 14794                           
 14795                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1466:      break;
 14796     1720  2F29               	goto	i1l5078
 14797     1721                     i1l5076:
 14798     1721  085F               	movf	vfpfcnvrt@c^(0+128),w
 14799                           
 14800                           ; Switch size 1, requested type "simple"
 14801                           ; Number of cases is 2, Range of values is 72 to 105
 14802                           ; switch strategies available:
 14803                           ; Name         Instructions Cycles
 14804                           ; simple_byte            7     4 (average)
 14805                           ; direct_byte           77     9 (fixed)
 14806                           ; jumptable            263     9 (fixed)
 14807                           ;	Chosen strategy is simple_byte
 14808     1722  3A48               	xorlw	72	; case 72
 14809     1723  1903               	skipnz
 14810     1724  2F0E               	goto	i1l5072
 14811     1725  3A21               	xorlw	33	; case 105
 14812     1726  1903               	skipnz
 14813     1727  2EFE               	goto	i1l5070
 14814     1728  2F29               	goto	i1l5078
 14815     1729                     i1l5078:
 14816                           
 14817                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 14818     1729  0860               	movf	vfpfcnvrt@cp^(0+128),w
 14819     172A  3E01               	addlw	1
 14820     172B  00D6               	movwf	??_vfpfcnvrt^(0+128)
 14821     172C  3000               	movlw	0
 14822     172D  3D61               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 14823     172E  00D7               	movwf	(??_vfpfcnvrt+1)^(0+128)
 14824     172F  0020               	movlb	0	; select bank0
 14825     1730  086E               	movf	vfpfcnvrt@fmt,w
 14826     1731  0086               	movwf	6
 14827     1732  0187               	clrf	7
 14828     1733  0021               	movlb	1	; select bank1
 14829     1734  0856               	movf	??_vfpfcnvrt^(0+128),w
 14830     1735  3FC0               	movwi [0]fsr1
 14831     1736  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 14832     1737  3FC1               	movwi [1]fsr1
 14833                           
 14834                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 14835     1738  2F46               	goto	i1l5086
 14836     1739                     i1l5080:
 14837                           
 14838                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
 14839     1739  085B               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 14840     173A  0020               	movlb	0	; select bank0
 14841     173B  00A9               	movwf	xtoa@d+1
 14842     173C  0021               	movlb	1	; select bank1
 14843     173D  085A               	movf	vfpfcnvrt@convarg^(0+128),w
 14844     173E  0020               	movlb	0	; select bank0
 14845     173F  00A8               	movwf	xtoa@d
 14846     1740  0021               	movlb	1	; select bank1
 14847     1741  085E               	movf	vfpfcnvrt@fp^(0+128),w
 14848     1742  3194  24B9  3196   	fcall	_xtoa
 14849     1745  2FFF               	goto	i1l1815
 14850     1746                     i1l5086:
 14851     1746  0860               	movf	vfpfcnvrt@cp^(0+128),w
 14852     1747  0084               	movwf	4
 14853     1748  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 14854     1749  0085               	movwf	5
 14855     174A  0800               	movf	0,w	;code access
 14856                           
 14857                           ; Switch size 1, requested type "simple"
 14858                           ; Number of cases is 1, Range of values is 120 to 120
 14859                           ; switch strategies available:
 14860                           ; Name         Instructions Cycles
 14861                           ; simple_byte            4     3 (average)
 14862                           ; direct_byte           11     9 (fixed)
 14863                           ; jumptable            263     9 (fixed)
 14864                           ;	Chosen strategy is simple_byte
 14865     174B  3A78               	xorlw	120	; case 120
 14866     174C  1903               	skipnz
 14867     174D  2F39               	goto	i1l5080
 14868     174E  2F4F               	goto	i1l5088
 14869     174F                     i1l5088:
 14870                           
 14871                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 14872     174F  0020               	movlb	0	; select bank0
 14873     1750  086E               	movf	vfpfcnvrt@fmt,w
 14874     1751  0086               	movwf	6
 14875     1752  0187               	clrf	7
 14876     1753  3F40               	moviw [0]fsr1
 14877     1754  0021               	movlb	1	; select bank1
 14878     1755  00E0               	movwf	vfpfcnvrt@cp^(0+128)
 14879     1756  3F41               	moviw [1]fsr1
 14880     1757  00E1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 14881     1758                     i1l5090:
 14882                           
 14883                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 14884     1758  0860               	movf	vfpfcnvrt@cp^(0+128),w
 14885     1759  0084               	movwf	4
 14886     175A  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 14887     175B  0085               	movwf	5
 14888     175C  0800               	movf	0,w	;code access
 14889     175D  00DF               	movwf	vfpfcnvrt@c^(0+128)
 14890                           
 14891                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 14892     175E  2F69               	goto	i1l5100
 14893     175F                     i1l5092:
 14894                           
 14895                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 14896     175F  3001               	movlw	1
 14897     1760  07E0               	addwf	vfpfcnvrt@cp^(0+128),f
 14898     1761  3000               	movlw	0
 14899     1762  3DE1               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
 14900                           
 14901                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
 14902     1763  2F74               	goto	i1l5102
 14903     1764                     i1l5094:
 14904                           
 14905                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 14906     1764  306C               	movlw	108
 14907     1765  00DF               	movwf	vfpfcnvrt@c^(0+128)
 14908                           
 14909                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
 14910     1766  2F74               	goto	i1l5102
 14911     1767                     i1l5096:
 14912                           
 14913                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 14914     1767  01DF               	clrf	vfpfcnvrt@c^(0+128)
 14915                           
 14916                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
 14917     1768  2F74               	goto	i1l5102
 14918     1769                     i1l5100:
 14919     1769  085F               	movf	vfpfcnvrt@c^(0+128),w
 14920                           
 14921                           ; Switch size 1, requested type "simple"
 14922                           ; Number of cases is 3, Range of values is 76 to 108
 14923                           ; switch strategies available:
 14924                           ; Name         Instructions Cycles
 14925                           ; simple_byte           10     6 (average)
 14926                           ; direct_byte           75     9 (fixed)
 14927                           ; jumptable            263     9 (fixed)
 14928                           ;	Chosen strategy is simple_byte
 14929     176A  3A4C               	xorlw	76	; case 76
 14930     176B  1903               	skipnz
 14931     176C  2F5F               	goto	i1l5092
 14932     176D  3A2A               	xorlw	42	; case 102
 14933     176E  1903               	skipnz
 14934     176F  2F64               	goto	i1l5094
 14935     1770  3A0A               	xorlw	10	; case 108
 14936     1771  1903               	skipnz
 14937     1772  2F5F               	goto	i1l5092
 14938     1773  2F67               	goto	i1l5096
 14939     1774                     i1l5102:
 14940     1774  0860               	movf	vfpfcnvrt@cp^(0+128),w
 14941     1775  0084               	movwf	4
 14942     1776  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 14943     1777  0085               	movwf	5
 14944     1778  0012               	moviw fsr0++
 14945     1779  3A66               	xorlw	102
 14946     177A  1D03               	btfss	3,2
 14947     177B  2F7D               	goto	u470_21
 14948     177C  2F7E               	goto	u470_20
 14949     177D                     u470_21:
 14950     177D  2FDB               	goto	i1l5122
 14951     177E                     u470_20:
 14952     177E  2FA7               	goto	i1l5110
 14953     177F                     i1l5104:
 14954                           
 14955                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 14956     177F  0020               	movlb	0	; select bank0
 14957     1780  086F               	movf	vfpfcnvrt@ap,w
 14958     1781  0086               	movwf	6
 14959     1782  3001               	movlw	1	; select bank2/3
 14960     1783  0087               	movwf	7
 14961     1784  0801               	movf	1,w
 14962     1785  0084               	movwf	4
 14963     1786  0185               	clrf	5
 14964     1787  3004               	movlw	4
 14965     1788  0781               	addwf	1,f
 14966     1789  3F00               	moviw [0]fsr0
 14967     178A  0021               	movlb	1	; select bank1
 14968     178B  00DA               	movwf	vfpfcnvrt@convarg^(0+128)
 14969     178C  3F01               	moviw [1]fsr0
 14970     178D  00DB               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 14971     178E  3F02               	moviw [2]fsr0
 14972     178F  00DC               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
 14973     1790  3F03               	moviw [3]fsr0
 14974     1791  00DD               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
 14975                           
 14976                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
 14977     1792  2FAF               	goto	i1l5112
 14978     1793                     i1l5106:
 14979                           
 14980                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 14981     1793  0020               	movlb	0	; select bank0
 14982     1794  086F               	movf	vfpfcnvrt@ap,w
 14983     1795  0086               	movwf	6
 14984     1796  3001               	movlw	1	; select bank2/3
 14985     1797  0087               	movwf	7
 14986     1798  0801               	movf	1,w
 14987     1799  0084               	movwf	4
 14988     179A  0185               	clrf	5
 14989     179B  3004               	movlw	4
 14990     179C  0781               	addwf	1,f
 14991     179D  3F00               	moviw [0]fsr0
 14992     179E  0021               	movlb	1	; select bank1
 14993     179F  00DA               	movwf	vfpfcnvrt@convarg^(0+128)
 14994     17A0  3F01               	moviw [1]fsr0
 14995     17A1  00DB               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 14996     17A2  3F02               	moviw [2]fsr0
 14997     17A3  00DC               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
 14998     17A4  3F03               	moviw [3]fsr0
 14999     17A5  00DD               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
 15000                           
 15001                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
 15002     17A6  2FAF               	goto	i1l5112
 15003     17A7                     i1l5110:
 15004     17A7  085F               	movf	vfpfcnvrt@c^(0+128),w
 15005                           
 15006                           ; Switch size 1, requested type "simple"
 15007                           ; Number of cases is 2, Range of values is 76 to 108
 15008                           ; switch strategies available:
 15009                           ; Name         Instructions Cycles
 15010                           ; simple_byte            7     4 (average)
 15011                           ; direct_byte           75     9 (fixed)
 15012                           ; jumptable            263     9 (fixed)
 15013                           ;	Chosen strategy is simple_byte
 15014     17A8  3A4C               	xorlw	76	; case 76
 15015     17A9  1903               	skipnz
 15016     17AA  2F93               	goto	i1l5106
 15017     17AB  3A20               	xorlw	32	; case 108
 15018     17AC  1903               	skipnz
 15019     17AD  2F7F               	goto	i1l5104
 15020     17AE  2FAF               	goto	i1l5112
 15021     17AF                     i1l5112:
 15022                           
 15023                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 15024     17AF  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15025     17B0  3E01               	addlw	1
 15026     17B1  00D6               	movwf	??_vfpfcnvrt^(0+128)
 15027     17B2  3000               	movlw	0
 15028     17B3  3D61               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 15029     17B4  00D7               	movwf	(??_vfpfcnvrt+1)^(0+128)
 15030     17B5  0020               	movlb	0	; select bank0
 15031     17B6  086E               	movf	vfpfcnvrt@fmt,w
 15032     17B7  0086               	movwf	6
 15033     17B8  0187               	clrf	7
 15034     17B9  0021               	movlb	1	; select bank1
 15035     17BA  0856               	movf	??_vfpfcnvrt^(0+128),w
 15036     17BB  3FC0               	movwi [0]fsr1
 15037     17BC  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 15038     17BD  3FC1               	movwi [1]fsr1
 15039                           
 15040                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 15041     17BE  2FD2               	goto	i1l5120
 15042     17BF                     i1l5114:
 15043                           
 15044                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 15045     17BF  085D               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
 15046     17C0  00A3               	movwf	(efgtoa@f+3)^(0+128)
 15047     17C1  085C               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
 15048     17C2  00A2               	movwf	(efgtoa@f+2)^(0+128)
 15049     17C3  085B               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 15050     17C4  00A1               	movwf	(efgtoa@f+1)^(0+128)
 15051     17C5  085A               	movf	vfpfcnvrt@convarg^(0+128),w
 15052     17C6  00A0               	movwf	efgtoa@f^(0+128)
 15053     17C7  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15054     17C8  0084               	movwf	4
 15055     17C9  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 15056     17CA  0085               	movwf	5
 15057     17CB  0800               	movf	0,w	;code access
 15058     17CC  00A4               	movwf	efgtoa@c^(0+128)
 15059     17CD  085E               	movf	vfpfcnvrt@fp^(0+128),w
 15060     17CE  3180  2083  3196   	fcall	_efgtoa
 15061     17D1  2FFF               	goto	i1l1815
 15062     17D2                     i1l5120:
 15063     17D2  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15064     17D3  0084               	movwf	4
 15065     17D4  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 15066     17D5  0085               	movwf	5
 15067     17D6  0800               	movf	0,w	;code access
 15068                           
 15069                           ; Switch size 1, requested type "simple"
 15070                           ; Number of cases is 1, Range of values is 102 to 102
 15071                           ; switch strategies available:
 15072                           ; Name         Instructions Cycles
 15073                           ; simple_byte            4     3 (average)
 15074                           ; direct_byte           11     9 (fixed)
 15075                           ; jumptable            263     9 (fixed)
 15076                           ;	Chosen strategy is simple_byte
 15077     17D7  3A66               	xorlw	102	; case 102
 15078     17D8  1903               	skipnz
 15079     17D9  2FBF               	goto	i1l5114
 15080     17DA  2FDB               	goto	i1l5122
 15081     17DB                     i1l5122:
 15082                           
 15083                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 15084     17DB  0020               	movlb	0	; select bank0
 15085     17DC  086E               	movf	vfpfcnvrt@fmt,w
 15086     17DD  0086               	movwf	6
 15087     17DE  0187               	clrf	7
 15088     17DF  3001               	movlw	1
 15089     17E0  0781               	addwf	1,f
 15090     17E1  3141               	addfsr 1,1
 15091     17E2  1803               	skipnc
 15092     17E3  0A81               	incf	1,f
 15093     17E4  2FFF               	goto	i1l1815
 15094     17E5                     i1l5126:
 15095                           
 15096                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 15097     17E5  0020               	movlb	0	; select bank0
 15098     17E6  086E               	movf	vfpfcnvrt@fmt,w
 15099     17E7  0086               	movwf	6
 15100     17E8  0187               	clrf	7
 15101     17E9  3F40               	moviw [0]fsr1
 15102     17EA  0021               	movlb	1	; select bank1
 15103     17EB  00D6               	movwf	??_vfpfcnvrt^(0+128)
 15104     17EC  3F41               	moviw [1]fsr1
 15105     17ED  00D7               	movwf	(??_vfpfcnvrt^(0+128)+1)
 15106     17EE  0856               	movf	??_vfpfcnvrt^(0+128),w
 15107     17EF  0084               	movwf	4
 15108     17F0  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 15109     17F1  0085               	movwf	5
 15110     17F2  0800               	movf	0,w	;code access
 15111     17F3  00D8               	movwf	(??_vfpfcnvrt+2)^(0+128)
 15112     17F4  01D9               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 15113     17F5  0858               	movf	(??_vfpfcnvrt+2)^(0+128),w
 15114     17F6  00F0               	movwf	fputc@c
 15115     17F7  0859               	movf	(??_vfpfcnvrt+3)^(0+128),w
 15116     17F8  00F1               	movwf	fputc@c+1
 15117     17F9  085E               	movf	vfpfcnvrt@fp^(0+128),w
 15118     17FA  00F2               	movwf	fputc@fp
 15119     17FB  3188  2000  3196   	fcall	_fputc
 15120     17FE  2FDB               	goto	i1l5122
 15121     17FF                     i1l1815:
 15122     17FF  0008               	return
 15123     1800                     __end_of_vfpfcnvrt:
 15124                           
 15125                           	psect	text71
 15126     14B9                     __ptext71:	
 15127 ;; *************** function _xtoa *****************
 15128 ;; Defined at:
 15129 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 15130 ;; Parameters:    Size  Location     Type
 15131 ;;  fp              1    wreg     PTR struct _IO_FILE
 15132 ;;		 -> sprintf@f(11), 
 15133 ;;  d               2    8[BANK0 ] unsigned int 
 15134 ;; Auto vars:     Size  Location     Type
 15135 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
 15136 ;;		 -> sprintf@f(11), 
 15137 ;;  i               2   17[BANK0 ] int 
 15138 ;;  p               2   14[BANK0 ] int 
 15139 ;;  w               2   11[BANK0 ] int 
 15140 ;;  c               1   16[BANK0 ] unsigned char 
 15141 ;; Return value:  Size  Location     Type
 15142 ;;                  1    wreg      void 
 15143 ;; Registers used:
 15144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15145 ;; Tracked objects:
 15146 ;;		On entry : 0/0
 15147 ;;		On exit  : 0/0
 15148 ;;		Unchanged: 0/0
 15149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15150 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15151 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15152 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15153 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15154 ;;Total ram usage:       11 bytes
 15155 ;; Hardware stack levels used: 1
 15156 ;; Hardware stack levels required when called: 4
 15157 ;; This function calls:
 15158 ;;		_pad
 15159 ;; This function is called by:
 15160 ;;		_vfpfcnvrt
 15161 ;; This function uses a non-reentrant model
 15162 ;;
 15163                           
 15164     14B9                     _xtoa:	
 15165                           ;psect for function _xtoa
 15166                           
 15167                           
 15168                           ;incstack = 0
 15169                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15170                           ;xtoa@fp stored from wreg
 15171     14B9  0020               	movlb	0	; select bank0
 15172     14BA  00AD               	movwf	xtoa@fp
 15173     14BB                     i1l4970:
 15174                           
 15175                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c
      +                          : 1065:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 10
      +                          80:     p = (0 <= prec) ? prec : 1;
 15176     14BB  0022               	movlb	2	; select bank2
 15177     14BC  1FD8               	btfss	(_prec+1)^(0+256),7
 15178     14BD  2CBF               	goto	u459_21
 15179     14BE  2CC0               	goto	u459_20
 15180     14BF                     u459_21:
 15181     14BF  2CC6               	goto	i1l4974
 15182     14C0                     u459_20:
 15183     14C0                     i1l4972:
 15184     14C0  3001               	movlw	1
 15185     14C1  0020               	movlb	0	; select bank0
 15186     14C2  00AE               	movwf	xtoa@p
 15187     14C3  3000               	movlw	0
 15188     14C4  00AF               	movwf	xtoa@p+1
 15189     14C5  2CCD               	goto	i1l1779
 15190     14C6                     i1l4974:
 15191     14C6  0858               	movf	(_prec+1)^(0+256),w
 15192     14C7  0020               	movlb	0	; select bank0
 15193     14C8  00AF               	movwf	xtoa@p+1
 15194     14C9  0022               	movlb	2	; select bank2
 15195     14CA  0857               	movf	_prec^(0+256),w
 15196     14CB  0020               	movlb	0	; select bank0
 15197     14CC  00AE               	movwf	xtoa@p
 15198     14CD                     i1l1779:
 15199                           
 15200                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 15201     14CD  0022               	movlb	2	; select bank2
 15202     14CE  0856               	movf	(_width+1)^(0+256),w
 15203     14CF  0020               	movlb	0	; select bank0
 15204     14D0  00AC               	movwf	xtoa@w+1
 15205     14D1  0022               	movlb	2	; select bank2
 15206     14D2  0855               	movf	_width^(0+256),w
 15207     14D3  0020               	movlb	0	; select bank0
 15208     14D4  00AB               	movwf	xtoa@w
 15209                           
 15210                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 15211     14D5  304F               	movlw	79
 15212     14D6  00B1               	movwf	xtoa@i
 15213     14D7  3000               	movlw	0
 15214     14D8  00B2               	movwf	xtoa@i+1
 15215     14D9                     i1l4976:
 15216                           
 15217                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 15218     14D9  0024               	movlb	4	; select bank4
 15219     14DA  01EF               	clrf	(_dbuf^(0+512)+79)
 15220                           
 15221                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 15222     14DB  2D0B               	goto	i1l4996
 15223     14DC                     i1l4978:
 15224                           
 15225                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1107:         --i;
 15226     14DC  30FF               	movlw	255
 15227     14DD  0020               	movlb	0	; select bank0
 15228     14DE  07B1               	addwf	xtoa@i,f
 15229     14DF  30FF               	movlw	255
 15230     14E0  3DB2               	addwfc	xtoa@i+1,f
 15231     14E1                     i1l4980:
 15232                           
 15233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 15234     14E1  0828               	movf	xtoa@d,w
 15235     14E2  390F               	andlw	15
 15236     14E3  00B0               	movwf	xtoa@c
 15237     14E4                     i1l4982:
 15238                           
 15239                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 15240     14E4  300A               	movlw	10
 15241     14E5  0230               	subwf	xtoa@c,w
 15242     14E6  1803               	skipnc
 15243     14E7  2CE9               	goto	u460_21
 15244     14E8  2CEA               	goto	u460_20
 15245     14E9                     u460_21:
 15246     14E9  2CEF               	goto	i1l4986
 15247     14EA                     u460_20:
 15248     14EA                     i1l4984:
 15249                           
 15250                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 15251     14EA  3030               	movlw	48
 15252     14EB  00AA               	movwf	??_xtoa
 15253     14EC  082A               	movf	??_xtoa,w
 15254     14ED  07B0               	addwf	xtoa@c,f
 15255                           
 15256                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1111:   }
 15257     14EE  2CF3               	goto	i1l4988
 15258     14EF                     i1l4986:
 15259                           
 15260                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1116:    c += 'a'
      +                           - 10;
 15261     14EF  3057               	movlw	87
 15262     14F0  00AA               	movwf	??_xtoa
 15263     14F1  082A               	movf	??_xtoa,w
 15264     14F2  07B0               	addwf	xtoa@c,f
 15265     14F3                     i1l4988:
 15266                           
 15267                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 15268     14F3  0831               	movf	xtoa@i,w
 15269     14F4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 15270     14F5  0086               	movwf	6
 15271     14F6  3002               	movlw	2	; select bank4/5
 15272     14F7  0087               	movwf	7
 15273     14F8  0830               	movf	xtoa@c,w
 15274     14F9  0081               	movwf	1
 15275     14FA                     i1l4990:
 15276                           
 15277                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
 15278     14FA  30FF               	movlw	255
 15279     14FB  07AE               	addwf	xtoa@p,f
 15280     14FC  30FF               	movlw	255
 15281     14FD  3DAF               	addwfc	xtoa@p+1,f
 15282     14FE                     i1l4992:
 15283                           
 15284                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 15285     14FE  30FF               	movlw	255
 15286     14FF  07AB               	addwf	xtoa@w,f
 15287     1500  30FF               	movlw	255
 15288     1501  3DAC               	addwfc	xtoa@w+1,f
 15289     1502                     i1l4994:
 15290                           
 15291                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 15292     1502  0E28               	swapf	xtoa@d,w
 15293     1503  390F               	andlw	15
 15294     1504  00A8               	movwf	xtoa@d
 15295     1505  0E29               	swapf	xtoa@d+1,w
 15296     1506  39F0               	andlw	240
 15297     1507  04A8               	iorwf	xtoa@d,f
 15298     1508  0E29               	swapf	xtoa@d+1,w
 15299     1509  390F               	andlw	15
 15300     150A  00A9               	movwf	xtoa@d+1
 15301     150B                     i1l4996:
 15302                           
 15303                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 15304     150B  0020               	movlb	0	; select bank0
 15305     150C  0832               	movf	xtoa@i+1,w
 15306     150D  3A80               	xorlw	128
 15307     150E  00AA               	movwf	??_xtoa
 15308     150F  3080               	movlw	128
 15309     1510  022A               	subwf	??_xtoa,w
 15310     1511  1D03               	skipz
 15311     1512  2D15               	goto	u461_25
 15312     1513  3002               	movlw	2
 15313     1514  0231               	subwf	xtoa@i,w
 15314     1515                     u461_25:
 15315     1515  1C03               	skipc
 15316     1516  2D18               	goto	u461_21
 15317     1517  2D19               	goto	u461_20
 15318     1518                     u461_21:
 15319     1518  2D2D               	goto	i1l5002
 15320     1519                     u461_20:
 15321     1519                     i1l4998:
 15322     1519  0020               	movlb	0	; select bank0
 15323     151A  0828               	movf	xtoa@d,w
 15324     151B  0429               	iorwf	xtoa@d+1,w
 15325     151C  1D03               	btfss	3,2
 15326     151D  2D1F               	goto	u462_21
 15327     151E  2D20               	goto	u462_20
 15328     151F                     u462_21:
 15329     151F  2CDC               	goto	i1l4978
 15330     1520                     u462_20:
 15331     1520                     i1l5000:
 15332     1520  082F               	movf	xtoa@p+1,w
 15333     1521  3A80               	xorlw	128
 15334     1522  00AA               	movwf	??_xtoa
 15335     1523  3080               	movlw	128
 15336     1524  022A               	subwf	??_xtoa,w
 15337     1525  1D03               	skipz
 15338     1526  2D29               	goto	u463_25
 15339     1527  3001               	movlw	1
 15340     1528  022E               	subwf	xtoa@p,w
 15341     1529                     u463_25:
 15342     1529  1803               	skipnc
 15343     152A  2D2C               	goto	u463_21
 15344     152B  2D2D               	goto	u463_20
 15345     152C                     u463_21:
 15346     152C  2CDC               	goto	i1l4978
 15347     152D                     u463_20:
 15348     152D                     i1l5002:
 15349                           
 15350                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 15351     152D  0020               	movlb	0	; select bank0
 15352     152E  0831               	movf	xtoa@i,w
 15353     152F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 15354     1530  00FB               	movwf	pad@buf
 15355     1531  082C               	movf	xtoa@w+1,w
 15356     1532  00FD               	movwf	pad@p+1
 15357     1533  082B               	movf	xtoa@w,w
 15358     1534  00FC               	movwf	pad@p
 15359     1535  082D               	movf	xtoa@fp,w
 15360     1536  3191  2163  3194   	fcall	_pad
 15361     1539                     i1l1787:
 15362     1539  0008               	return
 15363     153A                     __end_of_xtoa:
 15364                           
 15365                           	psect	text72
 15366     12F1                     __ptext72:	
 15367 ;; *************** function _read_prec_or_width *****************
 15368 ;; Defined at:
 15369 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 15370 ;; Parameters:    Size  Location     Type
 15371 ;;  fmt             1    wreg     PTR PTR const unsigned c
 15372 ;;		 -> vfprintf@cfmt(2), 
 15373 ;;  ap              1    6[COMMON] PTR PTR void [1]
 15374 ;;		 -> sprintf@ap(1), 
 15375 ;; Auto vars:     Size  Location     Type
 15376 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
 15377 ;;		 -> vfprintf@cfmt(2), 
 15378 ;;  c               1    0[BANK0 ] unsigned char 
 15379 ;;  n               2    1[BANK0 ] int 
 15380 ;; Return value:  Size  Location     Type
 15381 ;;                  2    6[COMMON] int 
 15382 ;; Registers used:
 15383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15384 ;; Tracked objects:
 15385 ;;		On entry : 0/0
 15386 ;;		On exit  : 0/0
 15387 ;;		Unchanged: 0/0
 15388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15390 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15391 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15392 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15393 ;;Total ram usage:        9 bytes
 15394 ;; Hardware stack levels used: 1
 15395 ;; Hardware stack levels required when called: 1
 15396 ;; This function calls:
 15397 ;;		___wmul
 15398 ;; This function is called by:
 15399 ;;		_vfpfcnvrt
 15400 ;; This function uses a non-reentrant model
 15401 ;;
 15402                           
 15403     12F1                     _read_prec_or_width:	
 15404                           ;psect for function _read_prec_or_width
 15405                           
 15406                           
 15407                           ;incstack = 0
 15408                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15409                           ;read_prec_or_width@fmt stored from wreg
 15410     12F1  0020               	movlb	0	; select bank0
 15411     12F2  00A3               	movwf	read_prec_or_width@fmt
 15412     12F3                     i1l5006:
 15413                           
 15414                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 15415     12F3  01A1               	clrf	read_prec_or_width@n
 15416     12F4  01A2               	clrf	read_prec_or_width@n+1
 15417     12F5                     i1l5008:
 15418                           
 15419                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 15420     12F5  0823               	movf	read_prec_or_width@fmt,w
 15421     12F6  0086               	movwf	6
 15422     12F7  0187               	clrf	7
 15423     12F8  3F40               	moviw [0]fsr1
 15424     12F9  00F8               	movwf	??_read_prec_or_width
 15425     12FA  3F41               	moviw [1]fsr1
 15426     12FB  00F9               	movwf	??_read_prec_or_width+1
 15427     12FC  0878               	movf	??_read_prec_or_width,w
 15428     12FD  0084               	movwf	4
 15429     12FE  0879               	movf	??_read_prec_or_width+1,w
 15430     12FF  0085               	movwf	5
 15431     1300  0012               	moviw fsr0++
 15432     1301  3A2A               	xorlw	42
 15433     1302  1D03               	btfss	3,2
 15434     1303  2B05               	goto	u464_21
 15435     1304  2B06               	goto	u464_20
 15436     1305                     u464_21:
 15437     1305  2B39               	goto	i1l5018
 15438     1306                     u464_20:
 15439     1306                     i1l5010:
 15440                           
 15441                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 15442     1306  0823               	movf	read_prec_or_width@fmt,w
 15443     1307  0086               	movwf	6
 15444     1308  0187               	clrf	7
 15445     1309  3001               	movlw	1
 15446     130A  0781               	addwf	1,f
 15447     130B  3141               	addfsr 1,1
 15448     130C  1803               	skipnc
 15449     130D  0A81               	incf	1,f
 15450     130E                     i1l5012:
 15451                           
 15452                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 15453     130E  0876               	movf	read_prec_or_width@ap,w
 15454     130F  0086               	movwf	6
 15455     1310  3001               	movlw	1	; select bank2/3
 15456     1311  0087               	movwf	7
 15457     1312  0801               	movf	1,w
 15458     1313  0084               	movwf	4
 15459     1314  0185               	clrf	5
 15460     1315  3002               	movlw	2
 15461     1316  0781               	addwf	1,f
 15462     1317  3F00               	moviw [0]fsr0
 15463     1318  00A1               	movwf	read_prec_or_width@n
 15464     1319  3F01               	moviw [1]fsr0
 15465     131A  00A2               	movwf	read_prec_or_width@n+1
 15466                           
 15467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 15468     131B  2B4D               	goto	i1l5020
 15469     131C                     i1l5014:
 15470                           
 15471                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 15472     131C  0820               	movf	read_prec_or_width@c,w
 15473     131D  00F8               	movwf	??_read_prec_or_width
 15474     131E  01F9               	clrf	??_read_prec_or_width+1
 15475     131F  0822               	movf	read_prec_or_width@n+1,w
 15476     1320  00F1               	movwf	___wmul@multiplier+1
 15477     1321  0821               	movf	read_prec_or_width@n,w
 15478     1322  00F0               	movwf	___wmul@multiplier
 15479     1323  300A               	movlw	10
 15480     1324  00F2               	movwf	___wmul@multiplicand
 15481     1325  3000               	movlw	0
 15482     1326  00F3               	movwf	___wmul@multiplicand+1
 15483     1327  319F  2781  3192   	fcall	___wmul
 15484     132A  0878               	movf	??_read_prec_or_width,w
 15485     132B  0770               	addwf	?___wmul,w
 15486     132C  0020               	movlb	0	; select bank0
 15487     132D  00A1               	movwf	read_prec_or_width@n
 15488     132E  0879               	movf	??_read_prec_or_width+1,w
 15489     132F  3D71               	addwfc	?___wmul+1,w
 15490     1330  00A2               	movwf	read_prec_or_width@n+1
 15491     1331                     i1l5016:
 15492                           
 15493                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 15494     1331  0823               	movf	read_prec_or_width@fmt,w
 15495     1332  0086               	movwf	6
 15496     1333  0187               	clrf	7
 15497     1334  3001               	movlw	1
 15498     1335  0781               	addwf	1,f
 15499     1336  3141               	addfsr 1,1
 15500     1337  1803               	skipnc
 15501     1338  0A81               	incf	1,f
 15502     1339                     i1l5018:
 15503                           
 15504                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 15505     1339  0823               	movf	read_prec_or_width@fmt,w
 15506     133A  0086               	movwf	6
 15507     133B  0187               	clrf	7
 15508     133C  3F40               	moviw [0]fsr1
 15509     133D  00F8               	movwf	??_read_prec_or_width
 15510     133E  3F41               	moviw [1]fsr1
 15511     133F  00F9               	movwf	??_read_prec_or_width+1
 15512     1340  0878               	movf	??_read_prec_or_width,w
 15513     1341  0084               	movwf	4
 15514     1342  0879               	movf	??_read_prec_or_width+1,w
 15515     1343  0085               	movwf	5
 15516     1344  0800               	movf	0,w	;code access
 15517     1345  3ED0               	addlw	208
 15518     1346  00A0               	movwf	read_prec_or_width@c
 15519     1347  300A               	movlw	10
 15520     1348  0220               	subwf	read_prec_or_width@c,w
 15521     1349  1C03               	skipc
 15522     134A  2B4C               	goto	u465_21
 15523     134B  2B4D               	goto	u465_20
 15524     134C                     u465_21:
 15525     134C  2B1C               	goto	i1l5014
 15526     134D                     u465_20:
 15527     134D                     i1l5020:
 15528                           
 15529                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 15530     134D  0822               	movf	read_prec_or_width@n+1,w
 15531     134E  00F7               	movwf	?_read_prec_or_width+1
 15532     134F  0821               	movf	read_prec_or_width@n,w
 15533     1350  00F6               	movwf	?_read_prec_or_width
 15534     1351                     i1l1795:
 15535     1351  0008               	return
 15536     1352                     __end_of_read_prec_or_width:
 15537                           
 15538                           	psect	text73
 15539     1F81                     __ptext73:	
 15540 ;; *************** function ___wmul *****************
 15541 ;; Defined at:
 15542 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 15543 ;; Parameters:    Size  Location     Type
 15544 ;;  multiplier      2    0[COMMON] unsigned int 
 15545 ;;  multiplicand    2    2[COMMON] unsigned int 
 15546 ;; Auto vars:     Size  Location     Type
 15547 ;;  product         2    4[COMMON] unsigned int 
 15548 ;; Return value:  Size  Location     Type
 15549 ;;                  2    0[COMMON] unsigned int 
 15550 ;; Registers used:
 15551 ;;		wreg, status,2, status,0
 15552 ;; Tracked objects:
 15553 ;;		On entry : 0/0
 15554 ;;		On exit  : 0/0
 15555 ;;		Unchanged: 0/0
 15556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15557 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15558 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15560 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15561 ;;Total ram usage:        6 bytes
 15562 ;; Hardware stack levels used: 1
 15563 ;; This function calls:
 15564 ;;		Nothing
 15565 ;; This function is called by:
 15566 ;;		_read_prec_or_width
 15567 ;; This function uses a non-reentrant model
 15568 ;;
 15569                           
 15570     1F81                     ___wmul:	
 15571                           ;psect for function ___wmul
 15572                           
 15573     1F81                     i1l4304:	
 15574                           ;incstack = 0
 15575                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15576                           
 15577     1F81  01F4               	clrf	___wmul@product
 15578     1F82  01F5               	clrf	___wmul@product+1
 15579     1F83                     i1l4306:
 15580     1F83  1C70               	btfss	___wmul@multiplier,0
 15581     1F84  2F86               	goto	u325_21
 15582     1F85  2F87               	goto	u325_20
 15583     1F86                     u325_21:
 15584     1F86  2F8B               	goto	i1l1227
 15585     1F87                     u325_20:
 15586     1F87                     i1l4308:
 15587     1F87  0872               	movf	___wmul@multiplicand,w
 15588     1F88  07F4               	addwf	___wmul@product,f
 15589     1F89  0873               	movf	___wmul@multiplicand+1,w
 15590     1F8A  3DF5               	addwfc	___wmul@product+1,f
 15591     1F8B                     i1l1227:
 15592     1F8B  3001               	movlw	1
 15593     1F8C                     u326_25:
 15594     1F8C  35F2               	lslf	___wmul@multiplicand,f
 15595     1F8D  0DF3               	rlf	___wmul@multiplicand+1,f
 15596     1F8E  0B89               	decfsz	9,f
 15597     1F8F  2F8C               	goto	u326_25
 15598     1F90                     i1l4310:
 15599     1F90  3001               	movlw	1
 15600     1F91                     u327_25:
 15601     1F91  36F1               	lsrf	___wmul@multiplier+1,f
 15602     1F92  0CF0               	rrf	___wmul@multiplier,f
 15603     1F93  0B89               	decfsz	9,f
 15604     1F94  2F91               	goto	u327_25
 15605     1F95                     i1l4312:
 15606     1F95  0870               	movf	___wmul@multiplier,w
 15607     1F96  0471               	iorwf	___wmul@multiplier+1,w
 15608     1F97  1D03               	btfss	3,2
 15609     1F98  2F9A               	goto	u328_21
 15610     1F99  2F9B               	goto	u328_20
 15611     1F9A                     u328_21:
 15612     1F9A  2F83               	goto	i1l4306
 15613     1F9B                     u328_20:
 15614     1F9B                     i1l4314:
 15615     1F9B  0875               	movf	___wmul@product+1,w
 15616     1F9C  00F1               	movwf	?___wmul+1
 15617     1F9D  0874               	movf	___wmul@product,w
 15618     1F9E  00F0               	movwf	?___wmul
 15619     1F9F                     i1l1229:
 15620     1F9F  0008               	return
 15621     1FA0                     __end_of___wmul:
 15622                           
 15623                           	psect	text74
 15624     0083                     __ptext74:	
 15625 ;; *************** function _efgtoa *****************
 15626 ;; Defined at:
 15627 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;  fp              1    wreg     PTR struct _IO_FILE
 15630 ;;		 -> sprintf@f(11), 
 15631 ;;  f               4    0[BANK1 ] PTR struct _IO_FILE
 15632 ;;  c               1    4[BANK1 ] unsigned char 
 15633 ;; Auto vars:     Size  Location     Type
 15634 ;;  fp              1   24[BANK1 ] PTR struct _IO_FILE
 15635 ;;		 -> sprintf@f(11), 
 15636 ;;  u               4   50[BANK1 ] struct flui
 15637 ;;  g               4   46[BANK1 ] struct flui
 15638 ;;  l               4   39[BANK1 ] struct flui
 15639 ;;  h               4   35[BANK1 ] struct flui
 15640 ;;  ou              4   29[BANK1 ] struct flui
 15641 ;;  n               2   44[BANK1 ] int 
 15642 ;;  i               2   33[BANK1 ] int 
 15643 ;;  w               2   27[BANK1 ] int 
 15644 ;;  e               2   25[BANK1 ] int 
 15645 ;;  m               2   22[BANK1 ] int 
 15646 ;;  d               2   20[BANK1 ] int 
 15647 ;;  t               2   13[BANK1 ] int 
 15648 ;;  p               2   11[BANK1 ] int 
 15649 ;;  ne              2    9[BANK1 ] int 
 15650 ;;  sign            1   43[BANK1 ] unsigned char 
 15651 ;;  nmode           1   19[BANK1 ] unsigned char 
 15652 ;;  mode            1   18[BANK1 ] unsigned char 
 15653 ;;  pp              1   17[BANK1 ] unsigned char 
 15654 ;;  esign           1    0        unsigned char 
 15655 ;; Return value:  Size  Location     Type
 15656 ;;                  1    wreg      void 
 15657 ;; Registers used:
 15658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15659 ;; Tracked objects:
 15660 ;;		On entry : 0/0
 15661 ;;		On exit  : 0/0
 15662 ;;		Unchanged: 0/0
 15663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15664 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 15665 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0
 15666 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15667 ;;      Totals:         0       0      54       0       0       0       0       0       0       0       0       0       
      +0       0
 15668 ;;Total ram usage:       54 bytes
 15669 ;; Hardware stack levels used: 1
 15670 ;; Hardware stack levels required when called: 4
 15671 ;; This function calls:
 15672 ;;		___fladd
 15673 ;;		___fldiv
 15674 ;;		___fleq
 15675 ;;		___flge
 15676 ;;		___flmul
 15677 ;;		___flneg
 15678 ;;		___flsub
 15679 ;;		___fltol
 15680 ;;		___fpclassifyf
 15681 ;;		_floorf
 15682 ;;		_labs
 15683 ;;		_memcpy
 15684 ;;		_pad
 15685 ;;		_strcpy
 15686 ;; This function is called by:
 15687 ;;		_vfpfcnvrt
 15688 ;; This function uses a non-reentrant model
 15689 ;;
 15690                           
 15691     0083                     _efgtoa:	
 15692                           ;psect for function _efgtoa
 15693                           
 15694                           
 15695                           ;incstack = 0
 15696                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15697                           ;efgtoa@fp stored from wreg
 15698     0083  0021               	movlb	1	; select bank1
 15699     0084  00B8               	movwf	efgtoa@fp^(0+128)
 15700     0085                     i1l4768:
 15701                           
 15702                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 15703     0085  01CB               	clrf	efgtoa@sign^(0+128)
 15704     0086                     i1l4770:
 15705                           
 15706                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 15707     0086  0823               	movf	(efgtoa@f+3)^(0+128),w
 15708     0087  00D1               	movwf	(efgtoa@g+3)^(0+128)
 15709     0088  0822               	movf	(efgtoa@f+2)^(0+128),w
 15710     0089  00D0               	movwf	(efgtoa@g+2)^(0+128)
 15711     008A  0821               	movf	(efgtoa@f+1)^(0+128),w
 15712     008B  00CF               	movwf	(efgtoa@g+1)^(0+128)
 15713     008C  0820               	movf	efgtoa@f^(0+128),w
 15714     008D  00CE               	movwf	efgtoa@g^(0+128)
 15715     008E                     i1l4772:
 15716                           
 15717                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 15718     008E  0851               	movf	(efgtoa@g+3)^(0+128),w
 15719     008F  0020               	movlb	0	; select bank0
 15720     0090  00C3               	movwf	___flge@ff1+3
 15721     0091  0021               	movlb	1	; select bank1
 15722     0092  0850               	movf	(efgtoa@g+2)^(0+128),w
 15723     0093  0020               	movlb	0	; select bank0
 15724     0094  00C2               	movwf	___flge@ff1+2
 15725     0095  0021               	movlb	1	; select bank1
 15726     0096  084F               	movf	(efgtoa@g+1)^(0+128),w
 15727     0097  0020               	movlb	0	; select bank0
 15728     0098  00C1               	movwf	___flge@ff1+1
 15729     0099  0021               	movlb	1	; select bank1
 15730     009A  084E               	movf	efgtoa@g^(0+128),w
 15731     009B  0020               	movlb	0	; select bank0
 15732     009C  00C0               	movwf	___flge@ff1
 15733     009D  3000               	movlw	0
 15734     009E  00C7               	movwf	___flge@ff2+3
 15735     009F  3000               	movlw	0
 15736     00A0  00C6               	movwf	___flge@ff2+2
 15737     00A1  3000               	movlw	0
 15738     00A2  00C5               	movwf	___flge@ff2+1
 15739     00A3  3000               	movlw	0
 15740     00A4  00C4               	movwf	___flge@ff2
 15741     00A5  3195  253A  3180   	fcall	___flge
 15742     00A8  1803               	btfsc	3,0
 15743     00A9  28AB               	goto	u427_21
 15744     00AA  28AC               	goto	u427_20
 15745     00AB                     u427_21:
 15746     00AB  28C3               	goto	i1l4778
 15747     00AC                     u427_20:
 15748     00AC                     i1l4774:
 15749                           
 15750                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 15751     00AC  0021               	movlb	1	; select bank1
 15752     00AD  01CB               	clrf	efgtoa@sign^(0+128)
 15753     00AE  0ACB               	incf	efgtoa@sign^(0+128),f
 15754     00AF                     i1l4776:
 15755                           
 15756                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 15757     00AF  0851               	movf	(efgtoa@g+3)^(0+128),w
 15758     00B0  00F3               	movwf	___flneg@f1+3
 15759     00B1  0850               	movf	(efgtoa@g+2)^(0+128),w
 15760     00B2  00F2               	movwf	___flneg@f1+2
 15761     00B3  084F               	movf	(efgtoa@g+1)^(0+128),w
 15762     00B4  00F1               	movwf	___flneg@f1+1
 15763     00B5  084E               	movf	efgtoa@g^(0+128),w
 15764     00B6  00F0               	movwf	___flneg@f1
 15765     00B7  319D  25AB  3180   	fcall	___flneg
 15766     00BA  0873               	movf	?___flneg+3,w
 15767     00BB  0021               	movlb	1	; select bank1
 15768     00BC  00D1               	movwf	(efgtoa@g+3)^(0+128)
 15769     00BD  0872               	movf	?___flneg+2,w
 15770     00BE  00D0               	movwf	(efgtoa@g+2)^(0+128)
 15771     00BF  0871               	movf	?___flneg+1,w
 15772     00C0  00CF               	movwf	(efgtoa@g+1)^(0+128)
 15773     00C1  0870               	movf	?___flneg,w
 15774     00C2  00CE               	movwf	efgtoa@g^(0+128)
 15775     00C3                     i1l4778:
 15776                           
 15777                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 15778     00C3  0021               	movlb	1	; select bank1
 15779     00C4  01CC               	clrf	efgtoa@n^(0+128)
 15780     00C5  01CD               	clrf	(efgtoa@n+1)^(0+128)
 15781     00C6                     i1l4780:
 15782                           
 15783                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 15784     00C6  0022               	movlb	2	; select bank2
 15785     00C7  0856               	movf	(_width+1)^(0+256),w
 15786     00C8  0021               	movlb	1	; select bank1
 15787     00C9  00BC               	movwf	(efgtoa@w+1)^(0+128)
 15788     00CA  0022               	movlb	2	; select bank2
 15789     00CB  0855               	movf	_width^(0+256),w
 15790     00CC  0021               	movlb	1	; select bank1
 15791     00CD  00BB               	movwf	efgtoa@w^(0+128)
 15792     00CE                     i1l4782:
 15793                           
 15794                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
 15795     00CE  084B               	movf	efgtoa@sign^(0+128),w
 15796     00CF  1903               	btfsc	3,2
 15797     00D0  28D2               	goto	u428_21
 15798     00D1  28D3               	goto	u428_20
 15799     00D2                     u428_21:
 15800     00D2  28E3               	goto	i1l4790
 15801     00D3                     u428_20:
 15802     00D3                     i1l4784:
 15803                           
 15804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 15805     00D3  084B               	movf	efgtoa@sign^(0+128),w
 15806     00D4  1D03               	btfss	3,2
 15807     00D5  28D7               	goto	u429_21
 15808     00D6  28D8               	goto	u429_20
 15809     00D7                     u429_21:
 15810     00D7  28DD               	goto	i1l4788
 15811     00D8                     u429_20:
 15812     00D8                     i1l4786:
 15813     00D8  302B               	movlw	43
 15814     00D9  00AF               	movwf	_efgtoa$3140^(0+128)
 15815     00DA  3000               	movlw	0
 15816     00DB  00B0               	movwf	(_efgtoa$3140^(0+128)+1)
 15817     00DC  28E1               	goto	i1l1729
 15818     00DD                     i1l4788:
 15819     00DD  302D               	movlw	45
 15820     00DE  00AF               	movwf	_efgtoa$3140^(0+128)
 15821     00DF  3000               	movlw	0
 15822     00E0  00B0               	movwf	(_efgtoa$3140^(0+128)+1)
 15823     00E1                     i1l1729:
 15824     00E1  082F               	movf	_efgtoa$3140^(0+128),w
 15825     00E2  00CB               	movwf	efgtoa@sign^(0+128)
 15826     00E3                     i1l4790:
 15827                           
 15828                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 15829     00E3  0851               	movf	(efgtoa@g+3)^(0+128),w
 15830     00E4  00F3               	movwf	___fpclassifyf@x+3
 15831     00E5  0850               	movf	(efgtoa@g+2)^(0+128),w
 15832     00E6  00F2               	movwf	___fpclassifyf@x+2
 15833     00E7  084F               	movf	(efgtoa@g+1)^(0+128),w
 15834     00E8  00F1               	movwf	___fpclassifyf@x+1
 15835     00E9  084E               	movf	efgtoa@g^(0+128),w
 15836     00EA  00F0               	movwf	___fpclassifyf@x
 15837     00EB  3194  243A  3180   	fcall	___fpclassifyf
 15838     00EE  0370               	decf	?___fpclassifyf,w
 15839     00EF  0471               	iorwf	?___fpclassifyf+1,w
 15840     00F0  1D03               	btfss	3,2
 15841     00F1  28F3               	goto	u430_21
 15842     00F2  28F4               	goto	u430_20
 15843     00F3                     u430_21:
 15844     00F3  291F               	goto	i1l4802
 15845     00F4                     u430_20:
 15846     00F4                     i1l4792:
 15847                           
 15848                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 15849     00F4  0021               	movlb	1	; select bank1
 15850     00F5  084B               	movf	efgtoa@sign^(0+128),w
 15851     00F6  1903               	btfsc	3,2
 15852     00F7  28F9               	goto	u431_21
 15853     00F8  28FA               	goto	u431_20
 15854     00F9                     u431_21:
 15855     00F9  2906               	goto	i1l4796
 15856     00FA                     u431_20:
 15857     00FA                     i1l4794:
 15858                           
 15859                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 15860     00FA  084B               	movf	efgtoa@sign^(0+128),w
 15861     00FB  0024               	movlb	4	; select bank4
 15862     00FC  00A0               	movwf	_dbuf^(0+512)
 15863                           
 15864                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
 15865     00FD  30FF               	movlw	255
 15866     00FE  0021               	movlb	1	; select bank1
 15867     00FF  07BB               	addwf	efgtoa@w^(0+128),f
 15868     0100  30FF               	movlw	255
 15869     0101  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 15870                           
 15871                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 15872     0102  3001               	movlw	1
 15873     0103  00CC               	movwf	efgtoa@n^(0+128)
 15874     0104  3000               	movlw	0
 15875     0105  00CD               	movwf	(efgtoa@n^(0+128)+1)
 15876     0106                     i1l4796:
 15877                           
 15878                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 15879     0106  30E0               	movlw	low (STR_9| (0+32768))
 15880     0107  00F0               	movwf	strcpy@src
 15881     0108  3098               	movlw	high (STR_9| (0+32768))
 15882     0109  00F1               	movwf	strcpy@src+1
 15883     010A  084C               	movf	efgtoa@n^(0+128),w
 15884     010B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 15885     010C  319F  272E  3180   	fcall	_strcpy
 15886     010F                     i1l4798:
 15887                           
 15888                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 15889     010F  30FD               	movlw	253
 15890     0110  0021               	movlb	1	; select bank1
 15891     0111  07BB               	addwf	efgtoa@w^(0+128),f
 15892     0112  30FF               	movlw	255
 15893     0113  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 15894                           
 15895                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 15896     0114  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 15897     0115  00FB               	movwf	pad@buf
 15898     0116  083C               	movf	(efgtoa@w+1)^(0+128),w
 15899     0117  00FD               	movwf	pad@p+1
 15900     0118  083B               	movf	efgtoa@w^(0+128),w
 15901     0119  00FC               	movwf	pad@p
 15902     011A  0838               	movf	efgtoa@fp^(0+128),w
 15903     011B  3191  2163  3180   	fcall	_pad
 15904     011E  2EA8               	goto	i1l1732
 15905     011F                     i1l4802:
 15906                           
 15907                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 15908     011F  0021               	movlb	1	; select bank1
 15909     0120  0851               	movf	(efgtoa@g+3)^(0+128),w
 15910     0121  00F3               	movwf	___fpclassifyf@x+3
 15911     0122  0850               	movf	(efgtoa@g+2)^(0+128),w
 15912     0123  00F2               	movwf	___fpclassifyf@x+2
 15913     0124  084F               	movf	(efgtoa@g+1)^(0+128),w
 15914     0125  00F1               	movwf	___fpclassifyf@x+1
 15915     0126  084E               	movf	efgtoa@g^(0+128),w
 15916     0127  00F0               	movwf	___fpclassifyf@x
 15917     0128  3194  243A  3180   	fcall	___fpclassifyf
 15918     012B  0870               	movf	?___fpclassifyf,w
 15919     012C  0471               	iorwf	?___fpclassifyf+1,w
 15920     012D  1D03               	btfss	3,2
 15921     012E  2930               	goto	u432_21
 15922     012F  2931               	goto	u432_20
 15923     0130                     u432_21:
 15924     0130  295C               	goto	i1l4814
 15925     0131                     u432_20:
 15926     0131                     i1l4804:
 15927                           
 15928                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 15929     0131  0021               	movlb	1	; select bank1
 15930     0132  084B               	movf	efgtoa@sign^(0+128),w
 15931     0133  1903               	btfsc	3,2
 15932     0134  2936               	goto	u433_21
 15933     0135  2937               	goto	u433_20
 15934     0136                     u433_21:
 15935     0136  2943               	goto	i1l4808
 15936     0137                     u433_20:
 15937     0137                     i1l4806:
 15938                           
 15939                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 15940     0137  084B               	movf	efgtoa@sign^(0+128),w
 15941     0138  0024               	movlb	4	; select bank4
 15942     0139  00A0               	movwf	_dbuf^(0+512)
 15943                           
 15944                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
 15945     013A  30FF               	movlw	255
 15946     013B  0021               	movlb	1	; select bank1
 15947     013C  07BB               	addwf	efgtoa@w^(0+128),f
 15948     013D  30FF               	movlw	255
 15949     013E  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 15950                           
 15951                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 15952     013F  3001               	movlw	1
 15953     0140  00CC               	movwf	efgtoa@n^(0+128)
 15954     0141  3000               	movlw	0
 15955     0142  00CD               	movwf	(efgtoa@n^(0+128)+1)
 15956     0143                     i1l4808:
 15957                           
 15958                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 15959     0143  30E4               	movlw	low (STR_12| (0+32768))
 15960     0144  00F0               	movwf	strcpy@src
 15961     0145  3098               	movlw	high (STR_12| (0+32768))
 15962     0146  00F1               	movwf	strcpy@src+1
 15963     0147  084C               	movf	efgtoa@n^(0+128),w
 15964     0148  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 15965     0149  319F  272E  3180   	fcall	_strcpy
 15966     014C                     i1l4810:
 15967                           
 15968                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 651:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 652:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
 15969     014C  30FD               	movlw	253
 15970     014D  0021               	movlb	1	; select bank1
 15971     014E  07BB               	addwf	efgtoa@w^(0+128),f
 15972     014F  30FF               	movlw	255
 15973     0150  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 15974                           
 15975                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 653:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 15976     0151  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 15977     0152  00FB               	movwf	pad@buf
 15978     0153  083C               	movf	(efgtoa@w+1)^(0+128),w
 15979     0154  00FD               	movwf	pad@p+1
 15980     0155  083B               	movf	efgtoa@w^(0+128),w
 15981     0156  00FC               	movwf	pad@p
 15982     0157  0838               	movf	efgtoa@fp^(0+128),w
 15983     0158  3191  2163  3180   	fcall	_pad
 15984     015B  2EA8               	goto	i1l1732
 15985     015C                     i1l4814:
 15986                           
 15987                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 15988     015C  303F               	movlw	63
 15989     015D  0021               	movlb	1	; select bank1
 15990     015E  00D5               	movwf	(efgtoa@u+3)^(0+128)
 15991     015F  3080               	movlw	128
 15992     0160  00D4               	movwf	(efgtoa@u+2)^(0+128)
 15993     0161  3000               	movlw	0
 15994     0162  00D3               	movwf	(efgtoa@u+1)^(0+128)
 15995     0163  3000               	movlw	0
 15996     0164  00D2               	movwf	efgtoa@u^(0+128)
 15997     0165                     i1l4816:
 15998                           
 15999                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 16000     0165  01B9               	clrf	efgtoa@e^(0+128)
 16001     0166  01BA               	clrf	(efgtoa@e+1)^(0+128)
 16002     0167                     i1l4818:
 16003                           
 16004                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 16005     0167  0851               	movf	(efgtoa@g+3)^(0+128),w
 16006     0168  00F3               	movwf	___fleq@ff1+3
 16007     0169  0850               	movf	(efgtoa@g+2)^(0+128),w
 16008     016A  00F2               	movwf	___fleq@ff1+2
 16009     016B  084F               	movf	(efgtoa@g+1)^(0+128),w
 16010     016C  00F1               	movwf	___fleq@ff1+1
 16011     016D  084E               	movf	efgtoa@g^(0+128),w
 16012     016E  00F0               	movwf	___fleq@ff1
 16013     016F  3000               	movlw	0
 16014     0170  00F7               	movwf	___fleq@ff2+3
 16015     0171  3000               	movlw	0
 16016     0172  00F6               	movwf	___fleq@ff2+2
 16017     0173  3000               	movlw	0
 16018     0174  00F5               	movwf	___fleq@ff2+1
 16019     0175  3000               	movlw	0
 16020     0176  00F4               	movwf	___fleq@ff2
 16021     0177  3192  224D  3180   	fcall	___fleq
 16022     017A  1803               	btfsc	3,0
 16023     017B  297D               	goto	u434_21
 16024     017C  297E               	goto	u434_20
 16025     017D                     u434_21:
 16026     017D  2ABA               	goto	i1l4844
 16027     017E                     u434_20:
 16028     017E  298C               	goto	i1l4824
 16029     017F                     i1l4822:
 16030                           
 16031                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 16032     017F  0021               	movlb	1	; select bank1
 16033     0180  0840               	movf	(efgtoa@ou+3)^(0+128),w
 16034     0181  00D5               	movwf	(efgtoa@u+3)^(0+128)
 16035     0182  083F               	movf	(efgtoa@ou+2)^(0+128),w
 16036     0183  00D4               	movwf	(efgtoa@u+2)^(0+128)
 16037     0184  083E               	movf	(efgtoa@ou+1)^(0+128),w
 16038     0185  00D3               	movwf	(efgtoa@u+1)^(0+128)
 16039     0186  083D               	movf	efgtoa@ou^(0+128),w
 16040     0187  00D2               	movwf	efgtoa@u^(0+128)
 16041                           
 16042                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
 16043     0188  3001               	movlw	1
 16044     0189  07B9               	addwf	efgtoa@e^(0+128),f
 16045     018A  3000               	movlw	0
 16046     018B  3DBA               	addwfc	(efgtoa@e+1)^(0+128),f
 16047     018C                     i1l4824:
 16048                           
 16049                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 16050     018C  3041               	movlw	65
 16051     018D  0020               	movlb	0	; select bank0
 16052     018E  00A9               	movwf	___flmul@b+3
 16053     018F  3020               	movlw	32
 16054     0190  00A8               	movwf	___flmul@b+2
 16055     0191  3000               	movlw	0
 16056     0192  00A7               	movwf	___flmul@b+1
 16057     0193  3000               	movlw	0
 16058     0194  00A6               	movwf	___flmul@b
 16059     0195  0021               	movlb	1	; select bank1
 16060     0196  0855               	movf	(efgtoa@u+3)^(0+128),w
 16061     0197  0020               	movlb	0	; select bank0
 16062     0198  00AD               	movwf	___flmul@a+3
 16063     0199  0021               	movlb	1	; select bank1
 16064     019A  0854               	movf	(efgtoa@u+2)^(0+128),w
 16065     019B  0020               	movlb	0	; select bank0
 16066     019C  00AC               	movwf	___flmul@a+2
 16067     019D  0021               	movlb	1	; select bank1
 16068     019E  0853               	movf	(efgtoa@u+1)^(0+128),w
 16069     019F  0020               	movlb	0	; select bank0
 16070     01A0  00AB               	movwf	___flmul@a+1
 16071     01A1  0021               	movlb	1	; select bank1
 16072     01A2  0852               	movf	efgtoa@u^(0+128),w
 16073     01A3  0020               	movlb	0	; select bank0
 16074     01A4  00AA               	movwf	___flmul@a
 16075     01A5  318D  25C5  3180   	fcall	___flmul
 16076     01A8  0020               	movlb	0	; select bank0
 16077     01A9  0829               	movf	?___flmul+3,w
 16078     01AA  0021               	movlb	1	; select bank1
 16079     01AB  00C0               	movwf	(efgtoa@ou+3)^(0+128)
 16080     01AC  0020               	movlb	0	; select bank0
 16081     01AD  0828               	movf	?___flmul+2,w
 16082     01AE  0021               	movlb	1	; select bank1
 16083     01AF  00BF               	movwf	(efgtoa@ou+2)^(0+128)
 16084     01B0  0020               	movlb	0	; select bank0
 16085     01B1  0827               	movf	?___flmul+1,w
 16086     01B2  0021               	movlb	1	; select bank1
 16087     01B3  00BE               	movwf	(efgtoa@ou+1)^(0+128)
 16088     01B4  0020               	movlb	0	; select bank0
 16089     01B5  0826               	movf	?___flmul,w
 16090     01B6  0021               	movlb	1	; select bank1
 16091     01B7  00BD               	movwf	efgtoa@ou^(0+128)
 16092     01B8                     i1l4826:
 16093     01B8  083D               	movf	efgtoa@ou^(0+128),w
 16094     01B9  024E               	subwf	efgtoa@g^(0+128),w
 16095     01BA  00A5               	movwf	??_efgtoa^(0+128)
 16096     01BB  083E               	movf	(efgtoa@ou+1)^(0+128),w
 16097     01BC  3B4F               	subwfb	(efgtoa@g+1)^(0+128),w
 16098     01BD  00A6               	movwf	(??_efgtoa^(0+128)+1)
 16099     01BE  083F               	movf	(efgtoa@ou+2)^(0+128),w
 16100     01BF  3B50               	subwfb	(efgtoa@g+2)^(0+128),w
 16101     01C0  00A7               	movwf	(??_efgtoa^(0+128)+2)
 16102     01C1  0840               	movf	(efgtoa@ou+3)^(0+128),w
 16103     01C2  3B51               	subwfb	(efgtoa@g+3)^(0+128),w
 16104     01C3  00A8               	movwf	(??_efgtoa^(0+128)+3)
 16105     01C4  0828               	movf	(??_efgtoa+3)^(0+128),w
 16106     01C5  00F3               	movwf	labs@a+3
 16107     01C6  0827               	movf	(??_efgtoa+2)^(0+128),w
 16108     01C7  00F2               	movwf	labs@a+2
 16109     01C8  0826               	movf	(??_efgtoa+1)^(0+128),w
 16110     01C9  00F1               	movwf	labs@a+1
 16111     01CA  0825               	movf	??_efgtoa^(0+128),w
 16112     01CB  00F0               	movwf	labs@a
 16113     01CC  319E  2690  3180   	fcall	_labs
 16114     01CF  1BF3               	btfsc	?_labs+3,7
 16115     01D0  29DF               	goto	u435_21
 16116     01D1  0873               	movf	?_labs+3,w
 16117     01D2  1D03               	btfss	3,2
 16118     01D3  29E0               	goto	u435_20
 16119     01D4  0872               	movf	?_labs+2,w
 16120     01D5  1D03               	btfss	3,2
 16121     01D6  29E0               	goto	u435_20
 16122     01D7  0871               	movf	?_labs+1,w
 16123     01D8  1D03               	btfss	3,2
 16124     01D9  29E0               	goto	u435_20
 16125     01DA  3002               	movlw	2
 16126     01DB  0270               	subwf	?_labs,w
 16127     01DC  1C03               	btfss	3,0
 16128     01DD  29DF               	goto	u435_21
 16129     01DE  29E0               	goto	u435_20
 16130     01DF                     u435_21:
 16131     01DF  297F               	goto	i1l4822
 16132     01E0                     u435_20:
 16133     01E0                     i1l4828:
 16134     01E0  0021               	movlb	1	; select bank1
 16135     01E1  0840               	movf	(efgtoa@ou+3)^(0+128),w
 16136     01E2  0020               	movlb	0	; select bank0
 16137     01E3  00C3               	movwf	___flge@ff1+3
 16138     01E4  0021               	movlb	1	; select bank1
 16139     01E5  083F               	movf	(efgtoa@ou+2)^(0+128),w
 16140     01E6  0020               	movlb	0	; select bank0
 16141     01E7  00C2               	movwf	___flge@ff1+2
 16142     01E8  0021               	movlb	1	; select bank1
 16143     01E9  083E               	movf	(efgtoa@ou+1)^(0+128),w
 16144     01EA  0020               	movlb	0	; select bank0
 16145     01EB  00C1               	movwf	___flge@ff1+1
 16146     01EC  0021               	movlb	1	; select bank1
 16147     01ED  083D               	movf	efgtoa@ou^(0+128),w
 16148     01EE  0020               	movlb	0	; select bank0
 16149     01EF  00C0               	movwf	___flge@ff1
 16150     01F0  0021               	movlb	1	; select bank1
 16151     01F1  0851               	movf	(efgtoa@g+3)^(0+128),w
 16152     01F2  0020               	movlb	0	; select bank0
 16153     01F3  00C7               	movwf	___flge@ff2+3
 16154     01F4  0021               	movlb	1	; select bank1
 16155     01F5  0850               	movf	(efgtoa@g+2)^(0+128),w
 16156     01F6  0020               	movlb	0	; select bank0
 16157     01F7  00C6               	movwf	___flge@ff2+2
 16158     01F8  0021               	movlb	1	; select bank1
 16159     01F9  084F               	movf	(efgtoa@g+1)^(0+128),w
 16160     01FA  0020               	movlb	0	; select bank0
 16161     01FB  00C5               	movwf	___flge@ff2+1
 16162     01FC  0021               	movlb	1	; select bank1
 16163     01FD  084E               	movf	efgtoa@g^(0+128),w
 16164     01FE  0020               	movlb	0	; select bank0
 16165     01FF  00C4               	movwf	___flge@ff2
 16166     0200  3195  253A  3180   	fcall	___flge
 16167     0203  1C03               	btfss	3,0
 16168     0204  2A06               	goto	u436_21
 16169     0205  2A07               	goto	u436_20
 16170     0206                     u436_21:
 16171     0206  297F               	goto	i1l4822
 16172     0207                     u436_20:
 16173     0207                     i1l4830:
 16174                           
 16175                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 16176     0207  0021               	movlb	1	; select bank1
 16177     0208  0852               	movf	efgtoa@u^(0+128),w
 16178     0209  024E               	subwf	efgtoa@g^(0+128),w
 16179     020A  00A5               	movwf	??_efgtoa^(0+128)
 16180     020B  0853               	movf	(efgtoa@u+1)^(0+128),w
 16181     020C  3B4F               	subwfb	(efgtoa@g+1)^(0+128),w
 16182     020D  00A6               	movwf	(??_efgtoa^(0+128)+1)
 16183     020E  0854               	movf	(efgtoa@u+2)^(0+128),w
 16184     020F  3B50               	subwfb	(efgtoa@g+2)^(0+128),w
 16185     0210  00A7               	movwf	(??_efgtoa^(0+128)+2)
 16186     0211  0855               	movf	(efgtoa@u+3)^(0+128),w
 16187     0212  3B51               	subwfb	(efgtoa@g+3)^(0+128),w
 16188     0213  00A8               	movwf	(??_efgtoa^(0+128)+3)
 16189     0214  0828               	movf	(??_efgtoa+3)^(0+128),w
 16190     0215  00F3               	movwf	labs@a+3
 16191     0216  0827               	movf	(??_efgtoa+2)^(0+128),w
 16192     0217  00F2               	movwf	labs@a+2
 16193     0218  0826               	movf	(??_efgtoa+1)^(0+128),w
 16194     0219  00F1               	movwf	labs@a+1
 16195     021A  0825               	movf	??_efgtoa^(0+128),w
 16196     021B  00F0               	movwf	labs@a
 16197     021C  319E  2690  3180   	fcall	_labs
 16198     021F  1BF3               	btfsc	?_labs+3,7
 16199     0220  2A30               	goto	u437_20
 16200     0221  0873               	movf	?_labs+3,w
 16201     0222  1D03               	btfss	3,2
 16202     0223  2A2F               	goto	u437_21
 16203     0224  0872               	movf	?_labs+2,w
 16204     0225  1D03               	btfss	3,2
 16205     0226  2A2F               	goto	u437_21
 16206     0227  0871               	movf	?_labs+1,w
 16207     0228  1D03               	btfss	3,2
 16208     0229  2A2F               	goto	u437_21
 16209     022A  3002               	movlw	2
 16210     022B  0270               	subwf	?_labs,w
 16211     022C  1803               	btfsc	3,0
 16212     022D  2A2F               	goto	u437_21
 16213     022E  2A30               	goto	u437_20
 16214     022F                     u437_21:
 16215     022F  2A93               	goto	i1l4842
 16216     0230                     u437_20:
 16217     0230                     i1l4832:
 16218                           
 16219                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
 16220     0230  0021               	movlb	1	; select bank1
 16221     0231  0855               	movf	(efgtoa@u+3)^(0+128),w
 16222     0232  00D1               	movwf	(efgtoa@g+3)^(0+128)
 16223     0233  0854               	movf	(efgtoa@u+2)^(0+128),w
 16224     0234  00D0               	movwf	(efgtoa@g+2)^(0+128)
 16225     0235  0853               	movf	(efgtoa@u+1)^(0+128),w
 16226     0236  00CF               	movwf	(efgtoa@g+1)^(0+128)
 16227     0237  0852               	movf	efgtoa@u^(0+128),w
 16228     0238  00CE               	movwf	efgtoa@g^(0+128)
 16229                           
 16230                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
 16231     0239  2ABA               	goto	i1l4844
 16232     023A                     i1l4834:
 16233                           
 16234                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 16235     023A  3041               	movlw	65
 16236     023B  0020               	movlb	0	; select bank0
 16237     023C  00C3               	movwf	___fldiv@a+3
 16238     023D  3020               	movlw	32
 16239     023E  00C2               	movwf	___fldiv@a+2
 16240     023F  3000               	movlw	0
 16241     0240  00C1               	movwf	___fldiv@a+1
 16242     0241  3000               	movlw	0
 16243     0242  00C0               	movwf	___fldiv@a
 16244     0243  0021               	movlb	1	; select bank1
 16245     0244  0855               	movf	(efgtoa@u+3)^(0+128),w
 16246     0245  0020               	movlb	0	; select bank0
 16247     0246  00C7               	movwf	___fldiv@b+3
 16248     0247  0021               	movlb	1	; select bank1
 16249     0248  0854               	movf	(efgtoa@u+2)^(0+128),w
 16250     0249  0020               	movlb	0	; select bank0
 16251     024A  00C6               	movwf	___fldiv@b+2
 16252     024B  0021               	movlb	1	; select bank1
 16253     024C  0853               	movf	(efgtoa@u+1)^(0+128),w
 16254     024D  0020               	movlb	0	; select bank0
 16255     024E  00C5               	movwf	___fldiv@b+1
 16256     024F  0021               	movlb	1	; select bank1
 16257     0250  0852               	movf	efgtoa@u^(0+128),w
 16258     0251  0020               	movlb	0	; select bank0
 16259     0252  00C4               	movwf	___fldiv@b
 16260     0253  3188  2057  3180   	fcall	___fldiv
 16261     0256  0020               	movlb	0	; select bank0
 16262     0257  0843               	movf	?___fldiv+3,w
 16263     0258  0021               	movlb	1	; select bank1
 16264     0259  00D5               	movwf	(efgtoa@u+3)^(0+128)
 16265     025A  0020               	movlb	0	; select bank0
 16266     025B  0842               	movf	?___fldiv+2,w
 16267     025C  0021               	movlb	1	; select bank1
 16268     025D  00D4               	movwf	(efgtoa@u+2)^(0+128)
 16269     025E  0020               	movlb	0	; select bank0
 16270     025F  0841               	movf	?___fldiv+1,w
 16271     0260  0021               	movlb	1	; select bank1
 16272     0261  00D3               	movwf	(efgtoa@u+1)^(0+128)
 16273     0262  0020               	movlb	0	; select bank0
 16274     0263  0840               	movf	?___fldiv,w
 16275     0264  0021               	movlb	1	; select bank1
 16276     0265  00D2               	movwf	efgtoa@u^(0+128)
 16277     0266                     i1l4836:
 16278                           
 16279                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
 16280     0266  30FF               	movlw	255
 16281     0267  07B9               	addwf	efgtoa@e^(0+128),f
 16282     0268  30FF               	movlw	255
 16283     0269  3DBA               	addwfc	(efgtoa@e+1)^(0+128),f
 16284     026A                     i1l4838:
 16285                           
 16286                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 16287     026A  0852               	movf	efgtoa@u^(0+128),w
 16288     026B  024E               	subwf	efgtoa@g^(0+128),w
 16289     026C  00A5               	movwf	??_efgtoa^(0+128)
 16290     026D  0853               	movf	(efgtoa@u+1)^(0+128),w
 16291     026E  3B4F               	subwfb	(efgtoa@g+1)^(0+128),w
 16292     026F  00A6               	movwf	(??_efgtoa^(0+128)+1)
 16293     0270  0854               	movf	(efgtoa@u+2)^(0+128),w
 16294     0271  3B50               	subwfb	(efgtoa@g+2)^(0+128),w
 16295     0272  00A7               	movwf	(??_efgtoa^(0+128)+2)
 16296     0273  0855               	movf	(efgtoa@u+3)^(0+128),w
 16297     0274  3B51               	subwfb	(efgtoa@g+3)^(0+128),w
 16298     0275  00A8               	movwf	(??_efgtoa^(0+128)+3)
 16299     0276  0828               	movf	(??_efgtoa+3)^(0+128),w
 16300     0277  00F3               	movwf	labs@a+3
 16301     0278  0827               	movf	(??_efgtoa+2)^(0+128),w
 16302     0279  00F2               	movwf	labs@a+2
 16303     027A  0826               	movf	(??_efgtoa+1)^(0+128),w
 16304     027B  00F1               	movwf	labs@a+1
 16305     027C  0825               	movf	??_efgtoa^(0+128),w
 16306     027D  00F0               	movwf	labs@a
 16307     027E  319E  2690  3180   	fcall	_labs
 16308     0281  1BF3               	btfsc	?_labs+3,7
 16309     0282  2A92               	goto	u438_20
 16310     0283  0873               	movf	?_labs+3,w
 16311     0284  1D03               	btfss	3,2
 16312     0285  2A91               	goto	u438_21
 16313     0286  0872               	movf	?_labs+2,w
 16314     0287  1D03               	btfss	3,2
 16315     0288  2A91               	goto	u438_21
 16316     0289  0871               	movf	?_labs+1,w
 16317     028A  1D03               	btfss	3,2
 16318     028B  2A91               	goto	u438_21
 16319     028C  3002               	movlw	2
 16320     028D  0270               	subwf	?_labs,w
 16321     028E  1803               	btfsc	3,0
 16322     028F  2A91               	goto	u438_21
 16323     0290  2A92               	goto	u438_20
 16324     0291                     u438_21:
 16325     0291  2A93               	goto	i1l4842
 16326     0292                     u438_20:
 16327     0292  2A30               	goto	i1l4832
 16328     0293                     i1l4842:
 16329                           
 16330                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 16331     0293  0021               	movlb	1	; select bank1
 16332     0294  0851               	movf	(efgtoa@g+3)^(0+128),w
 16333     0295  0020               	movlb	0	; select bank0
 16334     0296  00C3               	movwf	___flge@ff1+3
 16335     0297  0021               	movlb	1	; select bank1
 16336     0298  0850               	movf	(efgtoa@g+2)^(0+128),w
 16337     0299  0020               	movlb	0	; select bank0
 16338     029A  00C2               	movwf	___flge@ff1+2
 16339     029B  0021               	movlb	1	; select bank1
 16340     029C  084F               	movf	(efgtoa@g+1)^(0+128),w
 16341     029D  0020               	movlb	0	; select bank0
 16342     029E  00C1               	movwf	___flge@ff1+1
 16343     029F  0021               	movlb	1	; select bank1
 16344     02A0  084E               	movf	efgtoa@g^(0+128),w
 16345     02A1  0020               	movlb	0	; select bank0
 16346     02A2  00C0               	movwf	___flge@ff1
 16347     02A3  0021               	movlb	1	; select bank1
 16348     02A4  0855               	movf	(efgtoa@u+3)^(0+128),w
 16349     02A5  0020               	movlb	0	; select bank0
 16350     02A6  00C7               	movwf	___flge@ff2+3
 16351     02A7  0021               	movlb	1	; select bank1
 16352     02A8  0854               	movf	(efgtoa@u+2)^(0+128),w
 16353     02A9  0020               	movlb	0	; select bank0
 16354     02AA  00C6               	movwf	___flge@ff2+2
 16355     02AB  0021               	movlb	1	; select bank1
 16356     02AC  0853               	movf	(efgtoa@u+1)^(0+128),w
 16357     02AD  0020               	movlb	0	; select bank0
 16358     02AE  00C5               	movwf	___flge@ff2+1
 16359     02AF  0021               	movlb	1	; select bank1
 16360     02B0  0852               	movf	efgtoa@u^(0+128),w
 16361     02B1  0020               	movlb	0	; select bank0
 16362     02B2  00C4               	movwf	___flge@ff2
 16363     02B3  3195  253A  3180   	fcall	___flge
 16364     02B6  1C03               	btfss	3,0
 16365     02B7  2AB9               	goto	u439_21
 16366     02B8  2ABA               	goto	u439_20
 16367     02B9                     u439_21:
 16368     02B9  2A3A               	goto	i1l4834
 16369     02BA                     u439_20:
 16370     02BA                     i1l4844:
 16371                           
 16372                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 16373     02BA  0021               	movlb	1	; select bank1
 16374     02BB  0824               	movf	efgtoa@c^(0+128),w
 16375     02BC  00B2               	movwf	efgtoa@mode^(0+128)
 16376                           
 16377                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 16378     02BD  0832               	movf	efgtoa@mode^(0+128),w
 16379     02BE  00B3               	movwf	efgtoa@nmode^(0+128)
 16380     02BF                     i1l4846:
 16381                           
 16382                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 16383     02BF  0022               	movlb	2	; select bank2
 16384     02C0  1BD8               	btfsc	(_prec+1)^(0+256),7
 16385     02C1  2AC3               	goto	u440_21
 16386     02C2  2AC4               	goto	u440_20
 16387     02C3                     u440_21:
 16388     02C3  2ACC               	goto	i1l4850
 16389     02C4                     u440_20:
 16390     02C4                     i1l4848:
 16391     02C4  0858               	movf	(_prec+1)^(0+256),w
 16392     02C5  0021               	movlb	1	; select bank1
 16393     02C6  00AC               	movwf	(efgtoa@p+1)^(0+128)
 16394     02C7  0022               	movlb	2	; select bank2
 16395     02C8  0857               	movf	_prec^(0+256),w
 16396     02C9  0021               	movlb	1	; select bank1
 16397     02CA  00AB               	movwf	efgtoa@p^(0+128)
 16398     02CB  2AD1               	goto	i1l1748
 16399     02CC                     i1l4850:
 16400     02CC  3006               	movlw	6
 16401     02CD  0021               	movlb	1	; select bank1
 16402     02CE  00AB               	movwf	efgtoa@p^(0+128)
 16403     02CF  3000               	movlw	0
 16404     02D0  00AC               	movwf	(efgtoa@p^(0+128)+1)
 16405     02D1                     i1l1748:
 16406                           
 16407                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
 16408     02D1  082C               	movf	(efgtoa@p+1)^(0+128),w
 16409     02D2  00B7               	movwf	(efgtoa@m+1)^(0+128)
 16410     02D3  082B               	movf	efgtoa@p^(0+128),w
 16411     02D4  00B6               	movwf	efgtoa@m^(0+128)
 16412                           
 16413                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
 16414     02D5  3001               	movlw	1
 16415     02D6  07B6               	addwf	efgtoa@m^(0+128),f
 16416     02D7  3000               	movlw	0
 16417     02D8  3DB7               	addwfc	(efgtoa@m+1)^(0+128),f
 16418     02D9                     i1l4852:
 16419                           
 16420                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 16421     02D9  3066               	movlw	102
 16422     02DA  0633               	xorwf	efgtoa@nmode^(0+128),w
 16423     02DB  1D03               	btfss	3,2
 16424     02DC  2ADE               	goto	u441_21
 16425     02DD  2ADF               	goto	u441_20
 16426     02DE                     u441_21:
 16427     02DE  2AF7               	goto	i1l4864
 16428     02DF                     u441_20:
 16429     02DF                     i1l4854:
 16430                           
 16431                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 16432     02DF  1FBA               	btfss	(efgtoa@e+1)^(0+128),7
 16433     02E0  2AE2               	goto	u442_21
 16434     02E1  2AE3               	goto	u442_20
 16435     02E2                     u442_21:
 16436     02E2  2AED               	goto	i1l4860
 16437     02E3                     u442_20:
 16438     02E3                     i1l4856:
 16439                           
 16440                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 16441     02E3  303F               	movlw	63
 16442     02E4  00D5               	movwf	(efgtoa@u+3)^(0+128)
 16443     02E5  3080               	movlw	128
 16444     02E6  00D4               	movwf	(efgtoa@u+2)^(0+128)
 16445     02E7  3000               	movlw	0
 16446     02E8  00D3               	movwf	(efgtoa@u+1)^(0+128)
 16447     02E9  3000               	movlw	0
 16448     02EA  00D2               	movwf	efgtoa@u^(0+128)
 16449     02EB                     i1l4858:
 16450                           
 16451                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 16452     02EB  01B9               	clrf	efgtoa@e^(0+128)
 16453     02EC  01BA               	clrf	(efgtoa@e+1)^(0+128)
 16454     02ED                     i1l4860:
 16455                           
 16456                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 16457     02ED  3067               	movlw	103
 16458     02EE  0632               	xorwf	efgtoa@mode^(0+128),w
 16459     02EF  1903               	btfsc	3,2
 16460     02F0  2AF2               	goto	u443_21
 16461     02F1  2AF3               	goto	u443_20
 16462     02F2                     u443_21:
 16463     02F2  2AF7               	goto	i1l4864
 16464     02F3                     u443_20:
 16465     02F3                     i1l4862:
 16466                           
 16467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 16468     02F3  0839               	movf	efgtoa@e^(0+128),w
 16469     02F4  07B6               	addwf	efgtoa@m^(0+128),f
 16470     02F5  083A               	movf	(efgtoa@e+1)^(0+128),w
 16471     02F6  3DB7               	addwfc	(efgtoa@m+1)^(0+128),f
 16472     02F7                     i1l4864:
 16473                           
 16474                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 16475     02F7  01C1               	clrf	efgtoa@i^(0+128)
 16476     02F8  01C2               	clrf	(efgtoa@i+1)^(0+128)
 16477     02F9                     i1l4866:
 16478                           
 16479                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 16480     02F9  0851               	movf	(efgtoa@g+3)^(0+128),w
 16481     02FA  00C6               	movwf	(efgtoa@h+3)^(0+128)
 16482     02FB  0850               	movf	(efgtoa@g+2)^(0+128),w
 16483     02FC  00C5               	movwf	(efgtoa@h+2)^(0+128)
 16484     02FD  084F               	movf	(efgtoa@g+1)^(0+128),w
 16485     02FE  00C4               	movwf	(efgtoa@h+1)^(0+128)
 16486     02FF  084E               	movf	efgtoa@g^(0+128),w
 16487     0300  00C3               	movwf	efgtoa@h^(0+128)
 16488     0301                     i1l4868:
 16489                           
 16490                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 16491     0301  0855               	movf	(efgtoa@u+3)^(0+128),w
 16492     0302  00C0               	movwf	(efgtoa@ou+3)^(0+128)
 16493     0303  0854               	movf	(efgtoa@u+2)^(0+128),w
 16494     0304  00BF               	movwf	(efgtoa@ou+2)^(0+128)
 16495     0305  0853               	movf	(efgtoa@u+1)^(0+128),w
 16496     0306  00BE               	movwf	(efgtoa@ou+1)^(0+128)
 16497     0307  0852               	movf	efgtoa@u^(0+128),w
 16498     0308  00BD               	movwf	efgtoa@ou^(0+128)
 16499                           
 16500                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 16501     0309  2BD7               	goto	i1l4874
 16502     030A                     i1l4870:
 16503                           
 16504                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 16505     030A  0021               	movlb	1	; select bank1
 16506     030B  0855               	movf	(efgtoa@u+3)^(0+128),w
 16507     030C  0020               	movlb	0	; select bank0
 16508     030D  00C3               	movwf	___fldiv@a+3
 16509     030E  0021               	movlb	1	; select bank1
 16510     030F  0854               	movf	(efgtoa@u+2)^(0+128),w
 16511     0310  0020               	movlb	0	; select bank0
 16512     0311  00C2               	movwf	___fldiv@a+2
 16513     0312  0021               	movlb	1	; select bank1
 16514     0313  0853               	movf	(efgtoa@u+1)^(0+128),w
 16515     0314  0020               	movlb	0	; select bank0
 16516     0315  00C1               	movwf	___fldiv@a+1
 16517     0316  0021               	movlb	1	; select bank1
 16518     0317  0852               	movf	efgtoa@u^(0+128),w
 16519     0318  0020               	movlb	0	; select bank0
 16520     0319  00C0               	movwf	___fldiv@a
 16521     031A  0021               	movlb	1	; select bank1
 16522     031B  0846               	movf	(efgtoa@h+3)^(0+128),w
 16523     031C  0020               	movlb	0	; select bank0
 16524     031D  00C7               	movwf	___fldiv@b+3
 16525     031E  0021               	movlb	1	; select bank1
 16526     031F  0845               	movf	(efgtoa@h+2)^(0+128),w
 16527     0320  0020               	movlb	0	; select bank0
 16528     0321  00C6               	movwf	___fldiv@b+2
 16529     0322  0021               	movlb	1	; select bank1
 16530     0323  0844               	movf	(efgtoa@h+1)^(0+128),w
 16531     0324  0020               	movlb	0	; select bank0
 16532     0325  00C5               	movwf	___fldiv@b+1
 16533     0326  0021               	movlb	1	; select bank1
 16534     0327  0843               	movf	efgtoa@h^(0+128),w
 16535     0328  0020               	movlb	0	; select bank0
 16536     0329  00C4               	movwf	___fldiv@b
 16537     032A  3188  2057  3180   	fcall	___fldiv
 16538     032D  0020               	movlb	0	; select bank0
 16539     032E  0843               	movf	?___fldiv+3,w
 16540     032F  00DD               	movwf	floorf@x+3
 16541     0330  0842               	movf	?___fldiv+2,w
 16542     0331  00DC               	movwf	floorf@x+2
 16543     0332  0841               	movf	?___fldiv+1,w
 16544     0333  00DB               	movwf	floorf@x+1
 16545     0334  0840               	movf	?___fldiv,w
 16546     0335  00DA               	movwf	floorf@x
 16547     0336  3186  26A9  3180   	fcall	_floorf
 16548     0339  0020               	movlb	0	; select bank0
 16549     033A  085D               	movf	?_floorf+3,w
 16550     033B  0021               	movlb	1	; select bank1
 16551     033C  00CA               	movwf	(efgtoa@l+3)^(0+128)
 16552     033D  0020               	movlb	0	; select bank0
 16553     033E  085C               	movf	?_floorf+2,w
 16554     033F  0021               	movlb	1	; select bank1
 16555     0340  00C9               	movwf	(efgtoa@l+2)^(0+128)
 16556     0341  0020               	movlb	0	; select bank0
 16557     0342  085B               	movf	?_floorf+1,w
 16558     0343  0021               	movlb	1	; select bank1
 16559     0344  00C8               	movwf	(efgtoa@l+1)^(0+128)
 16560     0345  0020               	movlb	0	; select bank0
 16561     0346  085A               	movf	?_floorf,w
 16562     0347  0021               	movlb	1	; select bank1
 16563     0348  00C7               	movwf	efgtoa@l^(0+128)
 16564                           
 16565                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 16566     0349  084A               	movf	(efgtoa@l+3)^(0+128),w
 16567     034A  00F3               	movwf	___fltol@f1+3
 16568     034B  0849               	movf	(efgtoa@l+2)^(0+128),w
 16569     034C  00F2               	movwf	___fltol@f1+2
 16570     034D  0848               	movf	(efgtoa@l+1)^(0+128),w
 16571     034E  00F1               	movwf	___fltol@f1+1
 16572     034F  0847               	movf	efgtoa@l^(0+128),w
 16573     0350  00F0               	movwf	___fltol@f1
 16574     0351  3193  2352  3180   	fcall	___fltol
 16575     0354  0871               	movf	?___fltol+1,w
 16576     0355  0021               	movlb	1	; select bank1
 16577     0356  00B5               	movwf	(efgtoa@d+1)^(0+128)
 16578     0357  0870               	movf	?___fltol,w
 16579     0358  00B4               	movwf	efgtoa@d^(0+128)
 16580                           
 16581                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 16582     0359  0855               	movf	(efgtoa@u+3)^(0+128),w
 16583     035A  0020               	movlb	0	; select bank0
 16584     035B  00AD               	movwf	___flmul@a+3
 16585     035C  0021               	movlb	1	; select bank1
 16586     035D  0854               	movf	(efgtoa@u+2)^(0+128),w
 16587     035E  0020               	movlb	0	; select bank0
 16588     035F  00AC               	movwf	___flmul@a+2
 16589     0360  0021               	movlb	1	; select bank1
 16590     0361  0853               	movf	(efgtoa@u+1)^(0+128),w
 16591     0362  0020               	movlb	0	; select bank0
 16592     0363  00AB               	movwf	___flmul@a+1
 16593     0364  0021               	movlb	1	; select bank1
 16594     0365  0852               	movf	efgtoa@u^(0+128),w
 16595     0366  0020               	movlb	0	; select bank0
 16596     0367  00AA               	movwf	___flmul@a
 16597     0368  0021               	movlb	1	; select bank1
 16598     0369  084A               	movf	(efgtoa@l+3)^(0+128),w
 16599     036A  0020               	movlb	0	; select bank0
 16600     036B  00A9               	movwf	___flmul@b+3
 16601     036C  0021               	movlb	1	; select bank1
 16602     036D  0849               	movf	(efgtoa@l+2)^(0+128),w
 16603     036E  0020               	movlb	0	; select bank0
 16604     036F  00A8               	movwf	___flmul@b+2
 16605     0370  0021               	movlb	1	; select bank1
 16606     0371  0848               	movf	(efgtoa@l+1)^(0+128),w
 16607     0372  0020               	movlb	0	; select bank0
 16608     0373  00A7               	movwf	___flmul@b+1
 16609     0374  0021               	movlb	1	; select bank1
 16610     0375  0847               	movf	efgtoa@l^(0+128),w
 16611     0376  0020               	movlb	0	; select bank0
 16612     0377  00A6               	movwf	___flmul@b
 16613     0378  318D  25C5  3180   	fcall	___flmul
 16614     037B  0020               	movlb	0	; select bank0
 16615     037C  0829               	movf	?___flmul+3,w
 16616     037D  00C3               	movwf	___flsub@a+3
 16617     037E  0828               	movf	?___flmul+2,w
 16618     037F  00C2               	movwf	___flsub@a+2
 16619     0380  0827               	movf	?___flmul+1,w
 16620     0381  00C1               	movwf	___flsub@a+1
 16621     0382  0826               	movf	?___flmul,w
 16622     0383  00C0               	movwf	___flsub@a
 16623     0384  0021               	movlb	1	; select bank1
 16624     0385  0846               	movf	(efgtoa@h+3)^(0+128),w
 16625     0386  0020               	movlb	0	; select bank0
 16626     0387  00C7               	movwf	___flsub@b+3
 16627     0388  0021               	movlb	1	; select bank1
 16628     0389  0845               	movf	(efgtoa@h+2)^(0+128),w
 16629     038A  0020               	movlb	0	; select bank0
 16630     038B  00C6               	movwf	___flsub@b+2
 16631     038C  0021               	movlb	1	; select bank1
 16632     038D  0844               	movf	(efgtoa@h+1)^(0+128),w
 16633     038E  0020               	movlb	0	; select bank0
 16634     038F  00C5               	movwf	___flsub@b+1
 16635     0390  0021               	movlb	1	; select bank1
 16636     0391  0843               	movf	efgtoa@h^(0+128),w
 16637     0392  0020               	movlb	0	; select bank0
 16638     0393  00C4               	movwf	___flsub@b
 16639     0394  319F  27A0  3180   	fcall	___flsub
 16640     0397  0020               	movlb	0	; select bank0
 16641     0398  0843               	movf	?___flsub+3,w
 16642     0399  0021               	movlb	1	; select bank1
 16643     039A  00C6               	movwf	(efgtoa@h+3)^(0+128)
 16644     039B  0020               	movlb	0	; select bank0
 16645     039C  0842               	movf	?___flsub+2,w
 16646     039D  0021               	movlb	1	; select bank1
 16647     039E  00C5               	movwf	(efgtoa@h+2)^(0+128)
 16648     039F  0020               	movlb	0	; select bank0
 16649     03A0  0841               	movf	?___flsub+1,w
 16650     03A1  0021               	movlb	1	; select bank1
 16651     03A2  00C4               	movwf	(efgtoa@h+1)^(0+128)
 16652     03A3  0020               	movlb	0	; select bank0
 16653     03A4  0840               	movf	?___flsub,w
 16654     03A5  0021               	movlb	1	; select bank1
 16655     03A6  00C3               	movwf	efgtoa@h^(0+128)
 16656                           
 16657                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 16658     03A7  3041               	movlw	65
 16659     03A8  0020               	movlb	0	; select bank0
 16660     03A9  00C3               	movwf	___fldiv@a+3
 16661     03AA  3020               	movlw	32
 16662     03AB  00C2               	movwf	___fldiv@a+2
 16663     03AC  3000               	movlw	0
 16664     03AD  00C1               	movwf	___fldiv@a+1
 16665     03AE  3000               	movlw	0
 16666     03AF  00C0               	movwf	___fldiv@a
 16667     03B0  0021               	movlb	1	; select bank1
 16668     03B1  0855               	movf	(efgtoa@u+3)^(0+128),w
 16669     03B2  0020               	movlb	0	; select bank0
 16670     03B3  00C7               	movwf	___fldiv@b+3
 16671     03B4  0021               	movlb	1	; select bank1
 16672     03B5  0854               	movf	(efgtoa@u+2)^(0+128),w
 16673     03B6  0020               	movlb	0	; select bank0
 16674     03B7  00C6               	movwf	___fldiv@b+2
 16675     03B8  0021               	movlb	1	; select bank1
 16676     03B9  0853               	movf	(efgtoa@u+1)^(0+128),w
 16677     03BA  0020               	movlb	0	; select bank0
 16678     03BB  00C5               	movwf	___fldiv@b+1
 16679     03BC  0021               	movlb	1	; select bank1
 16680     03BD  0852               	movf	efgtoa@u^(0+128),w
 16681     03BE  0020               	movlb	0	; select bank0
 16682     03BF  00C4               	movwf	___fldiv@b
 16683     03C0  3188  2057  3180   	fcall	___fldiv
 16684     03C3  0020               	movlb	0	; select bank0
 16685     03C4  0843               	movf	?___fldiv+3,w
 16686     03C5  0021               	movlb	1	; select bank1
 16687     03C6  00D5               	movwf	(efgtoa@u+3)^(0+128)
 16688     03C7  0020               	movlb	0	; select bank0
 16689     03C8  0842               	movf	?___fldiv+2,w
 16690     03C9  0021               	movlb	1	; select bank1
 16691     03CA  00D4               	movwf	(efgtoa@u+2)^(0+128)
 16692     03CB  0020               	movlb	0	; select bank0
 16693     03CC  0841               	movf	?___fldiv+1,w
 16694     03CD  0021               	movlb	1	; select bank1
 16695     03CE  00D3               	movwf	(efgtoa@u+1)^(0+128)
 16696     03CF  0020               	movlb	0	; select bank0
 16697     03D0  0840               	movf	?___fldiv,w
 16698     03D1  0021               	movlb	1	; select bank1
 16699     03D2  00D2               	movwf	efgtoa@u^(0+128)
 16700     03D3                     i1l4872:
 16701                           
 16702                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
 16703     03D3  3001               	movlw	1
 16704     03D4  07C1               	addwf	efgtoa@i^(0+128),f
 16705     03D5  3000               	movlw	0
 16706     03D6  3DC2               	addwfc	(efgtoa@i+1)^(0+128),f
 16707     03D7                     i1l4874:
 16708                           
 16709                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 16710     03D7  0842               	movf	(efgtoa@i+1)^(0+128),w
 16711     03D8  3A80               	xorlw	128
 16712     03D9  00A5               	movwf	??_efgtoa^(0+128)
 16713     03DA  0837               	movf	(efgtoa@m+1)^(0+128),w
 16714     03DB  3A80               	xorlw	128
 16715     03DC  0225               	subwf	??_efgtoa^(0+128),w
 16716     03DD  1D03               	skipz
 16717     03DE  2BE1               	goto	u444_25
 16718     03DF  0836               	movf	efgtoa@m^(0+128),w
 16719     03E0  0241               	subwf	efgtoa@i^(0+128),w
 16720     03E1                     u444_25:
 16721     03E1  1C03               	skipc
 16722     03E2  2BE4               	goto	u444_21
 16723     03E3  2BE5               	goto	u444_20
 16724     03E4                     u444_21:
 16725     03E4  2B0A               	goto	i1l4870
 16726     03E5                     u444_20:
 16727     03E5                     i1l4876:
 16728                           
 16729                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 16730     03E5  3040               	movlw	64
 16731     03E6  0020               	movlb	0	; select bank0
 16732     03E7  00A9               	movwf	___flmul@b+3
 16733     03E8  30A0               	movlw	160
 16734     03E9  00A8               	movwf	___flmul@b+2
 16735     03EA  3000               	movlw	0
 16736     03EB  00A7               	movwf	___flmul@b+1
 16737     03EC  3000               	movlw	0
 16738     03ED  00A6               	movwf	___flmul@b
 16739     03EE  0021               	movlb	1	; select bank1
 16740     03EF  0855               	movf	(efgtoa@u+3)^(0+128),w
 16741     03F0  0020               	movlb	0	; select bank0
 16742     03F1  00AD               	movwf	___flmul@a+3
 16743     03F2  0021               	movlb	1	; select bank1
 16744     03F3  0854               	movf	(efgtoa@u+2)^(0+128),w
 16745     03F4  0020               	movlb	0	; select bank0
 16746     03F5  00AC               	movwf	___flmul@a+2
 16747     03F6  0021               	movlb	1	; select bank1
 16748     03F7  0853               	movf	(efgtoa@u+1)^(0+128),w
 16749     03F8  0020               	movlb	0	; select bank0
 16750     03F9  00AB               	movwf	___flmul@a+1
 16751     03FA  0021               	movlb	1	; select bank1
 16752     03FB  0852               	movf	efgtoa@u^(0+128),w
 16753     03FC  0020               	movlb	0	; select bank0
 16754     03FD  00AA               	movwf	___flmul@a
 16755     03FE  318D  25C5  3180   	fcall	___flmul
 16756     0401  0020               	movlb	0	; select bank0
 16757     0402  0829               	movf	?___flmul+3,w
 16758     0403  0021               	movlb	1	; select bank1
 16759     0404  00CA               	movwf	(efgtoa@l+3)^(0+128)
 16760     0405  0020               	movlb	0	; select bank0
 16761     0406  0828               	movf	?___flmul+2,w
 16762     0407  0021               	movlb	1	; select bank1
 16763     0408  00C9               	movwf	(efgtoa@l+2)^(0+128)
 16764     0409  0020               	movlb	0	; select bank0
 16765     040A  0827               	movf	?___flmul+1,w
 16766     040B  0021               	movlb	1	; select bank1
 16767     040C  00C8               	movwf	(efgtoa@l+1)^(0+128)
 16768     040D  0020               	movlb	0	; select bank0
 16769     040E  0826               	movf	?___flmul,w
 16770     040F  0021               	movlb	1	; select bank1
 16771     0410  00C7               	movwf	efgtoa@l^(0+128)
 16772                           
 16773                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 16774     0411  0846               	movf	(efgtoa@h+3)^(0+128),w
 16775     0412  0020               	movlb	0	; select bank0
 16776     0413  00C3               	movwf	___flge@ff1+3
 16777     0414  0021               	movlb	1	; select bank1
 16778     0415  0845               	movf	(efgtoa@h+2)^(0+128),w
 16779     0416  0020               	movlb	0	; select bank0
 16780     0417  00C2               	movwf	___flge@ff1+2
 16781     0418  0021               	movlb	1	; select bank1
 16782     0419  0844               	movf	(efgtoa@h+1)^(0+128),w
 16783     041A  0020               	movlb	0	; select bank0
 16784     041B  00C1               	movwf	___flge@ff1+1
 16785     041C  0021               	movlb	1	; select bank1
 16786     041D  0843               	movf	efgtoa@h^(0+128),w
 16787     041E  0020               	movlb	0	; select bank0
 16788     041F  00C0               	movwf	___flge@ff1
 16789     0420  0021               	movlb	1	; select bank1
 16790     0421  084A               	movf	(efgtoa@l+3)^(0+128),w
 16791     0422  0020               	movlb	0	; select bank0
 16792     0423  00C7               	movwf	___flge@ff2+3
 16793     0424  0021               	movlb	1	; select bank1
 16794     0425  0849               	movf	(efgtoa@l+2)^(0+128),w
 16795     0426  0020               	movlb	0	; select bank0
 16796     0427  00C6               	movwf	___flge@ff2+2
 16797     0428  0021               	movlb	1	; select bank1
 16798     0429  0848               	movf	(efgtoa@l+1)^(0+128),w
 16799     042A  0020               	movlb	0	; select bank0
 16800     042B  00C5               	movwf	___flge@ff2+1
 16801     042C  0021               	movlb	1	; select bank1
 16802     042D  0847               	movf	efgtoa@l^(0+128),w
 16803     042E  0020               	movlb	0	; select bank0
 16804     042F  00C4               	movwf	___flge@ff2
 16805     0430  3195  253A  3180   	fcall	___flge
 16806     0433  1803               	btfsc	3,0
 16807     0434  2C36               	goto	u445_21
 16808     0435  2C37               	goto	u445_20
 16809     0436                     u445_21:
 16810     0436  2C41               	goto	i1l4880
 16811     0437                     u445_20:
 16812     0437                     i1l4878:
 16813                           
 16814                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 16815     0437  3000               	movlw	0
 16816     0438  0021               	movlb	1	; select bank1
 16817     0439  00CA               	movwf	(efgtoa@l+3)^(0+128)
 16818     043A  3000               	movlw	0
 16819     043B  00C9               	movwf	(efgtoa@l+2)^(0+128)
 16820     043C  3000               	movlw	0
 16821     043D  00C8               	movwf	(efgtoa@l+1)^(0+128)
 16822     043E  3000               	movlw	0
 16823     043F  00C7               	movwf	efgtoa@l^(0+128)
 16824                           
 16825                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
 16826     0440  2C66               	goto	i1l4886
 16827     0441                     i1l4880:
 16828                           
 16829                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 16830     0441  0021               	movlb	1	; select bank1
 16831     0442  0846               	movf	(efgtoa@h+3)^(0+128),w
 16832     0443  00F3               	movwf	___fleq@ff1+3
 16833     0444  0845               	movf	(efgtoa@h+2)^(0+128),w
 16834     0445  00F2               	movwf	___fleq@ff1+2
 16835     0446  0844               	movf	(efgtoa@h+1)^(0+128),w
 16836     0447  00F1               	movwf	___fleq@ff1+1
 16837     0448  0843               	movf	efgtoa@h^(0+128),w
 16838     0449  00F0               	movwf	___fleq@ff1
 16839     044A  084A               	movf	(efgtoa@l+3)^(0+128),w
 16840     044B  00F7               	movwf	___fleq@ff2+3
 16841     044C  0849               	movf	(efgtoa@l+2)^(0+128),w
 16842     044D  00F6               	movwf	___fleq@ff2+2
 16843     044E  0848               	movf	(efgtoa@l+1)^(0+128),w
 16844     044F  00F5               	movwf	___fleq@ff2+1
 16845     0450  0847               	movf	efgtoa@l^(0+128),w
 16846     0451  00F4               	movwf	___fleq@ff2
 16847     0452  3192  224D  3180   	fcall	___fleq
 16848     0455  1C03               	btfss	3,0
 16849     0456  2C58               	goto	u446_21
 16850     0457  2C59               	goto	u446_20
 16851     0458                     u446_21:
 16852     0458  2C66               	goto	i1l4886
 16853     0459                     u446_20:
 16854     0459                     i1l4882:
 16855     0459  0021               	movlb	1	; select bank1
 16856     045A  1834               	btfsc	efgtoa@d^(0+128),0
 16857     045B  2C5D               	goto	u447_21
 16858     045C  2C5E               	goto	u447_20
 16859     045D                     u447_21:
 16860     045D  2C66               	goto	i1l4886
 16861     045E                     u447_20:
 16862     045E                     i1l4884:
 16863                           
 16864                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 16865     045E  3000               	movlw	0
 16866     045F  00CA               	movwf	(efgtoa@l+3)^(0+128)
 16867     0460  3000               	movlw	0
 16868     0461  00C9               	movwf	(efgtoa@l+2)^(0+128)
 16869     0462  3000               	movlw	0
 16870     0463  00C8               	movwf	(efgtoa@l+1)^(0+128)
 16871     0464  3000               	movlw	0
 16872     0465  00C7               	movwf	efgtoa@l^(0+128)
 16873     0466                     i1l4886:
 16874                           
 16875                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 16876     0466  0021               	movlb	1	; select bank1
 16877     0467  084A               	movf	(efgtoa@l+3)^(0+128),w
 16878     0468  00F3               	movwf	___fladd@b+3
 16879     0469  0849               	movf	(efgtoa@l+2)^(0+128),w
 16880     046A  00F2               	movwf	___fladd@b+2
 16881     046B  0848               	movf	(efgtoa@l+1)^(0+128),w
 16882     046C  00F1               	movwf	___fladd@b+1
 16883     046D  0847               	movf	efgtoa@l^(0+128),w
 16884     046E  00F0               	movwf	___fladd@b
 16885     046F  0851               	movf	(efgtoa@g+3)^(0+128),w
 16886     0470  00F7               	movwf	___fladd@a+3
 16887     0471  0850               	movf	(efgtoa@g+2)^(0+128),w
 16888     0472  00F6               	movwf	___fladd@a+2
 16889     0473  084F               	movf	(efgtoa@g+1)^(0+128),w
 16890     0474  00F5               	movwf	___fladd@a+1
 16891     0475  084E               	movf	efgtoa@g^(0+128),w
 16892     0476  00F4               	movwf	___fladd@a
 16893     0477  318B  23B9  3180   	fcall	___fladd
 16894     047A  0873               	movf	?___fladd+3,w
 16895     047B  0021               	movlb	1	; select bank1
 16896     047C  00C6               	movwf	(efgtoa@h+3)^(0+128)
 16897     047D  0872               	movf	?___fladd+2,w
 16898     047E  00C5               	movwf	(efgtoa@h+2)^(0+128)
 16899     047F  0871               	movf	?___fladd+1,w
 16900     0480  00C4               	movwf	(efgtoa@h+1)^(0+128)
 16901     0481  0870               	movf	?___fladd,w
 16902     0482  00C3               	movwf	efgtoa@h^(0+128)
 16903     0483                     i1l4888:
 16904                           
 16905                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 16906     0483  0846               	movf	(efgtoa@h+3)^(0+128),w
 16907     0484  0020               	movlb	0	; select bank0
 16908     0485  00C3               	movwf	___flge@ff1+3
 16909     0486  0021               	movlb	1	; select bank1
 16910     0487  0845               	movf	(efgtoa@h+2)^(0+128),w
 16911     0488  0020               	movlb	0	; select bank0
 16912     0489  00C2               	movwf	___flge@ff1+2
 16913     048A  0021               	movlb	1	; select bank1
 16914     048B  0844               	movf	(efgtoa@h+1)^(0+128),w
 16915     048C  0020               	movlb	0	; select bank0
 16916     048D  00C1               	movwf	___flge@ff1+1
 16917     048E  0021               	movlb	1	; select bank1
 16918     048F  0843               	movf	efgtoa@h^(0+128),w
 16919     0490  0020               	movlb	0	; select bank0
 16920     0491  00C0               	movwf	___flge@ff1
 16921     0492  3041               	movlw	65
 16922     0493  00A9               	movwf	___flmul@b+3
 16923     0494  3020               	movlw	32
 16924     0495  00A8               	movwf	___flmul@b+2
 16925     0496  3000               	movlw	0
 16926     0497  00A7               	movwf	___flmul@b+1
 16927     0498  3000               	movlw	0
 16928     0499  00A6               	movwf	___flmul@b
 16929     049A  0021               	movlb	1	; select bank1
 16930     049B  0840               	movf	(efgtoa@ou+3)^(0+128),w
 16931     049C  0020               	movlb	0	; select bank0
 16932     049D  00AD               	movwf	___flmul@a+3
 16933     049E  0021               	movlb	1	; select bank1
 16934     049F  083F               	movf	(efgtoa@ou+2)^(0+128),w
 16935     04A0  0020               	movlb	0	; select bank0
 16936     04A1  00AC               	movwf	___flmul@a+2
 16937     04A2  0021               	movlb	1	; select bank1
 16938     04A3  083E               	movf	(efgtoa@ou+1)^(0+128),w
 16939     04A4  0020               	movlb	0	; select bank0
 16940     04A5  00AB               	movwf	___flmul@a+1
 16941     04A6  0021               	movlb	1	; select bank1
 16942     04A7  083D               	movf	efgtoa@ou^(0+128),w
 16943     04A8  0020               	movlb	0	; select bank0
 16944     04A9  00AA               	movwf	___flmul@a
 16945     04AA  318D  25C5  3180   	fcall	___flmul
 16946     04AD  0020               	movlb	0	; select bank0
 16947     04AE  0829               	movf	?___flmul+3,w
 16948     04AF  00C7               	movwf	___flge@ff2+3
 16949     04B0  0828               	movf	?___flmul+2,w
 16950     04B1  00C6               	movwf	___flge@ff2+2
 16951     04B2  0827               	movf	?___flmul+1,w
 16952     04B3  00C5               	movwf	___flge@ff2+1
 16953     04B4  0826               	movf	?___flmul,w
 16954     04B5  00C4               	movwf	___flge@ff2
 16955     04B6  3195  253A  3180   	fcall	___flge
 16956     04B9  1C03               	btfss	3,0
 16957     04BA  2CBC               	goto	u448_21
 16958     04BB  2CBD               	goto	u448_20
 16959     04BC                     u448_21:
 16960     04BC  2CF8               	goto	i1l1758
 16961     04BD                     u448_20:
 16962     04BD                     i1l4890:
 16963                           
 16964                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
 16965     04BD  3001               	movlw	1
 16966     04BE  0021               	movlb	1	; select bank1
 16967     04BF  07B9               	addwf	efgtoa@e^(0+128),f
 16968     04C0  3000               	movlw	0
 16969     04C1  3DBA               	addwfc	(efgtoa@e+1)^(0+128),f
 16970     04C2                     i1l4892:
 16971                           
 16972                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 16973     04C2  3041               	movlw	65
 16974     04C3  0020               	movlb	0	; select bank0
 16975     04C4  00A9               	movwf	___flmul@b+3
 16976     04C5  3020               	movlw	32
 16977     04C6  00A8               	movwf	___flmul@b+2
 16978     04C7  3000               	movlw	0
 16979     04C8  00A7               	movwf	___flmul@b+1
 16980     04C9  3000               	movlw	0
 16981     04CA  00A6               	movwf	___flmul@b
 16982     04CB  0021               	movlb	1	; select bank1
 16983     04CC  0840               	movf	(efgtoa@ou+3)^(0+128),w
 16984     04CD  0020               	movlb	0	; select bank0
 16985     04CE  00AD               	movwf	___flmul@a+3
 16986     04CF  0021               	movlb	1	; select bank1
 16987     04D0  083F               	movf	(efgtoa@ou+2)^(0+128),w
 16988     04D1  0020               	movlb	0	; select bank0
 16989     04D2  00AC               	movwf	___flmul@a+2
 16990     04D3  0021               	movlb	1	; select bank1
 16991     04D4  083E               	movf	(efgtoa@ou+1)^(0+128),w
 16992     04D5  0020               	movlb	0	; select bank0
 16993     04D6  00AB               	movwf	___flmul@a+1
 16994     04D7  0021               	movlb	1	; select bank1
 16995     04D8  083D               	movf	efgtoa@ou^(0+128),w
 16996     04D9  0020               	movlb	0	; select bank0
 16997     04DA  00AA               	movwf	___flmul@a
 16998     04DB  318D  25C5  3180   	fcall	___flmul
 16999     04DE  0020               	movlb	0	; select bank0
 17000     04DF  0829               	movf	?___flmul+3,w
 17001     04E0  0021               	movlb	1	; select bank1
 17002     04E1  00C0               	movwf	(efgtoa@ou+3)^(0+128)
 17003     04E2  0020               	movlb	0	; select bank0
 17004     04E3  0828               	movf	?___flmul+2,w
 17005     04E4  0021               	movlb	1	; select bank1
 17006     04E5  00BF               	movwf	(efgtoa@ou+2)^(0+128)
 17007     04E6  0020               	movlb	0	; select bank0
 17008     04E7  0827               	movf	?___flmul+1,w
 17009     04E8  0021               	movlb	1	; select bank1
 17010     04E9  00BE               	movwf	(efgtoa@ou+1)^(0+128)
 17011     04EA  0020               	movlb	0	; select bank0
 17012     04EB  0826               	movf	?___flmul,w
 17013     04EC  0021               	movlb	1	; select bank1
 17014     04ED  00BD               	movwf	efgtoa@ou^(0+128)
 17015     04EE                     i1l4894:
 17016                           
 17017                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 17018     04EE  3066               	movlw	102
 17019     04EF  0633               	xorwf	efgtoa@nmode^(0+128),w
 17020     04F0  1D03               	btfss	3,2
 17021     04F1  2CF3               	goto	u449_21
 17022     04F2  2CF4               	goto	u449_20
 17023     04F3                     u449_21:
 17024     04F3  2CF8               	goto	i1l1758
 17025     04F4                     u449_20:
 17026     04F4                     i1l4896:
 17027                           
 17028                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
 17029     04F4  3001               	movlw	1
 17030     04F5  07B6               	addwf	efgtoa@m^(0+128),f
 17031     04F6  3000               	movlw	0
 17032     04F7  3DB7               	addwfc	(efgtoa@m+1)^(0+128),f
 17033     04F8                     i1l1758:	
 17034                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 767:  }
 17035                           
 17036                           
 17037                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 17038     04F8  0021               	movlb	1	; select bank1
 17039     04F9  0840               	movf	(efgtoa@ou+3)^(0+128),w
 17040     04FA  00D5               	movwf	(efgtoa@u+3)^(0+128)
 17041     04FB  083F               	movf	(efgtoa@ou+2)^(0+128),w
 17042     04FC  00D4               	movwf	(efgtoa@u+2)^(0+128)
 17043     04FD  083E               	movf	(efgtoa@ou+1)^(0+128),w
 17044     04FE  00D3               	movwf	(efgtoa@u+1)^(0+128)
 17045     04FF  083D               	movf	efgtoa@ou^(0+128),w
 17046     0500  00D2               	movwf	efgtoa@u^(0+128)
 17047                           
 17048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 17049     0501  083A               	movf	(efgtoa@e+1)^(0+128),w
 17050     0502  00AA               	movwf	(efgtoa@ne+1)^(0+128)
 17051     0503  0839               	movf	efgtoa@e^(0+128),w
 17052     0504  00A9               	movwf	efgtoa@ne^(0+128)
 17053     0505                     i1l4898:
 17054                           
 17055                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 17056     0505  01B1               	clrf	efgtoa@pp^(0+128)
 17057     0506                     i1l4900:
 17058                           
 17059                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 17060     0506  01AD               	clrf	efgtoa@t^(0+128)
 17061     0507  01AE               	clrf	(efgtoa@t+1)^(0+128)
 17062     0508                     i1l4902:
 17063                           
 17064                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 17065     0508  01C1               	clrf	efgtoa@i^(0+128)
 17066     0509  01C2               	clrf	(efgtoa@i+1)^(0+128)
 17067                           
 17068                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 17069     050A  2E40               	goto	i1l4946
 17070     050B                     i1l4904:
 17071                           
 17072                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 17073     050B  0021               	movlb	1	; select bank1
 17074     050C  0855               	movf	(efgtoa@u+3)^(0+128),w
 17075     050D  0020               	movlb	0	; select bank0
 17076     050E  00C3               	movwf	___fldiv@a+3
 17077     050F  0021               	movlb	1	; select bank1
 17078     0510  0854               	movf	(efgtoa@u+2)^(0+128),w
 17079     0511  0020               	movlb	0	; select bank0
 17080     0512  00C2               	movwf	___fldiv@a+2
 17081     0513  0021               	movlb	1	; select bank1
 17082     0514  0853               	movf	(efgtoa@u+1)^(0+128),w
 17083     0515  0020               	movlb	0	; select bank0
 17084     0516  00C1               	movwf	___fldiv@a+1
 17085     0517  0021               	movlb	1	; select bank1
 17086     0518  0852               	movf	efgtoa@u^(0+128),w
 17087     0519  0020               	movlb	0	; select bank0
 17088     051A  00C0               	movwf	___fldiv@a
 17089     051B  0021               	movlb	1	; select bank1
 17090     051C  0846               	movf	(efgtoa@h+3)^(0+128),w
 17091     051D  0020               	movlb	0	; select bank0
 17092     051E  00C7               	movwf	___fldiv@b+3
 17093     051F  0021               	movlb	1	; select bank1
 17094     0520  0845               	movf	(efgtoa@h+2)^(0+128),w
 17095     0521  0020               	movlb	0	; select bank0
 17096     0522  00C6               	movwf	___fldiv@b+2
 17097     0523  0021               	movlb	1	; select bank1
 17098     0524  0844               	movf	(efgtoa@h+1)^(0+128),w
 17099     0525  0020               	movlb	0	; select bank0
 17100     0526  00C5               	movwf	___fldiv@b+1
 17101     0527  0021               	movlb	1	; select bank1
 17102     0528  0843               	movf	efgtoa@h^(0+128),w
 17103     0529  0020               	movlb	0	; select bank0
 17104     052A  00C4               	movwf	___fldiv@b
 17105     052B  3188  2057  3180   	fcall	___fldiv
 17106     052E  0020               	movlb	0	; select bank0
 17107     052F  0843               	movf	?___fldiv+3,w
 17108     0530  00DD               	movwf	floorf@x+3
 17109     0531  0842               	movf	?___fldiv+2,w
 17110     0532  00DC               	movwf	floorf@x+2
 17111     0533  0841               	movf	?___fldiv+1,w
 17112     0534  00DB               	movwf	floorf@x+1
 17113     0535  0840               	movf	?___fldiv,w
 17114     0536  00DA               	movwf	floorf@x
 17115     0537  3186  26A9  3180   	fcall	_floorf
 17116     053A  0020               	movlb	0	; select bank0
 17117     053B  085D               	movf	?_floorf+3,w
 17118     053C  0021               	movlb	1	; select bank1
 17119     053D  00CA               	movwf	(efgtoa@l+3)^(0+128)
 17120     053E  0020               	movlb	0	; select bank0
 17121     053F  085C               	movf	?_floorf+2,w
 17122     0540  0021               	movlb	1	; select bank1
 17123     0541  00C9               	movwf	(efgtoa@l+2)^(0+128)
 17124     0542  0020               	movlb	0	; select bank0
 17125     0543  085B               	movf	?_floorf+1,w
 17126     0544  0021               	movlb	1	; select bank1
 17127     0545  00C8               	movwf	(efgtoa@l+1)^(0+128)
 17128     0546  0020               	movlb	0	; select bank0
 17129     0547  085A               	movf	?_floorf,w
 17130     0548  0021               	movlb	1	; select bank1
 17131     0549  00C7               	movwf	efgtoa@l^(0+128)
 17132                           
 17133                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 17134     054A  084A               	movf	(efgtoa@l+3)^(0+128),w
 17135     054B  00F3               	movwf	___fltol@f1+3
 17136     054C  0849               	movf	(efgtoa@l+2)^(0+128),w
 17137     054D  00F2               	movwf	___fltol@f1+2
 17138     054E  0848               	movf	(efgtoa@l+1)^(0+128),w
 17139     054F  00F1               	movwf	___fltol@f1+1
 17140     0550  0847               	movf	efgtoa@l^(0+128),w
 17141     0551  00F0               	movwf	___fltol@f1
 17142     0552  3193  2352  3180   	fcall	___fltol
 17143     0555  0871               	movf	?___fltol+1,w
 17144     0556  3A80               	xorlw	128
 17145     0557  0021               	movlb	1	; select bank1
 17146     0558  00A5               	movwf	??_efgtoa^(0+128)
 17147     0559  3080               	movlw	128
 17148     055A  0225               	subwf	??_efgtoa^(0+128),w
 17149     055B  1D03               	skipz
 17150     055C  2D5F               	goto	u450_25
 17151     055D  300A               	movlw	10
 17152     055E  0270               	subwf	?___fltol,w
 17153     055F                     u450_25:
 17154     055F  1803               	skipnc
 17155     0560  2D62               	goto	u450_21
 17156     0561  2D63               	goto	u450_20
 17157     0562                     u450_21:
 17158     0562  2D75               	goto	i1l4908
 17159     0563                     u450_20:
 17160     0563                     i1l4906:
 17161     0563  0021               	movlb	1	; select bank1
 17162     0564  084A               	movf	(efgtoa@l+3)^(0+128),w
 17163     0565  00F3               	movwf	___fltol@f1+3
 17164     0566  0849               	movf	(efgtoa@l+2)^(0+128),w
 17165     0567  00F2               	movwf	___fltol@f1+2
 17166     0568  0848               	movf	(efgtoa@l+1)^(0+128),w
 17167     0569  00F1               	movwf	___fltol@f1+1
 17168     056A  0847               	movf	efgtoa@l^(0+128),w
 17169     056B  00F0               	movwf	___fltol@f1
 17170     056C  3193  2352  3180   	fcall	___fltol
 17171     056F  0871               	movf	?___fltol+1,w
 17172     0570  0021               	movlb	1	; select bank1
 17173     0571  00B5               	movwf	(efgtoa@d+1)^(0+128)
 17174     0572  0870               	movf	?___fltol,w
 17175     0573  00B4               	movwf	efgtoa@d^(0+128)
 17176     0574  2D7A               	goto	i1l4910
 17177     0575                     i1l4908:
 17178     0575  3009               	movlw	9
 17179     0576  0021               	movlb	1	; select bank1
 17180     0577  00B4               	movwf	efgtoa@d^(0+128)
 17181     0578  3000               	movlw	0
 17182     0579  00B5               	movwf	(efgtoa@d^(0+128)+1)
 17183     057A                     i1l4910:
 17184                           
 17185                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 17186     057A  0831               	movf	efgtoa@pp^(0+128),w
 17187     057B  1D03               	btfss	3,2
 17188     057C  2D7E               	goto	u451_21
 17189     057D  2D7F               	goto	u451_20
 17190     057E                     u451_21:
 17191     057E  2DA8               	goto	i1l4930
 17192     057F                     u451_20:
 17193     057F                     i1l4912:
 17194     057F  1FAA               	btfss	(efgtoa@ne+1)^(0+128),7
 17195     0580  2D82               	goto	u452_21
 17196     0581  2D83               	goto	u452_20
 17197     0582                     u452_21:
 17198     0582  2DA8               	goto	i1l4930
 17199     0583                     u452_20:
 17200     0583                     i1l4914:
 17201                           
 17202                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 17203     0583  084C               	movf	efgtoa@n^(0+128),w
 17204     0584  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17205     0585  0086               	movwf	6
 17206     0586  3002               	movlw	2	; select bank4/5
 17207     0587  0087               	movwf	7
 17208     0588  302E               	movlw	46
 17209     0589  0081               	movwf	1
 17210     058A                     i1l4916:
 17211     058A  3001               	movlw	1
 17212     058B  07CC               	addwf	efgtoa@n^(0+128),f
 17213     058C  3000               	movlw	0
 17214     058D  3DCD               	addwfc	(efgtoa@n+1)^(0+128),f
 17215     058E                     i1l4918:
 17216                           
 17217                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 17218     058E  30FF               	movlw	255
 17219     058F  07BB               	addwf	efgtoa@w^(0+128),f
 17220     0590  30FF               	movlw	255
 17221     0591  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 17222     0592                     i1l4920:
 17223                           
 17224                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 17225     0592  01B1               	clrf	efgtoa@pp^(0+128)
 17226     0593  0AB1               	incf	efgtoa@pp^(0+128),f
 17227     0594  2DA8               	goto	i1l4930
 17228     0595                     i1l4922:
 17229                           
 17230                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 17231     0595  084C               	movf	efgtoa@n^(0+128),w
 17232     0596  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17233     0597  0086               	movwf	6
 17234     0598  3002               	movlw	2	; select bank4/5
 17235     0599  0087               	movwf	7
 17236     059A  3030               	movlw	48
 17237     059B  0081               	movwf	1
 17238     059C                     i1l4924:
 17239     059C  3001               	movlw	1
 17240     059D  07CC               	addwf	efgtoa@n^(0+128),f
 17241     059E  3000               	movlw	0
 17242     059F  3DCD               	addwfc	(efgtoa@n+1)^(0+128),f
 17243     05A0                     i1l4926:
 17244                           
 17245                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 17246     05A0  30FF               	movlw	255
 17247     05A1  07BB               	addwf	efgtoa@w^(0+128),f
 17248     05A2  30FF               	movlw	255
 17249     05A3  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 17250     05A4                     i1l4928:
 17251                           
 17252                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 17253     05A4  30FF               	movlw	255
 17254     05A5  07AD               	addwf	efgtoa@t^(0+128),f
 17255     05A6  30FF               	movlw	255
 17256     05A7  3DAE               	addwfc	(efgtoa@t+1)^(0+128),f
 17257     05A8                     i1l4930:
 17258                           
 17259                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 17260     05A8  082D               	movf	efgtoa@t^(0+128),w
 17261     05A9  042E               	iorwf	(efgtoa@t+1)^(0+128),w
 17262     05AA  1D03               	btfss	3,2
 17263     05AB  2DAD               	goto	u453_21
 17264     05AC  2DAE               	goto	u453_20
 17265     05AD                     u453_21:
 17266     05AD  2D95               	goto	i1l4922
 17267     05AE                     u453_20:
 17268     05AE                     i1l4932:
 17269                           
 17270                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 17271     05AE  084C               	movf	efgtoa@n^(0+128),w
 17272     05AF  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17273     05B0  0086               	movwf	6
 17274     05B1  3002               	movlw	2	; select bank4/5
 17275     05B2  0087               	movwf	7
 17276     05B3  0834               	movf	efgtoa@d^(0+128),w
 17277     05B4  3E30               	addlw	48
 17278     05B5  0081               	movwf	1
 17279     05B6                     i1l4934:
 17280     05B6  3001               	movlw	1
 17281     05B7  07CC               	addwf	efgtoa@n^(0+128),f
 17282     05B8  3000               	movlw	0
 17283     05B9  3DCD               	addwfc	(efgtoa@n+1)^(0+128),f
 17284     05BA                     i1l4936:
 17285                           
 17286                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 17287     05BA  30FF               	movlw	255
 17288     05BB  07BB               	addwf	efgtoa@w^(0+128),f
 17289     05BC  30FF               	movlw	255
 17290     05BD  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 17291     05BE                     i1l4938:
 17292                           
 17293                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 17294     05BE  0855               	movf	(efgtoa@u+3)^(0+128),w
 17295     05BF  0020               	movlb	0	; select bank0
 17296     05C0  00AD               	movwf	___flmul@a+3
 17297     05C1  0021               	movlb	1	; select bank1
 17298     05C2  0854               	movf	(efgtoa@u+2)^(0+128),w
 17299     05C3  0020               	movlb	0	; select bank0
 17300     05C4  00AC               	movwf	___flmul@a+2
 17301     05C5  0021               	movlb	1	; select bank1
 17302     05C6  0853               	movf	(efgtoa@u+1)^(0+128),w
 17303     05C7  0020               	movlb	0	; select bank0
 17304     05C8  00AB               	movwf	___flmul@a+1
 17305     05C9  0021               	movlb	1	; select bank1
 17306     05CA  0852               	movf	efgtoa@u^(0+128),w
 17307     05CB  0020               	movlb	0	; select bank0
 17308     05CC  00AA               	movwf	___flmul@a
 17309     05CD  0021               	movlb	1	; select bank1
 17310     05CE  084A               	movf	(efgtoa@l+3)^(0+128),w
 17311     05CF  0020               	movlb	0	; select bank0
 17312     05D0  00A9               	movwf	___flmul@b+3
 17313     05D1  0021               	movlb	1	; select bank1
 17314     05D2  0849               	movf	(efgtoa@l+2)^(0+128),w
 17315     05D3  0020               	movlb	0	; select bank0
 17316     05D4  00A8               	movwf	___flmul@b+2
 17317     05D5  0021               	movlb	1	; select bank1
 17318     05D6  0848               	movf	(efgtoa@l+1)^(0+128),w
 17319     05D7  0020               	movlb	0	; select bank0
 17320     05D8  00A7               	movwf	___flmul@b+1
 17321     05D9  0021               	movlb	1	; select bank1
 17322     05DA  0847               	movf	efgtoa@l^(0+128),w
 17323     05DB  0020               	movlb	0	; select bank0
 17324     05DC  00A6               	movwf	___flmul@b
 17325     05DD  318D  25C5  3180   	fcall	___flmul
 17326     05E0  0020               	movlb	0	; select bank0
 17327     05E1  0829               	movf	?___flmul+3,w
 17328     05E2  00C3               	movwf	___flsub@a+3
 17329     05E3  0828               	movf	?___flmul+2,w
 17330     05E4  00C2               	movwf	___flsub@a+2
 17331     05E5  0827               	movf	?___flmul+1,w
 17332     05E6  00C1               	movwf	___flsub@a+1
 17333     05E7  0826               	movf	?___flmul,w
 17334     05E8  00C0               	movwf	___flsub@a
 17335     05E9  0021               	movlb	1	; select bank1
 17336     05EA  0846               	movf	(efgtoa@h+3)^(0+128),w
 17337     05EB  0020               	movlb	0	; select bank0
 17338     05EC  00C7               	movwf	___flsub@b+3
 17339     05ED  0021               	movlb	1	; select bank1
 17340     05EE  0845               	movf	(efgtoa@h+2)^(0+128),w
 17341     05EF  0020               	movlb	0	; select bank0
 17342     05F0  00C6               	movwf	___flsub@b+2
 17343     05F1  0021               	movlb	1	; select bank1
 17344     05F2  0844               	movf	(efgtoa@h+1)^(0+128),w
 17345     05F3  0020               	movlb	0	; select bank0
 17346     05F4  00C5               	movwf	___flsub@b+1
 17347     05F5  0021               	movlb	1	; select bank1
 17348     05F6  0843               	movf	efgtoa@h^(0+128),w
 17349     05F7  0020               	movlb	0	; select bank0
 17350     05F8  00C4               	movwf	___flsub@b
 17351     05F9  319F  27A0  3180   	fcall	___flsub
 17352     05FC  0020               	movlb	0	; select bank0
 17353     05FD  0843               	movf	?___flsub+3,w
 17354     05FE  0021               	movlb	1	; select bank1
 17355     05FF  00C6               	movwf	(efgtoa@h+3)^(0+128)
 17356     0600  0020               	movlb	0	; select bank0
 17357     0601  0842               	movf	?___flsub+2,w
 17358     0602  0021               	movlb	1	; select bank1
 17359     0603  00C5               	movwf	(efgtoa@h+2)^(0+128)
 17360     0604  0020               	movlb	0	; select bank0
 17361     0605  0841               	movf	?___flsub+1,w
 17362     0606  0021               	movlb	1	; select bank1
 17363     0607  00C4               	movwf	(efgtoa@h+1)^(0+128)
 17364     0608  0020               	movlb	0	; select bank0
 17365     0609  0840               	movf	?___flsub,w
 17366     060A  0021               	movlb	1	; select bank1
 17367     060B  00C3               	movwf	efgtoa@h^(0+128)
 17368     060C                     i1l4940:
 17369                           
 17370                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 17371     060C  3041               	movlw	65
 17372     060D  0020               	movlb	0	; select bank0
 17373     060E  00C3               	movwf	___fldiv@a+3
 17374     060F  3020               	movlw	32
 17375     0610  00C2               	movwf	___fldiv@a+2
 17376     0611  3000               	movlw	0
 17377     0612  00C1               	movwf	___fldiv@a+1
 17378     0613  3000               	movlw	0
 17379     0614  00C0               	movwf	___fldiv@a
 17380     0615  0021               	movlb	1	; select bank1
 17381     0616  0855               	movf	(efgtoa@u+3)^(0+128),w
 17382     0617  0020               	movlb	0	; select bank0
 17383     0618  00C7               	movwf	___fldiv@b+3
 17384     0619  0021               	movlb	1	; select bank1
 17385     061A  0854               	movf	(efgtoa@u+2)^(0+128),w
 17386     061B  0020               	movlb	0	; select bank0
 17387     061C  00C6               	movwf	___fldiv@b+2
 17388     061D  0021               	movlb	1	; select bank1
 17389     061E  0853               	movf	(efgtoa@u+1)^(0+128),w
 17390     061F  0020               	movlb	0	; select bank0
 17391     0620  00C5               	movwf	___fldiv@b+1
 17392     0621  0021               	movlb	1	; select bank1
 17393     0622  0852               	movf	efgtoa@u^(0+128),w
 17394     0623  0020               	movlb	0	; select bank0
 17395     0624  00C4               	movwf	___fldiv@b
 17396     0625  3188  2057  3180   	fcall	___fldiv
 17397     0628  0020               	movlb	0	; select bank0
 17398     0629  0843               	movf	?___fldiv+3,w
 17399     062A  0021               	movlb	1	; select bank1
 17400     062B  00D5               	movwf	(efgtoa@u+3)^(0+128)
 17401     062C  0020               	movlb	0	; select bank0
 17402     062D  0842               	movf	?___fldiv+2,w
 17403     062E  0021               	movlb	1	; select bank1
 17404     062F  00D4               	movwf	(efgtoa@u+2)^(0+128)
 17405     0630  0020               	movlb	0	; select bank0
 17406     0631  0841               	movf	?___fldiv+1,w
 17407     0632  0021               	movlb	1	; select bank1
 17408     0633  00D3               	movwf	(efgtoa@u+1)^(0+128)
 17409     0634  0020               	movlb	0	; select bank0
 17410     0635  0840               	movf	?___fldiv,w
 17411     0636  0021               	movlb	1	; select bank1
 17412     0637  00D2               	movwf	efgtoa@u^(0+128)
 17413     0638                     i1l4942:
 17414                           
 17415                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 17416     0638  30FF               	movlw	255
 17417     0639  07A9               	addwf	efgtoa@ne^(0+128),f
 17418     063A  30FF               	movlw	255
 17419     063B  3DAA               	addwfc	(efgtoa@ne+1)^(0+128),f
 17420     063C                     i1l4944:
 17421                           
 17422                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
 17423     063C  3001               	movlw	1
 17424     063D  07C1               	addwf	efgtoa@i^(0+128),f
 17425     063E  3000               	movlw	0
 17426     063F  3DC2               	addwfc	(efgtoa@i+1)^(0+128),f
 17427     0640                     i1l4946:
 17428                           
 17429                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 17430     0640  0842               	movf	(efgtoa@i+1)^(0+128),w
 17431     0641  3A80               	xorlw	128
 17432     0642  00A5               	movwf	??_efgtoa^(0+128)
 17433     0643  0837               	movf	(efgtoa@m+1)^(0+128),w
 17434     0644  3A80               	xorlw	128
 17435     0645  0225               	subwf	??_efgtoa^(0+128),w
 17436     0646  1D03               	skipz
 17437     0647  2E4A               	goto	u454_25
 17438     0648  0836               	movf	efgtoa@m^(0+128),w
 17439     0649  0241               	subwf	efgtoa@i^(0+128),w
 17440     064A                     u454_25:
 17441     064A  1803               	skipnc
 17442     064B  2E4D               	goto	u454_21
 17443     064C  2E4E               	goto	u454_20
 17444     064D                     u454_21:
 17445     064D  2E5C               	goto	i1l4950
 17446     064E                     u454_20:
 17447     064E                     i1l4948:
 17448     064E  0021               	movlb	1	; select bank1
 17449     064F  084D               	movf	(efgtoa@n+1)^(0+128),w
 17450     0650  3A80               	xorlw	128
 17451     0651  00A5               	movwf	??_efgtoa^(0+128)
 17452     0652  3080               	movlw	128
 17453     0653  0225               	subwf	??_efgtoa^(0+128),w
 17454     0654  1D03               	skipz
 17455     0655  2E58               	goto	u455_25
 17456     0656  304B               	movlw	75
 17457     0657  024C               	subwf	efgtoa@n^(0+128),w
 17458     0658                     u455_25:
 17459     0658  1C03               	skipc
 17460     0659  2E5B               	goto	u455_21
 17461     065A  2E5C               	goto	u455_20
 17462     065B                     u455_21:
 17463     065B  2D0B               	goto	i1l4904
 17464     065C                     u455_20:
 17465     065C                     i1l4950:
 17466                           
 17467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 17468     065C  304F               	movlw	79
 17469     065D  0021               	movlb	1	; select bank1
 17470     065E  00C1               	movwf	efgtoa@i^(0+128)
 17471     065F  3000               	movlw	0
 17472     0660  00C2               	movwf	(efgtoa@i^(0+128)+1)
 17473     0661                     i1l4952:
 17474                           
 17475                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 17476     0661  0841               	movf	efgtoa@i^(0+128),w
 17477     0662  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17478     0663  0086               	movwf	6
 17479     0664  3002               	movlw	2	; select bank4/5
 17480     0665  0087               	movwf	7
 17481     0666  0181               	clrf	1
 17482     0667                     i1l4954:
 17483                           
 17484                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 17485     0667  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 17486     0668  00F0               	movwf	memcpy@s1
 17487     0669  084D               	movf	(efgtoa@n+1)^(0+128),w
 17488     066A  00F2               	movwf	memcpy@n+1
 17489     066B  084C               	movf	efgtoa@n^(0+128),w
 17490     066C  00F1               	movwf	memcpy@n
 17491     066D  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 17492     066E  00A5               	movwf	??_efgtoa^(0+128)
 17493     066F  084C               	movf	efgtoa@n^(0+128),w
 17494     0670  0225               	subwf	??_efgtoa^(0+128),w
 17495     0671  0741               	addwf	efgtoa@i^(0+128),w
 17496     0672  3190  20E0  3180   	fcall	_memcpy
 17497     0675                     i1l4956:
 17498                           
 17499                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 17500     0675  0021               	movlb	1	; select bank1
 17501     0676  084C               	movf	efgtoa@n^(0+128),w
 17502     0677  0241               	subwf	efgtoa@i^(0+128),w
 17503     0678  00CC               	movwf	efgtoa@n^(0+128)
 17504     0679  084D               	movf	(efgtoa@n+1)^(0+128),w
 17505     067A  3B42               	subwfb	(efgtoa@i+1)^(0+128),w
 17506     067B  00CD               	movwf	(efgtoa@n+1)^(0+128)
 17507     067C                     i1l4958:
 17508                           
 17509                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 17510     067C  084B               	movf	efgtoa@sign^(0+128),w
 17511     067D  1D03               	btfss	3,2
 17512     067E  2E80               	goto	u456_21
 17513     067F  2E82               	goto	u456_20
 17514     0680                     u456_21:
 17515     0680  3001               	movlw	1
 17516     0681  2E83               	goto	u457_20
 17517     0682                     u456_20:
 17518     0682  3000               	movlw	0
 17519     0683                     u457_20:
 17520     0683  00A5               	movwf	??_efgtoa^(0+128)
 17521     0684  01A6               	clrf	(??_efgtoa^(0+128)+1)
 17522     0685  0825               	movf	??_efgtoa^(0+128),w
 17523     0686  00C1               	movwf	efgtoa@i^(0+128)
 17524     0687  0826               	movf	(??_efgtoa+1)^(0+128),w
 17525     0688  00C2               	movwf	(efgtoa@i+1)^(0+128)
 17526     0689                     i1l4960:
 17527                           
 17528                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 17529     0689  084B               	movf	efgtoa@sign^(0+128),w
 17530     068A  1903               	btfsc	3,2
 17531     068B  2E8D               	goto	u458_21
 17532     068C  2E8E               	goto	u458_20
 17533     068D                     u458_21:
 17534     068D  2E99               	goto	i1l4964
 17535     068E                     u458_20:
 17536     068E                     i1l4962:
 17537                           
 17538                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 17539     068E  30FF               	movlw	255
 17540     068F  07CC               	addwf	efgtoa@n^(0+128),f
 17541     0690  30FF               	movlw	255
 17542     0691  3DCD               	addwfc	(efgtoa@n+1)^(0+128),f
 17543     0692  084C               	movf	efgtoa@n^(0+128),w
 17544     0693  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17545     0694  0086               	movwf	6
 17546     0695  3002               	movlw	2	; select bank4/5
 17547     0696  0087               	movwf	7
 17548     0697  084B               	movf	efgtoa@sign^(0+128),w
 17549     0698  0081               	movwf	1
 17550     0699                     i1l4964:
 17551                           
 17552                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 17553     0699  0841               	movf	efgtoa@i^(0+128),w
 17554     069A  02BB               	subwf	efgtoa@w^(0+128),f
 17555     069B  0842               	movf	(efgtoa@i+1)^(0+128),w
 17556     069C  3BBC               	subwfb	(efgtoa@w+1)^(0+128),f
 17557     069D                     i1l4966:
 17558                           
 17559                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 17560     069D  084C               	movf	efgtoa@n^(0+128),w
 17561     069E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17562     069F  00FB               	movwf	pad@buf
 17563     06A0  083C               	movf	(efgtoa@w+1)^(0+128),w
 17564     06A1  00FD               	movwf	pad@p+1
 17565     06A2  083B               	movf	efgtoa@w^(0+128),w
 17566     06A3  00FC               	movwf	pad@p
 17567     06A4  0838               	movf	efgtoa@fp^(0+128),w
 17568     06A5  3191  2163  3180   	fcall	_pad
 17569     06A8                     i1l1732:
 17570     06A8  0008               	return
 17571     06A9                     __end_of_efgtoa:
 17572                           
 17573                           	psect	text75
 17574     1F2E                     __ptext75:	
 17575 ;; *************** function _strcpy *****************
 17576 ;; Defined at:
 17577 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 17578 ;; Parameters:    Size  Location     Type
 17579 ;;  dest            1    wreg     PTR unsigned char 
 17580 ;;		 -> dbuf(80), 
 17581 ;;  src             2    0[COMMON] PTR const unsigned char 
 17582 ;;		 -> STR_12(4), STR_9(4), 
 17583 ;; Auto vars:     Size  Location     Type
 17584 ;;  dest            1    5[COMMON] PTR unsigned char 
 17585 ;;		 -> dbuf(80), 
 17586 ;;  d               1    4[COMMON] PTR unsigned char 
 17587 ;;		 -> dbuf(80), 
 17588 ;; Return value:  Size  Location     Type
 17589 ;;                  1    wreg      PTR unsigned char 
 17590 ;; Registers used:
 17591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 17592 ;; Tracked objects:
 17593 ;;		On entry : 0/0
 17594 ;;		On exit  : 0/0
 17595 ;;		Unchanged: 0/0
 17596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17600 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17601 ;;Total ram usage:        6 bytes
 17602 ;; Hardware stack levels used: 1
 17603 ;; This function calls:
 17604 ;;		Nothing
 17605 ;; This function is called by:
 17606 ;;		_efgtoa
 17607 ;; This function uses a non-reentrant model
 17608 ;;
 17609                           
 17610     1F2E                     _strcpy:	
 17611                           ;psect for function _strcpy
 17612                           
 17613                           
 17614                           ;incstack = 0
 17615                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 17616                           ;strcpy@dest stored from wreg
 17617     1F2E  00F5               	movwf	strcpy@dest
 17618     1F2F                     i1l4716:
 17619     1F2F  0875               	movf	strcpy@dest,w
 17620     1F30  00F4               	movwf	strcpy@d
 17621     1F31                     i1l4718:
 17622     1F31  0874               	movf	strcpy@d,w
 17623     1F32  0086               	movwf	6
 17624     1F33  3002               	movlw	2	; select bank4/5
 17625     1F34  0087               	movwf	7
 17626     1F35  0AF4               	incf	strcpy@d,f
 17627     1F36  0871               	movf	strcpy@src+1,w
 17628     1F37  00F3               	movwf	??_strcpy+1
 17629     1F38  0870               	movf	strcpy@src,w
 17630     1F39  00F2               	movwf	??_strcpy
 17631     1F3A  0AF0               	incf	strcpy@src,f
 17632     1F3B  1903               	skipnz
 17633     1F3C  0AF1               	incf	strcpy@src+1,f
 17634     1F3D  0872               	movf	??_strcpy,w
 17635     1F3E  0084               	movwf	4
 17636     1F3F  0873               	movf	??_strcpy+1,w
 17637     1F40  0085               	movwf	5
 17638     1F41  0800               	movf	0,w	;code access
 17639     1F42  3FC0               	movwi [0]fsr1
 17640     1F43  0889               	movf	9,f
 17641     1F44  1D03               	btfss	3,2
 17642     1F45  2F47               	goto	u413_21
 17643     1F46  2F48               	goto	u413_20
 17644     1F47                     u413_21:
 17645     1F47  2F31               	goto	i1l4718
 17646     1F48                     u413_20:
 17647     1F48                     i1l1904:
 17648     1F48  0008               	return
 17649     1F49                     __end_of_strcpy:
 17650                           
 17651                           	psect	text76
 17652     1163                     __ptext76:	
 17653 ;; *************** function _pad *****************
 17654 ;; Defined at:
 17655 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 17656 ;; Parameters:    Size  Location     Type
 17657 ;;  fp              1    wreg     PTR struct _IO_FILE
 17658 ;;		 -> sprintf@f(11), 
 17659 ;;  buf             1   11[COMMON] PTR unsigned char 
 17660 ;;		 -> dbuf(80), 
 17661 ;;  p               2   12[COMMON] int 
 17662 ;; Auto vars:     Size  Location     Type
 17663 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
 17664 ;;		 -> sprintf@f(11), 
 17665 ;;  i               2    5[BANK0 ] int 
 17666 ;; Return value:  Size  Location     Type
 17667 ;;                  1    wreg      void 
 17668 ;; Registers used:
 17669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17670 ;; Tracked objects:
 17671 ;;		On entry : 0/0
 17672 ;;		On exit  : 0/0
 17673 ;;		Unchanged: 0/0
 17674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17675 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17676 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17677 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17678 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17679 ;;Total ram usage:        7 bytes
 17680 ;; Hardware stack levels used: 1
 17681 ;; Hardware stack levels required when called: 3
 17682 ;; This function calls:
 17683 ;;		_fputc
 17684 ;;		_fputs
 17685 ;; This function is called by:
 17686 ;;		_efgtoa
 17687 ;;		_xtoa
 17688 ;; This function uses a non-reentrant model
 17689 ;;
 17690                           
 17691     1163                     _pad:	
 17692                           ;psect for function _pad
 17693                           
 17694                           
 17695                           ;incstack = 0
 17696                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17697                           ;pad@fp stored from wreg
 17698     1163  0020               	movlb	0	; select bank0
 17699     1164  00A7               	movwf	pad@fp
 17700     1165                     i1l4680:
 17701                           
 17702                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 17703     1165  1FFD               	btfss	pad@p+1,7
 17704     1166  2968               	goto	u403_21
 17705     1167  2969               	goto	u403_20
 17706     1168                     u403_21:
 17707     1168  296B               	goto	i1l1717
 17708     1169                     u403_20:
 17709     1169                     i1l4682:
 17710                           
 17711                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 17712     1169  01FC               	clrf	pad@p
 17713     116A  01FD               	clrf	pad@p+1
 17714     116B                     i1l1717:	
 17715                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 207:  }
 17716                           
 17717                           
 17718                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 17719     116B  01A5               	clrf	pad@i
 17720     116C  01A6               	clrf	pad@i+1
 17721                           
 17722                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 17723     116D  297D               	goto	i1l4688
 17724     116E                     i1l4684:
 17725                           
 17726                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 17727     116E  3020               	movlw	32
 17728     116F  00F0               	movwf	fputc@c
 17729     1170  3000               	movlw	0
 17730     1171  00F1               	movwf	fputc@c+1
 17731     1172  0020               	movlb	0	; select bank0
 17732     1173  0827               	movf	pad@fp,w
 17733     1174  00F2               	movwf	fputc@fp
 17734     1175  3188  2000  3191   	fcall	_fputc
 17735     1178                     i1l4686:
 17736                           
 17737                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
 17738     1178  3001               	movlw	1
 17739     1179  0020               	movlb	0	; select bank0
 17740     117A  07A5               	addwf	pad@i,f
 17741     117B  3000               	movlw	0
 17742     117C  3DA6               	addwfc	pad@i+1,f
 17743     117D                     i1l4688:
 17744                           
 17745                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 17746     117D  0826               	movf	pad@i+1,w
 17747     117E  3A80               	xorlw	128
 17748     117F  00A4               	movwf	??_pad
 17749     1180  087D               	movf	pad@p+1,w
 17750     1181  3A80               	xorlw	128
 17751     1182  0224               	subwf	??_pad,w
 17752     1183  1D03               	skipz
 17753     1184  2987               	goto	u404_25
 17754     1185  087C               	movf	pad@p,w
 17755     1186  0225               	subwf	pad@i,w
 17756     1187                     u404_25:
 17757     1187  1C03               	skipc
 17758     1188  298A               	goto	u404_21
 17759     1189  298B               	goto	u404_20
 17760     118A                     u404_21:
 17761     118A  296E               	goto	i1l4684
 17762     118B                     u404_20:
 17763     118B                     i1l4690:
 17764                           
 17765                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 17766     118B  0020               	movlb	0	; select bank0
 17767     118C  0827               	movf	pad@fp,w
 17768     118D  00F8               	movwf	fputs@fp
 17769     118E  087B               	movf	pad@buf,w
 17770     118F  3190  2070  3191   	fcall	_fputs
 17771     1192                     i1l1721:
 17772     1192  0008               	return
 17773     1193                     __end_of_pad:
 17774                           
 17775                           	psect	text77
 17776     1070                     __ptext77:	
 17777 ;; *************** function _fputs *****************
 17778 ;; Defined at:
 17779 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
 17780 ;; Parameters:    Size  Location     Type
 17781 ;;  s               1    wreg     PTR const unsigned char 
 17782 ;;		 -> dbuf(80), 
 17783 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
 17784 ;;		 -> sprintf@f(11), 
 17785 ;; Auto vars:     Size  Location     Type
 17786 ;;  s               1    3[BANK0 ] PTR const unsigned char 
 17787 ;;		 -> dbuf(80), 
 17788 ;;  i               2    1[BANK0 ] int 
 17789 ;;  c               1    0[BANK0 ] unsigned char 
 17790 ;; Return value:  Size  Location     Type
 17791 ;;                  2    8[COMMON] int 
 17792 ;; Registers used:
 17793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17794 ;; Tracked objects:
 17795 ;;		On entry : 0/0
 17796 ;;		On exit  : 0/0
 17797 ;;		Unchanged: 0/0
 17798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17799 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17800 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17801 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17802 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17803 ;;Total ram usage:        7 bytes
 17804 ;; Hardware stack levels used: 1
 17805 ;; Hardware stack levels required when called: 2
 17806 ;; This function calls:
 17807 ;;		_fputc
 17808 ;; This function is called by:
 17809 ;;		_pad
 17810 ;; This function uses a non-reentrant model
 17811 ;;
 17812                           
 17813     1070                     _fputs:	
 17814                           ;psect for function _fputs
 17815                           
 17816                           
 17817                           ;incstack = 0
 17818                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17819                           ;fputs@s stored from wreg
 17820     1070  0020               	movlb	0	; select bank0
 17821     1071  00A3               	movwf	fputs@s
 17822     1072                     i1l4280:
 17823     1072  01A1               	clrf	fputs@i
 17824     1073  01A2               	clrf	fputs@i+1
 17825     1074  2886               	goto	i1l4286
 17826     1075                     i1l4282:
 17827     1075  0820               	movf	fputs@c,w
 17828     1076  00F9               	movwf	??_fputs
 17829     1077  01FA               	clrf	??_fputs+1
 17830     1078  0879               	movf	??_fputs,w
 17831     1079  00F0               	movwf	fputc@c
 17832     107A  087A               	movf	??_fputs+1,w
 17833     107B  00F1               	movwf	fputc@c+1
 17834     107C  0878               	movf	fputs@fp,w
 17835     107D  00F2               	movwf	fputc@fp
 17836     107E  3188  2000  3190   	fcall	_fputc
 17837     1081                     i1l4284:
 17838     1081  3001               	movlw	1
 17839     1082  0020               	movlb	0	; select bank0
 17840     1083  07A1               	addwf	fputs@i,f
 17841     1084  3000               	movlw	0
 17842     1085  3DA2               	addwfc	fputs@i+1,f
 17843     1086                     i1l4286:
 17844     1086  0821               	movf	fputs@i,w
 17845     1087  0723               	addwf	fputs@s,w
 17846     1088  00F9               	movwf	??_fputs
 17847     1089  0879               	movf	??_fputs,w
 17848     108A  0086               	movwf	6
 17849     108B  3002               	movlw	2	; select bank4/5
 17850     108C  0087               	movwf	7
 17851     108D  0801               	movf	1,w
 17852     108E  00A0               	movwf	fputs@c
 17853     108F  0820               	movf	fputs@c,w
 17854     1090  1D03               	btfss	3,2
 17855     1091  2893               	goto	u323_21
 17856     1092  2894               	goto	u323_20
 17857     1093                     u323_21:
 17858     1093  2875               	goto	i1l4282
 17859     1094                     u323_20:
 17860     1094                     i1l1895:
 17861     1094  0008               	return
 17862     1095                     __end_of_fputs:
 17863                           
 17864                           	psect	text78
 17865     0800                     __ptext78:	
 17866 ;; *************** function _fputc *****************
 17867 ;; Defined at:
 17868 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
 17869 ;; Parameters:    Size  Location     Type
 17870 ;;  c               2    0[COMMON] int 
 17871 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
 17872 ;;		 -> sprintf@f(11), 
 17873 ;; Auto vars:     Size  Location     Type
 17874 ;;		None
 17875 ;; Return value:  Size  Location     Type
 17876 ;;                  2    0[COMMON] int 
 17877 ;; Registers used:
 17878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17879 ;; Tracked objects:
 17880 ;;		On entry : 0/0
 17881 ;;		On exit  : 0/0
 17882 ;;		Unchanged: 0/0
 17883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17884 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17886 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17887 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17888 ;;Total ram usage:        8 bytes
 17889 ;; Hardware stack levels used: 1
 17890 ;; Hardware stack levels required when called: 1
 17891 ;; This function calls:
 17892 ;;		_putch
 17893 ;; This function is called by:
 17894 ;;		_pad
 17895 ;;		_vfpfcnvrt
 17896 ;;		_fputs
 17897 ;; This function uses a non-reentrant model
 17898 ;;
 17899                           
 17900     0800                     _fputc:	
 17901                           ;psect for function _fputc
 17902                           
 17903     0800                     i1l4052:	
 17904                           ;incstack = 0
 17905                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17906                           
 17907     0800  0872               	movf	fputc@fp,w
 17908     0801  1903               	btfsc	3,2
 17909     0802  2804               	goto	u271_21
 17910     0803  2805               	goto	u271_20
 17911     0804                     u271_21:
 17912     0804  280A               	goto	i1l4056
 17913     0805                     u271_20:
 17914     0805                     i1l4054:
 17915     0805  0872               	movf	fputc@fp,w
 17916     0806  1D03               	btfss	3,2
 17917     0807  2809               	goto	u272_21
 17918     0808  280A               	goto	u272_20
 17919     0809                     u272_21:
 17920     0809  280F               	goto	i1l4058
 17921     080A                     u272_20:
 17922     080A                     i1l4056:
 17923     080A  0870               	movf	fputc@c,w
 17924     080B  319C  24D7  3188   	fcall	_putch
 17925     080E  2856               	goto	i1l1887
 17926     080F                     i1l4058:
 17927     080F  0872               	movf	fputc@fp,w
 17928     0810  3E09               	addlw	9
 17929     0811  0086               	movwf	6
 17930     0812  3001               	movlw	1	; select bank2/3
 17931     0813  0087               	movwf	7
 17932     0814  0016               	moviw fsr1++
 17933     0815  0401               	iorwf	1,w
 17934     0816  1903               	btfsc	3,2
 17935     0817  2819               	goto	u273_21
 17936     0818  281A               	goto	u273_20
 17937     0819                     u273_21:
 17938     0819  283A               	goto	i1l4062
 17939     081A                     u273_20:
 17940     081A                     i1l4060:
 17941     081A  0872               	movf	fputc@fp,w
 17942     081B  3E09               	addlw	9
 17943     081C  0086               	movwf	6
 17944     081D  3001               	movlw	1	; select bank2/3
 17945     081E  0087               	movwf	7
 17946     081F  3F40               	moviw [0]fsr1
 17947     0820  00F3               	movwf	??_fputc
 17948     0821  3F41               	moviw [1]fsr1
 17949     0822  00F4               	movwf	??_fputc+1
 17950     0823  0872               	movf	fputc@fp,w
 17951     0824  3E02               	addlw	2
 17952     0825  0086               	movwf	6
 17953     0826  3001               	movlw	1	; select bank2/3
 17954     0827  0087               	movwf	7
 17955     0828  3F40               	moviw [0]fsr1
 17956     0829  00F5               	movwf	??_fputc+2
 17957     082A  3F41               	moviw [1]fsr1
 17958     082B  00F6               	movwf	??_fputc+3
 17959     082C  0876               	movf	??_fputc+3,w
 17960     082D  3A80               	xorlw	128
 17961     082E  00F7               	movwf	??_fputc+4
 17962     082F  0874               	movf	??_fputc+1,w
 17963     0830  3A80               	xorlw	128
 17964     0831  0277               	subwf	??_fputc+4,w
 17965     0832  1D03               	skipz
 17966     0833  2836               	goto	u274_25
 17967     0834  0873               	movf	??_fputc,w
 17968     0835  0275               	subwf	??_fputc+2,w
 17969     0836                     u274_25:
 17970     0836  1803               	skipnc
 17971     0837  2839               	goto	u274_21
 17972     0838  283A               	goto	u274_20
 17973     0839                     u274_21:
 17974     0839  2856               	goto	i1l1887
 17975     083A                     u274_20:
 17976     083A                     i1l4062:
 17977     083A  0872               	movf	fputc@fp,w
 17978     083B  0086               	movwf	6
 17979     083C  3001               	movlw	1	; select bank2/3
 17980     083D  0087               	movwf	7
 17981     083E  0872               	movf	fputc@fp,w
 17982     083F  3E02               	addlw	2
 17983     0840  0084               	movwf	4
 17984     0841  3001               	movlw	1	; select bank2/3
 17985     0842  0085               	movwf	5
 17986     0843  0800               	movf	0,w
 17987     0844  0701               	addwf	1,w
 17988     0845  00F3               	movwf	??_fputc
 17989     0846  0873               	movf	??_fputc,w
 17990     0847  0086               	movwf	6
 17991     0848  3001               	movlw	1	; select bank2/3
 17992     0849  0087               	movwf	7
 17993     084A  0870               	movf	fputc@c,w
 17994     084B  0081               	movwf	1
 17995     084C                     i1l4064:
 17996     084C  0872               	movf	fputc@fp,w
 17997     084D  3E02               	addlw	2
 17998     084E  0086               	movwf	6
 17999     084F  3001               	movlw	1	; select bank2/3
 18000     0850  0087               	movwf	7
 18001     0851  3001               	movlw	1
 18002     0852  0781               	addwf	1,f
 18003     0853  3141               	addfsr 1,1
 18004     0854  1803               	skipnc
 18005     0855  0A81               	incf	1,f
 18006     0856                     i1l1887:
 18007     0856  0008               	return
 18008     0857                     __end_of_fputc:
 18009                           
 18010                           	psect	text79
 18011     1CD7                     __ptext79:	
 18012 ;; *************** function _putch *****************
 18013 ;; Defined at:
 18014 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
 18015 ;; Parameters:    Size  Location     Type
 18016 ;;  c               1    wreg     unsigned char 
 18017 ;; Auto vars:     Size  Location     Type
 18018 ;;  c               1    0[COMMON] unsigned char 
 18019 ;; Return value:  Size  Location     Type
 18020 ;;                  1    wreg      void 
 18021 ;; Registers used:
 18022 ;;		wreg
 18023 ;; Tracked objects:
 18024 ;;		On entry : 0/0
 18025 ;;		On exit  : 0/0
 18026 ;;		Unchanged: 0/0
 18027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18032 ;;Total ram usage:        0 bytes
 18033 ;; Hardware stack levels used: 1
 18034 ;; This function calls:
 18035 ;;		Nothing
 18036 ;; This function is called by:
 18037 ;;		_fputc
 18038 ;; This function uses a non-reentrant model
 18039 ;;
 18040                           
 18041     1CD7                     _putch:	
 18042                           ;psect for function _putch
 18043                           
 18044     1CD7                     i1l1898:	
 18045                           ;incstack = 0
 18046                           ; Regs used in _putch: [wreg]
 18047                           
 18048     1CD7  0008               	return
 18049     1CD8                     __end_of_putch:
 18050                           
 18051                           	psect	text80
 18052     10E0                     __ptext80:	
 18053 ;; *************** function _memcpy *****************
 18054 ;; Defined at:
 18055 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 18056 ;; Parameters:    Size  Location     Type
 18057 ;;  d1              1    wreg     PTR void 
 18058 ;;		 -> dbuf(80), 
 18059 ;;  s1              1    0[COMMON] PTR const void 
 18060 ;;		 -> dbuf(80), 
 18061 ;;  n               2    1[COMMON] unsigned int 
 18062 ;; Auto vars:     Size  Location     Type
 18063 ;;  d1              1    5[COMMON] PTR void 
 18064 ;;		 -> dbuf(80), 
 18065 ;;  s               1    7[COMMON] PTR const unsigned char 
 18066 ;;		 -> dbuf(80), 
 18067 ;;  d               1    6[COMMON] PTR unsigned char 
 18068 ;;		 -> dbuf(80), 
 18069 ;;  tmp             1    4[COMMON] unsigned char 
 18070 ;; Return value:  Size  Location     Type
 18071 ;;                  1    wreg      PTR void 
 18072 ;; Registers used:
 18073 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18074 ;; Tracked objects:
 18075 ;;		On entry : 0/0
 18076 ;;		On exit  : 0/0
 18077 ;;		Unchanged: 0/0
 18078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18079 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18080 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18082 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18083 ;;Total ram usage:        8 bytes
 18084 ;; Hardware stack levels used: 1
 18085 ;; This function calls:
 18086 ;;		Nothing
 18087 ;; This function is called by:
 18088 ;;		_efgtoa
 18089 ;; This function uses a non-reentrant model
 18090 ;;
 18091                           
 18092     10E0                     _memcpy:	
 18093                           ;psect for function _memcpy
 18094                           
 18095                           
 18096                           ;incstack = 0
 18097                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
 18098                           ;memcpy@d1 stored from wreg
 18099     10E0  00F5               	movwf	memcpy@d1
 18100     10E1                     i1l4758:
 18101     10E1  0870               	movf	memcpy@s1,w
 18102     10E2  00F7               	movwf	memcpy@s
 18103     10E3  0875               	movf	memcpy@d1,w
 18104     10E4  00F6               	movwf	memcpy@d
 18105     10E5  28FA               	goto	i1l1872
 18106     10E6                     i1l4760:
 18107     10E6  0877               	movf	memcpy@s,w
 18108     10E7  0086               	movwf	6
 18109     10E8  3002               	movlw	2	; select bank4/5
 18110     10E9  0087               	movwf	7
 18111     10EA  0801               	movf	1,w
 18112     10EB  00F4               	movwf	memcpy@tmp
 18113     10EC                     i1l4762:
 18114     10EC  3001               	movlw	1
 18115     10ED  00F3               	movwf	??_memcpy
 18116     10EE  0873               	movf	??_memcpy,w
 18117     10EF  07F7               	addwf	memcpy@s,f
 18118     10F0                     i1l4764:
 18119     10F0  0876               	movf	memcpy@d,w
 18120     10F1  0086               	movwf	6
 18121     10F2  3002               	movlw	2	; select bank4/5
 18122     10F3  0087               	movwf	7
 18123     10F4  0874               	movf	memcpy@tmp,w
 18124     10F5  0081               	movwf	1
 18125     10F6  3001               	movlw	1
 18126     10F7  00F3               	movwf	??_memcpy
 18127     10F8  0873               	movf	??_memcpy,w
 18128     10F9  07F6               	addwf	memcpy@d,f
 18129     10FA                     i1l1872:
 18130     10FA  3001               	movlw	1
 18131     10FB  02F1               	subwf	memcpy@n,f
 18132     10FC  3000               	movlw	0
 18133     10FD  3BF2               	subwfb	memcpy@n+1,f
 18134     10FE  0A71               	incf	memcpy@n,w
 18135     10FF  1D03               	skipz
 18136     1100  2905               	goto	u426_21
 18137     1101  0A72               	incf	memcpy@n+1,w
 18138     1102  1D03               	btfss	3,2
 18139     1103  2905               	goto	u426_21
 18140     1104  2906               	goto	u426_20
 18141     1105                     u426_21:
 18142     1105  28E6               	goto	i1l4760
 18143     1106                     u426_20:
 18144     1106                     i1l1875:
 18145     1106  0008               	return
 18146     1107                     __end_of_memcpy:
 18147                           
 18148                           	psect	text81
 18149     1E90                     __ptext81:	
 18150 ;; *************** function _labs *****************
 18151 ;; Defined at:
 18152 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
 18153 ;; Parameters:    Size  Location     Type
 18154 ;;  a               4    0[COMMON] long 
 18155 ;; Auto vars:     Size  Location     Type
 18156 ;;		None
 18157 ;; Return value:  Size  Location     Type
 18158 ;;                  4    0[COMMON] long 
 18159 ;; Registers used:
 18160 ;;		wreg, status,2, status,0
 18161 ;; Tracked objects:
 18162 ;;		On entry : 0/0
 18163 ;;		On exit  : 0/0
 18164 ;;		Unchanged: 0/0
 18165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18169 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18170 ;;Total ram usage:        4 bytes
 18171 ;; Hardware stack levels used: 1
 18172 ;; This function calls:
 18173 ;;		Nothing
 18174 ;; This function is called by:
 18175 ;;		_efgtoa
 18176 ;; This function uses a non-reentrant model
 18177 ;;
 18178                           
 18179     1E90                     _labs:	
 18180                           ;psect for function _labs
 18181                           
 18182     1E90                     i1l4720:	
 18183                           ;incstack = 0
 18184                           ; Regs used in _labs: [wreg+status,2+status,0]
 18185                           
 18186     1E90  1BF3               	btfsc	labs@a+3,7
 18187     1E91  2E93               	goto	u414_21
 18188     1E92  2E94               	goto	u414_20
 18189     1E93                     u414_21:
 18190     1E93  2E95               	goto	i1l4724
 18191     1E94                     u414_20:
 18192     1E94                     i1l4722:
 18193     1E94  2EA4               	goto	i1l1869
 18194     1E95                     i1l4724:
 18195     1E95  0970               	comf	labs@a,w
 18196     1E96  00F0               	movwf	?_labs
 18197     1E97  0971               	comf	labs@a+1,w
 18198     1E98  00F1               	movwf	?_labs+1
 18199     1E99  0972               	comf	labs@a+2,w
 18200     1E9A  00F2               	movwf	?_labs+2
 18201     1E9B  0973               	comf	labs@a+3,w
 18202     1E9C  00F3               	movwf	?_labs+3
 18203     1E9D  0AF0               	incf	?_labs,f
 18204     1E9E  1903               	skipnz
 18205     1E9F  0AF1               	incf	?_labs+1,f
 18206     1EA0  1903               	skipnz
 18207     1EA1  0AF2               	incf	?_labs+2,f
 18208     1EA2  1903               	skipnz
 18209     1EA3  0AF3               	incf	?_labs+3,f
 18210     1EA4                     i1l1869:
 18211     1EA4  0008               	return
 18212     1EA5                     __end_of_labs:
 18213                           
 18214                           	psect	text82
 18215     06A9                     __ptext82:	
 18216 ;; *************** function _floorf *****************
 18217 ;; Defined at:
 18218 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
 18219 ;; Parameters:    Size  Location     Type
 18220 ;;  x               4   58[BANK0 ] float 
 18221 ;; Auto vars:     Size  Location     Type
 18222 ;;  u               4   74[BANK0 ] struct .
 18223 ;;  m               4   68[BANK0 ] unsigned long 
 18224 ;;  e               2   72[BANK0 ] int 
 18225 ;; Return value:  Size  Location     Type
 18226 ;;                  4   58[BANK0 ] float 
 18227 ;; Registers used:
 18228 ;;		wreg, status,2, status,0
 18229 ;; Tracked objects:
 18230 ;;		On entry : 0/0
 18231 ;;		On exit  : 0/0
 18232 ;;		Unchanged: 0/0
 18233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18234 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18235 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18236 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18237 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18238 ;;Total ram usage:       20 bytes
 18239 ;; Hardware stack levels used: 1
 18240 ;; This function calls:
 18241 ;;		Nothing
 18242 ;; This function is called by:
 18243 ;;		_efgtoa
 18244 ;; This function uses a non-reentrant model
 18245 ;;
 18246                           
 18247     06A9                     _floorf:	
 18248                           ;psect for function _floorf
 18249                           
 18250     06A9                     i1l4728:	
 18251                           ;incstack = 0
 18252                           ; Regs used in _floorf: [wreg+status,2+status,0]
 18253                           
 18254     06A9  0023               	movlb	3	; select bank3
 18255     06AA  0823               	movf	(floorf@F521+3)^(0+384),w
 18256     06AB  0020               	movlb	0	; select bank0
 18257     06AC  00ED               	movwf	floorf@u+3
 18258     06AD  0023               	movlb	3	; select bank3
 18259     06AE  0822               	movf	(floorf@F521+2)^(0+384),w
 18260     06AF  0020               	movlb	0	; select bank0
 18261     06B0  00EC               	movwf	floorf@u+2
 18262     06B1  0023               	movlb	3	; select bank3
 18263     06B2  0821               	movf	(floorf@F521+1)^(0+384),w
 18264     06B3  0020               	movlb	0	; select bank0
 18265     06B4  00EB               	movwf	floorf@u+1
 18266     06B5  0023               	movlb	3	; select bank3
 18267     06B6  0820               	movf	floorf@F521^(0+384),w
 18268     06B7  0020               	movlb	0	; select bank0
 18269     06B8  00EA               	movwf	floorf@u
 18270     06B9  085D               	movf	floorf@x+3,w
 18271     06BA  00ED               	movwf	floorf@u+3
 18272     06BB  085C               	movf	floorf@x+2,w
 18273     06BC  00EC               	movwf	floorf@u+2
 18274     06BD  085B               	movf	floorf@x+1,w
 18275     06BE  00EB               	movwf	floorf@u+1
 18276     06BF  085A               	movf	floorf@x,w
 18277     06C0  00EA               	movwf	floorf@u
 18278     06C1                     i1l4730:
 18279     06C1  086A               	movf	floorf@u,w
 18280     06C2  00DE               	movwf	??_floorf
 18281     06C3  086B               	movf	floorf@u+1,w
 18282     06C4  00DF               	movwf	??_floorf+1
 18283     06C5  086C               	movf	floorf@u+2,w
 18284     06C6  00E0               	movwf	??_floorf+2
 18285     06C7  086D               	movf	floorf@u+3,w
 18286     06C8  00E1               	movwf	??_floorf+3
 18287     06C9  3017               	movlw	23
 18288     06CA                     u415_25:
 18289     06CA  36E1               	lsrf	??_floorf+3,f
 18290     06CB  0CE0               	rrf	??_floorf+2,f
 18291     06CC  0CDF               	rrf	??_floorf+1,f
 18292     06CD  0CDE               	rrf	??_floorf,f
 18293     06CE                     u415_20:
 18294     06CE  0B89               	decfsz	9,f
 18295     06CF  2ECA               	goto	u415_25
 18296     06D0  30FF               	movlw	255
 18297     06D1  055E               	andwf	??_floorf,w
 18298     06D2  00E2               	movwf	??_floorf+4
 18299     06D3  3000               	movlw	0
 18300     06D4  055F               	andwf	??_floorf+1,w
 18301     06D5  00E3               	movwf	??_floorf+5
 18302     06D6  0862               	movf	??_floorf+4,w
 18303     06D7  3E81               	addlw	129
 18304     06D8  00E8               	movwf	floorf@e
 18305     06D9  30FF               	movlw	255
 18306     06DA  3D63               	addwfc	??_floorf+5,w
 18307     06DB  00E9               	movwf	floorf@e+1
 18308     06DC                     i1l4732:
 18309     06DC  0869               	movf	floorf@e+1,w
 18310     06DD  3A80               	xorlw	128
 18311     06DE  00DE               	movwf	??_floorf
 18312     06DF  3080               	movlw	128
 18313     06E0  025E               	subwf	??_floorf,w
 18314     06E1  1D03               	skipz
 18315     06E2  2EE5               	goto	u416_25
 18316     06E3  3017               	movlw	23
 18317     06E4  0268               	subwf	floorf@e,w
 18318     06E5                     u416_25:
 18319     06E5  1C03               	skipc
 18320     06E6  2EE8               	goto	u416_21
 18321     06E7  2EE9               	goto	u416_20
 18322     06E8                     u416_21:
 18323     06E8  2EEA               	goto	i1l1854
 18324     06E9                     u416_20:
 18325     06E9                     i1l4734:
 18326     06E9  2F93               	goto	i1l1855
 18327     06EA                     i1l1854:
 18328     06EA  0020               	movlb	0	; select bank0
 18329     06EB  1BE9               	btfsc	floorf@e+1,7
 18330     06EC  2EEE               	goto	u417_21
 18331     06ED  2EEF               	goto	u417_20
 18332     06EE                     u417_21:
 18333     06EE  2F4C               	goto	i1l4748
 18334     06EF                     u417_20:
 18335     06EF                     i1l4736:
 18336     06EF  30FF               	movlw	255
 18337     06F0  00DE               	movwf	??_floorf
 18338     06F1  30FF               	movlw	255
 18339     06F2  00DF               	movwf	??_floorf+1
 18340     06F3  307F               	movlw	127
 18341     06F4  00E0               	movwf	??_floorf+2
 18342     06F5  3000               	movlw	0
 18343     06F6  00E1               	movwf	??_floorf+3
 18344     06F7  0A68               	incf	floorf@e,w
 18345     06F8  2EFD               	goto	u418_20
 18346     06F9                     u418_25:
 18347     06F9  37E1               	asrf	??_floorf+3,f
 18348     06FA  0CE0               	rrf	??_floorf+2,f
 18349     06FB  0CDF               	rrf	??_floorf+1,f
 18350     06FC  0CDE               	rrf	??_floorf,f
 18351     06FD                     u418_20:
 18352     06FD  0B89               	decfsz	9,f
 18353     06FE  2EF9               	goto	u418_25
 18354     06FF  0861               	movf	??_floorf+3,w
 18355     0700  00E7               	movwf	floorf@m+3
 18356     0701  0860               	movf	??_floorf+2,w
 18357     0702  00E6               	movwf	floorf@m+2
 18358     0703  085F               	movf	??_floorf+1,w
 18359     0704  00E5               	movwf	floorf@m+1
 18360     0705  085E               	movf	??_floorf,w
 18361     0706  00E4               	movwf	floorf@m
 18362     0707                     i1l4738:
 18363     0707  086A               	movf	floorf@u,w
 18364     0708  0564               	andwf	floorf@m,w
 18365     0709  00DE               	movwf	??_floorf
 18366     070A  086B               	movf	floorf@u+1,w
 18367     070B  0565               	andwf	floorf@m+1,w
 18368     070C  00DF               	movwf	??_floorf+1
 18369     070D  086C               	movf	floorf@u+2,w
 18370     070E  0566               	andwf	floorf@m+2,w
 18371     070F  00E0               	movwf	??_floorf+2
 18372     0710  086D               	movf	floorf@u+3,w
 18373     0711  0567               	andwf	floorf@m+3,w
 18374     0712  00E1               	movwf	??_floorf+3
 18375     0713  0861               	movf	??_floorf+3,w
 18376     0714  0460               	iorwf	??_floorf+2,w
 18377     0715  045F               	iorwf	??_floorf+1,w
 18378     0716  045E               	iorwf	??_floorf,w
 18379     0717  1D03               	skipz
 18380     0718  2F1A               	goto	u419_21
 18381     0719  2F1B               	goto	u419_20
 18382     071A                     u419_21:
 18383     071A  2F1C               	goto	i1l4742
 18384     071B                     u419_20:
 18385     071B  2EE9               	goto	i1l4734
 18386     071C                     i1l4742:
 18387     071C  086A               	movf	floorf@u,w
 18388     071D  00DE               	movwf	??_floorf
 18389     071E  086B               	movf	floorf@u+1,w
 18390     071F  00DF               	movwf	??_floorf+1
 18391     0720  086C               	movf	floorf@u+2,w
 18392     0721  00E0               	movwf	??_floorf+2
 18393     0722  086D               	movf	floorf@u+3,w
 18394     0723  00E1               	movwf	??_floorf+3
 18395     0724  301F               	movlw	31
 18396     0725                     u420_25:
 18397     0725  36E1               	lsrf	??_floorf+3,f
 18398     0726  0CE0               	rrf	??_floorf+2,f
 18399     0727  0CDF               	rrf	??_floorf+1,f
 18400     0728  0CDE               	rrf	??_floorf,f
 18401     0729                     u420_20:
 18402     0729  0B89               	decfsz	9,f
 18403     072A  2F25               	goto	u420_25
 18404     072B  0861               	movf	??_floorf+3,w
 18405     072C  0460               	iorwf	??_floorf+2,w
 18406     072D  045F               	iorwf	??_floorf+1,w
 18407     072E  045E               	iorwf	??_floorf,w
 18408     072F  1903               	skipnz
 18409     0730  2F32               	goto	u421_21
 18410     0731  2F33               	goto	u421_20
 18411     0732                     u421_21:
 18412     0732  2F3B               	goto	i1l4746
 18413     0733                     u421_20:
 18414     0733                     i1l4744:
 18415     0733  0864               	movf	floorf@m,w
 18416     0734  07EA               	addwf	floorf@u,f
 18417     0735  0865               	movf	floorf@m+1,w
 18418     0736  3DEB               	addwfc	floorf@u+1,f
 18419     0737  0866               	movf	floorf@m+2,w
 18420     0738  3DEC               	addwfc	floorf@u+2,f
 18421     0739  0867               	movf	floorf@m+3,w
 18422     073A  3DED               	addwfc	floorf@u+3,f
 18423     073B                     i1l4746:
 18424     073B  0964               	comf	floorf@m,w
 18425     073C  00DE               	movwf	??_floorf
 18426     073D  0965               	comf	floorf@m+1,w
 18427     073E  00DF               	movwf	??_floorf+1
 18428     073F  0966               	comf	floorf@m+2,w
 18429     0740  00E0               	movwf	??_floorf+2
 18430     0741  0967               	comf	floorf@m+3,w
 18431     0742  00E1               	movwf	??_floorf+3
 18432     0743  085E               	movf	??_floorf,w
 18433     0744  05EA               	andwf	floorf@u,f
 18434     0745  085F               	movf	??_floorf+1,w
 18435     0746  05EB               	andwf	floorf@u+1,f
 18436     0747  0860               	movf	??_floorf+2,w
 18437     0748  05EC               	andwf	floorf@u+2,f
 18438     0749  0861               	movf	??_floorf+3,w
 18439     074A  05ED               	andwf	floorf@u+3,f
 18440     074B  2F8B               	goto	i1l1859
 18441     074C                     i1l4748:
 18442     074C  086A               	movf	floorf@u,w
 18443     074D  00DE               	movwf	??_floorf
 18444     074E  086B               	movf	floorf@u+1,w
 18445     074F  00DF               	movwf	??_floorf+1
 18446     0750  086C               	movf	floorf@u+2,w
 18447     0751  00E0               	movwf	??_floorf+2
 18448     0752  086D               	movf	floorf@u+3,w
 18449     0753  00E1               	movwf	??_floorf+3
 18450     0754  301F               	movlw	31
 18451     0755                     u422_25:
 18452     0755  36E1               	lsrf	??_floorf+3,f
 18453     0756  0CE0               	rrf	??_floorf+2,f
 18454     0757  0CDF               	rrf	??_floorf+1,f
 18455     0758  0CDE               	rrf	??_floorf,f
 18456     0759                     u422_20:
 18457     0759  0B89               	decfsz	9,f
 18458     075A  2F55               	goto	u422_25
 18459     075B  0861               	movf	??_floorf+3,w
 18460     075C  0460               	iorwf	??_floorf+2,w
 18461     075D  045F               	iorwf	??_floorf+1,w
 18462     075E  045E               	iorwf	??_floorf,w
 18463     075F  1D03               	skipz
 18464     0760  2F62               	goto	u423_21
 18465     0761  2F63               	goto	u423_20
 18466     0762                     u423_21:
 18467     0762  2F6C               	goto	i1l4752
 18468     0763                     u423_20:
 18469     0763                     i1l4750:
 18470     0763  3000               	movlw	0
 18471     0764  00ED               	movwf	floorf@u+3
 18472     0765  3000               	movlw	0
 18473     0766  00EC               	movwf	floorf@u+2
 18474     0767  3000               	movlw	0
 18475     0768  00EB               	movwf	floorf@u+1
 18476     0769  3000               	movlw	0
 18477     076A  00EA               	movwf	floorf@u
 18478     076B  2F8B               	goto	i1l1859
 18479     076C                     i1l4752:
 18480     076C  086A               	movf	floorf@u,w
 18481     076D  00DE               	movwf	??_floorf
 18482     076E  086B               	movf	floorf@u+1,w
 18483     076F  00DF               	movwf	??_floorf+1
 18484     0770  086C               	movf	floorf@u+2,w
 18485     0771  00E0               	movwf	??_floorf+2
 18486     0772  086D               	movf	floorf@u+3,w
 18487     0773  00E1               	movwf	??_floorf+3
 18488     0774  3001               	movlw	1
 18489     0775                     u424_25:
 18490     0775  35DE               	lslf	??_floorf,f
 18491     0776  0DDF               	rlf	??_floorf+1,f
 18492     0777  0DE0               	rlf	??_floorf+2,f
 18493     0778  0DE1               	rlf	??_floorf+3,f
 18494     0779                     u424_20:
 18495     0779  0B89               	decfsz	9,f
 18496     077A  2F75               	goto	u424_25
 18497     077B  0861               	movf	??_floorf+3,w
 18498     077C  0460               	iorwf	??_floorf+2,w
 18499     077D  045F               	iorwf	??_floorf+1,w
 18500     077E  045E               	iorwf	??_floorf,w
 18501     077F  1903               	skipnz
 18502     0780  2F82               	goto	u425_21
 18503     0781  2F83               	goto	u425_20
 18504     0782                     u425_21:
 18505     0782  2F8B               	goto	i1l1859
 18506     0783                     u425_20:
 18507     0783                     i1l4754:
 18508     0783  30BF               	movlw	191
 18509     0784  00ED               	movwf	floorf@u+3
 18510     0785  3080               	movlw	128
 18511     0786  00EC               	movwf	floorf@u+2
 18512     0787  3000               	movlw	0
 18513     0788  00EB               	movwf	floorf@u+1
 18514     0789  3000               	movlw	0
 18515     078A  00EA               	movwf	floorf@u
 18516     078B                     i1l1859:
 18517     078B  086D               	movf	floorf@u+3,w
 18518     078C  00DD               	movwf	?_floorf+3
 18519     078D  086C               	movf	floorf@u+2,w
 18520     078E  00DC               	movwf	?_floorf+2
 18521     078F  086B               	movf	floorf@u+1,w
 18522     0790  00DB               	movwf	?_floorf+1
 18523     0791  086A               	movf	floorf@u,w
 18524     0792  00DA               	movwf	?_floorf
 18525     0793                     i1l1855:
 18526     0793  0008               	return
 18527     0794                     __end_of_floorf:
 18528                           
 18529                           	psect	text83
 18530     143A                     __ptext83:	
 18531 ;; *************** function ___fpclassifyf *****************
 18532 ;; Defined at:
 18533 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
 18534 ;; Parameters:    Size  Location     Type
 18535 ;;  x               4    0[COMMON] float 
 18536 ;; Auto vars:     Size  Location     Type
 18537 ;;  u               4    2[BANK0 ] struct .
 18538 ;;  e               2    0[BANK0 ] int 
 18539 ;; Return value:  Size  Location     Type
 18540 ;;                  2    0[COMMON] int 
 18541 ;; Registers used:
 18542 ;;		wreg, status,2, status,0
 18543 ;; Tracked objects:
 18544 ;;		On entry : 0/0
 18545 ;;		On exit  : 0/0
 18546 ;;		Unchanged: 0/0
 18547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18548 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18549 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18550 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18551 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18552 ;;Total ram usage:       16 bytes
 18553 ;; Hardware stack levels used: 1
 18554 ;; This function calls:
 18555 ;;		Nothing
 18556 ;; This function is called by:
 18557 ;;		_efgtoa
 18558 ;; This function uses a non-reentrant model
 18559 ;;
 18560                           
 18561     143A                     ___fpclassifyf:	
 18562                           ;psect for function ___fpclassifyf
 18563                           
 18564     143A                     i1l4692:	
 18565                           ;incstack = 0
 18566                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 18567                           
 18568     143A  0023               	movlb	3	; select bank3
 18569     143B  0827               	movf	(___fpclassifyf@F465+3)^(0+384),w
 18570     143C  0020               	movlb	0	; select bank0
 18571     143D  00A5               	movwf	___fpclassifyf@u+3
 18572     143E  0023               	movlb	3	; select bank3
 18573     143F  0826               	movf	(___fpclassifyf@F465+2)^(0+384),w
 18574     1440  0020               	movlb	0	; select bank0
 18575     1441  00A4               	movwf	___fpclassifyf@u+2
 18576     1442  0023               	movlb	3	; select bank3
 18577     1443  0825               	movf	(___fpclassifyf@F465+1)^(0+384),w
 18578     1444  0020               	movlb	0	; select bank0
 18579     1445  00A3               	movwf	___fpclassifyf@u+1
 18580     1446  0023               	movlb	3	; select bank3
 18581     1447  0824               	movf	___fpclassifyf@F465^(0+384),w
 18582     1448  0020               	movlb	0	; select bank0
 18583     1449  00A2               	movwf	___fpclassifyf@u
 18584     144A  0873               	movf	___fpclassifyf@x+3,w
 18585     144B  00A5               	movwf	___fpclassifyf@u+3
 18586     144C  0872               	movf	___fpclassifyf@x+2,w
 18587     144D  00A4               	movwf	___fpclassifyf@u+2
 18588     144E  0871               	movf	___fpclassifyf@x+1,w
 18589     144F  00A3               	movwf	___fpclassifyf@u+1
 18590     1450  0870               	movf	___fpclassifyf@x,w
 18591     1451  00A2               	movwf	___fpclassifyf@u
 18592     1452                     i1l4694:
 18593     1452  0822               	movf	___fpclassifyf@u,w
 18594     1453  00F4               	movwf	??___fpclassifyf
 18595     1454  0823               	movf	___fpclassifyf@u+1,w
 18596     1455  00F5               	movwf	??___fpclassifyf+1
 18597     1456  0824               	movf	___fpclassifyf@u+2,w
 18598     1457  00F6               	movwf	??___fpclassifyf+2
 18599     1458  0825               	movf	___fpclassifyf@u+3,w
 18600     1459  00F7               	movwf	??___fpclassifyf+3
 18601     145A  3017               	movlw	23
 18602     145B                     u405_25:
 18603     145B  36F7               	lsrf	??___fpclassifyf+3,f
 18604     145C  0CF6               	rrf	??___fpclassifyf+2,f
 18605     145D  0CF5               	rrf	??___fpclassifyf+1,f
 18606     145E  0CF4               	rrf	??___fpclassifyf,f
 18607     145F                     u405_20:
 18608     145F  0B89               	decfsz	9,f
 18609     1460  2C5B               	goto	u405_25
 18610     1461  30FF               	movlw	255
 18611     1462  0574               	andwf	??___fpclassifyf,w
 18612     1463  00A0               	movwf	___fpclassifyf@e
 18613     1464  3000               	movlw	0
 18614     1465  0575               	andwf	??___fpclassifyf+1,w
 18615     1466  00A1               	movwf	___fpclassifyf@e+1
 18616     1467                     i1l4696:
 18617     1467  0820               	movf	___fpclassifyf@e,w
 18618     1468  0421               	iorwf	___fpclassifyf@e+1,w
 18619     1469  1D03               	btfss	3,2
 18620     146A  2C6C               	goto	u406_21
 18621     146B  2C6D               	goto	u406_20
 18622     146C                     u406_21:
 18623     146C  2C8E               	goto	i1l4706
 18624     146D                     u406_20:
 18625     146D                     i1l4698:
 18626     146D  0822               	movf	___fpclassifyf@u,w
 18627     146E  00F4               	movwf	??___fpclassifyf
 18628     146F  0823               	movf	___fpclassifyf@u+1,w
 18629     1470  00F5               	movwf	??___fpclassifyf+1
 18630     1471  0824               	movf	___fpclassifyf@u+2,w
 18631     1472  00F6               	movwf	??___fpclassifyf+2
 18632     1473  0825               	movf	___fpclassifyf@u+3,w
 18633     1474  00F7               	movwf	??___fpclassifyf+3
 18634     1475  3001               	movlw	1
 18635     1476                     u407_25:
 18636     1476  35F4               	lslf	??___fpclassifyf,f
 18637     1477  0DF5               	rlf	??___fpclassifyf+1,f
 18638     1478  0DF6               	rlf	??___fpclassifyf+2,f
 18639     1479  0DF7               	rlf	??___fpclassifyf+3,f
 18640     147A                     u407_20:
 18641     147A  0B89               	decfsz	9,f
 18642     147B  2C76               	goto	u407_25
 18643     147C  0877               	movf	??___fpclassifyf+3,w
 18644     147D  0476               	iorwf	??___fpclassifyf+2,w
 18645     147E  0475               	iorwf	??___fpclassifyf+1,w
 18646     147F  0474               	iorwf	??___fpclassifyf,w
 18647     1480  1D03               	skipz
 18648     1481  2C83               	goto	u408_21
 18649     1482  2C84               	goto	u408_20
 18650     1483                     u408_21:
 18651     1483  2C89               	goto	i1l4702
 18652     1484                     u408_20:
 18653     1484                     i1l4700:
 18654     1484  3002               	movlw	2
 18655     1485  00F0               	movwf	?___fpclassifyf
 18656     1486  3000               	movlw	0
 18657     1487  00F1               	movwf	?___fpclassifyf+1
 18658     1488  2CB8               	goto	i1l1848
 18659     1489                     i1l4702:
 18660     1489  3003               	movlw	3
 18661     148A  00F0               	movwf	?___fpclassifyf
 18662     148B  3000               	movlw	0
 18663     148C  00F1               	movwf	?___fpclassifyf+1
 18664     148D  2CB8               	goto	i1l1848
 18665     148E                     i1l4706:
 18666     148E  0A20               	incf	___fpclassifyf@e,w
 18667     148F  0421               	iorwf	___fpclassifyf@e+1,w
 18668     1490  1D03               	btfss	3,2
 18669     1491  2C93               	goto	u409_21
 18670     1492  2C94               	goto	u409_20
 18671     1493                     u409_21:
 18672     1493  2CB4               	goto	i1l4712
 18673     1494                     u409_20:
 18674     1494                     i1l4708:
 18675     1494  0822               	movf	___fpclassifyf@u,w
 18676     1495  00F4               	movwf	??___fpclassifyf
 18677     1496  0823               	movf	___fpclassifyf@u+1,w
 18678     1497  00F5               	movwf	??___fpclassifyf+1
 18679     1498  0824               	movf	___fpclassifyf@u+2,w
 18680     1499  00F6               	movwf	??___fpclassifyf+2
 18681     149A  0825               	movf	___fpclassifyf@u+3,w
 18682     149B  00F7               	movwf	??___fpclassifyf+3
 18683     149C  3009               	movlw	9
 18684     149D                     u410_25:
 18685     149D  35F4               	lslf	??___fpclassifyf,f
 18686     149E  0DF5               	rlf	??___fpclassifyf+1,f
 18687     149F  0DF6               	rlf	??___fpclassifyf+2,f
 18688     14A0  0DF7               	rlf	??___fpclassifyf+3,f
 18689     14A1                     u410_20:
 18690     14A1  0B89               	decfsz	9,f
 18691     14A2  2C9D               	goto	u410_25
 18692     14A3  0877               	movf	??___fpclassifyf+3,w
 18693     14A4  0476               	iorwf	??___fpclassifyf+2,w
 18694     14A5  0475               	iorwf	??___fpclassifyf+1,w
 18695     14A6  0474               	iorwf	??___fpclassifyf,w
 18696     14A7  1903               	skipnz
 18697     14A8  2CAA               	goto	u411_21
 18698     14A9  2CAC               	goto	u411_20
 18699     14AA                     u411_21:
 18700     14AA  3001               	movlw	1
 18701     14AB  2CAD               	goto	u412_20
 18702     14AC                     u411_20:
 18703     14AC  3000               	movlw	0
 18704     14AD                     u412_20:
 18705     14AD  00F8               	movwf	??___fpclassifyf+4
 18706     14AE  01F9               	clrf	??___fpclassifyf+5
 18707     14AF  0878               	movf	??___fpclassifyf+4,w
 18708     14B0  00F0               	movwf	?___fpclassifyf
 18709     14B1  0879               	movf	??___fpclassifyf+5,w
 18710     14B2  00F1               	movwf	?___fpclassifyf+1
 18711     14B3  2CB8               	goto	i1l1848
 18712     14B4                     i1l4712:
 18713     14B4  3004               	movlw	4
 18714     14B5  00F0               	movwf	?___fpclassifyf
 18715     14B6  3000               	movlw	0
 18716     14B7  00F1               	movwf	?___fpclassifyf+1
 18717     14B8                     i1l1848:
 18718     14B8  0008               	return
 18719     14B9                     __end_of___fpclassifyf:
 18720                           
 18721                           	psect	text84
 18722     1352                     __ptext84:	
 18723 ;; *************** function ___fltol *****************
 18724 ;; Defined at:
 18725 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
 18726 ;; Parameters:    Size  Location     Type
 18727 ;;  f1              4    0[COMMON] int 
 18728 ;; Auto vars:     Size  Location     Type
 18729 ;;  exp1            1    9[COMMON] unsigned char 
 18730 ;;  sign1           1    8[COMMON] unsigned char 
 18731 ;; Return value:  Size  Location     Type
 18732 ;;                  4    0[COMMON] long 
 18733 ;; Registers used:
 18734 ;;		wreg, status,2, status,0
 18735 ;; Tracked objects:
 18736 ;;		On entry : 0/0
 18737 ;;		On exit  : 0/0
 18738 ;;		Unchanged: 0/0
 18739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18742 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18743 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18744 ;;Total ram usage:       10 bytes
 18745 ;; Hardware stack levels used: 1
 18746 ;; This function calls:
 18747 ;;		Nothing
 18748 ;; This function is called by:
 18749 ;;		_efgtoa
 18750 ;; This function uses a non-reentrant model
 18751 ;;
 18752                           
 18753     1352                     ___fltol:	
 18754                           ;psect for function ___fltol
 18755                           
 18756     1352                     i1l4358:	
 18757                           ;incstack = 0
 18758                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 18759                           
 18760     1352  1003               	clrc
 18761     1353  0D72               	rlf	___fltol@f1+2,w
 18762     1354  0D73               	rlf	___fltol@f1+3,w
 18763     1355  00F9               	movwf	___fltol@exp1
 18764     1356  0879               	movf	___fltol@exp1,w
 18765     1357  1D03               	btfss	3,2
 18766     1358  2B5A               	goto	u338_21
 18767     1359  2B5B               	goto	u338_20
 18768     135A                     u338_21:
 18769     135A  2B64               	goto	i1l4364
 18770     135B                     u338_20:
 18771     135B                     i1l4360:
 18772     135B  3000               	movlw	0
 18773     135C  00F3               	movwf	?___fltol+3
 18774     135D  3000               	movlw	0
 18775     135E  00F2               	movwf	?___fltol+2
 18776     135F  3000               	movlw	0
 18777     1360  00F1               	movwf	?___fltol+1
 18778     1361  3000               	movlw	0
 18779     1362  00F0               	movwf	?___fltol
 18780     1363  2BC1               	goto	i1l1421
 18781     1364                     i1l4364:
 18782     1364  0870               	movf	___fltol@f1,w
 18783     1365  00F4               	movwf	??___fltol
 18784     1366  0871               	movf	___fltol@f1+1,w
 18785     1367  00F5               	movwf	??___fltol+1
 18786     1368  0872               	movf	___fltol@f1+2,w
 18787     1369  00F6               	movwf	??___fltol+2
 18788     136A  0873               	movf	___fltol@f1+3,w
 18789     136B  00F7               	movwf	??___fltol+3
 18790     136C  301F               	movlw	31
 18791     136D                     u339_25:
 18792     136D  36F7               	lsrf	??___fltol+3,f
 18793     136E  0CF6               	rrf	??___fltol+2,f
 18794     136F  0CF5               	rrf	??___fltol+1,f
 18795     1370  0CF4               	rrf	??___fltol,f
 18796     1371                     u339_20:
 18797     1371  0B89               	decfsz	9,f
 18798     1372  2B6D               	goto	u339_25
 18799     1373  0874               	movf	??___fltol,w
 18800     1374  00F8               	movwf	___fltol@sign1
 18801     1375                     i1l4366:
 18802     1375  17F2               	bsf	___fltol@f1+2,7
 18803     1376                     i1l4368:
 18804     1376  30FF               	movlw	255
 18805     1377  05F0               	andwf	___fltol@f1,f
 18806     1378  30FF               	movlw	255
 18807     1379  05F1               	andwf	___fltol@f1+1,f
 18808     137A  30FF               	movlw	255
 18809     137B  05F2               	andwf	___fltol@f1+2,f
 18810     137C  3000               	movlw	0
 18811     137D  05F3               	andwf	___fltol@f1+3,f
 18812     137E                     i1l4370:
 18813     137E  3096               	movlw	150
 18814     137F  02F9               	subwf	___fltol@exp1,f
 18815     1380                     i1l4372:
 18816     1380  1FF9               	btfss	___fltol@exp1,7
 18817     1381  2B83               	goto	u340_21
 18818     1382  2B84               	goto	u340_20
 18819     1383                     u340_21:
 18820     1383  2B9C               	goto	i1l4382
 18821     1384                     u340_20:
 18822     1384                     i1l4374:
 18823     1384  0879               	movf	___fltol@exp1,w
 18824     1385  3A80               	xorlw	128
 18825     1386  3E97               	addlw	151
 18826     1387  1803               	skipnc
 18827     1388  2B8A               	goto	u341_21
 18828     1389  2B8B               	goto	u341_20
 18829     138A                     u341_21:
 18830     138A  2B8C               	goto	i1l4380
 18831     138B                     u341_20:
 18832     138B  2B5B               	goto	i1l4360
 18833     138C                     i1l4380:
 18834     138C  3001               	movlw	1
 18835     138D                     u342_25:
 18836     138D  36F3               	lsrf	___fltol@f1+3,f
 18837     138E  0CF2               	rrf	___fltol@f1+2,f
 18838     138F  0CF1               	rrf	___fltol@f1+1,f
 18839     1390  0CF0               	rrf	___fltol@f1,f
 18840     1391  0B89               	decfsz	9,f
 18841     1392  2B8D               	goto	u342_25
 18842     1393  3001               	movlw	1
 18843     1394  00F4               	movwf	??___fltol
 18844     1395  0874               	movf	??___fltol,w
 18845     1396  07F9               	addwf	___fltol@exp1,f
 18846     1397  1D03               	btfss	3,2
 18847     1398  2B9A               	goto	u343_21
 18848     1399  2B9B               	goto	u343_20
 18849     139A                     u343_21:
 18850     139A  2B8C               	goto	i1l4380
 18851     139B                     u343_20:
 18852     139B  2BB1               	goto	i1l4390
 18853     139C                     i1l4382:
 18854     139C  3020               	movlw	32
 18855     139D  0279               	subwf	___fltol@exp1,w
 18856     139E  1C03               	skipc
 18857     139F  2BA1               	goto	u344_21
 18858     13A0  2BA2               	goto	u344_20
 18859     13A1                     u344_21:
 18860     13A1  2BAC               	goto	i1l1428
 18861     13A2                     u344_20:
 18862     13A2  2B5B               	goto	i1l4360
 18863     13A3                     i1l4388:
 18864     13A3  3001               	movlw	1
 18865     13A4                     u345_25:
 18866     13A4  35F0               	lslf	___fltol@f1,f
 18867     13A5  0DF1               	rlf	___fltol@f1+1,f
 18868     13A6  0DF2               	rlf	___fltol@f1+2,f
 18869     13A7  0DF3               	rlf	___fltol@f1+3,f
 18870     13A8  0B89               	decfsz	9,f
 18871     13A9  2BA4               	goto	u345_25
 18872     13AA  3001               	movlw	1
 18873     13AB  02F9               	subwf	___fltol@exp1,f
 18874     13AC                     i1l1428:
 18875     13AC  0879               	movf	___fltol@exp1,w
 18876     13AD  1D03               	btfss	3,2
 18877     13AE  2BB0               	goto	u346_21
 18878     13AF  2BB1               	goto	u346_20
 18879     13B0                     u346_21:
 18880     13B0  2BA3               	goto	i1l4388
 18881     13B1                     u346_20:
 18882     13B1                     i1l4390:
 18883     13B1  0878               	movf	___fltol@sign1,w
 18884     13B2  1903               	btfsc	3,2
 18885     13B3  2BB5               	goto	u347_21
 18886     13B4  2BB6               	goto	u347_20
 18887     13B5                     u347_21:
 18888     13B5  2BC1               	goto	i1l1431
 18889     13B6                     u347_20:
 18890     13B6                     i1l4392:
 18891     13B6  09F0               	comf	___fltol@f1,f
 18892     13B7  09F1               	comf	___fltol@f1+1,f
 18893     13B8  09F2               	comf	___fltol@f1+2,f
 18894     13B9  09F3               	comf	___fltol@f1+3,f
 18895     13BA  0AF0               	incf	___fltol@f1,f
 18896     13BB  1903               	skipnz
 18897     13BC  0AF1               	incf	___fltol@f1+1,f
 18898     13BD  1903               	skipnz
 18899     13BE  0AF2               	incf	___fltol@f1+2,f
 18900     13BF  1903               	skipnz
 18901     13C0  0AF3               	incf	___fltol@f1+3,f
 18902     13C1                     i1l1431:
 18903     13C1                     i1l1421:
 18904     13C1  0008               	return
 18905     13C2                     __end_of___fltol:
 18906                           
 18907                           	psect	text85
 18908     1FA0                     __ptext85:	
 18909 ;; *************** function ___flsub *****************
 18910 ;; Defined at:
 18911 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 18912 ;; Parameters:    Size  Location     Type
 18913 ;;  a               4   32[BANK0 ] long 
 18914 ;;  b               4   36[BANK0 ] long 
 18915 ;; Auto vars:     Size  Location     Type
 18916 ;;		None
 18917 ;; Return value:  Size  Location     Type
 18918 ;;                  4   32[BANK0 ] long 
 18919 ;; Registers used:
 18920 ;;		wreg, status,2, status,0, pclath, cstack
 18921 ;; Tracked objects:
 18922 ;;		On entry : 0/0
 18923 ;;		On exit  : 0/0
 18924 ;;		Unchanged: 0/0
 18925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18926 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18929 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18930 ;;Total ram usage:        8 bytes
 18931 ;; Hardware stack levels used: 1
 18932 ;; Hardware stack levels required when called: 1
 18933 ;; This function calls:
 18934 ;;		___fladd
 18935 ;; This function is called by:
 18936 ;;		_efgtoa
 18937 ;; This function uses a non-reentrant model
 18938 ;;
 18939                           
 18940     1FA0                     ___flsub:	
 18941                           ;psect for function ___flsub
 18942                           
 18943     1FA0                     i1l4394:	
 18944                           ;incstack = 0
 18945                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 18946                           
 18947     1FA0  3080               	movlw	128
 18948     1FA1  0020               	movlb	0	; select bank0
 18949     1FA2  06C3               	xorwf	___flsub@a+3,f
 18950     1FA3                     i1l4396:
 18951     1FA3  0847               	movf	___flsub@b+3,w
 18952     1FA4  00F3               	movwf	___fladd@b+3
 18953     1FA5  0846               	movf	___flsub@b+2,w
 18954     1FA6  00F2               	movwf	___fladd@b+2
 18955     1FA7  0845               	movf	___flsub@b+1,w
 18956     1FA8  00F1               	movwf	___fladd@b+1
 18957     1FA9  0844               	movf	___flsub@b,w
 18958     1FAA  00F0               	movwf	___fladd@b
 18959     1FAB  0843               	movf	___flsub@a+3,w
 18960     1FAC  00F7               	movwf	___fladd@a+3
 18961     1FAD  0842               	movf	___flsub@a+2,w
 18962     1FAE  00F6               	movwf	___fladd@a+2
 18963     1FAF  0841               	movf	___flsub@a+1,w
 18964     1FB0  00F5               	movwf	___fladd@a+1
 18965     1FB1  0840               	movf	___flsub@a,w
 18966     1FB2  00F4               	movwf	___fladd@a
 18967     1FB3  318B  23B9  319F   	fcall	___fladd
 18968     1FB6  0873               	movf	?___fladd+3,w
 18969     1FB7  0020               	movlb	0	; select bank0
 18970     1FB8  00C3               	movwf	?___flsub+3
 18971     1FB9  0872               	movf	?___fladd+2,w
 18972     1FBA  00C2               	movwf	?___flsub+2
 18973     1FBB  0871               	movf	?___fladd+1,w
 18974     1FBC  00C1               	movwf	?___flsub+1
 18975     1FBD  0870               	movf	?___fladd,w
 18976     1FBE  00C0               	movwf	?___flsub
 18977     1FBF                     i1l1574:
 18978     1FBF  0008               	return
 18979     1FC0                     __end_of___flsub:
 18980                           
 18981                           	psect	text86
 18982     0BB9                     __ptext86:	
 18983 ;; *************** function ___fladd *****************
 18984 ;; Defined at:
 18985 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 18986 ;; Parameters:    Size  Location     Type
 18987 ;;  b               4    0[COMMON] long 
 18988 ;;  a               4    4[COMMON] long 
 18989 ;; Auto vars:     Size  Location     Type
 18990 ;;  grs             1   11[COMMON] unsigned char 
 18991 ;;  bexp            1   10[COMMON] unsigned char 
 18992 ;;  aexp            1    9[COMMON] unsigned char 
 18993 ;;  signs           1    8[COMMON] unsigned char 
 18994 ;; Return value:  Size  Location     Type
 18995 ;;                  4    0[COMMON] unsigned char 
 18996 ;; Registers used:
 18997 ;;		wreg, status,2, status,0
 18998 ;; Tracked objects:
 18999 ;;		On entry : 0/0
 19000 ;;		On exit  : 0/0
 19001 ;;		Unchanged: 0/0
 19002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19003 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19004 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19005 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19006 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19007 ;;Total ram usage:       20 bytes
 19008 ;; Hardware stack levels used: 1
 19009 ;; This function calls:
 19010 ;;		Nothing
 19011 ;; This function is called by:
 19012 ;;		___flsub
 19013 ;;		_efgtoa
 19014 ;; This function uses a non-reentrant model
 19015 ;;
 19016                           
 19017     0BB9                     ___fladd:	
 19018                           ;psect for function ___fladd
 19019                           
 19020     0BB9                     i1l4072:	
 19021                           ;incstack = 0
 19022                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 19023                           
 19024     0BB9  0873               	movf	___fladd@b+3,w
 19025     0BBA  3980               	andlw	128
 19026     0BBB  00F8               	movwf	___fladd@signs
 19027     0BBC                     i1l4074:
 19028     0BBC  3573               	lslf	___fladd@b+3,w
 19029     0BBD  00FA               	movwf	___fladd@bexp
 19030     0BBE                     i1l4076:
 19031     0BBE  1FF2               	btfss	___fladd@b+2,7
 19032     0BBF  2BC1               	goto	u277_21
 19033     0BC0  2BC2               	goto	u277_20
 19034     0BC1                     u277_21:
 19035     0BC1  2BC3               	goto	i1l4080
 19036     0BC2                     u277_20:
 19037     0BC2                     i1l4078:
 19038     0BC2  147A               	bsf	___fladd@bexp,0
 19039     0BC3                     i1l4080:
 19040     0BC3  087A               	movf	___fladd@bexp,w
 19041     0BC4  1903               	btfsc	3,2
 19042     0BC5  2BC7               	goto	u278_21
 19043     0BC6  2BC8               	goto	u278_20
 19044     0BC7                     u278_21:
 19045     0BC7  2BD8               	goto	i1l4090
 19046     0BC8                     u278_20:
 19047     0BC8                     i1l4082:
 19048     0BC8  0A7A               	incf	___fladd@bexp,w
 19049     0BC9  1D03               	btfss	3,2
 19050     0BCA  2BCC               	goto	u279_21
 19051     0BCB  2BCD               	goto	u279_20
 19052     0BCC                     u279_21:
 19053     0BCC  2BD5               	goto	i1l4086
 19054     0BCD                     u279_20:
 19055     0BCD                     i1l4084:
 19056     0BCD  3000               	movlw	0
 19057     0BCE  00F3               	movwf	___fladd@b+3
 19058     0BCF  3000               	movlw	0
 19059     0BD0  00F2               	movwf	___fladd@b+2
 19060     0BD1  3000               	movlw	0
 19061     0BD2  00F1               	movwf	___fladd@b+1
 19062     0BD3  3000               	movlw	0
 19063     0BD4  00F0               	movwf	___fladd@b
 19064     0BD5                     i1l4086:
 19065     0BD5  17F2               	bsf	___fladd@b+2,7
 19066     0BD6                     i1l4088:
 19067     0BD6  01F3               	clrf	___fladd@b+3
 19068     0BD7  2BE0               	goto	i1l4092
 19069     0BD8                     i1l4090:
 19070     0BD8  3000               	movlw	0
 19071     0BD9  00F3               	movwf	___fladd@b+3
 19072     0BDA  3000               	movlw	0
 19073     0BDB  00F2               	movwf	___fladd@b+2
 19074     0BDC  3000               	movlw	0
 19075     0BDD  00F1               	movwf	___fladd@b+1
 19076     0BDE  3000               	movlw	0
 19077     0BDF  00F0               	movwf	___fladd@b
 19078     0BE0                     i1l4092:
 19079     0BE0  0877               	movf	___fladd@a+3,w
 19080     0BE1  3980               	andlw	128
 19081     0BE2  00F9               	movwf	___fladd@aexp
 19082     0BE3                     i1l4094:
 19083     0BE3  0879               	movf	___fladd@aexp,w
 19084     0BE4  0678               	xorwf	___fladd@signs,w
 19085     0BE5  1903               	skipnz
 19086     0BE6  2BE8               	goto	u280_21
 19087     0BE7  2BE9               	goto	u280_20
 19088     0BE8                     u280_21:
 19089     0BE8  2BEA               	goto	i1l4098
 19090     0BE9                     u280_20:
 19091     0BE9                     i1l4096:
 19092     0BE9  1778               	bsf	___fladd@signs,6
 19093     0BEA                     i1l4098:
 19094     0BEA  3577               	lslf	___fladd@a+3,w
 19095     0BEB  00F9               	movwf	___fladd@aexp
 19096     0BEC                     i1l4100:
 19097     0BEC  1FF6               	btfss	___fladd@a+2,7
 19098     0BED  2BEF               	goto	u281_21
 19099     0BEE  2BF0               	goto	u281_20
 19100     0BEF                     u281_21:
 19101     0BEF  2BF1               	goto	i1l4104
 19102     0BF0                     u281_20:
 19103     0BF0                     i1l4102:
 19104     0BF0  1479               	bsf	___fladd@aexp,0
 19105     0BF1                     i1l4104:
 19106     0BF1  0879               	movf	___fladd@aexp,w
 19107     0BF2  1903               	btfsc	3,2
 19108     0BF3  2BF5               	goto	u282_21
 19109     0BF4  2BF6               	goto	u282_20
 19110     0BF5                     u282_21:
 19111     0BF5  2C06               	goto	i1l4114
 19112     0BF6                     u282_20:
 19113     0BF6                     i1l4106:
 19114     0BF6  0A79               	incf	___fladd@aexp,w
 19115     0BF7  1D03               	btfss	3,2
 19116     0BF8  2BFA               	goto	u283_21
 19117     0BF9  2BFB               	goto	u283_20
 19118     0BFA                     u283_21:
 19119     0BFA  2C03               	goto	i1l4110
 19120     0BFB                     u283_20:
 19121     0BFB                     i1l4108:
 19122     0BFB  3000               	movlw	0
 19123     0BFC  00F7               	movwf	___fladd@a+3
 19124     0BFD  3000               	movlw	0
 19125     0BFE  00F6               	movwf	___fladd@a+2
 19126     0BFF  3000               	movlw	0
 19127     0C00  00F5               	movwf	___fladd@a+1
 19128     0C01  3000               	movlw	0
 19129     0C02  00F4               	movwf	___fladd@a
 19130     0C03                     i1l4110:
 19131     0C03  17F6               	bsf	___fladd@a+2,7
 19132     0C04                     i1l4112:
 19133     0C04  01F7               	clrf	___fladd@a+3
 19134     0C05  2C0E               	goto	i1l1528
 19135     0C06                     i1l4114:
 19136     0C06  3000               	movlw	0
 19137     0C07  00F7               	movwf	___fladd@a+3
 19138     0C08  3000               	movlw	0
 19139     0C09  00F6               	movwf	___fladd@a+2
 19140     0C0A  3000               	movlw	0
 19141     0C0B  00F5               	movwf	___fladd@a+1
 19142     0C0C  3000               	movlw	0
 19143     0C0D  00F4               	movwf	___fladd@a
 19144     0C0E                     i1l1528:
 19145     0C0E  087A               	movf	___fladd@bexp,w
 19146     0C0F  0279               	subwf	___fladd@aexp,w
 19147     0C10  1803               	skipnc
 19148     0C11  2C13               	goto	u284_21
 19149     0C12  2C14               	goto	u284_20
 19150     0C13                     u284_21:
 19151     0C13  2C3B               	goto	i1l4150
 19152     0C14                     u284_20:
 19153     0C14                     i1l4116:
 19154     0C14  1F78               	btfss	___fladd@signs,6
 19155     0C15  2C17               	goto	u285_21
 19156     0C16  2C18               	goto	u285_20
 19157     0C17                     u285_21:
 19158     0C17  2C1D               	goto	i1l4120
 19159     0C18                     u285_20:
 19160     0C18                     i1l4118:
 19161     0C18  3080               	movlw	128
 19162     0C19  0020               	movlb	0	; select bank0
 19163     0C1A  00A0               	movwf	??___fladd
 19164     0C1B  0820               	movf	??___fladd,w
 19165     0C1C  06F8               	xorwf	___fladd@signs,f
 19166     0C1D                     i1l4120:
 19167     0C1D  087A               	movf	___fladd@bexp,w
 19168     0C1E  00FB               	movwf	___fladd@grs
 19169     0C1F                     i1l4122:
 19170     0C1F  0879               	movf	___fladd@aexp,w
 19171     0C20  00FA               	movwf	___fladd@bexp
 19172     0C21                     i1l4124:
 19173     0C21  087B               	movf	___fladd@grs,w
 19174     0C22  00F9               	movwf	___fladd@aexp
 19175     0C23                     i1l4126:
 19176     0C23  0870               	movf	___fladd@b,w
 19177     0C24  00FB               	movwf	___fladd@grs
 19178     0C25                     i1l4128:
 19179     0C25  0874               	movf	___fladd@a,w
 19180     0C26  00F0               	movwf	___fladd@b
 19181     0C27                     i1l4130:
 19182     0C27  087B               	movf	___fladd@grs,w
 19183     0C28  00F4               	movwf	___fladd@a
 19184     0C29                     i1l4132:
 19185     0C29  0871               	movf	___fladd@b+1,w
 19186     0C2A  00FB               	movwf	___fladd@grs
 19187     0C2B                     i1l4134:
 19188     0C2B  0875               	movf	___fladd@a+1,w
 19189     0C2C  00F1               	movwf	___fladd@b+1
 19190     0C2D                     i1l4136:
 19191     0C2D  087B               	movf	___fladd@grs,w
 19192     0C2E  00F5               	movwf	___fladd@a+1
 19193     0C2F                     i1l4138:
 19194     0C2F  0872               	movf	___fladd@b+2,w
 19195     0C30  00FB               	movwf	___fladd@grs
 19196     0C31                     i1l4140:
 19197     0C31  0876               	movf	___fladd@a+2,w
 19198     0C32  00F2               	movwf	___fladd@b+2
 19199     0C33                     i1l4142:
 19200     0C33  087B               	movf	___fladd@grs,w
 19201     0C34  00F6               	movwf	___fladd@a+2
 19202     0C35                     i1l4144:
 19203     0C35  0873               	movf	___fladd@b+3,w
 19204     0C36  00FB               	movwf	___fladd@grs
 19205     0C37                     i1l4146:
 19206     0C37  0877               	movf	___fladd@a+3,w
 19207     0C38  00F3               	movwf	___fladd@b+3
 19208     0C39                     i1l4148:
 19209     0C39  087B               	movf	___fladd@grs,w
 19210     0C3A  00F7               	movwf	___fladd@a+3
 19211     0C3B                     i1l4150:
 19212     0C3B  01FB               	clrf	___fladd@grs
 19213     0C3C                     i1l4152:
 19214     0C3C  0879               	movf	___fladd@aexp,w
 19215     0C3D  0020               	movlb	0	; select bank0
 19216     0C3E  00A0               	movwf	??___fladd
 19217     0C3F  01A1               	clrf	??___fladd+1
 19218     0C40  0821               	movf	??___fladd+1,w
 19219     0C41  00A3               	movwf	??___fladd+3
 19220     0C42  087A               	movf	___fladd@bexp,w
 19221     0C43  0220               	subwf	??___fladd,w
 19222     0C44  00A2               	movwf	??___fladd+2
 19223     0C45  1C03               	skipc
 19224     0C46  03A3               	decf	??___fladd+3,f
 19225     0C47  0823               	movf	??___fladd+3,w
 19226     0C48  3A80               	xorlw	128
 19227     0C49  00A4               	movwf	??___fladd+4
 19228     0C4A  3080               	movlw	128
 19229     0C4B  0224               	subwf	??___fladd+4,w
 19230     0C4C  1D03               	skipz
 19231     0C4D  2C50               	goto	u286_25
 19232     0C4E  301A               	movlw	26
 19233     0C4F  0222               	subwf	??___fladd+2,w
 19234     0C50                     u286_25:
 19235     0C50  1C03               	skipc
 19236     0C51  2C53               	goto	u286_21
 19237     0C52  2C54               	goto	u286_20
 19238     0C53                     u286_21:
 19239     0C53  2C86               	goto	i1l4168
 19240     0C54                     u286_20:
 19241     0C54                     i1l4154:
 19242     0C54  0873               	movf	___fladd@b+3,w
 19243     0C55  0472               	iorwf	___fladd@b+2,w
 19244     0C56  0471               	iorwf	___fladd@b+1,w
 19245     0C57  0470               	iorwf	___fladd@b,w
 19246     0C58  1D03               	skipz
 19247     0C59  2C5B               	goto	u287_21
 19248     0C5A  2C5D               	goto	u287_20
 19249     0C5B                     u287_21:
 19250     0C5B  3001               	movlw	1
 19251     0C5C  2C5E               	goto	u288_20
 19252     0C5D                     u287_20:
 19253     0C5D  3000               	movlw	0
 19254     0C5E                     u288_20:
 19255     0C5E  00FB               	movwf	___fladd@grs
 19256     0C5F  3000               	movlw	0
 19257     0C60  00F3               	movwf	___fladd@b+3
 19258     0C61  3000               	movlw	0
 19259     0C62  00F2               	movwf	___fladd@b+2
 19260     0C63  3000               	movlw	0
 19261     0C64  00F1               	movwf	___fladd@b+1
 19262     0C65  3000               	movlw	0
 19263     0C66  00F0               	movwf	___fladd@b
 19264     0C67  0879               	movf	___fladd@aexp,w
 19265     0C68  00FA               	movwf	___fladd@bexp
 19266     0C69  2C8C               	goto	i1l1532
 19267     0C6A                     i1l1534:
 19268     0C6A  1C7B               	btfss	___fladd@grs,0
 19269     0C6B  2C6D               	goto	u289_21
 19270     0C6C  2C6E               	goto	u289_20
 19271     0C6D                     u289_21:
 19272     0C6D  2C72               	goto	i1l4158
 19273     0C6E                     u289_20:
 19274     0C6E                     i1l4156:
 19275     0C6E  367B               	lsrf	___fladd@grs,w
 19276     0C6F  3801               	iorlw	1
 19277     0C70  00FB               	movwf	___fladd@grs
 19278     0C71  2C74               	goto	i1l4160
 19279     0C72                     i1l4158:
 19280     0C72  1003               	clrc
 19281     0C73  0CFB               	rrf	___fladd@grs,f
 19282     0C74                     i1l4160:
 19283     0C74  1C70               	btfss	___fladd@b,0
 19284     0C75  2C77               	goto	u290_21
 19285     0C76  2C78               	goto	u290_20
 19286     0C77                     u290_21:
 19287     0C77  2C79               	goto	i1l4164
 19288     0C78                     u290_20:
 19289     0C78                     i1l4162:
 19290     0C78  17FB               	bsf	___fladd@grs,7
 19291     0C79                     i1l4164:
 19292     0C79  3001               	movlw	1
 19293     0C7A  0020               	movlb	0	; select bank0
 19294     0C7B  00A0               	movwf	??___fladd
 19295     0C7C                     u291_25:
 19296     0C7C  37F3               	asrf	___fladd@b+3,f
 19297     0C7D  0CF2               	rrf	___fladd@b+2,f
 19298     0C7E  0CF1               	rrf	___fladd@b+1,f
 19299     0C7F  0CF0               	rrf	___fladd@b,f
 19300     0C80  0BA0               	decfsz	??___fladd& (0+127),f
 19301     0C81  2C7C               	goto	u291_25
 19302     0C82                     i1l4166:
 19303     0C82  3001               	movlw	1
 19304     0C83  00A0               	movwf	??___fladd
 19305     0C84  0820               	movf	??___fladd,w
 19306     0C85  07FA               	addwf	___fladd@bexp,f
 19307     0C86                     i1l4168:
 19308     0C86  0879               	movf	___fladd@aexp,w
 19309     0C87  027A               	subwf	___fladd@bexp,w
 19310     0C88  1C03               	skipc
 19311     0C89  2C8B               	goto	u292_21
 19312     0C8A  2C8C               	goto	u292_20
 19313     0C8B                     u292_21:
 19314     0C8B  2C6A               	goto	i1l1534
 19315     0C8C                     u292_20:
 19316     0C8C                     i1l1532:
 19317     0C8C  1B78               	btfsc	___fladd@signs,6
 19318     0C8D  2C8F               	goto	u293_21
 19319     0C8E  2C90               	goto	u293_20
 19320     0C8F                     u293_21:
 19321     0C8F  2CC7               	goto	i1l4194
 19322     0C90                     u293_20:
 19323     0C90                     i1l4170:
 19324     0C90  087A               	movf	___fladd@bexp,w
 19325     0C91  1D03               	btfss	3,2
 19326     0C92  2C94               	goto	u294_21
 19327     0C93  2C95               	goto	u294_20
 19328     0C94                     u294_21:
 19329     0C94  2C9E               	goto	i1l4176
 19330     0C95                     u294_20:
 19331     0C95                     i1l4172:
 19332     0C95  3000               	movlw	0
 19333     0C96  00F3               	movwf	?___fladd+3
 19334     0C97  3000               	movlw	0
 19335     0C98  00F2               	movwf	?___fladd+2
 19336     0C99  3000               	movlw	0
 19337     0C9A  00F1               	movwf	?___fladd+1
 19338     0C9B  3000               	movlw	0
 19339     0C9C  00F0               	movwf	?___fladd
 19340     0C9D  2DC4               	goto	i1l1541
 19341     0C9E                     i1l4176:
 19342     0C9E  0874               	movf	___fladd@a,w
 19343     0C9F  07F0               	addwf	___fladd@b,f
 19344     0CA0  0875               	movf	___fladd@a+1,w
 19345     0CA1  3DF1               	addwfc	___fladd@b+1,f
 19346     0CA2  0876               	movf	___fladd@a+2,w
 19347     0CA3  3DF2               	addwfc	___fladd@b+2,f
 19348     0CA4  0877               	movf	___fladd@a+3,w
 19349     0CA5  3DF3               	addwfc	___fladd@b+3,f
 19350     0CA6                     i1l4178:
 19351     0CA6  1C73               	btfss	___fladd@b+3,0
 19352     0CA7  2CA9               	goto	u295_21
 19353     0CA8  2CAA               	goto	u295_20
 19354     0CA9                     u295_21:
 19355     0CA9  2D54               	goto	i1l4228
 19356     0CAA                     u295_20:
 19357     0CAA                     i1l4180:
 19358     0CAA  1C7B               	btfss	___fladd@grs,0
 19359     0CAB  2CAD               	goto	u296_21
 19360     0CAC  2CAE               	goto	u296_20
 19361     0CAD                     u296_21:
 19362     0CAD  2CB2               	goto	i1l4184
 19363     0CAE                     u296_20:
 19364     0CAE                     i1l4182:
 19365     0CAE  367B               	lsrf	___fladd@grs,w
 19366     0CAF  3801               	iorlw	1
 19367     0CB0  00FB               	movwf	___fladd@grs
 19368     0CB1  2CB4               	goto	i1l4186
 19369     0CB2                     i1l4184:
 19370     0CB2  1003               	clrc
 19371     0CB3  0CFB               	rrf	___fladd@grs,f
 19372     0CB4                     i1l4186:
 19373     0CB4  1C70               	btfss	___fladd@b,0
 19374     0CB5  2CB7               	goto	u297_21
 19375     0CB6  2CB8               	goto	u297_20
 19376     0CB7                     u297_21:
 19377     0CB7  2CB9               	goto	i1l4190
 19378     0CB8                     u297_20:
 19379     0CB8                     i1l4188:
 19380     0CB8  17FB               	bsf	___fladd@grs,7
 19381     0CB9                     i1l4190:
 19382     0CB9  3001               	movlw	1
 19383     0CBA  0020               	movlb	0	; select bank0
 19384     0CBB  00A0               	movwf	??___fladd
 19385     0CBC                     u298_25:
 19386     0CBC  37F3               	asrf	___fladd@b+3,f
 19387     0CBD  0CF2               	rrf	___fladd@b+2,f
 19388     0CBE  0CF1               	rrf	___fladd@b+1,f
 19389     0CBF  0CF0               	rrf	___fladd@b,f
 19390     0CC0  0BA0               	decfsz	??___fladd& (0+127),f
 19391     0CC1  2CBC               	goto	u298_25
 19392     0CC2                     i1l4192:
 19393     0CC2  3001               	movlw	1
 19394     0CC3  00A0               	movwf	??___fladd
 19395     0CC4  0820               	movf	??___fladd,w
 19396     0CC5  07FA               	addwf	___fladd@bexp,f
 19397     0CC6  2D54               	goto	i1l4228
 19398     0CC7                     i1l4194:
 19399     0CC7  0873               	movf	___fladd@b+3,w
 19400     0CC8  3A80               	xorlw	128
 19401     0CC9  0020               	movlb	0	; select bank0
 19402     0CCA  00A0               	movwf	??___fladd
 19403     0CCB  0877               	movf	___fladd@a+3,w
 19404     0CCC  3A80               	xorlw	128
 19405     0CCD  0220               	subwf	??___fladd,w
 19406     0CCE  1D03               	skipz
 19407     0CCF  2CDA               	goto	u299_23
 19408     0CD0  0876               	movf	___fladd@a+2,w
 19409     0CD1  0272               	subwf	___fladd@b+2,w
 19410     0CD2  1D03               	skipz
 19411     0CD3  2CDA               	goto	u299_23
 19412     0CD4  0875               	movf	___fladd@a+1,w
 19413     0CD5  0271               	subwf	___fladd@b+1,w
 19414     0CD6  1D03               	skipz
 19415     0CD7  2CDA               	goto	u299_23
 19416     0CD8  0874               	movf	___fladd@a,w
 19417     0CD9  0270               	subwf	___fladd@b,w
 19418     0CDA                     u299_23:
 19419     0CDA  1803               	skipnc
 19420     0CDB  2CDD               	goto	u299_21
 19421     0CDC  2CDE               	goto	u299_20
 19422     0CDD                     u299_21:
 19423     0CDD  2D16               	goto	i1l4204
 19424     0CDE                     u299_20:
 19425     0CDE                     i1l4196:
 19426     0CDE  30FF               	movlw	255
 19427     0CDF  00A0               	movwf	??___fladd
 19428     0CE0  30FF               	movlw	255
 19429     0CE1  00A1               	movwf	??___fladd+1
 19430     0CE2  30FF               	movlw	255
 19431     0CE3  00A2               	movwf	??___fladd+2
 19432     0CE4  30FF               	movlw	255
 19433     0CE5  00A3               	movwf	??___fladd+3
 19434     0CE6  0870               	movf	___fladd@b,w
 19435     0CE7  0274               	subwf	___fladd@a,w
 19436     0CE8  00A4               	movwf	??___fladd+4
 19437     0CE9  0871               	movf	___fladd@b+1,w
 19438     0CEA  3B75               	subwfb	___fladd@a+1,w
 19439     0CEB  00A5               	movwf	??___fladd+5
 19440     0CEC  0872               	movf	___fladd@b+2,w
 19441     0CED  3B76               	subwfb	___fladd@a+2,w
 19442     0CEE  00A6               	movwf	??___fladd+6
 19443     0CEF  0873               	movf	___fladd@b+3,w
 19444     0CF0  3B77               	subwfb	___fladd@a+3,w
 19445     0CF1  00A7               	movwf	??___fladd+7
 19446     0CF2  0824               	movf	??___fladd+4,w
 19447     0CF3  07A0               	addwf	??___fladd,f
 19448     0CF4  0825               	movf	??___fladd+5,w
 19449     0CF5  3DA1               	addwfc	??___fladd+1,f
 19450     0CF6  0826               	movf	??___fladd+6,w
 19451     0CF7  3DA2               	addwfc	??___fladd+2,f
 19452     0CF8  0827               	movf	??___fladd+7,w
 19453     0CF9  3DA3               	addwfc	??___fladd+3,f
 19454     0CFA  0823               	movf	??___fladd+3,w
 19455     0CFB  00F3               	movwf	___fladd@b+3
 19456     0CFC  0822               	movf	??___fladd+2,w
 19457     0CFD  00F2               	movwf	___fladd@b+2
 19458     0CFE  0821               	movf	??___fladd+1,w
 19459     0CFF  00F1               	movwf	___fladd@b+1
 19460     0D00  0820               	movf	??___fladd,w
 19461     0D01  00F0               	movwf	___fladd@b
 19462     0D02                     i1l4198:
 19463     0D02  3080               	movlw	128
 19464     0D03  00A0               	movwf	??___fladd
 19465     0D04  0820               	movf	??___fladd,w
 19466     0D05  06F8               	xorwf	___fladd@signs,f
 19467     0D06  09FB               	comf	___fladd@grs,f
 19468     0D07  0AFB               	incf	___fladd@grs,f
 19469     0D08                     i1l4200:
 19470     0D08  087B               	movf	___fladd@grs,w
 19471     0D09  1D03               	btfss	3,2
 19472     0D0A  2D0C               	goto	u300_21
 19473     0D0B  2D0D               	goto	u300_20
 19474     0D0C                     u300_21:
 19475     0D0C  2D1E               	goto	i1l1549
 19476     0D0D                     u300_20:
 19477     0D0D                     i1l4202:
 19478     0D0D  3001               	movlw	1
 19479     0D0E  07F0               	addwf	___fladd@b,f
 19480     0D0F  3000               	movlw	0
 19481     0D10  3DF1               	addwfc	___fladd@b+1,f
 19482     0D11  3000               	movlw	0
 19483     0D12  3DF2               	addwfc	___fladd@b+2,f
 19484     0D13  3000               	movlw	0
 19485     0D14  3DF3               	addwfc	___fladd@b+3,f
 19486     0D15  2D1E               	goto	i1l1549
 19487     0D16                     i1l4204:
 19488     0D16  0874               	movf	___fladd@a,w
 19489     0D17  02F0               	subwf	___fladd@b,f
 19490     0D18  0875               	movf	___fladd@a+1,w
 19491     0D19  3BF1               	subwfb	___fladd@b+1,f
 19492     0D1A  0876               	movf	___fladd@a+2,w
 19493     0D1B  3BF2               	subwfb	___fladd@b+2,f
 19494     0D1C  0877               	movf	___fladd@a+3,w
 19495     0D1D  3BF3               	subwfb	___fladd@b+3,f
 19496     0D1E                     i1l1549:
 19497     0D1E  0873               	movf	___fladd@b+3,w
 19498     0D1F  0472               	iorwf	___fladd@b+2,w
 19499     0D20  0471               	iorwf	___fladd@b+1,w
 19500     0D21  0470               	iorwf	___fladd@b,w
 19501     0D22  1D03               	skipz
 19502     0D23  2D25               	goto	u301_21
 19503     0D24  2D26               	goto	u301_20
 19504     0D25                     u301_21:
 19505     0D25  2D50               	goto	i1l4226
 19506     0D26                     u301_20:
 19507     0D26                     i1l4206:
 19508     0D26  087B               	movf	___fladd@grs,w
 19509     0D27  1D03               	btfss	3,2
 19510     0D28  2D2A               	goto	u302_21
 19511     0D29  2D2B               	goto	u302_20
 19512     0D2A                     u302_21:
 19513     0D2A  2D50               	goto	i1l4226
 19514     0D2B                     u302_20:
 19515     0D2B                     i1l4208:
 19516     0D2B  3000               	movlw	0
 19517     0D2C  00F3               	movwf	?___fladd+3
 19518     0D2D  3000               	movlw	0
 19519     0D2E  00F2               	movwf	?___fladd+2
 19520     0D2F  3000               	movlw	0
 19521     0D30  00F1               	movwf	?___fladd+1
 19522     0D31  3000               	movlw	0
 19523     0D32  00F0               	movwf	?___fladd
 19524     0D33  2DC4               	goto	i1l1541
 19525     0D34                     i1l4212:
 19526     0D34  3001               	movlw	1
 19527     0D35                     u303_25:
 19528     0D35  35F0               	lslf	___fladd@b,f
 19529     0D36  0DF1               	rlf	___fladd@b+1,f
 19530     0D37  0DF2               	rlf	___fladd@b+2,f
 19531     0D38  0DF3               	rlf	___fladd@b+3,f
 19532     0D39  0B89               	decfsz	9,f
 19533     0D3A  2D35               	goto	u303_25
 19534     0D3B                     i1l4214:
 19535     0D3B  1FFB               	btfss	___fladd@grs,7
 19536     0D3C  2D3E               	goto	u304_21
 19537     0D3D  2D3F               	goto	u304_20
 19538     0D3E                     u304_21:
 19539     0D3E  2D40               	goto	i1l1553
 19540     0D3F                     u304_20:
 19541     0D3F                     i1l4216:
 19542     0D3F  1470               	bsf	___fladd@b,0
 19543     0D40                     i1l1553:
 19544     0D40  1C7B               	btfss	___fladd@grs,0
 19545     0D41  2D43               	goto	u305_21
 19546     0D42  2D44               	goto	u305_20
 19547     0D43                     u305_21:
 19548     0D43  2D47               	goto	i1l4220
 19549     0D44                     u305_20:
 19550     0D44                     i1l4218:
 19551     0D44  1403               	setc
 19552     0D45  0DFB               	rlf	___fladd@grs,f
 19553     0D46  2D49               	goto	i1l4222
 19554     0D47                     i1l4220:
 19555     0D47  1003               	clrc
 19556     0D48  0DFB               	rlf	___fladd@grs,f
 19557     0D49                     i1l4222:
 19558     0D49  087A               	movf	___fladd@bexp,w
 19559     0D4A  1903               	btfsc	3,2
 19560     0D4B  2D4D               	goto	u306_21
 19561     0D4C  2D4E               	goto	u306_20
 19562     0D4D                     u306_21:
 19563     0D4D  2D50               	goto	i1l4226
 19564     0D4E                     u306_20:
 19565     0D4E                     i1l4224:
 19566     0D4E  3001               	movlw	1
 19567     0D4F  02FA               	subwf	___fladd@bexp,f
 19568     0D50                     i1l4226:
 19569     0D50  1FF2               	btfss	___fladd@b+2,7
 19570     0D51  2D53               	goto	u307_21
 19571     0D52  2D54               	goto	u307_20
 19572     0D53                     u307_21:
 19573     0D53  2D34               	goto	i1l4212
 19574     0D54                     u307_20:
 19575     0D54                     i1l4228:
 19576     0D54  01F9               	clrf	___fladd@aexp
 19577     0D55                     i1l4230:
 19578     0D55  1FFB               	btfss	___fladd@grs,7
 19579     0D56  2D58               	goto	u308_21
 19580     0D57  2D59               	goto	u308_20
 19581     0D58                     u308_21:
 19582     0D58  2D67               	goto	i1l4238
 19583     0D59                     u308_20:
 19584     0D59                     i1l4232:
 19585     0D59  087B               	movf	___fladd@grs,w
 19586     0D5A  397F               	andlw	127
 19587     0D5B  1903               	btfsc	3,2
 19588     0D5C  2D5E               	goto	u309_21
 19589     0D5D  2D5F               	goto	u309_20
 19590     0D5E                     u309_21:
 19591     0D5E  2D62               	goto	i1l1559
 19592     0D5F                     u309_20:
 19593     0D5F                     i1l4234:
 19594     0D5F  01F9               	clrf	___fladd@aexp
 19595     0D60  0AF9               	incf	___fladd@aexp,f
 19596     0D61  2D67               	goto	i1l4238
 19597     0D62                     i1l1559:
 19598     0D62  1C70               	btfss	___fladd@b,0
 19599     0D63  2D65               	goto	u310_21
 19600     0D64  2D66               	goto	u310_20
 19601     0D65                     u310_21:
 19602     0D65  2D67               	goto	i1l4238
 19603     0D66                     u310_20:
 19604     0D66  2D5F               	goto	i1l4234
 19605     0D67                     i1l4238:
 19606     0D67  0879               	movf	___fladd@aexp,w
 19607     0D68  1903               	btfsc	3,2
 19608     0D69  2D6B               	goto	u311_21
 19609     0D6A  2D6C               	goto	u311_20
 19610     0D6B                     u311_21:
 19611     0D6B  2D9A               	goto	i1l1562
 19612     0D6C                     u311_20:
 19613     0D6C                     i1l4240:
 19614     0D6C  3001               	movlw	1
 19615     0D6D  07F0               	addwf	___fladd@b,f
 19616     0D6E  3000               	movlw	0
 19617     0D6F  3DF1               	addwfc	___fladd@b+1,f
 19618     0D70  3000               	movlw	0
 19619     0D71  3DF2               	addwfc	___fladd@b+2,f
 19620     0D72  3000               	movlw	0
 19621     0D73  3DF3               	addwfc	___fladd@b+3,f
 19622     0D74                     i1l4242:
 19623     0D74  1C73               	btfss	___fladd@b+3,0
 19624     0D75  2D77               	goto	u312_21
 19625     0D76  2D78               	goto	u312_20
 19626     0D77                     u312_21:
 19627     0D77  2D9A               	goto	i1l1562
 19628     0D78                     u312_20:
 19629     0D78                     i1l4244:
 19630     0D78  0870               	movf	___fladd@b,w
 19631     0D79  0020               	movlb	0	; select bank0
 19632     0D7A  00A0               	movwf	??___fladd
 19633     0D7B  0871               	movf	___fladd@b+1,w
 19634     0D7C  00A1               	movwf	??___fladd+1
 19635     0D7D  0872               	movf	___fladd@b+2,w
 19636     0D7E  00A2               	movwf	??___fladd+2
 19637     0D7F  0873               	movf	___fladd@b+3,w
 19638     0D80  00A3               	movwf	??___fladd+3
 19639     0D81  3001               	movlw	1
 19640     0D82  00A4               	movwf	??___fladd+4
 19641     0D83                     u313_25:
 19642     0D83  37A3               	asrf	??___fladd+3,f
 19643     0D84  0CA2               	rrf	??___fladd+2,f
 19644     0D85  0CA1               	rrf	??___fladd+1,f
 19645     0D86  0CA0               	rrf	??___fladd,f
 19646     0D87                     u313_20:
 19647     0D87  0BA4               	decfsz	??___fladd+4,f
 19648     0D88  2D83               	goto	u313_25
 19649     0D89  0823               	movf	??___fladd+3,w
 19650     0D8A  00F3               	movwf	___fladd@b+3
 19651     0D8B  0822               	movf	??___fladd+2,w
 19652     0D8C  00F2               	movwf	___fladd@b+2
 19653     0D8D  0821               	movf	??___fladd+1,w
 19654     0D8E  00F1               	movwf	___fladd@b+1
 19655     0D8F  0820               	movf	??___fladd,w
 19656     0D90  00F0               	movwf	___fladd@b
 19657     0D91  0A7A               	incf	___fladd@bexp,w
 19658     0D92  1903               	btfsc	3,2
 19659     0D93  2D95               	goto	u314_21
 19660     0D94  2D96               	goto	u314_20
 19661     0D95                     u314_21:
 19662     0D95  2D9A               	goto	i1l1562
 19663     0D96                     u314_20:
 19664     0D96                     i1l4246:
 19665     0D96  3001               	movlw	1
 19666     0D97  00A0               	movwf	??___fladd
 19667     0D98  0820               	movf	??___fladd,w
 19668     0D99  07FA               	addwf	___fladd@bexp,f
 19669     0D9A                     i1l1562:
 19670     0D9A  0A7A               	incf	___fladd@bexp,w
 19671     0D9B  1903               	btfsc	3,2
 19672     0D9C  2D9E               	goto	u315_21
 19673     0D9D  2D9F               	goto	u315_20
 19674     0D9E                     u315_21:
 19675     0D9E  2DA4               	goto	i1l4250
 19676     0D9F                     u315_20:
 19677     0D9F                     i1l4248:
 19678     0D9F  087A               	movf	___fladd@bexp,w
 19679     0DA0  1D03               	btfss	3,2
 19680     0DA1  2DA3               	goto	u316_21
 19681     0DA2  2DA4               	goto	u316_20
 19682     0DA3                     u316_21:
 19683     0DA3  2DB2               	goto	i1l4256
 19684     0DA4                     u316_20:
 19685     0DA4                     i1l4250:
 19686     0DA4  3000               	movlw	0
 19687     0DA5  00F3               	movwf	___fladd@b+3
 19688     0DA6  3000               	movlw	0
 19689     0DA7  00F2               	movwf	___fladd@b+2
 19690     0DA8  3000               	movlw	0
 19691     0DA9  00F1               	movwf	___fladd@b+1
 19692     0DAA  3000               	movlw	0
 19693     0DAB  00F0               	movwf	___fladd@b
 19694     0DAC                     i1l4252:
 19695     0DAC  087A               	movf	___fladd@bexp,w
 19696     0DAD  1D03               	btfss	3,2
 19697     0DAE  2DB0               	goto	u317_21
 19698     0DAF  2DB1               	goto	u317_20
 19699     0DB0                     u317_21:
 19700     0DB0  2DB2               	goto	i1l4256
 19701     0DB1                     u317_20:
 19702     0DB1                     i1l4254:
 19703     0DB1  01F8               	clrf	___fladd@signs
 19704     0DB2                     i1l4256:
 19705     0DB2  1C7A               	btfss	___fladd@bexp,0
 19706     0DB3  2DB5               	goto	u318_21
 19707     0DB4  2DB6               	goto	u318_20
 19708     0DB5                     u318_21:
 19709     0DB5  2DB8               	goto	i1l4260
 19710     0DB6                     u318_20:
 19711     0DB6                     i1l4258:
 19712     0DB6  17F2               	bsf	___fladd@b+2,7
 19713     0DB7  2DBD               	goto	i1l1570
 19714     0DB8                     i1l4260:
 19715     0DB8  307F               	movlw	127
 19716     0DB9  0020               	movlb	0	; select bank0
 19717     0DBA  00A0               	movwf	??___fladd
 19718     0DBB  0820               	movf	??___fladd,w
 19719     0DBC  05F2               	andwf	___fladd@b+2,f
 19720     0DBD                     i1l1570:
 19721     0DBD  367A               	lsrf	___fladd@bexp,w
 19722     0DBE  00F3               	movwf	___fladd@b+3
 19723     0DBF                     i1l4262:
 19724     0DBF  1FF8               	btfss	___fladd@signs,7
 19725     0DC0  2DC2               	goto	u319_21
 19726     0DC1  2DC3               	goto	u319_20
 19727     0DC2                     u319_21:
 19728     0DC2  2DC4               	goto	i1l1571
 19729     0DC3                     u319_20:
 19730     0DC3                     i1l4264:
 19731     0DC3  17F3               	bsf	___fladd@b+3,7
 19732     0DC4                     i1l1571:
 19733     0DC4                     i1l1541:
 19734     0DC4  0008               	return
 19735     0DC5                     __end_of___fladd:
 19736                           
 19737                           	psect	text87
 19738     1DAB                     __ptext87:	
 19739 ;; *************** function ___flneg *****************
 19740 ;; Defined at:
 19741 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
 19742 ;; Parameters:    Size  Location     Type
 19743 ;;  f1              4    0[COMMON] unsigned char 
 19744 ;; Auto vars:     Size  Location     Type
 19745 ;;		None
 19746 ;; Return value:  Size  Location     Type
 19747 ;;                  4    0[COMMON] unsigned char 
 19748 ;; Registers used:
 19749 ;;		wreg
 19750 ;; Tracked objects:
 19751 ;;		On entry : 0/0
 19752 ;;		On exit  : 0/0
 19753 ;;		Unchanged: 0/0
 19754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19758 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19759 ;;Total ram usage:        4 bytes
 19760 ;; Hardware stack levels used: 1
 19761 ;; This function calls:
 19762 ;;		Nothing
 19763 ;; This function is called by:
 19764 ;;		_efgtoa
 19765 ;; This function uses a non-reentrant model
 19766 ;;
 19767                           
 19768     1DAB                     ___flneg:	
 19769                           ;psect for function ___flneg
 19770                           
 19771     1DAB                     i1l4350:	
 19772                           ;incstack = 0
 19773                           ; Regs used in ___flneg: [wreg]
 19774                           
 19775     1DAB  0873               	movf	___flneg@f1+3,w
 19776     1DAC  0472               	iorwf	___flneg@f1+2,w
 19777     1DAD  0471               	iorwf	___flneg@f1+1,w
 19778     1DAE  0470               	iorwf	___flneg@f1,w
 19779     1DAF  1903               	skipnz
 19780     1DB0  2DB2               	goto	u337_21
 19781     1DB1  2DB3               	goto	u337_20
 19782     1DB2                     u337_21:
 19783     1DB2  2DB5               	goto	i1l4354
 19784     1DB3                     u337_20:
 19785     1DB3                     i1l4352:
 19786     1DB3  3080               	movlw	128
 19787     1DB4  06F3               	xorwf	___flneg@f1+3,f
 19788     1DB5                     i1l4354:
 19789     1DB5                     i1l1417:
 19790     1DB5  0008               	return
 19791     1DB6                     __end_of___flneg:
 19792                           
 19793                           	psect	text88
 19794     0DC5                     __ptext88:	
 19795 ;; *************** function ___flmul *****************
 19796 ;; Defined at:
 19797 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
 19798 ;; Parameters:    Size  Location     Type
 19799 ;;  b               4    6[BANK0 ] unsigned char 
 19800 ;;  a               4   10[BANK0 ] unsigned char 
 19801 ;; Auto vars:     Size  Location     Type
 19802 ;;  prod            4   26[BANK0 ] struct .
 19803 ;;  grs             4   20[BANK0 ] unsigned long 
 19804 ;;  temp            2   30[BANK0 ] struct .
 19805 ;;  bexp            1   25[BANK0 ] unsigned char 
 19806 ;;  aexp            1   24[BANK0 ] unsigned char 
 19807 ;;  sign            1   19[BANK0 ] unsigned char 
 19808 ;; Return value:  Size  Location     Type
 19809 ;;                  4    6[BANK0 ] unsigned char 
 19810 ;; Registers used:
 19811 ;;		wreg, status,2, status,0, pclath, cstack
 19812 ;; Tracked objects:
 19813 ;;		On entry : 0/0
 19814 ;;		On exit  : 0/0
 19815 ;;		Unchanged: 0/0
 19816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19817 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19818 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19819 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19820 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19821 ;;Total ram usage:       26 bytes
 19822 ;; Hardware stack levels used: 1
 19823 ;; Hardware stack levels required when called: 1
 19824 ;; This function calls:
 19825 ;;		__Umul8_16
 19826 ;; This function is called by:
 19827 ;;		_TMR0_Custom_ISR
 19828 ;;		_efgtoa
 19829 ;; This function uses a non-reentrant model
 19830 ;;
 19831                           
 19832     0DC5                     ___flmul:	
 19833                           ;psect for function ___flmul
 19834                           
 19835     0DC5                     i1l4540:	
 19836                           ;incstack = 0
 19837                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 19838                           
 19839     0DC5  0020               	movlb	0	; select bank0
 19840     0DC6  0829               	movf	___flmul@b+3,w
 19841     0DC7  3980               	andlw	128
 19842     0DC8  00B3               	movwf	___flmul@sign
 19843     0DC9                     i1l4542:
 19844     0DC9  3529               	lslf	___flmul@b+3,w
 19845     0DCA  00B9               	movwf	___flmul@bexp
 19846     0DCB                     i1l4544:
 19847     0DCB  1FA8               	btfss	___flmul@b+2,7
 19848     0DCC  2DCE               	goto	u377_21
 19849     0DCD  2DCF               	goto	u377_20
 19850     0DCE                     u377_21:
 19851     0DCE  2DD0               	goto	i1l4548
 19852     0DCF                     u377_20:
 19853     0DCF                     i1l4546:
 19854     0DCF  1439               	bsf	___flmul@bexp,0
 19855     0DD0                     i1l4548:
 19856     0DD0  0839               	movf	___flmul@bexp,w
 19857     0DD1  1903               	btfsc	3,2
 19858     0DD2  2DD4               	goto	u378_21
 19859     0DD3  2DD5               	goto	u378_20
 19860     0DD4                     u378_21:
 19861     0DD4  2DE4               	goto	i1l4556
 19862     0DD5                     u378_20:
 19863     0DD5                     i1l4550:
 19864     0DD5  0A39               	incf	___flmul@bexp,w
 19865     0DD6  1D03               	btfss	3,2
 19866     0DD7  2DD9               	goto	u379_21
 19867     0DD8  2DDA               	goto	u379_20
 19868     0DD9                     u379_21:
 19869     0DD9  2DE2               	goto	i1l4554
 19870     0DDA                     u379_20:
 19871     0DDA                     i1l4552:
 19872     0DDA  3000               	movlw	0
 19873     0DDB  00A9               	movwf	___flmul@b+3
 19874     0DDC  3000               	movlw	0
 19875     0DDD  00A8               	movwf	___flmul@b+2
 19876     0DDE  3000               	movlw	0
 19877     0DDF  00A7               	movwf	___flmul@b+1
 19878     0DE0  3000               	movlw	0
 19879     0DE1  00A6               	movwf	___flmul@b
 19880     0DE2                     i1l4554:
 19881     0DE2  17A8               	bsf	___flmul@b+2,7
 19882     0DE3  2DEC               	goto	i1l4558
 19883     0DE4                     i1l4556:
 19884     0DE4  3000               	movlw	0
 19885     0DE5  00A9               	movwf	___flmul@b+3
 19886     0DE6  3000               	movlw	0
 19887     0DE7  00A8               	movwf	___flmul@b+2
 19888     0DE8  3000               	movlw	0
 19889     0DE9  00A7               	movwf	___flmul@b+1
 19890     0DEA  3000               	movlw	0
 19891     0DEB  00A6               	movwf	___flmul@b
 19892     0DEC                     i1l4558:
 19893     0DEC  082D               	movf	___flmul@a+3,w
 19894     0DED  3980               	andlw	128
 19895     0DEE  00AE               	movwf	??___flmul
 19896     0DEF  082E               	movf	??___flmul,w
 19897     0DF0  06B3               	xorwf	___flmul@sign,f
 19898     0DF1                     i1l4560:
 19899     0DF1  352D               	lslf	___flmul@a+3,w
 19900     0DF2  00B8               	movwf	___flmul@aexp
 19901     0DF3                     i1l4562:
 19902     0DF3  1FAC               	btfss	___flmul@a+2,7
 19903     0DF4  2DF6               	goto	u380_21
 19904     0DF5  2DF7               	goto	u380_20
 19905     0DF6                     u380_21:
 19906     0DF6  2DF8               	goto	i1l4566
 19907     0DF7                     u380_20:
 19908     0DF7                     i1l4564:
 19909     0DF7  1438               	bsf	___flmul@aexp,0
 19910     0DF8                     i1l4566:
 19911     0DF8  0838               	movf	___flmul@aexp,w
 19912     0DF9  1903               	btfsc	3,2
 19913     0DFA  2DFC               	goto	u381_21
 19914     0DFB  2DFD               	goto	u381_20
 19915     0DFC                     u381_21:
 19916     0DFC  2E0C               	goto	i1l4574
 19917     0DFD                     u381_20:
 19918     0DFD                     i1l4568:
 19919     0DFD  0A38               	incf	___flmul@aexp,w
 19920     0DFE  1D03               	btfss	3,2
 19921     0DFF  2E01               	goto	u382_21
 19922     0E00  2E02               	goto	u382_20
 19923     0E01                     u382_21:
 19924     0E01  2E0A               	goto	i1l4572
 19925     0E02                     u382_20:
 19926     0E02                     i1l4570:
 19927     0E02  3000               	movlw	0
 19928     0E03  00AD               	movwf	___flmul@a+3
 19929     0E04  3000               	movlw	0
 19930     0E05  00AC               	movwf	___flmul@a+2
 19931     0E06  3000               	movlw	0
 19932     0E07  00AB               	movwf	___flmul@a+1
 19933     0E08  3000               	movlw	0
 19934     0E09  00AA               	movwf	___flmul@a
 19935     0E0A                     i1l4572:
 19936     0E0A  17AC               	bsf	___flmul@a+2,7
 19937     0E0B  2E14               	goto	i1l4576
 19938     0E0C                     i1l4574:
 19939     0E0C  3000               	movlw	0
 19940     0E0D  00AD               	movwf	___flmul@a+3
 19941     0E0E  3000               	movlw	0
 19942     0E0F  00AC               	movwf	___flmul@a+2
 19943     0E10  3000               	movlw	0
 19944     0E11  00AB               	movwf	___flmul@a+1
 19945     0E12  3000               	movlw	0
 19946     0E13  00AA               	movwf	___flmul@a
 19947     0E14                     i1l4576:
 19948     0E14  0838               	movf	___flmul@aexp,w
 19949     0E15  1903               	btfsc	3,2
 19950     0E16  2E18               	goto	u383_21
 19951     0E17  2E19               	goto	u383_20
 19952     0E18                     u383_21:
 19953     0E18  2E1E               	goto	i1l4580
 19954     0E19                     u383_20:
 19955     0E19                     i1l4578:
 19956     0E19  0839               	movf	___flmul@bexp,w
 19957     0E1A  1D03               	btfss	3,2
 19958     0E1B  2E1D               	goto	u384_21
 19959     0E1C  2E1E               	goto	u384_20
 19960     0E1D                     u384_21:
 19961     0E1D  2E27               	goto	i1l4584
 19962     0E1E                     u384_20:
 19963     0E1E                     i1l4580:
 19964     0E1E  3000               	movlw	0
 19965     0E1F  00A9               	movwf	?___flmul+3
 19966     0E20  3000               	movlw	0
 19967     0E21  00A8               	movwf	?___flmul+2
 19968     0E22  3000               	movlw	0
 19969     0E23  00A7               	movwf	?___flmul+1
 19970     0E24  3000               	movlw	0
 19971     0E25  00A6               	movwf	?___flmul
 19972     0E26  2FFF               	goto	i1l1624
 19973     0E27                     i1l4584:
 19974     0E27  0826               	movf	___flmul@b,w
 19975     0E28  00F0               	movwf	__Umul8_16@multiplicand
 19976     0E29  082C               	movf	___flmul@a+2,w
 19977     0E2A  3190  202A  318D   	fcall	__Umul8_16
 19978     0E2D  0871               	movf	?__Umul8_16+1,w
 19979     0E2E  0020               	movlb	0	; select bank0
 19980     0E2F  00BF               	movwf	___flmul@temp+1
 19981     0E30  0870               	movf	?__Umul8_16,w
 19982     0E31  00BE               	movwf	___flmul@temp
 19983     0E32                     i1l4586:
 19984     0E32  083E               	movf	___flmul@temp,w
 19985     0E33  00AE               	movwf	??___flmul
 19986     0E34  01AF               	clrf	??___flmul+1
 19987     0E35  01B0               	clrf	??___flmul+2
 19988     0E36  01B1               	clrf	??___flmul+3
 19989     0E37  0831               	movf	??___flmul+3,w
 19990     0E38  00B7               	movwf	___flmul@grs+3
 19991     0E39  0830               	movf	??___flmul+2,w
 19992     0E3A  00B6               	movwf	___flmul@grs+2
 19993     0E3B  082F               	movf	??___flmul+1,w
 19994     0E3C  00B5               	movwf	___flmul@grs+1
 19995     0E3D  082E               	movf	??___flmul,w
 19996     0E3E  00B4               	movwf	___flmul@grs
 19997     0E3F                     i1l4588:
 19998     0E3F  083F               	movf	___flmul@temp+1,w
 19999     0E40  00AE               	movwf	??___flmul
 20000     0E41  01AF               	clrf	??___flmul+1
 20001     0E42  01B0               	clrf	??___flmul+2
 20002     0E43  01B1               	clrf	??___flmul+3
 20003     0E44  0831               	movf	??___flmul+3,w
 20004     0E45  00BD               	movwf	___flmul@prod+3
 20005     0E46  0830               	movf	??___flmul+2,w
 20006     0E47  00BC               	movwf	___flmul@prod+2
 20007     0E48  082F               	movf	??___flmul+1,w
 20008     0E49  00BB               	movwf	___flmul@prod+1
 20009     0E4A  082E               	movf	??___flmul,w
 20010     0E4B  00BA               	movwf	___flmul@prod
 20011     0E4C  0827               	movf	___flmul@b+1,w
 20012     0E4D  00F0               	movwf	__Umul8_16@multiplicand
 20013     0E4E  082B               	movf	___flmul@a+1,w
 20014     0E4F  3190  202A  318D   	fcall	__Umul8_16
 20015     0E52  0871               	movf	?__Umul8_16+1,w
 20016     0E53  0020               	movlb	0	; select bank0
 20017     0E54  00BF               	movwf	___flmul@temp+1
 20018     0E55  0870               	movf	?__Umul8_16,w
 20019     0E56  00BE               	movwf	___flmul@temp
 20020     0E57                     i1l4590:
 20021     0E57  083E               	movf	___flmul@temp,w
 20022     0E58  00AE               	movwf	??___flmul
 20023     0E59  01AF               	clrf	??___flmul+1
 20024     0E5A  01B0               	clrf	??___flmul+2
 20025     0E5B  01B1               	clrf	??___flmul+3
 20026     0E5C  082E               	movf	??___flmul,w
 20027     0E5D  07B4               	addwf	___flmul@grs,f
 20028     0E5E  082F               	movf	??___flmul+1,w
 20029     0E5F  3DB5               	addwfc	___flmul@grs+1,f
 20030     0E60  0830               	movf	??___flmul+2,w
 20031     0E61  3DB6               	addwfc	___flmul@grs+2,f
 20032     0E62  0831               	movf	??___flmul+3,w
 20033     0E63  3DB7               	addwfc	___flmul@grs+3,f
 20034     0E64                     i1l4592:
 20035     0E64  083F               	movf	___flmul@temp+1,w
 20036     0E65  00AE               	movwf	??___flmul
 20037     0E66  01AF               	clrf	??___flmul+1
 20038     0E67  01B0               	clrf	??___flmul+2
 20039     0E68  01B1               	clrf	??___flmul+3
 20040     0E69  082E               	movf	??___flmul,w
 20041     0E6A  07BA               	addwf	___flmul@prod,f
 20042     0E6B  082F               	movf	??___flmul+1,w
 20043     0E6C  3DBB               	addwfc	___flmul@prod+1,f
 20044     0E6D  0830               	movf	??___flmul+2,w
 20045     0E6E  3DBC               	addwfc	___flmul@prod+2,f
 20046     0E6F  0831               	movf	??___flmul+3,w
 20047     0E70  3DBD               	addwfc	___flmul@prod+3,f
 20048     0E71  0828               	movf	___flmul@b+2,w
 20049     0E72  00F0               	movwf	__Umul8_16@multiplicand
 20050     0E73  082A               	movf	___flmul@a,w
 20051     0E74  3190  202A  318D   	fcall	__Umul8_16
 20052     0E77  0871               	movf	?__Umul8_16+1,w
 20053     0E78  0020               	movlb	0	; select bank0
 20054     0E79  00BF               	movwf	___flmul@temp+1
 20055     0E7A  0870               	movf	?__Umul8_16,w
 20056     0E7B  00BE               	movwf	___flmul@temp
 20057     0E7C                     i1l4594:
 20058     0E7C  083E               	movf	___flmul@temp,w
 20059     0E7D  00AE               	movwf	??___flmul
 20060     0E7E  01AF               	clrf	??___flmul+1
 20061     0E7F  01B0               	clrf	??___flmul+2
 20062     0E80  01B1               	clrf	??___flmul+3
 20063     0E81  082E               	movf	??___flmul,w
 20064     0E82  07B4               	addwf	___flmul@grs,f
 20065     0E83  082F               	movf	??___flmul+1,w
 20066     0E84  3DB5               	addwfc	___flmul@grs+1,f
 20067     0E85  0830               	movf	??___flmul+2,w
 20068     0E86  3DB6               	addwfc	___flmul@grs+2,f
 20069     0E87  0831               	movf	??___flmul+3,w
 20070     0E88  3DB7               	addwfc	___flmul@grs+3,f
 20071     0E89                     i1l4596:
 20072     0E89  083F               	movf	___flmul@temp+1,w
 20073     0E8A  00AE               	movwf	??___flmul
 20074     0E8B  01AF               	clrf	??___flmul+1
 20075     0E8C  01B0               	clrf	??___flmul+2
 20076     0E8D  01B1               	clrf	??___flmul+3
 20077     0E8E  082E               	movf	??___flmul,w
 20078     0E8F  07BA               	addwf	___flmul@prod,f
 20079     0E90  082F               	movf	??___flmul+1,w
 20080     0E91  3DBB               	addwfc	___flmul@prod+1,f
 20081     0E92  0830               	movf	??___flmul+2,w
 20082     0E93  3DBC               	addwfc	___flmul@prod+2,f
 20083     0E94  0831               	movf	??___flmul+3,w
 20084     0E95  3DBD               	addwfc	___flmul@prod+3,f
 20085     0E96                     i1l4598:
 20086     0E96  3008               	movlw	8
 20087     0E97                     u385_25:
 20088     0E97  35B4               	lslf	___flmul@grs,f
 20089     0E98  0DB5               	rlf	___flmul@grs+1,f
 20090     0E99  0DB6               	rlf	___flmul@grs+2,f
 20091     0E9A  0DB7               	rlf	___flmul@grs+3,f
 20092     0E9B  0B89               	decfsz	9,f
 20093     0E9C  2E97               	goto	u385_25
 20094     0E9D                     i1l4600:
 20095     0E9D  0827               	movf	___flmul@b+1,w
 20096     0E9E  00F0               	movwf	__Umul8_16@multiplicand
 20097     0E9F  082A               	movf	___flmul@a,w
 20098     0EA0  3190  202A  318D   	fcall	__Umul8_16
 20099     0EA3  0871               	movf	?__Umul8_16+1,w
 20100     0EA4  0020               	movlb	0	; select bank0
 20101     0EA5  00BF               	movwf	___flmul@temp+1
 20102     0EA6  0870               	movf	?__Umul8_16,w
 20103     0EA7  00BE               	movwf	___flmul@temp
 20104     0EA8                     i1l4602:
 20105     0EA8  083E               	movf	___flmul@temp,w
 20106     0EA9  07B4               	addwf	___flmul@grs,f
 20107     0EAA  083F               	movf	___flmul@temp+1,w
 20108     0EAB  3DB5               	addwfc	___flmul@grs+1,f
 20109     0EAC  3000               	movlw	0
 20110     0EAD  3DB6               	addwfc	___flmul@grs+2,f
 20111     0EAE  3DB7               	addwfc	___flmul@grs+3,f
 20112     0EAF                     i1l4604:
 20113     0EAF  0826               	movf	___flmul@b,w
 20114     0EB0  00F0               	movwf	__Umul8_16@multiplicand
 20115     0EB1  082B               	movf	___flmul@a+1,w
 20116     0EB2  3190  202A  318D   	fcall	__Umul8_16
 20117     0EB5  0871               	movf	?__Umul8_16+1,w
 20118     0EB6  0020               	movlb	0	; select bank0
 20119     0EB7  00BF               	movwf	___flmul@temp+1
 20120     0EB8  0870               	movf	?__Umul8_16,w
 20121     0EB9  00BE               	movwf	___flmul@temp
 20122     0EBA                     i1l4606:
 20123     0EBA  083E               	movf	___flmul@temp,w
 20124     0EBB  07B4               	addwf	___flmul@grs,f
 20125     0EBC  083F               	movf	___flmul@temp+1,w
 20126     0EBD  3DB5               	addwfc	___flmul@grs+1,f
 20127     0EBE  3000               	movlw	0
 20128     0EBF  3DB6               	addwfc	___flmul@grs+2,f
 20129     0EC0  3DB7               	addwfc	___flmul@grs+3,f
 20130     0EC1                     i1l4608:
 20131     0EC1  3008               	movlw	8
 20132     0EC2                     u386_25:
 20133     0EC2  35B4               	lslf	___flmul@grs,f
 20134     0EC3  0DB5               	rlf	___flmul@grs+1,f
 20135     0EC4  0DB6               	rlf	___flmul@grs+2,f
 20136     0EC5  0DB7               	rlf	___flmul@grs+3,f
 20137     0EC6  0B89               	decfsz	9,f
 20138     0EC7  2EC2               	goto	u386_25
 20139     0EC8  0826               	movf	___flmul@b,w
 20140     0EC9  00F0               	movwf	__Umul8_16@multiplicand
 20141     0ECA  082A               	movf	___flmul@a,w
 20142     0ECB  3190  202A  318D   	fcall	__Umul8_16
 20143     0ECE  0871               	movf	?__Umul8_16+1,w
 20144     0ECF  0020               	movlb	0	; select bank0
 20145     0ED0  00BF               	movwf	___flmul@temp+1
 20146     0ED1  0870               	movf	?__Umul8_16,w
 20147     0ED2  00BE               	movwf	___flmul@temp
 20148     0ED3                     i1l4610:
 20149     0ED3  083E               	movf	___flmul@temp,w
 20150     0ED4  07B4               	addwf	___flmul@grs,f
 20151     0ED5  083F               	movf	___flmul@temp+1,w
 20152     0ED6  3DB5               	addwfc	___flmul@grs+1,f
 20153     0ED7  3000               	movlw	0
 20154     0ED8  3DB6               	addwfc	___flmul@grs+2,f
 20155     0ED9  3DB7               	addwfc	___flmul@grs+3,f
 20156     0EDA                     i1l4612:
 20157     0EDA  0827               	movf	___flmul@b+1,w
 20158     0EDB  00F0               	movwf	__Umul8_16@multiplicand
 20159     0EDC  082C               	movf	___flmul@a+2,w
 20160     0EDD  3190  202A  318D   	fcall	__Umul8_16
 20161     0EE0  0871               	movf	?__Umul8_16+1,w
 20162     0EE1  0020               	movlb	0	; select bank0
 20163     0EE2  00BF               	movwf	___flmul@temp+1
 20164     0EE3  0870               	movf	?__Umul8_16,w
 20165     0EE4  00BE               	movwf	___flmul@temp
 20166     0EE5  083E               	movf	___flmul@temp,w
 20167     0EE6  07BA               	addwf	___flmul@prod,f
 20168     0EE7  083F               	movf	___flmul@temp+1,w
 20169     0EE8  3DBB               	addwfc	___flmul@prod+1,f
 20170     0EE9  3000               	movlw	0
 20171     0EEA  3DBC               	addwfc	___flmul@prod+2,f
 20172     0EEB  3DBD               	addwfc	___flmul@prod+3,f
 20173     0EEC                     i1l4614:
 20174     0EEC  0828               	movf	___flmul@b+2,w
 20175     0EED  00F0               	movwf	__Umul8_16@multiplicand
 20176     0EEE  082B               	movf	___flmul@a+1,w
 20177     0EEF  3190  202A  318D   	fcall	__Umul8_16
 20178     0EF2  0871               	movf	?__Umul8_16+1,w
 20179     0EF3  0020               	movlb	0	; select bank0
 20180     0EF4  00BF               	movwf	___flmul@temp+1
 20181     0EF5  0870               	movf	?__Umul8_16,w
 20182     0EF6  00BE               	movwf	___flmul@temp
 20183     0EF7                     i1l4616:
 20184     0EF7  083E               	movf	___flmul@temp,w
 20185     0EF8  07BA               	addwf	___flmul@prod,f
 20186     0EF9  083F               	movf	___flmul@temp+1,w
 20187     0EFA  3DBB               	addwfc	___flmul@prod+1,f
 20188     0EFB  3000               	movlw	0
 20189     0EFC  3DBC               	addwfc	___flmul@prod+2,f
 20190     0EFD  3DBD               	addwfc	___flmul@prod+3,f
 20191     0EFE  0828               	movf	___flmul@b+2,w
 20192     0EFF  00F0               	movwf	__Umul8_16@multiplicand
 20193     0F00  082C               	movf	___flmul@a+2,w
 20194     0F01  3190  202A  318D   	fcall	__Umul8_16
 20195     0F04  0871               	movf	?__Umul8_16+1,w
 20196     0F05  0020               	movlb	0	; select bank0
 20197     0F06  00BF               	movwf	___flmul@temp+1
 20198     0F07  0870               	movf	?__Umul8_16,w
 20199     0F08  00BE               	movwf	___flmul@temp
 20200     0F09                     i1l4618:
 20201     0F09  083E               	movf	___flmul@temp,w
 20202     0F0A  00AE               	movwf	??___flmul
 20203     0F0B  083F               	movf	___flmul@temp+1,w
 20204     0F0C  00AF               	movwf	??___flmul+1
 20205     0F0D  01B0               	clrf	??___flmul+2
 20206     0F0E  01B1               	clrf	??___flmul+3
 20207     0F0F  3008               	movlw	8
 20208     0F10                     u387_25:
 20209     0F10  35AE               	lslf	??___flmul,f
 20210     0F11  0DAF               	rlf	??___flmul+1,f
 20211     0F12  0DB0               	rlf	??___flmul+2,f
 20212     0F13  0DB1               	rlf	??___flmul+3,f
 20213     0F14                     u387_20:
 20214     0F14  0B89               	decfsz	9,f
 20215     0F15  2F10               	goto	u387_25
 20216     0F16  082E               	movf	??___flmul,w
 20217     0F17  07BA               	addwf	___flmul@prod,f
 20218     0F18  082F               	movf	??___flmul+1,w
 20219     0F19  3DBB               	addwfc	___flmul@prod+1,f
 20220     0F1A  0830               	movf	??___flmul+2,w
 20221     0F1B  3DBC               	addwfc	___flmul@prod+2,f
 20222     0F1C  0831               	movf	??___flmul+3,w
 20223     0F1D  3DBD               	addwfc	___flmul@prod+3,f
 20224     0F1E                     i1l4620:
 20225     0F1E  0834               	movf	___flmul@grs,w
 20226     0F1F  00AE               	movwf	??___flmul
 20227     0F20  0835               	movf	___flmul@grs+1,w
 20228     0F21  00AF               	movwf	??___flmul+1
 20229     0F22  0836               	movf	___flmul@grs+2,w
 20230     0F23  00B0               	movwf	??___flmul+2
 20231     0F24  0837               	movf	___flmul@grs+3,w
 20232     0F25  00B1               	movwf	??___flmul+3
 20233     0F26  3018               	movlw	24
 20234     0F27                     u388_25:
 20235     0F27  36B1               	lsrf	??___flmul+3,f
 20236     0F28  0CB0               	rrf	??___flmul+2,f
 20237     0F29  0CAF               	rrf	??___flmul+1,f
 20238     0F2A  0CAE               	rrf	??___flmul,f
 20239     0F2B                     u388_20:
 20240     0F2B  0B89               	decfsz	9,f
 20241     0F2C  2F27               	goto	u388_25
 20242     0F2D  082E               	movf	??___flmul,w
 20243     0F2E  07BA               	addwf	___flmul@prod,f
 20244     0F2F  082F               	movf	??___flmul+1,w
 20245     0F30  3DBB               	addwfc	___flmul@prod+1,f
 20246     0F31  0830               	movf	??___flmul+2,w
 20247     0F32  3DBC               	addwfc	___flmul@prod+2,f
 20248     0F33  0831               	movf	??___flmul+3,w
 20249     0F34  3DBD               	addwfc	___flmul@prod+3,f
 20250     0F35                     i1l4622:
 20251     0F35  3008               	movlw	8
 20252     0F36                     u389_25:
 20253     0F36  35B4               	lslf	___flmul@grs,f
 20254     0F37  0DB5               	rlf	___flmul@grs+1,f
 20255     0F38  0DB6               	rlf	___flmul@grs+2,f
 20256     0F39  0DB7               	rlf	___flmul@grs+3,f
 20257     0F3A  0B89               	decfsz	9,f
 20258     0F3B  2F36               	goto	u389_25
 20259     0F3C                     i1l4624:
 20260     0F3C  0839               	movf	___flmul@bexp,w
 20261     0F3D  0738               	addwf	___flmul@aexp,w
 20262     0F3E  00AE               	movwf	??___flmul
 20263     0F3F  01AF               	clrf	??___flmul+1
 20264     0F40  0DAF               	rlf	??___flmul+1,f
 20265     0F41  082E               	movf	??___flmul,w
 20266     0F42  3E82               	addlw	130
 20267     0F43  00BE               	movwf	___flmul@temp
 20268     0F44  30FF               	movlw	255
 20269     0F45  3D2F               	addwfc	??___flmul+1,w
 20270     0F46  00BF               	movwf	___flmul@temp+1
 20271     0F47  2F5F               	goto	i1l4636
 20272     0F48                     i1l4626:
 20273     0F48  3001               	movlw	1
 20274     0F49                     u390_25:
 20275     0F49  35BA               	lslf	___flmul@prod,f
 20276     0F4A  0DBB               	rlf	___flmul@prod+1,f
 20277     0F4B  0DBC               	rlf	___flmul@prod+2,f
 20278     0F4C  0DBD               	rlf	___flmul@prod+3,f
 20279     0F4D  0B89               	decfsz	9,f
 20280     0F4E  2F49               	goto	u390_25
 20281     0F4F                     i1l4628:
 20282     0F4F  1FB7               	btfss	___flmul@grs+3,7
 20283     0F50  2F52               	goto	u391_21
 20284     0F51  2F53               	goto	u391_20
 20285     0F52                     u391_21:
 20286     0F52  2F54               	goto	i1l4632
 20287     0F53                     u391_20:
 20288     0F53                     i1l4630:
 20289     0F53  143A               	bsf	___flmul@prod,0
 20290     0F54                     i1l4632:
 20291     0F54  3001               	movlw	1
 20292     0F55                     u392_25:
 20293     0F55  35B4               	lslf	___flmul@grs,f
 20294     0F56  0DB5               	rlf	___flmul@grs+1,f
 20295     0F57  0DB6               	rlf	___flmul@grs+2,f
 20296     0F58  0DB7               	rlf	___flmul@grs+3,f
 20297     0F59  0B89               	decfsz	9,f
 20298     0F5A  2F55               	goto	u392_25
 20299     0F5B                     i1l4634:
 20300     0F5B  30FF               	movlw	255
 20301     0F5C  07BE               	addwf	___flmul@temp,f
 20302     0F5D  30FF               	movlw	255
 20303     0F5E  3DBF               	addwfc	___flmul@temp+1,f
 20304     0F5F                     i1l4636:
 20305     0F5F  1FBC               	btfss	___flmul@prod+2,7
 20306     0F60  2F62               	goto	u393_21
 20307     0F61  2F63               	goto	u393_20
 20308     0F62                     u393_21:
 20309     0F62  2F48               	goto	i1l4626
 20310     0F63                     u393_20:
 20311     0F63                     i1l4638:
 20312     0F63  01B8               	clrf	___flmul@aexp
 20313     0F64                     i1l4640:
 20314     0F64  1FB7               	btfss	___flmul@grs+3,7
 20315     0F65  2F67               	goto	u394_21
 20316     0F66  2F68               	goto	u394_20
 20317     0F67                     u394_21:
 20318     0F67  2F84               	goto	i1l4648
 20319     0F68                     u394_20:
 20320     0F68                     i1l4642:
 20321     0F68  30FF               	movlw	255
 20322     0F69  0534               	andwf	___flmul@grs,w
 20323     0F6A  00AE               	movwf	??___flmul
 20324     0F6B  30FF               	movlw	255
 20325     0F6C  0535               	andwf	___flmul@grs+1,w
 20326     0F6D  00AF               	movwf	??___flmul+1
 20327     0F6E  30FF               	movlw	255
 20328     0F6F  0536               	andwf	___flmul@grs+2,w
 20329     0F70  00B0               	movwf	??___flmul+2
 20330     0F71  307F               	movlw	127
 20331     0F72  0537               	andwf	___flmul@grs+3,w
 20332     0F73  00B1               	movwf	??___flmul+3
 20333     0F74  0831               	movf	??___flmul+3,w
 20334     0F75  0430               	iorwf	??___flmul+2,w
 20335     0F76  042F               	iorwf	??___flmul+1,w
 20336     0F77  042E               	iorwf	??___flmul,w
 20337     0F78  1903               	skipnz
 20338     0F79  2F7B               	goto	u395_21
 20339     0F7A  2F7C               	goto	u395_20
 20340     0F7B                     u395_21:
 20341     0F7B  2F7F               	goto	i1l1630
 20342     0F7C                     u395_20:
 20343     0F7C                     i1l4644:
 20344     0F7C  01B8               	clrf	___flmul@aexp
 20345     0F7D  0AB8               	incf	___flmul@aexp,f
 20346     0F7E  2F84               	goto	i1l4648
 20347     0F7F                     i1l1630:
 20348     0F7F  1C3A               	btfss	___flmul@prod,0
 20349     0F80  2F82               	goto	u396_21
 20350     0F81  2F83               	goto	u396_20
 20351     0F82                     u396_21:
 20352     0F82  2F84               	goto	i1l4648
 20353     0F83                     u396_20:
 20354     0F83  2F7C               	goto	i1l4644
 20355     0F84                     i1l4648:
 20356     0F84  0838               	movf	___flmul@aexp,w
 20357     0F85  1903               	btfsc	3,2
 20358     0F86  2F88               	goto	u397_21
 20359     0F87  2F89               	goto	u397_20
 20360     0F88                     u397_21:
 20361     0F88  2FB1               	goto	i1l4658
 20362     0F89                     u397_20:
 20363     0F89                     i1l4650:
 20364     0F89  3001               	movlw	1
 20365     0F8A  07BA               	addwf	___flmul@prod,f
 20366     0F8B  3000               	movlw	0
 20367     0F8C  3DBB               	addwfc	___flmul@prod+1,f
 20368     0F8D  3000               	movlw	0
 20369     0F8E  3DBC               	addwfc	___flmul@prod+2,f
 20370     0F8F  3000               	movlw	0
 20371     0F90  3DBD               	addwfc	___flmul@prod+3,f
 20372     0F91                     i1l4652:
 20373     0F91  1C3D               	btfss	___flmul@prod+3,0
 20374     0F92  2F94               	goto	u398_21
 20375     0F93  2F95               	goto	u398_20
 20376     0F94                     u398_21:
 20377     0F94  2FB1               	goto	i1l4658
 20378     0F95                     u398_20:
 20379     0F95                     i1l4654:
 20380     0F95  083A               	movf	___flmul@prod,w
 20381     0F96  00AE               	movwf	??___flmul
 20382     0F97  083B               	movf	___flmul@prod+1,w
 20383     0F98  00AF               	movwf	??___flmul+1
 20384     0F99  083C               	movf	___flmul@prod+2,w
 20385     0F9A  00B0               	movwf	??___flmul+2
 20386     0F9B  083D               	movf	___flmul@prod+3,w
 20387     0F9C  00B1               	movwf	??___flmul+3
 20388     0F9D  3001               	movlw	1
 20389     0F9E  00B2               	movwf	??___flmul+4
 20390     0F9F                     u399_25:
 20391     0F9F  37B1               	asrf	??___flmul+3,f
 20392     0FA0  0CB0               	rrf	??___flmul+2,f
 20393     0FA1  0CAF               	rrf	??___flmul+1,f
 20394     0FA2  0CAE               	rrf	??___flmul,f
 20395     0FA3                     u399_20:
 20396     0FA3  0BB2               	decfsz	??___flmul+4,f
 20397     0FA4  2F9F               	goto	u399_25
 20398     0FA5  0831               	movf	??___flmul+3,w
 20399     0FA6  00BD               	movwf	___flmul@prod+3
 20400     0FA7  0830               	movf	??___flmul+2,w
 20401     0FA8  00BC               	movwf	___flmul@prod+2
 20402     0FA9  082F               	movf	??___flmul+1,w
 20403     0FAA  00BB               	movwf	___flmul@prod+1
 20404     0FAB  082E               	movf	??___flmul,w
 20405     0FAC  00BA               	movwf	___flmul@prod
 20406     0FAD                     i1l4656:
 20407     0FAD  3001               	movlw	1
 20408     0FAE  07BE               	addwf	___flmul@temp,f
 20409     0FAF  3000               	movlw	0
 20410     0FB0  3DBF               	addwfc	___flmul@temp+1,f
 20411     0FB1                     i1l4658:
 20412     0FB1  083F               	movf	___flmul@temp+1,w
 20413     0FB2  3A80               	xorlw	128
 20414     0FB3  00AE               	movwf	??___flmul
 20415     0FB4  3080               	movlw	128
 20416     0FB5  022E               	subwf	??___flmul,w
 20417     0FB6  1D03               	skipz
 20418     0FB7  2FBA               	goto	u400_25
 20419     0FB8  30FF               	movlw	255
 20420     0FB9  023E               	subwf	___flmul@temp,w
 20421     0FBA                     u400_25:
 20422     0FBA  1C03               	skipc
 20423     0FBB  2FBD               	goto	u400_21
 20424     0FBC  2FBE               	goto	u400_20
 20425     0FBD                     u400_21:
 20426     0FBD  2FC8               	goto	i1l4662
 20427     0FBE                     u400_20:
 20428     0FBE                     i1l4660:
 20429     0FBE  307F               	movlw	127
 20430     0FBF  0020               	movlb	0	; select bank0
 20431     0FC0  00BD               	movwf	___flmul@prod+3
 20432     0FC1  3080               	movlw	128
 20433     0FC2  00BC               	movwf	___flmul@prod+2
 20434     0FC3  3000               	movlw	0
 20435     0FC4  00BB               	movwf	___flmul@prod+1
 20436     0FC5  3000               	movlw	0
 20437     0FC6  00BA               	movwf	___flmul@prod
 20438     0FC7  2FF3               	goto	i1l1636
 20439     0FC8                     i1l4662:
 20440     0FC8  0020               	movlb	0	; select bank0
 20441     0FC9  083F               	movf	___flmul@temp+1,w
 20442     0FCA  3A80               	xorlw	128
 20443     0FCB  00AE               	movwf	??___flmul
 20444     0FCC  3080               	movlw	128
 20445     0FCD  022E               	subwf	??___flmul,w
 20446     0FCE  1D03               	skipz
 20447     0FCF  2FD2               	goto	u401_25
 20448     0FD0  3001               	movlw	1
 20449     0FD1  023E               	subwf	___flmul@temp,w
 20450     0FD2                     u401_25:
 20451     0FD2  1803               	skipnc
 20452     0FD3  2FD5               	goto	u401_21
 20453     0FD4  2FD6               	goto	u401_20
 20454     0FD5                     u401_21:
 20455     0FD5  2FE1               	goto	i1l4668
 20456     0FD6                     u401_20:
 20457     0FD6                     i1l4664:
 20458     0FD6  3000               	movlw	0
 20459     0FD7  0020               	movlb	0	; select bank0
 20460     0FD8  00BD               	movwf	___flmul@prod+3
 20461     0FD9  3000               	movlw	0
 20462     0FDA  00BC               	movwf	___flmul@prod+2
 20463     0FDB  3000               	movlw	0
 20464     0FDC  00BB               	movwf	___flmul@prod+1
 20465     0FDD  3000               	movlw	0
 20466     0FDE  00BA               	movwf	___flmul@prod
 20467     0FDF                     i1l4666:
 20468     0FDF  01B3               	clrf	___flmul@sign
 20469     0FE0  2FF3               	goto	i1l1636
 20470     0FE1                     i1l4668:
 20471     0FE1  0020               	movlb	0	; select bank0
 20472     0FE2  083E               	movf	___flmul@temp,w
 20473     0FE3  00B9               	movwf	___flmul@bexp
 20474     0FE4  30FF               	movlw	255
 20475     0FE5  05BA               	andwf	___flmul@prod,f
 20476     0FE6  30FF               	movlw	255
 20477     0FE7  05BB               	andwf	___flmul@prod+1,f
 20478     0FE8  307F               	movlw	127
 20479     0FE9  05BC               	andwf	___flmul@prod+2,f
 20480     0FEA  3000               	movlw	0
 20481     0FEB  05BD               	andwf	___flmul@prod+3,f
 20482     0FEC                     i1l4670:
 20483     0FEC  1C39               	btfss	___flmul@bexp,0
 20484     0FED  2FEF               	goto	u402_21
 20485     0FEE  2FF0               	goto	u402_20
 20486     0FEF                     u402_21:
 20487     0FEF  2FF1               	goto	i1l4674
 20488     0FF0                     u402_20:
 20489     0FF0                     i1l4672:
 20490     0FF0  17BC               	bsf	___flmul@prod+2,7
 20491     0FF1                     i1l4674:
 20492     0FF1  3639               	lsrf	___flmul@bexp,w
 20493     0FF2  00BD               	movwf	___flmul@prod+3
 20494     0FF3                     i1l1636:
 20495     0FF3  0833               	movf	___flmul@sign,w
 20496     0FF4  00AE               	movwf	??___flmul
 20497     0FF5  082E               	movf	??___flmul,w
 20498     0FF6  04BD               	iorwf	___flmul@prod+3,f
 20499     0FF7                     i1l4676:
 20500     0FF7  083D               	movf	___flmul@prod+3,w
 20501     0FF8  00A9               	movwf	?___flmul+3
 20502     0FF9  083C               	movf	___flmul@prod+2,w
 20503     0FFA  00A8               	movwf	?___flmul+2
 20504     0FFB  083B               	movf	___flmul@prod+1,w
 20505     0FFC  00A7               	movwf	?___flmul+1
 20506     0FFD  083A               	movf	___flmul@prod,w
 20507     0FFE  00A6               	movwf	?___flmul
 20508     0FFF                     i1l1624:
 20509     0FFF  0008               	return
 20510     1000                     __end_of___flmul:
 20511                           
 20512                           	psect	text89
 20513     102A                     __ptext89:	
 20514 ;; *************** function __Umul8_16 *****************
 20515 ;; Defined at:
 20516 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
 20517 ;; Parameters:    Size  Location     Type
 20518 ;;  multiplier      1    wreg     unsigned char 
 20519 ;;  multiplicand    1    0[COMMON] unsigned char 
 20520 ;; Auto vars:     Size  Location     Type
 20521 ;;  multiplier      1    8[COMMON] unsigned char 
 20522 ;;  word_mpld       2    6[COMMON] unsigned short 
 20523 ;;  product         2    4[COMMON] unsigned short 
 20524 ;; Return value:  Size  Location     Type
 20525 ;;                  2    0[COMMON] unsigned int 
 20526 ;; Registers used:
 20527 ;;		wreg, status,2, status,0
 20528 ;; Tracked objects:
 20529 ;;		On entry : 0/0
 20530 ;;		On exit  : 0/0
 20531 ;;		Unchanged: 0/0
 20532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20534 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20536 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20537 ;;Total ram usage:        9 bytes
 20538 ;; Hardware stack levels used: 1
 20539 ;; This function calls:
 20540 ;;		Nothing
 20541 ;; This function is called by:
 20542 ;;		___flmul
 20543 ;; This function uses a non-reentrant model
 20544 ;;
 20545                           
 20546     102A                     __Umul8_16:	
 20547                           ;psect for function __Umul8_16
 20548                           
 20549                           
 20550                           ;incstack = 0
 20551                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 20552                           ;__Umul8_16@multiplier stored from wreg
 20553     102A  00F8               	movwf	__Umul8_16@multiplier
 20554     102B                     i1l4266:
 20555     102B  01F4               	clrf	__Umul8_16@product
 20556     102C  01F5               	clrf	__Umul8_16@product+1
 20557     102D                     i1l4268:
 20558     102D  0870               	movf	__Umul8_16@multiplicand,w
 20559     102E  00F2               	movwf	??__Umul8_16
 20560     102F  01F3               	clrf	??__Umul8_16+1
 20561     1030  0872               	movf	??__Umul8_16,w
 20562     1031  00F6               	movwf	__Umul8_16@word_mpld
 20563     1032  0873               	movf	??__Umul8_16+1,w
 20564     1033  00F7               	movwf	__Umul8_16@word_mpld+1
 20565     1034                     i1l4270:
 20566     1034  1C78               	btfss	__Umul8_16@multiplier,0
 20567     1035  2837               	goto	u320_21
 20568     1036  2838               	goto	u320_20
 20569     1037                     u320_21:
 20570     1037  283C               	goto	i1l1643
 20571     1038                     u320_20:
 20572     1038                     i1l4272:
 20573     1038  0876               	movf	__Umul8_16@word_mpld,w
 20574     1039  07F4               	addwf	__Umul8_16@product,f
 20575     103A  0877               	movf	__Umul8_16@word_mpld+1,w
 20576     103B  3DF5               	addwfc	__Umul8_16@product+1,f
 20577     103C                     i1l1643:
 20578     103C  3001               	movlw	1
 20579     103D                     u321_25:
 20580     103D  35F6               	lslf	__Umul8_16@word_mpld,f
 20581     103E  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 20582     103F  0B89               	decfsz	9,f
 20583     1040  283D               	goto	u321_25
 20584     1041  1003               	clrc
 20585     1042  0CF8               	rrf	__Umul8_16@multiplier,f
 20586     1043                     i1l4274:
 20587     1043  0878               	movf	__Umul8_16@multiplier,w
 20588     1044  1D03               	btfss	3,2
 20589     1045  2847               	goto	u322_21
 20590     1046  2848               	goto	u322_20
 20591     1047                     u322_21:
 20592     1047  2834               	goto	i1l4270
 20593     1048                     u322_20:
 20594     1048                     i1l4276:
 20595     1048  0875               	movf	__Umul8_16@product+1,w
 20596     1049  00F1               	movwf	?__Umul8_16+1
 20597     104A  0874               	movf	__Umul8_16@product,w
 20598     104B  00F0               	movwf	?__Umul8_16
 20599     104C                     i1l1645:
 20600     104C  0008               	return
 20601     104D                     __end_of__Umul8_16:
 20602                           
 20603                           	psect	text90
 20604     153A                     __ptext90:	
 20605 ;; *************** function ___flge *****************
 20606 ;; Defined at:
 20607 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
 20608 ;; Parameters:    Size  Location     Type
 20609 ;;  ff1             4   32[BANK0 ] unsigned int 
 20610 ;;  ff2             4   36[BANK0 ] unsigned int 
 20611 ;; Auto vars:     Size  Location     Type
 20612 ;;		None
 20613 ;; Return value:  Size  Location     Type
 20614 ;;		None               void
 20615 ;; Registers used:
 20616 ;;		wreg, status,2, status,0
 20617 ;; Tracked objects:
 20618 ;;		On entry : 0/0
 20619 ;;		On exit  : 0/0
 20620 ;;		Unchanged: 0/0
 20621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20622 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20624 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20625 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20626 ;;Total ram usage:       12 bytes
 20627 ;; Hardware stack levels used: 1
 20628 ;; This function calls:
 20629 ;;		Nothing
 20630 ;; This function is called by:
 20631 ;;		_TMR0_Custom_ISR
 20632 ;;		_efgtoa
 20633 ;; This function uses a non-reentrant model
 20634 ;;
 20635                           
 20636     153A                     ___flge:	
 20637                           ;psect for function ___flge
 20638                           
 20639     153A                     i1l4330:	
 20640                           ;incstack = 0
 20641                           ; Regs used in ___flge: [wreg+status,2+status,0]
 20642                           
 20643     153A  3000               	movlw	0
 20644     153B  0020               	movlb	0	; select bank0
 20645     153C  0540               	andwf	___flge@ff1,w
 20646     153D  00C8               	movwf	??___flge
 20647     153E  3000               	movlw	0
 20648     153F  0541               	andwf	___flge@ff1+1,w
 20649     1540  00C9               	movwf	??___flge+1
 20650     1541  3080               	movlw	128
 20651     1542  0542               	andwf	___flge@ff1+2,w
 20652     1543  00CA               	movwf	??___flge+2
 20653     1544  307F               	movlw	127
 20654     1545  0543               	andwf	___flge@ff1+3,w
 20655     1546  00CB               	movwf	??___flge+3
 20656     1547  084B               	movf	??___flge+3,w
 20657     1548  044A               	iorwf	??___flge+2,w
 20658     1549  0449               	iorwf	??___flge+1,w
 20659     154A  0448               	iorwf	??___flge,w
 20660     154B  1D03               	skipz
 20661     154C  2D4E               	goto	u332_21
 20662     154D  2D4F               	goto	u332_20
 20663     154E                     u332_21:
 20664     154E  2D57               	goto	i1l1405
 20665     154F                     u332_20:
 20666     154F                     i1l4332:
 20667     154F  3000               	movlw	0
 20668     1550  00C3               	movwf	___flge@ff1+3
 20669     1551  3000               	movlw	0
 20670     1552  00C2               	movwf	___flge@ff1+2
 20671     1553  3000               	movlw	0
 20672     1554  00C1               	movwf	___flge@ff1+1
 20673     1555  3000               	movlw	0
 20674     1556  00C0               	movwf	___flge@ff1
 20675     1557                     i1l1405:
 20676     1557  3000               	movlw	0
 20677     1558  0544               	andwf	___flge@ff2,w
 20678     1559  00C8               	movwf	??___flge
 20679     155A  3000               	movlw	0
 20680     155B  0545               	andwf	___flge@ff2+1,w
 20681     155C  00C9               	movwf	??___flge+1
 20682     155D  3080               	movlw	128
 20683     155E  0546               	andwf	___flge@ff2+2,w
 20684     155F  00CA               	movwf	??___flge+2
 20685     1560  307F               	movlw	127
 20686     1561  0547               	andwf	___flge@ff2+3,w
 20687     1562  00CB               	movwf	??___flge+3
 20688     1563  084B               	movf	??___flge+3,w
 20689     1564  044A               	iorwf	??___flge+2,w
 20690     1565  0449               	iorwf	??___flge+1,w
 20691     1566  0448               	iorwf	??___flge,w
 20692     1567  1D03               	skipz
 20693     1568  2D6A               	goto	u333_21
 20694     1569  2D6B               	goto	u333_20
 20695     156A                     u333_21:
 20696     156A  2D73               	goto	i1l4336
 20697     156B                     u333_20:
 20698     156B                     i1l4334:
 20699     156B  3000               	movlw	0
 20700     156C  00C7               	movwf	___flge@ff2+3
 20701     156D  3000               	movlw	0
 20702     156E  00C6               	movwf	___flge@ff2+2
 20703     156F  3000               	movlw	0
 20704     1570  00C5               	movwf	___flge@ff2+1
 20705     1571  3000               	movlw	0
 20706     1572  00C4               	movwf	___flge@ff2
 20707     1573                     i1l4336:
 20708     1573  1FC3               	btfss	___flge@ff1+3,7
 20709     1574  2D76               	goto	u334_21
 20710     1575  2D77               	goto	u334_20
 20711     1576                     u334_21:
 20712     1576  2D8F               	goto	i1l4340
 20713     1577                     u334_20:
 20714     1577                     i1l4338:
 20715     1577  3000               	movlw	0
 20716     1578  00C8               	movwf	??___flge
 20717     1579  3000               	movlw	0
 20718     157A  00C9               	movwf	??___flge+1
 20719     157B  3000               	movlw	0
 20720     157C  00CA               	movwf	??___flge+2
 20721     157D  3080               	movlw	128
 20722     157E  00CB               	movwf	??___flge+3
 20723     157F  0840               	movf	___flge@ff1,w
 20724     1580  02C8               	subwf	??___flge,f
 20725     1581  0841               	movf	___flge@ff1+1,w
 20726     1582  3BC9               	subwfb	??___flge+1,f
 20727     1583  0842               	movf	___flge@ff1+2,w
 20728     1584  3BCA               	subwfb	??___flge+2,f
 20729     1585  0843               	movf	___flge@ff1+3,w
 20730     1586  3BCB               	subwfb	??___flge+3,f
 20731     1587  084B               	movf	??___flge+3,w
 20732     1588  00C3               	movwf	___flge@ff1+3
 20733     1589  084A               	movf	??___flge+2,w
 20734     158A  00C2               	movwf	___flge@ff1+2
 20735     158B  0849               	movf	??___flge+1,w
 20736     158C  00C1               	movwf	___flge@ff1+1
 20737     158D  0848               	movf	??___flge,w
 20738     158E  00C0               	movwf	___flge@ff1
 20739     158F                     i1l4340:
 20740     158F  1FC7               	btfss	___flge@ff2+3,7
 20741     1590  2D92               	goto	u335_21
 20742     1591  2D93               	goto	u335_20
 20743     1592                     u335_21:
 20744     1592  2DAB               	goto	i1l1408
 20745     1593                     u335_20:
 20746     1593                     i1l4342:
 20747     1593  3000               	movlw	0
 20748     1594  00C8               	movwf	??___flge
 20749     1595  3000               	movlw	0
 20750     1596  00C9               	movwf	??___flge+1
 20751     1597  3000               	movlw	0
 20752     1598  00CA               	movwf	??___flge+2
 20753     1599  3080               	movlw	128
 20754     159A  00CB               	movwf	??___flge+3
 20755     159B  0844               	movf	___flge@ff2,w
 20756     159C  02C8               	subwf	??___flge,f
 20757     159D  0845               	movf	___flge@ff2+1,w
 20758     159E  3BC9               	subwfb	??___flge+1,f
 20759     159F  0846               	movf	___flge@ff2+2,w
 20760     15A0  3BCA               	subwfb	??___flge+2,f
 20761     15A1  0847               	movf	___flge@ff2+3,w
 20762     15A2  3BCB               	subwfb	??___flge+3,f
 20763     15A3  084B               	movf	??___flge+3,w
 20764     15A4  00C7               	movwf	___flge@ff2+3
 20765     15A5  084A               	movf	??___flge+2,w
 20766     15A6  00C6               	movwf	___flge@ff2+2
 20767     15A7  0849               	movf	??___flge+1,w
 20768     15A8  00C5               	movwf	___flge@ff2+1
 20769     15A9  0848               	movf	??___flge,w
 20770     15AA  00C4               	movwf	___flge@ff2
 20771     15AB                     i1l1408:
 20772     15AB  3080               	movlw	128
 20773     15AC  06C3               	xorwf	___flge@ff1+3,f
 20774     15AD  3080               	movlw	128
 20775     15AE  06C7               	xorwf	___flge@ff2+3,f
 20776     15AF  0847               	movf	___flge@ff2+3,w
 20777     15B0  0243               	subwf	___flge@ff1+3,w
 20778     15B1  1D03               	skipz
 20779     15B2  2DBD               	goto	u336_25
 20780     15B3  0846               	movf	___flge@ff2+2,w
 20781     15B4  0242               	subwf	___flge@ff1+2,w
 20782     15B5  1D03               	skipz
 20783     15B6  2DBD               	goto	u336_25
 20784     15B7  0845               	movf	___flge@ff2+1,w
 20785     15B8  0241               	subwf	___flge@ff1+1,w
 20786     15B9  1D03               	skipz
 20787     15BA  2DBD               	goto	u336_25
 20788     15BB  0844               	movf	___flge@ff2,w
 20789     15BC  0240               	subwf	___flge@ff1,w
 20790     15BD                     u336_25:
 20791     15BD  1803               	skipnc
 20792     15BE  2DC0               	goto	u336_21
 20793     15BF  2DC1               	goto	u336_20
 20794     15C0                     u336_21:
 20795     15C0  2DC3               	goto	i1l4346
 20796     15C1                     u336_20:
 20797     15C1                     i1l4344:
 20798     15C1  1003               	clrc
 20799     15C2  2DC4               	goto	i1l1413
 20800     15C3                     i1l4346:
 20801     15C3  1403               	setc
 20802     15C4                     i1l1413:
 20803     15C4  0008               	return
 20804     15C5                     __end_of___flge:
 20805                           
 20806                           	psect	text91
 20807     124D                     __ptext91:	
 20808 ;; *************** function ___fleq *****************
 20809 ;; Defined at:
 20810 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
 20811 ;; Parameters:    Size  Location     Type
 20812 ;;  ff1             4    0[COMMON] unsigned int 
 20813 ;;  ff2             4    4[COMMON] unsigned int 
 20814 ;; Auto vars:     Size  Location     Type
 20815 ;;		None
 20816 ;; Return value:  Size  Location     Type
 20817 ;;		None               void
 20818 ;; Registers used:
 20819 ;;		wreg, status,2, status,0
 20820 ;; Tracked objects:
 20821 ;;		On entry : 0/0
 20822 ;;		On exit  : 0/0
 20823 ;;		Unchanged: 0/0
 20824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20825 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20827 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20828 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20829 ;;Total ram usage:       12 bytes
 20830 ;; Hardware stack levels used: 1
 20831 ;; This function calls:
 20832 ;;		Nothing
 20833 ;; This function is called by:
 20834 ;;		_efgtoa
 20835 ;; This function uses a non-reentrant model
 20836 ;;
 20837                           
 20838     124D                     ___fleq:	
 20839                           ;psect for function ___fleq
 20840                           
 20841     124D                     i1l4318:	
 20842                           ;incstack = 0
 20843                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 20844                           
 20845     124D  3000               	movlw	0
 20846     124E  0570               	andwf	___fleq@ff1,w
 20847     124F  00F8               	movwf	??___fleq
 20848     1250  3000               	movlw	0
 20849     1251  0571               	andwf	___fleq@ff1+1,w
 20850     1252  00F9               	movwf	??___fleq+1
 20851     1253  3080               	movlw	128
 20852     1254  0572               	andwf	___fleq@ff1+2,w
 20853     1255  00FA               	movwf	??___fleq+2
 20854     1256  307F               	movlw	127
 20855     1257  0573               	andwf	___fleq@ff1+3,w
 20856     1258  00FB               	movwf	??___fleq+3
 20857     1259  087B               	movf	??___fleq+3,w
 20858     125A  047A               	iorwf	??___fleq+2,w
 20859     125B  0479               	iorwf	??___fleq+1,w
 20860     125C  0478               	iorwf	??___fleq,w
 20861     125D  1D03               	skipz
 20862     125E  2A60               	goto	u329_21
 20863     125F  2A61               	goto	u329_20
 20864     1260                     u329_21:
 20865     1260  2A69               	goto	i1l1396
 20866     1261                     u329_20:
 20867     1261                     i1l4320:
 20868     1261  3000               	movlw	0
 20869     1262  00F3               	movwf	___fleq@ff1+3
 20870     1263  3000               	movlw	0
 20871     1264  00F2               	movwf	___fleq@ff1+2
 20872     1265  3000               	movlw	0
 20873     1266  00F1               	movwf	___fleq@ff1+1
 20874     1267  3000               	movlw	0
 20875     1268  00F0               	movwf	___fleq@ff1
 20876     1269                     i1l1396:
 20877     1269  3000               	movlw	0
 20878     126A  0574               	andwf	___fleq@ff2,w
 20879     126B  00F8               	movwf	??___fleq
 20880     126C  3000               	movlw	0
 20881     126D  0575               	andwf	___fleq@ff2+1,w
 20882     126E  00F9               	movwf	??___fleq+1
 20883     126F  3080               	movlw	128
 20884     1270  0576               	andwf	___fleq@ff2+2,w
 20885     1271  00FA               	movwf	??___fleq+2
 20886     1272  307F               	movlw	127
 20887     1273  0577               	andwf	___fleq@ff2+3,w
 20888     1274  00FB               	movwf	??___fleq+3
 20889     1275  087B               	movf	??___fleq+3,w
 20890     1276  047A               	iorwf	??___fleq+2,w
 20891     1277  0479               	iorwf	??___fleq+1,w
 20892     1278  0478               	iorwf	??___fleq,w
 20893     1279  1D03               	skipz
 20894     127A  2A7C               	goto	u330_21
 20895     127B  2A7D               	goto	u330_20
 20896     127C                     u330_21:
 20897     127C  2A85               	goto	i1l1397
 20898     127D                     u330_20:
 20899     127D                     i1l4322:
 20900     127D  3000               	movlw	0
 20901     127E  00F7               	movwf	___fleq@ff2+3
 20902     127F  3000               	movlw	0
 20903     1280  00F6               	movwf	___fleq@ff2+2
 20904     1281  3000               	movlw	0
 20905     1282  00F5               	movwf	___fleq@ff2+1
 20906     1283  3000               	movlw	0
 20907     1284  00F4               	movwf	___fleq@ff2
 20908     1285                     i1l1397:
 20909     1285  0877               	movf	___fleq@ff2+3,w
 20910     1286  0673               	xorwf	___fleq@ff1+3,w
 20911     1287  1D03               	skipz
 20912     1288  2A93               	goto	u331_25
 20913     1289  0876               	movf	___fleq@ff2+2,w
 20914     128A  0672               	xorwf	___fleq@ff1+2,w
 20915     128B  1D03               	skipz
 20916     128C  2A93               	goto	u331_25
 20917     128D  0875               	movf	___fleq@ff2+1,w
 20918     128E  0671               	xorwf	___fleq@ff1+1,w
 20919     128F  1D03               	skipz
 20920     1290  2A93               	goto	u331_25
 20921     1291  0874               	movf	___fleq@ff2,w
 20922     1292  0670               	xorwf	___fleq@ff1,w
 20923     1293                     u331_25:
 20924     1293  1903               	skipnz
 20925     1294  2A96               	goto	u331_21
 20926     1295  2A97               	goto	u331_20
 20927     1296                     u331_21:
 20928     1296  2A99               	goto	i1l4326
 20929     1297                     u331_20:
 20930     1297                     i1l4324:
 20931     1297  1003               	clrc
 20932     1298  2A9A               	goto	i1l1402
 20933     1299                     i1l4326:
 20934     1299  1403               	setc
 20935     129A                     i1l1402:
 20936     129A  0008               	return
 20937     129B                     __end_of___fleq:
 20938                           
 20939                           	psect	text92
 20940     0857                     __ptext92:	
 20941 ;; *************** function ___fldiv *****************
 20942 ;; Defined at:
 20943 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
 20944 ;; Parameters:    Size  Location     Type
 20945 ;;  a               4   32[BANK0 ] unsigned int 
 20946 ;;  b               4   36[BANK0 ] unsigned int 
 20947 ;; Auto vars:     Size  Location     Type
 20948 ;;  grs             4   52[BANK0 ] unsigned long 
 20949 ;;  rem             4   45[BANK0 ] unsigned long 
 20950 ;;  new_exp         2   50[BANK0 ] short 
 20951 ;;  aexp            1   57[BANK0 ] unsigned char 
 20952 ;;  bexp            1   56[BANK0 ] unsigned char 
 20953 ;;  sign            1   49[BANK0 ] unsigned char 
 20954 ;; Return value:  Size  Location     Type
 20955 ;;                  4   32[BANK0 ] unsigned char 
 20956 ;; Registers used:
 20957 ;;		wreg, status,2, status,0
 20958 ;; Tracked objects:
 20959 ;;		On entry : 0/0
 20960 ;;		On exit  : 0/0
 20961 ;;		Unchanged: 0/0
 20962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20963 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20964 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20965 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20966 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20967 ;;Total ram usage:       26 bytes
 20968 ;; Hardware stack levels used: 1
 20969 ;; This function calls:
 20970 ;;		Nothing
 20971 ;; This function is called by:
 20972 ;;		_TMR0_Custom_ISR
 20973 ;;		_efgtoa
 20974 ;; This function uses a non-reentrant model
 20975 ;;
 20976                           
 20977     0857                     ___fldiv:	
 20978                           ;psect for function ___fldiv
 20979                           
 20980     0857                     i1l4400:	
 20981                           ;incstack = 0
 20982                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 20983                           
 20984     0857  0020               	movlb	0	; select bank0
 20985     0858  0847               	movf	___fldiv@b+3,w
 20986     0859  3980               	andlw	128
 20987     085A  00D1               	movwf	___fldiv@sign
 20988     085B                     i1l4402:
 20989     085B  3547               	lslf	___fldiv@b+3,w
 20990     085C  00D8               	movwf	___fldiv@bexp
 20991     085D                     i1l4404:
 20992     085D  1FC6               	btfss	___fldiv@b+2,7
 20993     085E  2860               	goto	u348_21
 20994     085F  2861               	goto	u348_20
 20995     0860                     u348_21:
 20996     0860  2862               	goto	i1l4408
 20997     0861                     u348_20:
 20998     0861                     i1l4406:
 20999     0861  1458               	bsf	___fldiv@bexp,0
 21000     0862                     i1l4408:
 21001     0862  0858               	movf	___fldiv@bexp,w
 21002     0863  1903               	btfsc	3,2
 21003     0864  2866               	goto	u349_21
 21004     0865  2867               	goto	u349_20
 21005     0866                     u349_21:
 21006     0866  2877               	goto	i1l4418
 21007     0867                     u349_20:
 21008     0867                     i1l4410:
 21009     0867  0A58               	incf	___fldiv@bexp,w
 21010     0868  1D03               	btfss	3,2
 21011     0869  286B               	goto	u350_21
 21012     086A  286C               	goto	u350_20
 21013     086B                     u350_21:
 21014     086B  2874               	goto	i1l4414
 21015     086C                     u350_20:
 21016     086C                     i1l4412:
 21017     086C  3000               	movlw	0
 21018     086D  00C7               	movwf	___fldiv@b+3
 21019     086E  3000               	movlw	0
 21020     086F  00C6               	movwf	___fldiv@b+2
 21021     0870  3000               	movlw	0
 21022     0871  00C5               	movwf	___fldiv@b+1
 21023     0872  3000               	movlw	0
 21024     0873  00C4               	movwf	___fldiv@b
 21025     0874                     i1l4414:
 21026     0874  17C6               	bsf	___fldiv@b+2,7
 21027     0875                     i1l4416:
 21028     0875  01C7               	clrf	___fldiv@b+3
 21029     0876  287F               	goto	i1l4420
 21030     0877                     i1l4418:
 21031     0877  3000               	movlw	0
 21032     0878  00C7               	movwf	___fldiv@b+3
 21033     0879  3000               	movlw	0
 21034     087A  00C6               	movwf	___fldiv@b+2
 21035     087B  3000               	movlw	0
 21036     087C  00C5               	movwf	___fldiv@b+1
 21037     087D  3000               	movlw	0
 21038     087E  00C4               	movwf	___fldiv@b
 21039     087F                     i1l4420:
 21040     087F  0843               	movf	___fldiv@a+3,w
 21041     0880  3980               	andlw	128
 21042     0881  00C8               	movwf	??___fldiv
 21043     0882  0848               	movf	??___fldiv,w
 21044     0883  06D1               	xorwf	___fldiv@sign,f
 21045     0884                     i1l4422:
 21046     0884  3543               	lslf	___fldiv@a+3,w
 21047     0885  00D9               	movwf	___fldiv@aexp
 21048     0886                     i1l4424:
 21049     0886  1FC2               	btfss	___fldiv@a+2,7
 21050     0887  2889               	goto	u351_21
 21051     0888  288A               	goto	u351_20
 21052     0889                     u351_21:
 21053     0889  288B               	goto	i1l4428
 21054     088A                     u351_20:
 21055     088A                     i1l4426:
 21056     088A  1459               	bsf	___fldiv@aexp,0
 21057     088B                     i1l4428:
 21058     088B  0859               	movf	___fldiv@aexp,w
 21059     088C  1903               	btfsc	3,2
 21060     088D  288F               	goto	u352_21
 21061     088E  2890               	goto	u352_20
 21062     088F                     u352_21:
 21063     088F  28A0               	goto	i1l4438
 21064     0890                     u352_20:
 21065     0890                     i1l4430:
 21066     0890  0A59               	incf	___fldiv@aexp,w
 21067     0891  1D03               	btfss	3,2
 21068     0892  2894               	goto	u353_21
 21069     0893  2895               	goto	u353_20
 21070     0894                     u353_21:
 21071     0894  289D               	goto	i1l4434
 21072     0895                     u353_20:
 21073     0895                     i1l4432:
 21074     0895  3000               	movlw	0
 21075     0896  00C3               	movwf	___fldiv@a+3
 21076     0897  3000               	movlw	0
 21077     0898  00C2               	movwf	___fldiv@a+2
 21078     0899  3000               	movlw	0
 21079     089A  00C1               	movwf	___fldiv@a+1
 21080     089B  3000               	movlw	0
 21081     089C  00C0               	movwf	___fldiv@a
 21082     089D                     i1l4434:
 21083     089D  17C2               	bsf	___fldiv@a+2,7
 21084     089E                     i1l4436:
 21085     089E  01C3               	clrf	___fldiv@a+3
 21086     089F  28A8               	goto	i1l1584
 21087     08A0                     i1l4438:
 21088     08A0  3000               	movlw	0
 21089     08A1  00C3               	movwf	___fldiv@a+3
 21090     08A2  3000               	movlw	0
 21091     08A3  00C2               	movwf	___fldiv@a+2
 21092     08A4  3000               	movlw	0
 21093     08A5  00C1               	movwf	___fldiv@a+1
 21094     08A6  3000               	movlw	0
 21095     08A7  00C0               	movwf	___fldiv@a
 21096     08A8                     i1l1584:
 21097     08A8  0843               	movf	___fldiv@a+3,w
 21098     08A9  0442               	iorwf	___fldiv@a+2,w
 21099     08AA  0441               	iorwf	___fldiv@a+1,w
 21100     08AB  0440               	iorwf	___fldiv@a,w
 21101     08AC  1D03               	skipz
 21102     08AD  28AF               	goto	u354_21
 21103     08AE  28B0               	goto	u354_20
 21104     08AF                     u354_21:
 21105     08AF  28C9               	goto	i1l4448
 21106     08B0                     u354_20:
 21107     08B0                     i1l4440:
 21108     08B0  3000               	movlw	0
 21109     08B1  00C7               	movwf	___fldiv@b+3
 21110     08B2  3000               	movlw	0
 21111     08B3  00C6               	movwf	___fldiv@b+2
 21112     08B4  3000               	movlw	0
 21113     08B5  00C5               	movwf	___fldiv@b+1
 21114     08B6  3000               	movlw	0
 21115     08B7  00C4               	movwf	___fldiv@b
 21116     08B8  3080               	movlw	128
 21117     08B9  04C6               	iorwf	___fldiv@b+2,f
 21118     08BA  307F               	movlw	127
 21119     08BB  04C7               	iorwf	___fldiv@b+3,f
 21120     08BC                     i1l4442:
 21121     08BC  0851               	movf	___fldiv@sign,w
 21122     08BD  00C8               	movwf	??___fldiv
 21123     08BE  0848               	movf	??___fldiv,w
 21124     08BF  04C7               	iorwf	___fldiv@b+3,f
 21125     08C0                     i1l4444:
 21126     08C0  0847               	movf	___fldiv@b+3,w
 21127     08C1  00C3               	movwf	?___fldiv+3
 21128     08C2  0846               	movf	___fldiv@b+2,w
 21129     08C3  00C2               	movwf	?___fldiv+2
 21130     08C4  0845               	movf	___fldiv@b+1,w
 21131     08C5  00C1               	movwf	?___fldiv+1
 21132     08C6  0844               	movf	___fldiv@b,w
 21133     08C7  00C0               	movwf	?___fldiv
 21134     08C8  2A00               	goto	i1l1586
 21135     08C9                     i1l4448:
 21136     08C9  0858               	movf	___fldiv@bexp,w
 21137     08CA  1D03               	btfss	3,2
 21138     08CB  28CD               	goto	u355_21
 21139     08CC  28CE               	goto	u355_20
 21140     08CD                     u355_21:
 21141     08CD  28D7               	goto	i1l4454
 21142     08CE                     u355_20:
 21143     08CE                     i1l4450:
 21144     08CE  3000               	movlw	0
 21145     08CF  00C3               	movwf	?___fldiv+3
 21146     08D0  3000               	movlw	0
 21147     08D1  00C2               	movwf	?___fldiv+2
 21148     08D2  3000               	movlw	0
 21149     08D3  00C1               	movwf	?___fldiv+1
 21150     08D4  3000               	movlw	0
 21151     08D5  00C0               	movwf	?___fldiv
 21152     08D6  2A00               	goto	i1l1586
 21153     08D7                     i1l4454:
 21154     08D7  0858               	movf	___fldiv@bexp,w
 21155     08D8  00C8               	movwf	??___fldiv
 21156     08D9  01C9               	clrf	??___fldiv+1
 21157     08DA  0849               	movf	??___fldiv+1,w
 21158     08DB  00CB               	movwf	??___fldiv+3
 21159     08DC  0859               	movf	___fldiv@aexp,w
 21160     08DD  0248               	subwf	??___fldiv,w
 21161     08DE  00CA               	movwf	??___fldiv+2
 21162     08DF  1C03               	skipc
 21163     08E0  03CB               	decf	??___fldiv+3,f
 21164     08E1  084A               	movf	??___fldiv+2,w
 21165     08E2  3E7F               	addlw	127
 21166     08E3  00D2               	movwf	___fldiv@new_exp
 21167     08E4  3000               	movlw	0
 21168     08E5  3D4B               	addwfc	??___fldiv+3,w
 21169     08E6  00D3               	movwf	___fldiv@new_exp+1
 21170     08E7                     i1l4456:
 21171     08E7  0847               	movf	___fldiv@b+3,w
 21172     08E8  00D0               	movwf	___fldiv@rem+3
 21173     08E9  0846               	movf	___fldiv@b+2,w
 21174     08EA  00CF               	movwf	___fldiv@rem+2
 21175     08EB  0845               	movf	___fldiv@b+1,w
 21176     08EC  00CE               	movwf	___fldiv@rem+1
 21177     08ED  0844               	movf	___fldiv@b,w
 21178     08EE  00CD               	movwf	___fldiv@rem
 21179     08EF                     i1l4458:
 21180     08EF  3000               	movlw	0
 21181     08F0  00C7               	movwf	___fldiv@b+3
 21182     08F1  3000               	movlw	0
 21183     08F2  00C6               	movwf	___fldiv@b+2
 21184     08F3  3000               	movlw	0
 21185     08F4  00C5               	movwf	___fldiv@b+1
 21186     08F5  3000               	movlw	0
 21187     08F6  00C4               	movwf	___fldiv@b
 21188     08F7                     i1l4460:
 21189     08F7  3000               	movlw	0
 21190     08F8  00D7               	movwf	___fldiv@grs+3
 21191     08F9  3000               	movlw	0
 21192     08FA  00D6               	movwf	___fldiv@grs+2
 21193     08FB  3000               	movlw	0
 21194     08FC  00D5               	movwf	___fldiv@grs+1
 21195     08FD  3000               	movlw	0
 21196     08FE  00D4               	movwf	___fldiv@grs
 21197     08FF                     i1l4462:
 21198     08FF  01D9               	clrf	___fldiv@aexp
 21199     0900  293F               	goto	i1l4482
 21200     0901                     i1l4464:
 21201     0901  0859               	movf	___fldiv@aexp,w
 21202     0902  1903               	btfsc	3,2
 21203     0903  2905               	goto	u356_21
 21204     0904  2906               	goto	u356_20
 21205     0905                     u356_21:
 21206     0905  2920               	goto	i1l4474
 21207     0906                     u356_20:
 21208     0906                     i1l4466:
 21209     0906  3001               	movlw	1
 21210     0907                     u357_25:
 21211     0907  35CD               	lslf	___fldiv@rem,f
 21212     0908  0DCE               	rlf	___fldiv@rem+1,f
 21213     0909  0DCF               	rlf	___fldiv@rem+2,f
 21214     090A  0DD0               	rlf	___fldiv@rem+3,f
 21215     090B  0B89               	decfsz	9,f
 21216     090C  2907               	goto	u357_25
 21217     090D  3001               	movlw	1
 21218     090E                     u358_25:
 21219     090E  35C4               	lslf	___fldiv@b,f
 21220     090F  0DC5               	rlf	___fldiv@b+1,f
 21221     0910  0DC6               	rlf	___fldiv@b+2,f
 21222     0911  0DC7               	rlf	___fldiv@b+3,f
 21223     0912  0B89               	decfsz	9,f
 21224     0913  290E               	goto	u358_25
 21225     0914                     i1l4468:
 21226     0914  1FD7               	btfss	___fldiv@grs+3,7
 21227     0915  2917               	goto	u359_21
 21228     0916  2918               	goto	u359_20
 21229     0917                     u359_21:
 21230     0917  2919               	goto	i1l4472
 21231     0918                     u359_20:
 21232     0918                     i1l4470:
 21233     0918  1444               	bsf	___fldiv@b,0
 21234     0919                     i1l4472:
 21235     0919  3001               	movlw	1
 21236     091A                     u360_25:
 21237     091A  35D4               	lslf	___fldiv@grs,f
 21238     091B  0DD5               	rlf	___fldiv@grs+1,f
 21239     091C  0DD6               	rlf	___fldiv@grs+2,f
 21240     091D  0DD7               	rlf	___fldiv@grs+3,f
 21241     091E  0B89               	decfsz	9,f
 21242     091F  291A               	goto	u360_25
 21243     0920                     i1l4474:
 21244     0920  0843               	movf	___fldiv@a+3,w
 21245     0921  0250               	subwf	___fldiv@rem+3,w
 21246     0922  1D03               	skipz
 21247     0923  292E               	goto	u361_25
 21248     0924  0842               	movf	___fldiv@a+2,w
 21249     0925  024F               	subwf	___fldiv@rem+2,w
 21250     0926  1D03               	skipz
 21251     0927  292E               	goto	u361_25
 21252     0928  0841               	movf	___fldiv@a+1,w
 21253     0929  024E               	subwf	___fldiv@rem+1,w
 21254     092A  1D03               	skipz
 21255     092B  292E               	goto	u361_25
 21256     092C  0840               	movf	___fldiv@a,w
 21257     092D  024D               	subwf	___fldiv@rem,w
 21258     092E                     u361_25:
 21259     092E  1C03               	skipc
 21260     092F  2931               	goto	u361_21
 21261     0930  2932               	goto	u361_20
 21262     0931                     u361_21:
 21263     0931  293B               	goto	i1l4480
 21264     0932                     u361_20:
 21265     0932                     i1l4476:
 21266     0932  1757               	bsf	___fldiv@grs+3,6
 21267     0933                     i1l4478:
 21268     0933  0840               	movf	___fldiv@a,w
 21269     0934  02CD               	subwf	___fldiv@rem,f
 21270     0935  0841               	movf	___fldiv@a+1,w
 21271     0936  3BCE               	subwfb	___fldiv@rem+1,f
 21272     0937  0842               	movf	___fldiv@a+2,w
 21273     0938  3BCF               	subwfb	___fldiv@rem+2,f
 21274     0939  0843               	movf	___fldiv@a+3,w
 21275     093A  3BD0               	subwfb	___fldiv@rem+3,f
 21276     093B                     i1l4480:
 21277     093B  3001               	movlw	1
 21278     093C  00C8               	movwf	??___fldiv
 21279     093D  0848               	movf	??___fldiv,w
 21280     093E  07D9               	addwf	___fldiv@aexp,f
 21281     093F                     i1l4482:
 21282     093F  301A               	movlw	26
 21283     0940  0259               	subwf	___fldiv@aexp,w
 21284     0941  1C03               	skipc
 21285     0942  2944               	goto	u362_21
 21286     0943  2945               	goto	u362_20
 21287     0944                     u362_21:
 21288     0944  2901               	goto	i1l4464
 21289     0945                     u362_20:
 21290     0945                     i1l4484:
 21291     0945  0850               	movf	___fldiv@rem+3,w
 21292     0946  044F               	iorwf	___fldiv@rem+2,w
 21293     0947  044E               	iorwf	___fldiv@rem+1,w
 21294     0948  044D               	iorwf	___fldiv@rem,w
 21295     0949  1903               	skipnz
 21296     094A  294C               	goto	u363_21
 21297     094B  294D               	goto	u363_20
 21298     094C                     u363_21:
 21299     094C  2966               	goto	i1l4498
 21300     094D                     u363_20:
 21301     094D                     i1l4486:
 21302     094D  1454               	bsf	___fldiv@grs,0
 21303     094E  2966               	goto	i1l4498
 21304     094F                     i1l4488:
 21305     094F  3001               	movlw	1
 21306     0950                     u364_25:
 21307     0950  35C4               	lslf	___fldiv@b,f
 21308     0951  0DC5               	rlf	___fldiv@b+1,f
 21309     0952  0DC6               	rlf	___fldiv@b+2,f
 21310     0953  0DC7               	rlf	___fldiv@b+3,f
 21311     0954  0B89               	decfsz	9,f
 21312     0955  2950               	goto	u364_25
 21313     0956                     i1l4490:
 21314     0956  1FD7               	btfss	___fldiv@grs+3,7
 21315     0957  2959               	goto	u365_21
 21316     0958  295A               	goto	u365_20
 21317     0959                     u365_21:
 21318     0959  295B               	goto	i1l4494
 21319     095A                     u365_20:
 21320     095A                     i1l4492:
 21321     095A  1444               	bsf	___fldiv@b,0
 21322     095B                     i1l4494:
 21323     095B  3001               	movlw	1
 21324     095C                     u366_25:
 21325     095C  35D4               	lslf	___fldiv@grs,f
 21326     095D  0DD5               	rlf	___fldiv@grs+1,f
 21327     095E  0DD6               	rlf	___fldiv@grs+2,f
 21328     095F  0DD7               	rlf	___fldiv@grs+3,f
 21329     0960  0B89               	decfsz	9,f
 21330     0961  295C               	goto	u366_25
 21331     0962                     i1l4496:
 21332     0962  30FF               	movlw	255
 21333     0963  07D2               	addwf	___fldiv@new_exp,f
 21334     0964  30FF               	movlw	255
 21335     0965  3DD3               	addwfc	___fldiv@new_exp+1,f
 21336     0966                     i1l4498:
 21337     0966  1FC6               	btfss	___fldiv@b+2,7
 21338     0967  2969               	goto	u367_21
 21339     0968  296A               	goto	u367_20
 21340     0969                     u367_21:
 21341     0969  294F               	goto	i1l4488
 21342     096A                     u367_20:
 21343     096A                     i1l4500:
 21344     096A  01D9               	clrf	___fldiv@aexp
 21345     096B                     i1l4502:
 21346     096B  1FD7               	btfss	___fldiv@grs+3,7
 21347     096C  296E               	goto	u368_21
 21348     096D  296F               	goto	u368_20
 21349     096E                     u368_21:
 21350     096E  298B               	goto	i1l4510
 21351     096F                     u368_20:
 21352     096F                     i1l4504:
 21353     096F  30FF               	movlw	255
 21354     0970  0554               	andwf	___fldiv@grs,w
 21355     0971  00C8               	movwf	??___fldiv
 21356     0972  30FF               	movlw	255
 21357     0973  0555               	andwf	___fldiv@grs+1,w
 21358     0974  00C9               	movwf	??___fldiv+1
 21359     0975  30FF               	movlw	255
 21360     0976  0556               	andwf	___fldiv@grs+2,w
 21361     0977  00CA               	movwf	??___fldiv+2
 21362     0978  307F               	movlw	127
 21363     0979  0557               	andwf	___fldiv@grs+3,w
 21364     097A  00CB               	movwf	??___fldiv+3
 21365     097B  084B               	movf	??___fldiv+3,w
 21366     097C  044A               	iorwf	??___fldiv+2,w
 21367     097D  0449               	iorwf	??___fldiv+1,w
 21368     097E  0448               	iorwf	??___fldiv,w
 21369     097F  1903               	skipnz
 21370     0980  2982               	goto	u369_21
 21371     0981  2983               	goto	u369_20
 21372     0982                     u369_21:
 21373     0982  2986               	goto	i1l1600
 21374     0983                     u369_20:
 21375     0983                     i1l4506:
 21376     0983  01D9               	clrf	___fldiv@aexp
 21377     0984  0AD9               	incf	___fldiv@aexp,f
 21378     0985  298B               	goto	i1l4510
 21379     0986                     i1l1600:
 21380     0986  1C44               	btfss	___fldiv@b,0
 21381     0987  2989               	goto	u370_21
 21382     0988  298A               	goto	u370_20
 21383     0989                     u370_21:
 21384     0989  298B               	goto	i1l4510
 21385     098A                     u370_20:
 21386     098A  2983               	goto	i1l4506
 21387     098B                     i1l4510:
 21388     098B  0859               	movf	___fldiv@aexp,w
 21389     098C  1903               	btfsc	3,2
 21390     098D  298F               	goto	u371_21
 21391     098E  2990               	goto	u371_20
 21392     098F                     u371_21:
 21393     098F  29B8               	goto	i1l4520
 21394     0990                     u371_20:
 21395     0990                     i1l4512:
 21396     0990  3001               	movlw	1
 21397     0991  07C4               	addwf	___fldiv@b,f
 21398     0992  3000               	movlw	0
 21399     0993  3DC5               	addwfc	___fldiv@b+1,f
 21400     0994  3000               	movlw	0
 21401     0995  3DC6               	addwfc	___fldiv@b+2,f
 21402     0996  3000               	movlw	0
 21403     0997  3DC7               	addwfc	___fldiv@b+3,f
 21404     0998                     i1l4514:
 21405     0998  1C47               	btfss	___fldiv@b+3,0
 21406     0999  299B               	goto	u372_21
 21407     099A  299C               	goto	u372_20
 21408     099B                     u372_21:
 21409     099B  29B8               	goto	i1l4520
 21410     099C                     u372_20:
 21411     099C                     i1l4516:
 21412     099C  0844               	movf	___fldiv@b,w
 21413     099D  00C8               	movwf	??___fldiv
 21414     099E  0845               	movf	___fldiv@b+1,w
 21415     099F  00C9               	movwf	??___fldiv+1
 21416     09A0  0846               	movf	___fldiv@b+2,w
 21417     09A1  00CA               	movwf	??___fldiv+2
 21418     09A2  0847               	movf	___fldiv@b+3,w
 21419     09A3  00CB               	movwf	??___fldiv+3
 21420     09A4  3001               	movlw	1
 21421     09A5  00CC               	movwf	??___fldiv+4
 21422     09A6                     u373_25:
 21423     09A6  37CB               	asrf	??___fldiv+3,f
 21424     09A7  0CCA               	rrf	??___fldiv+2,f
 21425     09A8  0CC9               	rrf	??___fldiv+1,f
 21426     09A9  0CC8               	rrf	??___fldiv,f
 21427     09AA                     u373_20:
 21428     09AA  0BCC               	decfsz	??___fldiv+4,f
 21429     09AB  29A6               	goto	u373_25
 21430     09AC  084B               	movf	??___fldiv+3,w
 21431     09AD  00C7               	movwf	___fldiv@b+3
 21432     09AE  084A               	movf	??___fldiv+2,w
 21433     09AF  00C6               	movwf	___fldiv@b+2
 21434     09B0  0849               	movf	??___fldiv+1,w
 21435     09B1  00C5               	movwf	___fldiv@b+1
 21436     09B2  0848               	movf	??___fldiv,w
 21437     09B3  00C4               	movwf	___fldiv@b
 21438     09B4                     i1l4518:
 21439     09B4  3001               	movlw	1
 21440     09B5  07D2               	addwf	___fldiv@new_exp,f
 21441     09B6  3000               	movlw	0
 21442     09B7  3DD3               	addwfc	___fldiv@new_exp+1,f
 21443     09B8                     i1l4520:
 21444     09B8  0853               	movf	___fldiv@new_exp+1,w
 21445     09B9  3A80               	xorlw	128
 21446     09BA  00C8               	movwf	??___fldiv
 21447     09BB  3080               	movlw	128
 21448     09BC  0248               	subwf	??___fldiv,w
 21449     09BD  1D03               	skipz
 21450     09BE  29C1               	goto	u374_25
 21451     09BF  30FF               	movlw	255
 21452     09C0  0252               	subwf	___fldiv@new_exp,w
 21453     09C1                     u374_25:
 21454     09C1  1C03               	skipc
 21455     09C2  29C4               	goto	u374_21
 21456     09C3  29C5               	goto	u374_20
 21457     09C4                     u374_21:
 21458     09C4  29D2               	goto	i1l1605
 21459     09C5                     u374_20:
 21460     09C5                     i1l4522:
 21461     09C5  30FF               	movlw	255
 21462     09C6  0020               	movlb	0	; select bank0
 21463     09C7  00D2               	movwf	___fldiv@new_exp
 21464     09C8  3000               	movlw	0
 21465     09C9  00D3               	movwf	___fldiv@new_exp+1
 21466     09CA  3000               	movlw	0
 21467     09CB  00C7               	movwf	___fldiv@b+3
 21468     09CC  3000               	movlw	0
 21469     09CD  00C6               	movwf	___fldiv@b+2
 21470     09CE  3000               	movlw	0
 21471     09CF  00C5               	movwf	___fldiv@b+1
 21472     09D0  3000               	movlw	0
 21473     09D1  00C4               	movwf	___fldiv@b
 21474     09D2                     i1l1605:
 21475     09D2  0020               	movlb	0	; select bank0
 21476     09D3  0853               	movf	___fldiv@new_exp+1,w
 21477     09D4  3A80               	xorlw	128
 21478     09D5  00C8               	movwf	??___fldiv
 21479     09D6  3080               	movlw	128
 21480     09D7  0248               	subwf	??___fldiv,w
 21481     09D8  1D03               	skipz
 21482     09D9  29DC               	goto	u375_25
 21483     09DA  3001               	movlw	1
 21484     09DB  0252               	subwf	___fldiv@new_exp,w
 21485     09DC                     u375_25:
 21486     09DC  1803               	skipnc
 21487     09DD  29DF               	goto	u375_21
 21488     09DE  29E0               	goto	u375_20
 21489     09DF                     u375_21:
 21490     09DF  29EC               	goto	i1l1606
 21491     09E0                     u375_20:
 21492     09E0                     i1l4524:
 21493     09E0  0020               	movlb	0	; select bank0
 21494     09E1  01D2               	clrf	___fldiv@new_exp
 21495     09E2  01D3               	clrf	___fldiv@new_exp+1
 21496     09E3                     i1l4526:
 21497     09E3  3000               	movlw	0
 21498     09E4  00C7               	movwf	___fldiv@b+3
 21499     09E5  3000               	movlw	0
 21500     09E6  00C6               	movwf	___fldiv@b+2
 21501     09E7  3000               	movlw	0
 21502     09E8  00C5               	movwf	___fldiv@b+1
 21503     09E9  3000               	movlw	0
 21504     09EA  00C4               	movwf	___fldiv@b
 21505     09EB                     i1l4528:
 21506     09EB  01D1               	clrf	___fldiv@sign
 21507     09EC                     i1l1606:
 21508     09EC  0020               	movlb	0	; select bank0
 21509     09ED  0852               	movf	___fldiv@new_exp,w
 21510     09EE  00D8               	movwf	___fldiv@bexp
 21511     09EF                     i1l4530:
 21512     09EF  1C58               	btfss	___fldiv@bexp,0
 21513     09F0  29F2               	goto	u376_21
 21514     09F1  29F3               	goto	u376_20
 21515     09F2                     u376_21:
 21516     09F2  29F5               	goto	i1l4534
 21517     09F3                     u376_20:
 21518     09F3                     i1l4532:
 21519     09F3  17C6               	bsf	___fldiv@b+2,7
 21520     09F4  29F9               	goto	i1l1608
 21521     09F5                     i1l4534:
 21522     09F5  307F               	movlw	127
 21523     09F6  00C8               	movwf	??___fldiv
 21524     09F7  0848               	movf	??___fldiv,w
 21525     09F8  05C6               	andwf	___fldiv@b+2,f
 21526     09F9                     i1l1608:
 21527     09F9  3658               	lsrf	___fldiv@bexp,w
 21528     09FA  00C7               	movwf	___fldiv@b+3
 21529     09FB  0851               	movf	___fldiv@sign,w
 21530     09FC  00C8               	movwf	??___fldiv
 21531     09FD  0848               	movf	??___fldiv,w
 21532     09FE  04C7               	iorwf	___fldiv@b+3,f
 21533     09FF  28C0               	goto	i1l4444
 21534     0A00                     i1l1586:
 21535     0A00  0008               	return
 21536     0A01                     __end_of___fldiv:
 21537                           
 21538                           	psect	text93
 21539     1F64                     __ptext93:	
 21540 ;; *************** function _LCD_Write_String *****************
 21541 ;; Defined at:
 21542 ;;		line 90 in file "I2C_LCD.c"
 21543 ;; Parameters:    Size  Location     Type
 21544 ;;  Str             2    6[COMMON] PTR unsigned char 
 21545 ;;		 -> STR_7(13), TMR0_Custom_ISR@buffer(16), STR_5(14), STR_4(9), 
 21546 ;;		 -> UART_Custom_ISR@buffer(16), STR_2(14), STR_1(9), 
 21547 ;; Auto vars:     Size  Location     Type
 21548 ;;  i               2    9[COMMON] int 
 21549 ;; Return value:  Size  Location     Type
 21550 ;;                  1    wreg      void 
 21551 ;; Registers used:
 21552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21553 ;; Tracked objects:
 21554 ;;		On entry : 0/0
 21555 ;;		On exit  : 0/0
 21556 ;;		Unchanged: 0/0
 21557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21559 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21560 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21561 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21562 ;;Total ram usage:        5 bytes
 21563 ;; Hardware stack levels used: 1
 21564 ;; Hardware stack levels required when called: 5
 21565 ;; This function calls:
 21566 ;;		_LCD_Write_Char
 21567 ;; This function is called by:
 21568 ;;		_UART_Custom_ISR
 21569 ;;		_TMR0_Custom_ISR
 21570 ;; This function uses a non-reentrant model
 21571 ;;
 21572                           
 21573     1F64                     _LCD_Write_String:	
 21574                           ;psect for function _LCD_Write_String
 21575                           
 21576     1F64                     i1l5216:	
 21577                           ;incstack = 0
 21578                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21579                           
 21580                           
 21581                           ;I2C_LCD.c: 90: void LCD_Write_String(char* Str);I2C_LCD.c: 91: {;I2C_LCD.c: 92:   for(i
      +                          nt i=0; Str[i]!='\0'; i++)
 21582     1F64  01F9               	clrf	LCD_Write_String@i
 21583     1F65  01FA               	clrf	LCD_Write_String@i+1
 21584     1F66  2F75               	goto	i1l5222
 21585     1F67                     i1l5218:
 21586                           
 21587                           ;I2C_LCD.c: 93:     LCD_Write_Char(Str[i]);
 21588     1F67  0876               	movf	LCD_Write_String@Str,w
 21589     1F68  0779               	addwf	LCD_Write_String@i,w
 21590     1F69  0084               	movwf	4
 21591     1F6A  0877               	movf	LCD_Write_String@Str+1,w
 21592     1F6B  3D7A               	addwfc	LCD_Write_String@i+1,w
 21593     1F6C  0085               	movwf	5
 21594     1F6D  0800               	movf	0,w	;code access
 21595     1F6E  319E  26CF  319F   	fcall	_LCD_Write_Char
 21596     1F71                     i1l5220:
 21597     1F71  3001               	movlw	1
 21598     1F72  07F9               	addwf	LCD_Write_String@i,f
 21599     1F73  3000               	movlw	0
 21600     1F74  3DFA               	addwfc	LCD_Write_String@i+1,f
 21601     1F75                     i1l5222:
 21602     1F75  0876               	movf	LCD_Write_String@Str,w
 21603     1F76  0779               	addwf	LCD_Write_String@i,w
 21604     1F77  0084               	movwf	4
 21605     1F78  0877               	movf	LCD_Write_String@Str+1,w
 21606     1F79  3D7A               	addwfc	LCD_Write_String@i+1,w
 21607     1F7A  0085               	movwf	5
 21608     1F7B  0012               	moviw fsr0++
 21609     1F7C  1D03               	btfss	3,2
 21610     1F7D  2F7F               	goto	u475_21
 21611     1F7E  2F80               	goto	u475_20
 21612     1F7F                     u475_21:
 21613     1F7F  2F67               	goto	i1l5218
 21614     1F80                     u475_20:
 21615     1F80                     i1l1063:
 21616     1F80  0008               	return
 21617     1F81                     __end_of_LCD_Write_String:
 21618                           
 21619                           	psect	text94
 21620     1ECF                     __ptext94:	
 21621 ;; *************** function _LCD_Write_Char *****************
 21622 ;; Defined at:
 21623 ;;		line 84 in file "I2C_LCD.c"
 21624 ;; Parameters:    Size  Location     Type
 21625 ;;  Data            1    wreg     unsigned char 
 21626 ;; Auto vars:     Size  Location     Type
 21627 ;;  Data            1    5[COMMON] unsigned char 
 21628 ;; Return value:  Size  Location     Type
 21629 ;;                  1    wreg      void 
 21630 ;; Registers used:
 21631 ;;		wreg, status,2, status,0, pclath, cstack
 21632 ;; Tracked objects:
 21633 ;;		On entry : 0/0
 21634 ;;		On exit  : 0/0
 21635 ;;		Unchanged: 0/0
 21636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21641 ;;Total ram usage:        2 bytes
 21642 ;; Hardware stack levels used: 1
 21643 ;; Hardware stack levels required when called: 4
 21644 ;; This function calls:
 21645 ;;		_LCD_Write_4Bit
 21646 ;; This function is called by:
 21647 ;;		_LCD_Write_String
 21648 ;; This function uses a non-reentrant model
 21649 ;;
 21650                           
 21651     1ECF                     _LCD_Write_Char:	
 21652                           ;psect for function _LCD_Write_Char
 21653                           
 21654                           
 21655                           ;incstack = 0
 21656                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 21657                           ;LCD_Write_Char@Data stored from wreg
 21658     1ECF  00F5               	movwf	LCD_Write_Char@Data
 21659     1ED0                     i1l5152:
 21660                           
 21661                           ;I2C_LCD.c: 84: void LCD_Write_Char(char Data);I2C_LCD.c: 85: {;I2C_LCD.c: 86:   RS = 1;
 21662     1ED0  0022               	movlb	2	; select bank2
 21663     1ED1  01E7               	clrf	_RS^(0+256)
 21664     1ED2  0AE7               	incf	_RS^(0+256),f
 21665     1ED3                     i1l5154:
 21666                           
 21667                           ;I2C_LCD.c: 87:   LCD_Write_4Bit(Data & 0xF0);
 21668     1ED3  0875               	movf	LCD_Write_Char@Data,w
 21669     1ED4  39F0               	andlw	240
 21670     1ED5  319E  2666  319E   	fcall	_LCD_Write_4Bit
 21671                           
 21672                           ;I2C_LCD.c: 88:   LCD_Write_4Bit((Data << 4) & 0xF0);
 21673     1ED8  0875               	movf	LCD_Write_Char@Data,w
 21674     1ED9  00F4               	movwf	??_LCD_Write_Char
 21675     1EDA  3003               	movlw	3
 21676     1EDB                     u472_25:
 21677     1EDB  35F4               	lslf	??_LCD_Write_Char,f
 21678     1EDC  3EFF               	addlw	-1
 21679     1EDD  1D03               	skipz
 21680     1EDE  2EDB               	goto	u472_25
 21681     1EDF  3574               	lslf	??_LCD_Write_Char,w
 21682     1EE0  39F0               	andlw	240
 21683     1EE1  319E  2666  319E   	fcall	_LCD_Write_4Bit
 21684     1EE4                     i1l1057:
 21685     1EE4  0008               	return
 21686     1EE5                     __end_of_LCD_Write_Char:
 21687                           
 21688                           	psect	text95
 21689     10BA                     __ptext95:	
 21690 ;; *************** function _LCD_Set_Cursor *****************
 21691 ;; Defined at:
 21692 ;;		line 95 in file "I2C_LCD.c"
 21693 ;; Parameters:    Size  Location     Type
 21694 ;;  ROW             1    wreg     unsigned char 
 21695 ;;  COL             1    6[COMMON] unsigned char 
 21696 ;; Auto vars:     Size  Location     Type
 21697 ;;  ROW             1    7[COMMON] unsigned char 
 21698 ;; Return value:  Size  Location     Type
 21699 ;;                  1    wreg      void 
 21700 ;; Registers used:
 21701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21702 ;; Tracked objects:
 21703 ;;		On entry : 0/0
 21704 ;;		On exit  : 0/0
 21705 ;;		Unchanged: 0/0
 21706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21707 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21711 ;;Total ram usage:        2 bytes
 21712 ;; Hardware stack levels used: 1
 21713 ;; Hardware stack levels required when called: 5
 21714 ;; This function calls:
 21715 ;;		_LCD_CMD
 21716 ;; This function is called by:
 21717 ;;		_UART_Custom_ISR
 21718 ;;		_TMR0_Custom_ISR
 21719 ;; This function uses a non-reentrant model
 21720 ;;
 21721                           
 21722     10BA                     _LCD_Set_Cursor:	
 21723                           ;psect for function _LCD_Set_Cursor
 21724                           
 21725                           
 21726                           ;incstack = 0
 21727                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21728                           ;LCD_Set_Cursor@ROW stored from wreg
 21729     10BA  00F7               	movwf	LCD_Set_Cursor@ROW
 21730     10BB                     i1l5224:
 21731                           
 21732                           ;I2C_LCD.c: 95: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 96:
      +                           {;I2C_LCD.c: 97:   switch(ROW)
 21733     10BB  28D4               	goto	i1l5234
 21734     10BC                     i1l5226:
 21735                           
 21736                           ;I2C_LCD.c: 100:       LCD_CMD(0xC0 + COL-1);
 21737     10BC  0876               	movf	LCD_Set_Cursor@COL,w
 21738     10BD  3EBF               	addlw	191
 21739     10BE  319E  267B  3190   	fcall	_LCD_CMD
 21740                           
 21741                           ;I2C_LCD.c: 101:       break;
 21742     10C1  28DF               	goto	i1l1072
 21743     10C2                     i1l5228:
 21744                           
 21745                           ;I2C_LCD.c: 103:       LCD_CMD(0x94 + COL-1);
 21746     10C2  0876               	movf	LCD_Set_Cursor@COL,w
 21747     10C3  3E93               	addlw	147
 21748     10C4  319E  267B  3190   	fcall	_LCD_CMD
 21749                           
 21750                           ;I2C_LCD.c: 104:       break;
 21751     10C7  28DF               	goto	i1l1072
 21752     10C8                     i1l5230:
 21753                           
 21754                           ;I2C_LCD.c: 106:       LCD_CMD(0xD4 + COL-1);
 21755     10C8  0876               	movf	LCD_Set_Cursor@COL,w
 21756     10C9  3ED3               	addlw	211
 21757     10CA  319E  267B  3190   	fcall	_LCD_CMD
 21758                           
 21759                           ;I2C_LCD.c: 107:       break;
 21760     10CD  28DF               	goto	i1l1072
 21761     10CE                     i1l5232:
 21762                           
 21763                           ;I2C_LCD.c: 110:       LCD_CMD(0x80 + COL-1);
 21764     10CE  0876               	movf	LCD_Set_Cursor@COL,w
 21765     10CF  3E7F               	addlw	127
 21766     10D0  319E  267B  3190   	fcall	_LCD_CMD
 21767                           
 21768                           ;I2C_LCD.c: 111:   }
 21769     10D3  28DF               	goto	i1l1072
 21770     10D4                     i1l5234:
 21771     10D4  0877               	movf	LCD_Set_Cursor@ROW,w
 21772                           
 21773                           ; Switch size 1, requested type "simple"
 21774                           ; Number of cases is 3, Range of values is 2 to 4
 21775                           ; switch strategies available:
 21776                           ; Name         Instructions Cycles
 21777                           ; simple_byte           10     6 (average)
 21778                           ; direct_byte           15     9 (fixed)
 21779                           ; jumptable            263     9 (fixed)
 21780                           ;	Chosen strategy is simple_byte
 21781     10D5  3A02               	xorlw	2	; case 2
 21782     10D6  1903               	skipnz
 21783     10D7  28BC               	goto	i1l5226
 21784     10D8  3A01               	xorlw	1	; case 3
 21785     10D9  1903               	skipnz
 21786     10DA  28C2               	goto	i1l5228
 21787     10DB  3A07               	xorlw	7	; case 4
 21788     10DC  1903               	skipnz
 21789     10DD  28C8               	goto	i1l5230
 21790     10DE  28CE               	goto	i1l5232
 21791     10DF                     i1l1072:
 21792     10DF  0008               	return
 21793     10E0                     __end_of_LCD_Set_Cursor:
 21794                           
 21795                           	psect	text96
 21796     1D86                     __ptext96:	
 21797 ;; *************** function _LCD_Clear *****************
 21798 ;; Defined at:
 21799 ;;		line 133 in file "I2C_LCD.c"
 21800 ;; Parameters:    Size  Location     Type
 21801 ;;		None
 21802 ;; Auto vars:     Size  Location     Type
 21803 ;;		None
 21804 ;; Return value:  Size  Location     Type
 21805 ;;                  1    wreg      void 
 21806 ;; Registers used:
 21807 ;;		wreg, status,2, status,0, pclath, cstack
 21808 ;; Tracked objects:
 21809 ;;		On entry : 0/0
 21810 ;;		On exit  : 0/0
 21811 ;;		Unchanged: 0/0
 21812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21817 ;;Total ram usage:        0 bytes
 21818 ;; Hardware stack levels used: 1
 21819 ;; Hardware stack levels required when called: 5
 21820 ;; This function calls:
 21821 ;;		_LCD_CMD
 21822 ;; This function is called by:
 21823 ;;		_UART_Custom_ISR
 21824 ;;		_TMR0_Custom_ISR
 21825 ;; This function uses a non-reentrant model
 21826 ;;
 21827                           
 21828     1D86                     _LCD_Clear:	
 21829                           ;psect for function _LCD_Clear
 21830                           
 21831     1D86                     i1l5240:	
 21832                           ;incstack = 0
 21833                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 21834                           
 21835                           
 21836                           ;I2C_LCD.c: 135:   LCD_CMD(0x01);
 21837     1D86  3001               	movlw	1
 21838     1D87  319E  267B  319D   	fcall	_LCD_CMD
 21839     1D8A                     i1l5242:
 21840                           
 21841                           ;I2C_LCD.c: 136:   _delay((unsigned long)((40)*(4000000/4000000.0)));
 21842     1D8A  300D               	movlw	13
 21843     1D8B                     u549_27:
 21844     1D8B  0B89               	decfsz	9,f
 21845     1D8C  2D8B               	goto	u549_27
 21846     1D8D  0000               	nop
 21847     1D8E                     i1l1087:
 21848     1D8E  0008               	return
 21849     1D8F                     __end_of_LCD_Clear:
 21850                           
 21851                           	psect	text97
 21852     1E7B                     __ptext97:	
 21853 ;; *************** function _LCD_CMD *****************
 21854 ;; Defined at:
 21855 ;;		line 78 in file "I2C_LCD.c"
 21856 ;; Parameters:    Size  Location     Type
 21857 ;;  CMD             1    wreg     unsigned char 
 21858 ;; Auto vars:     Size  Location     Type
 21859 ;;  CMD             1    5[COMMON] unsigned char 
 21860 ;; Return value:  Size  Location     Type
 21861 ;;                  1    wreg      void 
 21862 ;; Registers used:
 21863 ;;		wreg, status,2, status,0, pclath, cstack
 21864 ;; Tracked objects:
 21865 ;;		On entry : 0/0
 21866 ;;		On exit  : 0/0
 21867 ;;		Unchanged: 0/0
 21868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21872 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21873 ;;Total ram usage:        2 bytes
 21874 ;; Hardware stack levels used: 1
 21875 ;; Hardware stack levels required when called: 4
 21876 ;; This function calls:
 21877 ;;		_LCD_Write_4Bit
 21878 ;; This function is called by:
 21879 ;;		_LCD_Set_Cursor
 21880 ;;		_LCD_Clear
 21881 ;;		_LCD_Init
 21882 ;;		_LCD_SL
 21883 ;;		_LCD_SR
 21884 ;; This function uses a non-reentrant model
 21885 ;;
 21886                           
 21887     1E7B                     _LCD_CMD:	
 21888                           ;psect for function _LCD_CMD
 21889                           
 21890                           
 21891                           ;incstack = 0
 21892                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
 21893                           ;LCD_CMD@CMD stored from wreg
 21894     1E7B  00F5               	movwf	LCD_CMD@CMD
 21895     1E7C                     i1l5146:
 21896                           
 21897                           ;I2C_LCD.c: 78: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 79: {;I2C_LCD.c: 80:   RS = 0
      +                          ;
 21898     1E7C  0022               	movlb	2	; select bank2
 21899     1E7D  01E7               	clrf	_RS^(0+256)
 21900     1E7E                     i1l5148:
 21901                           
 21902                           ;I2C_LCD.c: 81:   LCD_Write_4Bit(CMD & 0xF0);
 21903     1E7E  0875               	movf	LCD_CMD@CMD,w
 21904     1E7F  39F0               	andlw	240
 21905     1E80  319E  2666  319E   	fcall	_LCD_Write_4Bit
 21906     1E83                     i1l5150:
 21907                           
 21908                           ;I2C_LCD.c: 82:   LCD_Write_4Bit((CMD << 4) & 0xF0);
 21909     1E83  0875               	movf	LCD_CMD@CMD,w
 21910     1E84  00F4               	movwf	??_LCD_CMD
 21911     1E85  3003               	movlw	3
 21912     1E86                     u471_25:
 21913     1E86  35F4               	lslf	??_LCD_CMD,f
 21914     1E87  3EFF               	addlw	-1
 21915     1E88  1D03               	skipz
 21916     1E89  2E86               	goto	u471_25
 21917     1E8A  3574               	lslf	??_LCD_CMD,w
 21918     1E8B  39F0               	andlw	240
 21919     1E8C  319E  2666  319E   	fcall	_LCD_Write_4Bit
 21920     1E8F                     i1l1054:
 21921     1E8F  0008               	return
 21922     1E90                     __end_of_LCD_CMD:
 21923                           
 21924                           	psect	text98
 21925     1E66                     __ptext98:	
 21926 ;; *************** function _LCD_Write_4Bit *****************
 21927 ;; Defined at:
 21928 ;;		line 70 in file "I2C_LCD.c"
 21929 ;; Parameters:    Size  Location     Type
 21930 ;;  Nibble          1    wreg     unsigned char 
 21931 ;; Auto vars:     Size  Location     Type
 21932 ;;  Nibble          1    3[COMMON] unsigned char 
 21933 ;; Return value:  Size  Location     Type
 21934 ;;                  1    wreg      void 
 21935 ;; Registers used:
 21936 ;;		wreg, status,2, status,0, pclath, cstack
 21937 ;; Tracked objects:
 21938 ;;		On entry : 0/0
 21939 ;;		On exit  : 0/0
 21940 ;;		Unchanged: 0/0
 21941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21946 ;;Total ram usage:        2 bytes
 21947 ;; Hardware stack levels used: 1
 21948 ;; Hardware stack levels required when called: 3
 21949 ;; This function calls:
 21950 ;;		_IO_Expander_Write
 21951 ;; This function is called by:
 21952 ;;		_LCD_CMD
 21953 ;;		_LCD_Write_Char
 21954 ;; This function uses a non-reentrant model
 21955 ;;
 21956                           
 21957     1E66                     _LCD_Write_4Bit:	
 21958                           ;psect for function _LCD_Write_4Bit
 21959                           
 21960                           
 21961                           ;incstack = 0
 21962                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
 21963                           ;LCD_Write_4Bit@Nibble stored from wreg
 21964     1E66  00F3               	movwf	LCD_Write_4Bit@Nibble
 21965     1E67                     i1l5030:
 21966                           
 21967                           ;I2C_LCD.c: 70: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 71: {;I2C_LCD.c: 73
      +                          :   Nibble |= RS;
 21968     1E67  0022               	movlb	2	; select bank2
 21969     1E68  0867               	movf	_RS^(0+256),w
 21970     1E69  00F2               	movwf	??_LCD_Write_4Bit
 21971     1E6A  0872               	movf	??_LCD_Write_4Bit,w
 21972     1E6B  04F3               	iorwf	LCD_Write_4Bit@Nibble,f
 21973     1E6C                     i1l5032:
 21974                           
 21975                           ;I2C_LCD.c: 74:   IO_Expander_Write(Nibble | 0x04);
 21976     1E6C  0873               	movf	LCD_Write_4Bit@Nibble,w
 21977     1E6D  3804               	iorlw	4
 21978     1E6E  319E  262B  319E   	fcall	_IO_Expander_Write
 21979     1E71                     i1l5034:
 21980                           
 21981                           ;I2C_LCD.c: 75:   IO_Expander_Write(Nibble & 0xFB);
 21982     1E71  0873               	movf	LCD_Write_4Bit@Nibble,w
 21983     1E72  39FB               	andlw	251
 21984     1E73  319E  262B  319E   	fcall	_IO_Expander_Write
 21985                           
 21986                           ;I2C_LCD.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 21987     1E76  3010               	movlw	16
 21988     1E77                     u550_27:
 21989     1E77  0B89               	decfsz	9,f
 21990     1E78  2E77               	goto	u550_27
 21991     1E79  3200               	nop2
 21992     1E7A                     i1l1051:
 21993     1E7A  0008               	return
 21994     1E7B                     __end_of_LCD_Write_4Bit:
 21995                           
 21996                           	psect	text99
 21997     1D6E                     __ptext99:	
 21998 ;; *************** function _Backlight *****************
 21999 ;; Defined at:
 22000 ;;		line 113 in file "I2C_LCD.c"
 22001 ;; Parameters:    Size  Location     Type
 22002 ;;		None
 22003 ;; Auto vars:     Size  Location     Type
 22004 ;;		None
 22005 ;; Return value:  Size  Location     Type
 22006 ;;                  1    wreg      void 
 22007 ;; Registers used:
 22008 ;;		wreg, status,2, status,0, pclath, cstack
 22009 ;; Tracked objects:
 22010 ;;		On entry : 0/0
 22011 ;;		On exit  : 0/0
 22012 ;;		Unchanged: 0/0
 22013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22018 ;;Total ram usage:        0 bytes
 22019 ;; Hardware stack levels used: 1
 22020 ;; Hardware stack levels required when called: 3
 22021 ;; This function calls:
 22022 ;;		_IO_Expander_Write
 22023 ;; This function is called by:
 22024 ;;		_UART_Custom_ISR
 22025 ;;		_TMR0_Custom_ISR
 22026 ;; This function uses a non-reentrant model
 22027 ;;
 22028                           
 22029     1D6E                     _Backlight:	
 22030                           ;psect for function _Backlight
 22031                           
 22032     1D6E                     i1l5236:	
 22033                           ;incstack = 0
 22034                           ; Regs used in _Backlight: [wreg+status,2+status,0+pclath+cstack]
 22035                           
 22036                           
 22037                           ;I2C_LCD.c: 115:   BackLight_State = 0x08;
 22038     1D6E  3008               	movlw	8
 22039     1D6F  0022               	movlb	2	; select bank2
 22040     1D70  00EC               	movwf	_BackLight_State^(0+256)
 22041     1D71                     i1l5238:
 22042                           
 22043                           ;I2C_LCD.c: 116:   IO_Expander_Write(0);
 22044     1D71  3000               	movlw	0
 22045     1D72  319E  262B  319D   	fcall	_IO_Expander_Write
 22046     1D75                     i1l1075:
 22047     1D75  0008               	return
 22048     1D76                     __end_of_Backlight:
 22049                           
 22050                           	psect	text100
 22051     1E2B                     __ptext100:	
 22052 ;; *************** function _IO_Expander_Write *****************
 22053 ;; Defined at:
 22054 ;;		line 63 in file "I2C_LCD.c"
 22055 ;; Parameters:    Size  Location     Type
 22056 ;;  Data            1    wreg     unsigned char 
 22057 ;; Auto vars:     Size  Location     Type
 22058 ;;  Data            1    1[COMMON] unsigned char 
 22059 ;; Return value:  Size  Location     Type
 22060 ;;                  1    wreg      void 
 22061 ;; Registers used:
 22062 ;;		wreg, status,2, status,0, pclath, cstack
 22063 ;; Tracked objects:
 22064 ;;		On entry : 0/0
 22065 ;;		On exit  : 0/0
 22066 ;;		Unchanged: 0/0
 22067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22072 ;;Total ram usage:        1 bytes
 22073 ;; Hardware stack levels used: 1
 22074 ;; Hardware stack levels required when called: 2
 22075 ;; This function calls:
 22076 ;;		_I2C_Master_Start
 22077 ;;		_I2C_Master_Stop
 22078 ;;		_I2C_Master_Write
 22079 ;; This function is called by:
 22080 ;;		_LCD_Write_4Bit
 22081 ;;		_Backlight
 22082 ;;		_LCD_Init
 22083 ;;		_noBacklight
 22084 ;; This function uses a non-reentrant model
 22085 ;;
 22086                           
 22087     1E2B                     _IO_Expander_Write:	
 22088                           ;psect for function _IO_Expander_Write
 22089                           
 22090                           
 22091                           ;incstack = 0
 22092                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
 22093                           ;IO_Expander_Write@Data stored from wreg
 22094     1E2B  00F1               	movwf	IO_Expander_Write@Data
 22095     1E2C                     i1l4766:
 22096                           
 22097                           ;I2C_LCD.c: 63: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 64: {;I2C_LCD.c: 6
      +                          5:   I2C_Master_Start();
 22098     1E2C  319D  2529  319E   	fcall	_I2C_Master_Start
 22099                           
 22100                           ;I2C_LCD.c: 66:   I2C_Master_Write(i2c_add);
 22101     1E2F  0022               	movlb	2	; select bank2
 22102     1E30  0866               	movf	_i2c_add^(0+256),w
 22103     1E31  319E  261B  319E   	fcall	_I2C_Master_Write
 22104                           
 22105                           ;I2C_LCD.c: 67:   I2C_Master_Write(Data | BackLight_State);
 22106     1E34  0871               	movf	IO_Expander_Write@Data,w
 22107     1E35  0022               	movlb	2	; select bank2
 22108     1E36  046C               	iorwf	_BackLight_State^(0+256),w
 22109     1E37  319E  261B  319E   	fcall	_I2C_Master_Write
 22110                           
 22111                           ;I2C_LCD.c: 68:   I2C_Master_Stop();
 22112     1E3A  319D  252F  319E   	fcall	_I2C_Master_Stop
 22113     1E3D                     i1l1048:
 22114     1E3D  0008               	return
 22115     1E3E                     __end_of_IO_Expander_Write:
 22116                           
 22117                           	psect	text101
 22118     1E1B                     __ptext101:	
 22119 ;; *************** function _I2C_Master_Write *****************
 22120 ;; Defined at:
 22121 ;;		line 29 in file "I2C_LCD.c"
 22122 ;; Parameters:    Size  Location     Type
 22123 ;;  data            1    wreg     unsigned char 
 22124 ;; Auto vars:     Size  Location     Type
 22125 ;;  data            1    0[COMMON] unsigned char 
 22126 ;; Return value:  Size  Location     Type
 22127 ;;                  1    wreg      unsigned char 
 22128 ;; Registers used:
 22129 ;;		wreg, status,2, status,0, pclath, cstack
 22130 ;; Tracked objects:
 22131 ;;		On entry : 0/0
 22132 ;;		On exit  : 0/0
 22133 ;;		Unchanged: 0/0
 22134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22139 ;;Total ram usage:        1 bytes
 22140 ;; Hardware stack levels used: 1
 22141 ;; Hardware stack levels required when called: 1
 22142 ;; This function calls:
 22143 ;;		_I2C_Master_Wait
 22144 ;; This function is called by:
 22145 ;;		_IO_Expander_Write
 22146 ;; This function uses a non-reentrant model
 22147 ;;
 22148                           
 22149     1E1B                     _I2C_Master_Write:	
 22150                           ;psect for function _I2C_Master_Write
 22151                           
 22152                           
 22153                           ;incstack = 0
 22154                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 22155                           ;I2C_Master_Write@data stored from wreg
 22156     1E1B  00F0               	movwf	I2C_Master_Write@data
 22157     1E1C                     i1l4296:
 22158                           
 22159                           ;I2C_LCD.c: 29: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 30: {;I2C_
      +                          LCD.c: 31:   I2C_Master_Wait();
 22160     1E1C  319D  25C1  319E   	fcall	_I2C_Master_Wait
 22161     1E1F                     i1l4298:
 22162                           
 22163                           ;I2C_LCD.c: 32:   SSP1BUF = data;
 22164     1E1F  0870               	movf	I2C_Master_Write@data,w
 22165     1E20  0024               	movlb	4	; select bank4
 22166     1E21  0091               	movwf	17	;volatile
 22167     1E22                     i1l1039:	
 22168                           ;I2C_LCD.c: 33:   while(!PIR1bits.SSP1IF);
 22169                           
 22170     1E22  0020               	movlb	0	; select bank0
 22171     1E23  1D90               	btfss	16,3	;volatile
 22172     1E24  2E26               	goto	u324_21
 22173     1E25  2E27               	goto	u324_20
 22174     1E26                     u324_21:
 22175     1E26  2E22               	goto	i1l1039
 22176     1E27                     u324_20:
 22177     1E27                     i1l1041:
 22178                           
 22179                           ;I2C_LCD.c: 34:   PIR1bits.SSP1IF = 0;
 22180     1E27  1190               	bcf	16,3	;volatile
 22181     1E28                     i1l4300:
 22182                           
 22183                           ;I2C_LCD.c: 35:   return SSP1CON2bits.ACKSTAT;;	Return value of _I2C_Master_Write is nev
      +                          er used
 22184     1E28  0024               	movlb	4	; select bank4
 22185     1E29  0816               	movf	22,w	;volatile
 22186     1E2A                     i1l1042:
 22187     1E2A  0008               	return
 22188     1E2B                     __end_of_I2C_Master_Write:
 22189                           
 22190                           	psect	text102
 22191     1D2F                     __ptext102:	
 22192 ;; *************** function _I2C_Master_Stop *****************
 22193 ;; Defined at:
 22194 ;;		line 24 in file "I2C_LCD.c"
 22195 ;; Parameters:    Size  Location     Type
 22196 ;;		None
 22197 ;; Auto vars:     Size  Location     Type
 22198 ;;		None
 22199 ;; Return value:  Size  Location     Type
 22200 ;;                  1    wreg      void 
 22201 ;; Registers used:
 22202 ;;		wreg, status,2, status,0, pclath, cstack
 22203 ;; Tracked objects:
 22204 ;;		On entry : 0/0
 22205 ;;		On exit  : 0/0
 22206 ;;		Unchanged: 0/0
 22207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22212 ;;Total ram usage:        0 bytes
 22213 ;; Hardware stack levels used: 1
 22214 ;; Hardware stack levels required when called: 1
 22215 ;; This function calls:
 22216 ;;		_I2C_Master_Wait
 22217 ;; This function is called by:
 22218 ;;		_IO_Expander_Write
 22219 ;; This function uses a non-reentrant model
 22220 ;;
 22221                           
 22222     1D2F                     _I2C_Master_Stop:	
 22223                           ;psect for function _I2C_Master_Stop
 22224                           
 22225     1D2F                     i1l4292:	
 22226                           ;incstack = 0
 22227                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 22228                           
 22229                           
 22230                           ;I2C_LCD.c: 26:   I2C_Master_Wait();
 22231     1D2F  319D  25C1  319D   	fcall	_I2C_Master_Wait
 22232     1D32                     i1l4294:
 22233                           
 22234                           ;I2C_LCD.c: 27:   SSP1CON2bits.PEN = 1;
 22235     1D32  0024               	movlb	4	; select bank4
 22236     1D33  1516               	bsf	22,2	;volatile
 22237     1D34                     i1l1036:
 22238     1D34  0008               	return
 22239     1D35                     __end_of_I2C_Master_Stop:
 22240                           
 22241                           	psect	text103
 22242     1D29                     __ptext103:	
 22243 ;; *************** function _I2C_Master_Start *****************
 22244 ;; Defined at:
 22245 ;;		line 19 in file "I2C_LCD.c"
 22246 ;; Parameters:    Size  Location     Type
 22247 ;;		None
 22248 ;; Auto vars:     Size  Location     Type
 22249 ;;		None
 22250 ;; Return value:  Size  Location     Type
 22251 ;;                  1    wreg      void 
 22252 ;; Registers used:
 22253 ;;		wreg, status,2, status,0, pclath, cstack
 22254 ;; Tracked objects:
 22255 ;;		On entry : 0/0
 22256 ;;		On exit  : 0/0
 22257 ;;		Unchanged: 0/0
 22258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22263 ;;Total ram usage:        0 bytes
 22264 ;; Hardware stack levels used: 1
 22265 ;; Hardware stack levels required when called: 1
 22266 ;; This function calls:
 22267 ;;		_I2C_Master_Wait
 22268 ;; This function is called by:
 22269 ;;		_IO_Expander_Write
 22270 ;; This function uses a non-reentrant model
 22271 ;;
 22272                           
 22273     1D29                     _I2C_Master_Start:	
 22274                           ;psect for function _I2C_Master_Start
 22275                           
 22276     1D29                     i1l4288:	
 22277                           ;incstack = 0
 22278                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 22279                           
 22280                           
 22281                           ;I2C_LCD.c: 21:   I2C_Master_Wait();
 22282     1D29  319D  25C1  319D   	fcall	_I2C_Master_Wait
 22283     1D2C                     i1l4290:
 22284                           
 22285                           ;I2C_LCD.c: 22:   SSP1CON2bits.SEN = 1;
 22286     1D2C  0024               	movlb	4	; select bank4
 22287     1D2D  1416               	bsf	22,0	;volatile
 22288     1D2E                     i1l1033:
 22289     1D2E  0008               	return
 22290     1D2F                     __end_of_I2C_Master_Start:
 22291                           
 22292                           	psect	text104
 22293     1DC1                     __ptext104:	
 22294 ;; *************** function _I2C_Master_Wait *****************
 22295 ;; Defined at:
 22296 ;;		line 15 in file "I2C_LCD.c"
 22297 ;; Parameters:    Size  Location     Type
 22298 ;;		None
 22299 ;; Auto vars:     Size  Location     Type
 22300 ;;		None
 22301 ;; Return value:  Size  Location     Type
 22302 ;;                  1    wreg      void 
 22303 ;; Registers used:
 22304 ;;		wreg, status,2
 22305 ;; Tracked objects:
 22306 ;;		On entry : 0/0
 22307 ;;		On exit  : 0/0
 22308 ;;		Unchanged: 0/0
 22309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22314 ;;Total ram usage:        0 bytes
 22315 ;; Hardware stack levels used: 1
 22316 ;; This function calls:
 22317 ;;		Nothing
 22318 ;; This function is called by:
 22319 ;;		_I2C_Master_Start
 22320 ;;		_I2C_Master_Stop
 22321 ;;		_I2C_Master_Write
 22322 ;; This function uses a non-reentrant model
 22323 ;;
 22324                           
 22325     1DC1                     _I2C_Master_Wait:	
 22326                           ;psect for function _I2C_Master_Wait
 22327                           
 22328     1DC1                     i1l4068:	
 22329                           ;incstack = 0
 22330                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 22331                           
 22332     1DC1                     i1l1027:	
 22333                           ;I2C_LCD.c: 17:   while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 22334                           
 22335     1DC1  0024               	movlb	4	; select bank4
 22336     1DC2  1914               	btfsc	20,2	;volatile
 22337     1DC3  2DC5               	goto	u275_21
 22338     1DC4  2DC6               	goto	u275_20
 22339     1DC5                     u275_21:
 22340     1DC5  2DC1               	goto	i1l1027
 22341     1DC6                     u275_20:
 22342     1DC6                     i1l4070:
 22343     1DC6  0816               	movf	22,w	;volatile
 22344     1DC7  391F               	andlw	31
 22345     1DC8  1D03               	btfss	3,2
 22346     1DC9  2DCB               	goto	u276_21
 22347     1DCA  2DCC               	goto	u276_20
 22348     1DCB                     u276_21:
 22349     1DCB  2DC1               	goto	i1l1027
 22350     1DCC                     u276_20:
 22351     1DCC                     i1l1030:
 22352     1DCC  0008               	return
 22353     1DCD                     __end_of_I2C_Master_Wait:
 22354                           
 22355                           	psect	text105
 22356     1CF7                     __ptext105:	
 22357 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 22358 ;; Defined at:
 22359 ;;		line 323 in file "mcc_generated_files/uart/src/eusart.c"
 22360 ;; Parameters:    Size  Location     Type
 22361 ;;		None
 22362 ;; Auto vars:     Size  Location     Type
 22363 ;;		None
 22364 ;; Return value:  Size  Location     Type
 22365 ;;                  1    wreg      void 
 22366 ;; Registers used:
 22367 ;;		None
 22368 ;; Tracked objects:
 22369 ;;		On entry : 0/0
 22370 ;;		On exit  : 0/0
 22371 ;;		Unchanged: 0/0
 22372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22377 ;;Total ram usage:        0 bytes
 22378 ;; Hardware stack levels used: 1
 22379 ;; This function calls:
 22380 ;;		Nothing
 22381 ;; This function is called by:
 22382 ;;		_EUSART_Initialize
 22383 ;;		_EUSART_ReceiveISR
 22384 ;; This function uses a non-reentrant model
 22385 ;;
 22386                           
 22387     1CF7                     _EUSART_DefaultOverrunErrorCallback:	
 22388                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 22389                           
 22390     1CF7                     i1l5714:	
 22391                           ;incstack = 0
 22392                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 22393                           
 22394                           
 22395                           ;mcc_generated_files/uart/src/eusart.c: 326:     RC1STAbits.CREN = 0;
 22396     1CF7  0023               	movlb	3	; select bank3
 22397     1CF8  121D               	bcf	29,4	;volatile
 22398                           
 22399                           ;mcc_generated_files/uart/src/eusart.c: 327:     RC1STAbits.CREN = 1;
 22400     1CF9  161D               	bsf	29,4	;volatile
 22401     1CFA                     i1l979:
 22402     1CFA  0008               	return
 22403     1CFB                     __end_of_EUSART_DefaultOverrunErrorCallback:
 22404                           
 22405                           	psect	text106
 22406     1CD6                     __ptext106:	
 22407 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 22408 ;; Defined at:
 22409 ;;		line 318 in file "mcc_generated_files/uart/src/eusart.c"
 22410 ;; Parameters:    Size  Location     Type
 22411 ;;		None
 22412 ;; Auto vars:     Size  Location     Type
 22413 ;;		None
 22414 ;; Return value:  Size  Location     Type
 22415 ;;                  1    wreg      void 
 22416 ;; Registers used:
 22417 ;;		None
 22418 ;; Tracked objects:
 22419 ;;		On entry : 0/0
 22420 ;;		On exit  : 0/0
 22421 ;;		Unchanged: 0/0
 22422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22427 ;;Total ram usage:        0 bytes
 22428 ;; Hardware stack levels used: 1
 22429 ;; This function calls:
 22430 ;;		Nothing
 22431 ;; This function is called by:
 22432 ;;		_EUSART_Initialize
 22433 ;;		_EUSART_ReceiveISR
 22434 ;; This function uses a non-reentrant model
 22435 ;;
 22436                           
 22437     1CD6                     _EUSART_DefaultFramingErrorCallback:	
 22438                           ;psect for function _EUSART_DefaultFramingErrorCallback
 22439                           
 22440     1CD6                     i1l976:	
 22441                           ;incstack = 0
 22442                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 22443                           
 22444     1CD6  0008               	return
 22445     1CD7                     __end_of_EUSART_DefaultFramingErrorCallback:
 22446     007E                     btemp	set	126	;btemp
 22447     007E                     int$flags	set	126
 22448     007E                     wtemp0	set	126
 22449     2370                     
 22450                           	psect	config
 22451                           
 22452                           ;Config register CONFIG1 @ 0x8007
 22453                           ;	Oscillator Selection Bits
 22454                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 22455                           ;	Power-up Timer Enable
 22456                           ;	PWRTE = OFF, PWRT disabled
 22457                           ;	MCLR Pin Function Select
 22458                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 22459                           ;	Flash Program Memory Code Protection
 22460                           ;	CP = ON, Program memory code protection is enabled
 22461                           ;	Brown-out Reset Enable
 22462                           ;	BOREN = ON, Brown-out Reset enabled
 22463                           ;	Clock Out Enable
 22464                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 22465                           ;	Internal/External Switch Over
 22466                           ;	IESO = ON, Internal External Switch Over mode is enabled
 22467                           ;	Fail-Safe Clock Monitor Enable
 22468                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 22469     8007                     	org	32775
 22470     8007  3F7C               	dw	16252
 22471                           
 22472                           ;Config register CONFIG2 @ 0x8008
 22473                           ;	Flash Memory Self-Write Protection
 22474                           ;	WRT = OFF, Write protection off
 22475                           ;	Peripheral Pin Select one-way control
 22476                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 22477                           ;	Zero Cross Detect Disable Bit
 22478                           ;	ZCD = OFF, ZCD disable. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 22479                           ;	PLL Enable Bit
 22480                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 22481                           ;	Stack Overflow/Underflow Reset Enable
 22482                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 22483                           ;	Brown-out Reset Voltage Selection
 22484                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 22485                           ;	Low-Power Brown Out Reset
 22486                           ;	LPBOR = OFF, Low-Power BOR is disabled
 22487                           ;	In-Circuit Debugger Mode
 22488                           ;	DEBUG = 0x1, unprogrammed default
 22489                           ;	Low-Voltage Programming Enable
 22490                           ;	LVP = ON, Low-voltage programming enabled
 22491     8008                     	org	32776
 22492     8008  3EFF               	dw	16127
 22493                           
 22494                           ;Config register CONFIG3 @ 0x8009
 22495                           ;	WDT Period Select
 22496                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 22497                           ;	Watchdog Timer Enable
 22498                           ;	WDTE = OFF, WDT disabled
 22499                           ;	WDT Window Select
 22500                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 22501                           ;	WDT Input Clock Selector
 22502                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 22503     8009                     	org	32777
 22504     8009  3F9F               	dw	16287

Data Sizes:
    Strings     98
    Constant    134
    Data        1
    BSS         211
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     39      77
    BANK3            80      4      34
    BANK4            80      0      80
    BANK5            80      0      64
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    I2C1_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), NULL(), 

    I2C1_CallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    i2c1_eventTable	const PTR FTN()enum E10210[9] size(2) Largest target is 1
		 -> I2C1_EVENT_ERROR(), I2C1_EVENT_IDLE(), I2C1_EVENT_NACK(), I2C1_EVENT_RESET(), 
		 -> I2C1_EVENT_RX(), I2C1_EVENT_SEND_RD_ADDR(), I2C1_EVENT_SEND_WR_ADDR(), I2C1_EVENT_STOP(), 
		 -> I2C1_EVENT_TX(), 

    I2C1_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C1_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C1_Host$ErrorGet	PTR FTN()enum E10201 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C1_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C1_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C1_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    I2C1_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C1_Host$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C1_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    I2C1_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    i2c1Status$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[9]), STR_2(CODE[14]), STR_4(CODE[9]), STR_5(CODE[14]), 
		 -> STR_7(CODE[13]), TMR0_Custom_ISR@buffer(BANK2[16]), UART_Custom_ISR@buffer(BANK2[16]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    NULL$0	PTR struct . size(2) Largest target is 0

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1156$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    S1156TMR_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    S1156TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    S1156TMR_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    S1156TMR_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    S1156TMR_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    S1156TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    S132$2$1	PTR unsigned char  size(2) Largest target is 0

    S132$3$1	PTR unsigned char  size(2) Largest target is 0

    S132$4$1	PTR unsigned char  size(2) Largest target is 0

    S132$4$3	PTR unsigned char  size(2) Largest target is 0

    S132$8$0	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    S132$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S132$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S132$ErrorGet	PTR FTN()enum E10201 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S132$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    S132$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    S132$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    S132$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S132$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S132$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    S132$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    S2021$18$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), 

    S2021$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S2021$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S2021$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S2021$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S2021$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S2021$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S2021$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S2021$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S2021$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S2021$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S2021$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S2021$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S2021$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S2021$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S2021$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S2021$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S2021$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S2021$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S2021$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S2021$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    S231$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S231$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3013$buffer	PTR unsigned char  size(2) Largest target is 0

    S3013$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_6(CODE[15]), STR_8(CODE[14]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> TMR0_Custom_ISR@buffer(BANK2[16]), UART_Custom_ISR@buffer(BANK2[16]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_12(CODE[4]), STR_9(CODE[4]), 

    Timer0$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    Timer0$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    Timer0$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    Timer0$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    Timer0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 
		 -> NULL(), 

    Timer0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    Timer2$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    Timer2$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    Timer2$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    Timer2$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    Timer2$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    Timer2$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    Timer4$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    Timer4$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    Timer4$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    Timer4$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    Timer4$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    Timer4$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    tmr1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    tmr1$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    tmr1$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    tmr1$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    tmr1$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    tmr1$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR1_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 
		 -> NULL(), 

    TMR1_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    TMR2_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 
		 -> NULL(), 

    TMR2_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    TMR4_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 
		 -> NULL(), 

    TMR4_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_6(CODE[15]), STR_8(CODE[14]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_6(CODE[15]), STR_8(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_6(CODE[15]), STR_8(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    ___xxtofl->_ADC_GetConversion
    _I2C1_ISR->_I2C1_EventHandler
    _I2C1_EventHandler->_I2C1_EVENT_TX
    _I2C1_ERROR_ISR->_I2C1_ErrorEventHandler
    _I2C1_ErrorEventHandler->_I2C1_EVENT_TX
    _I2C1_EVENT_TX->_I2C1_DataTransmit
    _I2C1_EVENT_SEND_WR_ADDR->_I2C1_DataTransmit
    _xtoa->_pad
    _read_prec_or_width->___wmul
    _efgtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___flsub->___fladd
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _Backlight->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _vfprintf->_vfpfcnvrt
    _xtoa->_pad
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _TMR0_Custom_ISR->_sprintf
    _UART_Custom_ISR->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    _Timer0_DefaultOverflowCallback->_TMR0_Custom_ISR
    _TMR0_Custom_ISR->_sprintf
    _EUSART_ReceiveISR->_UART_Custom_ISR
    _UART_Custom_ISR->_sprintf

Critical Paths under _main in BANK3

    _main->_CCP2_LoadDutyValue
    _Timer0_Initialize->_Timer0_OverflowCallbackRegister
    _TMR4_Initialize->_TMR4_OverflowCallbackRegister
    _TMR2_Initialize->_TMR2_OverflowCallbackRegister
    _TMR1_Initialize->_TMR1_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _I2C1_Initialize->_I2C1_CallbackRegister
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _EUSART_Initialize->_EUSART_RxCompleteCallbackRegister

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1526
                                              2 BANK3      2     2      0
                 _CCP2_LoadDutyValue
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1303
                     _ADC_Initialize
                    _CCP1_Initialize
                    _CCP2_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                  _Timer0_Initialize
 ---------------------------------------------------------------------------------
 (2) _Timer0_Initialize                                    0     0      0     121
    _Timer0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _Timer0_OverflowCallbackRegister                      2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     121
      _TMR4_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR4_OverflowCallbackRegister                        2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
      _TMR2_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR2_OverflowCallbackRegister                        2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR1_OverflowCallbackRegister                        2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     121
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0     242
              _I2C1_CallbackRegister
 ---------------------------------------------------------------------------------
 (3) _I2C1_CallbackRegister                                2     0      2     242
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     456
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
  _EUSART_RxCompleteCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_RxCompleteCallbackRegister                    2     0      2     152
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     152
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     152
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP2_LoadDutyValue                                   2     0      2     220
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   62627
                                NULL *
                  _EUSART_ReceiveISR *
                     _I2C1_ERROR_ISR
                           _I2C1_ISR
                 _Timer0_OverflowISR
 ---------------------------------------------------------------------------------
 (5) _Timer0_OverflowISR                                   0     0      0   34831
                                NULL *
       _TMR1_DefaultOverflowCallback *
       _TMR2_DefaultOverflowCallback *
       _TMR4_DefaultOverflowCallback *
     _Timer0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (6) _Timer0_DefaultOverflowCallback                       0     0      0   34831
                    _TMR0_Custom_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_Custom_ISR                                     26    26      0   34831
                                             13 BANK2     26    26      0
                  _ADC_GetConversion
                          _Backlight
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                         _TMR1_Start
                          _TMR1_Stop
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            14    10      4     474
                                              4 COMMON     8     4      4
                                              0 BANK0      6     6      0
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (8) _TMR1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_ISR                                             0     0      0     164
                  _I2C1_EventHandler
 ---------------------------------------------------------------------------------
 (6) _I2C1_EventHandler                                    2     2      0     164
                                              4 COMMON     2     2      0
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
                _I2C1_InterruptClear
                        _I2C1_IsAddr
                        _I2C1_IsData
                        _I2C1_IsNack
 ---------------------------------------------------------------------------------
 (7) _I2C1_IsNack                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_IsData                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_IsAddr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_ERROR_ISR                                       0     0      0     164
             _I2C1_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (6) _I2C1_ErrorEventHandler                               2     2      0     164
                                              4 COMMON     2     2      0
                                NULL *
               _I2C1_DefaultCallback *
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
           _I2C1_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_TX                                        3     3      0      48
                                              1 COMMON     3     3      0
                  _I2C1_DataTransmit
                    _I2C1_EVENT_STOP
                 _I2C1_RestartEnable
 ---------------------------------------------------------------------------------
 (8) _I2C1_RestartEnable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_SEND_WR_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_SEND_RD_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (8) _I2C1_DataTransmit                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_RX                                        2     2      0      24
                                              0 COMMON     2     2      0
                       _I2C1_AckSend
                   _I2C1_DataReceive
                   _I2C1_IsRxBufFull
                      _I2C1_NackSend
                 _I2C1_ReceiveEnable
                _I2C1_RestartDisable
 ---------------------------------------------------------------------------------
 (8) _I2C1_RestartDisable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_ReceiveEnable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_NackSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_IsRxBufFull                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DataReceive                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_AckSend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_NACK                                      1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C1_EVENT_STOP
 ---------------------------------------------------------------------------------
 (8) _I2C1_EVENT_STOP                                      0     0      0       0
                         _I2C1_Close
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (9) _I2C1_StopSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Close                                           0     0      0       0
           _I2C1_ErrorInterruptClear
                _I2C1_InterruptClear
              _I2C1_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (10) _I2C1_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_InterruptClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_IDLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_ERROR                                     1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C1_EVENT_RESET
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_RESET                                     0     0      0       0
                      _I2C1_BusReset
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusReset                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DefaultCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_ReceiveISR                                    6     6      0   27468
                                             32 BANK2      6     6      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
                    _UART_Custom_ISR
 ---------------------------------------------------------------------------------
 (6) _UART_Custom_ISR                                     19    19      0   27378
                                             13 BANK2     19    19      0
                          _Backlight
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (8) _sprintf                                             22    16      6   25447
                                             73 BANK1      7     1      6
                                              0 BANK2     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (9) _vfprintf                                             7     4      3   24913
                                             66 BANK1      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (10) _vfpfcnvrt                                          15    13      2   24594
                                             78 BANK0      2     0      2
                                             54 BANK1     12    12      0
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _xtoa
 ---------------------------------------------------------------------------------
 (11) _xtoa                                               11     9      2    2829
                                              8 BANK0     11     9      2
                                _pad
 ---------------------------------------------------------------------------------
 (11) _read_prec_or_width                                  9     7      2     733
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     444
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) _efgtoa                                             55    50      5   19357
                                              0 BANK1     54    49      5
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (12) _strcpy                                              6     4      2     291
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (12) _pad                                                 7     4      3    2445
                                             11 COMMON     3     0      3
                                              4 BANK0      4     4      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (13) _fputs                                               7     6      1     888
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _fputc                                               8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (15) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (12) _memcpy                                              8     5      3     328
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (12) _labs                                                4     0      4     294
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (12) _floorf                                             20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (12) ___fpclassifyf                                      16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (12) ___fltol                                            10     6      4     457
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (12) ___flsub                                             8     0      8    2637
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fladd                                            20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (12) ___flneg                                             4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (12) ___flmul                                            26    18      8    3481
                                              6 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (12) ___flge                                             12     4      8    1246
                                             32 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (12) ___fleq                                             12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (12) ___fldiv                                            26    18      8    2185
                                             32 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) _LCD_Write_String                                     5     3      2     831
                                              6 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (9) _LCD_Write_Char                                       2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (8) _LCD_Set_Cursor                                       2     1      1     851
                                              6 COMMON     2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (8) _LCD_Clear                                            0     0      0     133
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (9) _LCD_CMD                                              2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (10) _LCD_Write_4Bit                                      2     2      0      89
                                              2 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (8) _Backlight                                            0     0      0      44
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (11) _IO_Expander_Write                                   1     1      0      44
                                              1 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (12) _I2C_Master_Write                                    1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (12) _I2C_Master_Stop                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (12) _I2C_Master_Start                                    0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (13) _I2C_Master_Wait                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP2_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _CCP2_Initialize
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
       _EUSART_RxCompleteCallbackRegister
     _I2C1_Initialize
       _I2C1_CallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_OverflowCallbackRegister
     _TMR2_Initialize
       _TMR2_OverflowCallbackRegister
     _TMR4_Initialize
       _TMR4_OverflowCallbackRegister
     _Timer0_Initialize
       _Timer0_OverflowCallbackRegister

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
     _UART_Custom_ISR *
       _Backlight
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _LCD_Clear
         _LCD_CMD
           _LCD_Write_4Bit
             _IO_Expander_Write
       _LCD_Set_Cursor
         _LCD_CMD
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Write_4Bit
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _efgtoa
               ___fladd
               ___fldiv
                 _ADC_GetConversion (ARG)
                 ___flmul (ARG)
                   _ADC_GetConversion (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _ADC_GetConversion (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
               _strcpy
             _fputc
             _read_prec_or_width
               ___wmul
             _xtoa
               _pad
   _I2C1_ERROR_ISR *
     _I2C1_ErrorEventHandler
       NULL(Fake) *
       _I2C1_DefaultCallback *
       _I2C1_EVENT_ERROR *
         _I2C1_EVENT_RESET
           _I2C1_BusReset
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
         _I2C1_EVENT_STOP
           _I2C1_Close
             _I2C1_ErrorInterruptClear
             _I2C1_InterruptClear
             _I2C1_StatusFlagsClear
           _I2C1_StopSend
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
         _I2C1_AckSend
         _I2C1_DataReceive
         _I2C1_IsRxBufFull
         _I2C1_NackSend
         _I2C1_ReceiveEnable
         _I2C1_RestartDisable
       _I2C1_EVENT_SEND_RD_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_SEND_WR_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
         _I2C1_DataTransmit
         _I2C1_EVENT_STOP
         _I2C1_RestartEnable
       _I2C1_ErrorInterruptClear *
   _I2C1_ISR *
     _I2C1_EventHandler
       _I2C1_EVENT_ERROR *
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
       _I2C1_EVENT_SEND_RD_ADDR *
       _I2C1_EVENT_SEND_WR_ADDR *
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
       _I2C1_InterruptClear *
       _I2C1_IsAddr *
       _I2C1_IsData *
       _I2C1_IsNack *
   _Timer0_OverflowISR *
     NULL(Fake) *
     _TMR1_DefaultOverflowCallback *
     _TMR2_DefaultOverflowCallback *
     _TMR4_DefaultOverflowCallback *
     _Timer0_DefaultOverflowCallback *
       _TMR0_Custom_ISR
         _ADC_GetConversion
         _Backlight
         _LCD_Clear
         _LCD_Set_Cursor
         _LCD_Write_String
         _TMR1_Start
         _TMR1_Stop
         ___fldiv
         ___flge
         ___flmul
         ___xxtofl
         _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     27      4D       9       96.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      4      22      11       42.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1AD      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1AD      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jun 21 11:29:19 2024

                    ?_TMR2_OverflowCallbackRegister 01BE                                        ___fldiv@aexp 0059  
                                      ___fldiv@bexp 0058                              ??_I2C1_DefaultCallback 0070  
                                      ___fldiv@sign 0051                                                  l19 1DC0  
                                                _RS 0167         __end_of_EUSART_OverrunErrorCallbackRegister 1E1B  
             ??_EUSART_OverrunErrorCallbackRegister 01C0                ?_EUSART_OverrunErrorCallbackRegister 01BE  
               _EUSART_OverrunErrorCallbackRegister 1E0C                                ??_Timer0_OverflowISR 007E  
                                   ??_I2C1_NackSend 0070                                     ??_I2C1_BusReset 0070  
                               ___wmul@multiplicand 0072                                     _timer0ReloadVal 016B  
                           __end_of_CCP1_Initialize 1DAB                                 __Umul8_16@word_mpld 0076  
                                               l317 1DAA                                                 l157 1E51  
                                               l343 1F13                                                 l503 1DF0  
                                               l184 1DE4                                                 l338 07FF  
                                               l523 1D97                                                 l375 10B9  
                                               l384 1007                                                 l720 1D4C  
                                               l802 1D58                                                 l571 1E65  
                                               l627 1EFA                                                 l469 12F0  
                                               l649 1DA0                                                 l691 1F63  
                                               l595 1D52                                                 l778 1ECE  
                                               l983 1E0B                                                 l991 1DD8  
                                               l896 1133                                                 l987 1E1A  
                                               _PR2 001B                                                 _PR4 0414  
                                   _timer1ReloadVal 015D                                                 _pad 1163  
                         __end_of_I2C1_DataTransmit 1D24                                     _TMR2_Initialize 1E52  
                                               wreg 0009                            _I2C1_ErrorInterruptClear 1CDC  
                                      ___flmul@aexp 0038                                        ___flmul@bexp 0039  
                                      ___flmul@sign 0033                                        ___flmul@temp 003E  
                                      ___flmul@prod 003A                                     __end_of_LCD_CMD 1E90  
                                      _BAUD1CONbits 019F                                 LCD_Write_String@Str 0076  
                                    _LCD_Set_Cursor 10BA                                    __end_of_I2C1_ISR 1D1B  
                                      ___fltol@exp1 0079                                                l6100 1000  
                                              l6102 1003                                                l6110 12A0  
                                              l6104 1005                                                l6200 112F  
                                              l6040 1DD9                                                l6120 12B4  
                                              l6112 12A3                                                l6202 1130  
                                              l6042 1DE0                                                l6130 12BD  
                                              l6122 12B6                                                l6114 12A5  
                                              l6106 129B                                                l6050 1D47  
                                              l6210 1EED                                                l6060 1E04  
                                              l6204 1131                                                l6044 1D8F  
                                              l6140 12C8                                                l6132 12BF  
                                              l6124 12B8                                                l6116 12A7  
                                              l6108 129E                                                l6220 1F4B  
                                              l6052 1D53                                                l6212 1EF0  
                                              l6300 119E                                                l6070 1DBA  
                                              l6062 1E0C                                                l6054 1DCD  
                                              l6150 12D7                                                l6142 12CB  
                                              l6134 12C1                                                l6126 12B9  
                                              l6118 12AA                                                l6230 1F60  
                                              l6222 1F4D                                                l6046 1D4D  
                                              l6214 1EF8                                                l6206 1EE5  
                                              l6302 119F                                                ?_pad 007B  
                                              l6072 1DBB                                                l6064 1E13  
                                              l6056 1DD4                                                l6080 1E43  
                                              l6160 12E6                                                l6152 12DA  
                                              l6144 12CE                                                l6136 12C4  
                                              l6128 12BA                                                l6232 1F61  
                                              l6224 1F4F                                                l6240 1E59  
                                              l6048 1D98                                                l6216 1EF9  
                                              l6208 1EEA                                                l6304 11A0  
                                              l6074 1DBC                                                l6066 1DB6  
                                              l6090 1DA8                                                l6058 1DFD  
                                              l6082 1E44                                                l6170 12EC  
                                              l6162 12E8                                                l6154 12DD  
                                              l6146 12D1                                                l6138 12C6  
                                              l6226 1F56                                                l6218 1F49  
                                              l6242 1E61                                                l6234 1E52  
                                              l6250 1EC0                                                l6306 11A8  
                                              l6076 1DBE                                                l6068 1DB9  
                                              l6092 07F5                                                l6180 1109  
                                              l6084 1E47                                                l6260 1DE8  
                                              l6172 12ED                                                l6164 12E9  
                                              l6156 12E0                                                l6148 12D4  
                                              l6228 1F5E                                                l6244 1E63  
                                              l6236 1E56                                                l6252 1EC1  
                                              l6308 11B7                                                l6270 1F0F  
                                              l6262 1EFB                                                l6094 07F8  
                                              l6190 111A                                                l6182 1111  
                                              l6086 1E4F                                                l6078 1E3E  
                                              l6174 12EE                                                l6166 12EA  
                                              l6158 12E3                                                l6238 1E58  
                                              l6254 1EC9                                                l6246 1EBA  
                                              l6264 1F00                                                l6088 1DA1  
                                              l6096 07F9                                                l6192 111B  
                                              l6184 1114                                                l6176 12EF  
                                              l6168 12EB                                                l6256 1ECB  
                                              l6248 1EBE                                                l6266 1F05  
                                              l6098 07FB                                                l6194 1122  
                                              l6186 1116                                                l6178 1107  
                                              l6258 1DE5                                                l6290 1199  
                                              l6268 1F0B                                                l6196 112A  
                                              l6188 1118                                                l6276 1095  
                                              l6292 119A                                                l6284 1193  
                                              l6198 112D                                                l6294 119B  
                                              l6286 1196                                                l6296 119B  
                                              l6288 1198                                                l6298 119C  
                                              STR_1 18D7                                                STR_2 188F  
                                              STR_3 183C                                                STR_4 18CE  
                                              STR_5 188F                                                STR_6 1872  
                                              STR_7 189D                                                STR_8 1881  
                                              STR_9 18E0                                   _I2C1_Deinitialize 0000  
                                              _LATA 010C                                                _LATB 010D  
                                              _LATC 010E                                                _T2PR 001B  
                                              _T4PR 0414                                                u5400 1F05  
                                              u5401 1F04                                                u5415 1F07  
                                              u5360 1DE0                                                u5361 1DDF  
                                              i1l34 1F25                                                u5370 1DD4  
                                              u5371 1DD3                                                u5427 11B0  
                                              u5380 1E04                                                i1l37 1F2D  
                                              u5381 1E03                                                u5437 11BF  
                                              u5390 1E13                                                u5391 1E12  
                                              _TMR0 0015                                                _TMR2 001A  
                                              _TMR4 0413                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                         EUSART_ReceiveISR@regValue 0144                          __end_of_CCP2_LoadDutyValue 1F14  
                                 ?_LCD_Write_String 0076                                     ??_I2C1_StopSend 0070  
                                              _dbuf 0220                             __end_of_CCP2_Initialize 0800  
                                              _labs 1E90                                                _main 1193  
                                              _tmr1 18B6                                                _prec 0157  
                                              pad@i 0025                                                pad@p 007C  
                                              fsr0h 0005                                                fsr1h 0007  
                                              indf0 0000                                                fsr0l 0004  
                                              indf1 0001                                                fsr1l 0006  
                                              btemp 007E                                                _xtoa 14B9  
                       _INT_DefaultInterruptHandler 0000                                       ___fpclassifyf 143A  
                                              start 0041                                  ??_LCD_Write_String 0078  
        __end_of_EUSART_DefaultOverrunErrorCallback 1CFB                ??_EUSART_DefaultOverrunErrorCallback 0070  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 1CF7  
                                   ___fldiv@new_exp 0052                     __end_of_INT_SetInterruptHandler 1D98  
                              LCD_Write_4Bit@Nibble 0073                                     _I2C1_EVENT_IDLE 1D0F  
                                   _I2C1_EVENT_NACK 1D35                                          _i2c1Status 0147  
                                   _I2C1_EVENT_STOP 1D7E                                               ??_pad 0024  
                                  ?_UART_Custom_ISR 0070                             __end_of_TMR0_Custom_ISR 0BB9  
                                  ?_I2C_Master_Wait 0070                                    ?_I2C_Master_Stop 0070  
                                     ___fltol@sign1 0078                      ??_TMR1_DefaultOverflowCallback 0070  
                                 __end_of_I2C1_Host 1860                                               ?_labs 0070  
                                   __end_of___fladd 0DC5                                               ?_main 0070  
                                   __end_of___fldiv 0A01                                     __end_of___flneg 1DB6  
                                             STR_12 18E4                                     __end_of___flmul 1000  
                                   __end_of___flsub 1FC0                                     __end_of___fltol 13C2  
                                             ?_xtoa 0028                                               _T1CON 0018  
                                             _T2CON 001C                                               _T4CON 0415  
                                             _IOCAF 0393                                               _T2HLT 001D  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                             _T4HLT 0416                                               i1l211 1CD8  
                                             i1l220 1D5F                                               _T2TMR 001A  
                                             i1l301 1CDE                                               i1l205 124C  
                                             i1l214 1D12                                               i1l304 1D02  
                                             i1l208 106F                                               i1l217 1D7D  
                                             i1l241 1D40                                               i1l250 1CE7  
                                             _T2RST 001F                                               i1l227 1162  
                                             i1l235 1209                                               i1l244 1D85  
                                             i1l253 1D23                                               i1l262 1CF0  
                                             i1l238 1D3A                                               i1l190 1D16  
                                             i1l271 1CE4                                               i1l247 1D66  
                                             i1l256 1CFE                                               i1l280 1D46  
                                             i1l265 1CED                                               i1l513 003F  
                                             i1l274 1D06                                               i1l259 1CEA  
                                             i1l283 1D28                                               i1l187 1D1A  
                                             _T4TMR 0413                                               i1l277 1D0E  
                                             i1l286 1D6D                                               i1l199 1EB9  
                                             i1l289 1D0A                                               i1l298 1CE1  
                                             _T4RST 0418                                               i1l723 1CDA  
                                             i1l652 1D1E                                               i1l805 1CDB  
                                             i1l646 1029                                               i1l694 1CF3  
                                             i1l598 1CD9                                               i1l697 1CF6  
                                             i1l970 1439                                               i1l976 1CD6  
                                             i1l979 1CFA                                               _UART1 1800  
                                      vfpfcnvrt@fmt 006E                                               _TMR1H 0017  
                                             _TMR1L 0016                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             _RXPPS 0E24                            ?_I2C1_EVENT_SEND_RD_ADDR 0070  
                                   _TMR4_Initialize 1EBA                              __end_of_LCD_Set_Cursor 10E0  
                                 ??_I2C1_Initialize 01C0                                         ?_TMR1_Start 0070  
                                             _flags 0165                             ??_I2C1_CallbackRegister 01C0  
                               read_prec_or_width@c 0020                                 read_prec_or_width@n 0021  
                                             _fputc 0800                                               _fputs 1070  
                                 ?_I2C1_IsRxBufFull 0070                                               labs@a 0070  
                          ?_I2C1_EVENT_SEND_WR_ADDR 0070                                               pad@fp 0027  
                                             _width 0155                                               _putch 1CD7  
                    ??_TMR4_DefaultOverflowCallback 0070                             __end_of_TMR1_Initialize 1F64  
                                             pclath 000A                               I2C1_DataTransmit@data 0070  
                                ??_I2C1_IsRxBufFull 0070                                               status 0003  
                                             wtemp0 007E                                     __end_of_sprintf 2000  
                                    ?___fpclassifyf 0070                                               xtoa@c 0030  
                                             xtoa@d 0028                                               xtoa@i 0031  
                                             xtoa@p 002E                                               xtoa@w 002B  
                                      ??_I2C1_Close 0070                                      _LCD_Write_4Bit 1E66  
                                    _LCD_Write_Char 1ECF                                     __initialization 0043  
                          ??_I2C1_ErrorEventHandler 0074                                        __end_of_labs 1EA5  
                                      __end_of_main 11C9                                        __end_of_tmr1 18C2  
                                      __end_of_xtoa 153A                                   _IO_Expander_Write 1E2B  
                                  _I2C1_EVENT_ERROR 1D3B                                    _I2C1_EVENT_RESET 1D60  
                           __end_of_TMR2_Initialize 1E66                         ?_INTERRUPT_InterruptManager 0070  
                                ?_IO_Expander_Write 0070                                              ??_labs 0074  
                                            ??_main 01C0                                    ?_CCP1_Initialize 0070  
                                            ??_xtoa 002A                                   __end_of_LCD_Clear 1D8F  
                                         ??_LCD_CMD 0074                          __end_of_read_prec_or_width 1352  
                                 ?_I2C_Master_Start 0070                                   ?_I2C_Master_Write 0070  
  EUSART_RxCompleteCallbackRegister@callbackHandler 01BE  EUSART_OverrunErrorCallbackRegister@callbackHandler 01BE  
EUSART_FramingErrorCallbackRegister@callbackHandler 01BE                I2C1_CallbackRegister@callbackHandler 01BE  
                               ??_IO_Expander_Write 0071                                     ?_LCD_Set_Cursor 0076  
                                __end_of_I2C1_Close 1EBA                                  ??_I2C_Master_Start 0070  
                                            _ADCON0 009D                                              _ADCON1 009E  
                                ??_I2C_Master_Write 0070                                              _ADCON2 009F  
                        _EUSART_OverrunErrorHandler 0159                                              ?_fputc 0070  
                                            ?_fputs 0078                                              _ADRESH 009C  
                                            _ADRESL 009B                                              _CCPR1H 0292  
                                            _CCPR2H 0299                                              _CCPR1L 0291  
                                            _CCPR2L 0298               __end_of_TMR1_OverflowCallbackRegister 1D4D  
                     _TMR1_OverflowCallbackRegister 1D47                                              _ANSELA 018C  
                                            ?_putch 0070                                              _ANSELB 018D  
                                            _ANSELC 018E                                              _BORCON 0116  
                                            _T1GCON 0019                                              _RC1REG 0199  
                                            _RA2PPS 0E92                                              _RC1STA 019D  
                                            _RC3PPS 0EA3                                              i1l1030 1DCC  
                                            i1l1033 1D2E                                              i1l1041 1E27  
                                            i1l1042 1E2A                                              i1l1027 1DC1  
                                            i1l1051 1E7A                                              _RC4PPS 0EA4  
                                            i1l1036 1D34                                              i1l1054 1E8F  
                                            i1l1039 1E22                                              i1l1063 1F80  
                                            i1l1151 0A39                                              i1l1048 1E3D  
                                            i1l1072 10DF                                              i1l1144 07F4  
                                            i1l1057 1EE4                                              i1l1402 129A  
                                            i1l1154 0A41                                              i1l1075 1D75  
                                            i1l1227 1F8B                                              _RC5PPS 0EA5  
                                            i1l1413 15C4                                              i1l1405 1557  
                                            i1l1421 13C1                                              i1l1229 1F9F  
                                            i1l1158 0B01                                              i1l1087 1D8E  
                                            i1l1431 13C1                                              i1l1159 0BB8  
                                            i1l1600 0986                                              i1l1408 15AB  
                                            i1l1417 1DB5                                              _ODCONA 028C  
                                            _ODCONB 028D                                              _RC6PPS 0EA6  
                                            _ODCONC 028E                                              i1l1532 0C8C  
                                            i1l4100 0BEC                                              i1l1428 13AC  
                                            i1l1605 09D2                                              i1l1541 0DC4  
                                            i1l1606 09EC                                              i1l1630 0F7F  
                                            i1l1534 0C6A                                              i1l4110 0C03  
                                            i1l4102 0BF0                                              i1l1608 09F9  
                                            i1l1624 0FFF                                              i1l4200 0D08  
                                            i1l4120 0C1D                                              i1l1528 0C0E  
                                            i1l4112 0C04                                              i1l4104 0BF1  
                                            i1l5000 1520                                              i1l1553 0D40  
                                            i1l1721 1192                                              i1l1570 0DBD  
                                            i1l1562 0D9A                                              i1l4202 0D0D  
                                            i1l4130 0C27                                              i1l4122 0C1F  
                                            i1l4106 0BF6                                              i1l4114 0C06  
                                            i1l5010 1306                                              i1l5002 152D  
                                            i1l1643 103C                                              i1l1571 0DC4  
                                            i1l4300 1E28                                              i1l1396 1269  
                                            i1l1636 0FF3                                              i1l4220 0D47  
                                            i1l4212 0D34                                              i1l4204 0D16  
                                            i1l4140 0C31                                              i1l4132 0C29  
                                            i1l4124 0C21                                              i1l4116 0C14  
                                            i1l4108 0BFB                                              i1l4060 081A  
                                            i1l4052 0800                                              i1l1732 06A8  
                                            i1l5020 134D                                              i1l5012 130E  
                                            i1l5100 1769                                              i1l1397 1285  
                                            i1l1645 104C                                              i1l1549 0D1E  
                                            i1l1717 116B                                              i1l4070 1DC6  
                                            i1l5030 1E67                                              i1l4230 0D55  
                                            i1l4222 0D49                                              i1l4214 0D3B  
                                            i1l4206 0D26                                              i1l4142 0C33  
                                            i1l4134 0C2B                                              i1l4126 0C23  
                                            i1l4118 0C18                                              i1l4150 0C3B  
                                            i1l1574 1FBF                                              i1l4062 083A  
                                            i1l4054 0805                                              i1l4310 1F90  
                                            i1l5014 131C                                              i1l5006 12F3  
                                            i1l5110 17A7                                              i1l5102 1774  
                                            i1l1670 166F                                              i1l1559 0D62  
                                            i1l1815 17FF                                              i1l5032 1E6C  
                                            i1l1584 08A8                                              i1l4400 0857  
                                            i1l4320 1261                                              i1l4240 0D6C  
                                            i1l4232 0D59                                              i1l4224 0D4E  
                                            i1l4216 0D3F                                              i1l4208 0D2B  
                                            i1l4160 0C74                                              i1l4152 0C3C  
                                            i1l4144 0C35                                              i1l4136 0C2D  
                                            i1l4128 0C25                                              i1l4080 0BC3  
                                            i1l4072 0BB9                                              i1l4064 084C  
                                            i1l4056 080A                                              i1l1904 1F48  
                                            i1l4312 1F95                                              i1l4304 1F81  
                                            i1l5016 1331                                              i1l5008 12F5  
                                            i1l5120 17D2                                              i1l5112 17AF  
                                            i1l5104 177F                                              i1l5040 168E  
                                            i1l5024 1CDF                                              i1l5200 1D0B  
                                            i1l1729 00E1                                              i1l1681 163B  
                                            i1l5034 1E71                                              i1l1586 0A00  
                                            i1l4410 0867                                              i1l4402 085B  
                                            i1l4322 127D                                              i1l4330 153A  
                                            i1l4250 0DA4                                              i1l4242 0D74  
                                            i1l4234 0D5F                                              i1l4218 0D44  
                                            i1l4226 0D50                                              i1l4170 0C90  
                                            i1l4162 0C78                                              i1l4154 0C54  
                                            i1l4146 0C37                                              i1l4138 0C2F  
                                            i1l4082 0BC8                                              i1l4090 0BD8  
                                            i1l4074 0BBC                                              i1l4058 080F  
                                            i1l4314 1F9B                                              i1l4306 1F83  
                                            i1l5018 1339                                              i1l5114 17BF  
                                            i1l5106 1793                                              i1l5122 17DB  
                                            i1l5050 16C1                                              i1l5042 1696  
                                            i1l1690 1FFF                                              i1l5026 1CDC  
                                            i1l5202 1CE8                                              i1l1682 1647  
                                            i1l1674 1621                                              i1l4068 1DC1  
                                            i1l5220 1F71                                              i1l4500 096A  
                                            i1l4420 087F                                              i1l4412 086C  
                                            i1l4404 085D                                              i1l4324 1297  
                                            i1l4340 158F                                              i1l4332 154F  
                                            i1l4260 0DB8                                              i1l4252 0DAC  
                                            i1l4244 0D78                                              i1l4180 0CAA  
                                            i1l4228 0D54                                              i1l4172 0C95  
                                            i1l4164 0C79                                              i1l4156 0C6E  
                                            i1l4148 0C39                                              i1l4092 0BE0  
                                            i1l4084 0BCD                                              i1l4076 0BBE  
                                            i1l1748 02D1                                              i1l4308 1F87  
                                            i1l5060 16E6                                              i1l5052 16CA  
                                            i1l5044 169A                                              i1l5036 1672  
                                            i1l5028 1CFF                                              i1l5140 1EB6  
                                            i1l5132 1EA5                                              i1l5204 1D60  
                                            i1l5212 1CF1                                              i1l1668 15E8  
                                            i1l5150 1E83                                              i1l5230 10C8  
                                            i1l5222 1F75                                              i1l4510 098B  
                                            i1l4502 096B                                              i1l4430 0890  
                                            i1l4422 0884                                              i1l4414 0874  
                                            i1l4406 0861                                              i1l4326 1299  
                                            i1l4318 124D                                              i1l4342 1593  
                                            i1l4334 156B                                              i1l4270 1034  
                                            i1l4350 1DAB                                              i1l4262 0DBF  
                                            i1l4254 0DB1                                              i1l4246 0D96  
                                            i1l4238 0D67                                              i1l4190 0CB9  
                                            i1l4182 0CAE                                              i1l4166 0C82  
                                            i1l4158 0C72                                              i1l4094 0BE3  
                                            i1l4086 0BD5                                              i1l4078 0BC2  
                                            i1l1854 06EA                                              i1l1758 04F8  
                                            i1l5070 16FE                                              i1l5062 16E9  
                                            i1l5054 16D1                                              i1l5046 16AD  
                                            i1l5038 1685                                              i1l5126 17E5  
                                            i1l1838 1FDF                                              i1l5134 1EA7  
                                            i1l5142 1CE2                                              i1l5206 1D63  
                                            i1l5214 1CF4                                              i1l1855 0793  
                                            i1l5240 1D86                                              i1l5232 10CE  
                                            i1l5224 10BB                                              i1l5152 1ED0  
                                            i1l5216 1F64                                              i1l4512 0990  
                                            i1l4520 09B8                                              i1l4504 096F  
                                            i1l4440 08B0                                              i1l4432 0895  
                                            i1l4424 0886                                              i1l4416 0875  
                                            i1l4408 0862                                              i1l4344 15C1  
                                            i1l4336 1573                                              i1l4272 1038  
                                            i1l4600 0E9D                                              i1l4352 1DB3  
                                            i1l4264 0DC3                                              i1l4256 0DB2  
                                            i1l4248 0D9F                                              i1l4192 0CC2  
                                            i1l4184 0CB2                                              i1l4176 0C9E  
                                            i1l4168 0C86                                              i1l4096 0BE9  
                                            i1l4088 0BD6                                              i1l4360 135B  
                                            i1l1848 14B8                                              i1l1872 10FA  
                                            i1l4280 1072                                              i1l5080 1739  
                                            i1l5072 170E                                              i1l5056 16D5  
                                            i1l5048 16B6                                              i1l5160 1FD3  
                                            i1l5144 1CFB                                              i1l5136 1EB0  
                                            i1l5208 1D65                                              i1l5304 1D67  
                                            i1l5312 1D24                     Timer0_OverflowISR@CountCallBack 015F  
                                            i1l4290 1D2C                                              i1l5146 1E7C  
                                            i1l5242 1D8A                                              i1l5226 10BC  
                                            i1l5234 10D4                                              i1l5154 1ED3  
                                            i1l5218 1F67                                              i1l4530 09EF  
                                            i1l4522 09C5                                              i1l4514 0998  
                                            i1l4506 0983                                              i1l4450 08CE  
                                            i1l4442 08BC                                              i1l4434 089D  
                                            i1l4426 088A                                              i1l4418 0877  
                                            i1l4346 15C3                                              i1l4338 1577  
                                            i1l4274 1043                                              i1l4266 102B  
                                            i1l4610 0ED3                                              i1l4602 0EA8  
                                            i1l4354 1DB5                                              i1l4258 0DB6  
                                            i1l4186 0CB4                                              i1l4178 0CA6  
                                            i1l4194 0CC7                                              i1l4098 0BEA  
                                            i1l4370 137E                                              i1l4282 1075  
                                            i1l5090 1758                                              i1l5058 16DF  
                                            i1l5066 16EB                                              i1l5162 1FDD  
                                            i1l5250 1FEA                                              i1l5138 1EB3  
                                            i1l5322 1D76                                              i1l5330 1D5E  
                                            i1l5170 1F20                                              i1l5410 0A0A  
                                            i1l1859 078B                                              i1l1875 1106  
                                            i1l1795 1351                                              i1l1787 1539  
                                            i1l1779 14CD                                              i1l4292 1D2F  
                                            i1l5236 1D6E                                              i1l5148 1E7E  
                                            i1l5228 10C2                                              i1l4532 09F3  
                                            i1l4524 09E0                                              i1l4516 099C  
                                            i1l4460 08F7                                              i1l4444 08C0  
                                            i1l4436 089E                                              i1l4428 088B  
                                            i1l4276 1048                                              i1l4268 102D  
                                            i1l4620 0F1E                                              i1l4612 0EDA  
                                            i1l4604 0EAF                                              i1l4540 0DC5  
                                            i1l4196 0CDE                                              i1l4188 0CB8  
                                            i1l4380 138C                                              i1l4372 1380  
                                            i1l4364 1364                                              i1l4700 1484  
                                            i1l4284 1081                                              i1l5092 175F  
                                            i1l5076 1721                                              i1l5068 16F3  
                                            i1l5156 1FC2                                              i1l5252 1FF5  
                                            i1l5244 1FE2                                              i1l5180 1CEE  
                                            i1l5340 113F                                              i1l5316 1D0F  
                                            i1l5324 1D7C                                              i1l5308 1D41  
                                            i1l5500 1215                                              i1l5172 1F23  
                                            i1l5260 15D0                                              i1l5420 0A33  
                                            i1l5412 0A21                                              i1l1869 1EA4  
                                            i1l4294 1D32                                              i1l5238 1D71  
                                            i1l4534 09F5                                              i1l4526 09E3  
                                            i1l4518 09B4                                              i1l4470 0918  
                                            i1l4462 08FF                                              i1l4454 08D7  
                                            i1l4438 08A0                                              i1l4630 0F53  
                                            i1l4622 0F35                                              i1l4614 0EEC  
                                            i1l4606 0EBA                                              i1l4550 0DD5  
                                            i1l4542 0DC9                                              i1l4198 0D02  
                                            i1l4390 13B1                                              i1l4374 1384  
                                            i1l4382 139C                                              i1l4366 1375  
                                            i1l4358 1352                                              i1l4702 1489  
                                            i1l4286 1086                                              i1l5094 1764  
                                            i1l5086 1746                                              i1l5078 1729  
                                            i1l5158 1FC7                                              i1l5246 1FE6  
                                            i1l5350 115A                                              i1l5342 114E  
                                            i1l5334 1134                                              i1l5318 1D11  
                                            i1l5182 1D7E                                              i1l5510 1238  
                                            i1l5502 121D                                              i1l5174 1F29  
                                            i1l5166 1F15                                              i1l5270 15FC  
                                            i1l5262 15E0                                              i1l5430 0A89  
                                            i1l5422 0A37                                              i1l5414 0A2E  
                                            i1l5406 0A01                                              i1l1887 0856  
                                            i1l1895 1094                                              i1l4288 1D29  
                                            i1l4296 1E1C                                              i1l4528 09EB  
                                            i1l4480 093B                                              i1l4472 0919  
                                            i1l4464 0901                                              i1l4456 08E7  
                                            i1l4448 08C9                                              i1l4640 0F64  
                                            i1l4632 0F54                                              i1l4624 0F3C  
                                            i1l4616 0EF7                                              i1l4608 0EC1  
                                            i1l4560 0DF1                                              i1l4552 0DDA  
                                            i1l4544 0DCB                                              u300_20 0D0D  
                                            i1l4392 13B6                                              i1l4368 1376  
                                            i1l4712 14B4                                              i1l4720 1E90  
                                            i1l5096 1767                                              i1l5088 174F  
                                            i1l5248 1FE8                                              i1l5192 1CE5  
                                            i1l5352 115D                                              i1l5344 1151  
                                            i1l5336 1134                                              i1l5328 1D59  
                                            i1l5360 11CB                                              i1l5184 1D84  
                                            i1l5512 104D                                              i1l5504 1223  
                                            i1l5168 1F1F                                              i1l5280 1628  
                                            i1l5272 1607                                              i1l5264 15F0  
                                            i1l5256 15C7                                              i1l5440 0AE9  
                                            i1l5432 0AA7                                              i1l5424 0A3E  
                                            i1l5416 0A30                                              i1l5408 0A04  
                                            u300_21 0D0C                                              i1l4298 1E1F  
                                            i1l4490 0956                                              i1l4466 0906  
                                            i1l4474 0920                                              i1l4482 093F  
                                            i1l4458 08EF                                              i1l4650 0F89  
                                            i1l4642 0F68                                              i1l4634 0F5B  
                                            i1l4626 0F48                                              i1l4618 0F09  
                                            i1l4570 0E02                                              i1l4562 0DF3  
                                            i1l4554 0DE2                                              i1l4546 0DCF  
                                            i1l4394 1FA0                                              i1l4706 148E  
                                            i1l4730 06C1                                              i1l4722 1E94  
                                            i1l1898 1CD7                                              i1l4810 014C  
                                            i1l4802 011F                                              i1l5178 1D20  
                                            i1l5346 1156                                              i1l5354 1161  
                                            i1l5338 113B                                              i1l5370 11F2  
                                            i1l5362 11D3                                              i1l5514 1052  
                                            i1l5506 122B                                              i1l5290 165D  
                                            i1l5282 1631                                              i1l5274 160E  
                                            i1l5258 15CC                                              i1l5450 0B85  
                                            i1l5434 0AC7                                              i1l5442 0AF1  
                                            i1l5426 0A46                                              i1l5418 0A31  
                                            i1l4492 095A                                              i1l4484 0945  
                                            i1l4476 0932                                              i1l4468 0914  
                                            i1l4660 0FBE                                              i1l4652 0F91  
                                            i1l4644 0F7C                                              i1l4628 0F4F  
                                            i1l4636 0F5F                                              i1l4580 0E1E  
                                            i1l4572 0E0A                                              i1l4564 0DF7  
                                            i1l4556 0DE4                                              i1l4548 0DD0  
                                            i1l4396 1FA3                                              i1l4388 13A3  
                                            i1l4708 1494                                              i1l4732 06DC  
                                            i1l4724 1E95                                              i1l4716 1F2F  
                                            i1l4900 0506                                              i1l4804 0131  
                                            i1l5700 079F                                              i1l5196 1D03  
                                            i1l5188 1D07                                              i1l5348 1157  
                                            i1l5380 1208                                              i1l5372 11F8  
                                            i1l5364 11DA                                              i1l5516 1055  
                                            i1l5508 1233                                              i1l5292 1662  
                                            i1l5284 1635                                              i1l5276 1612  
                                            i1l5268 15F9                                              i1l5452 0B8B  
                                            i1l5444 0AF4                                              i1l5436 0ACA  
                                            i1l5428 0A49                                              i1l4494 095B  
                                            i1l4486 094D                                              i1l4478 0933  
                                            i1l4670 0FEC                                              i1l4662 0FC8  
                                            i1l4654 0F95                                              i1l4638 0F63  
                                            i1l4590 0E57                                              i1l4574 0E0C  
                                            i1l4566 0DF8                                              i1l4558 0DEC  
                                            i1l4750 0763                                              i1l4742 071C  
                                            i1l4734 06E9                                              i1l4718 1F31  
                                            i1l4910 057A                                              i1l4902 0508  
                                            i1l4830 0207                                              i1l4822 017F  
                                            i1l4806 0137                                              i1l4814 015C  
                                            i1l5710 07E0                                              i1l5702 07B6  
                                            i1l5198 1CEB                                              i1l5374 11FC  
                                            i1l5366 11E9                                              i1l5358 11C9  
                                            i1l5518 1069                                              i1l5294 1666  
                                            i1l5286 163F                                              i1l5278 161A  
                                            i1l5454 0BA4                                              i1l5446 0AFA  
                                            i1l5438 0AD0                                              i1l4496 0962  
                                            i1l4488 094F                                              i1l4672 0FF0  
                                            i1l4664 0FD6                                              i1l4656 0FAD  
                                            i1l4648 0F84                                              i1l4592 0E64  
                                            i1l4584 0E27                                              i1l4576 0E14  
                                            i1l4568 0DFD                                              u301_20 0D26  
                                            i1l4752 076C                                              i1l4744 0733  
                                            i1l4736 06EF                                              i1l4728 06A9  
                                            i1l4760 10E6                                              i1l4680 1165  
                                            i1l4920 0592                                              i1l4912 057F  
                                            i1l4904 050B                                              i1l4832 0230  
                                            i1l4824 018C                                              i1l4816 0165  
                                            i1l4808 0143                                              i1l5712 07E7  
                                            i1l5704 07C3                                              i1l5376 1202  
                                            i1l5368 11EE                                              i1l5384 1D35  
                                            i1l5392 1D3B                                              i1l5296 1667  
                                            i1l5288 1649                                              i1l5456 0BAB  
                                            i1l5448 0B83                                              u301_21 0D25  
                                            i1l5714 1CF7                                              i1l4498 0966  
                                            i1l4674 0FF1                                              i1l4666 0FDF  
                                            i1l4658 0FB1                                              i1l4594 0E7C  
                                            i1l4586 0E32                                              i1l4578 0E19  
                                            i1l4754 0783                                              i1l4746 073B  
                                            i1l4738 0707                                              i1l4762 10EC  
                                            i1l4690 118B                                              i1l4682 1169  
                                            i1l4922 0595                                              i1l4914 0583  
                                            i1l4930 05A8                                              i1l4906 0563  
                                            i1l4850 02CC                                              i1l4834 023A  
                                            i1l4842 0293                                              i1l4826 01B8  
                                            i1l4818 0167                                              i1l4770 0086  
                                            i1l5706 07C6                                              i1l5378 1205  
                                            i1l5386 1D35                                              i1l5394 1D3B  
                                            i1l4676 0FF7                                              i1l4668 0FE1  
                                            i1l4596 0E89                                              i1l4588 0E3F  
                                            i1l4692 143A                                              i1l4748 074C  
                                            i1l4764 10F0                                              i1l4684 116E  
                                            i1l4940 060C                                              i1l4932 05AE  
                                            i1l4924 059C                                              i1l4916 058A  
                                            i1l4908 0575                                              i1l4860 02ED  
                                            i1l4852 02D9                                              i1l4836 0266  
                                            i1l4828 01E0                                              i1l4844 02BA  
                                            i1l4780 00C6                                              i1l4772 008E  
                                            i1l5708 07CC                                              i1l5388 1D39  
                                            i1l5396 1D3F                                              i1l5716 1D17  
                                            i1l5740 101B                                              i1l5900 0017  
                                            i1l4766 1E2C                                              i1l4598 0E96  
                                            i1l4694 1452                                              i1l4758 10E1  
                                            i1l4686 1178                                              i1l4950 065C  
                                            i1l4942 0638                                              i1l4934 05B6  
                                            i1l4926 05A0                                              i1l4918 058E  
                                            i1l4870 030A                                              i1l4862 02F3  
                                            i1l4854 02DF                                              i1l4846 02BF  
                                            i1l4838 026A                                              i1l4790 00E3  
                                            i1l4782 00CE                                              i1l4774 00AC  
                                            i1l5718 1D13                                              i1l5742 1021  
                                            i1l5910 0031                                              i1l5902 001C  
                                            u310_20 0D66                                              u302_20 0D2B  
                                            i1l4696 1467                                              i1l4688 117D  
                                            i1l4960 0689                                              i1l4952 0661  
                                            i1l4944 063C                                              i1l4936 05BA  
                                            i1l4928 05A4                                              i1l4880 0441  
                                            i1l4872 03D3                                              i1l4856 02E3  
                                            i1l4864 02F7                                              i1l4848 02C4  
                                            i1l4792 00F4                                              i1l4784 00D3  
                                            i1l4776 00AF                                              i1l4768 0085  
                                            i1l5760 13C2                                              i1l5496 120A  
                                            i1l5744 1026                                              i1l5736 1008  
                                            i1l5912 0034                                              i1l5904 0021  
                                            u310_21 0D65                                              u302_21 0D2A  
                                            i1l4698 146D                                              i1l4962 068E  
                                            i1l4954 0667                                              i1l4938 05BE  
                                            i1l4946 0640                                              i1l4890 04BD  
                                            i1l4882 0459                                              i1l4874 03D7  
                                            i1l4866 02F9                                              i1l4858 02EB  
                                            i1l4794 00FA                                              i1l4786 00D8  
                                            i1l4778 00C3                                              i1l4970 14BB  
                                            i1l5770 13F3                                              i1l5762 13C4  
                                            i1l5498 120D                                              i1l5738 1009  
                                            i1l5914 0038                                              i1l5906 0027  
                                            i1l4964 0699                                              i1l4956 0675  
                                            i1l4948 064E                                              i1l4892 04C2  
                                            i1l4884 045E                                              i1l4876 03E5  
                                            i1l4868 0301                                              i1l4796 0106  
                                            i1l4788 00DD                                              i1l4980 14E1  
                                            i1l4972 14C0                                              i1l5780 1419  
                                            i1l5772 13F8                                              i1l5764 13D7  
                                            i1l5916 003C                                              i1l5908 002C  
                                            i1l4966 069D                                              i1l4958 067C  
                                            i1l4894 04EE                                              i1l4886 0466  
                                            i1l4878 0437                                              i1l4798 010F  
                                            i1l4990 14FA                                              i1l4982 14E4  
                                            i1l4974 14C6                                              i1l5790 142F  
                                            i1l5782 141D                                              i1l5774 13FD  
                                            i1l5766 13DC                                              i1l5694 1D1B  
                                            u311_20 0D6C                                              i1l4896 04F4  
                                            i1l4888 0483                                              i1l4992 14FE  
                                            i1l4984 14EA                                              i1l4976 14D9  
                                            i1l5696 0796                                              i1l5792 1431  
                                            i1l5784 1421                                              i1l5776 140E  
                                            i1l5768 13ED                                              u311_21 0D6B  
                                            i1l4898 0505                                              i1l4994 1502  
                                            i1l4986 14EF                                              i1l4978 14DC  
                                            i1l5698 0799                                              i1l5794 1435  
                                            i1l5778 1414                                              i1l4988 14F3  
                                            i1l4996 150B                                              i1l5788 1428  
                                            i1l5892 0006                                              u303_25 0D35  
                                            i1l4998 1519                                              i1l5894 000A  
                                            u320_20 1038                                              u400_20 0FBE  
                                            u312_20 0D78                                              u304_20 0D3F  
                                            i1l5896 000F                                              u320_21 1037  
                                            u400_21 0FBD                                              u312_21 0D77  
                                            u304_21 0D3E                                              _INLVLA 038C  
                                            i1l5898 0014                                              _INLVLB 038D  
                                            _INLVLC 038E                                              u400_25 0FBA  
                                            u401_20 0FD6                                              u313_20 0D87  
                                            u305_20 0D44                                              u401_21 0FD5  
                                            u305_21 0D43                                              u321_25 103D  
                                            u401_25 0FD2                                              u313_25 0D83  
                                            u330_20 127D                                              u322_20 1048  
                                            u402_20 0FF0                                              u314_20 0D96  
                                            u306_20 0D4E                                              u410_20 14A1  
                                            u330_21 127C                                              u322_21 1047  
                                            u402_21 0FEF                                              u314_21 0D95  
                                            u306_21 0D4D                                              u410_25 149D  
                                            u331_20 1297                                              u315_20 0D9F  
                                            u307_20 0D54                                              u411_20 14AC  
                                            u323_20 1094                                              u403_20 1169  
                                            u331_21 1296                                              u315_21 0D9E  
                                            u307_21 0D53                                              u411_21 14AA  
                                            u323_21 1093                                              u403_21 1168  
                                            u331_25 1293                                              u324_20 1E27  
                                            u332_20 154F                                              u316_20 0DA4  
                                            u308_20 0D59                                              u340_20 1384  
                                            u412_20 14AD                                              u420_20 0729  
                                            u404_20 118B                                              u324_21 1E26  
                                            u332_21 154E                                              u316_21 0DA3  
                                            u308_21 0D58                                              u340_21 1383  
                                            u404_21 118A                                              u420_25 0725  
                                            u404_25 1187                                              u333_20 156B  
                                            u317_20 0DB1                                              u309_20 0D5F  
                                            u341_20 138B                                              u405_20 145F  
                                            u421_20 0733                                              u413_20 1F48  
                                            u325_20 1F87                                              u333_21 156A  
                                            u317_21 0DB0                                              u309_21 0D5E  
                                            u341_21 138A                                              u421_21 0732  
                                            u413_21 1F47                                              u325_21 1F86  
                                            u405_25 145B                                              u350_20 086C  
                                            u334_20 1577                                              u318_20 0DB6  
                                            u406_20 146D                                              u422_20 0759  
                                            u414_20 1E94                                              u430_20 00F4  
                                            u510_20 1021                                              u350_21 086B  
                                            u334_21 1576                                              u318_21 0DB5  
                                            u406_21 146C                                              u414_21 1E93  
                                            u430_21 00F3                                              u510_21 1020  
                                            u342_25 138D                                              u422_25 0755  
                                            u326_25 1F8C                                              u351_20 088A  
                                            u335_20 1593                                              u319_20 0DC3  
                                            u343_20 139B                                              u407_20 147A  
                                            u423_20 0763                                              u415_20 06CE  
                                            u271_20 0805                                              u431_20 00FA  
                                            u503_20 1215                                              u351_21 0889  
                                            u335_21 1592                                              u319_21 0DC2  
                                            u343_21 139A                                              u423_21 0762  
                                            u271_21 0804                                              u431_21 00F9  
                                            u503_21 1214                                              u407_25 1476  
                                            u415_25 06CA                                              u327_25 1F91  
                                            u352_20 0890                                              u336_20 15C1  
                                            u280_20 0BE9                                              u344_20 13A2  
                                            u408_20 1484                                              u424_20 0779  
                                            u416_20 06E9                                              u272_20 080A  
                                            u440_20 02C4                                              u432_20 0131  
                                            u328_20 1F9B                                              u512_20 13DC  
                                            u504_20 121D                                              u352_21 088F  
                                            u336_21 15C0                                              u280_21 0BE8  
                                            u344_21 13A1                                              u408_21 1483  
                                            u416_21 06E8                                              u272_21 0809  
                                            u440_21 02C3                                              u432_21 0130  
                                            u328_21 1F9A                                              u512_21 13DB  
                                            u504_21 121C                                              u360_25 091A  
                                            u336_25 15BD                                              u424_25 0775  
                                            u416_25 06E5                                              u361_20 0932  
                                            u353_20 0895                                              u329_20 1261  
                                            u337_20 1DB3                                              u281_20 0BF0  
                                            u409_20 1494                                              u425_20 0783  
                                            u417_20 06EF                                              u273_20 081A  
                                            u441_20 02DF                                              u433_20 0137  
                                            u513_20 13F3                                              u505_20 122B  
                                            u361_21 0931                                              u353_21 0894  
                                            u329_21 1260                                              u337_21 1DB2  
                                            u281_21 0BEF                                              u409_21 1493  
                                            u425_21 0782                                              u417_21 06EE  
                                            u273_21 0819                                              u441_21 02DE  
                                            u433_21 0136                                              u513_21 13F2  
                                            u505_21 122A                                              u361_25 092E  
                                            u345_25 13A4                                              u370_20 098A  
                                            u362_20 0945                                              u354_20 08B0  
                                            u290_20 0C78                                              u282_20 0BF6  
                                            u346_20 13B1                                              u338_20 135B  
                                            u418_20 06FD                                              u426_20 1106  
                                            u274_20 083A                                              u450_20 0563  
                                            u442_20 02E3                                              u434_20 017E  
                                            u514_20 13FD                                              u506_20 1233  
                                            u530_20 003C                                              u522_20 000A  
                                            u370_21 0989                                              u362_21 0944  
                                            u354_21 08AF                                              u290_21 0C77  
                                            u282_21 0BF5                                              u346_21 13B0  
                                            u338_21 135A                                              u426_21 1105  
                                            u274_21 0839                                              u450_21 0562  
                                            u442_21 02E2                                              u434_21 017D  
                                            u514_21 13FC                                              u506_21 1232  
                                            u530_21 003B                                              u522_21 0009  
                                            u418_25 06F9                                              u274_25 0836  
                                            u450_25 055F                                              u275_20 1DC6  
                                            u371_20 0990                                              u363_20 094D  
                                            u355_20 08CE                                              u283_20 0BFB  
                                            u347_20 13B6                                              u339_20 1371  
                                            u419_20 071B                                              u451_20 057F  
                                            u443_20 02F3                                              u435_20 01E0  
                                            u427_20 00AC                                              u515_20 1414  
                                            u523_20 000F                                              u275_21 1DC5  
                                            u371_21 098F                                              u363_21 094C  
                                            u355_21 08CD                                              u283_21 0BFA  
                                            u347_21 13B5                                              u419_21 071A  
                                            u451_21 057E                                              u443_21 02F2  
                                            u435_21 01DF                                              u427_21 00AB  
                                            u515_21 1413                                              u523_21 000E  
                                            u291_25 0C7C                                              u339_25 136D  
                                            u276_20 1DCC                                              u372_20 099C  
                                            u356_20 0906                                              u348_20 0861  
                                            u380_20 0DF7                                              u292_20 0C8C  
                                            u284_20 0C14                                              u452_20 0583  
                                            u444_20 03E5                                              u436_20 0207  
                                            u428_20 00D3                                              u460_20 14EA  
                                            u516_20 1427                                              u524_20 0014  
                                            u276_21 1DCB                                              u372_21 099B  
                                            u356_21 0905                                              u348_21 0860  
                                            u380_21 0DF6                                              u292_21 0C8B  
                                            u284_21 0C13                                              u452_21 0582  
                                            u444_21 03E4                                              u436_21 0206  
                                            u428_21 00D2                                              u460_21 14E9  
                                            u516_21 1426                                              u524_21 0013  
                                            u364_25 0950                                              u444_25 03E1  
                                            u373_20 09AA                                              u365_20 095A  
                                            u349_20 0867                                              u381_20 0DFD  
                                            u293_20 0C90                                              u285_20 0C18  
                                            u277_20 0BC2                                              u453_20 05AE  
                                            u445_20 0437                                              u437_20 0230  
                                            u429_20 00D8                                              u461_20 1519  
                                            u509_20 101B                                              u525_20 001C  
                                            u365_21 0959                                              u349_21 0866  
                                            u381_21 0DFC                                              u293_21 0C8F  
                                            u285_21 0C17                                              u277_21 0BC1  
                                            u453_21 05AD                                              u445_21 0436  
                                            u437_21 022F                                              u429_21 00D7  
                                            u461_21 1518                                              u509_21 101A  
                                            u525_21 001B                                              u373_25 09A6  
                                            u357_25 0907                                              u461_25 1515  
                                            u374_20 09C5                                              u382_20 0E02  
                                            u294_20 0C95                                              u286_20 0C54  
                                            u278_20 0BC8                                              u454_20 064E  
                                            u446_20 0459                                              u438_20 0292  
                                            u462_20 1520                                              u470_20 177E  
                                            u526_20 0021                                              u374_21 09C4  
                                            u382_21 0E01                                              u294_21 0C94  
                                            u286_21 0C53                                              u278_21 0BC7  
                                            u454_21 064D                                              u446_21 0458  
                                            u438_21 0291                                              u462_21 151F  
                                            u470_21 177D                                              u526_21 0020  
                                            u374_25 09C1                                              u366_25 095C  
                                            u358_25 090E                                              u390_25 0F49  
                                            u286_25 0C50                                              u454_25 064A  
                                            u550_27 1E77                                              u375_20 09E0  
                                            u367_20 096A                                              u359_20 0918  
                                            u391_20 0F53                                              u383_20 0E19  
                                            u295_20 0CAA                                              u287_20 0C5D  
                                            u279_20 0BCD                                              u455_20 065C  
                                            u447_20 045E                                              u439_20 02BA  
                                            u463_20 152D                                              u527_20 002C  
                                            u375_21 09DF                                              u367_21 0969  
                                            u359_21 0917                                              u391_21 0F52  
                                            u383_21 0E18                                              u295_21 0CA9  
                                            u287_21 0C5B                                              u279_21 0BCC  
                                            u455_21 065B                                              u447_21 045D  
                                            u439_21 02B9                                              u463_21 152C  
                                            u527_21 002B                                              u471_25 1E86  
                                            u375_25 09DC                                              u455_25 0658  
                                            u463_25 1529                                              u376_20 09F3  
                                            u368_20 096F                                              u384_20 0E1E  
                                            u296_20 0CAE                                              u288_20 0C5E  
                                            u456_20 0682                                              u448_20 04BD  
                                            u464_20 1306                                              u480_20 160D  
                                            u528_20 0031                                              u376_21 09F2  
                                            u368_21 096E                                              u384_21 0E1D  
                                            u296_21 0CAD                                              u456_21 0680  
                                            u448_21 04BC                                              u464_21 1305  
                                            u480_21 160C                                              u528_21 0030  
                                            u472_25 1EDB                                              u392_25 0F55  
                                            u544_27 0A27                                              u369_20 0983  
                                            u393_20 0F63                                              u377_20 0DCF  
                                            u297_20 0CB8                                              u289_20 0C6E  
                                            u457_20 0683                                              u449_20 04F4  
                                            u465_20 134D                                              u473_20 1FDD  
                                            u529_20 0038                                              u369_21 0982  
                                            u393_21 0F62                                              u377_21 0DCE  
                                            u297_21 0CB7                                              u289_21 0C6D  
                                            u449_21 04F3                                              u465_21 134C  
                                            u473_21 1FDC                                              u529_21 0037  
                                            u385_25 0E97                                              u481_25 161B  
                                            u545_27 0A34                                              u394_20 0F68  
                                            u378_20 0DD5                                              u458_20 068E  
                                            u466_20 1685                                              u474_20 1F29  
                                            u482_20 1627                                              _OSCCON 0099  
                                            u394_21 0F67                                              u378_21 0DD4  
                                            u458_21 068D                                              u466_21 1684  
                                            u474_21 1F28                                              u482_21 1626  
                                            u386_25 0EC2                                              u298_25 0CBC  
                                            u546_27 0BB1                                              u475_20 1F80  
                                            u395_20 0F7C                                              u387_20 0F14  
                                            u379_20 0DDA                                              u299_20 0CDE  
                                            u459_20 14C0                                              u467_20 16AD  
                                            u491_20 113B                                              u475_21 1F7F  
                                            u395_21 0F7B                                              u379_21 0DD9  
                                            u299_21 0CDD                                              u459_21 14BF  
                                            u467_21 16AC                                              u491_21 113A  
                                            u299_23 0CDA                                              u387_25 0F10  
                                            u483_25 162B                                              u547_27 07BC  
                                            u396_20 0F83                                              u388_20 0F2B  
                                            u468_20 16DF                                              u492_20 1156  
                                            u484_20 1635                                              u476_20 15CC  
                                            u396_21 0F82                                              u468_21 16DE  
                                            u492_21 1155                                              u484_21 1634  
                                            u476_21 15CB                                              u388_25 0F27  
                                            u548_27 07ED                                              u397_20 0F89  
                                            u469_20 16FD                                              u493_20 11D3  
                                            u485_20 163B                                              u477_20 15D0  
                                            u397_21 0F88                                              u469_21 16FC  
                                            u493_21 11D2                                              u485_21 163A  
                                            u477_21 15CF                                              u389_25 0F36  
                                            u549_27 1D8B                                              u398_20 0F95  
                                            u494_20 11DA                                              u486_20 163F  
                                            u478_20 15F0                                              u398_21 0F94  
                                            u494_21 11D9                                              u486_21 163E  
                                            u478_21 15EF                                              u399_20 0FA3  
                                            u495_20 11F8                                              u487_20 1653  
                                            u495_21 11F7                                              u399_25 0F9F  
                                            u487_25 164F                                              u479_25 1601  
                                            u488_20 1662                                              u496_20 0A3E  
                                            u488_21 1661                                              u496_21 0A3D  
                                            u489_20 1666                                              u497_20 0A46  
                                            u489_21 1665                                              u497_21 0A45  
                                            u498_20 0AA7                                              u498_21 0AA6  
                                            u499_20 0AC7                                              u499_21 0AC6  
                                            _SPBRGH 019C                                              _SPBRGL 019B  
                                            _TX1REG 019A                                              _TX1STA 019E  
                                            _TRISC3 0473                                              _TRISC4 0474  
                                  ?_CCP2_Initialize 0070                              __end_of_LCD_Write_4Bit 1E7B  
                           __end_of_I2C1_EVENT_IDLE 1D13                                    __end_of___xxtofl 1670  
                           __end_of_I2C1_EVENT_NACK 1D3B                             __end_of_I2C1_EVENT_STOP 1D86  
                            __end_of_LCD_Write_Char 1EE5                         __end_of_I2C1_InterruptClear 1CE2  
                                            _Timer0 18C2                                              _Timer2 1830  
                                            _Timer4 18AA                           __end_of_IO_Expander_Write 1E3E  
                                      vfprintf@cfmt 00E7                                              ___flge 153A  
                                            ___fleq 124D                __end_of_TMR2_DefaultOverflowCallback 1CDA  
                      _TMR2_DefaultOverflowCallback 1CD9                                           ??___fladd 0020  
                                            ___wmul 1F81                                           ??___fldiv 0048  
                                 __end_of_TMR1_Stop 1CF7                                           ??___flneg 0074  
                                         ??___flmul 002E                                           ??___flsub 007C  
                                         ??___fltol 0074                                              _efgtoa 0083  
                                            _floorf 06A9                                              _memcpy 10E0  
                              read_prec_or_width@ap 0076                                  _I2C1_RestartEnable 1CEE  
                           __end_of_TMR4_Initialize 1ECF                                           ?_I2C1_ISR 0070  
                                  ?_TMR0_Custom_ISR 0070                     __end_of_I2C1_EVENT_SEND_RD_ADDR 1D7E  
                                            pad@buf 007B                                   ?_CLOCK_Initialize 0070  
                                            _strcpy 1F2E               __end_of_TMR4_OverflowCallbackRegister 1D59  
                     _TMR4_OverflowCallbackRegister 1D53                                              fputc@c 0070  
                                            fputs@c 0020                                              fputs@i 0021  
                                            fputs@s 0023                                   __end_of_Backlight 1D76  
                                ??_CLOCK_Initialize 01BE                                     ___fpclassifyf@e 0020  
                   __end_of_I2C1_EVENT_SEND_WR_ADDR 1D60                                     ___fpclassifyf@u 0022  
                                   ___fpclassifyf@x 0070                                 ?_I2C1_RestartEnable 0070  
                          ADC_GetConversion@channel 0073                         CCP2_LoadDutyValue@dutyValue 01BE  
                                            putch@c 0070                         EUSART_ReceiveISR@tempRxHead 0145  
                                  __end_of_vfprintf 1FE0             INT_SetInterruptHandler@InterruptHandler 01BE  
                                         ??_sprintf 00EF                                              xtoa@fp 002D  
                                        ___flge@ff1 0040                                          ___flge@ff2 0044  
                                   ??___fpclassifyf 0074                                    ?_TMR1_Initialize 0070  
                                      ___xxtofl@arg 0022                                        ___xxtofl@exp 0021  
                                 _SYSTEM_Initialize 1095                                        ___xxtofl@val 0074  
                                        ___fleq@ff1 0070                                          ___fleq@ff2 0074  
           __end_of_Timer0_OverflowCallbackRegister 1DA1                   ??_Timer0_OverflowCallbackRegister 01C0  
                  ?_Timer0_OverflowCallbackRegister 01BE                     _Timer0_OverflowCallbackRegister 1D98  
                           __end_of__initialization 007F                                       ??_I2C1_IsAddr 0070  
                                     ??_I2C1_IsData 0070                                       ??_I2C1_IsNack 0070  
                                        ___flneg@f1 0070                                     ?_LCD_Write_4Bit 0070  
                                ?_SYSTEM_Initialize 0070                                          ___fltol@f1 0070  
                                   ?_LCD_Write_Char 0070                                ??_I2C1_RestartEnable 0070  
                                     __end_of_UART1 1830                                      __pcstackCOMMON 0070  
                                      __pidataBANK2 0003                                 ??_SYSTEM_Initialize 01C0  
                             TMR0_Custom_ISR@buffer 0133                                       __end_of_fputc 0857  
                                     __end_of_fputs 1095                          ??_I2C1_ErrorInterruptClear 0070  
                     ?_TMR2_DefaultOverflowCallback 0070                                       __end_of_putch 1CD8  
                                        ??_I2C1_ISR 0076                                    ?_TMR2_Initialize 0070  
                                    _OPTION_REGbits 0095                                _eusartRxStatusBuffer 2370  
                             __end_of_I2C1_EVENT_RX 120A                               __end_of_I2C1_EVENT_TX 1163  
                   ??_TMR2_OverflowCallbackRegister 01C0                                   _I2C1_EventHandler 120A  
                                           ??_fputc 0073                           __end_of_SYSTEM_Initialize 10BA  
                                           ??_fputs 0079                                             ??_putch 0070  
                                        __pbssBANK2 0147                                          __pbssBANK3 01A0  
                                        __pbssBANK4 0220                                          __pbssBANK5 02A0  
                                ?_I2C1_EventHandler 0070                               _I2C1_StatusFlagsClear 1CFF  
                    ?_TMR1_OverflowCallbackRegister 01BE                                    ?_I2C1_EVENT_IDLE 0070  
                                  ?_I2C1_EVENT_NACK 0070                                    ?_I2C1_EVENT_STOP 0070  
                                 __end_of__Umul8_16 104D                                 ??_I2C1_EventHandler 0074  
                                        __pmaintext 1193                                 __end_of_I2C1_IsAddr 1D6E  
                                           ?___flge 0040                                             ?___fleq 0070  
                               __end_of_I2C1_IsData 1D29                                 __end_of_I2C1_IsNack 1D47  
                                           ?___wmul 0070                                  _CCP2_LoadDutyValue 1EFB  
                                        __pintentry 0004                                             ?_efgtoa 00A0  
                                   _I2C1_Initialize 1E3E                                _EUSART_AutoBaudQuery 0000  
                                           _CCP1CON 0293                                             _CCP2CON 029A  
                                           ?_floorf 005A                                             _CCP1PPS 0E14  
                                           _CCP2PPS 0E15                                             ?_memcpy 0070  
                                  ?_TMR4_Initialize 0070                               __end_of_I2C1_NackSend 1D0F  
                                           ?_strcpy 0070                               __end_of_I2C1_BusReset 1CFF  
                                   _EUSART_IsTxDone 0000                                 ?_CCP2_LoadDutyValue 01BE  
                                           _LCD_CMD 1E7B                                       _eusartRxCount 0168  
         __end_of_EUSART_RxCompleteCallbackRegister 1DD9                 ??_EUSART_RxCompleteCallbackRegister 01C0  
                ?_EUSART_RxCompleteCallbackRegister 01BE                   _EUSART_RxCompleteCallbackRegister 1DCD  
                                         ?___xxtofl 0074                                     _EUSART_ErrorGet 0000  
                                         _I2C1_Read 0000                                           _I2C1_Host 184C  
                         __end_of_I2C1_EventHandler 124D                              _I2C1_ErrorEventHandler 104D  
                                           _OSCTUNE 0098                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                        ??_TMR1_Start 0070  
                                           _SSP1BUF 0211                      ?_TMR4_OverflowCallbackRegister 01BE  
                          __end_of_I2C1_EVENT_ERROR 1D41                            __end_of_I2C1_EVENT_RESET 1D67  
                     __end_of_I2C1_CallbackRegister 1DE5                                ??_CCP2_LoadDutyValue 01C0  
                                           _i2c_add 0166                               __end_of_I2C1_StopSend 1CE5  
                  ??_Timer0_DefaultOverflowCallback 007E                     ?_Timer0_DefaultOverflowCallback 0070  
                                           ___fladd 0BB9                                             ___fldiv 0857  
                                           ___flneg 1DAB                                             ___flmul 0DC5  
                                           ___flsub 1FA0                                             ___fltol 1352  
                                 _Timer0_Initialize 1EE5                                           ?_vfprintf 00E2  
                                __end_of_TMR1_Start 1CF4                                  ?_Timer0_Initialize 0070  
                                  ??_LCD_Set_Cursor 0077                                             __ptext1 1095  
                                           __ptext2 1EE5                                             __ptext3 1D98  
                                           __ptext4 1EBA                                             __ptext5 1D53  
                                           __ptext6 1E52                                             __ptext7 1D4D  
                                           __ptext8 1F49                                             __ptext9 1D47  
                                         _T1CONbits 0018                                           _T2CONbits 001C  
                    ??_TMR2_DefaultOverflowCallback 0070                               read_prec_or_width@fmt 0023  
                               _I2C1_RestartDisable 1CEB                                          ??___xxtofl 0078  
                                         _T4CONbits 0415                            ??_PIN_MANAGER_Initialize 01BE  
                                         _T2HLTbits 001D                                       ?_I2C1_AckSend 0070  
                           _INT_SetInterruptHandler 1D8F                                 ??_Timer0_Initialize 01C0  
                                           efgtoa@c 00A4                                             efgtoa@d 00B4  
                                           efgtoa@e 00B9                                             efgtoa@f 00A0  
                                           efgtoa@g 00CE                                             efgtoa@h 00C3  
                                           efgtoa@i 00C1                                             efgtoa@l 00C7  
                                           efgtoa@m 00B6                                             efgtoa@n 00CC  
                                           efgtoa@p 00AB                                             efgtoa@t 00AD  
                                           efgtoa@u 00D2                                             efgtoa@w 00BB  
                                   _i2c1_eventTable 1860                                           _LCD_Clear 1D86  
                                         _T4HLTbits 0416                                             _sprintf 1FE0  
                                           clrloop0 1DF2       TMR4_OverflowCallbackRegister@InterruptHandler 01BE  
     TMR2_OverflowCallbackRegister@InterruptHandler 01BE                                end_of_initialization 007F  
                                           floorf@e 0068                                           _T2RSTbits 001F  
                                           floorf@m 0064                                             floorf@u 006A  
                                           floorf@x 005A                                             memcpy@d 0076  
                                           memcpy@n 0071                                           _T4RSTbits 0418  
                                           memcpy@s 0077                              ?_I2C1_StatusFlagsClear 0070  
                                           fputc@fp 0072                                             fputs@fp 0078  
                                       _I2C1_IsAddr 1D67                                         _I2C1_IsData 1D24  
                                       _I2C1_IsNack 1D41                                  _read_prec_or_width 12F1  
                                       _I2C1_IsBusy 0000                                   _EUSART_Initialize 1107  
                              ?_I2C1_RestartDisable 0070                             __end_of_I2C1_Initialize 1E52  
                         __end_of_Timer0_Initialize 1EFB                                  ?_EUSART_Initialize 0070  
                                 __end_of_vfpfcnvrt 1800                                          efgtoa@mode 00B2  
                                        efgtoa@sign 00CB                                   _EUSART_ReceiveISR 13C2  
                               ?_read_prec_or_width 0076                                    vfpfcnvrt@convarg 00DA  
                                  _I2C1_DataReceive 1CE5                                          ??_vfprintf 00E5  
                                ?_EUSART_ReceiveISR 0070                                             strcpy@d 0074  
                               ??_EUSART_Initialize 01C0                                           _PORTCbits 000E  
                                         _TMR1_Stop 1CF4                                           _TMR2_Stop 0000  
                             _TMR1_OverflowCallback 01B4                                           _TMR4_Stop 0000  
                                        LCD_CMD@CMD 0075                                           _SSPDATPPS 0E21  
                                         _SSPCLKPPS 0E20                                         ___fladd@grs 007B  
                               ??_EUSART_ReceiveISR 0140                                      ??_I2C1_AckSend 0070  
                                     ___xxtofl@sign 0020        TMR1_OverflowCallbackRegister@CallbackHandler 01BE  
    Timer0_OverflowCallbackRegister@CallbackHandler 01BE                                          ?_LCD_Clear 0070  
                              ??_read_prec_or_width 0078                                         ___fldiv@grs 0054  
                                       ___fldiv@rem 004D                                 _EUSART_Deinitialize 0000  
                                         _Backlight 1D6E                                    ??_LCD_Write_4Bit 0072  
                                 LCD_Write_String@i 0079                                    ??_LCD_Write_Char 0074  
                                       ___flmul@grs 0034                           __end_of_EUSART_Initialize 1134  
                                       _CCP1CONbits 0293                                         _CCP2CONbits 029A  
                             ??_I2C1_RestartDisable 0070                           __end_of_EUSART_ReceiveISR 143A  
                                    __end_of_Timer0 18CE                                      __end_of_Timer2 183C  
                                    __end_of_Timer4 18B6                        __end_of_INTERRUPT_Initialize 1DF1  
                                    _I2C1_ERROR_ISR 1D13                                      __end_of___flge 15C5  
                                    __end_of___fleq 129B                                         vfpfcnvrt@ap 006F  
                                       vfpfcnvrt@cp 00E0                                         vfpfcnvrt@fp 00DE  
                                    __end_of___wmul 1FA0                                    _LCD_Write_String 1F64  
                                    __end_of_efgtoa 06A9                          __end_of_I2C1_ReceiveEnable 1CEB  
                                      _EUSART_Write 0000                             __end_of_i2c1_eventTable 1872  
                                    _ADC_Initialize 1DB6                                      __end_of_floorf 0794  
                                        ?_TMR1_Stop 0070                                      __end_of_memcpy 1107  
                                        floorf@F521 01A0                           ??_INT_SetInterruptHandler 01C0  
                                    __end_of_strcpy 1F49                                 start_initialization 0043  
                                       __end_of_pad 1193                                          ?_Backlight 0070  
                                 ??_UART_Custom_ISR 012D                                   ??_I2C_Master_Wait 0070  
                           _I2C1_EVENT_SEND_RD_ADDR 1D76                                   ??_I2C_Master_Stop 0070  
                         _EUSART_RxInterruptHandler 01BA                               __end_of___fpclassifyf 14B9  
                                  ?_I2C1_Initialize 0070                             _I2C1_EVENT_SEND_WR_ADDR 1D59  
                            __end_of_I2C1_ERROR_ISR 1D17                                         vfprintf@fmt 00E2  
                        _EUSART_FramingErrorHandler 015B                                            ??___flge 0048  
                                          ??___fleq 0078                                    _I2C1_IsRxBufFull 1D07  
                                          ??___wmul 0074                                         _CCPTMRSbits 029E  
                                          ??_efgtoa 00A5                              __end_of_ADC_Initialize 1DC1  
                                         __Umul8_16 102A                                         __pdataBANK2 016C  
                                          ??_floorf 005E                                            ??_memcpy 0073  
                   ??_TMR1_OverflowCallbackRegister 01C0                                            ??_strcpy 0072  
                                         ___fladd@a 0074                                           ___fladd@b 0070  
                           ?_I2C1_ErrorEventHandler 0070                                            ?_LCD_CMD 0070  
                                         ___fldiv@a 0040                                           ___fldiv@b 0044  
                                       __pbssBIGRAM 2370                                           ___flmul@a 002A  
                                         ___flmul@b 0026                                           ___flsub@a 0040  
                                         ___flsub@b 0044                                           ___latbits 0002  
                                     __pcstackBANK0 0020                                       __pcstackBANK1 00A0  
                                     __pcstackBANK2 0120                                       __pcstackBANK3 01BE  
                                       ??_LCD_Clear 0076                           ?_I2C1_ErrorInterruptClear 0070  
                      __end_of_I2C1_DefaultCallback 1CD9                                   ?_I2C1_EVENT_ERROR 0070  
                                 ?_I2C1_EVENT_RESET 0070                               _TMR2_OverflowCallback 01B8  
                                ??_I2C1_EVENT_ERROR 0070                                   ??_CCP1_Initialize 01BE  
                                ??_I2C1_EVENT_RESET 0070                                    _I2C_Master_Start 1D29  
                                  _I2C_Master_Write 1E1B                                         _efgtoa$3140 00AF  
                              __end_of_I2C1_AckSend 1D07                              _PIN_MANAGER_Initialize 129B  
                             IO_Expander_Write@Data 0071                     ??_TMR4_OverflowCallbackRegister 01C0  
                                   ?_I2C1_ERROR_ISR 0070                          __end_of_Timer0_OverflowISR 102A  
                                          ?___fladd 0070                                            ?___fldiv 0040  
                                         __ptext100 1E2B                                           __ptext101 1E1B  
                                         __ptext102 1D2F                                            ?___flneg 0070  
                                         __ptext103 1D29                                           __ptext104 1DC1  
                                         __ptext105 1CF7                                           __ptext106 1CD6  
                                          ?___flmul 0026                                            ?___flsub 0040  
                                          ?___fltol 0070                                          ?__Umul8_16 0070  
                                   ?_ADC_Initialize 0070                                        _eusartRxHead 016A  
                                      _eusartRxTail 0169                                            _I2C1_ISR 1D17  
                              I2C_Master_Write@data 0070                        ??_INTERRUPT_InterruptManager 007E  
                    __end_of_I2C1_ErrorEventHandler 1070                                         ??_TMR1_Stop 0070  
                                          _BAUD1CON 019F                                   ??_CCP2_Initialize 01BE  
                            _EUSART_TransmitDisable 0000              __end_of_Timer0_DefaultOverflowCallback 1D1F  
                    _Timer0_DefaultOverflowCallback 1D1B                       I2C1_EVENT_ERROR@retEventState 0070  
                                       ??_Backlight 0072                             ??_I2C1_StatusFlagsClear 0070  
                                          ?_sprintf 00E9                            __end_of_I2C1_DataReceive 1CE8  
                                          _T2CLKCON 001E                           ??_I2C1_EVENT_SEND_RD_ADDR 0070  
                                          _T4CLKCON 0417                                    _EUSART_IsRxReady 0000  
                              _INTERRUPT_Initialize 1DE5                                    _EUSART_IsTxReady 0000  
                                    _eusartRxBuffer 02A0                                    _CLOCK_Initialize 1000  
                                 ??_TMR0_Custom_ISR 012D                                        ?_I2C1_IsAddr 0070  
                                    ___wmul@product 0074                                        ?_I2C1_IsData 0070  
                                          _LATBbits 010D                                            _LATCbits 010E  
                                      ?_I2C1_IsNack 0070                           ??_I2C1_EVENT_SEND_WR_ADDR 0071  
                             _I2C1_CallbackRegister 1DD9                                           clear_ram0 1DF1  
                                          _PIE1bits 0090                                            _PIE2bits 0091  
                                 _eusartRxLastError 01B0                                          _I2C1_Close 1EA5  
                                          _PIR1bits 0010                                            _PIR2bits 0011  
                                        _I2C1_Write 0000                                      _I2C1_WriteRead 0000  
                                          _SSP1CON1 0215                                            _SSP1CON2 0216  
                                          _SSP1CON3 0217                                            _SSP1STAT 0214  
                                         _vfpfcnvrt 1670                                   ??_TMR1_Initialize 01C0  
                                        _ADCON0bits 009D                                   ___wmul@multiplier 0070  
                              _TMR0_Custom_ISR$3563 0143                        I2C1_EVENT_NACK@retEventState 0070  
                                     _I2C1_EVENT_RX 11C9                                       _I2C1_EVENT_TX 1134  
                                       _EUSART_Read 0000                                          vfpfcnvrt@c 00DF  
                             ?_INTERRUPT_Initialize 0070                            __end_of_LCD_Write_String 1F81  
                                 ??_TMR2_Initialize 01C0                                 _I2C1_InterruptClear 1CDF  
                                         memcpy@tmp 0074                                          vfprintf@ap 00E4  
                                        vfprintf@fp 00E6                                   _ADC_GetConversion 1F14  
                                     _I2C1_Callback 01BC                                         ??__Umul8_16 0072  
                                ?_ADC_GetConversion 0070                                          ?_vfpfcnvrt 006E  
                              _I2C1_DefaultCallback 1CD8                                ?_I2C1_InterruptClear 0070  
                                ___fpclassifyf@F465 01A4                               _TMR1_InterruptHandler 01B6  
                                     _I2C1_NackSend 1D0B                                       _I2C1_BusReset 1CFB  
                               ??_ADC_GetConversion 0072                                          sprintf@fmt 00E9  
                                   _UART_Custom_ISR 0794                                   ??_I2C1_EVENT_IDLE 0070  
                                 ??_I2C1_EVENT_NACK 0070                                            ___xxtofl 15C5  
                                   _I2C_Master_Wait 1DC1                                     _I2C_Master_Stop 1D2F  
                                 ??_I2C1_EVENT_STOP 0070                                      ?_I2C1_EVENT_RX 0070  
                                    ?_I2C1_EVENT_TX 0070                                       _I2C1_ErrorGet 0000  
                                _EUSART_AutoBaudSet 0000                                            __ptext10 129B  
                                          __ptext11 1DE5                                            __ptext20 07F5  
                                          __ptext12 1D8F                                            __ptext21 1DA1  
                                          __ptext13 1E3E                                          _T1GCONbits 0019  
                                          __ptext30 0A01                                            __ptext22 1DB6  
                                          __ptext14 1DD9                                            __ptext31 15C5  
                                          __ptext23 1EFB                                            __ptext15 1107  
                                          __ptext40 1D13                                            __ptext32 1CF4  
                                          __ptext16 1DCD                                            __ptext41 104D  
                                          __ptext33 1CF1                                            __ptext25 1008  
                                          __ptext17 1E0C                                            __ptext50 1134  
                                          __ptext42 1D60                                            __ptext34 1F14  
                                          __ptext26 1CDB                                            __ptext18 1DFD  
                                          __ptext51 1CEE                                            __ptext43 1D7E  
                                          __ptext35 1D17                                            __ptext27 1CDA  
                                          __ptext19 1000                                            __ptext60 1EA5  
                                          __ptext52 1D1F                                            __ptext44 1D3B  
                                          __ptext36 120A                                            __ptext28 1CD9  
                                          __ptext61 1CFF                                            __ptext53 1CEB  
                                          __ptext45 1D35                                            __ptext37 1D41  
                                          __ptext29 1D1B                                            __ptext70 1670  
                                          __ptext62 1CDF                                            __ptext54 1CE8  
                                          __ptext46 11C9                                            __ptext38 1D24  
                                          __ptext71 14B9                                            __ptext63 1CDC  
                                          __ptext55 1D0B                                            __ptext47 1D59  
                                          __ptext39 1D67                                            __ptext80 10E0  
                                          __ptext72 12F1                                            __ptext64 1CFB  
                                          __ptext56 1D07                                            __ptext48 1D76  
                                          __ptext81 1E90                                            __ptext73 1F81  
                                          __ptext65 1CD8                                            __ptext57 1CE5  
                                          __ptext49 1D0F                                            __ptext90 153A  
                                          __ptext82 06A9                                            __ptext74 0083  
                                          __ptext66 13C2                                            __ptext58 1D03  
                                          __ptext91 124D                                            __ptext83 143A  
                                          __ptext75 1F2E                                            __ptext67 0794  
                                          __ptext59 1CE2                                            __ptext92 0857  
                                          __ptext84 1352                                            __ptext76 1163  
                                          __ptext68 1FE0                                            __ptext93 1F64  
                                          __ptext85 1FA0                                            __ptext77 1070  
                                          __ptext69 1FC0                                            __ptext94 1ECF  
                                          __ptext86 0BB9                                            __ptext78 0800  
                                          __ptext95 10BA                                            __ptext87 1DAB  
                                          __ptext79 1CD7                                            __ptext96 1D86  
                                          __ptext88 0DC5                                            __ptext97 1E7B  
                                          __ptext89 102A                                            __ptext98 1E66  
                                          __ptext99 1D6E                            __end_of_I2C1_IsRxBufFull 1D0B  
                                      _SSP1CON1bits 0215                                        _SSP1CON2bits 0216  
                       __end_of_I2C1_RestartDisable 1CEE                                  _I2C1_ReceiveEnable 1CE8  
                                          _distance 01AC                               _EUSART_TransmitEnable 0000  
                                        strcpy@dest 0075                              ?_I2C1_CallbackRegister 01BE  
                                   _BackLight_State 016C                                   ??_TMR4_Initialize 01C0  
             __end_of_TMR2_OverflowCallbackRegister 1D53                       _TMR2_OverflowCallbackRegister 1D4D  
                               ?_I2C1_ReceiveEnable 0070                           __end_of_ADC_GetConversion 1F2E  
                                       ?_I2C1_Close 0070                              UART_Custom_ISR@Rx_Code 013F  
                                     _I2C1_StopSend 1CE2                __end_of_TMR1_DefaultOverflowCallback 1CDB  
                      _TMR1_DefaultOverflowCallback 1CDA                                          _RC1STAbits 019D  
                                          efgtoa@fp 00B8                                            efgtoa@ne 00A9  
                                          efgtoa@pp 00B1                                            efgtoa@ou 00BD  
                                          int$flags 007E                                            _vfprintf 1FC0  
                __end_of_INTERRUPT_InterruptManager 0041                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 1E0C               ??_EUSART_FramingErrorCallbackRegister 01C0  
              ?_EUSART_FramingErrorCallbackRegister 01BE                 _EUSART_FramingErrorCallbackRegister 1DFD  
                             ?_I2C1_DefaultCallback 0070                                        _SSP1STATbits 0214  
                             ??_I2C1_InterruptClear 0070                    __end_of_I2C1_ErrorInterruptClear 1CDF  
                                    ?_I2C1_NackSend 0070                                      ?_I2C1_BusReset 0070  
              __end_of_TMR4_DefaultOverflowCallback 1CDC                        _TMR4_DefaultOverflowCallback 1CDB  
                              ??_I2C1_ReceiveEnable 0070                            __end_of_I2C_Master_Start 1D2F  
                          __end_of_I2C_Master_Write 1E2B                                          _INTCONbits 000B  
                                          memcpy@d1 0075                                            memcpy@s1 0070  
                                      _I2C1_AckSend 1D03                                  LCD_Write_Char@Data 0075  
                              _INT_InterruptHandler 0163                                     _CCP1_Initialize 1DA1  
                                    __pstringtext10 188F                                      __pstringtext11 189D  
                                    __pstringtext12 18CE                                      __pstringtext13 18D7  
                                    __pstringtext14 18E0                                      __pstringtext15 18E4  
                                    __pstringtext16 0000                              ??_INTERRUPT_Initialize 01C0  
                               _TMR2_PeriodCountSet 0000                          I2C1_EVENT_RX@retEventState 0071  
                           _Timer0_OverflowCallback 0161                                            intlevel1 0000  
                                         sprintf@ap 0121                                    ??_I2C1_ERROR_ISR 0076  
                           ?_PIN_MANAGER_Initialize 0070                          __end_of_I2C1_RestartEnable 1CF1  
        __end_of_EUSART_DefaultFramingErrorCallback 1CD7                ??_EUSART_DefaultFramingErrorCallback 0070  
               ?_EUSART_DefaultFramingErrorCallback 0070                  _EUSART_DefaultFramingErrorCallback 1CD6  
                                         strcpy@src 0070                                      ?_I2C1_StopSend 0070  
                                  ??_ADC_Initialize 01BE                                     _CCP2_Initialize 07F5  
                                       efgtoa@nmode 00B3                       ?_TMR1_DefaultOverflowCallback 0070  
                             UART_Custom_ISR@buffer 012F                            ?_INT_SetInterruptHandler 01BE  
                           __end_of_UART_Custom_ISR 07F5                             __end_of_I2C_Master_Wait 1DCD  
                           __end_of_I2C_Master_Stop 1D35                                         ??_vfpfcnvrt 00D6  
                          __end_of_CLOCK_Initialize 1008                                       __pstringtext1 1800  
                                     __pstringtext2 184C                                       __pstringtext3 1860  
                                     __pstringtext4 18AA                                       __pstringtext5 18B6  
                                     __pstringtext6 18C2                                       __pstringtext7 1830  
                                     __pstringtext8 1872                                       __pstringtext9 1881  
                            __Umul8_16@multiplicand 0070                                          _OPTION_REG 0095  
                                       _temperature 01A8                                            sprintf@f 0122  
                                          sprintf@s 0120                                     ??_I2C1_EVENT_RX 0070  
                                   ??_I2C1_EVENT_TX 0071                                     _TMR0_Custom_ISR 0A01  
                     ?_TMR4_DefaultOverflowCallback 0070                                  _Timer0_OverflowISR 1008  
                                 LCD_Set_Cursor@COL 0076                                   _I2C1_DataTransmit 1D1F  
                                 LCD_Set_Cursor@ROW 0077                               _Timer0_PeriodCountSet 0000  
                                        _TMR1_Tasks 0000                                          _TMR2_Tasks 0000  
                                        _TMR1_Start 1CF1                                          _TX1STAbits 019E  
                                        _TMR2_Start 0000                                          _TMR1_Write 0000  
                                        _TMR4_Tasks 0000                                       ___fladd@signs 0078  
                                        _TMR4_Start 0000                                  ?_I2C1_DataTransmit 0070  
                                 ?_I2C1_DataReceive 0070                      __end_of_PIN_MANAGER_Initialize 12F1  
                     __end_of_I2C1_StatusFlagsClear 1D03                                 ?_Timer0_OverflowISR 0070  
                                      ___fladd@aexp 0079                                        ___fladd@bexp 007A  
                                ??_I2C1_DataReceive 0070                               _TMR4_OverflowCallback 01B2  
                              __Umul8_16@multiplier 0078                                 _TMR4_PeriodCountSet 0000  
                        I2C1_EVENT_TX@retEventState 0073                                 ??_I2C1_DataTransmit 0070  
                                   _TMR1_Initialize 1F49                                   __Umul8_16@product 0074  
