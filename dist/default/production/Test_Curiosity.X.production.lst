

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jun 24 16:24:13 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    25                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    26                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,merge=1,delta=2
    35                           	psect	text2,local,class=CODE,merge=1,delta=2
    36                           	psect	text3,local,class=CODE,merge=1,delta=2
    37                           	psect	text4,local,class=CODE,merge=1,delta=2
    38                           	psect	text5,local,class=CODE,merge=1,delta=2
    39                           	psect	text6,local,class=CODE,merge=1,delta=2
    40                           	psect	text7,local,class=CODE,merge=1,delta=2
    41                           	psect	text8,local,class=CODE,merge=1,delta=2
    42                           	psect	text9,local,class=CODE,merge=1,delta=2
    43                           	psect	text10,local,class=CODE,merge=1,delta=2
    44                           	psect	text11,local,class=CODE,merge=1,delta=2
    45                           	psect	text12,local,class=CODE,merge=1,delta=2
    46                           	psect	text13,local,class=CODE,merge=1,delta=2
    47                           	psect	text14,local,class=CODE,merge=1,delta=2
    48                           	psect	text15,local,class=CODE,merge=1,delta=2
    49                           	psect	text16,local,class=CODE,merge=1,delta=2
    50                           	psect	text17,local,class=CODE,merge=1,delta=2
    51                           	psect	text18,local,class=CODE,merge=1,delta=2
    52                           	psect	text19,local,class=CODE,merge=1,delta=2
    53                           	psect	text20,local,class=CODE,merge=1,delta=2
    54                           	psect	text21,local,class=CODE,merge=1,delta=2
    55                           	psect	text22,local,class=CODE,merge=1,delta=2
    56                           	psect	text23,local,class=CODE,merge=1,delta=2
    57                           	psect	text24,local,class=CODE,merge=1,delta=2
    58                           	psect	text25,local,class=CODE,merge=1,delta=2
    59                           	psect	text26,local,class=CODE,merge=1,delta=2
    60                           	psect	text27,local,class=CODE,merge=1,delta=2
    61                           	psect	text28,local,class=CODE,merge=1,delta=2
    62                           	psect	text29,local,class=CODE,merge=1,delta=2
    63                           	psect	text30,local,class=CODE,merge=1,delta=2
    64                           	psect	text31,local,class=CODE,merge=1,delta=2
    65                           	psect	text32,local,class=CODE,merge=1,delta=2
    66                           	psect	text33,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text35,local,class=CODE,merge=1,delta=2
    69                           	psect	text36,local,class=CODE,merge=1,delta=2
    70                           	psect	text37,local,class=CODE,merge=1,delta=2
    71                           	psect	text38,local,class=CODE,merge=1,delta=2
    72                           	psect	text39,local,class=CODE,merge=1,delta=2
    73                           	psect	text40,local,class=CODE,merge=1,delta=2
    74                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text42,local,class=CODE,merge=1,delta=2
    76                           	psect	text43,local,class=CODE,merge=1,delta=2
    77                           	psect	text44,local,class=CODE,merge=1,delta=2
    78                           	psect	text45,local,class=CODE,merge=1,delta=2
    79                           	psect	text46,local,class=CODE,merge=1,delta=2
    80                           	psect	text47,local,class=CODE,merge=1,delta=2
    81                           	psect	text48,local,class=CODE,merge=1,delta=2
    82                           	psect	text49,local,class=CODE,merge=1,delta=2
    83                           	psect	text50,local,class=CODE,merge=1,delta=2
    84                           	psect	text51,local,class=CODE,merge=1,delta=2
    85                           	psect	text52,local,class=CODE,merge=1,delta=2
    86                           	psect	text53,local,class=CODE,merge=1,delta=2
    87                           	psect	text54,local,class=CODE,merge=1,delta=2
    88                           	psect	text55,local,class=CODE,merge=1,delta=2
    89                           	psect	text56,local,class=CODE,merge=1,delta=2
    90                           	psect	text57,local,class=CODE,merge=1,delta=2
    91                           	psect	text58,local,class=CODE,merge=1,delta=2
    92                           	psect	text59,local,class=CODE,merge=1,delta=2
    93                           	psect	text60,local,class=CODE,merge=1,delta=2
    94                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text62,local,class=CODE,merge=1,delta=2
    96                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text66,local,class=CODE,merge=1,delta=2
   100                           	psect	text67,local,class=CODE,merge=1,delta=2
   101                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text70,local,class=CODE,merge=1,delta=2
   104                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text75,local,class=CODE,merge=1,delta=2
   109                           	psect	text76,local,class=CODE,merge=1,delta=2
   110                           	psect	text77,local,class=CODE,merge=1,delta=2
   111                           	psect	text78,local,class=CODE,merge=1,delta=2,group=3
   112                           	psect	text79,local,class=CODE,merge=1,delta=2,group=1
   113                           	psect	text80,local,class=CODE,merge=1,delta=2,group=1
   114                           	psect	text81,local,class=CODE,merge=1,delta=2,group=1
   115                           	psect	text82,local,class=CODE,merge=1,delta=2,group=1
   116                           	psect	text83,local,class=CODE,merge=1,delta=2,group=2
   117                           	psect	text84,local,class=CODE,merge=1,delta=2,group=1
   118                           	psect	text85,local,class=CODE,merge=1,delta=2,group=3
   119                           	psect	text86,local,class=CODE,merge=1,delta=2,group=1
   120                           	psect	text87,local,class=CODE,merge=1,delta=2,group=3
   121                           	psect	text88,local,class=CODE,merge=1,delta=2,group=3
   122                           	psect	text89,local,class=CODE,merge=1,delta=2,group=3
   123                           	psect	text90,local,class=CODE,merge=1,delta=2,group=3
   124                           	psect	text91,local,class=CODE,merge=1,delta=2,group=3
   125                           	psect	text92,local,class=CODE,merge=1,delta=2,group=3
   126                           	psect	text93,local,class=CODE,merge=1,delta=2,group=3
   127                           	psect	text94,local,class=CODE,merge=1,delta=2,group=2
   128                           	psect	text95,local,class=CODE,merge=1,delta=2,group=2
   129                           	psect	text96,local,class=CODE,merge=1,delta=2,group=2
   130                           	psect	text97,local,class=CODE,merge=1,delta=2,group=2
   131                           	psect	text98,local,class=CODE,merge=1,delta=2,group=2
   132                           	psect	text99,local,class=CODE,merge=1,delta=2,group=2
   133                           	psect	text100,local,class=CODE,merge=1,delta=2,group=2
   134                           	psect	text101,local,class=CODE,merge=1,delta=2,group=2
   135                           	psect	text102,local,class=CODE,merge=1,delta=2,group=2
   136                           	psect	text103,local,class=CODE,merge=1,delta=2
   137                           	psect	text104,local,class=CODE,merge=1,delta=2
   138                           	psect	text105,local,class=CODE,merge=1,delta=2
   139                           	psect	text106,local,class=CODE,merge=1,delta=2
   140                           	psect	text107,local,class=CODE,merge=1,delta=2
   141                           	psect	text108,local,class=CODE,merge=1,delta=2
   142                           	psect	text109,local,class=CODE,merge=1,delta=2
   143                           	psect	text110,local,class=CODE,merge=1,delta=2
   144                           	psect	text111,local,class=CODE,merge=1,delta=2
   145                           	psect	text112,local,class=CODE,merge=1,delta=2
   146                           	psect	text113,local,class=CODE,merge=1,delta=2
   147                           	psect	text114,local,class=CODE,merge=1,delta=2
   148                           	psect	text115,local,class=CODE,merge=1,delta=2
   149                           	psect	text116,local,class=CODE,merge=1,delta=2
   150                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   151                           	dabs	1,0x620,48
   152                           	dabs	1,0x5A0,80
   153                           	dabs	1,0x2370,0,_eusartRxStatusBuffer
   154                           	dabs	1,0x7E,2
   155     0000                     
   156                           ; Generated 07/09/2023 GMT
   157                           ; 
   158                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   159                           ; All rights reserved.
   160                           ; 
   161                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   162                           ; 
   163                           ; Redistribution and use in source and binary forms, with or without modification, are
   164                           ; permitted provided that the following conditions are met:
   165                           ; 
   166                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   167                           ;        conditions and the following disclaimer.
   168                           ; 
   169                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   170                           ;        of conditions and the following disclaimer in the documentation and/or other
   171                           ;        materials provided with the distribution. Publication is not required when
   172                           ;        this file is used in an embedded application.
   173                           ; 
   174                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   175                           ;        software without specific prior written permission.
   176                           ; 
   177                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   178                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   179                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   180                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   181                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   182                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   183                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   184                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   185                           ; 
   186                           ; 
   187                           ; Code-generator required, PIC16F1619 Definitions
   188                           ; 
   189                           ; SFR Addresses
   190     0000                     	;# 
   191     0001                     	;# 
   192     0002                     	;# 
   193     0003                     	;# 
   194     0004                     	;# 
   195     0005                     	;# 
   196     0006                     	;# 
   197     0007                     	;# 
   198     0008                     	;# 
   199     0009                     	;# 
   200     000A                     	;# 
   201     000B                     	;# 
   202     000C                     	;# 
   203     000D                     	;# 
   204     000E                     	;# 
   205     0010                     	;# 
   206     0011                     	;# 
   207     0012                     	;# 
   208     0013                     	;# 
   209     0014                     	;# 
   210     0015                     	;# 
   211     0016                     	;# 
   212     0016                     	;# 
   213     0017                     	;# 
   214     0018                     	;# 
   215     0019                     	;# 
   216     001A                     	;# 
   217     001A                     	;# 
   218     001B                     	;# 
   219     001B                     	;# 
   220     001C                     	;# 
   221     001D                     	;# 
   222     001E                     	;# 
   223     001F                     	;# 
   224     008C                     	;# 
   225     008D                     	;# 
   226     008E                     	;# 
   227     0090                     	;# 
   228     0091                     	;# 
   229     0092                     	;# 
   230     0093                     	;# 
   231     0094                     	;# 
   232     0095                     	;# 
   233     0096                     	;# 
   234     0098                     	;# 
   235     0099                     	;# 
   236     009A                     	;# 
   237     009B                     	;# 
   238     009B                     	;# 
   239     009C                     	;# 
   240     009D                     	;# 
   241     009E                     	;# 
   242     009F                     	;# 
   243     010C                     	;# 
   244     010D                     	;# 
   245     010E                     	;# 
   246     0111                     	;# 
   247     0112                     	;# 
   248     0113                     	;# 
   249     0114                     	;# 
   250     0115                     	;# 
   251     0116                     	;# 
   252     0117                     	;# 
   253     0118                     	;# 
   254     0119                     	;# 
   255     011C                     	;# 
   256     018C                     	;# 
   257     018D                     	;# 
   258     018E                     	;# 
   259     0191                     	;# 
   260     0191                     	;# 
   261     0192                     	;# 
   262     0193                     	;# 
   263     0193                     	;# 
   264     0194                     	;# 
   265     0195                     	;# 
   266     0196                     	;# 
   267     0197                     	;# 
   268     0199                     	;# 
   269     0199                     	;# 
   270     0199                     	;# 
   271     019A                     	;# 
   272     019A                     	;# 
   273     019A                     	;# 
   274     019B                     	;# 
   275     019B                     	;# 
   276     019B                     	;# 
   277     019B                     	;# 
   278     019B                     	;# 
   279     019C                     	;# 
   280     019C                     	;# 
   281     019C                     	;# 
   282     019D                     	;# 
   283     019D                     	;# 
   284     019D                     	;# 
   285     019E                     	;# 
   286     019E                     	;# 
   287     019E                     	;# 
   288     019F                     	;# 
   289     019F                     	;# 
   290     019F                     	;# 
   291     019F                     	;# 
   292     019F                     	;# 
   293     020C                     	;# 
   294     020D                     	;# 
   295     020E                     	;# 
   296     0211                     	;# 
   297     0211                     	;# 
   298     0212                     	;# 
   299     0212                     	;# 
   300     0213                     	;# 
   301     0213                     	;# 
   302     0214                     	;# 
   303     0214                     	;# 
   304     0215                     	;# 
   305     0215                     	;# 
   306     0215                     	;# 
   307     0215                     	;# 
   308     0216                     	;# 
   309     0216                     	;# 
   310     0217                     	;# 
   311     0217                     	;# 
   312     028C                     	;# 
   313     028D                     	;# 
   314     028E                     	;# 
   315     0291                     	;# 
   316     0291                     	;# 
   317     0292                     	;# 
   318     0293                     	;# 
   319     0294                     	;# 
   320     0298                     	;# 
   321     0298                     	;# 
   322     0299                     	;# 
   323     029A                     	;# 
   324     029B                     	;# 
   325     029E                     	;# 
   326     030C                     	;# 
   327     030D                     	;# 
   328     030E                     	;# 
   329     038C                     	;# 
   330     038D                     	;# 
   331     038E                     	;# 
   332     0391                     	;# 
   333     0392                     	;# 
   334     0393                     	;# 
   335     0394                     	;# 
   336     0395                     	;# 
   337     0396                     	;# 
   338     0397                     	;# 
   339     0398                     	;# 
   340     0399                     	;# 
   341     040E                     	;# 
   342     0413                     	;# 
   343     0413                     	;# 
   344     0414                     	;# 
   345     0414                     	;# 
   346     0415                     	;# 
   347     0416                     	;# 
   348     0417                     	;# 
   349     0418                     	;# 
   350     041A                     	;# 
   351     041A                     	;# 
   352     041B                     	;# 
   353     041B                     	;# 
   354     041C                     	;# 
   355     041D                     	;# 
   356     041E                     	;# 
   357     041F                     	;# 
   358     0493                     	;# 
   359     0494                     	;# 
   360     0495                     	;# 
   361     0496                     	;# 
   362     049A                     	;# 
   363     049B                     	;# 
   364     049C                     	;# 
   365     049D                     	;# 
   366     058C                     	;# 
   367     058C                     	;# 
   368     058D                     	;# 
   369     058E                     	;# 
   370     058E                     	;# 
   371     058F                     	;# 
   372     0590                     	;# 
   373     0590                     	;# 
   374     0591                     	;# 
   375     0592                     	;# 
   376     0592                     	;# 
   377     0593                     	;# 
   378     0594                     	;# 
   379     0594                     	;# 
   380     0595                     	;# 
   381     0596                     	;# 
   382     0596                     	;# 
   383     0597                     	;# 
   384     0598                     	;# 
   385     0599                     	;# 
   386     059A                     	;# 
   387     059B                     	;# 
   388     059B                     	;# 
   389     059C                     	;# 
   390     059D                     	;# 
   391     060C                     	;# 
   392     060C                     	;# 
   393     060D                     	;# 
   394     060E                     	;# 
   395     060F                     	;# 
   396     060F                     	;# 
   397     0610                     	;# 
   398     0611                     	;# 
   399     0612                     	;# 
   400     0613                     	;# 
   401     0614                     	;# 
   402     0617                     	;# 
   403     0617                     	;# 
   404     0618                     	;# 
   405     0619                     	;# 
   406     061A                     	;# 
   407     061A                     	;# 
   408     061B                     	;# 
   409     061C                     	;# 
   410     0691                     	;# 
   411     0692                     	;# 
   412     0693                     	;# 
   413     0694                     	;# 
   414     0695                     	;# 
   415     0696                     	;# 
   416     0697                     	;# 
   417     0699                     	;# 
   418     069A                     	;# 
   419     0711                     	;# 
   420     0712                     	;# 
   421     0713                     	;# 
   422     0714                     	;# 
   423     0715                     	;# 
   424     0718                     	;# 
   425     0718                     	;# 
   426     0719                     	;# 
   427     071A                     	;# 
   428     071A                     	;# 
   429     071B                     	;# 
   430     071C                     	;# 
   431     071D                     	;# 
   432     0791                     	;# 
   433     0791                     	;# 
   434     0792                     	;# 
   435     0793                     	;# 
   436     0793                     	;# 
   437     0794                     	;# 
   438     0795                     	;# 
   439     0795                     	;# 
   440     0796                     	;# 
   441     0797                     	;# 
   442     0797                     	;# 
   443     0798                     	;# 
   444     0799                     	;# 
   445     079A                     	;# 
   446     080C                     	;# 
   447     080C                     	;# 
   448     080D                     	;# 
   449     080E                     	;# 
   450     080E                     	;# 
   451     080F                     	;# 
   452     0810                     	;# 
   453     0810                     	;# 
   454     0811                     	;# 
   455     0812                     	;# 
   456     0812                     	;# 
   457     0813                     	;# 
   458     0814                     	;# 
   459     0815                     	;# 
   460     0816                     	;# 
   461     0817                     	;# 
   462     0818                     	;# 
   463     0819                     	;# 
   464     081A                     	;# 
   465     081A                     	;# 
   466     081B                     	;# 
   467     081C                     	;# 
   468     081C                     	;# 
   469     081D                     	;# 
   470     088C                     	;# 
   471     088D                     	;# 
   472     088E                     	;# 
   473     088F                     	;# 
   474     088F                     	;# 
   475     0890                     	;# 
   476     0891                     	;# 
   477     0892                     	;# 
   478     0893                     	;# 
   479     0893                     	;# 
   480     0894                     	;# 
   481     0895                     	;# 
   482     0896                     	;# 
   483     0897                     	;# 
   484     0897                     	;# 
   485     0898                     	;# 
   486     0899                     	;# 
   487     0D8C                     	;# 
   488     0D8C                     	;# 
   489     0D8D                     	;# 
   490     0D8E                     	;# 
   491     0D8F                     	;# 
   492     0D8F                     	;# 
   493     0D90                     	;# 
   494     0D91                     	;# 
   495     0D92                     	;# 
   496     0D92                     	;# 
   497     0D93                     	;# 
   498     0D94                     	;# 
   499     0D95                     	;# 
   500     0D95                     	;# 
   501     0D96                     	;# 
   502     0D97                     	;# 
   503     0D98                     	;# 
   504     0D99                     	;# 
   505     0D9A                     	;# 
   506     0D9B                     	;# 
   507     0D9C                     	;# 
   508     0D9D                     	;# 
   509     0D9E                     	;# 
   510     0D9E                     	;# 
   511     0D9F                     	;# 
   512     0DA0                     	;# 
   513     0DA1                     	;# 
   514     0DA1                     	;# 
   515     0DA2                     	;# 
   516     0DA3                     	;# 
   517     0DA4                     	;# 
   518     0DA4                     	;# 
   519     0DA5                     	;# 
   520     0DA6                     	;# 
   521     0DA7                     	;# 
   522     0DA7                     	;# 
   523     0DA8                     	;# 
   524     0DA9                     	;# 
   525     0DAA                     	;# 
   526     0DAB                     	;# 
   527     0DAC                     	;# 
   528     0DAD                     	;# 
   529     0DAE                     	;# 
   530     0DAF                     	;# 
   531     0E0F                     	;# 
   532     0E10                     	;# 
   533     0E11                     	;# 
   534     0E12                     	;# 
   535     0E13                     	;# 
   536     0E14                     	;# 
   537     0E15                     	;# 
   538     0E16                     	;# 
   539     0E17                     	;# 
   540     0E17                     	;# 
   541     0E18                     	;# 
   542     0E18                     	;# 
   543     0E19                     	;# 
   544     0E1A                     	;# 
   545     0E1B                     	;# 
   546     0E1B                     	;# 
   547     0E1C                     	;# 
   548     0E1D                     	;# 
   549     0E1E                     	;# 
   550     0E1E                     	;# 
   551     0E1F                     	;# 
   552     0E20                     	;# 
   553     0E21                     	;# 
   554     0E22                     	;# 
   555     0E23                     	;# 
   556     0E24                     	;# 
   557     0E25                     	;# 
   558     0E26                     	;# 
   559     0E27                     	;# 
   560     0E28                     	;# 
   561     0E29                     	;# 
   562     0E2A                     	;# 
   563     0E2B                     	;# 
   564     0E2C                     	;# 
   565     0E2D                     	;# 
   566     0E2E                     	;# 
   567     0E90                     	;# 
   568     0E91                     	;# 
   569     0E92                     	;# 
   570     0E94                     	;# 
   571     0E95                     	;# 
   572     0E9C                     	;# 
   573     0E9D                     	;# 
   574     0E9E                     	;# 
   575     0E9F                     	;# 
   576     0EA0                     	;# 
   577     0EA1                     	;# 
   578     0EA2                     	;# 
   579     0EA3                     	;# 
   580     0EA4                     	;# 
   581     0EA5                     	;# 
   582     0EA6                     	;# 
   583     0EA7                     	;# 
   584     0F0F                     	;# 
   585     0F10                     	;# 
   586     0F11                     	;# 
   587     0F12                     	;# 
   588     0F13                     	;# 
   589     0F14                     	;# 
   590     0F15                     	;# 
   591     0F16                     	;# 
   592     0F17                     	;# 
   593     0F18                     	;# 
   594     0F19                     	;# 
   595     0F1A                     	;# 
   596     0F1B                     	;# 
   597     0F1C                     	;# 
   598     0F1D                     	;# 
   599     0F1E                     	;# 
   600     0F1F                     	;# 
   601     0F20                     	;# 
   602     0F21                     	;# 
   603     0F22                     	;# 
   604     0F23                     	;# 
   605     0F24                     	;# 
   606     0F25                     	;# 
   607     0F26                     	;# 
   608     0F27                     	;# 
   609     0F28                     	;# 
   610     0F29                     	;# 
   611     0F2A                     	;# 
   612     0F2B                     	;# 
   613     0F2C                     	;# 
   614     0F2D                     	;# 
   615     0F2E                     	;# 
   616     0F2F                     	;# 
   617     0F30                     	;# 
   618     0F31                     	;# 
   619     0F32                     	;# 
   620     0F33                     	;# 
   621     0F34                     	;# 
   622     0F35                     	;# 
   623     0F36                     	;# 
   624     0F37                     	;# 
   625     0FE4                     	;# 
   626     0FE5                     	;# 
   627     0FE6                     	;# 
   628     0FE7                     	;# 
   629     0FE8                     	;# 
   630     0FE9                     	;# 
   631     0FEA                     	;# 
   632     0FEB                     	;# 
   633     0FED                     	;# 
   634     0FEE                     	;# 
   635     0FEF                     	;# 
   636     0000                     	;# 
   637     0001                     	;# 
   638     0002                     	;# 
   639     0003                     	;# 
   640     0004                     	;# 
   641     0005                     	;# 
   642     0006                     	;# 
   643     0007                     	;# 
   644     0008                     	;# 
   645     0009                     	;# 
   646     000A                     	;# 
   647     000B                     	;# 
   648     000C                     	;# 
   649     000D                     	;# 
   650     000E                     	;# 
   651     0010                     	;# 
   652     0011                     	;# 
   653     0012                     	;# 
   654     0013                     	;# 
   655     0014                     	;# 
   656     0015                     	;# 
   657     0016                     	;# 
   658     0016                     	;# 
   659     0017                     	;# 
   660     0018                     	;# 
   661     0019                     	;# 
   662     001A                     	;# 
   663     001A                     	;# 
   664     001B                     	;# 
   665     001B                     	;# 
   666     001C                     	;# 
   667     001D                     	;# 
   668     001E                     	;# 
   669     001F                     	;# 
   670     008C                     	;# 
   671     008D                     	;# 
   672     008E                     	;# 
   673     0090                     	;# 
   674     0091                     	;# 
   675     0092                     	;# 
   676     0093                     	;# 
   677     0094                     	;# 
   678     0095                     	;# 
   679     0096                     	;# 
   680     0098                     	;# 
   681     0099                     	;# 
   682     009A                     	;# 
   683     009B                     	;# 
   684     009B                     	;# 
   685     009C                     	;# 
   686     009D                     	;# 
   687     009E                     	;# 
   688     009F                     	;# 
   689     010C                     	;# 
   690     010D                     	;# 
   691     010E                     	;# 
   692     0111                     	;# 
   693     0112                     	;# 
   694     0113                     	;# 
   695     0114                     	;# 
   696     0115                     	;# 
   697     0116                     	;# 
   698     0117                     	;# 
   699     0118                     	;# 
   700     0119                     	;# 
   701     011C                     	;# 
   702     018C                     	;# 
   703     018D                     	;# 
   704     018E                     	;# 
   705     0191                     	;# 
   706     0191                     	;# 
   707     0192                     	;# 
   708     0193                     	;# 
   709     0193                     	;# 
   710     0194                     	;# 
   711     0195                     	;# 
   712     0196                     	;# 
   713     0197                     	;# 
   714     0199                     	;# 
   715     0199                     	;# 
   716     0199                     	;# 
   717     019A                     	;# 
   718     019A                     	;# 
   719     019A                     	;# 
   720     019B                     	;# 
   721     019B                     	;# 
   722     019B                     	;# 
   723     019B                     	;# 
   724     019B                     	;# 
   725     019C                     	;# 
   726     019C                     	;# 
   727     019C                     	;# 
   728     019D                     	;# 
   729     019D                     	;# 
   730     019D                     	;# 
   731     019E                     	;# 
   732     019E                     	;# 
   733     019E                     	;# 
   734     019F                     	;# 
   735     019F                     	;# 
   736     019F                     	;# 
   737     019F                     	;# 
   738     019F                     	;# 
   739     020C                     	;# 
   740     020D                     	;# 
   741     020E                     	;# 
   742     0211                     	;# 
   743     0211                     	;# 
   744     0212                     	;# 
   745     0212                     	;# 
   746     0213                     	;# 
   747     0213                     	;# 
   748     0214                     	;# 
   749     0214                     	;# 
   750     0215                     	;# 
   751     0215                     	;# 
   752     0215                     	;# 
   753     0215                     	;# 
   754     0216                     	;# 
   755     0216                     	;# 
   756     0217                     	;# 
   757     0217                     	;# 
   758     028C                     	;# 
   759     028D                     	;# 
   760     028E                     	;# 
   761     0291                     	;# 
   762     0291                     	;# 
   763     0292                     	;# 
   764     0293                     	;# 
   765     0294                     	;# 
   766     0298                     	;# 
   767     0298                     	;# 
   768     0299                     	;# 
   769     029A                     	;# 
   770     029B                     	;# 
   771     029E                     	;# 
   772     030C                     	;# 
   773     030D                     	;# 
   774     030E                     	;# 
   775     038C                     	;# 
   776     038D                     	;# 
   777     038E                     	;# 
   778     0391                     	;# 
   779     0392                     	;# 
   780     0393                     	;# 
   781     0394                     	;# 
   782     0395                     	;# 
   783     0396                     	;# 
   784     0397                     	;# 
   785     0398                     	;# 
   786     0399                     	;# 
   787     040E                     	;# 
   788     0413                     	;# 
   789     0413                     	;# 
   790     0414                     	;# 
   791     0414                     	;# 
   792     0415                     	;# 
   793     0416                     	;# 
   794     0417                     	;# 
   795     0418                     	;# 
   796     041A                     	;# 
   797     041A                     	;# 
   798     041B                     	;# 
   799     041B                     	;# 
   800     041C                     	;# 
   801     041D                     	;# 
   802     041E                     	;# 
   803     041F                     	;# 
   804     0493                     	;# 
   805     0494                     	;# 
   806     0495                     	;# 
   807     0496                     	;# 
   808     049A                     	;# 
   809     049B                     	;# 
   810     049C                     	;# 
   811     049D                     	;# 
   812     058C                     	;# 
   813     058C                     	;# 
   814     058D                     	;# 
   815     058E                     	;# 
   816     058E                     	;# 
   817     058F                     	;# 
   818     0590                     	;# 
   819     0590                     	;# 
   820     0591                     	;# 
   821     0592                     	;# 
   822     0592                     	;# 
   823     0593                     	;# 
   824     0594                     	;# 
   825     0594                     	;# 
   826     0595                     	;# 
   827     0596                     	;# 
   828     0596                     	;# 
   829     0597                     	;# 
   830     0598                     	;# 
   831     0599                     	;# 
   832     059A                     	;# 
   833     059B                     	;# 
   834     059B                     	;# 
   835     059C                     	;# 
   836     059D                     	;# 
   837     060C                     	;# 
   838     060C                     	;# 
   839     060D                     	;# 
   840     060E                     	;# 
   841     060F                     	;# 
   842     060F                     	;# 
   843     0610                     	;# 
   844     0611                     	;# 
   845     0612                     	;# 
   846     0613                     	;# 
   847     0614                     	;# 
   848     0617                     	;# 
   849     0617                     	;# 
   850     0618                     	;# 
   851     0619                     	;# 
   852     061A                     	;# 
   853     061A                     	;# 
   854     061B                     	;# 
   855     061C                     	;# 
   856     0691                     	;# 
   857     0692                     	;# 
   858     0693                     	;# 
   859     0694                     	;# 
   860     0695                     	;# 
   861     0696                     	;# 
   862     0697                     	;# 
   863     0699                     	;# 
   864     069A                     	;# 
   865     0711                     	;# 
   866     0712                     	;# 
   867     0713                     	;# 
   868     0714                     	;# 
   869     0715                     	;# 
   870     0718                     	;# 
   871     0718                     	;# 
   872     0719                     	;# 
   873     071A                     	;# 
   874     071A                     	;# 
   875     071B                     	;# 
   876     071C                     	;# 
   877     071D                     	;# 
   878     0791                     	;# 
   879     0791                     	;# 
   880     0792                     	;# 
   881     0793                     	;# 
   882     0793                     	;# 
   883     0794                     	;# 
   884     0795                     	;# 
   885     0795                     	;# 
   886     0796                     	;# 
   887     0797                     	;# 
   888     0797                     	;# 
   889     0798                     	;# 
   890     0799                     	;# 
   891     079A                     	;# 
   892     080C                     	;# 
   893     080C                     	;# 
   894     080D                     	;# 
   895     080E                     	;# 
   896     080E                     	;# 
   897     080F                     	;# 
   898     0810                     	;# 
   899     0810                     	;# 
   900     0811                     	;# 
   901     0812                     	;# 
   902     0812                     	;# 
   903     0813                     	;# 
   904     0814                     	;# 
   905     0815                     	;# 
   906     0816                     	;# 
   907     0817                     	;# 
   908     0818                     	;# 
   909     0819                     	;# 
   910     081A                     	;# 
   911     081A                     	;# 
   912     081B                     	;# 
   913     081C                     	;# 
   914     081C                     	;# 
   915     081D                     	;# 
   916     088C                     	;# 
   917     088D                     	;# 
   918     088E                     	;# 
   919     088F                     	;# 
   920     088F                     	;# 
   921     0890                     	;# 
   922     0891                     	;# 
   923     0892                     	;# 
   924     0893                     	;# 
   925     0893                     	;# 
   926     0894                     	;# 
   927     0895                     	;# 
   928     0896                     	;# 
   929     0897                     	;# 
   930     0897                     	;# 
   931     0898                     	;# 
   932     0899                     	;# 
   933     0D8C                     	;# 
   934     0D8C                     	;# 
   935     0D8D                     	;# 
   936     0D8E                     	;# 
   937     0D8F                     	;# 
   938     0D8F                     	;# 
   939     0D90                     	;# 
   940     0D91                     	;# 
   941     0D92                     	;# 
   942     0D92                     	;# 
   943     0D93                     	;# 
   944     0D94                     	;# 
   945     0D95                     	;# 
   946     0D95                     	;# 
   947     0D96                     	;# 
   948     0D97                     	;# 
   949     0D98                     	;# 
   950     0D99                     	;# 
   951     0D9A                     	;# 
   952     0D9B                     	;# 
   953     0D9C                     	;# 
   954     0D9D                     	;# 
   955     0D9E                     	;# 
   956     0D9E                     	;# 
   957     0D9F                     	;# 
   958     0DA0                     	;# 
   959     0DA1                     	;# 
   960     0DA1                     	;# 
   961     0DA2                     	;# 
   962     0DA3                     	;# 
   963     0DA4                     	;# 
   964     0DA4                     	;# 
   965     0DA5                     	;# 
   966     0DA6                     	;# 
   967     0DA7                     	;# 
   968     0DA7                     	;# 
   969     0DA8                     	;# 
   970     0DA9                     	;# 
   971     0DAA                     	;# 
   972     0DAB                     	;# 
   973     0DAC                     	;# 
   974     0DAD                     	;# 
   975     0DAE                     	;# 
   976     0DAF                     	;# 
   977     0E0F                     	;# 
   978     0E10                     	;# 
   979     0E11                     	;# 
   980     0E12                     	;# 
   981     0E13                     	;# 
   982     0E14                     	;# 
   983     0E15                     	;# 
   984     0E16                     	;# 
   985     0E17                     	;# 
   986     0E17                     	;# 
   987     0E18                     	;# 
   988     0E18                     	;# 
   989     0E19                     	;# 
   990     0E1A                     	;# 
   991     0E1B                     	;# 
   992     0E1B                     	;# 
   993     0E1C                     	;# 
   994     0E1D                     	;# 
   995     0E1E                     	;# 
   996     0E1E                     	;# 
   997     0E1F                     	;# 
   998     0E20                     	;# 
   999     0E21                     	;# 
  1000     0E22                     	;# 
  1001     0E23                     	;# 
  1002     0E24                     	;# 
  1003     0E25                     	;# 
  1004     0E26                     	;# 
  1005     0E27                     	;# 
  1006     0E28                     	;# 
  1007     0E29                     	;# 
  1008     0E2A                     	;# 
  1009     0E2B                     	;# 
  1010     0E2C                     	;# 
  1011     0E2D                     	;# 
  1012     0E2E                     	;# 
  1013     0E90                     	;# 
  1014     0E91                     	;# 
  1015     0E92                     	;# 
  1016     0E94                     	;# 
  1017     0E95                     	;# 
  1018     0E9C                     	;# 
  1019     0E9D                     	;# 
  1020     0E9E                     	;# 
  1021     0E9F                     	;# 
  1022     0EA0                     	;# 
  1023     0EA1                     	;# 
  1024     0EA2                     	;# 
  1025     0EA3                     	;# 
  1026     0EA4                     	;# 
  1027     0EA5                     	;# 
  1028     0EA6                     	;# 
  1029     0EA7                     	;# 
  1030     0F0F                     	;# 
  1031     0F10                     	;# 
  1032     0F11                     	;# 
  1033     0F12                     	;# 
  1034     0F13                     	;# 
  1035     0F14                     	;# 
  1036     0F15                     	;# 
  1037     0F16                     	;# 
  1038     0F17                     	;# 
  1039     0F18                     	;# 
  1040     0F19                     	;# 
  1041     0F1A                     	;# 
  1042     0F1B                     	;# 
  1043     0F1C                     	;# 
  1044     0F1D                     	;# 
  1045     0F1E                     	;# 
  1046     0F1F                     	;# 
  1047     0F20                     	;# 
  1048     0F21                     	;# 
  1049     0F22                     	;# 
  1050     0F23                     	;# 
  1051     0F24                     	;# 
  1052     0F25                     	;# 
  1053     0F26                     	;# 
  1054     0F27                     	;# 
  1055     0F28                     	;# 
  1056     0F29                     	;# 
  1057     0F2A                     	;# 
  1058     0F2B                     	;# 
  1059     0F2C                     	;# 
  1060     0F2D                     	;# 
  1061     0F2E                     	;# 
  1062     0F2F                     	;# 
  1063     0F30                     	;# 
  1064     0F31                     	;# 
  1065     0F32                     	;# 
  1066     0F33                     	;# 
  1067     0F34                     	;# 
  1068     0F35                     	;# 
  1069     0F36                     	;# 
  1070     0F37                     	;# 
  1071     0FE4                     	;# 
  1072     0FE5                     	;# 
  1073     0FE6                     	;# 
  1074     0FE7                     	;# 
  1075     0FE8                     	;# 
  1076     0FE9                     	;# 
  1077     0FEA                     	;# 
  1078     0FEB                     	;# 
  1079     0FED                     	;# 
  1080     0FEE                     	;# 
  1081     0FEF                     	;# 
  1082     0000                     	;# 
  1083     0001                     	;# 
  1084     0002                     	;# 
  1085     0003                     	;# 
  1086     0004                     	;# 
  1087     0005                     	;# 
  1088     0006                     	;# 
  1089     0007                     	;# 
  1090     0008                     	;# 
  1091     0009                     	;# 
  1092     000A                     	;# 
  1093     000B                     	;# 
  1094     000C                     	;# 
  1095     000D                     	;# 
  1096     000E                     	;# 
  1097     0010                     	;# 
  1098     0011                     	;# 
  1099     0012                     	;# 
  1100     0013                     	;# 
  1101     0014                     	;# 
  1102     0015                     	;# 
  1103     0016                     	;# 
  1104     0016                     	;# 
  1105     0017                     	;# 
  1106     0018                     	;# 
  1107     0019                     	;# 
  1108     001A                     	;# 
  1109     001A                     	;# 
  1110     001B                     	;# 
  1111     001B                     	;# 
  1112     001C                     	;# 
  1113     001D                     	;# 
  1114     001E                     	;# 
  1115     001F                     	;# 
  1116     008C                     	;# 
  1117     008D                     	;# 
  1118     008E                     	;# 
  1119     0090                     	;# 
  1120     0091                     	;# 
  1121     0092                     	;# 
  1122     0093                     	;# 
  1123     0094                     	;# 
  1124     0095                     	;# 
  1125     0096                     	;# 
  1126     0098                     	;# 
  1127     0099                     	;# 
  1128     009A                     	;# 
  1129     009B                     	;# 
  1130     009B                     	;# 
  1131     009C                     	;# 
  1132     009D                     	;# 
  1133     009E                     	;# 
  1134     009F                     	;# 
  1135     010C                     	;# 
  1136     010D                     	;# 
  1137     010E                     	;# 
  1138     0111                     	;# 
  1139     0112                     	;# 
  1140     0113                     	;# 
  1141     0114                     	;# 
  1142     0115                     	;# 
  1143     0116                     	;# 
  1144     0117                     	;# 
  1145     0118                     	;# 
  1146     0119                     	;# 
  1147     011C                     	;# 
  1148     018C                     	;# 
  1149     018D                     	;# 
  1150     018E                     	;# 
  1151     0191                     	;# 
  1152     0191                     	;# 
  1153     0192                     	;# 
  1154     0193                     	;# 
  1155     0193                     	;# 
  1156     0194                     	;# 
  1157     0195                     	;# 
  1158     0196                     	;# 
  1159     0197                     	;# 
  1160     0199                     	;# 
  1161     0199                     	;# 
  1162     0199                     	;# 
  1163     019A                     	;# 
  1164     019A                     	;# 
  1165     019A                     	;# 
  1166     019B                     	;# 
  1167     019B                     	;# 
  1168     019B                     	;# 
  1169     019B                     	;# 
  1170     019B                     	;# 
  1171     019C                     	;# 
  1172     019C                     	;# 
  1173     019C                     	;# 
  1174     019D                     	;# 
  1175     019D                     	;# 
  1176     019D                     	;# 
  1177     019E                     	;# 
  1178     019E                     	;# 
  1179     019E                     	;# 
  1180     019F                     	;# 
  1181     019F                     	;# 
  1182     019F                     	;# 
  1183     019F                     	;# 
  1184     019F                     	;# 
  1185     020C                     	;# 
  1186     020D                     	;# 
  1187     020E                     	;# 
  1188     0211                     	;# 
  1189     0211                     	;# 
  1190     0212                     	;# 
  1191     0212                     	;# 
  1192     0213                     	;# 
  1193     0213                     	;# 
  1194     0214                     	;# 
  1195     0214                     	;# 
  1196     0215                     	;# 
  1197     0215                     	;# 
  1198     0215                     	;# 
  1199     0215                     	;# 
  1200     0216                     	;# 
  1201     0216                     	;# 
  1202     0217                     	;# 
  1203     0217                     	;# 
  1204     028C                     	;# 
  1205     028D                     	;# 
  1206     028E                     	;# 
  1207     0291                     	;# 
  1208     0291                     	;# 
  1209     0292                     	;# 
  1210     0293                     	;# 
  1211     0294                     	;# 
  1212     0298                     	;# 
  1213     0298                     	;# 
  1214     0299                     	;# 
  1215     029A                     	;# 
  1216     029B                     	;# 
  1217     029E                     	;# 
  1218     030C                     	;# 
  1219     030D                     	;# 
  1220     030E                     	;# 
  1221     038C                     	;# 
  1222     038D                     	;# 
  1223     038E                     	;# 
  1224     0391                     	;# 
  1225     0392                     	;# 
  1226     0393                     	;# 
  1227     0394                     	;# 
  1228     0395                     	;# 
  1229     0396                     	;# 
  1230     0397                     	;# 
  1231     0398                     	;# 
  1232     0399                     	;# 
  1233     040E                     	;# 
  1234     0413                     	;# 
  1235     0413                     	;# 
  1236     0414                     	;# 
  1237     0414                     	;# 
  1238     0415                     	;# 
  1239     0416                     	;# 
  1240     0417                     	;# 
  1241     0418                     	;# 
  1242     041A                     	;# 
  1243     041A                     	;# 
  1244     041B                     	;# 
  1245     041B                     	;# 
  1246     041C                     	;# 
  1247     041D                     	;# 
  1248     041E                     	;# 
  1249     041F                     	;# 
  1250     0493                     	;# 
  1251     0494                     	;# 
  1252     0495                     	;# 
  1253     0496                     	;# 
  1254     049A                     	;# 
  1255     049B                     	;# 
  1256     049C                     	;# 
  1257     049D                     	;# 
  1258     058C                     	;# 
  1259     058C                     	;# 
  1260     058D                     	;# 
  1261     058E                     	;# 
  1262     058E                     	;# 
  1263     058F                     	;# 
  1264     0590                     	;# 
  1265     0590                     	;# 
  1266     0591                     	;# 
  1267     0592                     	;# 
  1268     0592                     	;# 
  1269     0593                     	;# 
  1270     0594                     	;# 
  1271     0594                     	;# 
  1272     0595                     	;# 
  1273     0596                     	;# 
  1274     0596                     	;# 
  1275     0597                     	;# 
  1276     0598                     	;# 
  1277     0599                     	;# 
  1278     059A                     	;# 
  1279     059B                     	;# 
  1280     059B                     	;# 
  1281     059C                     	;# 
  1282     059D                     	;# 
  1283     060C                     	;# 
  1284     060C                     	;# 
  1285     060D                     	;# 
  1286     060E                     	;# 
  1287     060F                     	;# 
  1288     060F                     	;# 
  1289     0610                     	;# 
  1290     0611                     	;# 
  1291     0612                     	;# 
  1292     0613                     	;# 
  1293     0614                     	;# 
  1294     0617                     	;# 
  1295     0617                     	;# 
  1296     0618                     	;# 
  1297     0619                     	;# 
  1298     061A                     	;# 
  1299     061A                     	;# 
  1300     061B                     	;# 
  1301     061C                     	;# 
  1302     0691                     	;# 
  1303     0692                     	;# 
  1304     0693                     	;# 
  1305     0694                     	;# 
  1306     0695                     	;# 
  1307     0696                     	;# 
  1308     0697                     	;# 
  1309     0699                     	;# 
  1310     069A                     	;# 
  1311     0711                     	;# 
  1312     0712                     	;# 
  1313     0713                     	;# 
  1314     0714                     	;# 
  1315     0715                     	;# 
  1316     0718                     	;# 
  1317     0718                     	;# 
  1318     0719                     	;# 
  1319     071A                     	;# 
  1320     071A                     	;# 
  1321     071B                     	;# 
  1322     071C                     	;# 
  1323     071D                     	;# 
  1324     0791                     	;# 
  1325     0791                     	;# 
  1326     0792                     	;# 
  1327     0793                     	;# 
  1328     0793                     	;# 
  1329     0794                     	;# 
  1330     0795                     	;# 
  1331     0795                     	;# 
  1332     0796                     	;# 
  1333     0797                     	;# 
  1334     0797                     	;# 
  1335     0798                     	;# 
  1336     0799                     	;# 
  1337     079A                     	;# 
  1338     080C                     	;# 
  1339     080C                     	;# 
  1340     080D                     	;# 
  1341     080E                     	;# 
  1342     080E                     	;# 
  1343     080F                     	;# 
  1344     0810                     	;# 
  1345     0810                     	;# 
  1346     0811                     	;# 
  1347     0812                     	;# 
  1348     0812                     	;# 
  1349     0813                     	;# 
  1350     0814                     	;# 
  1351     0815                     	;# 
  1352     0816                     	;# 
  1353     0817                     	;# 
  1354     0818                     	;# 
  1355     0819                     	;# 
  1356     081A                     	;# 
  1357     081A                     	;# 
  1358     081B                     	;# 
  1359     081C                     	;# 
  1360     081C                     	;# 
  1361     081D                     	;# 
  1362     088C                     	;# 
  1363     088D                     	;# 
  1364     088E                     	;# 
  1365     088F                     	;# 
  1366     088F                     	;# 
  1367     0890                     	;# 
  1368     0891                     	;# 
  1369     0892                     	;# 
  1370     0893                     	;# 
  1371     0893                     	;# 
  1372     0894                     	;# 
  1373     0895                     	;# 
  1374     0896                     	;# 
  1375     0897                     	;# 
  1376     0897                     	;# 
  1377     0898                     	;# 
  1378     0899                     	;# 
  1379     0D8C                     	;# 
  1380     0D8C                     	;# 
  1381     0D8D                     	;# 
  1382     0D8E                     	;# 
  1383     0D8F                     	;# 
  1384     0D8F                     	;# 
  1385     0D90                     	;# 
  1386     0D91                     	;# 
  1387     0D92                     	;# 
  1388     0D92                     	;# 
  1389     0D93                     	;# 
  1390     0D94                     	;# 
  1391     0D95                     	;# 
  1392     0D95                     	;# 
  1393     0D96                     	;# 
  1394     0D97                     	;# 
  1395     0D98                     	;# 
  1396     0D99                     	;# 
  1397     0D9A                     	;# 
  1398     0D9B                     	;# 
  1399     0D9C                     	;# 
  1400     0D9D                     	;# 
  1401     0D9E                     	;# 
  1402     0D9E                     	;# 
  1403     0D9F                     	;# 
  1404     0DA0                     	;# 
  1405     0DA1                     	;# 
  1406     0DA1                     	;# 
  1407     0DA2                     	;# 
  1408     0DA3                     	;# 
  1409     0DA4                     	;# 
  1410     0DA4                     	;# 
  1411     0DA5                     	;# 
  1412     0DA6                     	;# 
  1413     0DA7                     	;# 
  1414     0DA7                     	;# 
  1415     0DA8                     	;# 
  1416     0DA9                     	;# 
  1417     0DAA                     	;# 
  1418     0DAB                     	;# 
  1419     0DAC                     	;# 
  1420     0DAD                     	;# 
  1421     0DAE                     	;# 
  1422     0DAF                     	;# 
  1423     0E0F                     	;# 
  1424     0E10                     	;# 
  1425     0E11                     	;# 
  1426     0E12                     	;# 
  1427     0E13                     	;# 
  1428     0E14                     	;# 
  1429     0E15                     	;# 
  1430     0E16                     	;# 
  1431     0E17                     	;# 
  1432     0E17                     	;# 
  1433     0E18                     	;# 
  1434     0E18                     	;# 
  1435     0E19                     	;# 
  1436     0E1A                     	;# 
  1437     0E1B                     	;# 
  1438     0E1B                     	;# 
  1439     0E1C                     	;# 
  1440     0E1D                     	;# 
  1441     0E1E                     	;# 
  1442     0E1E                     	;# 
  1443     0E1F                     	;# 
  1444     0E20                     	;# 
  1445     0E21                     	;# 
  1446     0E22                     	;# 
  1447     0E23                     	;# 
  1448     0E24                     	;# 
  1449     0E25                     	;# 
  1450     0E26                     	;# 
  1451     0E27                     	;# 
  1452     0E28                     	;# 
  1453     0E29                     	;# 
  1454     0E2A                     	;# 
  1455     0E2B                     	;# 
  1456     0E2C                     	;# 
  1457     0E2D                     	;# 
  1458     0E2E                     	;# 
  1459     0E90                     	;# 
  1460     0E91                     	;# 
  1461     0E92                     	;# 
  1462     0E94                     	;# 
  1463     0E95                     	;# 
  1464     0E9C                     	;# 
  1465     0E9D                     	;# 
  1466     0E9E                     	;# 
  1467     0E9F                     	;# 
  1468     0EA0                     	;# 
  1469     0EA1                     	;# 
  1470     0EA2                     	;# 
  1471     0EA3                     	;# 
  1472     0EA4                     	;# 
  1473     0EA5                     	;# 
  1474     0EA6                     	;# 
  1475     0EA7                     	;# 
  1476     0F0F                     	;# 
  1477     0F10                     	;# 
  1478     0F11                     	;# 
  1479     0F12                     	;# 
  1480     0F13                     	;# 
  1481     0F14                     	;# 
  1482     0F15                     	;# 
  1483     0F16                     	;# 
  1484     0F17                     	;# 
  1485     0F18                     	;# 
  1486     0F19                     	;# 
  1487     0F1A                     	;# 
  1488     0F1B                     	;# 
  1489     0F1C                     	;# 
  1490     0F1D                     	;# 
  1491     0F1E                     	;# 
  1492     0F1F                     	;# 
  1493     0F20                     	;# 
  1494     0F21                     	;# 
  1495     0F22                     	;# 
  1496     0F23                     	;# 
  1497     0F24                     	;# 
  1498     0F25                     	;# 
  1499     0F26                     	;# 
  1500     0F27                     	;# 
  1501     0F28                     	;# 
  1502     0F29                     	;# 
  1503     0F2A                     	;# 
  1504     0F2B                     	;# 
  1505     0F2C                     	;# 
  1506     0F2D                     	;# 
  1507     0F2E                     	;# 
  1508     0F2F                     	;# 
  1509     0F30                     	;# 
  1510     0F31                     	;# 
  1511     0F32                     	;# 
  1512     0F33                     	;# 
  1513     0F34                     	;# 
  1514     0F35                     	;# 
  1515     0F36                     	;# 
  1516     0F37                     	;# 
  1517     0FE4                     	;# 
  1518     0FE5                     	;# 
  1519     0FE6                     	;# 
  1520     0FE7                     	;# 
  1521     0FE8                     	;# 
  1522     0FE9                     	;# 
  1523     0FEA                     	;# 
  1524     0FEB                     	;# 
  1525     0FED                     	;# 
  1526     0FEE                     	;# 
  1527     0FEF                     	;# 
  1528     0000                     	;# 
  1529     0001                     	;# 
  1530     0002                     	;# 
  1531     0003                     	;# 
  1532     0004                     	;# 
  1533     0005                     	;# 
  1534     0006                     	;# 
  1535     0007                     	;# 
  1536     0008                     	;# 
  1537     0009                     	;# 
  1538     000A                     	;# 
  1539     000B                     	;# 
  1540     000C                     	;# 
  1541     000D                     	;# 
  1542     000E                     	;# 
  1543     0010                     	;# 
  1544     0011                     	;# 
  1545     0012                     	;# 
  1546     0013                     	;# 
  1547     0014                     	;# 
  1548     0015                     	;# 
  1549     0016                     	;# 
  1550     0016                     	;# 
  1551     0017                     	;# 
  1552     0018                     	;# 
  1553     0019                     	;# 
  1554     001A                     	;# 
  1555     001A                     	;# 
  1556     001B                     	;# 
  1557     001B                     	;# 
  1558     001C                     	;# 
  1559     001D                     	;# 
  1560     001E                     	;# 
  1561     001F                     	;# 
  1562     008C                     	;# 
  1563     008D                     	;# 
  1564     008E                     	;# 
  1565     0090                     	;# 
  1566     0091                     	;# 
  1567     0092                     	;# 
  1568     0093                     	;# 
  1569     0094                     	;# 
  1570     0095                     	;# 
  1571     0096                     	;# 
  1572     0098                     	;# 
  1573     0099                     	;# 
  1574     009A                     	;# 
  1575     009B                     	;# 
  1576     009B                     	;# 
  1577     009C                     	;# 
  1578     009D                     	;# 
  1579     009E                     	;# 
  1580     009F                     	;# 
  1581     010C                     	;# 
  1582     010D                     	;# 
  1583     010E                     	;# 
  1584     0111                     	;# 
  1585     0112                     	;# 
  1586     0113                     	;# 
  1587     0114                     	;# 
  1588     0115                     	;# 
  1589     0116                     	;# 
  1590     0117                     	;# 
  1591     0118                     	;# 
  1592     0119                     	;# 
  1593     011C                     	;# 
  1594     018C                     	;# 
  1595     018D                     	;# 
  1596     018E                     	;# 
  1597     0191                     	;# 
  1598     0191                     	;# 
  1599     0192                     	;# 
  1600     0193                     	;# 
  1601     0193                     	;# 
  1602     0194                     	;# 
  1603     0195                     	;# 
  1604     0196                     	;# 
  1605     0197                     	;# 
  1606     0199                     	;# 
  1607     0199                     	;# 
  1608     0199                     	;# 
  1609     019A                     	;# 
  1610     019A                     	;# 
  1611     019A                     	;# 
  1612     019B                     	;# 
  1613     019B                     	;# 
  1614     019B                     	;# 
  1615     019B                     	;# 
  1616     019B                     	;# 
  1617     019C                     	;# 
  1618     019C                     	;# 
  1619     019C                     	;# 
  1620     019D                     	;# 
  1621     019D                     	;# 
  1622     019D                     	;# 
  1623     019E                     	;# 
  1624     019E                     	;# 
  1625     019E                     	;# 
  1626     019F                     	;# 
  1627     019F                     	;# 
  1628     019F                     	;# 
  1629     019F                     	;# 
  1630     019F                     	;# 
  1631     020C                     	;# 
  1632     020D                     	;# 
  1633     020E                     	;# 
  1634     0211                     	;# 
  1635     0211                     	;# 
  1636     0212                     	;# 
  1637     0212                     	;# 
  1638     0213                     	;# 
  1639     0213                     	;# 
  1640     0214                     	;# 
  1641     0214                     	;# 
  1642     0215                     	;# 
  1643     0215                     	;# 
  1644     0215                     	;# 
  1645     0215                     	;# 
  1646     0216                     	;# 
  1647     0216                     	;# 
  1648     0217                     	;# 
  1649     0217                     	;# 
  1650     028C                     	;# 
  1651     028D                     	;# 
  1652     028E                     	;# 
  1653     0291                     	;# 
  1654     0291                     	;# 
  1655     0292                     	;# 
  1656     0293                     	;# 
  1657     0294                     	;# 
  1658     0298                     	;# 
  1659     0298                     	;# 
  1660     0299                     	;# 
  1661     029A                     	;# 
  1662     029B                     	;# 
  1663     029E                     	;# 
  1664     030C                     	;# 
  1665     030D                     	;# 
  1666     030E                     	;# 
  1667     038C                     	;# 
  1668     038D                     	;# 
  1669     038E                     	;# 
  1670     0391                     	;# 
  1671     0392                     	;# 
  1672     0393                     	;# 
  1673     0394                     	;# 
  1674     0395                     	;# 
  1675     0396                     	;# 
  1676     0397                     	;# 
  1677     0398                     	;# 
  1678     0399                     	;# 
  1679     040E                     	;# 
  1680     0413                     	;# 
  1681     0413                     	;# 
  1682     0414                     	;# 
  1683     0414                     	;# 
  1684     0415                     	;# 
  1685     0416                     	;# 
  1686     0417                     	;# 
  1687     0418                     	;# 
  1688     041A                     	;# 
  1689     041A                     	;# 
  1690     041B                     	;# 
  1691     041B                     	;# 
  1692     041C                     	;# 
  1693     041D                     	;# 
  1694     041E                     	;# 
  1695     041F                     	;# 
  1696     0493                     	;# 
  1697     0494                     	;# 
  1698     0495                     	;# 
  1699     0496                     	;# 
  1700     049A                     	;# 
  1701     049B                     	;# 
  1702     049C                     	;# 
  1703     049D                     	;# 
  1704     058C                     	;# 
  1705     058C                     	;# 
  1706     058D                     	;# 
  1707     058E                     	;# 
  1708     058E                     	;# 
  1709     058F                     	;# 
  1710     0590                     	;# 
  1711     0590                     	;# 
  1712     0591                     	;# 
  1713     0592                     	;# 
  1714     0592                     	;# 
  1715     0593                     	;# 
  1716     0594                     	;# 
  1717     0594                     	;# 
  1718     0595                     	;# 
  1719     0596                     	;# 
  1720     0596                     	;# 
  1721     0597                     	;# 
  1722     0598                     	;# 
  1723     0599                     	;# 
  1724     059A                     	;# 
  1725     059B                     	;# 
  1726     059B                     	;# 
  1727     059C                     	;# 
  1728     059D                     	;# 
  1729     060C                     	;# 
  1730     060C                     	;# 
  1731     060D                     	;# 
  1732     060E                     	;# 
  1733     060F                     	;# 
  1734     060F                     	;# 
  1735     0610                     	;# 
  1736     0611                     	;# 
  1737     0612                     	;# 
  1738     0613                     	;# 
  1739     0614                     	;# 
  1740     0617                     	;# 
  1741     0617                     	;# 
  1742     0618                     	;# 
  1743     0619                     	;# 
  1744     061A                     	;# 
  1745     061A                     	;# 
  1746     061B                     	;# 
  1747     061C                     	;# 
  1748     0691                     	;# 
  1749     0692                     	;# 
  1750     0693                     	;# 
  1751     0694                     	;# 
  1752     0695                     	;# 
  1753     0696                     	;# 
  1754     0697                     	;# 
  1755     0699                     	;# 
  1756     069A                     	;# 
  1757     0711                     	;# 
  1758     0712                     	;# 
  1759     0713                     	;# 
  1760     0714                     	;# 
  1761     0715                     	;# 
  1762     0718                     	;# 
  1763     0718                     	;# 
  1764     0719                     	;# 
  1765     071A                     	;# 
  1766     071A                     	;# 
  1767     071B                     	;# 
  1768     071C                     	;# 
  1769     071D                     	;# 
  1770     0791                     	;# 
  1771     0791                     	;# 
  1772     0792                     	;# 
  1773     0793                     	;# 
  1774     0793                     	;# 
  1775     0794                     	;# 
  1776     0795                     	;# 
  1777     0795                     	;# 
  1778     0796                     	;# 
  1779     0797                     	;# 
  1780     0797                     	;# 
  1781     0798                     	;# 
  1782     0799                     	;# 
  1783     079A                     	;# 
  1784     080C                     	;# 
  1785     080C                     	;# 
  1786     080D                     	;# 
  1787     080E                     	;# 
  1788     080E                     	;# 
  1789     080F                     	;# 
  1790     0810                     	;# 
  1791     0810                     	;# 
  1792     0811                     	;# 
  1793     0812                     	;# 
  1794     0812                     	;# 
  1795     0813                     	;# 
  1796     0814                     	;# 
  1797     0815                     	;# 
  1798     0816                     	;# 
  1799     0817                     	;# 
  1800     0818                     	;# 
  1801     0819                     	;# 
  1802     081A                     	;# 
  1803     081A                     	;# 
  1804     081B                     	;# 
  1805     081C                     	;# 
  1806     081C                     	;# 
  1807     081D                     	;# 
  1808     088C                     	;# 
  1809     088D                     	;# 
  1810     088E                     	;# 
  1811     088F                     	;# 
  1812     088F                     	;# 
  1813     0890                     	;# 
  1814     0891                     	;# 
  1815     0892                     	;# 
  1816     0893                     	;# 
  1817     0893                     	;# 
  1818     0894                     	;# 
  1819     0895                     	;# 
  1820     0896                     	;# 
  1821     0897                     	;# 
  1822     0897                     	;# 
  1823     0898                     	;# 
  1824     0899                     	;# 
  1825     0D8C                     	;# 
  1826     0D8C                     	;# 
  1827     0D8D                     	;# 
  1828     0D8E                     	;# 
  1829     0D8F                     	;# 
  1830     0D8F                     	;# 
  1831     0D90                     	;# 
  1832     0D91                     	;# 
  1833     0D92                     	;# 
  1834     0D92                     	;# 
  1835     0D93                     	;# 
  1836     0D94                     	;# 
  1837     0D95                     	;# 
  1838     0D95                     	;# 
  1839     0D96                     	;# 
  1840     0D97                     	;# 
  1841     0D98                     	;# 
  1842     0D99                     	;# 
  1843     0D9A                     	;# 
  1844     0D9B                     	;# 
  1845     0D9C                     	;# 
  1846     0D9D                     	;# 
  1847     0D9E                     	;# 
  1848     0D9E                     	;# 
  1849     0D9F                     	;# 
  1850     0DA0                     	;# 
  1851     0DA1                     	;# 
  1852     0DA1                     	;# 
  1853     0DA2                     	;# 
  1854     0DA3                     	;# 
  1855     0DA4                     	;# 
  1856     0DA4                     	;# 
  1857     0DA5                     	;# 
  1858     0DA6                     	;# 
  1859     0DA7                     	;# 
  1860     0DA7                     	;# 
  1861     0DA8                     	;# 
  1862     0DA9                     	;# 
  1863     0DAA                     	;# 
  1864     0DAB                     	;# 
  1865     0DAC                     	;# 
  1866     0DAD                     	;# 
  1867     0DAE                     	;# 
  1868     0DAF                     	;# 
  1869     0E0F                     	;# 
  1870     0E10                     	;# 
  1871     0E11                     	;# 
  1872     0E12                     	;# 
  1873     0E13                     	;# 
  1874     0E14                     	;# 
  1875     0E15                     	;# 
  1876     0E16                     	;# 
  1877     0E17                     	;# 
  1878     0E17                     	;# 
  1879     0E18                     	;# 
  1880     0E18                     	;# 
  1881     0E19                     	;# 
  1882     0E1A                     	;# 
  1883     0E1B                     	;# 
  1884     0E1B                     	;# 
  1885     0E1C                     	;# 
  1886     0E1D                     	;# 
  1887     0E1E                     	;# 
  1888     0E1E                     	;# 
  1889     0E1F                     	;# 
  1890     0E20                     	;# 
  1891     0E21                     	;# 
  1892     0E22                     	;# 
  1893     0E23                     	;# 
  1894     0E24                     	;# 
  1895     0E25                     	;# 
  1896     0E26                     	;# 
  1897     0E27                     	;# 
  1898     0E28                     	;# 
  1899     0E29                     	;# 
  1900     0E2A                     	;# 
  1901     0E2B                     	;# 
  1902     0E2C                     	;# 
  1903     0E2D                     	;# 
  1904     0E2E                     	;# 
  1905     0E90                     	;# 
  1906     0E91                     	;# 
  1907     0E92                     	;# 
  1908     0E94                     	;# 
  1909     0E95                     	;# 
  1910     0E9C                     	;# 
  1911     0E9D                     	;# 
  1912     0E9E                     	;# 
  1913     0E9F                     	;# 
  1914     0EA0                     	;# 
  1915     0EA1                     	;# 
  1916     0EA2                     	;# 
  1917     0EA3                     	;# 
  1918     0EA4                     	;# 
  1919     0EA5                     	;# 
  1920     0EA6                     	;# 
  1921     0EA7                     	;# 
  1922     0F0F                     	;# 
  1923     0F10                     	;# 
  1924     0F11                     	;# 
  1925     0F12                     	;# 
  1926     0F13                     	;# 
  1927     0F14                     	;# 
  1928     0F15                     	;# 
  1929     0F16                     	;# 
  1930     0F17                     	;# 
  1931     0F18                     	;# 
  1932     0F19                     	;# 
  1933     0F1A                     	;# 
  1934     0F1B                     	;# 
  1935     0F1C                     	;# 
  1936     0F1D                     	;# 
  1937     0F1E                     	;# 
  1938     0F1F                     	;# 
  1939     0F20                     	;# 
  1940     0F21                     	;# 
  1941     0F22                     	;# 
  1942     0F23                     	;# 
  1943     0F24                     	;# 
  1944     0F25                     	;# 
  1945     0F26                     	;# 
  1946     0F27                     	;# 
  1947     0F28                     	;# 
  1948     0F29                     	;# 
  1949     0F2A                     	;# 
  1950     0F2B                     	;# 
  1951     0F2C                     	;# 
  1952     0F2D                     	;# 
  1953     0F2E                     	;# 
  1954     0F2F                     	;# 
  1955     0F30                     	;# 
  1956     0F31                     	;# 
  1957     0F32                     	;# 
  1958     0F33                     	;# 
  1959     0F34                     	;# 
  1960     0F35                     	;# 
  1961     0F36                     	;# 
  1962     0F37                     	;# 
  1963     0FE4                     	;# 
  1964     0FE5                     	;# 
  1965     0FE6                     	;# 
  1966     0FE7                     	;# 
  1967     0FE8                     	;# 
  1968     0FE9                     	;# 
  1969     0FEA                     	;# 
  1970     0FEB                     	;# 
  1971     0FED                     	;# 
  1972     0FEE                     	;# 
  1973     0FEF                     	;# 
  1974     0000                     	;# 
  1975     0001                     	;# 
  1976     0002                     	;# 
  1977     0003                     	;# 
  1978     0004                     	;# 
  1979     0005                     	;# 
  1980     0006                     	;# 
  1981     0007                     	;# 
  1982     0008                     	;# 
  1983     0009                     	;# 
  1984     000A                     	;# 
  1985     000B                     	;# 
  1986     000C                     	;# 
  1987     000D                     	;# 
  1988     000E                     	;# 
  1989     0010                     	;# 
  1990     0011                     	;# 
  1991     0012                     	;# 
  1992     0013                     	;# 
  1993     0014                     	;# 
  1994     0015                     	;# 
  1995     0016                     	;# 
  1996     0016                     	;# 
  1997     0017                     	;# 
  1998     0018                     	;# 
  1999     0019                     	;# 
  2000     001A                     	;# 
  2001     001A                     	;# 
  2002     001B                     	;# 
  2003     001B                     	;# 
  2004     001C                     	;# 
  2005     001D                     	;# 
  2006     001E                     	;# 
  2007     001F                     	;# 
  2008     008C                     	;# 
  2009     008D                     	;# 
  2010     008E                     	;# 
  2011     0090                     	;# 
  2012     0091                     	;# 
  2013     0092                     	;# 
  2014     0093                     	;# 
  2015     0094                     	;# 
  2016     0095                     	;# 
  2017     0096                     	;# 
  2018     0098                     	;# 
  2019     0099                     	;# 
  2020     009A                     	;# 
  2021     009B                     	;# 
  2022     009B                     	;# 
  2023     009C                     	;# 
  2024     009D                     	;# 
  2025     009E                     	;# 
  2026     009F                     	;# 
  2027     010C                     	;# 
  2028     010D                     	;# 
  2029     010E                     	;# 
  2030     0111                     	;# 
  2031     0112                     	;# 
  2032     0113                     	;# 
  2033     0114                     	;# 
  2034     0115                     	;# 
  2035     0116                     	;# 
  2036     0117                     	;# 
  2037     0118                     	;# 
  2038     0119                     	;# 
  2039     011C                     	;# 
  2040     018C                     	;# 
  2041     018D                     	;# 
  2042     018E                     	;# 
  2043     0191                     	;# 
  2044     0191                     	;# 
  2045     0192                     	;# 
  2046     0193                     	;# 
  2047     0193                     	;# 
  2048     0194                     	;# 
  2049     0195                     	;# 
  2050     0196                     	;# 
  2051     0197                     	;# 
  2052     0199                     	;# 
  2053     0199                     	;# 
  2054     0199                     	;# 
  2055     019A                     	;# 
  2056     019A                     	;# 
  2057     019A                     	;# 
  2058     019B                     	;# 
  2059     019B                     	;# 
  2060     019B                     	;# 
  2061     019B                     	;# 
  2062     019B                     	;# 
  2063     019C                     	;# 
  2064     019C                     	;# 
  2065     019C                     	;# 
  2066     019D                     	;# 
  2067     019D                     	;# 
  2068     019D                     	;# 
  2069     019E                     	;# 
  2070     019E                     	;# 
  2071     019E                     	;# 
  2072     019F                     	;# 
  2073     019F                     	;# 
  2074     019F                     	;# 
  2075     019F                     	;# 
  2076     019F                     	;# 
  2077     020C                     	;# 
  2078     020D                     	;# 
  2079     020E                     	;# 
  2080     0211                     	;# 
  2081     0211                     	;# 
  2082     0212                     	;# 
  2083     0212                     	;# 
  2084     0213                     	;# 
  2085     0213                     	;# 
  2086     0214                     	;# 
  2087     0214                     	;# 
  2088     0215                     	;# 
  2089     0215                     	;# 
  2090     0215                     	;# 
  2091     0215                     	;# 
  2092     0216                     	;# 
  2093     0216                     	;# 
  2094     0217                     	;# 
  2095     0217                     	;# 
  2096     028C                     	;# 
  2097     028D                     	;# 
  2098     028E                     	;# 
  2099     0291                     	;# 
  2100     0291                     	;# 
  2101     0292                     	;# 
  2102     0293                     	;# 
  2103     0294                     	;# 
  2104     0298                     	;# 
  2105     0298                     	;# 
  2106     0299                     	;# 
  2107     029A                     	;# 
  2108     029B                     	;# 
  2109     029E                     	;# 
  2110     030C                     	;# 
  2111     030D                     	;# 
  2112     030E                     	;# 
  2113     038C                     	;# 
  2114     038D                     	;# 
  2115     038E                     	;# 
  2116     0391                     	;# 
  2117     0392                     	;# 
  2118     0393                     	;# 
  2119     0394                     	;# 
  2120     0395                     	;# 
  2121     0396                     	;# 
  2122     0397                     	;# 
  2123     0398                     	;# 
  2124     0399                     	;# 
  2125     040E                     	;# 
  2126     0413                     	;# 
  2127     0413                     	;# 
  2128     0414                     	;# 
  2129     0414                     	;# 
  2130     0415                     	;# 
  2131     0416                     	;# 
  2132     0417                     	;# 
  2133     0418                     	;# 
  2134     041A                     	;# 
  2135     041A                     	;# 
  2136     041B                     	;# 
  2137     041B                     	;# 
  2138     041C                     	;# 
  2139     041D                     	;# 
  2140     041E                     	;# 
  2141     041F                     	;# 
  2142     0493                     	;# 
  2143     0494                     	;# 
  2144     0495                     	;# 
  2145     0496                     	;# 
  2146     049A                     	;# 
  2147     049B                     	;# 
  2148     049C                     	;# 
  2149     049D                     	;# 
  2150     058C                     	;# 
  2151     058C                     	;# 
  2152     058D                     	;# 
  2153     058E                     	;# 
  2154     058E                     	;# 
  2155     058F                     	;# 
  2156     0590                     	;# 
  2157     0590                     	;# 
  2158     0591                     	;# 
  2159     0592                     	;# 
  2160     0592                     	;# 
  2161     0593                     	;# 
  2162     0594                     	;# 
  2163     0594                     	;# 
  2164     0595                     	;# 
  2165     0596                     	;# 
  2166     0596                     	;# 
  2167     0597                     	;# 
  2168     0598                     	;# 
  2169     0599                     	;# 
  2170     059A                     	;# 
  2171     059B                     	;# 
  2172     059B                     	;# 
  2173     059C                     	;# 
  2174     059D                     	;# 
  2175     060C                     	;# 
  2176     060C                     	;# 
  2177     060D                     	;# 
  2178     060E                     	;# 
  2179     060F                     	;# 
  2180     060F                     	;# 
  2181     0610                     	;# 
  2182     0611                     	;# 
  2183     0612                     	;# 
  2184     0613                     	;# 
  2185     0614                     	;# 
  2186     0617                     	;# 
  2187     0617                     	;# 
  2188     0618                     	;# 
  2189     0619                     	;# 
  2190     061A                     	;# 
  2191     061A                     	;# 
  2192     061B                     	;# 
  2193     061C                     	;# 
  2194     0691                     	;# 
  2195     0692                     	;# 
  2196     0693                     	;# 
  2197     0694                     	;# 
  2198     0695                     	;# 
  2199     0696                     	;# 
  2200     0697                     	;# 
  2201     0699                     	;# 
  2202     069A                     	;# 
  2203     0711                     	;# 
  2204     0712                     	;# 
  2205     0713                     	;# 
  2206     0714                     	;# 
  2207     0715                     	;# 
  2208     0718                     	;# 
  2209     0718                     	;# 
  2210     0719                     	;# 
  2211     071A                     	;# 
  2212     071A                     	;# 
  2213     071B                     	;# 
  2214     071C                     	;# 
  2215     071D                     	;# 
  2216     0791                     	;# 
  2217     0791                     	;# 
  2218     0792                     	;# 
  2219     0793                     	;# 
  2220     0793                     	;# 
  2221     0794                     	;# 
  2222     0795                     	;# 
  2223     0795                     	;# 
  2224     0796                     	;# 
  2225     0797                     	;# 
  2226     0797                     	;# 
  2227     0798                     	;# 
  2228     0799                     	;# 
  2229     079A                     	;# 
  2230     080C                     	;# 
  2231     080C                     	;# 
  2232     080D                     	;# 
  2233     080E                     	;# 
  2234     080E                     	;# 
  2235     080F                     	;# 
  2236     0810                     	;# 
  2237     0810                     	;# 
  2238     0811                     	;# 
  2239     0812                     	;# 
  2240     0812                     	;# 
  2241     0813                     	;# 
  2242     0814                     	;# 
  2243     0815                     	;# 
  2244     0816                     	;# 
  2245     0817                     	;# 
  2246     0818                     	;# 
  2247     0819                     	;# 
  2248     081A                     	;# 
  2249     081A                     	;# 
  2250     081B                     	;# 
  2251     081C                     	;# 
  2252     081C                     	;# 
  2253     081D                     	;# 
  2254     088C                     	;# 
  2255     088D                     	;# 
  2256     088E                     	;# 
  2257     088F                     	;# 
  2258     088F                     	;# 
  2259     0890                     	;# 
  2260     0891                     	;# 
  2261     0892                     	;# 
  2262     0893                     	;# 
  2263     0893                     	;# 
  2264     0894                     	;# 
  2265     0895                     	;# 
  2266     0896                     	;# 
  2267     0897                     	;# 
  2268     0897                     	;# 
  2269     0898                     	;# 
  2270     0899                     	;# 
  2271     0D8C                     	;# 
  2272     0D8C                     	;# 
  2273     0D8D                     	;# 
  2274     0D8E                     	;# 
  2275     0D8F                     	;# 
  2276     0D8F                     	;# 
  2277     0D90                     	;# 
  2278     0D91                     	;# 
  2279     0D92                     	;# 
  2280     0D92                     	;# 
  2281     0D93                     	;# 
  2282     0D94                     	;# 
  2283     0D95                     	;# 
  2284     0D95                     	;# 
  2285     0D96                     	;# 
  2286     0D97                     	;# 
  2287     0D98                     	;# 
  2288     0D99                     	;# 
  2289     0D9A                     	;# 
  2290     0D9B                     	;# 
  2291     0D9C                     	;# 
  2292     0D9D                     	;# 
  2293     0D9E                     	;# 
  2294     0D9E                     	;# 
  2295     0D9F                     	;# 
  2296     0DA0                     	;# 
  2297     0DA1                     	;# 
  2298     0DA1                     	;# 
  2299     0DA2                     	;# 
  2300     0DA3                     	;# 
  2301     0DA4                     	;# 
  2302     0DA4                     	;# 
  2303     0DA5                     	;# 
  2304     0DA6                     	;# 
  2305     0DA7                     	;# 
  2306     0DA7                     	;# 
  2307     0DA8                     	;# 
  2308     0DA9                     	;# 
  2309     0DAA                     	;# 
  2310     0DAB                     	;# 
  2311     0DAC                     	;# 
  2312     0DAD                     	;# 
  2313     0DAE                     	;# 
  2314     0DAF                     	;# 
  2315     0E0F                     	;# 
  2316     0E10                     	;# 
  2317     0E11                     	;# 
  2318     0E12                     	;# 
  2319     0E13                     	;# 
  2320     0E14                     	;# 
  2321     0E15                     	;# 
  2322     0E16                     	;# 
  2323     0E17                     	;# 
  2324     0E17                     	;# 
  2325     0E18                     	;# 
  2326     0E18                     	;# 
  2327     0E19                     	;# 
  2328     0E1A                     	;# 
  2329     0E1B                     	;# 
  2330     0E1B                     	;# 
  2331     0E1C                     	;# 
  2332     0E1D                     	;# 
  2333     0E1E                     	;# 
  2334     0E1E                     	;# 
  2335     0E1F                     	;# 
  2336     0E20                     	;# 
  2337     0E21                     	;# 
  2338     0E22                     	;# 
  2339     0E23                     	;# 
  2340     0E24                     	;# 
  2341     0E25                     	;# 
  2342     0E26                     	;# 
  2343     0E27                     	;# 
  2344     0E28                     	;# 
  2345     0E29                     	;# 
  2346     0E2A                     	;# 
  2347     0E2B                     	;# 
  2348     0E2C                     	;# 
  2349     0E2D                     	;# 
  2350     0E2E                     	;# 
  2351     0E90                     	;# 
  2352     0E91                     	;# 
  2353     0E92                     	;# 
  2354     0E94                     	;# 
  2355     0E95                     	;# 
  2356     0E9C                     	;# 
  2357     0E9D                     	;# 
  2358     0E9E                     	;# 
  2359     0E9F                     	;# 
  2360     0EA0                     	;# 
  2361     0EA1                     	;# 
  2362     0EA2                     	;# 
  2363     0EA3                     	;# 
  2364     0EA4                     	;# 
  2365     0EA5                     	;# 
  2366     0EA6                     	;# 
  2367     0EA7                     	;# 
  2368     0F0F                     	;# 
  2369     0F10                     	;# 
  2370     0F11                     	;# 
  2371     0F12                     	;# 
  2372     0F13                     	;# 
  2373     0F14                     	;# 
  2374     0F15                     	;# 
  2375     0F16                     	;# 
  2376     0F17                     	;# 
  2377     0F18                     	;# 
  2378     0F19                     	;# 
  2379     0F1A                     	;# 
  2380     0F1B                     	;# 
  2381     0F1C                     	;# 
  2382     0F1D                     	;# 
  2383     0F1E                     	;# 
  2384     0F1F                     	;# 
  2385     0F20                     	;# 
  2386     0F21                     	;# 
  2387     0F22                     	;# 
  2388     0F23                     	;# 
  2389     0F24                     	;# 
  2390     0F25                     	;# 
  2391     0F26                     	;# 
  2392     0F27                     	;# 
  2393     0F28                     	;# 
  2394     0F29                     	;# 
  2395     0F2A                     	;# 
  2396     0F2B                     	;# 
  2397     0F2C                     	;# 
  2398     0F2D                     	;# 
  2399     0F2E                     	;# 
  2400     0F2F                     	;# 
  2401     0F30                     	;# 
  2402     0F31                     	;# 
  2403     0F32                     	;# 
  2404     0F33                     	;# 
  2405     0F34                     	;# 
  2406     0F35                     	;# 
  2407     0F36                     	;# 
  2408     0F37                     	;# 
  2409     0FE4                     	;# 
  2410     0FE5                     	;# 
  2411     0FE6                     	;# 
  2412     0FE7                     	;# 
  2413     0FE8                     	;# 
  2414     0FE9                     	;# 
  2415     0FEA                     	;# 
  2416     0FEB                     	;# 
  2417     0FED                     	;# 
  2418     0FEE                     	;# 
  2419     0FEF                     	;# 
  2420     0000                     	;# 
  2421     0001                     	;# 
  2422     0002                     	;# 
  2423     0003                     	;# 
  2424     0004                     	;# 
  2425     0005                     	;# 
  2426     0006                     	;# 
  2427     0007                     	;# 
  2428     0008                     	;# 
  2429     0009                     	;# 
  2430     000A                     	;# 
  2431     000B                     	;# 
  2432     000C                     	;# 
  2433     000D                     	;# 
  2434     000E                     	;# 
  2435     0010                     	;# 
  2436     0011                     	;# 
  2437     0012                     	;# 
  2438     0013                     	;# 
  2439     0014                     	;# 
  2440     0015                     	;# 
  2441     0016                     	;# 
  2442     0016                     	;# 
  2443     0017                     	;# 
  2444     0018                     	;# 
  2445     0019                     	;# 
  2446     001A                     	;# 
  2447     001A                     	;# 
  2448     001B                     	;# 
  2449     001B                     	;# 
  2450     001C                     	;# 
  2451     001D                     	;# 
  2452     001E                     	;# 
  2453     001F                     	;# 
  2454     008C                     	;# 
  2455     008D                     	;# 
  2456     008E                     	;# 
  2457     0090                     	;# 
  2458     0091                     	;# 
  2459     0092                     	;# 
  2460     0093                     	;# 
  2461     0094                     	;# 
  2462     0095                     	;# 
  2463     0096                     	;# 
  2464     0098                     	;# 
  2465     0099                     	;# 
  2466     009A                     	;# 
  2467     009B                     	;# 
  2468     009B                     	;# 
  2469     009C                     	;# 
  2470     009D                     	;# 
  2471     009E                     	;# 
  2472     009F                     	;# 
  2473     010C                     	;# 
  2474     010D                     	;# 
  2475     010E                     	;# 
  2476     0111                     	;# 
  2477     0112                     	;# 
  2478     0113                     	;# 
  2479     0114                     	;# 
  2480     0115                     	;# 
  2481     0116                     	;# 
  2482     0117                     	;# 
  2483     0118                     	;# 
  2484     0119                     	;# 
  2485     011C                     	;# 
  2486     018C                     	;# 
  2487     018D                     	;# 
  2488     018E                     	;# 
  2489     0191                     	;# 
  2490     0191                     	;# 
  2491     0192                     	;# 
  2492     0193                     	;# 
  2493     0193                     	;# 
  2494     0194                     	;# 
  2495     0195                     	;# 
  2496     0196                     	;# 
  2497     0197                     	;# 
  2498     0199                     	;# 
  2499     0199                     	;# 
  2500     0199                     	;# 
  2501     019A                     	;# 
  2502     019A                     	;# 
  2503     019A                     	;# 
  2504     019B                     	;# 
  2505     019B                     	;# 
  2506     019B                     	;# 
  2507     019B                     	;# 
  2508     019B                     	;# 
  2509     019C                     	;# 
  2510     019C                     	;# 
  2511     019C                     	;# 
  2512     019D                     	;# 
  2513     019D                     	;# 
  2514     019D                     	;# 
  2515     019E                     	;# 
  2516     019E                     	;# 
  2517     019E                     	;# 
  2518     019F                     	;# 
  2519     019F                     	;# 
  2520     019F                     	;# 
  2521     019F                     	;# 
  2522     019F                     	;# 
  2523     020C                     	;# 
  2524     020D                     	;# 
  2525     020E                     	;# 
  2526     0211                     	;# 
  2527     0211                     	;# 
  2528     0212                     	;# 
  2529     0212                     	;# 
  2530     0213                     	;# 
  2531     0213                     	;# 
  2532     0214                     	;# 
  2533     0214                     	;# 
  2534     0215                     	;# 
  2535     0215                     	;# 
  2536     0215                     	;# 
  2537     0215                     	;# 
  2538     0216                     	;# 
  2539     0216                     	;# 
  2540     0217                     	;# 
  2541     0217                     	;# 
  2542     028C                     	;# 
  2543     028D                     	;# 
  2544     028E                     	;# 
  2545     0291                     	;# 
  2546     0291                     	;# 
  2547     0292                     	;# 
  2548     0293                     	;# 
  2549     0294                     	;# 
  2550     0298                     	;# 
  2551     0298                     	;# 
  2552     0299                     	;# 
  2553     029A                     	;# 
  2554     029B                     	;# 
  2555     029E                     	;# 
  2556     030C                     	;# 
  2557     030D                     	;# 
  2558     030E                     	;# 
  2559     038C                     	;# 
  2560     038D                     	;# 
  2561     038E                     	;# 
  2562     0391                     	;# 
  2563     0392                     	;# 
  2564     0393                     	;# 
  2565     0394                     	;# 
  2566     0395                     	;# 
  2567     0396                     	;# 
  2568     0397                     	;# 
  2569     0398                     	;# 
  2570     0399                     	;# 
  2571     040E                     	;# 
  2572     0413                     	;# 
  2573     0413                     	;# 
  2574     0414                     	;# 
  2575     0414                     	;# 
  2576     0415                     	;# 
  2577     0416                     	;# 
  2578     0417                     	;# 
  2579     0418                     	;# 
  2580     041A                     	;# 
  2581     041A                     	;# 
  2582     041B                     	;# 
  2583     041B                     	;# 
  2584     041C                     	;# 
  2585     041D                     	;# 
  2586     041E                     	;# 
  2587     041F                     	;# 
  2588     0493                     	;# 
  2589     0494                     	;# 
  2590     0495                     	;# 
  2591     0496                     	;# 
  2592     049A                     	;# 
  2593     049B                     	;# 
  2594     049C                     	;# 
  2595     049D                     	;# 
  2596     058C                     	;# 
  2597     058C                     	;# 
  2598     058D                     	;# 
  2599     058E                     	;# 
  2600     058E                     	;# 
  2601     058F                     	;# 
  2602     0590                     	;# 
  2603     0590                     	;# 
  2604     0591                     	;# 
  2605     0592                     	;# 
  2606     0592                     	;# 
  2607     0593                     	;# 
  2608     0594                     	;# 
  2609     0594                     	;# 
  2610     0595                     	;# 
  2611     0596                     	;# 
  2612     0596                     	;# 
  2613     0597                     	;# 
  2614     0598                     	;# 
  2615     0599                     	;# 
  2616     059A                     	;# 
  2617     059B                     	;# 
  2618     059B                     	;# 
  2619     059C                     	;# 
  2620     059D                     	;# 
  2621     060C                     	;# 
  2622     060C                     	;# 
  2623     060D                     	;# 
  2624     060E                     	;# 
  2625     060F                     	;# 
  2626     060F                     	;# 
  2627     0610                     	;# 
  2628     0611                     	;# 
  2629     0612                     	;# 
  2630     0613                     	;# 
  2631     0614                     	;# 
  2632     0617                     	;# 
  2633     0617                     	;# 
  2634     0618                     	;# 
  2635     0619                     	;# 
  2636     061A                     	;# 
  2637     061A                     	;# 
  2638     061B                     	;# 
  2639     061C                     	;# 
  2640     0691                     	;# 
  2641     0692                     	;# 
  2642     0693                     	;# 
  2643     0694                     	;# 
  2644     0695                     	;# 
  2645     0696                     	;# 
  2646     0697                     	;# 
  2647     0699                     	;# 
  2648     069A                     	;# 
  2649     0711                     	;# 
  2650     0712                     	;# 
  2651     0713                     	;# 
  2652     0714                     	;# 
  2653     0715                     	;# 
  2654     0718                     	;# 
  2655     0718                     	;# 
  2656     0719                     	;# 
  2657     071A                     	;# 
  2658     071A                     	;# 
  2659     071B                     	;# 
  2660     071C                     	;# 
  2661     071D                     	;# 
  2662     0791                     	;# 
  2663     0791                     	;# 
  2664     0792                     	;# 
  2665     0793                     	;# 
  2666     0793                     	;# 
  2667     0794                     	;# 
  2668     0795                     	;# 
  2669     0795                     	;# 
  2670     0796                     	;# 
  2671     0797                     	;# 
  2672     0797                     	;# 
  2673     0798                     	;# 
  2674     0799                     	;# 
  2675     079A                     	;# 
  2676     080C                     	;# 
  2677     080C                     	;# 
  2678     080D                     	;# 
  2679     080E                     	;# 
  2680     080E                     	;# 
  2681     080F                     	;# 
  2682     0810                     	;# 
  2683     0810                     	;# 
  2684     0811                     	;# 
  2685     0812                     	;# 
  2686     0812                     	;# 
  2687     0813                     	;# 
  2688     0814                     	;# 
  2689     0815                     	;# 
  2690     0816                     	;# 
  2691     0817                     	;# 
  2692     0818                     	;# 
  2693     0819                     	;# 
  2694     081A                     	;# 
  2695     081A                     	;# 
  2696     081B                     	;# 
  2697     081C                     	;# 
  2698     081C                     	;# 
  2699     081D                     	;# 
  2700     088C                     	;# 
  2701     088D                     	;# 
  2702     088E                     	;# 
  2703     088F                     	;# 
  2704     088F                     	;# 
  2705     0890                     	;# 
  2706     0891                     	;# 
  2707     0892                     	;# 
  2708     0893                     	;# 
  2709     0893                     	;# 
  2710     0894                     	;# 
  2711     0895                     	;# 
  2712     0896                     	;# 
  2713     0897                     	;# 
  2714     0897                     	;# 
  2715     0898                     	;# 
  2716     0899                     	;# 
  2717     0D8C                     	;# 
  2718     0D8C                     	;# 
  2719     0D8D                     	;# 
  2720     0D8E                     	;# 
  2721     0D8F                     	;# 
  2722     0D8F                     	;# 
  2723     0D90                     	;# 
  2724     0D91                     	;# 
  2725     0D92                     	;# 
  2726     0D92                     	;# 
  2727     0D93                     	;# 
  2728     0D94                     	;# 
  2729     0D95                     	;# 
  2730     0D95                     	;# 
  2731     0D96                     	;# 
  2732     0D97                     	;# 
  2733     0D98                     	;# 
  2734     0D99                     	;# 
  2735     0D9A                     	;# 
  2736     0D9B                     	;# 
  2737     0D9C                     	;# 
  2738     0D9D                     	;# 
  2739     0D9E                     	;# 
  2740     0D9E                     	;# 
  2741     0D9F                     	;# 
  2742     0DA0                     	;# 
  2743     0DA1                     	;# 
  2744     0DA1                     	;# 
  2745     0DA2                     	;# 
  2746     0DA3                     	;# 
  2747     0DA4                     	;# 
  2748     0DA4                     	;# 
  2749     0DA5                     	;# 
  2750     0DA6                     	;# 
  2751     0DA7                     	;# 
  2752     0DA7                     	;# 
  2753     0DA8                     	;# 
  2754     0DA9                     	;# 
  2755     0DAA                     	;# 
  2756     0DAB                     	;# 
  2757     0DAC                     	;# 
  2758     0DAD                     	;# 
  2759     0DAE                     	;# 
  2760     0DAF                     	;# 
  2761     0E0F                     	;# 
  2762     0E10                     	;# 
  2763     0E11                     	;# 
  2764     0E12                     	;# 
  2765     0E13                     	;# 
  2766     0E14                     	;# 
  2767     0E15                     	;# 
  2768     0E16                     	;# 
  2769     0E17                     	;# 
  2770     0E17                     	;# 
  2771     0E18                     	;# 
  2772     0E18                     	;# 
  2773     0E19                     	;# 
  2774     0E1A                     	;# 
  2775     0E1B                     	;# 
  2776     0E1B                     	;# 
  2777     0E1C                     	;# 
  2778     0E1D                     	;# 
  2779     0E1E                     	;# 
  2780     0E1E                     	;# 
  2781     0E1F                     	;# 
  2782     0E20                     	;# 
  2783     0E21                     	;# 
  2784     0E22                     	;# 
  2785     0E23                     	;# 
  2786     0E24                     	;# 
  2787     0E25                     	;# 
  2788     0E26                     	;# 
  2789     0E27                     	;# 
  2790     0E28                     	;# 
  2791     0E29                     	;# 
  2792     0E2A                     	;# 
  2793     0E2B                     	;# 
  2794     0E2C                     	;# 
  2795     0E2D                     	;# 
  2796     0E2E                     	;# 
  2797     0E90                     	;# 
  2798     0E91                     	;# 
  2799     0E92                     	;# 
  2800     0E94                     	;# 
  2801     0E95                     	;# 
  2802     0E9C                     	;# 
  2803     0E9D                     	;# 
  2804     0E9E                     	;# 
  2805     0E9F                     	;# 
  2806     0EA0                     	;# 
  2807     0EA1                     	;# 
  2808     0EA2                     	;# 
  2809     0EA3                     	;# 
  2810     0EA4                     	;# 
  2811     0EA5                     	;# 
  2812     0EA6                     	;# 
  2813     0EA7                     	;# 
  2814     0F0F                     	;# 
  2815     0F10                     	;# 
  2816     0F11                     	;# 
  2817     0F12                     	;# 
  2818     0F13                     	;# 
  2819     0F14                     	;# 
  2820     0F15                     	;# 
  2821     0F16                     	;# 
  2822     0F17                     	;# 
  2823     0F18                     	;# 
  2824     0F19                     	;# 
  2825     0F1A                     	;# 
  2826     0F1B                     	;# 
  2827     0F1C                     	;# 
  2828     0F1D                     	;# 
  2829     0F1E                     	;# 
  2830     0F1F                     	;# 
  2831     0F20                     	;# 
  2832     0F21                     	;# 
  2833     0F22                     	;# 
  2834     0F23                     	;# 
  2835     0F24                     	;# 
  2836     0F25                     	;# 
  2837     0F26                     	;# 
  2838     0F27                     	;# 
  2839     0F28                     	;# 
  2840     0F29                     	;# 
  2841     0F2A                     	;# 
  2842     0F2B                     	;# 
  2843     0F2C                     	;# 
  2844     0F2D                     	;# 
  2845     0F2E                     	;# 
  2846     0F2F                     	;# 
  2847     0F30                     	;# 
  2848     0F31                     	;# 
  2849     0F32                     	;# 
  2850     0F33                     	;# 
  2851     0F34                     	;# 
  2852     0F35                     	;# 
  2853     0F36                     	;# 
  2854     0F37                     	;# 
  2855     0FE4                     	;# 
  2856     0FE5                     	;# 
  2857     0FE6                     	;# 
  2858     0FE7                     	;# 
  2859     0FE8                     	;# 
  2860     0FE9                     	;# 
  2861     0FEA                     	;# 
  2862     0FEB                     	;# 
  2863     0FED                     	;# 
  2864     0FEE                     	;# 
  2865     0FEF                     	;# 
  2866     0000                     	;# 
  2867     0001                     	;# 
  2868     0002                     	;# 
  2869     0003                     	;# 
  2870     0004                     	;# 
  2871     0005                     	;# 
  2872     0006                     	;# 
  2873     0007                     	;# 
  2874     0008                     	;# 
  2875     0009                     	;# 
  2876     000A                     	;# 
  2877     000B                     	;# 
  2878     000C                     	;# 
  2879     000D                     	;# 
  2880     000E                     	;# 
  2881     0010                     	;# 
  2882     0011                     	;# 
  2883     0012                     	;# 
  2884     0013                     	;# 
  2885     0014                     	;# 
  2886     0015                     	;# 
  2887     0016                     	;# 
  2888     0016                     	;# 
  2889     0017                     	;# 
  2890     0018                     	;# 
  2891     0019                     	;# 
  2892     001A                     	;# 
  2893     001A                     	;# 
  2894     001B                     	;# 
  2895     001B                     	;# 
  2896     001C                     	;# 
  2897     001D                     	;# 
  2898     001E                     	;# 
  2899     001F                     	;# 
  2900     008C                     	;# 
  2901     008D                     	;# 
  2902     008E                     	;# 
  2903     0090                     	;# 
  2904     0091                     	;# 
  2905     0092                     	;# 
  2906     0093                     	;# 
  2907     0094                     	;# 
  2908     0095                     	;# 
  2909     0096                     	;# 
  2910     0098                     	;# 
  2911     0099                     	;# 
  2912     009A                     	;# 
  2913     009B                     	;# 
  2914     009B                     	;# 
  2915     009C                     	;# 
  2916     009D                     	;# 
  2917     009E                     	;# 
  2918     009F                     	;# 
  2919     010C                     	;# 
  2920     010D                     	;# 
  2921     010E                     	;# 
  2922     0111                     	;# 
  2923     0112                     	;# 
  2924     0113                     	;# 
  2925     0114                     	;# 
  2926     0115                     	;# 
  2927     0116                     	;# 
  2928     0117                     	;# 
  2929     0118                     	;# 
  2930     0119                     	;# 
  2931     011C                     	;# 
  2932     018C                     	;# 
  2933     018D                     	;# 
  2934     018E                     	;# 
  2935     0191                     	;# 
  2936     0191                     	;# 
  2937     0192                     	;# 
  2938     0193                     	;# 
  2939     0193                     	;# 
  2940     0194                     	;# 
  2941     0195                     	;# 
  2942     0196                     	;# 
  2943     0197                     	;# 
  2944     0199                     	;# 
  2945     0199                     	;# 
  2946     0199                     	;# 
  2947     019A                     	;# 
  2948     019A                     	;# 
  2949     019A                     	;# 
  2950     019B                     	;# 
  2951     019B                     	;# 
  2952     019B                     	;# 
  2953     019B                     	;# 
  2954     019B                     	;# 
  2955     019C                     	;# 
  2956     019C                     	;# 
  2957     019C                     	;# 
  2958     019D                     	;# 
  2959     019D                     	;# 
  2960     019D                     	;# 
  2961     019E                     	;# 
  2962     019E                     	;# 
  2963     019E                     	;# 
  2964     019F                     	;# 
  2965     019F                     	;# 
  2966     019F                     	;# 
  2967     019F                     	;# 
  2968     019F                     	;# 
  2969     020C                     	;# 
  2970     020D                     	;# 
  2971     020E                     	;# 
  2972     0211                     	;# 
  2973     0211                     	;# 
  2974     0212                     	;# 
  2975     0212                     	;# 
  2976     0213                     	;# 
  2977     0213                     	;# 
  2978     0214                     	;# 
  2979     0214                     	;# 
  2980     0215                     	;# 
  2981     0215                     	;# 
  2982     0215                     	;# 
  2983     0215                     	;# 
  2984     0216                     	;# 
  2985     0216                     	;# 
  2986     0217                     	;# 
  2987     0217                     	;# 
  2988     028C                     	;# 
  2989     028D                     	;# 
  2990     028E                     	;# 
  2991     0291                     	;# 
  2992     0291                     	;# 
  2993     0292                     	;# 
  2994     0293                     	;# 
  2995     0294                     	;# 
  2996     0298                     	;# 
  2997     0298                     	;# 
  2998     0299                     	;# 
  2999     029A                     	;# 
  3000     029B                     	;# 
  3001     029E                     	;# 
  3002     030C                     	;# 
  3003     030D                     	;# 
  3004     030E                     	;# 
  3005     038C                     	;# 
  3006     038D                     	;# 
  3007     038E                     	;# 
  3008     0391                     	;# 
  3009     0392                     	;# 
  3010     0393                     	;# 
  3011     0394                     	;# 
  3012     0395                     	;# 
  3013     0396                     	;# 
  3014     0397                     	;# 
  3015     0398                     	;# 
  3016     0399                     	;# 
  3017     040E                     	;# 
  3018     0413                     	;# 
  3019     0413                     	;# 
  3020     0414                     	;# 
  3021     0414                     	;# 
  3022     0415                     	;# 
  3023     0416                     	;# 
  3024     0417                     	;# 
  3025     0418                     	;# 
  3026     041A                     	;# 
  3027     041A                     	;# 
  3028     041B                     	;# 
  3029     041B                     	;# 
  3030     041C                     	;# 
  3031     041D                     	;# 
  3032     041E                     	;# 
  3033     041F                     	;# 
  3034     0493                     	;# 
  3035     0494                     	;# 
  3036     0495                     	;# 
  3037     0496                     	;# 
  3038     049A                     	;# 
  3039     049B                     	;# 
  3040     049C                     	;# 
  3041     049D                     	;# 
  3042     058C                     	;# 
  3043     058C                     	;# 
  3044     058D                     	;# 
  3045     058E                     	;# 
  3046     058E                     	;# 
  3047     058F                     	;# 
  3048     0590                     	;# 
  3049     0590                     	;# 
  3050     0591                     	;# 
  3051     0592                     	;# 
  3052     0592                     	;# 
  3053     0593                     	;# 
  3054     0594                     	;# 
  3055     0594                     	;# 
  3056     0595                     	;# 
  3057     0596                     	;# 
  3058     0596                     	;# 
  3059     0597                     	;# 
  3060     0598                     	;# 
  3061     0599                     	;# 
  3062     059A                     	;# 
  3063     059B                     	;# 
  3064     059B                     	;# 
  3065     059C                     	;# 
  3066     059D                     	;# 
  3067     060C                     	;# 
  3068     060C                     	;# 
  3069     060D                     	;# 
  3070     060E                     	;# 
  3071     060F                     	;# 
  3072     060F                     	;# 
  3073     0610                     	;# 
  3074     0611                     	;# 
  3075     0612                     	;# 
  3076     0613                     	;# 
  3077     0614                     	;# 
  3078     0617                     	;# 
  3079     0617                     	;# 
  3080     0618                     	;# 
  3081     0619                     	;# 
  3082     061A                     	;# 
  3083     061A                     	;# 
  3084     061B                     	;# 
  3085     061C                     	;# 
  3086     0691                     	;# 
  3087     0692                     	;# 
  3088     0693                     	;# 
  3089     0694                     	;# 
  3090     0695                     	;# 
  3091     0696                     	;# 
  3092     0697                     	;# 
  3093     0699                     	;# 
  3094     069A                     	;# 
  3095     0711                     	;# 
  3096     0712                     	;# 
  3097     0713                     	;# 
  3098     0714                     	;# 
  3099     0715                     	;# 
  3100     0718                     	;# 
  3101     0718                     	;# 
  3102     0719                     	;# 
  3103     071A                     	;# 
  3104     071A                     	;# 
  3105     071B                     	;# 
  3106     071C                     	;# 
  3107     071D                     	;# 
  3108     0791                     	;# 
  3109     0791                     	;# 
  3110     0792                     	;# 
  3111     0793                     	;# 
  3112     0793                     	;# 
  3113     0794                     	;# 
  3114     0795                     	;# 
  3115     0795                     	;# 
  3116     0796                     	;# 
  3117     0797                     	;# 
  3118     0797                     	;# 
  3119     0798                     	;# 
  3120     0799                     	;# 
  3121     079A                     	;# 
  3122     080C                     	;# 
  3123     080C                     	;# 
  3124     080D                     	;# 
  3125     080E                     	;# 
  3126     080E                     	;# 
  3127     080F                     	;# 
  3128     0810                     	;# 
  3129     0810                     	;# 
  3130     0811                     	;# 
  3131     0812                     	;# 
  3132     0812                     	;# 
  3133     0813                     	;# 
  3134     0814                     	;# 
  3135     0815                     	;# 
  3136     0816                     	;# 
  3137     0817                     	;# 
  3138     0818                     	;# 
  3139     0819                     	;# 
  3140     081A                     	;# 
  3141     081A                     	;# 
  3142     081B                     	;# 
  3143     081C                     	;# 
  3144     081C                     	;# 
  3145     081D                     	;# 
  3146     088C                     	;# 
  3147     088D                     	;# 
  3148     088E                     	;# 
  3149     088F                     	;# 
  3150     088F                     	;# 
  3151     0890                     	;# 
  3152     0891                     	;# 
  3153     0892                     	;# 
  3154     0893                     	;# 
  3155     0893                     	;# 
  3156     0894                     	;# 
  3157     0895                     	;# 
  3158     0896                     	;# 
  3159     0897                     	;# 
  3160     0897                     	;# 
  3161     0898                     	;# 
  3162     0899                     	;# 
  3163     0D8C                     	;# 
  3164     0D8C                     	;# 
  3165     0D8D                     	;# 
  3166     0D8E                     	;# 
  3167     0D8F                     	;# 
  3168     0D8F                     	;# 
  3169     0D90                     	;# 
  3170     0D91                     	;# 
  3171     0D92                     	;# 
  3172     0D92                     	;# 
  3173     0D93                     	;# 
  3174     0D94                     	;# 
  3175     0D95                     	;# 
  3176     0D95                     	;# 
  3177     0D96                     	;# 
  3178     0D97                     	;# 
  3179     0D98                     	;# 
  3180     0D99                     	;# 
  3181     0D9A                     	;# 
  3182     0D9B                     	;# 
  3183     0D9C                     	;# 
  3184     0D9D                     	;# 
  3185     0D9E                     	;# 
  3186     0D9E                     	;# 
  3187     0D9F                     	;# 
  3188     0DA0                     	;# 
  3189     0DA1                     	;# 
  3190     0DA1                     	;# 
  3191     0DA2                     	;# 
  3192     0DA3                     	;# 
  3193     0DA4                     	;# 
  3194     0DA4                     	;# 
  3195     0DA5                     	;# 
  3196     0DA6                     	;# 
  3197     0DA7                     	;# 
  3198     0DA7                     	;# 
  3199     0DA8                     	;# 
  3200     0DA9                     	;# 
  3201     0DAA                     	;# 
  3202     0DAB                     	;# 
  3203     0DAC                     	;# 
  3204     0DAD                     	;# 
  3205     0DAE                     	;# 
  3206     0DAF                     	;# 
  3207     0E0F                     	;# 
  3208     0E10                     	;# 
  3209     0E11                     	;# 
  3210     0E12                     	;# 
  3211     0E13                     	;# 
  3212     0E14                     	;# 
  3213     0E15                     	;# 
  3214     0E16                     	;# 
  3215     0E17                     	;# 
  3216     0E17                     	;# 
  3217     0E18                     	;# 
  3218     0E18                     	;# 
  3219     0E19                     	;# 
  3220     0E1A                     	;# 
  3221     0E1B                     	;# 
  3222     0E1B                     	;# 
  3223     0E1C                     	;# 
  3224     0E1D                     	;# 
  3225     0E1E                     	;# 
  3226     0E1E                     	;# 
  3227     0E1F                     	;# 
  3228     0E20                     	;# 
  3229     0E21                     	;# 
  3230     0E22                     	;# 
  3231     0E23                     	;# 
  3232     0E24                     	;# 
  3233     0E25                     	;# 
  3234     0E26                     	;# 
  3235     0E27                     	;# 
  3236     0E28                     	;# 
  3237     0E29                     	;# 
  3238     0E2A                     	;# 
  3239     0E2B                     	;# 
  3240     0E2C                     	;# 
  3241     0E2D                     	;# 
  3242     0E2E                     	;# 
  3243     0E90                     	;# 
  3244     0E91                     	;# 
  3245     0E92                     	;# 
  3246     0E94                     	;# 
  3247     0E95                     	;# 
  3248     0E9C                     	;# 
  3249     0E9D                     	;# 
  3250     0E9E                     	;# 
  3251     0E9F                     	;# 
  3252     0EA0                     	;# 
  3253     0EA1                     	;# 
  3254     0EA2                     	;# 
  3255     0EA3                     	;# 
  3256     0EA4                     	;# 
  3257     0EA5                     	;# 
  3258     0EA6                     	;# 
  3259     0EA7                     	;# 
  3260     0F0F                     	;# 
  3261     0F10                     	;# 
  3262     0F11                     	;# 
  3263     0F12                     	;# 
  3264     0F13                     	;# 
  3265     0F14                     	;# 
  3266     0F15                     	;# 
  3267     0F16                     	;# 
  3268     0F17                     	;# 
  3269     0F18                     	;# 
  3270     0F19                     	;# 
  3271     0F1A                     	;# 
  3272     0F1B                     	;# 
  3273     0F1C                     	;# 
  3274     0F1D                     	;# 
  3275     0F1E                     	;# 
  3276     0F1F                     	;# 
  3277     0F20                     	;# 
  3278     0F21                     	;# 
  3279     0F22                     	;# 
  3280     0F23                     	;# 
  3281     0F24                     	;# 
  3282     0F25                     	;# 
  3283     0F26                     	;# 
  3284     0F27                     	;# 
  3285     0F28                     	;# 
  3286     0F29                     	;# 
  3287     0F2A                     	;# 
  3288     0F2B                     	;# 
  3289     0F2C                     	;# 
  3290     0F2D                     	;# 
  3291     0F2E                     	;# 
  3292     0F2F                     	;# 
  3293     0F30                     	;# 
  3294     0F31                     	;# 
  3295     0F32                     	;# 
  3296     0F33                     	;# 
  3297     0F34                     	;# 
  3298     0F35                     	;# 
  3299     0F36                     	;# 
  3300     0F37                     	;# 
  3301     0FE4                     	;# 
  3302     0FE5                     	;# 
  3303     0FE6                     	;# 
  3304     0FE7                     	;# 
  3305     0FE8                     	;# 
  3306     0FE9                     	;# 
  3307     0FEA                     	;# 
  3308     0FEB                     	;# 
  3309     0FED                     	;# 
  3310     0FEE                     	;# 
  3311     0FEF                     	;# 
  3312     0000                     	;# 
  3313     0001                     	;# 
  3314     0002                     	;# 
  3315     0003                     	;# 
  3316     0004                     	;# 
  3317     0005                     	;# 
  3318     0006                     	;# 
  3319     0007                     	;# 
  3320     0008                     	;# 
  3321     0009                     	;# 
  3322     000A                     	;# 
  3323     000B                     	;# 
  3324     000C                     	;# 
  3325     000D                     	;# 
  3326     000E                     	;# 
  3327     0010                     	;# 
  3328     0011                     	;# 
  3329     0012                     	;# 
  3330     0013                     	;# 
  3331     0014                     	;# 
  3332     0015                     	;# 
  3333     0016                     	;# 
  3334     0016                     	;# 
  3335     0017                     	;# 
  3336     0018                     	;# 
  3337     0019                     	;# 
  3338     001A                     	;# 
  3339     001A                     	;# 
  3340     001B                     	;# 
  3341     001B                     	;# 
  3342     001C                     	;# 
  3343     001D                     	;# 
  3344     001E                     	;# 
  3345     001F                     	;# 
  3346     008C                     	;# 
  3347     008D                     	;# 
  3348     008E                     	;# 
  3349     0090                     	;# 
  3350     0091                     	;# 
  3351     0092                     	;# 
  3352     0093                     	;# 
  3353     0094                     	;# 
  3354     0095                     	;# 
  3355     0096                     	;# 
  3356     0098                     	;# 
  3357     0099                     	;# 
  3358     009A                     	;# 
  3359     009B                     	;# 
  3360     009B                     	;# 
  3361     009C                     	;# 
  3362     009D                     	;# 
  3363     009E                     	;# 
  3364     009F                     	;# 
  3365     010C                     	;# 
  3366     010D                     	;# 
  3367     010E                     	;# 
  3368     0111                     	;# 
  3369     0112                     	;# 
  3370     0113                     	;# 
  3371     0114                     	;# 
  3372     0115                     	;# 
  3373     0116                     	;# 
  3374     0117                     	;# 
  3375     0118                     	;# 
  3376     0119                     	;# 
  3377     011C                     	;# 
  3378     018C                     	;# 
  3379     018D                     	;# 
  3380     018E                     	;# 
  3381     0191                     	;# 
  3382     0191                     	;# 
  3383     0192                     	;# 
  3384     0193                     	;# 
  3385     0193                     	;# 
  3386     0194                     	;# 
  3387     0195                     	;# 
  3388     0196                     	;# 
  3389     0197                     	;# 
  3390     0199                     	;# 
  3391     0199                     	;# 
  3392     0199                     	;# 
  3393     019A                     	;# 
  3394     019A                     	;# 
  3395     019A                     	;# 
  3396     019B                     	;# 
  3397     019B                     	;# 
  3398     019B                     	;# 
  3399     019B                     	;# 
  3400     019B                     	;# 
  3401     019C                     	;# 
  3402     019C                     	;# 
  3403     019C                     	;# 
  3404     019D                     	;# 
  3405     019D                     	;# 
  3406     019D                     	;# 
  3407     019E                     	;# 
  3408     019E                     	;# 
  3409     019E                     	;# 
  3410     019F                     	;# 
  3411     019F                     	;# 
  3412     019F                     	;# 
  3413     019F                     	;# 
  3414     019F                     	;# 
  3415     020C                     	;# 
  3416     020D                     	;# 
  3417     020E                     	;# 
  3418     0211                     	;# 
  3419     0211                     	;# 
  3420     0212                     	;# 
  3421     0212                     	;# 
  3422     0213                     	;# 
  3423     0213                     	;# 
  3424     0214                     	;# 
  3425     0214                     	;# 
  3426     0215                     	;# 
  3427     0215                     	;# 
  3428     0215                     	;# 
  3429     0215                     	;# 
  3430     0216                     	;# 
  3431     0216                     	;# 
  3432     0217                     	;# 
  3433     0217                     	;# 
  3434     028C                     	;# 
  3435     028D                     	;# 
  3436     028E                     	;# 
  3437     0291                     	;# 
  3438     0291                     	;# 
  3439     0292                     	;# 
  3440     0293                     	;# 
  3441     0294                     	;# 
  3442     0298                     	;# 
  3443     0298                     	;# 
  3444     0299                     	;# 
  3445     029A                     	;# 
  3446     029B                     	;# 
  3447     029E                     	;# 
  3448     030C                     	;# 
  3449     030D                     	;# 
  3450     030E                     	;# 
  3451     038C                     	;# 
  3452     038D                     	;# 
  3453     038E                     	;# 
  3454     0391                     	;# 
  3455     0392                     	;# 
  3456     0393                     	;# 
  3457     0394                     	;# 
  3458     0395                     	;# 
  3459     0396                     	;# 
  3460     0397                     	;# 
  3461     0398                     	;# 
  3462     0399                     	;# 
  3463     040E                     	;# 
  3464     0413                     	;# 
  3465     0413                     	;# 
  3466     0414                     	;# 
  3467     0414                     	;# 
  3468     0415                     	;# 
  3469     0416                     	;# 
  3470     0417                     	;# 
  3471     0418                     	;# 
  3472     041A                     	;# 
  3473     041A                     	;# 
  3474     041B                     	;# 
  3475     041B                     	;# 
  3476     041C                     	;# 
  3477     041D                     	;# 
  3478     041E                     	;# 
  3479     041F                     	;# 
  3480     0493                     	;# 
  3481     0494                     	;# 
  3482     0495                     	;# 
  3483     0496                     	;# 
  3484     049A                     	;# 
  3485     049B                     	;# 
  3486     049C                     	;# 
  3487     049D                     	;# 
  3488     058C                     	;# 
  3489     058C                     	;# 
  3490     058D                     	;# 
  3491     058E                     	;# 
  3492     058E                     	;# 
  3493     058F                     	;# 
  3494     0590                     	;# 
  3495     0590                     	;# 
  3496     0591                     	;# 
  3497     0592                     	;# 
  3498     0592                     	;# 
  3499     0593                     	;# 
  3500     0594                     	;# 
  3501     0594                     	;# 
  3502     0595                     	;# 
  3503     0596                     	;# 
  3504     0596                     	;# 
  3505     0597                     	;# 
  3506     0598                     	;# 
  3507     0599                     	;# 
  3508     059A                     	;# 
  3509     059B                     	;# 
  3510     059B                     	;# 
  3511     059C                     	;# 
  3512     059D                     	;# 
  3513     060C                     	;# 
  3514     060C                     	;# 
  3515     060D                     	;# 
  3516     060E                     	;# 
  3517     060F                     	;# 
  3518     060F                     	;# 
  3519     0610                     	;# 
  3520     0611                     	;# 
  3521     0612                     	;# 
  3522     0613                     	;# 
  3523     0614                     	;# 
  3524     0617                     	;# 
  3525     0617                     	;# 
  3526     0618                     	;# 
  3527     0619                     	;# 
  3528     061A                     	;# 
  3529     061A                     	;# 
  3530     061B                     	;# 
  3531     061C                     	;# 
  3532     0691                     	;# 
  3533     0692                     	;# 
  3534     0693                     	;# 
  3535     0694                     	;# 
  3536     0695                     	;# 
  3537     0696                     	;# 
  3538     0697                     	;# 
  3539     0699                     	;# 
  3540     069A                     	;# 
  3541     0711                     	;# 
  3542     0712                     	;# 
  3543     0713                     	;# 
  3544     0714                     	;# 
  3545     0715                     	;# 
  3546     0718                     	;# 
  3547     0718                     	;# 
  3548     0719                     	;# 
  3549     071A                     	;# 
  3550     071A                     	;# 
  3551     071B                     	;# 
  3552     071C                     	;# 
  3553     071D                     	;# 
  3554     0791                     	;# 
  3555     0791                     	;# 
  3556     0792                     	;# 
  3557     0793                     	;# 
  3558     0793                     	;# 
  3559     0794                     	;# 
  3560     0795                     	;# 
  3561     0795                     	;# 
  3562     0796                     	;# 
  3563     0797                     	;# 
  3564     0797                     	;# 
  3565     0798                     	;# 
  3566     0799                     	;# 
  3567     079A                     	;# 
  3568     080C                     	;# 
  3569     080C                     	;# 
  3570     080D                     	;# 
  3571     080E                     	;# 
  3572     080E                     	;# 
  3573     080F                     	;# 
  3574     0810                     	;# 
  3575     0810                     	;# 
  3576     0811                     	;# 
  3577     0812                     	;# 
  3578     0812                     	;# 
  3579     0813                     	;# 
  3580     0814                     	;# 
  3581     0815                     	;# 
  3582     0816                     	;# 
  3583     0817                     	;# 
  3584     0818                     	;# 
  3585     0819                     	;# 
  3586     081A                     	;# 
  3587     081A                     	;# 
  3588     081B                     	;# 
  3589     081C                     	;# 
  3590     081C                     	;# 
  3591     081D                     	;# 
  3592     088C                     	;# 
  3593     088D                     	;# 
  3594     088E                     	;# 
  3595     088F                     	;# 
  3596     088F                     	;# 
  3597     0890                     	;# 
  3598     0891                     	;# 
  3599     0892                     	;# 
  3600     0893                     	;# 
  3601     0893                     	;# 
  3602     0894                     	;# 
  3603     0895                     	;# 
  3604     0896                     	;# 
  3605     0897                     	;# 
  3606     0897                     	;# 
  3607     0898                     	;# 
  3608     0899                     	;# 
  3609     0D8C                     	;# 
  3610     0D8C                     	;# 
  3611     0D8D                     	;# 
  3612     0D8E                     	;# 
  3613     0D8F                     	;# 
  3614     0D8F                     	;# 
  3615     0D90                     	;# 
  3616     0D91                     	;# 
  3617     0D92                     	;# 
  3618     0D92                     	;# 
  3619     0D93                     	;# 
  3620     0D94                     	;# 
  3621     0D95                     	;# 
  3622     0D95                     	;# 
  3623     0D96                     	;# 
  3624     0D97                     	;# 
  3625     0D98                     	;# 
  3626     0D99                     	;# 
  3627     0D9A                     	;# 
  3628     0D9B                     	;# 
  3629     0D9C                     	;# 
  3630     0D9D                     	;# 
  3631     0D9E                     	;# 
  3632     0D9E                     	;# 
  3633     0D9F                     	;# 
  3634     0DA0                     	;# 
  3635     0DA1                     	;# 
  3636     0DA1                     	;# 
  3637     0DA2                     	;# 
  3638     0DA3                     	;# 
  3639     0DA4                     	;# 
  3640     0DA4                     	;# 
  3641     0DA5                     	;# 
  3642     0DA6                     	;# 
  3643     0DA7                     	;# 
  3644     0DA7                     	;# 
  3645     0DA8                     	;# 
  3646     0DA9                     	;# 
  3647     0DAA                     	;# 
  3648     0DAB                     	;# 
  3649     0DAC                     	;# 
  3650     0DAD                     	;# 
  3651     0DAE                     	;# 
  3652     0DAF                     	;# 
  3653     0E0F                     	;# 
  3654     0E10                     	;# 
  3655     0E11                     	;# 
  3656     0E12                     	;# 
  3657     0E13                     	;# 
  3658     0E14                     	;# 
  3659     0E15                     	;# 
  3660     0E16                     	;# 
  3661     0E17                     	;# 
  3662     0E17                     	;# 
  3663     0E18                     	;# 
  3664     0E18                     	;# 
  3665     0E19                     	;# 
  3666     0E1A                     	;# 
  3667     0E1B                     	;# 
  3668     0E1B                     	;# 
  3669     0E1C                     	;# 
  3670     0E1D                     	;# 
  3671     0E1E                     	;# 
  3672     0E1E                     	;# 
  3673     0E1F                     	;# 
  3674     0E20                     	;# 
  3675     0E21                     	;# 
  3676     0E22                     	;# 
  3677     0E23                     	;# 
  3678     0E24                     	;# 
  3679     0E25                     	;# 
  3680     0E26                     	;# 
  3681     0E27                     	;# 
  3682     0E28                     	;# 
  3683     0E29                     	;# 
  3684     0E2A                     	;# 
  3685     0E2B                     	;# 
  3686     0E2C                     	;# 
  3687     0E2D                     	;# 
  3688     0E2E                     	;# 
  3689     0E90                     	;# 
  3690     0E91                     	;# 
  3691     0E92                     	;# 
  3692     0E94                     	;# 
  3693     0E95                     	;# 
  3694     0E9C                     	;# 
  3695     0E9D                     	;# 
  3696     0E9E                     	;# 
  3697     0E9F                     	;# 
  3698     0EA0                     	;# 
  3699     0EA1                     	;# 
  3700     0EA2                     	;# 
  3701     0EA3                     	;# 
  3702     0EA4                     	;# 
  3703     0EA5                     	;# 
  3704     0EA6                     	;# 
  3705     0EA7                     	;# 
  3706     0F0F                     	;# 
  3707     0F10                     	;# 
  3708     0F11                     	;# 
  3709     0F12                     	;# 
  3710     0F13                     	;# 
  3711     0F14                     	;# 
  3712     0F15                     	;# 
  3713     0F16                     	;# 
  3714     0F17                     	;# 
  3715     0F18                     	;# 
  3716     0F19                     	;# 
  3717     0F1A                     	;# 
  3718     0F1B                     	;# 
  3719     0F1C                     	;# 
  3720     0F1D                     	;# 
  3721     0F1E                     	;# 
  3722     0F1F                     	;# 
  3723     0F20                     	;# 
  3724     0F21                     	;# 
  3725     0F22                     	;# 
  3726     0F23                     	;# 
  3727     0F24                     	;# 
  3728     0F25                     	;# 
  3729     0F26                     	;# 
  3730     0F27                     	;# 
  3731     0F28                     	;# 
  3732     0F29                     	;# 
  3733     0F2A                     	;# 
  3734     0F2B                     	;# 
  3735     0F2C                     	;# 
  3736     0F2D                     	;# 
  3737     0F2E                     	;# 
  3738     0F2F                     	;# 
  3739     0F30                     	;# 
  3740     0F31                     	;# 
  3741     0F32                     	;# 
  3742     0F33                     	;# 
  3743     0F34                     	;# 
  3744     0F35                     	;# 
  3745     0F36                     	;# 
  3746     0F37                     	;# 
  3747     0FE4                     	;# 
  3748     0FE5                     	;# 
  3749     0FE6                     	;# 
  3750     0FE7                     	;# 
  3751     0FE8                     	;# 
  3752     0FE9                     	;# 
  3753     0FEA                     	;# 
  3754     0FEB                     	;# 
  3755     0FED                     	;# 
  3756     0FEE                     	;# 
  3757     0FEF                     	;# 
  3758     0000                     	;# 
  3759     0001                     	;# 
  3760     0002                     	;# 
  3761     0003                     	;# 
  3762     0004                     	;# 
  3763     0005                     	;# 
  3764     0006                     	;# 
  3765     0007                     	;# 
  3766     0008                     	;# 
  3767     0009                     	;# 
  3768     000A                     	;# 
  3769     000B                     	;# 
  3770     000C                     	;# 
  3771     000D                     	;# 
  3772     000E                     	;# 
  3773     0010                     	;# 
  3774     0011                     	;# 
  3775     0012                     	;# 
  3776     0013                     	;# 
  3777     0014                     	;# 
  3778     0015                     	;# 
  3779     0016                     	;# 
  3780     0016                     	;# 
  3781     0017                     	;# 
  3782     0018                     	;# 
  3783     0019                     	;# 
  3784     001A                     	;# 
  3785     001A                     	;# 
  3786     001B                     	;# 
  3787     001B                     	;# 
  3788     001C                     	;# 
  3789     001D                     	;# 
  3790     001E                     	;# 
  3791     001F                     	;# 
  3792     008C                     	;# 
  3793     008D                     	;# 
  3794     008E                     	;# 
  3795     0090                     	;# 
  3796     0091                     	;# 
  3797     0092                     	;# 
  3798     0093                     	;# 
  3799     0094                     	;# 
  3800     0095                     	;# 
  3801     0096                     	;# 
  3802     0098                     	;# 
  3803     0099                     	;# 
  3804     009A                     	;# 
  3805     009B                     	;# 
  3806     009B                     	;# 
  3807     009C                     	;# 
  3808     009D                     	;# 
  3809     009E                     	;# 
  3810     009F                     	;# 
  3811     010C                     	;# 
  3812     010D                     	;# 
  3813     010E                     	;# 
  3814     0111                     	;# 
  3815     0112                     	;# 
  3816     0113                     	;# 
  3817     0114                     	;# 
  3818     0115                     	;# 
  3819     0116                     	;# 
  3820     0117                     	;# 
  3821     0118                     	;# 
  3822     0119                     	;# 
  3823     011C                     	;# 
  3824     018C                     	;# 
  3825     018D                     	;# 
  3826     018E                     	;# 
  3827     0191                     	;# 
  3828     0191                     	;# 
  3829     0192                     	;# 
  3830     0193                     	;# 
  3831     0193                     	;# 
  3832     0194                     	;# 
  3833     0195                     	;# 
  3834     0196                     	;# 
  3835     0197                     	;# 
  3836     0199                     	;# 
  3837     0199                     	;# 
  3838     0199                     	;# 
  3839     019A                     	;# 
  3840     019A                     	;# 
  3841     019A                     	;# 
  3842     019B                     	;# 
  3843     019B                     	;# 
  3844     019B                     	;# 
  3845     019B                     	;# 
  3846     019B                     	;# 
  3847     019C                     	;# 
  3848     019C                     	;# 
  3849     019C                     	;# 
  3850     019D                     	;# 
  3851     019D                     	;# 
  3852     019D                     	;# 
  3853     019E                     	;# 
  3854     019E                     	;# 
  3855     019E                     	;# 
  3856     019F                     	;# 
  3857     019F                     	;# 
  3858     019F                     	;# 
  3859     019F                     	;# 
  3860     019F                     	;# 
  3861     020C                     	;# 
  3862     020D                     	;# 
  3863     020E                     	;# 
  3864     0211                     	;# 
  3865     0211                     	;# 
  3866     0212                     	;# 
  3867     0212                     	;# 
  3868     0213                     	;# 
  3869     0213                     	;# 
  3870     0214                     	;# 
  3871     0214                     	;# 
  3872     0215                     	;# 
  3873     0215                     	;# 
  3874     0215                     	;# 
  3875     0215                     	;# 
  3876     0216                     	;# 
  3877     0216                     	;# 
  3878     0217                     	;# 
  3879     0217                     	;# 
  3880     028C                     	;# 
  3881     028D                     	;# 
  3882     028E                     	;# 
  3883     0291                     	;# 
  3884     0291                     	;# 
  3885     0292                     	;# 
  3886     0293                     	;# 
  3887     0294                     	;# 
  3888     0298                     	;# 
  3889     0298                     	;# 
  3890     0299                     	;# 
  3891     029A                     	;# 
  3892     029B                     	;# 
  3893     029E                     	;# 
  3894     030C                     	;# 
  3895     030D                     	;# 
  3896     030E                     	;# 
  3897     038C                     	;# 
  3898     038D                     	;# 
  3899     038E                     	;# 
  3900     0391                     	;# 
  3901     0392                     	;# 
  3902     0393                     	;# 
  3903     0394                     	;# 
  3904     0395                     	;# 
  3905     0396                     	;# 
  3906     0397                     	;# 
  3907     0398                     	;# 
  3908     0399                     	;# 
  3909     040E                     	;# 
  3910     0413                     	;# 
  3911     0413                     	;# 
  3912     0414                     	;# 
  3913     0414                     	;# 
  3914     0415                     	;# 
  3915     0416                     	;# 
  3916     0417                     	;# 
  3917     0418                     	;# 
  3918     041A                     	;# 
  3919     041A                     	;# 
  3920     041B                     	;# 
  3921     041B                     	;# 
  3922     041C                     	;# 
  3923     041D                     	;# 
  3924     041E                     	;# 
  3925     041F                     	;# 
  3926     0493                     	;# 
  3927     0494                     	;# 
  3928     0495                     	;# 
  3929     0496                     	;# 
  3930     049A                     	;# 
  3931     049B                     	;# 
  3932     049C                     	;# 
  3933     049D                     	;# 
  3934     058C                     	;# 
  3935     058C                     	;# 
  3936     058D                     	;# 
  3937     058E                     	;# 
  3938     058E                     	;# 
  3939     058F                     	;# 
  3940     0590                     	;# 
  3941     0590                     	;# 
  3942     0591                     	;# 
  3943     0592                     	;# 
  3944     0592                     	;# 
  3945     0593                     	;# 
  3946     0594                     	;# 
  3947     0594                     	;# 
  3948     0595                     	;# 
  3949     0596                     	;# 
  3950     0596                     	;# 
  3951     0597                     	;# 
  3952     0598                     	;# 
  3953     0599                     	;# 
  3954     059A                     	;# 
  3955     059B                     	;# 
  3956     059B                     	;# 
  3957     059C                     	;# 
  3958     059D                     	;# 
  3959     060C                     	;# 
  3960     060C                     	;# 
  3961     060D                     	;# 
  3962     060E                     	;# 
  3963     060F                     	;# 
  3964     060F                     	;# 
  3965     0610                     	;# 
  3966     0611                     	;# 
  3967     0612                     	;# 
  3968     0613                     	;# 
  3969     0614                     	;# 
  3970     0617                     	;# 
  3971     0617                     	;# 
  3972     0618                     	;# 
  3973     0619                     	;# 
  3974     061A                     	;# 
  3975     061A                     	;# 
  3976     061B                     	;# 
  3977     061C                     	;# 
  3978     0691                     	;# 
  3979     0692                     	;# 
  3980     0693                     	;# 
  3981     0694                     	;# 
  3982     0695                     	;# 
  3983     0696                     	;# 
  3984     0697                     	;# 
  3985     0699                     	;# 
  3986     069A                     	;# 
  3987     0711                     	;# 
  3988     0712                     	;# 
  3989     0713                     	;# 
  3990     0714                     	;# 
  3991     0715                     	;# 
  3992     0718                     	;# 
  3993     0718                     	;# 
  3994     0719                     	;# 
  3995     071A                     	;# 
  3996     071A                     	;# 
  3997     071B                     	;# 
  3998     071C                     	;# 
  3999     071D                     	;# 
  4000     0791                     	;# 
  4001     0791                     	;# 
  4002     0792                     	;# 
  4003     0793                     	;# 
  4004     0793                     	;# 
  4005     0794                     	;# 
  4006     0795                     	;# 
  4007     0795                     	;# 
  4008     0796                     	;# 
  4009     0797                     	;# 
  4010     0797                     	;# 
  4011     0798                     	;# 
  4012     0799                     	;# 
  4013     079A                     	;# 
  4014     080C                     	;# 
  4015     080C                     	;# 
  4016     080D                     	;# 
  4017     080E                     	;# 
  4018     080E                     	;# 
  4019     080F                     	;# 
  4020     0810                     	;# 
  4021     0810                     	;# 
  4022     0811                     	;# 
  4023     0812                     	;# 
  4024     0812                     	;# 
  4025     0813                     	;# 
  4026     0814                     	;# 
  4027     0815                     	;# 
  4028     0816                     	;# 
  4029     0817                     	;# 
  4030     0818                     	;# 
  4031     0819                     	;# 
  4032     081A                     	;# 
  4033     081A                     	;# 
  4034     081B                     	;# 
  4035     081C                     	;# 
  4036     081C                     	;# 
  4037     081D                     	;# 
  4038     088C                     	;# 
  4039     088D                     	;# 
  4040     088E                     	;# 
  4041     088F                     	;# 
  4042     088F                     	;# 
  4043     0890                     	;# 
  4044     0891                     	;# 
  4045     0892                     	;# 
  4046     0893                     	;# 
  4047     0893                     	;# 
  4048     0894                     	;# 
  4049     0895                     	;# 
  4050     0896                     	;# 
  4051     0897                     	;# 
  4052     0897                     	;# 
  4053     0898                     	;# 
  4054     0899                     	;# 
  4055     0D8C                     	;# 
  4056     0D8C                     	;# 
  4057     0D8D                     	;# 
  4058     0D8E                     	;# 
  4059     0D8F                     	;# 
  4060     0D8F                     	;# 
  4061     0D90                     	;# 
  4062     0D91                     	;# 
  4063     0D92                     	;# 
  4064     0D92                     	;# 
  4065     0D93                     	;# 
  4066     0D94                     	;# 
  4067     0D95                     	;# 
  4068     0D95                     	;# 
  4069     0D96                     	;# 
  4070     0D97                     	;# 
  4071     0D98                     	;# 
  4072     0D99                     	;# 
  4073     0D9A                     	;# 
  4074     0D9B                     	;# 
  4075     0D9C                     	;# 
  4076     0D9D                     	;# 
  4077     0D9E                     	;# 
  4078     0D9E                     	;# 
  4079     0D9F                     	;# 
  4080     0DA0                     	;# 
  4081     0DA1                     	;# 
  4082     0DA1                     	;# 
  4083     0DA2                     	;# 
  4084     0DA3                     	;# 
  4085     0DA4                     	;# 
  4086     0DA4                     	;# 
  4087     0DA5                     	;# 
  4088     0DA6                     	;# 
  4089     0DA7                     	;# 
  4090     0DA7                     	;# 
  4091     0DA8                     	;# 
  4092     0DA9                     	;# 
  4093     0DAA                     	;# 
  4094     0DAB                     	;# 
  4095     0DAC                     	;# 
  4096     0DAD                     	;# 
  4097     0DAE                     	;# 
  4098     0DAF                     	;# 
  4099     0E0F                     	;# 
  4100     0E10                     	;# 
  4101     0E11                     	;# 
  4102     0E12                     	;# 
  4103     0E13                     	;# 
  4104     0E14                     	;# 
  4105     0E15                     	;# 
  4106     0E16                     	;# 
  4107     0E17                     	;# 
  4108     0E17                     	;# 
  4109     0E18                     	;# 
  4110     0E18                     	;# 
  4111     0E19                     	;# 
  4112     0E1A                     	;# 
  4113     0E1B                     	;# 
  4114     0E1B                     	;# 
  4115     0E1C                     	;# 
  4116     0E1D                     	;# 
  4117     0E1E                     	;# 
  4118     0E1E                     	;# 
  4119     0E1F                     	;# 
  4120     0E20                     	;# 
  4121     0E21                     	;# 
  4122     0E22                     	;# 
  4123     0E23                     	;# 
  4124     0E24                     	;# 
  4125     0E25                     	;# 
  4126     0E26                     	;# 
  4127     0E27                     	;# 
  4128     0E28                     	;# 
  4129     0E29                     	;# 
  4130     0E2A                     	;# 
  4131     0E2B                     	;# 
  4132     0E2C                     	;# 
  4133     0E2D                     	;# 
  4134     0E2E                     	;# 
  4135     0E90                     	;# 
  4136     0E91                     	;# 
  4137     0E92                     	;# 
  4138     0E94                     	;# 
  4139     0E95                     	;# 
  4140     0E9C                     	;# 
  4141     0E9D                     	;# 
  4142     0E9E                     	;# 
  4143     0E9F                     	;# 
  4144     0EA0                     	;# 
  4145     0EA1                     	;# 
  4146     0EA2                     	;# 
  4147     0EA3                     	;# 
  4148     0EA4                     	;# 
  4149     0EA5                     	;# 
  4150     0EA6                     	;# 
  4151     0EA7                     	;# 
  4152     0F0F                     	;# 
  4153     0F10                     	;# 
  4154     0F11                     	;# 
  4155     0F12                     	;# 
  4156     0F13                     	;# 
  4157     0F14                     	;# 
  4158     0F15                     	;# 
  4159     0F16                     	;# 
  4160     0F17                     	;# 
  4161     0F18                     	;# 
  4162     0F19                     	;# 
  4163     0F1A                     	;# 
  4164     0F1B                     	;# 
  4165     0F1C                     	;# 
  4166     0F1D                     	;# 
  4167     0F1E                     	;# 
  4168     0F1F                     	;# 
  4169     0F20                     	;# 
  4170     0F21                     	;# 
  4171     0F22                     	;# 
  4172     0F23                     	;# 
  4173     0F24                     	;# 
  4174     0F25                     	;# 
  4175     0F26                     	;# 
  4176     0F27                     	;# 
  4177     0F28                     	;# 
  4178     0F29                     	;# 
  4179     0F2A                     	;# 
  4180     0F2B                     	;# 
  4181     0F2C                     	;# 
  4182     0F2D                     	;# 
  4183     0F2E                     	;# 
  4184     0F2F                     	;# 
  4185     0F30                     	;# 
  4186     0F31                     	;# 
  4187     0F32                     	;# 
  4188     0F33                     	;# 
  4189     0F34                     	;# 
  4190     0F35                     	;# 
  4191     0F36                     	;# 
  4192     0F37                     	;# 
  4193     0FE4                     	;# 
  4194     0FE5                     	;# 
  4195     0FE6                     	;# 
  4196     0FE7                     	;# 
  4197     0FE8                     	;# 
  4198     0FE9                     	;# 
  4199     0FEA                     	;# 
  4200     0FEB                     	;# 
  4201     0FED                     	;# 
  4202     0FEE                     	;# 
  4203     0FEF                     	;# 
  4204     0000                     	;# 
  4205     0001                     	;# 
  4206     0002                     	;# 
  4207     0003                     	;# 
  4208     0004                     	;# 
  4209     0005                     	;# 
  4210     0006                     	;# 
  4211     0007                     	;# 
  4212     0008                     	;# 
  4213     0009                     	;# 
  4214     000A                     	;# 
  4215     000B                     	;# 
  4216     000C                     	;# 
  4217     000D                     	;# 
  4218     000E                     	;# 
  4219     0010                     	;# 
  4220     0011                     	;# 
  4221     0012                     	;# 
  4222     0013                     	;# 
  4223     0014                     	;# 
  4224     0015                     	;# 
  4225     0016                     	;# 
  4226     0016                     	;# 
  4227     0017                     	;# 
  4228     0018                     	;# 
  4229     0019                     	;# 
  4230     001A                     	;# 
  4231     001A                     	;# 
  4232     001B                     	;# 
  4233     001B                     	;# 
  4234     001C                     	;# 
  4235     001D                     	;# 
  4236     001E                     	;# 
  4237     001F                     	;# 
  4238     008C                     	;# 
  4239     008D                     	;# 
  4240     008E                     	;# 
  4241     0090                     	;# 
  4242     0091                     	;# 
  4243     0092                     	;# 
  4244     0093                     	;# 
  4245     0094                     	;# 
  4246     0095                     	;# 
  4247     0096                     	;# 
  4248     0098                     	;# 
  4249     0099                     	;# 
  4250     009A                     	;# 
  4251     009B                     	;# 
  4252     009B                     	;# 
  4253     009C                     	;# 
  4254     009D                     	;# 
  4255     009E                     	;# 
  4256     009F                     	;# 
  4257     010C                     	;# 
  4258     010D                     	;# 
  4259     010E                     	;# 
  4260     0111                     	;# 
  4261     0112                     	;# 
  4262     0113                     	;# 
  4263     0114                     	;# 
  4264     0115                     	;# 
  4265     0116                     	;# 
  4266     0117                     	;# 
  4267     0118                     	;# 
  4268     0119                     	;# 
  4269     011C                     	;# 
  4270     018C                     	;# 
  4271     018D                     	;# 
  4272     018E                     	;# 
  4273     0191                     	;# 
  4274     0191                     	;# 
  4275     0192                     	;# 
  4276     0193                     	;# 
  4277     0193                     	;# 
  4278     0194                     	;# 
  4279     0195                     	;# 
  4280     0196                     	;# 
  4281     0197                     	;# 
  4282     0199                     	;# 
  4283     0199                     	;# 
  4284     0199                     	;# 
  4285     019A                     	;# 
  4286     019A                     	;# 
  4287     019A                     	;# 
  4288     019B                     	;# 
  4289     019B                     	;# 
  4290     019B                     	;# 
  4291     019B                     	;# 
  4292     019B                     	;# 
  4293     019C                     	;# 
  4294     019C                     	;# 
  4295     019C                     	;# 
  4296     019D                     	;# 
  4297     019D                     	;# 
  4298     019D                     	;# 
  4299     019E                     	;# 
  4300     019E                     	;# 
  4301     019E                     	;# 
  4302     019F                     	;# 
  4303     019F                     	;# 
  4304     019F                     	;# 
  4305     019F                     	;# 
  4306     019F                     	;# 
  4307     020C                     	;# 
  4308     020D                     	;# 
  4309     020E                     	;# 
  4310     0211                     	;# 
  4311     0211                     	;# 
  4312     0212                     	;# 
  4313     0212                     	;# 
  4314     0213                     	;# 
  4315     0213                     	;# 
  4316     0214                     	;# 
  4317     0214                     	;# 
  4318     0215                     	;# 
  4319     0215                     	;# 
  4320     0215                     	;# 
  4321     0215                     	;# 
  4322     0216                     	;# 
  4323     0216                     	;# 
  4324     0217                     	;# 
  4325     0217                     	;# 
  4326     028C                     	;# 
  4327     028D                     	;# 
  4328     028E                     	;# 
  4329     0291                     	;# 
  4330     0291                     	;# 
  4331     0292                     	;# 
  4332     0293                     	;# 
  4333     0294                     	;# 
  4334     0298                     	;# 
  4335     0298                     	;# 
  4336     0299                     	;# 
  4337     029A                     	;# 
  4338     029B                     	;# 
  4339     029E                     	;# 
  4340     030C                     	;# 
  4341     030D                     	;# 
  4342     030E                     	;# 
  4343     038C                     	;# 
  4344     038D                     	;# 
  4345     038E                     	;# 
  4346     0391                     	;# 
  4347     0392                     	;# 
  4348     0393                     	;# 
  4349     0394                     	;# 
  4350     0395                     	;# 
  4351     0396                     	;# 
  4352     0397                     	;# 
  4353     0398                     	;# 
  4354     0399                     	;# 
  4355     040E                     	;# 
  4356     0413                     	;# 
  4357     0413                     	;# 
  4358     0414                     	;# 
  4359     0414                     	;# 
  4360     0415                     	;# 
  4361     0416                     	;# 
  4362     0417                     	;# 
  4363     0418                     	;# 
  4364     041A                     	;# 
  4365     041A                     	;# 
  4366     041B                     	;# 
  4367     041B                     	;# 
  4368     041C                     	;# 
  4369     041D                     	;# 
  4370     041E                     	;# 
  4371     041F                     	;# 
  4372     0493                     	;# 
  4373     0494                     	;# 
  4374     0495                     	;# 
  4375     0496                     	;# 
  4376     049A                     	;# 
  4377     049B                     	;# 
  4378     049C                     	;# 
  4379     049D                     	;# 
  4380     058C                     	;# 
  4381     058C                     	;# 
  4382     058D                     	;# 
  4383     058E                     	;# 
  4384     058E                     	;# 
  4385     058F                     	;# 
  4386     0590                     	;# 
  4387     0590                     	;# 
  4388     0591                     	;# 
  4389     0592                     	;# 
  4390     0592                     	;# 
  4391     0593                     	;# 
  4392     0594                     	;# 
  4393     0594                     	;# 
  4394     0595                     	;# 
  4395     0596                     	;# 
  4396     0596                     	;# 
  4397     0597                     	;# 
  4398     0598                     	;# 
  4399     0599                     	;# 
  4400     059A                     	;# 
  4401     059B                     	;# 
  4402     059B                     	;# 
  4403     059C                     	;# 
  4404     059D                     	;# 
  4405     060C                     	;# 
  4406     060C                     	;# 
  4407     060D                     	;# 
  4408     060E                     	;# 
  4409     060F                     	;# 
  4410     060F                     	;# 
  4411     0610                     	;# 
  4412     0611                     	;# 
  4413     0612                     	;# 
  4414     0613                     	;# 
  4415     0614                     	;# 
  4416     0617                     	;# 
  4417     0617                     	;# 
  4418     0618                     	;# 
  4419     0619                     	;# 
  4420     061A                     	;# 
  4421     061A                     	;# 
  4422     061B                     	;# 
  4423     061C                     	;# 
  4424     0691                     	;# 
  4425     0692                     	;# 
  4426     0693                     	;# 
  4427     0694                     	;# 
  4428     0695                     	;# 
  4429     0696                     	;# 
  4430     0697                     	;# 
  4431     0699                     	;# 
  4432     069A                     	;# 
  4433     0711                     	;# 
  4434     0712                     	;# 
  4435     0713                     	;# 
  4436     0714                     	;# 
  4437     0715                     	;# 
  4438     0718                     	;# 
  4439     0718                     	;# 
  4440     0719                     	;# 
  4441     071A                     	;# 
  4442     071A                     	;# 
  4443     071B                     	;# 
  4444     071C                     	;# 
  4445     071D                     	;# 
  4446     0791                     	;# 
  4447     0791                     	;# 
  4448     0792                     	;# 
  4449     0793                     	;# 
  4450     0793                     	;# 
  4451     0794                     	;# 
  4452     0795                     	;# 
  4453     0795                     	;# 
  4454     0796                     	;# 
  4455     0797                     	;# 
  4456     0797                     	;# 
  4457     0798                     	;# 
  4458     0799                     	;# 
  4459     079A                     	;# 
  4460     080C                     	;# 
  4461     080C                     	;# 
  4462     080D                     	;# 
  4463     080E                     	;# 
  4464     080E                     	;# 
  4465     080F                     	;# 
  4466     0810                     	;# 
  4467     0810                     	;# 
  4468     0811                     	;# 
  4469     0812                     	;# 
  4470     0812                     	;# 
  4471     0813                     	;# 
  4472     0814                     	;# 
  4473     0815                     	;# 
  4474     0816                     	;# 
  4475     0817                     	;# 
  4476     0818                     	;# 
  4477     0819                     	;# 
  4478     081A                     	;# 
  4479     081A                     	;# 
  4480     081B                     	;# 
  4481     081C                     	;# 
  4482     081C                     	;# 
  4483     081D                     	;# 
  4484     088C                     	;# 
  4485     088D                     	;# 
  4486     088E                     	;# 
  4487     088F                     	;# 
  4488     088F                     	;# 
  4489     0890                     	;# 
  4490     0891                     	;# 
  4491     0892                     	;# 
  4492     0893                     	;# 
  4493     0893                     	;# 
  4494     0894                     	;# 
  4495     0895                     	;# 
  4496     0896                     	;# 
  4497     0897                     	;# 
  4498     0897                     	;# 
  4499     0898                     	;# 
  4500     0899                     	;# 
  4501     0D8C                     	;# 
  4502     0D8C                     	;# 
  4503     0D8D                     	;# 
  4504     0D8E                     	;# 
  4505     0D8F                     	;# 
  4506     0D8F                     	;# 
  4507     0D90                     	;# 
  4508     0D91                     	;# 
  4509     0D92                     	;# 
  4510     0D92                     	;# 
  4511     0D93                     	;# 
  4512     0D94                     	;# 
  4513     0D95                     	;# 
  4514     0D95                     	;# 
  4515     0D96                     	;# 
  4516     0D97                     	;# 
  4517     0D98                     	;# 
  4518     0D99                     	;# 
  4519     0D9A                     	;# 
  4520     0D9B                     	;# 
  4521     0D9C                     	;# 
  4522     0D9D                     	;# 
  4523     0D9E                     	;# 
  4524     0D9E                     	;# 
  4525     0D9F                     	;# 
  4526     0DA0                     	;# 
  4527     0DA1                     	;# 
  4528     0DA1                     	;# 
  4529     0DA2                     	;# 
  4530     0DA3                     	;# 
  4531     0DA4                     	;# 
  4532     0DA4                     	;# 
  4533     0DA5                     	;# 
  4534     0DA6                     	;# 
  4535     0DA7                     	;# 
  4536     0DA7                     	;# 
  4537     0DA8                     	;# 
  4538     0DA9                     	;# 
  4539     0DAA                     	;# 
  4540     0DAB                     	;# 
  4541     0DAC                     	;# 
  4542     0DAD                     	;# 
  4543     0DAE                     	;# 
  4544     0DAF                     	;# 
  4545     0E0F                     	;# 
  4546     0E10                     	;# 
  4547     0E11                     	;# 
  4548     0E12                     	;# 
  4549     0E13                     	;# 
  4550     0E14                     	;# 
  4551     0E15                     	;# 
  4552     0E16                     	;# 
  4553     0E17                     	;# 
  4554     0E17                     	;# 
  4555     0E18                     	;# 
  4556     0E18                     	;# 
  4557     0E19                     	;# 
  4558     0E1A                     	;# 
  4559     0E1B                     	;# 
  4560     0E1B                     	;# 
  4561     0E1C                     	;# 
  4562     0E1D                     	;# 
  4563     0E1E                     	;# 
  4564     0E1E                     	;# 
  4565     0E1F                     	;# 
  4566     0E20                     	;# 
  4567     0E21                     	;# 
  4568     0E22                     	;# 
  4569     0E23                     	;# 
  4570     0E24                     	;# 
  4571     0E25                     	;# 
  4572     0E26                     	;# 
  4573     0E27                     	;# 
  4574     0E28                     	;# 
  4575     0E29                     	;# 
  4576     0E2A                     	;# 
  4577     0E2B                     	;# 
  4578     0E2C                     	;# 
  4579     0E2D                     	;# 
  4580     0E2E                     	;# 
  4581     0E90                     	;# 
  4582     0E91                     	;# 
  4583     0E92                     	;# 
  4584     0E94                     	;# 
  4585     0E95                     	;# 
  4586     0E9C                     	;# 
  4587     0E9D                     	;# 
  4588     0E9E                     	;# 
  4589     0E9F                     	;# 
  4590     0EA0                     	;# 
  4591     0EA1                     	;# 
  4592     0EA2                     	;# 
  4593     0EA3                     	;# 
  4594     0EA4                     	;# 
  4595     0EA5                     	;# 
  4596     0EA6                     	;# 
  4597     0EA7                     	;# 
  4598     0F0F                     	;# 
  4599     0F10                     	;# 
  4600     0F11                     	;# 
  4601     0F12                     	;# 
  4602     0F13                     	;# 
  4603     0F14                     	;# 
  4604     0F15                     	;# 
  4605     0F16                     	;# 
  4606     0F17                     	;# 
  4607     0F18                     	;# 
  4608     0F19                     	;# 
  4609     0F1A                     	;# 
  4610     0F1B                     	;# 
  4611     0F1C                     	;# 
  4612     0F1D                     	;# 
  4613     0F1E                     	;# 
  4614     0F1F                     	;# 
  4615     0F20                     	;# 
  4616     0F21                     	;# 
  4617     0F22                     	;# 
  4618     0F23                     	;# 
  4619     0F24                     	;# 
  4620     0F25                     	;# 
  4621     0F26                     	;# 
  4622     0F27                     	;# 
  4623     0F28                     	;# 
  4624     0F29                     	;# 
  4625     0F2A                     	;# 
  4626     0F2B                     	;# 
  4627     0F2C                     	;# 
  4628     0F2D                     	;# 
  4629     0F2E                     	;# 
  4630     0F2F                     	;# 
  4631     0F30                     	;# 
  4632     0F31                     	;# 
  4633     0F32                     	;# 
  4634     0F33                     	;# 
  4635     0F34                     	;# 
  4636     0F35                     	;# 
  4637     0F36                     	;# 
  4638     0F37                     	;# 
  4639     0FE4                     	;# 
  4640     0FE5                     	;# 
  4641     0FE6                     	;# 
  4642     0FE7                     	;# 
  4643     0FE8                     	;# 
  4644     0FE9                     	;# 
  4645     0FEA                     	;# 
  4646     0FEB                     	;# 
  4647     0FED                     	;# 
  4648     0FEE                     	;# 
  4649     0FEF                     	;# 
  4650     0000                     	;# 
  4651     0001                     	;# 
  4652     0002                     	;# 
  4653     0003                     	;# 
  4654     0004                     	;# 
  4655     0005                     	;# 
  4656     0006                     	;# 
  4657     0007                     	;# 
  4658     0008                     	;# 
  4659     0009                     	;# 
  4660     000A                     	;# 
  4661     000B                     	;# 
  4662     000C                     	;# 
  4663     000D                     	;# 
  4664     000E                     	;# 
  4665     0010                     	;# 
  4666     0011                     	;# 
  4667     0012                     	;# 
  4668     0013                     	;# 
  4669     0014                     	;# 
  4670     0015                     	;# 
  4671     0016                     	;# 
  4672     0016                     	;# 
  4673     0017                     	;# 
  4674     0018                     	;# 
  4675     0019                     	;# 
  4676     001A                     	;# 
  4677     001A                     	;# 
  4678     001B                     	;# 
  4679     001B                     	;# 
  4680     001C                     	;# 
  4681     001D                     	;# 
  4682     001E                     	;# 
  4683     001F                     	;# 
  4684     008C                     	;# 
  4685     008D                     	;# 
  4686     008E                     	;# 
  4687     0090                     	;# 
  4688     0091                     	;# 
  4689     0092                     	;# 
  4690     0093                     	;# 
  4691     0094                     	;# 
  4692     0095                     	;# 
  4693     0096                     	;# 
  4694     0098                     	;# 
  4695     0099                     	;# 
  4696     009A                     	;# 
  4697     009B                     	;# 
  4698     009B                     	;# 
  4699     009C                     	;# 
  4700     009D                     	;# 
  4701     009E                     	;# 
  4702     009F                     	;# 
  4703     010C                     	;# 
  4704     010D                     	;# 
  4705     010E                     	;# 
  4706     0111                     	;# 
  4707     0112                     	;# 
  4708     0113                     	;# 
  4709     0114                     	;# 
  4710     0115                     	;# 
  4711     0116                     	;# 
  4712     0117                     	;# 
  4713     0118                     	;# 
  4714     0119                     	;# 
  4715     011C                     	;# 
  4716     018C                     	;# 
  4717     018D                     	;# 
  4718     018E                     	;# 
  4719     0191                     	;# 
  4720     0191                     	;# 
  4721     0192                     	;# 
  4722     0193                     	;# 
  4723     0193                     	;# 
  4724     0194                     	;# 
  4725     0195                     	;# 
  4726     0196                     	;# 
  4727     0197                     	;# 
  4728     0199                     	;# 
  4729     0199                     	;# 
  4730     0199                     	;# 
  4731     019A                     	;# 
  4732     019A                     	;# 
  4733     019A                     	;# 
  4734     019B                     	;# 
  4735     019B                     	;# 
  4736     019B                     	;# 
  4737     019B                     	;# 
  4738     019B                     	;# 
  4739     019C                     	;# 
  4740     019C                     	;# 
  4741     019C                     	;# 
  4742     019D                     	;# 
  4743     019D                     	;# 
  4744     019D                     	;# 
  4745     019E                     	;# 
  4746     019E                     	;# 
  4747     019E                     	;# 
  4748     019F                     	;# 
  4749     019F                     	;# 
  4750     019F                     	;# 
  4751     019F                     	;# 
  4752     019F                     	;# 
  4753     020C                     	;# 
  4754     020D                     	;# 
  4755     020E                     	;# 
  4756     0211                     	;# 
  4757     0211                     	;# 
  4758     0212                     	;# 
  4759     0212                     	;# 
  4760     0213                     	;# 
  4761     0213                     	;# 
  4762     0214                     	;# 
  4763     0214                     	;# 
  4764     0215                     	;# 
  4765     0215                     	;# 
  4766     0215                     	;# 
  4767     0215                     	;# 
  4768     0216                     	;# 
  4769     0216                     	;# 
  4770     0217                     	;# 
  4771     0217                     	;# 
  4772     028C                     	;# 
  4773     028D                     	;# 
  4774     028E                     	;# 
  4775     0291                     	;# 
  4776     0291                     	;# 
  4777     0292                     	;# 
  4778     0293                     	;# 
  4779     0294                     	;# 
  4780     0298                     	;# 
  4781     0298                     	;# 
  4782     0299                     	;# 
  4783     029A                     	;# 
  4784     029B                     	;# 
  4785     029E                     	;# 
  4786     030C                     	;# 
  4787     030D                     	;# 
  4788     030E                     	;# 
  4789     038C                     	;# 
  4790     038D                     	;# 
  4791     038E                     	;# 
  4792     0391                     	;# 
  4793     0392                     	;# 
  4794     0393                     	;# 
  4795     0394                     	;# 
  4796     0395                     	;# 
  4797     0396                     	;# 
  4798     0397                     	;# 
  4799     0398                     	;# 
  4800     0399                     	;# 
  4801     040E                     	;# 
  4802     0413                     	;# 
  4803     0413                     	;# 
  4804     0414                     	;# 
  4805     0414                     	;# 
  4806     0415                     	;# 
  4807     0416                     	;# 
  4808     0417                     	;# 
  4809     0418                     	;# 
  4810     041A                     	;# 
  4811     041A                     	;# 
  4812     041B                     	;# 
  4813     041B                     	;# 
  4814     041C                     	;# 
  4815     041D                     	;# 
  4816     041E                     	;# 
  4817     041F                     	;# 
  4818     0493                     	;# 
  4819     0494                     	;# 
  4820     0495                     	;# 
  4821     0496                     	;# 
  4822     049A                     	;# 
  4823     049B                     	;# 
  4824     049C                     	;# 
  4825     049D                     	;# 
  4826     058C                     	;# 
  4827     058C                     	;# 
  4828     058D                     	;# 
  4829     058E                     	;# 
  4830     058E                     	;# 
  4831     058F                     	;# 
  4832     0590                     	;# 
  4833     0590                     	;# 
  4834     0591                     	;# 
  4835     0592                     	;# 
  4836     0592                     	;# 
  4837     0593                     	;# 
  4838     0594                     	;# 
  4839     0594                     	;# 
  4840     0595                     	;# 
  4841     0596                     	;# 
  4842     0596                     	;# 
  4843     0597                     	;# 
  4844     0598                     	;# 
  4845     0599                     	;# 
  4846     059A                     	;# 
  4847     059B                     	;# 
  4848     059B                     	;# 
  4849     059C                     	;# 
  4850     059D                     	;# 
  4851     060C                     	;# 
  4852     060C                     	;# 
  4853     060D                     	;# 
  4854     060E                     	;# 
  4855     060F                     	;# 
  4856     060F                     	;# 
  4857     0610                     	;# 
  4858     0611                     	;# 
  4859     0612                     	;# 
  4860     0613                     	;# 
  4861     0614                     	;# 
  4862     0617                     	;# 
  4863     0617                     	;# 
  4864     0618                     	;# 
  4865     0619                     	;# 
  4866     061A                     	;# 
  4867     061A                     	;# 
  4868     061B                     	;# 
  4869     061C                     	;# 
  4870     0691                     	;# 
  4871     0692                     	;# 
  4872     0693                     	;# 
  4873     0694                     	;# 
  4874     0695                     	;# 
  4875     0696                     	;# 
  4876     0697                     	;# 
  4877     0699                     	;# 
  4878     069A                     	;# 
  4879     0711                     	;# 
  4880     0712                     	;# 
  4881     0713                     	;# 
  4882     0714                     	;# 
  4883     0715                     	;# 
  4884     0718                     	;# 
  4885     0718                     	;# 
  4886     0719                     	;# 
  4887     071A                     	;# 
  4888     071A                     	;# 
  4889     071B                     	;# 
  4890     071C                     	;# 
  4891     071D                     	;# 
  4892     0791                     	;# 
  4893     0791                     	;# 
  4894     0792                     	;# 
  4895     0793                     	;# 
  4896     0793                     	;# 
  4897     0794                     	;# 
  4898     0795                     	;# 
  4899     0795                     	;# 
  4900     0796                     	;# 
  4901     0797                     	;# 
  4902     0797                     	;# 
  4903     0798                     	;# 
  4904     0799                     	;# 
  4905     079A                     	;# 
  4906     080C                     	;# 
  4907     080C                     	;# 
  4908     080D                     	;# 
  4909     080E                     	;# 
  4910     080E                     	;# 
  4911     080F                     	;# 
  4912     0810                     	;# 
  4913     0810                     	;# 
  4914     0811                     	;# 
  4915     0812                     	;# 
  4916     0812                     	;# 
  4917     0813                     	;# 
  4918     0814                     	;# 
  4919     0815                     	;# 
  4920     0816                     	;# 
  4921     0817                     	;# 
  4922     0818                     	;# 
  4923     0819                     	;# 
  4924     081A                     	;# 
  4925     081A                     	;# 
  4926     081B                     	;# 
  4927     081C                     	;# 
  4928     081C                     	;# 
  4929     081D                     	;# 
  4930     088C                     	;# 
  4931     088D                     	;# 
  4932     088E                     	;# 
  4933     088F                     	;# 
  4934     088F                     	;# 
  4935     0890                     	;# 
  4936     0891                     	;# 
  4937     0892                     	;# 
  4938     0893                     	;# 
  4939     0893                     	;# 
  4940     0894                     	;# 
  4941     0895                     	;# 
  4942     0896                     	;# 
  4943     0897                     	;# 
  4944     0897                     	;# 
  4945     0898                     	;# 
  4946     0899                     	;# 
  4947     0D8C                     	;# 
  4948     0D8C                     	;# 
  4949     0D8D                     	;# 
  4950     0D8E                     	;# 
  4951     0D8F                     	;# 
  4952     0D8F                     	;# 
  4953     0D90                     	;# 
  4954     0D91                     	;# 
  4955     0D92                     	;# 
  4956     0D92                     	;# 
  4957     0D93                     	;# 
  4958     0D94                     	;# 
  4959     0D95                     	;# 
  4960     0D95                     	;# 
  4961     0D96                     	;# 
  4962     0D97                     	;# 
  4963     0D98                     	;# 
  4964     0D99                     	;# 
  4965     0D9A                     	;# 
  4966     0D9B                     	;# 
  4967     0D9C                     	;# 
  4968     0D9D                     	;# 
  4969     0D9E                     	;# 
  4970     0D9E                     	;# 
  4971     0D9F                     	;# 
  4972     0DA0                     	;# 
  4973     0DA1                     	;# 
  4974     0DA1                     	;# 
  4975     0DA2                     	;# 
  4976     0DA3                     	;# 
  4977     0DA4                     	;# 
  4978     0DA4                     	;# 
  4979     0DA5                     	;# 
  4980     0DA6                     	;# 
  4981     0DA7                     	;# 
  4982     0DA7                     	;# 
  4983     0DA8                     	;# 
  4984     0DA9                     	;# 
  4985     0DAA                     	;# 
  4986     0DAB                     	;# 
  4987     0DAC                     	;# 
  4988     0DAD                     	;# 
  4989     0DAE                     	;# 
  4990     0DAF                     	;# 
  4991     0E0F                     	;# 
  4992     0E10                     	;# 
  4993     0E11                     	;# 
  4994     0E12                     	;# 
  4995     0E13                     	;# 
  4996     0E14                     	;# 
  4997     0E15                     	;# 
  4998     0E16                     	;# 
  4999     0E17                     	;# 
  5000     0E17                     	;# 
  5001     0E18                     	;# 
  5002     0E18                     	;# 
  5003     0E19                     	;# 
  5004     0E1A                     	;# 
  5005     0E1B                     	;# 
  5006     0E1B                     	;# 
  5007     0E1C                     	;# 
  5008     0E1D                     	;# 
  5009     0E1E                     	;# 
  5010     0E1E                     	;# 
  5011     0E1F                     	;# 
  5012     0E20                     	;# 
  5013     0E21                     	;# 
  5014     0E22                     	;# 
  5015     0E23                     	;# 
  5016     0E24                     	;# 
  5017     0E25                     	;# 
  5018     0E26                     	;# 
  5019     0E27                     	;# 
  5020     0E28                     	;# 
  5021     0E29                     	;# 
  5022     0E2A                     	;# 
  5023     0E2B                     	;# 
  5024     0E2C                     	;# 
  5025     0E2D                     	;# 
  5026     0E2E                     	;# 
  5027     0E90                     	;# 
  5028     0E91                     	;# 
  5029     0E92                     	;# 
  5030     0E94                     	;# 
  5031     0E95                     	;# 
  5032     0E9C                     	;# 
  5033     0E9D                     	;# 
  5034     0E9E                     	;# 
  5035     0E9F                     	;# 
  5036     0EA0                     	;# 
  5037     0EA1                     	;# 
  5038     0EA2                     	;# 
  5039     0EA3                     	;# 
  5040     0EA4                     	;# 
  5041     0EA5                     	;# 
  5042     0EA6                     	;# 
  5043     0EA7                     	;# 
  5044     0F0F                     	;# 
  5045     0F10                     	;# 
  5046     0F11                     	;# 
  5047     0F12                     	;# 
  5048     0F13                     	;# 
  5049     0F14                     	;# 
  5050     0F15                     	;# 
  5051     0F16                     	;# 
  5052     0F17                     	;# 
  5053     0F18                     	;# 
  5054     0F19                     	;# 
  5055     0F1A                     	;# 
  5056     0F1B                     	;# 
  5057     0F1C                     	;# 
  5058     0F1D                     	;# 
  5059     0F1E                     	;# 
  5060     0F1F                     	;# 
  5061     0F20                     	;# 
  5062     0F21                     	;# 
  5063     0F22                     	;# 
  5064     0F23                     	;# 
  5065     0F24                     	;# 
  5066     0F25                     	;# 
  5067     0F26                     	;# 
  5068     0F27                     	;# 
  5069     0F28                     	;# 
  5070     0F29                     	;# 
  5071     0F2A                     	;# 
  5072     0F2B                     	;# 
  5073     0F2C                     	;# 
  5074     0F2D                     	;# 
  5075     0F2E                     	;# 
  5076     0F2F                     	;# 
  5077     0F30                     	;# 
  5078     0F31                     	;# 
  5079     0F32                     	;# 
  5080     0F33                     	;# 
  5081     0F34                     	;# 
  5082     0F35                     	;# 
  5083     0F36                     	;# 
  5084     0F37                     	;# 
  5085     0FE4                     	;# 
  5086     0FE5                     	;# 
  5087     0FE6                     	;# 
  5088     0FE7                     	;# 
  5089     0FE8                     	;# 
  5090     0FE9                     	;# 
  5091     0FEA                     	;# 
  5092     0FEB                     	;# 
  5093     0FED                     	;# 
  5094     0FEE                     	;# 
  5095     0FEF                     	;# 
  5096     0000                     	;# 
  5097     0001                     	;# 
  5098     0002                     	;# 
  5099     0003                     	;# 
  5100     0004                     	;# 
  5101     0005                     	;# 
  5102     0006                     	;# 
  5103     0007                     	;# 
  5104     0008                     	;# 
  5105     0009                     	;# 
  5106     000A                     	;# 
  5107     000B                     	;# 
  5108     000C                     	;# 
  5109     000D                     	;# 
  5110     000E                     	;# 
  5111     0010                     	;# 
  5112     0011                     	;# 
  5113     0012                     	;# 
  5114     0013                     	;# 
  5115     0014                     	;# 
  5116     0015                     	;# 
  5117     0016                     	;# 
  5118     0016                     	;# 
  5119     0017                     	;# 
  5120     0018                     	;# 
  5121     0019                     	;# 
  5122     001A                     	;# 
  5123     001A                     	;# 
  5124     001B                     	;# 
  5125     001B                     	;# 
  5126     001C                     	;# 
  5127     001D                     	;# 
  5128     001E                     	;# 
  5129     001F                     	;# 
  5130     008C                     	;# 
  5131     008D                     	;# 
  5132     008E                     	;# 
  5133     0090                     	;# 
  5134     0091                     	;# 
  5135     0092                     	;# 
  5136     0093                     	;# 
  5137     0094                     	;# 
  5138     0095                     	;# 
  5139     0096                     	;# 
  5140     0098                     	;# 
  5141     0099                     	;# 
  5142     009A                     	;# 
  5143     009B                     	;# 
  5144     009B                     	;# 
  5145     009C                     	;# 
  5146     009D                     	;# 
  5147     009E                     	;# 
  5148     009F                     	;# 
  5149     010C                     	;# 
  5150     010D                     	;# 
  5151     010E                     	;# 
  5152     0111                     	;# 
  5153     0112                     	;# 
  5154     0113                     	;# 
  5155     0114                     	;# 
  5156     0115                     	;# 
  5157     0116                     	;# 
  5158     0117                     	;# 
  5159     0118                     	;# 
  5160     0119                     	;# 
  5161     011C                     	;# 
  5162     018C                     	;# 
  5163     018D                     	;# 
  5164     018E                     	;# 
  5165     0191                     	;# 
  5166     0191                     	;# 
  5167     0192                     	;# 
  5168     0193                     	;# 
  5169     0193                     	;# 
  5170     0194                     	;# 
  5171     0195                     	;# 
  5172     0196                     	;# 
  5173     0197                     	;# 
  5174     0199                     	;# 
  5175     0199                     	;# 
  5176     0199                     	;# 
  5177     019A                     	;# 
  5178     019A                     	;# 
  5179     019A                     	;# 
  5180     019B                     	;# 
  5181     019B                     	;# 
  5182     019B                     	;# 
  5183     019B                     	;# 
  5184     019B                     	;# 
  5185     019C                     	;# 
  5186     019C                     	;# 
  5187     019C                     	;# 
  5188     019D                     	;# 
  5189     019D                     	;# 
  5190     019D                     	;# 
  5191     019E                     	;# 
  5192     019E                     	;# 
  5193     019E                     	;# 
  5194     019F                     	;# 
  5195     019F                     	;# 
  5196     019F                     	;# 
  5197     019F                     	;# 
  5198     019F                     	;# 
  5199     020C                     	;# 
  5200     020D                     	;# 
  5201     020E                     	;# 
  5202     0211                     	;# 
  5203     0211                     	;# 
  5204     0212                     	;# 
  5205     0212                     	;# 
  5206     0213                     	;# 
  5207     0213                     	;# 
  5208     0214                     	;# 
  5209     0214                     	;# 
  5210     0215                     	;# 
  5211     0215                     	;# 
  5212     0215                     	;# 
  5213     0215                     	;# 
  5214     0216                     	;# 
  5215     0216                     	;# 
  5216     0217                     	;# 
  5217     0217                     	;# 
  5218     028C                     	;# 
  5219     028D                     	;# 
  5220     028E                     	;# 
  5221     0291                     	;# 
  5222     0291                     	;# 
  5223     0292                     	;# 
  5224     0293                     	;# 
  5225     0294                     	;# 
  5226     0298                     	;# 
  5227     0298                     	;# 
  5228     0299                     	;# 
  5229     029A                     	;# 
  5230     029B                     	;# 
  5231     029E                     	;# 
  5232     030C                     	;# 
  5233     030D                     	;# 
  5234     030E                     	;# 
  5235     038C                     	;# 
  5236     038D                     	;# 
  5237     038E                     	;# 
  5238     0391                     	;# 
  5239     0392                     	;# 
  5240     0393                     	;# 
  5241     0394                     	;# 
  5242     0395                     	;# 
  5243     0396                     	;# 
  5244     0397                     	;# 
  5245     0398                     	;# 
  5246     0399                     	;# 
  5247     040E                     	;# 
  5248     0413                     	;# 
  5249     0413                     	;# 
  5250     0414                     	;# 
  5251     0414                     	;# 
  5252     0415                     	;# 
  5253     0416                     	;# 
  5254     0417                     	;# 
  5255     0418                     	;# 
  5256     041A                     	;# 
  5257     041A                     	;# 
  5258     041B                     	;# 
  5259     041B                     	;# 
  5260     041C                     	;# 
  5261     041D                     	;# 
  5262     041E                     	;# 
  5263     041F                     	;# 
  5264     0493                     	;# 
  5265     0494                     	;# 
  5266     0495                     	;# 
  5267     0496                     	;# 
  5268     049A                     	;# 
  5269     049B                     	;# 
  5270     049C                     	;# 
  5271     049D                     	;# 
  5272     058C                     	;# 
  5273     058C                     	;# 
  5274     058D                     	;# 
  5275     058E                     	;# 
  5276     058E                     	;# 
  5277     058F                     	;# 
  5278     0590                     	;# 
  5279     0590                     	;# 
  5280     0591                     	;# 
  5281     0592                     	;# 
  5282     0592                     	;# 
  5283     0593                     	;# 
  5284     0594                     	;# 
  5285     0594                     	;# 
  5286     0595                     	;# 
  5287     0596                     	;# 
  5288     0596                     	;# 
  5289     0597                     	;# 
  5290     0598                     	;# 
  5291     0599                     	;# 
  5292     059A                     	;# 
  5293     059B                     	;# 
  5294     059B                     	;# 
  5295     059C                     	;# 
  5296     059D                     	;# 
  5297     060C                     	;# 
  5298     060C                     	;# 
  5299     060D                     	;# 
  5300     060E                     	;# 
  5301     060F                     	;# 
  5302     060F                     	;# 
  5303     0610                     	;# 
  5304     0611                     	;# 
  5305     0612                     	;# 
  5306     0613                     	;# 
  5307     0614                     	;# 
  5308     0617                     	;# 
  5309     0617                     	;# 
  5310     0618                     	;# 
  5311     0619                     	;# 
  5312     061A                     	;# 
  5313     061A                     	;# 
  5314     061B                     	;# 
  5315     061C                     	;# 
  5316     0691                     	;# 
  5317     0692                     	;# 
  5318     0693                     	;# 
  5319     0694                     	;# 
  5320     0695                     	;# 
  5321     0696                     	;# 
  5322     0697                     	;# 
  5323     0699                     	;# 
  5324     069A                     	;# 
  5325     0711                     	;# 
  5326     0712                     	;# 
  5327     0713                     	;# 
  5328     0714                     	;# 
  5329     0715                     	;# 
  5330     0718                     	;# 
  5331     0718                     	;# 
  5332     0719                     	;# 
  5333     071A                     	;# 
  5334     071A                     	;# 
  5335     071B                     	;# 
  5336     071C                     	;# 
  5337     071D                     	;# 
  5338     0791                     	;# 
  5339     0791                     	;# 
  5340     0792                     	;# 
  5341     0793                     	;# 
  5342     0793                     	;# 
  5343     0794                     	;# 
  5344     0795                     	;# 
  5345     0795                     	;# 
  5346     0796                     	;# 
  5347     0797                     	;# 
  5348     0797                     	;# 
  5349     0798                     	;# 
  5350     0799                     	;# 
  5351     079A                     	;# 
  5352     080C                     	;# 
  5353     080C                     	;# 
  5354     080D                     	;# 
  5355     080E                     	;# 
  5356     080E                     	;# 
  5357     080F                     	;# 
  5358     0810                     	;# 
  5359     0810                     	;# 
  5360     0811                     	;# 
  5361     0812                     	;# 
  5362     0812                     	;# 
  5363     0813                     	;# 
  5364     0814                     	;# 
  5365     0815                     	;# 
  5366     0816                     	;# 
  5367     0817                     	;# 
  5368     0818                     	;# 
  5369     0819                     	;# 
  5370     081A                     	;# 
  5371     081A                     	;# 
  5372     081B                     	;# 
  5373     081C                     	;# 
  5374     081C                     	;# 
  5375     081D                     	;# 
  5376     088C                     	;# 
  5377     088D                     	;# 
  5378     088E                     	;# 
  5379     088F                     	;# 
  5380     088F                     	;# 
  5381     0890                     	;# 
  5382     0891                     	;# 
  5383     0892                     	;# 
  5384     0893                     	;# 
  5385     0893                     	;# 
  5386     0894                     	;# 
  5387     0895                     	;# 
  5388     0896                     	;# 
  5389     0897                     	;# 
  5390     0897                     	;# 
  5391     0898                     	;# 
  5392     0899                     	;# 
  5393     0D8C                     	;# 
  5394     0D8C                     	;# 
  5395     0D8D                     	;# 
  5396     0D8E                     	;# 
  5397     0D8F                     	;# 
  5398     0D8F                     	;# 
  5399     0D90                     	;# 
  5400     0D91                     	;# 
  5401     0D92                     	;# 
  5402     0D92                     	;# 
  5403     0D93                     	;# 
  5404     0D94                     	;# 
  5405     0D95                     	;# 
  5406     0D95                     	;# 
  5407     0D96                     	;# 
  5408     0D97                     	;# 
  5409     0D98                     	;# 
  5410     0D99                     	;# 
  5411     0D9A                     	;# 
  5412     0D9B                     	;# 
  5413     0D9C                     	;# 
  5414     0D9D                     	;# 
  5415     0D9E                     	;# 
  5416     0D9E                     	;# 
  5417     0D9F                     	;# 
  5418     0DA0                     	;# 
  5419     0DA1                     	;# 
  5420     0DA1                     	;# 
  5421     0DA2                     	;# 
  5422     0DA3                     	;# 
  5423     0DA4                     	;# 
  5424     0DA4                     	;# 
  5425     0DA5                     	;# 
  5426     0DA6                     	;# 
  5427     0DA7                     	;# 
  5428     0DA7                     	;# 
  5429     0DA8                     	;# 
  5430     0DA9                     	;# 
  5431     0DAA                     	;# 
  5432     0DAB                     	;# 
  5433     0DAC                     	;# 
  5434     0DAD                     	;# 
  5435     0DAE                     	;# 
  5436     0DAF                     	;# 
  5437     0E0F                     	;# 
  5438     0E10                     	;# 
  5439     0E11                     	;# 
  5440     0E12                     	;# 
  5441     0E13                     	;# 
  5442     0E14                     	;# 
  5443     0E15                     	;# 
  5444     0E16                     	;# 
  5445     0E17                     	;# 
  5446     0E17                     	;# 
  5447     0E18                     	;# 
  5448     0E18                     	;# 
  5449     0E19                     	;# 
  5450     0E1A                     	;# 
  5451     0E1B                     	;# 
  5452     0E1B                     	;# 
  5453     0E1C                     	;# 
  5454     0E1D                     	;# 
  5455     0E1E                     	;# 
  5456     0E1E                     	;# 
  5457     0E1F                     	;# 
  5458     0E20                     	;# 
  5459     0E21                     	;# 
  5460     0E22                     	;# 
  5461     0E23                     	;# 
  5462     0E24                     	;# 
  5463     0E25                     	;# 
  5464     0E26                     	;# 
  5465     0E27                     	;# 
  5466     0E28                     	;# 
  5467     0E29                     	;# 
  5468     0E2A                     	;# 
  5469     0E2B                     	;# 
  5470     0E2C                     	;# 
  5471     0E2D                     	;# 
  5472     0E2E                     	;# 
  5473     0E90                     	;# 
  5474     0E91                     	;# 
  5475     0E92                     	;# 
  5476     0E94                     	;# 
  5477     0E95                     	;# 
  5478     0E9C                     	;# 
  5479     0E9D                     	;# 
  5480     0E9E                     	;# 
  5481     0E9F                     	;# 
  5482     0EA0                     	;# 
  5483     0EA1                     	;# 
  5484     0EA2                     	;# 
  5485     0EA3                     	;# 
  5486     0EA4                     	;# 
  5487     0EA5                     	;# 
  5488     0EA6                     	;# 
  5489     0EA7                     	;# 
  5490     0F0F                     	;# 
  5491     0F10                     	;# 
  5492     0F11                     	;# 
  5493     0F12                     	;# 
  5494     0F13                     	;# 
  5495     0F14                     	;# 
  5496     0F15                     	;# 
  5497     0F16                     	;# 
  5498     0F17                     	;# 
  5499     0F18                     	;# 
  5500     0F19                     	;# 
  5501     0F1A                     	;# 
  5502     0F1B                     	;# 
  5503     0F1C                     	;# 
  5504     0F1D                     	;# 
  5505     0F1E                     	;# 
  5506     0F1F                     	;# 
  5507     0F20                     	;# 
  5508     0F21                     	;# 
  5509     0F22                     	;# 
  5510     0F23                     	;# 
  5511     0F24                     	;# 
  5512     0F25                     	;# 
  5513     0F26                     	;# 
  5514     0F27                     	;# 
  5515     0F28                     	;# 
  5516     0F29                     	;# 
  5517     0F2A                     	;# 
  5518     0F2B                     	;# 
  5519     0F2C                     	;# 
  5520     0F2D                     	;# 
  5521     0F2E                     	;# 
  5522     0F2F                     	;# 
  5523     0F30                     	;# 
  5524     0F31                     	;# 
  5525     0F32                     	;# 
  5526     0F33                     	;# 
  5527     0F34                     	;# 
  5528     0F35                     	;# 
  5529     0F36                     	;# 
  5530     0F37                     	;# 
  5531     0FE4                     	;# 
  5532     0FE5                     	;# 
  5533     0FE6                     	;# 
  5534     0FE7                     	;# 
  5535     0FE8                     	;# 
  5536     0FE9                     	;# 
  5537     0FEA                     	;# 
  5538     0FEB                     	;# 
  5539     0FED                     	;# 
  5540     0FEE                     	;# 
  5541     0FEF                     	;# 
  5542     0000                     	;# 
  5543     0001                     	;# 
  5544     0002                     	;# 
  5545     0003                     	;# 
  5546     0004                     	;# 
  5547     0005                     	;# 
  5548     0006                     	;# 
  5549     0007                     	;# 
  5550     0008                     	;# 
  5551     0009                     	;# 
  5552     000A                     	;# 
  5553     000B                     	;# 
  5554     000C                     	;# 
  5555     000D                     	;# 
  5556     000E                     	;# 
  5557     0010                     	;# 
  5558     0011                     	;# 
  5559     0012                     	;# 
  5560     0013                     	;# 
  5561     0014                     	;# 
  5562     0015                     	;# 
  5563     0016                     	;# 
  5564     0016                     	;# 
  5565     0017                     	;# 
  5566     0018                     	;# 
  5567     0019                     	;# 
  5568     001A                     	;# 
  5569     001A                     	;# 
  5570     001B                     	;# 
  5571     001B                     	;# 
  5572     001C                     	;# 
  5573     001D                     	;# 
  5574     001E                     	;# 
  5575     001F                     	;# 
  5576     008C                     	;# 
  5577     008D                     	;# 
  5578     008E                     	;# 
  5579     0090                     	;# 
  5580     0091                     	;# 
  5581     0092                     	;# 
  5582     0093                     	;# 
  5583     0094                     	;# 
  5584     0095                     	;# 
  5585     0096                     	;# 
  5586     0098                     	;# 
  5587     0099                     	;# 
  5588     009A                     	;# 
  5589     009B                     	;# 
  5590     009B                     	;# 
  5591     009C                     	;# 
  5592     009D                     	;# 
  5593     009E                     	;# 
  5594     009F                     	;# 
  5595     010C                     	;# 
  5596     010D                     	;# 
  5597     010E                     	;# 
  5598     0111                     	;# 
  5599     0112                     	;# 
  5600     0113                     	;# 
  5601     0114                     	;# 
  5602     0115                     	;# 
  5603     0116                     	;# 
  5604     0117                     	;# 
  5605     0118                     	;# 
  5606     0119                     	;# 
  5607     011C                     	;# 
  5608     018C                     	;# 
  5609     018D                     	;# 
  5610     018E                     	;# 
  5611     0191                     	;# 
  5612     0191                     	;# 
  5613     0192                     	;# 
  5614     0193                     	;# 
  5615     0193                     	;# 
  5616     0194                     	;# 
  5617     0195                     	;# 
  5618     0196                     	;# 
  5619     0197                     	;# 
  5620     0199                     	;# 
  5621     0199                     	;# 
  5622     0199                     	;# 
  5623     019A                     	;# 
  5624     019A                     	;# 
  5625     019A                     	;# 
  5626     019B                     	;# 
  5627     019B                     	;# 
  5628     019B                     	;# 
  5629     019B                     	;# 
  5630     019B                     	;# 
  5631     019C                     	;# 
  5632     019C                     	;# 
  5633     019C                     	;# 
  5634     019D                     	;# 
  5635     019D                     	;# 
  5636     019D                     	;# 
  5637     019E                     	;# 
  5638     019E                     	;# 
  5639     019E                     	;# 
  5640     019F                     	;# 
  5641     019F                     	;# 
  5642     019F                     	;# 
  5643     019F                     	;# 
  5644     019F                     	;# 
  5645     020C                     	;# 
  5646     020D                     	;# 
  5647     020E                     	;# 
  5648     0211                     	;# 
  5649     0211                     	;# 
  5650     0212                     	;# 
  5651     0212                     	;# 
  5652     0213                     	;# 
  5653     0213                     	;# 
  5654     0214                     	;# 
  5655     0214                     	;# 
  5656     0215                     	;# 
  5657     0215                     	;# 
  5658     0215                     	;# 
  5659     0215                     	;# 
  5660     0216                     	;# 
  5661     0216                     	;# 
  5662     0217                     	;# 
  5663     0217                     	;# 
  5664     028C                     	;# 
  5665     028D                     	;# 
  5666     028E                     	;# 
  5667     0291                     	;# 
  5668     0291                     	;# 
  5669     0292                     	;# 
  5670     0293                     	;# 
  5671     0294                     	;# 
  5672     0298                     	;# 
  5673     0298                     	;# 
  5674     0299                     	;# 
  5675     029A                     	;# 
  5676     029B                     	;# 
  5677     029E                     	;# 
  5678     030C                     	;# 
  5679     030D                     	;# 
  5680     030E                     	;# 
  5681     038C                     	;# 
  5682     038D                     	;# 
  5683     038E                     	;# 
  5684     0391                     	;# 
  5685     0392                     	;# 
  5686     0393                     	;# 
  5687     0394                     	;# 
  5688     0395                     	;# 
  5689     0396                     	;# 
  5690     0397                     	;# 
  5691     0398                     	;# 
  5692     0399                     	;# 
  5693     040E                     	;# 
  5694     0413                     	;# 
  5695     0413                     	;# 
  5696     0414                     	;# 
  5697     0414                     	;# 
  5698     0415                     	;# 
  5699     0416                     	;# 
  5700     0417                     	;# 
  5701     0418                     	;# 
  5702     041A                     	;# 
  5703     041A                     	;# 
  5704     041B                     	;# 
  5705     041B                     	;# 
  5706     041C                     	;# 
  5707     041D                     	;# 
  5708     041E                     	;# 
  5709     041F                     	;# 
  5710     0493                     	;# 
  5711     0494                     	;# 
  5712     0495                     	;# 
  5713     0496                     	;# 
  5714     049A                     	;# 
  5715     049B                     	;# 
  5716     049C                     	;# 
  5717     049D                     	;# 
  5718     058C                     	;# 
  5719     058C                     	;# 
  5720     058D                     	;# 
  5721     058E                     	;# 
  5722     058E                     	;# 
  5723     058F                     	;# 
  5724     0590                     	;# 
  5725     0590                     	;# 
  5726     0591                     	;# 
  5727     0592                     	;# 
  5728     0592                     	;# 
  5729     0593                     	;# 
  5730     0594                     	;# 
  5731     0594                     	;# 
  5732     0595                     	;# 
  5733     0596                     	;# 
  5734     0596                     	;# 
  5735     0597                     	;# 
  5736     0598                     	;# 
  5737     0599                     	;# 
  5738     059A                     	;# 
  5739     059B                     	;# 
  5740     059B                     	;# 
  5741     059C                     	;# 
  5742     059D                     	;# 
  5743     060C                     	;# 
  5744     060C                     	;# 
  5745     060D                     	;# 
  5746     060E                     	;# 
  5747     060F                     	;# 
  5748     060F                     	;# 
  5749     0610                     	;# 
  5750     0611                     	;# 
  5751     0612                     	;# 
  5752     0613                     	;# 
  5753     0614                     	;# 
  5754     0617                     	;# 
  5755     0617                     	;# 
  5756     0618                     	;# 
  5757     0619                     	;# 
  5758     061A                     	;# 
  5759     061A                     	;# 
  5760     061B                     	;# 
  5761     061C                     	;# 
  5762     0691                     	;# 
  5763     0692                     	;# 
  5764     0693                     	;# 
  5765     0694                     	;# 
  5766     0695                     	;# 
  5767     0696                     	;# 
  5768     0697                     	;# 
  5769     0699                     	;# 
  5770     069A                     	;# 
  5771     0711                     	;# 
  5772     0712                     	;# 
  5773     0713                     	;# 
  5774     0714                     	;# 
  5775     0715                     	;# 
  5776     0718                     	;# 
  5777     0718                     	;# 
  5778     0719                     	;# 
  5779     071A                     	;# 
  5780     071A                     	;# 
  5781     071B                     	;# 
  5782     071C                     	;# 
  5783     071D                     	;# 
  5784     0791                     	;# 
  5785     0791                     	;# 
  5786     0792                     	;# 
  5787     0793                     	;# 
  5788     0793                     	;# 
  5789     0794                     	;# 
  5790     0795                     	;# 
  5791     0795                     	;# 
  5792     0796                     	;# 
  5793     0797                     	;# 
  5794     0797                     	;# 
  5795     0798                     	;# 
  5796     0799                     	;# 
  5797     079A                     	;# 
  5798     080C                     	;# 
  5799     080C                     	;# 
  5800     080D                     	;# 
  5801     080E                     	;# 
  5802     080E                     	;# 
  5803     080F                     	;# 
  5804     0810                     	;# 
  5805     0810                     	;# 
  5806     0811                     	;# 
  5807     0812                     	;# 
  5808     0812                     	;# 
  5809     0813                     	;# 
  5810     0814                     	;# 
  5811     0815                     	;# 
  5812     0816                     	;# 
  5813     0817                     	;# 
  5814     0818                     	;# 
  5815     0819                     	;# 
  5816     081A                     	;# 
  5817     081A                     	;# 
  5818     081B                     	;# 
  5819     081C                     	;# 
  5820     081C                     	;# 
  5821     081D                     	;# 
  5822     088C                     	;# 
  5823     088D                     	;# 
  5824     088E                     	;# 
  5825     088F                     	;# 
  5826     088F                     	;# 
  5827     0890                     	;# 
  5828     0891                     	;# 
  5829     0892                     	;# 
  5830     0893                     	;# 
  5831     0893                     	;# 
  5832     0894                     	;# 
  5833     0895                     	;# 
  5834     0896                     	;# 
  5835     0897                     	;# 
  5836     0897                     	;# 
  5837     0898                     	;# 
  5838     0899                     	;# 
  5839     0D8C                     	;# 
  5840     0D8C                     	;# 
  5841     0D8D                     	;# 
  5842     0D8E                     	;# 
  5843     0D8F                     	;# 
  5844     0D8F                     	;# 
  5845     0D90                     	;# 
  5846     0D91                     	;# 
  5847     0D92                     	;# 
  5848     0D92                     	;# 
  5849     0D93                     	;# 
  5850     0D94                     	;# 
  5851     0D95                     	;# 
  5852     0D95                     	;# 
  5853     0D96                     	;# 
  5854     0D97                     	;# 
  5855     0D98                     	;# 
  5856     0D99                     	;# 
  5857     0D9A                     	;# 
  5858     0D9B                     	;# 
  5859     0D9C                     	;# 
  5860     0D9D                     	;# 
  5861     0D9E                     	;# 
  5862     0D9E                     	;# 
  5863     0D9F                     	;# 
  5864     0DA0                     	;# 
  5865     0DA1                     	;# 
  5866     0DA1                     	;# 
  5867     0DA2                     	;# 
  5868     0DA3                     	;# 
  5869     0DA4                     	;# 
  5870     0DA4                     	;# 
  5871     0DA5                     	;# 
  5872     0DA6                     	;# 
  5873     0DA7                     	;# 
  5874     0DA7                     	;# 
  5875     0DA8                     	;# 
  5876     0DA9                     	;# 
  5877     0DAA                     	;# 
  5878     0DAB                     	;# 
  5879     0DAC                     	;# 
  5880     0DAD                     	;# 
  5881     0DAE                     	;# 
  5882     0DAF                     	;# 
  5883     0E0F                     	;# 
  5884     0E10                     	;# 
  5885     0E11                     	;# 
  5886     0E12                     	;# 
  5887     0E13                     	;# 
  5888     0E14                     	;# 
  5889     0E15                     	;# 
  5890     0E16                     	;# 
  5891     0E17                     	;# 
  5892     0E17                     	;# 
  5893     0E18                     	;# 
  5894     0E18                     	;# 
  5895     0E19                     	;# 
  5896     0E1A                     	;# 
  5897     0E1B                     	;# 
  5898     0E1B                     	;# 
  5899     0E1C                     	;# 
  5900     0E1D                     	;# 
  5901     0E1E                     	;# 
  5902     0E1E                     	;# 
  5903     0E1F                     	;# 
  5904     0E20                     	;# 
  5905     0E21                     	;# 
  5906     0E22                     	;# 
  5907     0E23                     	;# 
  5908     0E24                     	;# 
  5909     0E25                     	;# 
  5910     0E26                     	;# 
  5911     0E27                     	;# 
  5912     0E28                     	;# 
  5913     0E29                     	;# 
  5914     0E2A                     	;# 
  5915     0E2B                     	;# 
  5916     0E2C                     	;# 
  5917     0E2D                     	;# 
  5918     0E2E                     	;# 
  5919     0E90                     	;# 
  5920     0E91                     	;# 
  5921     0E92                     	;# 
  5922     0E94                     	;# 
  5923     0E95                     	;# 
  5924     0E9C                     	;# 
  5925     0E9D                     	;# 
  5926     0E9E                     	;# 
  5927     0E9F                     	;# 
  5928     0EA0                     	;# 
  5929     0EA1                     	;# 
  5930     0EA2                     	;# 
  5931     0EA3                     	;# 
  5932     0EA4                     	;# 
  5933     0EA5                     	;# 
  5934     0EA6                     	;# 
  5935     0EA7                     	;# 
  5936     0F0F                     	;# 
  5937     0F10                     	;# 
  5938     0F11                     	;# 
  5939     0F12                     	;# 
  5940     0F13                     	;# 
  5941     0F14                     	;# 
  5942     0F15                     	;# 
  5943     0F16                     	;# 
  5944     0F17                     	;# 
  5945     0F18                     	;# 
  5946     0F19                     	;# 
  5947     0F1A                     	;# 
  5948     0F1B                     	;# 
  5949     0F1C                     	;# 
  5950     0F1D                     	;# 
  5951     0F1E                     	;# 
  5952     0F1F                     	;# 
  5953     0F20                     	;# 
  5954     0F21                     	;# 
  5955     0F22                     	;# 
  5956     0F23                     	;# 
  5957     0F24                     	;# 
  5958     0F25                     	;# 
  5959     0F26                     	;# 
  5960     0F27                     	;# 
  5961     0F28                     	;# 
  5962     0F29                     	;# 
  5963     0F2A                     	;# 
  5964     0F2B                     	;# 
  5965     0F2C                     	;# 
  5966     0F2D                     	;# 
  5967     0F2E                     	;# 
  5968     0F2F                     	;# 
  5969     0F30                     	;# 
  5970     0F31                     	;# 
  5971     0F32                     	;# 
  5972     0F33                     	;# 
  5973     0F34                     	;# 
  5974     0F35                     	;# 
  5975     0F36                     	;# 
  5976     0F37                     	;# 
  5977     0FE4                     	;# 
  5978     0FE5                     	;# 
  5979     0FE6                     	;# 
  5980     0FE7                     	;# 
  5981     0FE8                     	;# 
  5982     0FE9                     	;# 
  5983     0FEA                     	;# 
  5984     0FEB                     	;# 
  5985     0FED                     	;# 
  5986     0FEE                     	;# 
  5987     0FEF                     	;# 
  5988     0000                     	;# 
  5989     0001                     	;# 
  5990     0002                     	;# 
  5991     0003                     	;# 
  5992     0004                     	;# 
  5993     0005                     	;# 
  5994     0006                     	;# 
  5995     0007                     	;# 
  5996     0008                     	;# 
  5997     0009                     	;# 
  5998     000A                     	;# 
  5999     000B                     	;# 
  6000     000C                     	;# 
  6001     000D                     	;# 
  6002     000E                     	;# 
  6003     0010                     	;# 
  6004     0011                     	;# 
  6005     0012                     	;# 
  6006     0013                     	;# 
  6007     0014                     	;# 
  6008     0015                     	;# 
  6009     0016                     	;# 
  6010     0016                     	;# 
  6011     0017                     	;# 
  6012     0018                     	;# 
  6013     0019                     	;# 
  6014     001A                     	;# 
  6015     001A                     	;# 
  6016     001B                     	;# 
  6017     001B                     	;# 
  6018     001C                     	;# 
  6019     001D                     	;# 
  6020     001E                     	;# 
  6021     001F                     	;# 
  6022     008C                     	;# 
  6023     008D                     	;# 
  6024     008E                     	;# 
  6025     0090                     	;# 
  6026     0091                     	;# 
  6027     0092                     	;# 
  6028     0093                     	;# 
  6029     0094                     	;# 
  6030     0095                     	;# 
  6031     0096                     	;# 
  6032     0098                     	;# 
  6033     0099                     	;# 
  6034     009A                     	;# 
  6035     009B                     	;# 
  6036     009B                     	;# 
  6037     009C                     	;# 
  6038     009D                     	;# 
  6039     009E                     	;# 
  6040     009F                     	;# 
  6041     010C                     	;# 
  6042     010D                     	;# 
  6043     010E                     	;# 
  6044     0111                     	;# 
  6045     0112                     	;# 
  6046     0113                     	;# 
  6047     0114                     	;# 
  6048     0115                     	;# 
  6049     0116                     	;# 
  6050     0117                     	;# 
  6051     0118                     	;# 
  6052     0119                     	;# 
  6053     011C                     	;# 
  6054     018C                     	;# 
  6055     018D                     	;# 
  6056     018E                     	;# 
  6057     0191                     	;# 
  6058     0191                     	;# 
  6059     0192                     	;# 
  6060     0193                     	;# 
  6061     0193                     	;# 
  6062     0194                     	;# 
  6063     0195                     	;# 
  6064     0196                     	;# 
  6065     0197                     	;# 
  6066     0199                     	;# 
  6067     0199                     	;# 
  6068     0199                     	;# 
  6069     019A                     	;# 
  6070     019A                     	;# 
  6071     019A                     	;# 
  6072     019B                     	;# 
  6073     019B                     	;# 
  6074     019B                     	;# 
  6075     019B                     	;# 
  6076     019B                     	;# 
  6077     019C                     	;# 
  6078     019C                     	;# 
  6079     019C                     	;# 
  6080     019D                     	;# 
  6081     019D                     	;# 
  6082     019D                     	;# 
  6083     019E                     	;# 
  6084     019E                     	;# 
  6085     019E                     	;# 
  6086     019F                     	;# 
  6087     019F                     	;# 
  6088     019F                     	;# 
  6089     019F                     	;# 
  6090     019F                     	;# 
  6091     020C                     	;# 
  6092     020D                     	;# 
  6093     020E                     	;# 
  6094     0211                     	;# 
  6095     0211                     	;# 
  6096     0212                     	;# 
  6097     0212                     	;# 
  6098     0213                     	;# 
  6099     0213                     	;# 
  6100     0214                     	;# 
  6101     0214                     	;# 
  6102     0215                     	;# 
  6103     0215                     	;# 
  6104     0215                     	;# 
  6105     0215                     	;# 
  6106     0216                     	;# 
  6107     0216                     	;# 
  6108     0217                     	;# 
  6109     0217                     	;# 
  6110     028C                     	;# 
  6111     028D                     	;# 
  6112     028E                     	;# 
  6113     0291                     	;# 
  6114     0291                     	;# 
  6115     0292                     	;# 
  6116     0293                     	;# 
  6117     0294                     	;# 
  6118     0298                     	;# 
  6119     0298                     	;# 
  6120     0299                     	;# 
  6121     029A                     	;# 
  6122     029B                     	;# 
  6123     029E                     	;# 
  6124     030C                     	;# 
  6125     030D                     	;# 
  6126     030E                     	;# 
  6127     038C                     	;# 
  6128     038D                     	;# 
  6129     038E                     	;# 
  6130     0391                     	;# 
  6131     0392                     	;# 
  6132     0393                     	;# 
  6133     0394                     	;# 
  6134     0395                     	;# 
  6135     0396                     	;# 
  6136     0397                     	;# 
  6137     0398                     	;# 
  6138     0399                     	;# 
  6139     040E                     	;# 
  6140     0413                     	;# 
  6141     0413                     	;# 
  6142     0414                     	;# 
  6143     0414                     	;# 
  6144     0415                     	;# 
  6145     0416                     	;# 
  6146     0417                     	;# 
  6147     0418                     	;# 
  6148     041A                     	;# 
  6149     041A                     	;# 
  6150     041B                     	;# 
  6151     041B                     	;# 
  6152     041C                     	;# 
  6153     041D                     	;# 
  6154     041E                     	;# 
  6155     041F                     	;# 
  6156     0493                     	;# 
  6157     0494                     	;# 
  6158     0495                     	;# 
  6159     0496                     	;# 
  6160     049A                     	;# 
  6161     049B                     	;# 
  6162     049C                     	;# 
  6163     049D                     	;# 
  6164     058C                     	;# 
  6165     058C                     	;# 
  6166     058D                     	;# 
  6167     058E                     	;# 
  6168     058E                     	;# 
  6169     058F                     	;# 
  6170     0590                     	;# 
  6171     0590                     	;# 
  6172     0591                     	;# 
  6173     0592                     	;# 
  6174     0592                     	;# 
  6175     0593                     	;# 
  6176     0594                     	;# 
  6177     0594                     	;# 
  6178     0595                     	;# 
  6179     0596                     	;# 
  6180     0596                     	;# 
  6181     0597                     	;# 
  6182     0598                     	;# 
  6183     0599                     	;# 
  6184     059A                     	;# 
  6185     059B                     	;# 
  6186     059B                     	;# 
  6187     059C                     	;# 
  6188     059D                     	;# 
  6189     060C                     	;# 
  6190     060C                     	;# 
  6191     060D                     	;# 
  6192     060E                     	;# 
  6193     060F                     	;# 
  6194     060F                     	;# 
  6195     0610                     	;# 
  6196     0611                     	;# 
  6197     0612                     	;# 
  6198     0613                     	;# 
  6199     0614                     	;# 
  6200     0617                     	;# 
  6201     0617                     	;# 
  6202     0618                     	;# 
  6203     0619                     	;# 
  6204     061A                     	;# 
  6205     061A                     	;# 
  6206     061B                     	;# 
  6207     061C                     	;# 
  6208     0691                     	;# 
  6209     0692                     	;# 
  6210     0693                     	;# 
  6211     0694                     	;# 
  6212     0695                     	;# 
  6213     0696                     	;# 
  6214     0697                     	;# 
  6215     0699                     	;# 
  6216     069A                     	;# 
  6217     0711                     	;# 
  6218     0712                     	;# 
  6219     0713                     	;# 
  6220     0714                     	;# 
  6221     0715                     	;# 
  6222     0718                     	;# 
  6223     0718                     	;# 
  6224     0719                     	;# 
  6225     071A                     	;# 
  6226     071A                     	;# 
  6227     071B                     	;# 
  6228     071C                     	;# 
  6229     071D                     	;# 
  6230     0791                     	;# 
  6231     0791                     	;# 
  6232     0792                     	;# 
  6233     0793                     	;# 
  6234     0793                     	;# 
  6235     0794                     	;# 
  6236     0795                     	;# 
  6237     0795                     	;# 
  6238     0796                     	;# 
  6239     0797                     	;# 
  6240     0797                     	;# 
  6241     0798                     	;# 
  6242     0799                     	;# 
  6243     079A                     	;# 
  6244     080C                     	;# 
  6245     080C                     	;# 
  6246     080D                     	;# 
  6247     080E                     	;# 
  6248     080E                     	;# 
  6249     080F                     	;# 
  6250     0810                     	;# 
  6251     0810                     	;# 
  6252     0811                     	;# 
  6253     0812                     	;# 
  6254     0812                     	;# 
  6255     0813                     	;# 
  6256     0814                     	;# 
  6257     0815                     	;# 
  6258     0816                     	;# 
  6259     0817                     	;# 
  6260     0818                     	;# 
  6261     0819                     	;# 
  6262     081A                     	;# 
  6263     081A                     	;# 
  6264     081B                     	;# 
  6265     081C                     	;# 
  6266     081C                     	;# 
  6267     081D                     	;# 
  6268     088C                     	;# 
  6269     088D                     	;# 
  6270     088E                     	;# 
  6271     088F                     	;# 
  6272     088F                     	;# 
  6273     0890                     	;# 
  6274     0891                     	;# 
  6275     0892                     	;# 
  6276     0893                     	;# 
  6277     0893                     	;# 
  6278     0894                     	;# 
  6279     0895                     	;# 
  6280     0896                     	;# 
  6281     0897                     	;# 
  6282     0897                     	;# 
  6283     0898                     	;# 
  6284     0899                     	;# 
  6285     0D8C                     	;# 
  6286     0D8C                     	;# 
  6287     0D8D                     	;# 
  6288     0D8E                     	;# 
  6289     0D8F                     	;# 
  6290     0D8F                     	;# 
  6291     0D90                     	;# 
  6292     0D91                     	;# 
  6293     0D92                     	;# 
  6294     0D92                     	;# 
  6295     0D93                     	;# 
  6296     0D94                     	;# 
  6297     0D95                     	;# 
  6298     0D95                     	;# 
  6299     0D96                     	;# 
  6300     0D97                     	;# 
  6301     0D98                     	;# 
  6302     0D99                     	;# 
  6303     0D9A                     	;# 
  6304     0D9B                     	;# 
  6305     0D9C                     	;# 
  6306     0D9D                     	;# 
  6307     0D9E                     	;# 
  6308     0D9E                     	;# 
  6309     0D9F                     	;# 
  6310     0DA0                     	;# 
  6311     0DA1                     	;# 
  6312     0DA1                     	;# 
  6313     0DA2                     	;# 
  6314     0DA3                     	;# 
  6315     0DA4                     	;# 
  6316     0DA4                     	;# 
  6317     0DA5                     	;# 
  6318     0DA6                     	;# 
  6319     0DA7                     	;# 
  6320     0DA7                     	;# 
  6321     0DA8                     	;# 
  6322     0DA9                     	;# 
  6323     0DAA                     	;# 
  6324     0DAB                     	;# 
  6325     0DAC                     	;# 
  6326     0DAD                     	;# 
  6327     0DAE                     	;# 
  6328     0DAF                     	;# 
  6329     0E0F                     	;# 
  6330     0E10                     	;# 
  6331     0E11                     	;# 
  6332     0E12                     	;# 
  6333     0E13                     	;# 
  6334     0E14                     	;# 
  6335     0E15                     	;# 
  6336     0E16                     	;# 
  6337     0E17                     	;# 
  6338     0E17                     	;# 
  6339     0E18                     	;# 
  6340     0E18                     	;# 
  6341     0E19                     	;# 
  6342     0E1A                     	;# 
  6343     0E1B                     	;# 
  6344     0E1B                     	;# 
  6345     0E1C                     	;# 
  6346     0E1D                     	;# 
  6347     0E1E                     	;# 
  6348     0E1E                     	;# 
  6349     0E1F                     	;# 
  6350     0E20                     	;# 
  6351     0E21                     	;# 
  6352     0E22                     	;# 
  6353     0E23                     	;# 
  6354     0E24                     	;# 
  6355     0E25                     	;# 
  6356     0E26                     	;# 
  6357     0E27                     	;# 
  6358     0E28                     	;# 
  6359     0E29                     	;# 
  6360     0E2A                     	;# 
  6361     0E2B                     	;# 
  6362     0E2C                     	;# 
  6363     0E2D                     	;# 
  6364     0E2E                     	;# 
  6365     0E90                     	;# 
  6366     0E91                     	;# 
  6367     0E92                     	;# 
  6368     0E94                     	;# 
  6369     0E95                     	;# 
  6370     0E9C                     	;# 
  6371     0E9D                     	;# 
  6372     0E9E                     	;# 
  6373     0E9F                     	;# 
  6374     0EA0                     	;# 
  6375     0EA1                     	;# 
  6376     0EA2                     	;# 
  6377     0EA3                     	;# 
  6378     0EA4                     	;# 
  6379     0EA5                     	;# 
  6380     0EA6                     	;# 
  6381     0EA7                     	;# 
  6382     0F0F                     	;# 
  6383     0F10                     	;# 
  6384     0F11                     	;# 
  6385     0F12                     	;# 
  6386     0F13                     	;# 
  6387     0F14                     	;# 
  6388     0F15                     	;# 
  6389     0F16                     	;# 
  6390     0F17                     	;# 
  6391     0F18                     	;# 
  6392     0F19                     	;# 
  6393     0F1A                     	;# 
  6394     0F1B                     	;# 
  6395     0F1C                     	;# 
  6396     0F1D                     	;# 
  6397     0F1E                     	;# 
  6398     0F1F                     	;# 
  6399     0F20                     	;# 
  6400     0F21                     	;# 
  6401     0F22                     	;# 
  6402     0F23                     	;# 
  6403     0F24                     	;# 
  6404     0F25                     	;# 
  6405     0F26                     	;# 
  6406     0F27                     	;# 
  6407     0F28                     	;# 
  6408     0F29                     	;# 
  6409     0F2A                     	;# 
  6410     0F2B                     	;# 
  6411     0F2C                     	;# 
  6412     0F2D                     	;# 
  6413     0F2E                     	;# 
  6414     0F2F                     	;# 
  6415     0F30                     	;# 
  6416     0F31                     	;# 
  6417     0F32                     	;# 
  6418     0F33                     	;# 
  6419     0F34                     	;# 
  6420     0F35                     	;# 
  6421     0F36                     	;# 
  6422     0F37                     	;# 
  6423     0FE4                     	;# 
  6424     0FE5                     	;# 
  6425     0FE6                     	;# 
  6426     0FE7                     	;# 
  6427     0FE8                     	;# 
  6428     0FE9                     	;# 
  6429     0FEA                     	;# 
  6430     0FEB                     	;# 
  6431     0FED                     	;# 
  6432     0FEE                     	;# 
  6433     0FEF                     	;# 
  6434     0000                     	;# 
  6435     0001                     	;# 
  6436     0002                     	;# 
  6437     0003                     	;# 
  6438     0004                     	;# 
  6439     0005                     	;# 
  6440     0006                     	;# 
  6441     0007                     	;# 
  6442     0008                     	;# 
  6443     0009                     	;# 
  6444     000A                     	;# 
  6445     000B                     	;# 
  6446     000C                     	;# 
  6447     000D                     	;# 
  6448     000E                     	;# 
  6449     0010                     	;# 
  6450     0011                     	;# 
  6451     0012                     	;# 
  6452     0013                     	;# 
  6453     0014                     	;# 
  6454     0015                     	;# 
  6455     0016                     	;# 
  6456     0016                     	;# 
  6457     0017                     	;# 
  6458     0018                     	;# 
  6459     0019                     	;# 
  6460     001A                     	;# 
  6461     001A                     	;# 
  6462     001B                     	;# 
  6463     001B                     	;# 
  6464     001C                     	;# 
  6465     001D                     	;# 
  6466     001E                     	;# 
  6467     001F                     	;# 
  6468     008C                     	;# 
  6469     008D                     	;# 
  6470     008E                     	;# 
  6471     0090                     	;# 
  6472     0091                     	;# 
  6473     0092                     	;# 
  6474     0093                     	;# 
  6475     0094                     	;# 
  6476     0095                     	;# 
  6477     0096                     	;# 
  6478     0098                     	;# 
  6479     0099                     	;# 
  6480     009A                     	;# 
  6481     009B                     	;# 
  6482     009B                     	;# 
  6483     009C                     	;# 
  6484     009D                     	;# 
  6485     009E                     	;# 
  6486     009F                     	;# 
  6487     010C                     	;# 
  6488     010D                     	;# 
  6489     010E                     	;# 
  6490     0111                     	;# 
  6491     0112                     	;# 
  6492     0113                     	;# 
  6493     0114                     	;# 
  6494     0115                     	;# 
  6495     0116                     	;# 
  6496     0117                     	;# 
  6497     0118                     	;# 
  6498     0119                     	;# 
  6499     011C                     	;# 
  6500     018C                     	;# 
  6501     018D                     	;# 
  6502     018E                     	;# 
  6503     0191                     	;# 
  6504     0191                     	;# 
  6505     0192                     	;# 
  6506     0193                     	;# 
  6507     0193                     	;# 
  6508     0194                     	;# 
  6509     0195                     	;# 
  6510     0196                     	;# 
  6511     0197                     	;# 
  6512     0199                     	;# 
  6513     0199                     	;# 
  6514     0199                     	;# 
  6515     019A                     	;# 
  6516     019A                     	;# 
  6517     019A                     	;# 
  6518     019B                     	;# 
  6519     019B                     	;# 
  6520     019B                     	;# 
  6521     019B                     	;# 
  6522     019B                     	;# 
  6523     019C                     	;# 
  6524     019C                     	;# 
  6525     019C                     	;# 
  6526     019D                     	;# 
  6527     019D                     	;# 
  6528     019D                     	;# 
  6529     019E                     	;# 
  6530     019E                     	;# 
  6531     019E                     	;# 
  6532     019F                     	;# 
  6533     019F                     	;# 
  6534     019F                     	;# 
  6535     019F                     	;# 
  6536     019F                     	;# 
  6537     020C                     	;# 
  6538     020D                     	;# 
  6539     020E                     	;# 
  6540     0211                     	;# 
  6541     0211                     	;# 
  6542     0212                     	;# 
  6543     0212                     	;# 
  6544     0213                     	;# 
  6545     0213                     	;# 
  6546     0214                     	;# 
  6547     0214                     	;# 
  6548     0215                     	;# 
  6549     0215                     	;# 
  6550     0215                     	;# 
  6551     0215                     	;# 
  6552     0216                     	;# 
  6553     0216                     	;# 
  6554     0217                     	;# 
  6555     0217                     	;# 
  6556     028C                     	;# 
  6557     028D                     	;# 
  6558     028E                     	;# 
  6559     0291                     	;# 
  6560     0291                     	;# 
  6561     0292                     	;# 
  6562     0293                     	;# 
  6563     0294                     	;# 
  6564     0298                     	;# 
  6565     0298                     	;# 
  6566     0299                     	;# 
  6567     029A                     	;# 
  6568     029B                     	;# 
  6569     029E                     	;# 
  6570     030C                     	;# 
  6571     030D                     	;# 
  6572     030E                     	;# 
  6573     038C                     	;# 
  6574     038D                     	;# 
  6575     038E                     	;# 
  6576     0391                     	;# 
  6577     0392                     	;# 
  6578     0393                     	;# 
  6579     0394                     	;# 
  6580     0395                     	;# 
  6581     0396                     	;# 
  6582     0397                     	;# 
  6583     0398                     	;# 
  6584     0399                     	;# 
  6585     040E                     	;# 
  6586     0413                     	;# 
  6587     0413                     	;# 
  6588     0414                     	;# 
  6589     0414                     	;# 
  6590     0415                     	;# 
  6591     0416                     	;# 
  6592     0417                     	;# 
  6593     0418                     	;# 
  6594     041A                     	;# 
  6595     041A                     	;# 
  6596     041B                     	;# 
  6597     041B                     	;# 
  6598     041C                     	;# 
  6599     041D                     	;# 
  6600     041E                     	;# 
  6601     041F                     	;# 
  6602     0493                     	;# 
  6603     0494                     	;# 
  6604     0495                     	;# 
  6605     0496                     	;# 
  6606     049A                     	;# 
  6607     049B                     	;# 
  6608     049C                     	;# 
  6609     049D                     	;# 
  6610     058C                     	;# 
  6611     058C                     	;# 
  6612     058D                     	;# 
  6613     058E                     	;# 
  6614     058E                     	;# 
  6615     058F                     	;# 
  6616     0590                     	;# 
  6617     0590                     	;# 
  6618     0591                     	;# 
  6619     0592                     	;# 
  6620     0592                     	;# 
  6621     0593                     	;# 
  6622     0594                     	;# 
  6623     0594                     	;# 
  6624     0595                     	;# 
  6625     0596                     	;# 
  6626     0596                     	;# 
  6627     0597                     	;# 
  6628     0598                     	;# 
  6629     0599                     	;# 
  6630     059A                     	;# 
  6631     059B                     	;# 
  6632     059B                     	;# 
  6633     059C                     	;# 
  6634     059D                     	;# 
  6635     060C                     	;# 
  6636     060C                     	;# 
  6637     060D                     	;# 
  6638     060E                     	;# 
  6639     060F                     	;# 
  6640     060F                     	;# 
  6641     0610                     	;# 
  6642     0611                     	;# 
  6643     0612                     	;# 
  6644     0613                     	;# 
  6645     0614                     	;# 
  6646     0617                     	;# 
  6647     0617                     	;# 
  6648     0618                     	;# 
  6649     0619                     	;# 
  6650     061A                     	;# 
  6651     061A                     	;# 
  6652     061B                     	;# 
  6653     061C                     	;# 
  6654     0691                     	;# 
  6655     0692                     	;# 
  6656     0693                     	;# 
  6657     0694                     	;# 
  6658     0695                     	;# 
  6659     0696                     	;# 
  6660     0697                     	;# 
  6661     0699                     	;# 
  6662     069A                     	;# 
  6663     0711                     	;# 
  6664     0712                     	;# 
  6665     0713                     	;# 
  6666     0714                     	;# 
  6667     0715                     	;# 
  6668     0718                     	;# 
  6669     0718                     	;# 
  6670     0719                     	;# 
  6671     071A                     	;# 
  6672     071A                     	;# 
  6673     071B                     	;# 
  6674     071C                     	;# 
  6675     071D                     	;# 
  6676     0791                     	;# 
  6677     0791                     	;# 
  6678     0792                     	;# 
  6679     0793                     	;# 
  6680     0793                     	;# 
  6681     0794                     	;# 
  6682     0795                     	;# 
  6683     0795                     	;# 
  6684     0796                     	;# 
  6685     0797                     	;# 
  6686     0797                     	;# 
  6687     0798                     	;# 
  6688     0799                     	;# 
  6689     079A                     	;# 
  6690     080C                     	;# 
  6691     080C                     	;# 
  6692     080D                     	;# 
  6693     080E                     	;# 
  6694     080E                     	;# 
  6695     080F                     	;# 
  6696     0810                     	;# 
  6697     0810                     	;# 
  6698     0811                     	;# 
  6699     0812                     	;# 
  6700     0812                     	;# 
  6701     0813                     	;# 
  6702     0814                     	;# 
  6703     0815                     	;# 
  6704     0816                     	;# 
  6705     0817                     	;# 
  6706     0818                     	;# 
  6707     0819                     	;# 
  6708     081A                     	;# 
  6709     081A                     	;# 
  6710     081B                     	;# 
  6711     081C                     	;# 
  6712     081C                     	;# 
  6713     081D                     	;# 
  6714     088C                     	;# 
  6715     088D                     	;# 
  6716     088E                     	;# 
  6717     088F                     	;# 
  6718     088F                     	;# 
  6719     0890                     	;# 
  6720     0891                     	;# 
  6721     0892                     	;# 
  6722     0893                     	;# 
  6723     0893                     	;# 
  6724     0894                     	;# 
  6725     0895                     	;# 
  6726     0896                     	;# 
  6727     0897                     	;# 
  6728     0897                     	;# 
  6729     0898                     	;# 
  6730     0899                     	;# 
  6731     0D8C                     	;# 
  6732     0D8C                     	;# 
  6733     0D8D                     	;# 
  6734     0D8E                     	;# 
  6735     0D8F                     	;# 
  6736     0D8F                     	;# 
  6737     0D90                     	;# 
  6738     0D91                     	;# 
  6739     0D92                     	;# 
  6740     0D92                     	;# 
  6741     0D93                     	;# 
  6742     0D94                     	;# 
  6743     0D95                     	;# 
  6744     0D95                     	;# 
  6745     0D96                     	;# 
  6746     0D97                     	;# 
  6747     0D98                     	;# 
  6748     0D99                     	;# 
  6749     0D9A                     	;# 
  6750     0D9B                     	;# 
  6751     0D9C                     	;# 
  6752     0D9D                     	;# 
  6753     0D9E                     	;# 
  6754     0D9E                     	;# 
  6755     0D9F                     	;# 
  6756     0DA0                     	;# 
  6757     0DA1                     	;# 
  6758     0DA1                     	;# 
  6759     0DA2                     	;# 
  6760     0DA3                     	;# 
  6761     0DA4                     	;# 
  6762     0DA4                     	;# 
  6763     0DA5                     	;# 
  6764     0DA6                     	;# 
  6765     0DA7                     	;# 
  6766     0DA7                     	;# 
  6767     0DA8                     	;# 
  6768     0DA9                     	;# 
  6769     0DAA                     	;# 
  6770     0DAB                     	;# 
  6771     0DAC                     	;# 
  6772     0DAD                     	;# 
  6773     0DAE                     	;# 
  6774     0DAF                     	;# 
  6775     0E0F                     	;# 
  6776     0E10                     	;# 
  6777     0E11                     	;# 
  6778     0E12                     	;# 
  6779     0E13                     	;# 
  6780     0E14                     	;# 
  6781     0E15                     	;# 
  6782     0E16                     	;# 
  6783     0E17                     	;# 
  6784     0E17                     	;# 
  6785     0E18                     	;# 
  6786     0E18                     	;# 
  6787     0E19                     	;# 
  6788     0E1A                     	;# 
  6789     0E1B                     	;# 
  6790     0E1B                     	;# 
  6791     0E1C                     	;# 
  6792     0E1D                     	;# 
  6793     0E1E                     	;# 
  6794     0E1E                     	;# 
  6795     0E1F                     	;# 
  6796     0E20                     	;# 
  6797     0E21                     	;# 
  6798     0E22                     	;# 
  6799     0E23                     	;# 
  6800     0E24                     	;# 
  6801     0E25                     	;# 
  6802     0E26                     	;# 
  6803     0E27                     	;# 
  6804     0E28                     	;# 
  6805     0E29                     	;# 
  6806     0E2A                     	;# 
  6807     0E2B                     	;# 
  6808     0E2C                     	;# 
  6809     0E2D                     	;# 
  6810     0E2E                     	;# 
  6811     0E90                     	;# 
  6812     0E91                     	;# 
  6813     0E92                     	;# 
  6814     0E94                     	;# 
  6815     0E95                     	;# 
  6816     0E9C                     	;# 
  6817     0E9D                     	;# 
  6818     0E9E                     	;# 
  6819     0E9F                     	;# 
  6820     0EA0                     	;# 
  6821     0EA1                     	;# 
  6822     0EA2                     	;# 
  6823     0EA3                     	;# 
  6824     0EA4                     	;# 
  6825     0EA5                     	;# 
  6826     0EA6                     	;# 
  6827     0EA7                     	;# 
  6828     0F0F                     	;# 
  6829     0F10                     	;# 
  6830     0F11                     	;# 
  6831     0F12                     	;# 
  6832     0F13                     	;# 
  6833     0F14                     	;# 
  6834     0F15                     	;# 
  6835     0F16                     	;# 
  6836     0F17                     	;# 
  6837     0F18                     	;# 
  6838     0F19                     	;# 
  6839     0F1A                     	;# 
  6840     0F1B                     	;# 
  6841     0F1C                     	;# 
  6842     0F1D                     	;# 
  6843     0F1E                     	;# 
  6844     0F1F                     	;# 
  6845     0F20                     	;# 
  6846     0F21                     	;# 
  6847     0F22                     	;# 
  6848     0F23                     	;# 
  6849     0F24                     	;# 
  6850     0F25                     	;# 
  6851     0F26                     	;# 
  6852     0F27                     	;# 
  6853     0F28                     	;# 
  6854     0F29                     	;# 
  6855     0F2A                     	;# 
  6856     0F2B                     	;# 
  6857     0F2C                     	;# 
  6858     0F2D                     	;# 
  6859     0F2E                     	;# 
  6860     0F2F                     	;# 
  6861     0F30                     	;# 
  6862     0F31                     	;# 
  6863     0F32                     	;# 
  6864     0F33                     	;# 
  6865     0F34                     	;# 
  6866     0F35                     	;# 
  6867     0F36                     	;# 
  6868     0F37                     	;# 
  6869     0FE4                     	;# 
  6870     0FE5                     	;# 
  6871     0FE6                     	;# 
  6872     0FE7                     	;# 
  6873     0FE8                     	;# 
  6874     0FE9                     	;# 
  6875     0FEA                     	;# 
  6876     0FEB                     	;# 
  6877     0FED                     	;# 
  6878     0FEE                     	;# 
  6879     0FEF                     	;_eusartRxStatusBuffer
  6880                           
  6881 ;; Function _I2C1_Deinitialize is unused but had its address taken
  6882     0000                     
  6883 ;; Function _I2C1_Write is unused but had its address taken
  6884     0000                     
  6885 ;; Function _I2C1_Read is unused but had its address taken
  6886     0000                     
  6887 ;; Function _I2C1_WriteRead is unused but had its address taken
  6888     0000                     
  6889 ;; Function _I2C1_ErrorGet is unused but had its address taken
  6890     0000                     
  6891 ;; Function _I2C1_IsBusy is unused but had its address taken
  6892     0000                     
  6893 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  6894     0000                     
  6895 ;; Function _TMR2_Start is unused but had its address taken
  6896     0000                     
  6897 ;; Function _TMR2_Stop is unused but had its address taken
  6898     0000                     
  6899 ;; Function _TMR2_PeriodCountSet is unused but had its address taken
  6900     0000                     
  6901 ;; Function _TMR2_Tasks is unused but had its address taken
  6902     0000                     
  6903 ;; Function _Timer0_PeriodCountSet is unused but had its address taken
  6904     0000                     
  6905 ;; Function _TMR1_Write is unused but had its address taken
  6906     0000                     
  6907 ;; Function _TMR1_Tasks is unused but had its address taken
  6908     0000                     
  6909 ;; Function _TMR4_Start is unused but had its address taken
  6910     0000                     
  6911 ;; Function _TMR4_Stop is unused but had its address taken
  6912     0000                     
  6913 ;; Function _TMR4_PeriodCountSet is unused but had its address taken
  6914     0000                     
  6915 ;; Function _TMR4_Tasks is unused but had its address taken
  6916     0000                     
  6917 ;; Function _EUSART_Deinitialize is unused but had its address taken
  6918     0000                     
  6919 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  6920     0000                     
  6921 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  6922     0000                     
  6923 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  6924     0000                     
  6925 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  6926     0000                     
  6927 ;; Function _EUSART_IsRxReady is unused but had its address taken
  6928     0000                     
  6929 ;; Function _EUSART_IsTxReady is unused but had its address taken
  6930     0000                     
  6931 ;; Function _EUSART_IsTxDone is unused but had its address taken
  6932     0000                     
  6933 ;; Function _EUSART_ErrorGet is unused but had its address taken
  6934     0000                     
  6935 ;; Function _EUSART_Read is unused but had its address taken
  6936     0000                     
  6937 ;; Function _EUSART_Write is unused but had its address taken
  6938     0000                     
  6939                           	psect	idataBANK2
  6940     0003                     __pidataBANK2:
  6941                           
  6942                           ;initializer for _BackLight_State
  6943     0003  3408               	retlw	8
  6944                           
  6945                           	psect	stringtext1
  6946     1800                     __pstringtext1:
  6947     1800                     _UART1:
  6948     1800  34A4               	retlw	low _EUSART_Initialize
  6949     1801  341F               	retlw	high _EUSART_Initialize
  6950     1802  3400               	retlw	0
  6951     1803  3400               	retlw	0
  6952     1804  3400               	retlw	0
  6953     1805  3400               	retlw	0
  6954     1806  3400               	retlw	0
  6955     1807  3400               	retlw	0
  6956     1808  3400               	retlw	0
  6957     1809  3400               	retlw	0
  6958     180A  3400               	retlw	0
  6959     180B  3400               	retlw	0
  6960     180C  3400               	retlw	0
  6961     180D  3400               	retlw	0
  6962     180E  3400               	retlw	0
  6963     180F  3400               	retlw	0
  6964     1810  3400               	retlw	0
  6965     1811  3400               	retlw	0
  6966     1812  3400               	retlw	0
  6967     1813  3400               	retlw	0
  6968     1814  3400               	retlw	0
  6969     1815  3400               	retlw	0
  6970     1816  3400               	retlw	0
  6971     1817  3400               	retlw	0
  6972     1818  3400               	retlw	0
  6973     1819  3400               	retlw	0
  6974     181A  3400               	retlw	0
  6975     181B  3400               	retlw	0
  6976     181C  3400               	retlw	0
  6977     181D  3400               	retlw	0
  6978     181E  3400               	retlw	0
  6979     181F  3400               	retlw	0
  6980     1820  3400               	retlw	0
  6981     1821  3400               	retlw	0
  6982     1822  3400               	retlw	0
  6983     1823  3400               	retlw	0
  6984     1824  3442               	retlw	low _EUSART_RxCompleteCallbackRegister
  6985     1825  341C               	retlw	high _EUSART_RxCompleteCallbackRegister
  6986     1826  3400               	retlw	0
  6987     1827  3400               	retlw	0
  6988     1828  3472               	retlw	low _EUSART_FramingErrorCallbackRegister
  6989     1829  341C               	retlw	high _EUSART_FramingErrorCallbackRegister
  6990     182A  3481               	retlw	low _EUSART_OverrunErrorCallbackRegister
  6991     182B  341C               	retlw	high _EUSART_OverrunErrorCallbackRegister
  6992     182C  3400               	retlw	0
  6993     182D  3400               	retlw	0
  6994     182E  3400               	retlw	0
  6995     182F  3400               	retlw	0
  6996     1830                     __end_of_UART1:
  6997                           
  6998                           	psect	stringtext2
  6999     184C                     __pstringtext2:
  7000     184C                     _I2C1_Host:
  7001     184C  34C5               	retlw	low _I2C1_Initialize
  7002     184D  341C               	retlw	high _I2C1_Initialize
  7003     184E  3400               	retlw	0
  7004     184F  3400               	retlw	0
  7005     1850  3400               	retlw	0
  7006     1851  3400               	retlw	0
  7007     1852  3400               	retlw	0
  7008     1853  3400               	retlw	0
  7009     1854  3400               	retlw	0
  7010     1855  3400               	retlw	0
  7011     1856  3400               	retlw	0
  7012     1857  3400               	retlw	0
  7013     1858  3400               	retlw	0
  7014     1859  3400               	retlw	0
  7015     185A  3400               	retlw	0
  7016     185B  3400               	retlw	0
  7017     185C  344E               	retlw	low _I2C1_CallbackRegister
  7018     185D  341C               	retlw	high _I2C1_CallbackRegister
  7019     185E  3400               	retlw	0
  7020     185F  3400               	retlw	0
  7021     1860                     __end_of_I2C1_Host:
  7022                           
  7023                           	psect	stringtext3
  7024     1860                     __pstringtext3:
  7025     1860                     _i2c1_eventTable:
  7026     1860  3459               	retlw	low _I2C1_EVENT_IDLE
  7027     1861  341B               	retlw	high _I2C1_EVENT_IDLE
  7028     1862  34CC               	retlw	low _I2C1_EVENT_SEND_RD_ADDR
  7029     1863  341B               	retlw	high _I2C1_EVENT_SEND_RD_ADDR
  7030     1864  34AF               	retlw	low _I2C1_EVENT_SEND_WR_ADDR
  7031     1865  341B               	retlw	high _I2C1_EVENT_SEND_WR_ADDR
  7032     1866  34D1               	retlw	low _I2C1_EVENT_TX
  7033     1867  341F               	retlw	high _I2C1_EVENT_TX
  7034     1868  3458               	retlw	low _I2C1_EVENT_RX
  7035     1869  3410               	retlw	high _I2C1_EVENT_RX
  7036     186A  347F               	retlw	low _I2C1_EVENT_NACK
  7037     186B  341B               	retlw	high _I2C1_EVENT_NACK
  7038     186C  3485               	retlw	low _I2C1_EVENT_ERROR
  7039     186D  341B               	retlw	high _I2C1_EVENT_ERROR
  7040     186E  34D4               	retlw	low _I2C1_EVENT_STOP
  7041     186F  341B               	retlw	high _I2C1_EVENT_STOP
  7042     1870  34B6               	retlw	low _I2C1_EVENT_RESET
  7043     1871  341B               	retlw	high _I2C1_EVENT_RESET
  7044     1872                     __end_of_i2c1_eventTable:
  7045                           
  7046                           	psect	stringtext4
  7047     18AA                     __pstringtext4:
  7048     18AA                     _Timer4:
  7049     18AA  3456               	retlw	low _TMR4_Initialize
  7050     18AB  341D               	retlw	high _TMR4_Initialize
  7051     18AC  3400               	retlw	0
  7052     18AD  3400               	retlw	0
  7053     18AE  3400               	retlw	0
  7054     18AF  3400               	retlw	0
  7055     18B0  3400               	retlw	0
  7056     18B1  3400               	retlw	0
  7057     18B2  34A9               	retlw	low _TMR4_OverflowCallbackRegister
  7058     18B3  341B               	retlw	high _TMR4_OverflowCallbackRegister
  7059     18B4  3400               	retlw	0
  7060     18B5  3400               	retlw	0
  7061     18B6                     __end_of_Timer4:
  7062                           
  7063                           	psect	stringtext5
  7064     18B6                     __pstringtext5:
  7065     18B6                     _tmr1:
  7066     18B6  3415               	retlw	low _TMR1_Initialize
  7067     18B7  341E               	retlw	high _TMR1_Initialize
  7068     18B8  343B               	retlw	low _TMR1_Start
  7069     18B9  341B               	retlw	high _TMR1_Start
  7070     18BA  343E               	retlw	low _TMR1_Stop
  7071     18BB  341B               	retlw	high _TMR1_Stop
  7072     18BC  3400               	retlw	0
  7073     18BD  3400               	retlw	0
  7074     18BE  349D               	retlw	low _TMR1_OverflowCallbackRegister
  7075     18BF  341B               	retlw	high _TMR1_OverflowCallbackRegister
  7076     18C0  3400               	retlw	0
  7077     18C1  3400               	retlw	0
  7078     18C2                     __end_of_tmr1:
  7079                           
  7080                           	psect	stringtext6
  7081     18C2                     __pstringtext6:
  7082     18C2                     _Timer0:
  7083     18C2  3481               	retlw	low _Timer0_Initialize
  7084     18C3  341D               	retlw	high _Timer0_Initialize
  7085     18C4  3400               	retlw	0
  7086     18C5  3400               	retlw	0
  7087     18C6  3400               	retlw	0
  7088     18C7  3400               	retlw	0
  7089     18C8  3400               	retlw	0
  7090     18C9  3400               	retlw	0
  7091     18CA  34F6               	retlw	low _Timer0_OverflowCallbackRegister
  7092     18CB  341B               	retlw	high _Timer0_OverflowCallbackRegister
  7093     18CC  3400               	retlw	0
  7094     18CD  3400               	retlw	0
  7095     18CE                     __end_of_Timer0:
  7096                           
  7097                           	psect	stringtext7
  7098     1830                     __pstringtext7:
  7099     1830                     _Timer2:
  7100     1830  34D9               	retlw	low _TMR2_Initialize
  7101     1831  341C               	retlw	high _TMR2_Initialize
  7102     1832  3400               	retlw	0
  7103     1833  3400               	retlw	0
  7104     1834  3400               	retlw	0
  7105     1835  3400               	retlw	0
  7106     1836  3400               	retlw	0
  7107     1837  3400               	retlw	0
  7108     1838  34A3               	retlw	low _TMR2_OverflowCallbackRegister
  7109     1839  341B               	retlw	high _TMR2_OverflowCallbackRegister
  7110     183A  3400               	retlw	0
  7111     183B  3400               	retlw	0
  7112     183C                     __end_of_Timer2:
  7113     000E                     _PORTCbits	set	14
  7114     0019                     _T1GCONbits	set	25
  7115     0018                     _T1CONbits	set	24
  7116     0018                     _T1CON	set	24
  7117     0016                     _TMR1L	set	22
  7118     0017                     _TMR1H	set	23
  7119     0019                     _T1GCON	set	25
  7120     0015                     _TMR0	set	21
  7121     001B                     _PR2	set	27
  7122     001A                     _TMR2	set	26
  7123     001C                     _T2CONbits	set	28
  7124     001F                     _T2RSTbits	set	31
  7125     001D                     _T2HLTbits	set	29
  7126     001C                     _T2CON	set	28
  7127     001A                     _T2TMR	set	26
  7128     001B                     _T2PR	set	27
  7129     001F                     _T2RST	set	31
  7130     001D                     _T2HLT	set	29
  7131     001E                     _T2CLKCON	set	30
  7132     000B                     _INTCONbits	set	11
  7133     0011                     _PIR2bits	set	17
  7134     0010                     _PIR1bits	set	16
  7135     0095                     _OPTION_REG	set	149
  7136     0095                     _OPTION_REGbits	set	149
  7137     008E                     _TRISC	set	142
  7138     008D                     _TRISB	set	141
  7139     008C                     _TRISA	set	140
  7140     0098                     _OSCTUNE	set	152
  7141     0099                     _OSCCON	set	153
  7142     0091                     _PIE2bits	set	145
  7143     0090                     _PIE1bits	set	144
  7144     009D                     _ADCON0bits	set	157
  7145     009D                     _ADCON0	set	157
  7146     009F                     _ADCON2	set	159
  7147     009C                     _ADRESH	set	156
  7148     009B                     _ADRESL	set	155
  7149     009E                     _ADCON1	set	158
  7150     0473                     _TRISC3	set	1139
  7151     0474                     _TRISC4	set	1140
  7152     010E                     _LATCbits	set	270
  7153     010D                     _LATBbits	set	269
  7154     010E                     _LATC	set	270
  7155     010D                     _LATB	set	269
  7156     010C                     _LATA	set	268
  7157     0116                     _BORCON	set	278
  7158     019A                     _TX1REG	set	410
  7159     0199                     _RC1REG	set	409
  7160     019F                     _BAUD1CONbits	set	415
  7161     019E                     _TX1STAbits	set	414
  7162     019D                     _RC1STAbits	set	413
  7163     019C                     _SPBRGH	set	412
  7164     019B                     _SPBRGL	set	411
  7165     019E                     _TX1STA	set	414
  7166     019D                     _RC1STA	set	413
  7167     019F                     _BAUD1CON	set	415
  7168     018E                     _ANSELC	set	398
  7169     018D                     _ANSELB	set	397
  7170     018C                     _ANSELA	set	396
  7171     020E                     _WPUC	set	526
  7172     020D                     _WPUB	set	525
  7173     020C                     _WPUA	set	524
  7174     0216                     _SSP1CON2bits	set	534
  7175     0211                     _SSP1BUF	set	529
  7176     0214                     _SSP1STATbits	set	532
  7177     0215                     _SSP1CON1bits	set	533
  7178     0212                     _SSP1ADD	set	530
  7179     0217                     _SSP1CON3	set	535
  7180     0216                     _SSP1CON2	set	534
  7181     0215                     _SSP1CON1	set	533
  7182     0214                     _SSP1STAT	set	532
  7183     028E                     _ODCONC	set	654
  7184     028D                     _ODCONB	set	653
  7185     028C                     _ODCONA	set	652
  7186     029A                     _CCP2CONbits	set	666
  7187     0298                     _CCPR2L	set	664
  7188     0299                     _CCPR2H	set	665
  7189     029A                     _CCP2CON	set	666
  7190     0293                     _CCP1CONbits	set	659
  7191     029E                     _CCPTMRSbits	set	670
  7192     0291                     _CCPR1L	set	657
  7193     0292                     _CCPR1H	set	658
  7194     0293                     _CCP1CON	set	659
  7195     030E                     _SLRCONC	set	782
  7196     030D                     _SLRCONB	set	781
  7197     030C                     _SLRCONA	set	780
  7198     0399                     _IOCCF	set	921
  7199     0398                     _IOCCN	set	920
  7200     0397                     _IOCCP	set	919
  7201     0396                     _IOCBF	set	918
  7202     0395                     _IOCBN	set	917
  7203     0394                     _IOCBP	set	916
  7204     0393                     _IOCAF	set	915
  7205     0392                     _IOCAN	set	914
  7206     0391                     _IOCAP	set	913
  7207     038E                     _INLVLC	set	910
  7208     038D                     _INLVLB	set	909
  7209     038C                     _INLVLA	set	908
  7210     0414                     _PR4	set	1044
  7211     0413                     _TMR4	set	1043
  7212     0415                     _T4CONbits	set	1045
  7213     0418                     _T4RSTbits	set	1048
  7214     0416                     _T4HLTbits	set	1046
  7215     0415                     _T4CON	set	1045
  7216     0413                     _T4TMR	set	1043
  7217     0414                     _T4PR	set	1044
  7218     0418                     _T4RST	set	1048
  7219     0416                     _T4HLT	set	1046
  7220     0417                     _T4CLKCON	set	1047
  7221     0E14                     _CCP1PPS	set	3604
  7222     0E15                     _CCP2PPS	set	3605
  7223     0E21                     _SSPDATPPS	set	3617
  7224     0E20                     _SSPCLKPPS	set	3616
  7225     0E24                     _RXPPS	set	3620
  7226     0EA5                     _RC5PPS	set	3749
  7227     0E92                     _RA2PPS	set	3730
  7228     0EA3                     _RC3PPS	set	3747
  7229     0EA4                     _RC4PPS	set	3748
  7230     0EA6                     _RC6PPS	set	3750
  7231     183C                     STR_3:
  7232     183C  3453               	retlw	83	;'S'
  7233     183D  3465               	retlw	101	;'e'
  7234     183E  346E               	retlw	110	;'n'
  7235     183F  3474               	retlw	116	;'t'
  7236     1840  3420               	retlw	32	;' '
  7237     1841  3463               	retlw	99	;'c'
  7238     1842  346F               	retlw	111	;'o'
  7239     1843  3464               	retlw	100	;'d'
  7240     1844  3465               	retlw	101	;'e'
  7241     1845  343A               	retlw	58	;':'
  7242     1846  3420               	retlw	32	;' '
  7243     1847  3425               	retlw	37	;'%'
  7244     1848  3468               	retlw	104	;'h'
  7245     1849  3468               	retlw	104	;'h'
  7246     184A  3478               	retlw	120	;'x'
  7247     184B  3400               	retlw	0
  7248                           
  7249                           	psect	stringtext8
  7250     1872                     __pstringtext8:
  7251     1872                     STR_6:
  7252     1872  3444               	retlw	68	;'D'
  7253     1873  3469               	retlw	105	;'i'
  7254     1874  3473               	retlw	115	;'s'
  7255     1875  3474               	retlw	116	;'t'
  7256     1876  342E               	retlw	46	;'.'
  7257     1877  343A               	retlw	58	;':'
  7258     1878  3420               	retlw	32	;' '
  7259     1879  3425               	retlw	37	;'%'
  7260     187A  342E               	retlw	46	;'.'
  7261     187B  3432               	retlw	50	;'2'
  7262     187C  3466               	retlw	102	;'f'
  7263     187D  3420               	retlw	32	;' '
  7264     187E  3463               	retlw	99	;'c'
  7265     187F  346D               	retlw	109	;'m'
  7266     1880  3400               	retlw	0
  7267                           
  7268                           	psect	stringtext9
  7269     1881                     __pstringtext9:
  7270     1881                     STR_8:
  7271     1881  3454               	retlw	84	;'T'
  7272     1882  3465               	retlw	101	;'e'
  7273     1883  346D               	retlw	109	;'m'
  7274     1884  3470               	retlw	112	;'p'
  7275     1885  342E               	retlw	46	;'.'
  7276     1886  343A               	retlw	58	;':'
  7277     1887  3420               	retlw	32	;' '
  7278     1888  3425               	retlw	37	;'%'
  7279     1889  342E               	retlw	46	;'.'
  7280     188A  3432               	retlw	50	;'2'
  7281     188B  3466               	retlw	102	;'f'
  7282     188C  3420               	retlw	32	;' '
  7283     188D  3443               	retlw	67	;'C'
  7284     188E  3400               	retlw	0
  7285                           
  7286                           	psect	stringtext10
  7287     188F                     __pstringtext10:
  7288     188F                     STR_2:
  7289     188F  3420               	retlw	32	;' '
  7290     1890  342E               	retlw	46	;'.'
  7291     1891  342E               	retlw	46	;'.'
  7292     1892  3420               	retlw	32	;' '
  7293     1893  3449               	retlw	73	;'I'
  7294     1894  346E               	retlw	110	;'n'
  7295     1895  3474               	retlw	116	;'t'
  7296     1896  3465               	retlw	101	;'e'
  7297     1897  3472               	retlw	114	;'r'
  7298     1898  3472               	retlw	114	;'r'
  7299     1899  3475               	retlw	117	;'u'
  7300     189A  3470               	retlw	112	;'p'
  7301     189B  3474               	retlw	116	;'t'
  7302     189C  3400               	retlw	0
  7303                           
  7304                           	psect	stringtext11
  7305     189D                     __pstringtext11:
  7306     189D                     STR_7:
  7307     189D  344F               	retlw	79	;'O'
  7308     189E  3475               	retlw	117	;'u'
  7309     189F  3474               	retlw	116	;'t'
  7310     18A0  3420               	retlw	32	;' '
  7311     18A1  346F               	retlw	111	;'o'
  7312     18A2  3466               	retlw	102	;'f'
  7313     18A3  3420               	retlw	32	;' '
  7314     18A4  3452               	retlw	82	;'R'
  7315     18A5  3461               	retlw	97	;'a'
  7316     18A6  346E               	retlw	110	;'n'
  7317     18A7  3467               	retlw	103	;'g'
  7318     18A8  3465               	retlw	101	;'e'
  7319     18A9  3400               	retlw	0
  7320                           
  7321                           	psect	stringtext12
  7322     18CE                     __pstringtext12:
  7323     18CE                     STR_4:
  7324     18CE  3420               	retlw	32	;' '
  7325     18CF  3454               	retlw	84	;'T'
  7326     18D0  344D               	retlw	77	;'M'
  7327     18D1  3452               	retlw	82	;'R'
  7328     18D2  3430               	retlw	48	;'0'
  7329     18D3  3420               	retlw	32	;' '
  7330     18D4  342E               	retlw	46	;'.'
  7331     18D5  342E               	retlw	46	;'.'
  7332     18D6  3400               	retlw	0
  7333                           
  7334                           	psect	stringtext13
  7335     18D7                     __pstringtext13:
  7336     18D7                     STR_1:
  7337     18D7  3420               	retlw	32	;' '
  7338     18D8  3455               	retlw	85	;'U'
  7339     18D9  3441               	retlw	65	;'A'
  7340     18DA  3452               	retlw	82	;'R'
  7341     18DB  3454               	retlw	84	;'T'
  7342     18DC  3420               	retlw	32	;' '
  7343     18DD  342E               	retlw	46	;'.'
  7344     18DE  342E               	retlw	46	;'.'
  7345     18DF  3400               	retlw	0
  7346                           
  7347                           	psect	stringtext14
  7348     18E0                     __pstringtext14:
  7349     18E0                     STR_9:
  7350     18E0  3469               	retlw	105	;'i'
  7351     18E1  346E               	retlw	110	;'n'
  7352     18E2  3466               	retlw	102	;'f'
  7353     18E3  3400               	retlw	0
  7354                           
  7355                           	psect	stringtext15
  7356     18E4                     __pstringtext15:
  7357     18E4                     STR_12:
  7358     18E4  346E               	retlw	110	;'n'
  7359     18E5  3461               	retlw	97	;'a'
  7360     18E6  346E               	retlw	110	;'n'
  7361     18E7  3400               	retlw	0
  7362                           
  7363                           	psect	stringtext16
  7364     0000                     __pstringtext16:
  7365     18E0                     
  7366                           	psect	cinit
  7367     0043                     start_initialization:	
  7368                           ; #config settings
  7369                           
  7370     0043                     __initialization:	;BIGRAM
  7371                           
  7372                           ; Initialize objects allocated to BANK2
  7373     0043  0022               	movlb	2	; select bank2
  7374     0044  3180  2003  3180   	fcall	__pidataBANK2	;fetch initializer
  7375     0047  00EC               	movwf	__pdataBANK2& (0+127)
  7376                           
  7377                           ; Clear objects allocated to BIGRAM
  7378     0048  3070               	movlw	low (0+9072)
  7379     0049  0084               	movwf	4
  7380     004A  3023               	movlw	high (0+9072)
  7381     004B  0085               	movwf	5
  7382     004C  3080               	movlw	128
  7383     004D  00FE               	movwf	btemp
  7384     004E  3000               	movlw	0
  7385     004F  00FF               	movwf	btemp+1
  7386     0050  319C  2466  3180   	fcall	clear_ram0
  7387                           
  7388                           ; Clear objects allocated to BANK2
  7389     0053  3047               	movlw	low __pbssBANK2
  7390     0054  0084               	movwf	4
  7391     0055  3001               	movlw	high __pbssBANK2
  7392     0056  0085               	movwf	5
  7393     0057  3025               	movlw	37
  7394     0058  00FE               	movwf	btemp
  7395     0059  3000               	movlw	0
  7396     005A  00FF               	movwf	btemp+1
  7397     005B  319C  2466  3180   	fcall	clear_ram0
  7398                           
  7399                           ; Clear objects allocated to BANK3
  7400     005E  30A0               	movlw	low __pbssBANK3
  7401     005F  0084               	movwf	4
  7402     0060  3001               	movlw	high __pbssBANK3
  7403     0061  0085               	movwf	5
  7404     0062  301E               	movlw	30
  7405     0063  00FE               	movwf	btemp
  7406     0064  3000               	movlw	0
  7407     0065  00FF               	movwf	btemp+1
  7408     0066  319C  2466  3180   	fcall	clear_ram0
  7409                           
  7410                           ; Clear objects allocated to BANK4
  7411     0069  3020               	movlw	low __pbssBANK4
  7412     006A  0084               	movwf	4
  7413     006B  3002               	movlw	high __pbssBANK4
  7414     006C  0085               	movwf	5
  7415     006D  3050               	movlw	80
  7416     006E  00FE               	movwf	btemp
  7417     006F  3000               	movlw	0
  7418     0070  00FF               	movwf	btemp+1
  7419     0071  319C  2466  3180   	fcall	clear_ram0
  7420                           
  7421                           ; Clear objects allocated to BANK5
  7422     0074  30A0               	movlw	low __pbssBANK5
  7423     0075  0084               	movwf	4
  7424     0076  3002               	movlw	high __pbssBANK5
  7425     0077  0085               	movwf	5
  7426     0078  3040               	movlw	64
  7427     0079  00FE               	movwf	btemp
  7428     007A  3000               	movlw	0
  7429     007B  00FF               	movwf	btemp+1
  7430     007C  319C  2466  3180   	fcall	clear_ram0
  7431     007F                     end_of_initialization:	
  7432                           ;End of C runtime variable initialization code
  7433                           
  7434     007F                     __end_of__initialization:
  7435     007F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7436     0080  0020               	movlb	0
  7437     0081  3195  2DBB         	ljmp	_main	;jump to C main() function
  7438                           
  7439                           	psect	bssBANK2
  7440     0147                     __pbssBANK2:
  7441     0147                     _i2c1Status:
  7442     0147                     	ds	14
  7443     0155                     _width:
  7444     0155                     	ds	2
  7445     0157                     _prec:
  7446     0157                     	ds	2
  7447     0159                     _EUSART_OverrunErrorHandler:
  7448     0159                     	ds	2
  7449     015B                     _EUSART_FramingErrorHandler:
  7450     015B                     	ds	2
  7451     015D                     _timer1ReloadVal:
  7452     015D                     	ds	2
  7453     015F                     Timer0_OverflowISR@CountCallBack:
  7454     015F                     	ds	2
  7455     0161                     _Timer0_OverflowCallback:
  7456     0161                     	ds	2
  7457     0163                     _INT_InterruptHandler:
  7458     0163                     	ds	2
  7459     0165                     _flags:
  7460     0165                     	ds	1
  7461     0166                     _i2c_add:
  7462     0166                     	ds	1
  7463     0167                     _RS:
  7464     0167                     	ds	1
  7465     0168                     _eusartRxCount:
  7466     0168                     	ds	1
  7467     0169                     _eusartRxTail:
  7468     0169                     	ds	1
  7469     016A                     _eusartRxHead:
  7470     016A                     	ds	1
  7471     016B                     _timer0ReloadVal:
  7472     016B                     	ds	1
  7473                           
  7474                           	psect	dataBANK2
  7475     016C                     __pdataBANK2:
  7476     016C                     _BackLight_State:
  7477     016C                     	ds	1
  7478                           
  7479                           	psect	bssBANK3
  7480     01A0                     __pbssBANK3:
  7481     01A0                     floorf@F521:
  7482     01A0                     	ds	4
  7483     01A4                     ___fpclassifyf@F465:
  7484     01A4                     	ds	4
  7485     01A8                     _temperature:
  7486     01A8                     	ds	4
  7487     01AC                     _distance:
  7488     01AC                     	ds	4
  7489     01B0                     _eusartRxLastError:
  7490     01B0                     	ds	2
  7491     01B2                     _TMR4_OverflowCallback:
  7492     01B2                     	ds	2
  7493     01B4                     _TMR1_OverflowCallback:
  7494     01B4                     	ds	2
  7495     01B6                     _TMR1_InterruptHandler:
  7496     01B6                     	ds	2
  7497     01B8                     _TMR2_OverflowCallback:
  7498     01B8                     	ds	2
  7499     01BA                     _EUSART_RxInterruptHandler:
  7500     01BA                     	ds	2
  7501     01BC                     _I2C1_Callback:
  7502     01BC                     	ds	2
  7503                           
  7504                           	psect	bssBANK4
  7505     0220                     __pbssBANK4:
  7506     0220                     _dbuf:
  7507     0220                     	ds	80
  7508                           
  7509                           	psect	bssBANK5
  7510     02A0                     __pbssBANK5:
  7511     02A0                     _eusartRxBuffer:
  7512     02A0                     	ds	64
  7513                           
  7514                           	psect	clrtext
  7515     1C66                     clear_ram0:	
  7516                           ;	Called with FSR0 containing the base address, and
  7517                           ;	btemp/btemp+1 has the size to clear
  7518                           
  7519     1C66  0064               	clrwdt	;clear the watchdog before getting into this loop
  7520     1C67                     clrloop0:
  7521     1C67  0180               	clrf	0	;clear RAM location pointed to by FSR
  7522     1C68  3101               	addfsr 0,1
  7523     1C69  3001               	movlw	1
  7524     1C6A  02FE               	subwf	btemp,f
  7525     1C6B  3000               	movlw	0
  7526     1C6C  3BFF               	subwfb	btemp+1,f
  7527     1C6D  087F               	movf	btemp+1,w
  7528     1C6E  047E               	iorwf	btemp,w
  7529     1C6F  1D03               	skipz
  7530     1C70  2C67               	goto	clrloop0	;have we reached the end yet?
  7531     1C71  3400               	retlw	0	;all done for this memory range, return
  7532                           
  7533                           	psect	cstackBANK3
  7534     01BE                     __pcstackBANK3:
  7535     01BE                     ?_I2C1_CallbackRegister:
  7536     01BE                     ??_CLOCK_Initialize:	
  7537                           ; 1 bytes @ 0x0
  7538                           
  7539     01BE                     ??_PIN_MANAGER_Initialize:	
  7540                           ; 1 bytes @ 0x0
  7541                           
  7542     01BE                     ?_INT_SetInterruptHandler:	
  7543                           ; 1 bytes @ 0x0
  7544                           
  7545     01BE                     ?_TMR2_OverflowCallbackRegister:	
  7546                           ; 1 bytes @ 0x0
  7547                           
  7548     01BE                     ?_Timer0_OverflowCallbackRegister:	
  7549                           ; 1 bytes @ 0x0
  7550                           
  7551     01BE                     ?_TMR1_OverflowCallbackRegister:	
  7552                           ; 1 bytes @ 0x0
  7553                           
  7554     01BE                     ?_TMR4_OverflowCallbackRegister:	
  7555                           ; 1 bytes @ 0x0
  7556                           
  7557     01BE                     ?_EUSART_RxCompleteCallbackRegister:	
  7558                           ; 1 bytes @ 0x0
  7559                           
  7560     01BE                     ?_EUSART_FramingErrorCallbackRegister:	
  7561                           ; 1 bytes @ 0x0
  7562                           
  7563     01BE                     ?_EUSART_OverrunErrorCallbackRegister:	
  7564                           ; 1 bytes @ 0x0
  7565                           
  7566     01BE                     ??_shift_out_to_motors:	
  7567                           ; 1 bytes @ 0x0
  7568                           
  7569     01BE                     ??_ADC_Initialize:	
  7570                           ; 1 bytes @ 0x0
  7571                           
  7572     01BE                     ??_CCP1_Initialize:	
  7573                           ; 1 bytes @ 0x0
  7574                           
  7575     01BE                     ??_CCP2_Initialize:	
  7576                           ; 1 bytes @ 0x0
  7577                           
  7578     01BE                     ?_CCP2_LoadDutyValue:	
  7579                           ; 1 bytes @ 0x0
  7580                           
  7581     01BE                     ??_I2C_Master_Init:	
  7582                           ; 1 bytes @ 0x0
  7583                           
  7584     01BE                     ??_I2C_Master_Wait:	
  7585                           ; 1 bytes @ 0x0
  7586                           
  7587     01BE                     ??_I2C_Master_Start:	
  7588                           ; 1 bytes @ 0x0
  7589                           
  7590     01BE                     ??_I2C_Master_Stop:	
  7591                           ; 1 bytes @ 0x0
  7592                           
  7593     01BE                     ??_I2C_Master_Write:	
  7594                           ; 1 bytes @ 0x0
  7595                           
  7596     01BE                     I2C_Master_Write@data:	
  7597                           ; 1 bytes @ 0x0
  7598                           
  7599     01BE                     I2C1_CallbackRegister@callbackHandler:	
  7600                           ; 1 bytes @ 0x0
  7601                           
  7602     01BE                     CCP2_LoadDutyValue@dutyValue:	
  7603                           ; 2 bytes @ 0x0
  7604                           
  7605     01BE                     INT_SetInterruptHandler@InterruptHandler:	
  7606                           ; 2 bytes @ 0x0
  7607                           
  7608     01BE                     TMR2_OverflowCallbackRegister@InterruptHandler:	
  7609                           ; 2 bytes @ 0x0
  7610                           
  7611     01BE                     Timer0_OverflowCallbackRegister@CallbackHandler:	
  7612                           ; 2 bytes @ 0x0
  7613                           
  7614     01BE                     TMR1_OverflowCallbackRegister@CallbackHandler:	
  7615                           ; 2 bytes @ 0x0
  7616                           
  7617     01BE                     TMR4_OverflowCallbackRegister@InterruptHandler:	
  7618                           ; 2 bytes @ 0x0
  7619                           
  7620     01BE                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  7621                           ; 2 bytes @ 0x0
  7622                           
  7623     01BE                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  7624                           ; 2 bytes @ 0x0
  7625                           
  7626     01BE                     EUSART_RxCompleteCallbackRegister@callbackHandler:	
  7627                           ; 2 bytes @ 0x0
  7628                           
  7629                           
  7630                           ; 2 bytes @ 0x0
  7631     01BE                     	ds	1
  7632     01BF                     ??_IO_Expander_Write:
  7633     01BF                     IO_Expander_Write@Data:	
  7634                           ; 1 bytes @ 0x1
  7635                           
  7636                           
  7637                           ; 1 bytes @ 0x1
  7638     01BF                     	ds	1
  7639     01C0                     ??_I2C1_Initialize:
  7640     01C0                     ??_I2C1_CallbackRegister:	
  7641                           ; 1 bytes @ 0x2
  7642                           
  7643     01C0                     ??_EUSART_Initialize:	
  7644                           ; 1 bytes @ 0x2
  7645                           
  7646     01C0                     ??_Timer0_Initialize:	
  7647                           ; 1 bytes @ 0x2
  7648                           
  7649     01C0                     ??_TMR1_Initialize:	
  7650                           ; 1 bytes @ 0x2
  7651                           
  7652     01C0                     ??_TMR2_Initialize:	
  7653                           ; 1 bytes @ 0x2
  7654                           
  7655     01C0                     ??_TMR4_Initialize:	
  7656                           ; 1 bytes @ 0x2
  7657                           
  7658     01C0                     ??_INTERRUPT_Initialize:	
  7659                           ; 1 bytes @ 0x2
  7660                           
  7661     01C0                     ??_INT_SetInterruptHandler:	
  7662                           ; 1 bytes @ 0x2
  7663                           
  7664     01C0                     ??_TMR2_OverflowCallbackRegister:	
  7665                           ; 1 bytes @ 0x2
  7666                           
  7667     01C0                     ??_Timer0_OverflowCallbackRegister:	
  7668                           ; 1 bytes @ 0x2
  7669                           
  7670     01C0                     ??_TMR1_OverflowCallbackRegister:	
  7671                           ; 1 bytes @ 0x2
  7672                           
  7673     01C0                     ??_TMR4_OverflowCallbackRegister:	
  7674                           ; 1 bytes @ 0x2
  7675                           
  7676     01C0                     ??_EUSART_RxCompleteCallbackRegister:	
  7677                           ; 1 bytes @ 0x2
  7678                           
  7679     01C0                     ??_EUSART_FramingErrorCallbackRegister:	
  7680                           ; 1 bytes @ 0x2
  7681                           
  7682     01C0                     ??_EUSART_OverrunErrorCallbackRegister:	
  7683                           ; 1 bytes @ 0x2
  7684                           
  7685     01C0                     ??_CCP2_LoadDutyValue:	
  7686                           ; 1 bytes @ 0x2
  7687                           
  7688     01C0                     ??_SYSTEM_Initialize:	
  7689                           ; 1 bytes @ 0x2
  7690                           
  7691     01C0                     ??_LCD_Write_4Bit:	
  7692                           ; 1 bytes @ 0x2
  7693                           
  7694                           
  7695                           ; 1 bytes @ 0x2
  7696     01C0                     	ds	1
  7697     01C1                     LCD_Write_4Bit@Nibble:
  7698     01C1                     shift_out_to_motors@byte:	
  7699                           ; 1 bytes @ 0x3
  7700                           
  7701                           
  7702                           ; 1 bytes @ 0x3
  7703     01C1                     	ds	1
  7704     01C2                     ??_LCD_CMD:
  7705     01C2                     shift_out_to_motors@i:	
  7706                           ; 1 bytes @ 0x4
  7707                           
  7708                           
  7709                           ; 1 bytes @ 0x4
  7710     01C2                     	ds	1
  7711     01C3                     LCD_CMD@CMD:
  7712                           
  7713                           ; 1 bytes @ 0x5
  7714     01C3                     	ds	1
  7715     01C4                     ??_LCD_Init:
  7716                           
  7717                           ; 1 bytes @ 0x6
  7718     01C4                     	ds	1
  7719     01C5                     LCD_Init@I2C_Add:
  7720                           
  7721                           ; 1 bytes @ 0x7
  7722     01C5                     	ds	1
  7723     01C6                     ??_main:
  7724                           
  7725                           ; 1 bytes @ 0x8
  7726     01C6                     	ds	2
  7727                           
  7728                           	psect	cstackBANK2
  7729     0120                     __pcstackBANK2:
  7730     0120                     sprintf@s:
  7731                           
  7732                           ; 1 bytes @ 0x0
  7733     0120                     	ds	1
  7734     0121                     sprintf@ap:
  7735                           
  7736                           ; 1 bytes @ 0x1
  7737     0121                     	ds	1
  7738     0122                     sprintf@f:
  7739                           
  7740                           ; 11 bytes @ 0x2
  7741     0122                     	ds	11
  7742     012D                     ??_TMR0_Custom_ISR:
  7743     012D                     ??_UART_Custom_ISR:	
  7744                           ; 1 bytes @ 0xD
  7745                           
  7746                           
  7747                           ; 1 bytes @ 0xD
  7748     012D                     	ds	2
  7749     012F                     UART_Custom_ISR@buffer:
  7750                           
  7751                           ; 16 bytes @ 0xF
  7752     012F                     	ds	4
  7753     0133                     TMR0_Custom_ISR@buffer:
  7754                           
  7755                           ; 16 bytes @ 0x13
  7756     0133                     	ds	12
  7757     013F                     UART_Custom_ISR@Rx_Code:
  7758                           
  7759                           ; 1 bytes @ 0x1F
  7760     013F                     	ds	1
  7761     0140                     ??_EUSART_ReceiveISR:
  7762                           
  7763                           ; 1 bytes @ 0x20
  7764     0140                     	ds	3
  7765     0143                     _TMR0_Custom_ISR$3583:
  7766                           
  7767                           ; 4 bytes @ 0x23
  7768     0143                     	ds	1
  7769     0144                     EUSART_ReceiveISR@regValue:
  7770                           
  7771                           ; 1 bytes @ 0x24
  7772     0144                     	ds	1
  7773     0145                     EUSART_ReceiveISR@tempRxHead:
  7774                           
  7775                           ; 1 bytes @ 0x25
  7776     0145                     	ds	2
  7777                           
  7778                           	psect	cstackBANK1
  7779     00A0                     __pcstackBANK1:
  7780     00A0                     ?_efgtoa:
  7781     00A0                     efgtoa@f:	
  7782                           ; 1 bytes @ 0x0
  7783                           
  7784                           
  7785                           ; 4 bytes @ 0x0
  7786     00A0                     	ds	4
  7787     00A4                     efgtoa@c:
  7788                           
  7789                           ; 1 bytes @ 0x4
  7790     00A4                     	ds	1
  7791     00A5                     ??_efgtoa:
  7792                           
  7793                           ; 1 bytes @ 0x5
  7794     00A5                     	ds	4
  7795     00A9                     efgtoa@ne:
  7796                           
  7797                           ; 2 bytes @ 0x9
  7798     00A9                     	ds	2
  7799     00AB                     efgtoa@p:
  7800                           
  7801                           ; 2 bytes @ 0xB
  7802     00AB                     	ds	2
  7803     00AD                     efgtoa@t:
  7804                           
  7805                           ; 2 bytes @ 0xD
  7806     00AD                     	ds	2
  7807     00AF                     _efgtoa$3155:
  7808                           
  7809                           ; 2 bytes @ 0xF
  7810     00AF                     	ds	2
  7811     00B1                     efgtoa@pp:
  7812                           
  7813                           ; 1 bytes @ 0x11
  7814     00B1                     	ds	1
  7815     00B2                     efgtoa@mode:
  7816                           
  7817                           ; 1 bytes @ 0x12
  7818     00B2                     	ds	1
  7819     00B3                     efgtoa@nmode:
  7820                           
  7821                           ; 1 bytes @ 0x13
  7822     00B3                     	ds	1
  7823     00B4                     efgtoa@d:
  7824                           
  7825                           ; 2 bytes @ 0x14
  7826     00B4                     	ds	2
  7827     00B6                     efgtoa@m:
  7828                           
  7829                           ; 2 bytes @ 0x16
  7830     00B6                     	ds	2
  7831     00B8                     efgtoa@fp:
  7832                           
  7833                           ; 1 bytes @ 0x18
  7834     00B8                     	ds	1
  7835     00B9                     efgtoa@e:
  7836                           
  7837                           ; 2 bytes @ 0x19
  7838     00B9                     	ds	2
  7839     00BB                     efgtoa@w:
  7840                           
  7841                           ; 2 bytes @ 0x1B
  7842     00BB                     	ds	2
  7843     00BD                     efgtoa@ou:
  7844                           
  7845                           ; 4 bytes @ 0x1D
  7846     00BD                     	ds	4
  7847     00C1                     efgtoa@i:
  7848                           
  7849                           ; 2 bytes @ 0x21
  7850     00C1                     	ds	2
  7851     00C3                     efgtoa@h:
  7852                           
  7853                           ; 4 bytes @ 0x23
  7854     00C3                     	ds	4
  7855     00C7                     efgtoa@l:
  7856                           
  7857                           ; 4 bytes @ 0x27
  7858     00C7                     	ds	4
  7859     00CB                     efgtoa@sign:
  7860                           
  7861                           ; 1 bytes @ 0x2B
  7862     00CB                     	ds	1
  7863     00CC                     efgtoa@n:
  7864                           
  7865                           ; 2 bytes @ 0x2C
  7866     00CC                     	ds	2
  7867     00CE                     efgtoa@g:
  7868                           
  7869                           ; 4 bytes @ 0x2E
  7870     00CE                     	ds	4
  7871     00D2                     efgtoa@u:
  7872                           
  7873                           ; 4 bytes @ 0x32
  7874     00D2                     	ds	4
  7875     00D6                     ??_vfpfcnvrt:
  7876                           
  7877                           ; 1 bytes @ 0x36
  7878     00D6                     	ds	4
  7879     00DA                     vfpfcnvrt@convarg:
  7880                           
  7881                           ; 4 bytes @ 0x3A
  7882     00DA                     	ds	4
  7883     00DE                     vfpfcnvrt@fp:
  7884                           
  7885                           ; 1 bytes @ 0x3E
  7886     00DE                     	ds	1
  7887     00DF                     vfpfcnvrt@c:
  7888                           
  7889                           ; 1 bytes @ 0x3F
  7890     00DF                     	ds	1
  7891     00E0                     vfpfcnvrt@cp:
  7892                           
  7893                           ; 2 bytes @ 0x40
  7894     00E0                     	ds	2
  7895     00E2                     ?_vfprintf:
  7896     00E2                     vfprintf@fmt:	
  7897                           ; 2 bytes @ 0x42
  7898                           
  7899                           
  7900                           ; 2 bytes @ 0x42
  7901     00E2                     	ds	2
  7902     00E4                     vfprintf@ap:
  7903                           
  7904                           ; 1 bytes @ 0x44
  7905     00E4                     	ds	1
  7906     00E5                     ??_vfprintf:
  7907                           
  7908                           ; 1 bytes @ 0x45
  7909     00E5                     	ds	1
  7910     00E6                     vfprintf@fp:
  7911                           
  7912                           ; 1 bytes @ 0x46
  7913     00E6                     	ds	1
  7914     00E7                     vfprintf@cfmt:
  7915                           
  7916                           ; 2 bytes @ 0x47
  7917     00E7                     	ds	2
  7918     00E9                     ?_sprintf:
  7919     00E9                     sprintf@fmt:	
  7920                           ; 2 bytes @ 0x49
  7921                           
  7922                           
  7923                           ; 2 bytes @ 0x49
  7924     00E9                     	ds	6
  7925     00EF                     ??_sprintf:
  7926                           
  7927                           ; 1 bytes @ 0x4F
  7928     00EF                     	ds	1
  7929                           
  7930                           	psect	cstackCOMMON
  7931     0070                     __pcstackCOMMON:
  7932     0070                     ?___fleq:
  7933     0070                     ?_I2C1_Initialize:	
  7934                           ; 1 bit 
  7935                           
  7936     0070                     ?_I2C1_EVENT_IDLE:	
  7937                           ; 1 bytes @ 0x0
  7938                           
  7939     0070                     ??_I2C1_EVENT_IDLE:	
  7940                           ; 1 bytes @ 0x0
  7941                           
  7942     0070                     ?_I2C1_EVENT_SEND_RD_ADDR:	
  7943                           ; 1 bytes @ 0x0
  7944                           
  7945     0070                     ??_I2C1_EVENT_SEND_RD_ADDR:	
  7946                           ; 1 bytes @ 0x0
  7947                           
  7948     0070                     ?_I2C1_EVENT_SEND_WR_ADDR:	
  7949                           ; 1 bytes @ 0x0
  7950                           
  7951     0070                     ?_I2C1_EVENT_TX:	
  7952                           ; 1 bytes @ 0x0
  7953                           
  7954     0070                     ?_I2C1_EVENT_RX:	
  7955                           ; 1 bytes @ 0x0
  7956                           
  7957     0070                     ??_I2C1_EVENT_RX:	
  7958                           ; 1 bytes @ 0x0
  7959                           
  7960     0070                     ?_I2C1_EVENT_NACK:	
  7961                           ; 1 bytes @ 0x0
  7962                           
  7963     0070                     ??_I2C1_EVENT_NACK:	
  7964                           ; 1 bytes @ 0x0
  7965                           
  7966     0070                     ?_I2C1_EVENT_ERROR:	
  7967                           ; 1 bytes @ 0x0
  7968                           
  7969     0070                     ??_I2C1_EVENT_ERROR:	
  7970                           ; 1 bytes @ 0x0
  7971                           
  7972     0070                     ?_I2C1_EVENT_STOP:	
  7973                           ; 1 bytes @ 0x0
  7974                           
  7975     0070                     ??_I2C1_EVENT_STOP:	
  7976                           ; 1 bytes @ 0x0
  7977                           
  7978     0070                     ?_I2C1_EVENT_RESET:	
  7979                           ; 1 bytes @ 0x0
  7980                           
  7981     0070                     ??_I2C1_EVENT_RESET:	
  7982                           ; 1 bytes @ 0x0
  7983                           
  7984     0070                     ?_I2C1_DefaultCallback:	
  7985                           ; 1 bytes @ 0x0
  7986                           
  7987     0070                     ??_I2C1_DefaultCallback:	
  7988                           ; 1 bytes @ 0x0
  7989                           
  7990     0070                     ?_I2C1_EventHandler:	
  7991                           ; 1 bytes @ 0x0
  7992                           
  7993     0070                     ?_I2C1_ErrorEventHandler:	
  7994                           ; 1 bytes @ 0x0
  7995                           
  7996     0070                     ?_I2C1_InterruptClear:	
  7997                           ; 1 bytes @ 0x0
  7998                           
  7999     0070                     ??_I2C1_InterruptClear:	
  8000                           ; 1 bytes @ 0x0
  8001                           
  8002     0070                     ?_I2C1_ErrorInterruptClear:	
  8003                           ; 1 bytes @ 0x0
  8004                           
  8005     0070                     ??_I2C1_ErrorInterruptClear:	
  8006                           ; 1 bytes @ 0x0
  8007                           
  8008     0070                     ?_I2C1_StatusFlagsClear:	
  8009                           ; 1 bytes @ 0x0
  8010                           
  8011     0070                     ??_I2C1_StatusFlagsClear:	
  8012                           ; 1 bytes @ 0x0
  8013                           
  8014     0070                     ?_I2C1_IsAddr:	
  8015                           ; 1 bytes @ 0x0
  8016                           
  8017     0070                     ??_I2C1_IsAddr:	
  8018                           ; 1 bytes @ 0x0
  8019                           
  8020     0070                     ?_I2C1_IsNack:	
  8021                           ; 1 bytes @ 0x0
  8022                           
  8023     0070                     ??_I2C1_IsNack:	
  8024                           ; 1 bytes @ 0x0
  8025                           
  8026     0070                     ?_I2C1_IsData:	
  8027                           ; 1 bytes @ 0x0
  8028                           
  8029     0070                     ??_I2C1_IsData:	
  8030                           ; 1 bytes @ 0x0
  8031                           
  8032     0070                     ?_I2C1_DataTransmit:	
  8033                           ; 1 bytes @ 0x0
  8034                           
  8035     0070                     ??_I2C1_DataTransmit:	
  8036                           ; 1 bytes @ 0x0
  8037                           
  8038     0070                     ?_I2C1_RestartEnable:	
  8039                           ; 1 bytes @ 0x0
  8040                           
  8041     0070                     ??_I2C1_RestartEnable:	
  8042                           ; 1 bytes @ 0x0
  8043                           
  8044     0070                     ?_I2C1_IsRxBufFull:	
  8045                           ; 1 bytes @ 0x0
  8046                           
  8047     0070                     ??_I2C1_IsRxBufFull:	
  8048                           ; 1 bytes @ 0x0
  8049                           
  8050     0070                     ?_I2C1_DataReceive:	
  8051                           ; 1 bytes @ 0x0
  8052                           
  8053     0070                     ??_I2C1_DataReceive:	
  8054                           ; 1 bytes @ 0x0
  8055                           
  8056     0070                     ?_I2C1_AckSend:	
  8057                           ; 1 bytes @ 0x0
  8058                           
  8059     0070                     ??_I2C1_AckSend:	
  8060                           ; 1 bytes @ 0x0
  8061                           
  8062     0070                     ?_I2C1_RestartDisable:	
  8063                           ; 1 bytes @ 0x0
  8064                           
  8065     0070                     ??_I2C1_RestartDisable:	
  8066                           ; 1 bytes @ 0x0
  8067                           
  8068     0070                     ?_I2C1_NackSend:	
  8069                           ; 1 bytes @ 0x0
  8070                           
  8071     0070                     ??_I2C1_NackSend:	
  8072                           ; 1 bytes @ 0x0
  8073                           
  8074     0070                     ?_I2C1_ReceiveEnable:	
  8075                           ; 1 bytes @ 0x0
  8076                           
  8077     0070                     ??_I2C1_ReceiveEnable:	
  8078                           ; 1 bytes @ 0x0
  8079                           
  8080     0070                     ?_I2C1_StopSend:	
  8081                           ; 1 bytes @ 0x0
  8082                           
  8083     0070                     ??_I2C1_StopSend:	
  8084                           ; 1 bytes @ 0x0
  8085                           
  8086     0070                     ?_I2C1_BusReset:	
  8087                           ; 1 bytes @ 0x0
  8088                           
  8089     0070                     ??_I2C1_BusReset:	
  8090                           ; 1 bytes @ 0x0
  8091                           
  8092     0070                     ?_CLOCK_Initialize:	
  8093                           ; 1 bytes @ 0x0
  8094                           
  8095     0070                     ?_PIN_MANAGER_Initialize:	
  8096                           ; 1 bytes @ 0x0
  8097                           
  8098     0070                     ?_EUSART_Initialize:	
  8099                           ; 1 bytes @ 0x0
  8100                           
  8101     0070                     ?_Timer0_Initialize:	
  8102                           ; 1 bytes @ 0x0
  8103                           
  8104     0070                     ?_TMR1_Initialize:	
  8105                           ; 1 bytes @ 0x0
  8106                           
  8107     0070                     ?_TMR2_Initialize:	
  8108                           ; 1 bytes @ 0x0
  8109                           
  8110     0070                     ?_TMR4_Initialize:	
  8111                           ; 1 bytes @ 0x0
  8112                           
  8113     0070                     ?_INTERRUPT_Initialize:	
  8114                           ; 1 bytes @ 0x0
  8115                           
  8116     0070                     ?_Timer0_OverflowISR:	
  8117                           ; 1 bytes @ 0x0
  8118                           
  8119     0070                     ?_TMR2_DefaultOverflowCallback:	
  8120                           ; 1 bytes @ 0x0
  8121                           
  8122     0070                     ??_TMR2_DefaultOverflowCallback:	
  8123                           ; 1 bytes @ 0x0
  8124                           
  8125     0070                     ?_Timer0_DefaultOverflowCallback:	
  8126                           ; 1 bytes @ 0x0
  8127                           
  8128     0070                     ?_TMR0_Custom_ISR:	
  8129                           ; 1 bytes @ 0x0
  8130                           
  8131     0070                     ?_TMR1_Start:	
  8132                           ; 1 bytes @ 0x0
  8133                           
  8134     0070                     ??_TMR1_Start:	
  8135                           ; 1 bytes @ 0x0
  8136                           
  8137     0070                     ?_TMR1_Stop:	
  8138                           ; 1 bytes @ 0x0
  8139                           
  8140     0070                     ??_TMR1_Stop:	
  8141                           ; 1 bytes @ 0x0
  8142                           
  8143     0070                     ?_TMR1_DefaultOverflowCallback:	
  8144                           ; 1 bytes @ 0x0
  8145                           
  8146     0070                     ??_TMR1_DefaultOverflowCallback:	
  8147                           ; 1 bytes @ 0x0
  8148                           
  8149     0070                     ?_TMR4_DefaultOverflowCallback:	
  8150                           ; 1 bytes @ 0x0
  8151                           
  8152     0070                     ??_TMR4_DefaultOverflowCallback:	
  8153                           ; 1 bytes @ 0x0
  8154                           
  8155     0070                     ?_EUSART_ReceiveISR:	
  8156                           ; 1 bytes @ 0x0
  8157                           
  8158     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  8159                           ; 1 bytes @ 0x0
  8160                           
  8161     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  8162                           ; 1 bytes @ 0x0
  8163                           
  8164     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  8165                           ; 1 bytes @ 0x0
  8166                           
  8167     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  8168                           ; 1 bytes @ 0x0
  8169                           
  8170     0070                     ?_UART_Custom_ISR:	
  8171                           ; 1 bytes @ 0x0
  8172                           
  8173     0070                     ?_IO_Expander_Write:	
  8174                           ; 1 bytes @ 0x0
  8175                           
  8176     0070                     ?_LCD_CMD:	
  8177                           ; 1 bytes @ 0x0
  8178                           
  8179     0070                     ?_shift_out_to_motors:	
  8180                           ; 1 bytes @ 0x0
  8181                           
  8182     0070                     ?_strcpy:	
  8183                           ; 1 bytes @ 0x0
  8184                           
  8185     0070                     ?_memcpy:	
  8186                           ; 1 bytes @ 0x0
  8187                           
  8188     0070                     ?_putch:	
  8189                           ; 1 bytes @ 0x0
  8190                           
  8191     0070                     ??_putch:	
  8192                           ; 1 bytes @ 0x0
  8193                           
  8194     0070                     ?_ADC_Initialize:	
  8195                           ; 1 bytes @ 0x0
  8196                           
  8197     0070                     ?_I2C1_ISR:	
  8198                           ; 1 bytes @ 0x0
  8199                           
  8200     0070                     ?_I2C1_ERROR_ISR:	
  8201                           ; 1 bytes @ 0x0
  8202                           
  8203     0070                     ?_I2C1_Close:	
  8204                           ; 1 bytes @ 0x0
  8205                           
  8206     0070                     ??_I2C1_Close:	
  8207                           ; 1 bytes @ 0x0
  8208                           
  8209     0070                     ?_CCP1_Initialize:	
  8210                           ; 1 bytes @ 0x0
  8211                           
  8212     0070                     ?_CCP2_Initialize:	
  8213                           ; 1 bytes @ 0x0
  8214                           
  8215     0070                     ?_SYSTEM_Initialize:	
  8216                           ; 1 bytes @ 0x0
  8217                           
  8218     0070                     ?_INTERRUPT_InterruptManager:	
  8219                           ; 1 bytes @ 0x0
  8220                           
  8221     0070                     ?_I2C_Master_Init:	
  8222                           ; 1 bytes @ 0x0
  8223                           
  8224     0070                     ?_I2C_Master_Wait:	
  8225                           ; 1 bytes @ 0x0
  8226                           
  8227     0070                     ?_I2C_Master_Start:	
  8228                           ; 1 bytes @ 0x0
  8229                           
  8230     0070                     ?_I2C_Master_Stop:	
  8231                           ; 1 bytes @ 0x0
  8232                           
  8233     0070                     ?_I2C_Master_Write:	
  8234                           ; 1 bytes @ 0x0
  8235                           
  8236     0070                     ?_LCD_Init:	
  8237                           ; 1 bytes @ 0x0
  8238                           
  8239     0070                     ?_LCD_Write_4Bit:	
  8240                           ; 1 bytes @ 0x0
  8241                           
  8242     0070                     ?_LCD_Write_Char:	
  8243                           ; 1 bytes @ 0x0
  8244                           
  8245     0070                     ?_Backlight:	
  8246                           ; 1 bytes @ 0x0
  8247                           
  8248     0070                     ?_LCD_Clear:	
  8249                           ; 1 bytes @ 0x0
  8250                           
  8251     0070                     ?i1_I2C_Master_Wait:	
  8252                           ; 1 bytes @ 0x0
  8253                           
  8254     0070                     ??i1_I2C_Master_Wait:	
  8255                           ; 1 bytes @ 0x0
  8256                           
  8257     0070                     ?i1_I2C_Master_Start:	
  8258                           ; 1 bytes @ 0x0
  8259                           
  8260     0070                     ??i1_I2C_Master_Start:	
  8261                           ; 1 bytes @ 0x0
  8262                           
  8263     0070                     ?i1_I2C_Master_Stop:	
  8264                           ; 1 bytes @ 0x0
  8265                           
  8266     0070                     ??i1_I2C_Master_Stop:	
  8267                           ; 1 bytes @ 0x0
  8268                           
  8269     0070                     ?i1_I2C_Master_Write:	
  8270                           ; 1 bytes @ 0x0
  8271                           
  8272     0070                     ??i1_I2C_Master_Write:	
  8273                           ; 1 bytes @ 0x0
  8274                           
  8275     0070                     ?i1_IO_Expander_Write:	
  8276                           ; 1 bytes @ 0x0
  8277                           
  8278     0070                     ?i1_LCD_Write_4Bit:	
  8279                           ; 1 bytes @ 0x0
  8280                           
  8281     0070                     ?i1_LCD_CMD:	
  8282                           ; 1 bytes @ 0x0
  8283                           
  8284     0070                     ?__Umul8_16:	
  8285                           ; 1 bytes @ 0x0
  8286                           
  8287     0070                     ?_fputc:	
  8288                           ; 2 bytes @ 0x0
  8289                           
  8290     0070                     ?___fpclassifyf:	
  8291                           ; 2 bytes @ 0x0
  8292                           
  8293     0070                     ?_ADC_GetConversion:	
  8294                           ; 2 bytes @ 0x0
  8295                           
  8296     0070                     ?_main:	
  8297                           ; 2 bytes @ 0x0
  8298                           
  8299     0070                     ?___wmul:	
  8300                           ; 2 bytes @ 0x0
  8301                           
  8302     0070                     ?_labs:	
  8303                           ; 2 bytes @ 0x0
  8304                           
  8305     0070                     ?___flneg:	
  8306                           ; 4 bytes @ 0x0
  8307                           
  8308     0070                     ?___fltol:	
  8309                           ; 4 bytes @ 0x0
  8310                           
  8311     0070                     ?___fladd:	
  8312                           ; 4 bytes @ 0x0
  8313                           
  8314     0070                     I2C1_EVENT_NACK@retEventState:	
  8315                           ; 4 bytes @ 0x0
  8316                           
  8317     0070                     I2C1_EVENT_ERROR@retEventState:	
  8318                           ; 1 bytes @ 0x0
  8319                           
  8320     0070                     I2C1_DataTransmit@data:	
  8321                           ; 1 bytes @ 0x0
  8322                           
  8323     0070                     __Umul8_16@multiplicand:	
  8324                           ; 1 bytes @ 0x0
  8325                           
  8326     0070                     memcpy@s1:	
  8327                           ; 1 bytes @ 0x0
  8328                           
  8329     0070                     putch@c:	
  8330                           ; 1 bytes @ 0x0
  8331                           
  8332     0070                     i1I2C_Master_Write@data:	
  8333                           ; 1 bytes @ 0x0
  8334                           
  8335     0070                     ___wmul@multiplier:	
  8336                           ; 1 bytes @ 0x0
  8337                           
  8338     0070                     fputc@c:	
  8339                           ; 2 bytes @ 0x0
  8340                           
  8341     0070                     strcpy@src:	
  8342                           ; 2 bytes @ 0x0
  8343                           
  8344     0070                     ___fleq@ff1:	
  8345                           ; 2 bytes @ 0x0
  8346                           
  8347     0070                     ___flneg@f1:	
  8348                           ; 4 bytes @ 0x0
  8349                           
  8350     0070                     ___fltol@f1:	
  8351                           ; 4 bytes @ 0x0
  8352                           
  8353     0070                     ___fladd@b:	
  8354                           ; 4 bytes @ 0x0
  8355                           
  8356     0070                     ___fpclassifyf@x:	
  8357                           ; 4 bytes @ 0x0
  8358                           
  8359     0070                     labs@a:	
  8360                           ; 4 bytes @ 0x0
  8361                           
  8362                           
  8363                           ; 4 bytes @ 0x0
  8364     0070                     	ds	1
  8365     0071                     ??_I2C1_EVENT_SEND_WR_ADDR:
  8366     0071                     ??_I2C1_EVENT_TX:	
  8367                           ; 1 bytes @ 0x1
  8368                           
  8369     0071                     ??i1_IO_Expander_Write:	
  8370                           ; 1 bytes @ 0x1
  8371                           
  8372     0071                     I2C1_EVENT_RX@retEventState:	
  8373                           ; 1 bytes @ 0x1
  8374                           
  8375     0071                     i1IO_Expander_Write@Data:	
  8376                           ; 1 bytes @ 0x1
  8377                           
  8378     0071                     memcpy@n:	
  8379                           ; 1 bytes @ 0x1
  8380                           
  8381                           
  8382                           ; 2 bytes @ 0x1
  8383     0071                     	ds	1
  8384     0072                     ??__Umul8_16:
  8385     0072                     ??_strcpy:	
  8386                           ; 1 bytes @ 0x2
  8387                           
  8388     0072                     ??_ADC_GetConversion:	
  8389                           ; 1 bytes @ 0x2
  8390                           
  8391     0072                     ??_Backlight:	
  8392                           ; 1 bytes @ 0x2
  8393                           
  8394     0072                     ??i1_LCD_Write_4Bit:	
  8395                           ; 1 bytes @ 0x2
  8396                           
  8397     0072                     fputc@fp:	
  8398                           ; 1 bytes @ 0x2
  8399                           
  8400     0072                     ___wmul@multiplicand:	
  8401                           ; 1 bytes @ 0x2
  8402                           
  8403                           
  8404                           ; 2 bytes @ 0x2
  8405     0072                     	ds	1
  8406     0073                     ??_fputc:
  8407     0073                     ??_memcpy:	
  8408                           ; 1 bytes @ 0x3
  8409                           
  8410     0073                     ADC_GetConversion@channel:	
  8411                           ; 1 bytes @ 0x3
  8412                           
  8413     0073                     I2C1_EVENT_TX@retEventState:	
  8414                           ; 1 bytes @ 0x3
  8415                           
  8416     0073                     i1LCD_Write_4Bit@Nibble:	
  8417                           ; 1 bytes @ 0x3
  8418                           
  8419                           
  8420                           ; 1 bytes @ 0x3
  8421     0073                     	ds	1
  8422     0074                     ??_I2C1_EventHandler:
  8423     0074                     ??_I2C1_ErrorEventHandler:	
  8424                           ; 1 bytes @ 0x4
  8425                           
  8426     0074                     ??___fpclassifyf:	
  8427                           ; 1 bytes @ 0x4
  8428                           
  8429     0074                     ??_labs:	
  8430                           ; 1 bytes @ 0x4
  8431                           
  8432     0074                     ??_LCD_Write_Char:	
  8433                           ; 1 bytes @ 0x4
  8434                           
  8435     0074                     ??___wmul:	
  8436                           ; 1 bytes @ 0x4
  8437                           
  8438     0074                     ??___flneg:	
  8439                           ; 1 bytes @ 0x4
  8440                           
  8441     0074                     ??___fltol:	
  8442                           ; 1 bytes @ 0x4
  8443                           
  8444     0074                     ??i1_LCD_CMD:	
  8445                           ; 1 bytes @ 0x4
  8446                           
  8447     0074                     ?___xxtofl:	
  8448                           ; 1 bytes @ 0x4
  8449                           
  8450     0074                     memcpy@tmp:	
  8451                           ; 4 bytes @ 0x4
  8452                           
  8453     0074                     strcpy@d:	
  8454                           ; 1 bytes @ 0x4
  8455                           
  8456     0074                     ___wmul@product:	
  8457                           ; 1 bytes @ 0x4
  8458                           
  8459     0074                     __Umul8_16@product:	
  8460                           ; 2 bytes @ 0x4
  8461                           
  8462     0074                     ___fleq@ff2:	
  8463                           ; 2 bytes @ 0x4
  8464                           
  8465     0074                     ___fladd@a:	
  8466                           ; 4 bytes @ 0x4
  8467                           
  8468     0074                     ___xxtofl@val:	
  8469                           ; 4 bytes @ 0x4
  8470                           
  8471                           
  8472                           ; 4 bytes @ 0x4
  8473     0074                     	ds	1
  8474     0075                     LCD_Write_Char@Data:
  8475     0075                     memcpy@d1:	
  8476                           ; 1 bytes @ 0x5
  8477                           
  8478     0075                     strcpy@dest:	
  8479                           ; 1 bytes @ 0x5
  8480                           
  8481     0075                     i1LCD_CMD@CMD:	
  8482                           ; 1 bytes @ 0x5
  8483                           
  8484                           
  8485                           ; 1 bytes @ 0x5
  8486     0075                     	ds	1
  8487     0076                     ??_I2C1_ISR:
  8488     0076                     ??_I2C1_ERROR_ISR:	
  8489                           ; 1 bytes @ 0x6
  8490                           
  8491     0076                     ?_LCD_Write_String:	
  8492                           ; 1 bytes @ 0x6
  8493                           
  8494     0076                     ?_LCD_Set_Cursor:	
  8495                           ; 1 bytes @ 0x6
  8496                           
  8497     0076                     ??_LCD_Clear:	
  8498                           ; 1 bytes @ 0x6
  8499                           
  8500     0076                     ?_read_prec_or_width:	
  8501                           ; 1 bytes @ 0x6
  8502                           
  8503     0076                     LCD_Set_Cursor@COL:	
  8504                           ; 2 bytes @ 0x6
  8505                           
  8506     0076                     read_prec_or_width@ap:	
  8507                           ; 1 bytes @ 0x6
  8508                           
  8509     0076                     memcpy@d:	
  8510                           ; 1 bytes @ 0x6
  8511                           
  8512     0076                     LCD_Write_String@Str:	
  8513                           ; 1 bytes @ 0x6
  8514                           
  8515     0076                     __Umul8_16@word_mpld:	
  8516                           ; 2 bytes @ 0x6
  8517                           
  8518                           
  8519                           ; 2 bytes @ 0x6
  8520     0076                     	ds	1
  8521     0077                     ??_LCD_Set_Cursor:
  8522     0077                     LCD_Set_Cursor@ROW:	
  8523                           ; 1 bytes @ 0x7
  8524                           
  8525     0077                     memcpy@s:	
  8526                           ; 1 bytes @ 0x7
  8527                           
  8528                           
  8529                           ; 1 bytes @ 0x7
  8530     0077                     	ds	1
  8531     0078                     ??_LCD_Write_String:
  8532     0078                     ??___fleq:	
  8533                           ; 1 bytes @ 0x8
  8534                           
  8535     0078                     ??___xxtofl:	
  8536                           ; 1 bytes @ 0x8
  8537                           
  8538     0078                     ??_read_prec_or_width:	
  8539                           ; 1 bytes @ 0x8
  8540                           
  8541     0078                     ?_fputs:	
  8542                           ; 1 bytes @ 0x8
  8543                           
  8544     0078                     ___fltol@sign1:	
  8545                           ; 2 bytes @ 0x8
  8546                           
  8547     0078                     ___fladd@signs:	
  8548                           ; 1 bytes @ 0x8
  8549                           
  8550     0078                     __Umul8_16@multiplier:	
  8551                           ; 1 bytes @ 0x8
  8552                           
  8553     0078                     fputs@fp:	
  8554                           ; 1 bytes @ 0x8
  8555                           
  8556                           
  8557                           ; 1 bytes @ 0x8
  8558     0078                     	ds	1
  8559     0079                     ??_fputs:
  8560     0079                     ___fltol@exp1:	
  8561                           ; 1 bytes @ 0x9
  8562                           
  8563     0079                     ___fladd@aexp:	
  8564                           ; 1 bytes @ 0x9
  8565                           
  8566     0079                     LCD_Write_String@i:	
  8567                           ; 1 bytes @ 0x9
  8568                           
  8569                           
  8570                           ; 2 bytes @ 0x9
  8571     0079                     	ds	1
  8572     007A                     ___fladd@bexp:
  8573                           
  8574                           ; 1 bytes @ 0xA
  8575     007A                     	ds	1
  8576     007B                     ?_pad:
  8577     007B                     ___fladd@grs:	
  8578                           ; 1 bytes @ 0xB
  8579                           
  8580     007B                     pad@buf:	
  8581                           ; 1 bytes @ 0xB
  8582                           
  8583                           
  8584                           ; 1 bytes @ 0xB
  8585     007B                     	ds	1
  8586     007C                     ??___flsub:
  8587     007C                     pad@p:	
  8588                           ; 1 bytes @ 0xC
  8589                           
  8590                           
  8591                           ; 2 bytes @ 0xC
  8592     007C                     	ds	2
  8593     007E                     ??_Timer0_OverflowISR:
  8594     007E                     ??_Timer0_DefaultOverflowCallback:	
  8595                           ; 1 bytes @ 0xE
  8596                           
  8597     007E                     ??_INTERRUPT_InterruptManager:	
  8598                           ; 1 bytes @ 0xE
  8599                           
  8600                           
  8601                           	psect	cstackBANK0
  8602     0020                     __pcstackBANK0:	
  8603                           ; 1 bytes @ 0xE
  8604                           
  8605     0020                     ??___fladd:
  8606     0020                     ___xxtofl@sign:	
  8607                           ; 1 bytes @ 0x0
  8608                           
  8609     0020                     read_prec_or_width@c:	
  8610                           ; 1 bytes @ 0x0
  8611                           
  8612     0020                     fputs@c:	
  8613                           ; 1 bytes @ 0x0
  8614                           
  8615     0020                     ___fpclassifyf@e:	
  8616                           ; 1 bytes @ 0x0
  8617                           
  8618                           
  8619                           ; 2 bytes @ 0x0
  8620     0020                     	ds	1
  8621     0021                     ___xxtofl@exp:
  8622     0021                     read_prec_or_width@n:	
  8623                           ; 1 bytes @ 0x1
  8624                           
  8625     0021                     fputs@i:	
  8626                           ; 2 bytes @ 0x1
  8627                           
  8628                           
  8629                           ; 2 bytes @ 0x1
  8630     0021                     	ds	1
  8631     0022                     ___xxtofl@arg:
  8632     0022                     ___fpclassifyf@u:	
  8633                           ; 4 bytes @ 0x2
  8634                           
  8635                           
  8636                           ; 4 bytes @ 0x2
  8637     0022                     	ds	1
  8638     0023                     read_prec_or_width@fmt:
  8639     0023                     fputs@s:	
  8640                           ; 1 bytes @ 0x3
  8641                           
  8642                           
  8643                           ; 1 bytes @ 0x3
  8644     0023                     	ds	1
  8645     0024                     ??_pad:
  8646                           
  8647                           ; 1 bytes @ 0x4
  8648     0024                     	ds	1
  8649     0025                     pad@i:
  8650                           
  8651                           ; 2 bytes @ 0x5
  8652     0025                     	ds	1
  8653     0026                     ?___flmul:
  8654     0026                     ___flmul@b:	
  8655                           ; 4 bytes @ 0x6
  8656                           
  8657                           
  8658                           ; 4 bytes @ 0x6
  8659     0026                     	ds	1
  8660     0027                     pad@fp:
  8661                           
  8662                           ; 1 bytes @ 0x7
  8663     0027                     	ds	1
  8664     0028                     ?_xtoa:
  8665     0028                     xtoa@d:	
  8666                           ; 1 bytes @ 0x8
  8667                           
  8668                           
  8669                           ; 2 bytes @ 0x8
  8670     0028                     	ds	2
  8671     002A                     ??_xtoa:
  8672     002A                     ___flmul@a:	
  8673                           ; 1 bytes @ 0xA
  8674                           
  8675                           
  8676                           ; 4 bytes @ 0xA
  8677     002A                     	ds	1
  8678     002B                     xtoa@w:
  8679                           
  8680                           ; 2 bytes @ 0xB
  8681     002B                     	ds	2
  8682     002D                     xtoa@fp:
  8683                           
  8684                           ; 1 bytes @ 0xD
  8685     002D                     	ds	1
  8686     002E                     ??___flmul:
  8687     002E                     xtoa@p:	
  8688                           ; 1 bytes @ 0xE
  8689                           
  8690                           
  8691                           ; 2 bytes @ 0xE
  8692     002E                     	ds	2
  8693     0030                     xtoa@c:
  8694                           
  8695                           ; 1 bytes @ 0x10
  8696     0030                     	ds	1
  8697     0031                     xtoa@i:
  8698                           
  8699                           ; 2 bytes @ 0x11
  8700     0031                     	ds	2
  8701     0033                     ___flmul@sign:
  8702                           
  8703                           ; 1 bytes @ 0x13
  8704     0033                     	ds	1
  8705     0034                     ___flmul@grs:
  8706                           
  8707                           ; 4 bytes @ 0x14
  8708     0034                     	ds	4
  8709     0038                     ___flmul@aexp:
  8710                           
  8711                           ; 1 bytes @ 0x18
  8712     0038                     	ds	1
  8713     0039                     ___flmul@bexp:
  8714                           
  8715                           ; 1 bytes @ 0x19
  8716     0039                     	ds	1
  8717     003A                     ___flmul@prod:
  8718                           
  8719                           ; 4 bytes @ 0x1A
  8720     003A                     	ds	4
  8721     003E                     ___flmul@temp:
  8722                           
  8723                           ; 2 bytes @ 0x1E
  8724     003E                     	ds	2
  8725     0040                     ?___flge:
  8726     0040                     ?___flsub:	
  8727                           ; 1 bit 
  8728                           
  8729     0040                     ?___fldiv:	
  8730                           ; 4 bytes @ 0x20
  8731                           
  8732     0040                     ___flge@ff1:	
  8733                           ; 4 bytes @ 0x20
  8734                           
  8735     0040                     ___flsub@a:	
  8736                           ; 4 bytes @ 0x20
  8737                           
  8738     0040                     ___fldiv@a:	
  8739                           ; 4 bytes @ 0x20
  8740                           
  8741                           
  8742                           ; 4 bytes @ 0x20
  8743     0040                     	ds	4
  8744     0044                     ___flge@ff2:
  8745     0044                     ___flsub@b:	
  8746                           ; 4 bytes @ 0x24
  8747                           
  8748     0044                     ___fldiv@b:	
  8749                           ; 4 bytes @ 0x24
  8750                           
  8751                           
  8752                           ; 4 bytes @ 0x24
  8753     0044                     	ds	4
  8754     0048                     ??___flge:
  8755     0048                     ??___fldiv:	
  8756                           ; 1 bytes @ 0x28
  8757                           
  8758                           
  8759                           ; 1 bytes @ 0x28
  8760     0048                     	ds	5
  8761     004D                     ___fldiv@rem:
  8762                           
  8763                           ; 4 bytes @ 0x2D
  8764     004D                     	ds	4
  8765     0051                     ___fldiv@sign:
  8766                           
  8767                           ; 1 bytes @ 0x31
  8768     0051                     	ds	1
  8769     0052                     ___fldiv@new_exp:
  8770                           
  8771                           ; 2 bytes @ 0x32
  8772     0052                     	ds	2
  8773     0054                     ___fldiv@grs:
  8774                           
  8775                           ; 4 bytes @ 0x34
  8776     0054                     	ds	4
  8777     0058                     ___fldiv@bexp:
  8778                           
  8779                           ; 1 bytes @ 0x38
  8780     0058                     	ds	1
  8781     0059                     ___fldiv@aexp:
  8782                           
  8783                           ; 1 bytes @ 0x39
  8784     0059                     	ds	1
  8785     005A                     ?_floorf:
  8786     005A                     floorf@x:	
  8787                           ; 4 bytes @ 0x3A
  8788                           
  8789                           
  8790                           ; 4 bytes @ 0x3A
  8791     005A                     	ds	4
  8792     005E                     ??_floorf:
  8793                           
  8794                           ; 1 bytes @ 0x3E
  8795     005E                     	ds	6
  8796     0064                     floorf@m:
  8797                           
  8798                           ; 4 bytes @ 0x44
  8799     0064                     	ds	4
  8800     0068                     floorf@e:
  8801                           
  8802                           ; 2 bytes @ 0x48
  8803     0068                     	ds	2
  8804     006A                     floorf@u:
  8805                           
  8806                           ; 4 bytes @ 0x4A
  8807     006A                     	ds	4
  8808     006E                     ?_vfpfcnvrt:
  8809     006E                     vfpfcnvrt@fmt:	
  8810                           ; 1 bytes @ 0x4E
  8811                           
  8812                           
  8813                           ; 1 bytes @ 0x4E
  8814     006E                     	ds	1
  8815     006F                     vfpfcnvrt@ap:
  8816                           
  8817                           ; 1 bytes @ 0x4F
  8818     006F                     	ds	1
  8819                           
  8820                           	psect	maintext
  8821     15BB                     __pmaintext:	
  8822 ;;
  8823 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8824 ;;
  8825 ;; *************** function _main *****************
  8826 ;; Defined at:
  8827 ;;		line 113 in file "main.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;		None
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  2  1143[None  ] int 
  8834 ;; Registers used:
  8835 ;;		wreg, status,2, status,0, pclath, cstack
  8836 ;; Tracked objects:
  8837 ;;		On entry : B1F/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  8845 ;;Total ram usage:        2 bytes
  8846 ;; Hardware stack levels required when called: 18
  8847 ;; This function calls:
  8848 ;;		_CCP2_LoadDutyValue
  8849 ;;		_I2C_Master_Init
  8850 ;;		_LCD_Init
  8851 ;;		_SYSTEM_Initialize
  8852 ;;		_shift_out_to_motors
  8853 ;; This function is called by:
  8854 ;;		Startup code after reset
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858     15BB                     _main:	
  8859                           ;psect for function _main
  8860                           
  8861     15BB                     l6639:	
  8862                           ;incstack = 0
  8863 ;; hardware stack exceeded
  8864                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  8865                           
  8866                           
  8867                           ;main.c: 115:     SYSTEM_Initialize();
  8868     15BB  319F  2759  3195   	fcall	_SYSTEM_Initialize
  8869     15BE                     l6641:
  8870                           
  8871                           ;main.c: 118:     PIE1bits.SSP1IE = 0;
  8872     15BE  0021               	movlb	1	; select bank1
  8873     15BF  1190               	bcf	16,3	;volatile
  8874     15C0                     l6643:
  8875                           
  8876                           ;main.c: 119:     PIE2bits.BCL1IE = 0;
  8877     15C0  1191               	bcf	17,3	;volatile
  8878     15C1                     l6645:
  8879                           
  8880                           ;main.c: 122:     (INTCONbits.GIE = 1);
  8881     15C1  178B               	bsf	11,7	;volatile
  8882     15C2                     l6647:
  8883                           
  8884                           ;main.c: 128:     (INTCONbits.PEIE = 1);
  8885     15C2  170B               	bsf	11,6	;volatile
  8886                           
  8887                           ;main.c: 133:     I2C_Master_Init();
  8888     15C3  319C  2414  3195   	fcall	_I2C_Master_Init
  8889                           
  8890                           ;main.c: 134:     LCD_Init(0x4E);
  8891     15C6  304E               	movlw	78
  8892     15C7  3192  2297  3195   	fcall	_LCD_Init
  8893     15CA                     l6649:
  8894                           
  8895                           ;main.c: 137:     INTCONbits.TMR0IE = 0;
  8896     15CA  128B               	bcf	11,5	;volatile
  8897     15CB                     l6651:
  8898     15CB  0022               	movlb	2	; select bank2
  8899     15CC  120D               	bcf	13,4	;volatile
  8900     15CD                     l6653:
  8901     15CD  128D               	bcf	13,5	;volatile
  8902     15CE                     l6655:
  8903     15CE  130D               	bcf	13,6	;volatile
  8904     15CF                     l1149:
  8905                           
  8906                           ;main.c: 141:     CCP2_LoadDutyValue(300);
  8907     15CF  302C               	movlw	44
  8908     15D0  0023               	movlb	3	; select bank3
  8909     15D1  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  8910     15D2  3001               	movlw	1
  8911     15D3  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  8912     15D4  319D  25C7  3195   	fcall	_CCP2_LoadDutyValue
  8913     15D7                     l1151:	
  8914                           ;main.c: 144:     {;main.c: 154:         do { shift_out_to_motors(0b00010000 | 0b0000001
      +                          0 | 0b10000000 | 0b00000100); CCP2_LoadDutyValue(500);} while(0);
  8915                           
  8916     15D7  3096               	movlw	150
  8917     15D8  3190  20DC  3195   	fcall	_shift_out_to_motors
  8918     15DB  30F4               	movlw	244
  8919     15DC  0023               	movlb	3	; select bank3
  8920     15DD  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  8921     15DE  3001               	movlw	1
  8922     15DF  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  8923     15E0  319D  25C7  3195   	fcall	_CCP2_LoadDutyValue
  8924     15E3                     l6657:
  8925                           
  8926                           ;main.c: 155:         _delay((unsigned long)((700)*(4000000/4000.0)));
  8927     15E3  3004               	movlw	4
  8928     15E4  0023               	movlb	3	; select bank3
  8929     15E5  00C7               	movwf	(??_main^(0+384)+1)
  8930     15E6  308E               	movlw	142
  8931     15E7  00C6               	movwf	??_main^(0+384)
  8932     15E8  3012               	movlw	18
  8933     15E9                     u5677:
  8934     15E9  0B89               	decfsz	9,f
  8935     15EA  2DE9               	goto	u5677
  8936     15EB  0BC6               	decfsz	??_main^(0+384),f
  8937     15EC  2DE9               	goto	u5677
  8938     15ED  0BC7               	decfsz	(??_main^(0+384)+1),f
  8939     15EE  2DE9               	goto	u5677
  8940     15EF  0000               	nop
  8941     15F0                     l6659:
  8942     15F0  3069               	movlw	105
  8943     15F1  3190  20DC  3195   	fcall	_shift_out_to_motors
  8944     15F4                     l6661:
  8945     15F4  30F4               	movlw	244
  8946     15F5  0023               	movlb	3	; select bank3
  8947     15F6  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  8948     15F7  3001               	movlw	1
  8949     15F8  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  8950     15F9  319D  25C7  3195   	fcall	_CCP2_LoadDutyValue
  8951     15FC                     l6663:
  8952                           
  8953                           ;main.c: 157:         _delay((unsigned long)((700)*(4000000/4000.0)));
  8954     15FC  3004               	movlw	4
  8955     15FD  0023               	movlb	3	; select bank3
  8956     15FE  00C7               	movwf	(??_main^(0+384)+1)
  8957     15FF  308E               	movlw	142
  8958     1600  00C6               	movwf	??_main^(0+384)
  8959     1601  3012               	movlw	18
  8960     1602                     u5687:
  8961     1602  0B89               	decfsz	9,f
  8962     1603  2E02               	goto	u5687
  8963     1604  0BC6               	decfsz	??_main^(0+384),f
  8964     1605  2E02               	goto	u5687
  8965     1606  0BC7               	decfsz	(??_main^(0+384)+1),f
  8966     1607  2E02               	goto	u5687
  8967     1608  0000               	nop
  8968     1609                     l1155:	
  8969                           ;main.c: 158:         do { shift_out_to_motors(0b00010000 | 0b00000001 | 0b10000000 | 0b
      +                          00001000); CCP2_LoadDutyValue(500);} while(0);
  8970                           
  8971     1609  3099               	movlw	153
  8972     160A  3190  20DC  3195   	fcall	_shift_out_to_motors
  8973     160D  30F4               	movlw	244
  8974     160E  0023               	movlb	3	; select bank3
  8975     160F  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  8976     1610  3001               	movlw	1
  8977     1611  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  8978     1612  319D  25C7  3195   	fcall	_CCP2_LoadDutyValue
  8979     1615                     l6665:
  8980                           
  8981                           ;main.c: 159:         _delay((unsigned long)((700)*(4000000/4000.0)));
  8982     1615  3004               	movlw	4
  8983     1616  0023               	movlb	3	; select bank3
  8984     1617  00C7               	movwf	(??_main^(0+384)+1)
  8985     1618  308E               	movlw	142
  8986     1619  00C6               	movwf	??_main^(0+384)
  8987     161A  3012               	movlw	18
  8988     161B                     u5697:
  8989     161B  0B89               	decfsz	9,f
  8990     161C  2E1B               	goto	u5697
  8991     161D  0BC6               	decfsz	??_main^(0+384),f
  8992     161E  2E1B               	goto	u5697
  8993     161F  0BC7               	decfsz	(??_main^(0+384)+1),f
  8994     1620  2E1B               	goto	u5697
  8995     1621  0000               	nop
  8996     1622                     l6667:
  8997     1622  3066               	movlw	102
  8998     1623  3190  20DC  3195   	fcall	_shift_out_to_motors
  8999     1626                     l6669:
  9000     1626  30F4               	movlw	244
  9001     1627  0023               	movlb	3	; select bank3
  9002     1628  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  9003     1629  3001               	movlw	1
  9004     162A  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  9005     162B  319D  25C7  3195   	fcall	_CCP2_LoadDutyValue
  9006     162E                     l6671:
  9007                           
  9008                           ;main.c: 161:         _delay((unsigned long)((700)*(4000000/4000.0)));
  9009     162E  3004               	movlw	4
  9010     162F  0023               	movlb	3	; select bank3
  9011     1630  00C7               	movwf	(??_main^(0+384)+1)
  9012     1631  308E               	movlw	142
  9013     1632  00C6               	movwf	??_main^(0+384)
  9014     1633  3012               	movlw	18
  9015     1634                     u5707:
  9016     1634  0B89               	decfsz	9,f
  9017     1635  2E34               	goto	u5707
  9018     1636  0BC6               	decfsz	??_main^(0+384),f
  9019     1637  2E34               	goto	u5707
  9020     1638  0BC7               	decfsz	(??_main^(0+384)+1),f
  9021     1639  2E34               	goto	u5707
  9022     163A  0000               	nop
  9023     163B                     l1159:	
  9024                           ;main.c: 162:         do { shift_out_to_motors(0b00010000 | 0b00000001 | 0b01000000 | 0b
      +                          00000100); CCP2_LoadDutyValue(500);} while(0);
  9025                           
  9026     163B  3055               	movlw	85
  9027     163C  3190  20DC  3195   	fcall	_shift_out_to_motors
  9028     163F  30F4               	movlw	244
  9029     1640  0023               	movlb	3	; select bank3
  9030     1641  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  9031     1642  3001               	movlw	1
  9032     1643  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  9033     1644  319D  25C7  3195   	fcall	_CCP2_LoadDutyValue
  9034     1647                     l6673:
  9035                           
  9036                           ;main.c: 163:         _delay((unsigned long)((700)*(4000000/4000.0)));
  9037     1647  3004               	movlw	4
  9038     1648  0023               	movlb	3	; select bank3
  9039     1649  00C7               	movwf	(??_main^(0+384)+1)
  9040     164A  308E               	movlw	142
  9041     164B  00C6               	movwf	??_main^(0+384)
  9042     164C  3012               	movlw	18
  9043     164D                     u5717:
  9044     164D  0B89               	decfsz	9,f
  9045     164E  2E4D               	goto	u5717
  9046     164F  0BC6               	decfsz	??_main^(0+384),f
  9047     1650  2E4D               	goto	u5717
  9048     1651  0BC7               	decfsz	(??_main^(0+384)+1),f
  9049     1652  2E4D               	goto	u5717
  9050     1653  0000               	nop
  9051     1654                     l6675:
  9052     1654  30AA               	movlw	170
  9053     1655  3190  20DC  3195   	fcall	_shift_out_to_motors
  9054     1658                     l6677:
  9055     1658  30F4               	movlw	244
  9056     1659  0023               	movlb	3	; select bank3
  9057     165A  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  9058     165B  3001               	movlw	1
  9059     165C  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  9060     165D  319D  25C7  3195   	fcall	_CCP2_LoadDutyValue
  9061     1660                     l6679:
  9062                           
  9063                           ;main.c: 165:         _delay((unsigned long)((700)*(4000000/4000.0)));
  9064     1660  3004               	movlw	4
  9065     1661  0023               	movlb	3	; select bank3
  9066     1662  00C7               	movwf	(??_main^(0+384)+1)
  9067     1663  308E               	movlw	142
  9068     1664  00C6               	movwf	??_main^(0+384)
  9069     1665  3012               	movlw	18
  9070     1666                     u5727:
  9071     1666  0B89               	decfsz	9,f
  9072     1667  2E66               	goto	u5727
  9073     1668  0BC6               	decfsz	??_main^(0+384),f
  9074     1669  2E66               	goto	u5727
  9075     166A  0BC7               	decfsz	(??_main^(0+384)+1),f
  9076     166B  2E66               	goto	u5727
  9077     166C  0000               	nop
  9078     166D  2DD7               	goto	l1151
  9079     166E  3180  2841         	ljmp	start
  9080     1670                     __end_of_main:
  9081                           
  9082                           	psect	text1
  9083     10DC                     __ptext1:	
  9084 ;; *************** function _shift_out_to_motors *****************
  9085 ;; Defined at:
  9086 ;;		line 246 in file "main.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;  byte            1    wreg     unsigned char 
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;  byte            1    3[BANK3 ] unsigned char 
  9091 ;;  i               1    4[BANK3 ] unsigned char 
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  1    wreg      void 
  9094 ;; Registers used:
  9095 ;;		wreg, status,2, status,0
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9103 ;;      Temps:          0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  9104 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  9105 ;;Total ram usage:        5 bytes
  9106 ;; Hardware stack levels used: 1
  9107 ;; Hardware stack levels required when called: 12
  9108 ;; This function calls:
  9109 ;;		Nothing
  9110 ;; This function is called by:
  9111 ;;		_main
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115     10DC                     _shift_out_to_motors:	
  9116                           ;psect for function _shift_out_to_motors
  9117                           
  9118                           
  9119                           ;incstack = 0
  9120                           ; Regs used in _shift_out_to_motors: [wreg+status,2+status,0]
  9121                           ;shift_out_to_motors@byte stored from wreg
  9122     10DC  0023               	movlb	3	; select bank3
  9123     10DD  00C1               	movwf	shift_out_to_motors@byte^(0+384)
  9124     10DE                     l6595:
  9125                           
  9126                           ;main.c: 246: void shift_out_to_motors(uint8_t byte);main.c: 247: {;main.c: 248:     for
      +                           (uint8_t i=0; i < 8; i++){
  9127     10DE  01C2               	clrf	shift_out_to_motors@i^(0+384)
  9128     10DF                     l6601:
  9129                           
  9130                           ;main.c: 254:         LATBbits.LATB4 = (byte & (1 << i)) >> i;
  9131     10DF  3001               	movlw	1
  9132     10E0  00BE               	movwf	??_shift_out_to_motors^(0+384)
  9133     10E1  0A42               	incf	shift_out_to_motors@i^(0+384),w
  9134     10E2  28E4               	goto	u5644
  9135     10E3                     u5645:
  9136     10E3  35BE               	lslf	??_shift_out_to_motors^(0+384),f
  9137     10E4                     u5644:
  9138     10E4  0B89               	decfsz	9,f
  9139     10E5  28E3               	goto	u5645
  9140     10E6  083E               	movf	??_shift_out_to_motors^(0+384),w
  9141     10E7  0541               	andwf	shift_out_to_motors@byte^(0+384),w
  9142     10E8  00BF               	movwf	(??_shift_out_to_motors+1)^(0+384)
  9143     10E9  0A42               	incf	shift_out_to_motors@i^(0+384),w
  9144     10EA  28EC               	goto	u5654
  9145     10EB                     u5655:
  9146     10EB  36BF               	lsrf	(??_shift_out_to_motors+1)^(0+384),f
  9147     10EC                     u5654:
  9148     10EC  0B89               	decfsz	9,f
  9149     10ED  28EB               	goto	u5655
  9150     10EE  083F               	movf	(??_shift_out_to_motors+1)^(0+384),w
  9151     10EF  00C0               	movwf	(??_shift_out_to_motors+2)^(0+384)
  9152     10F0  0EC0               	swapf	(??_shift_out_to_motors+2)^(0+384),f
  9153     10F1  0022               	movlb	2	; select bank2
  9154     10F2  080D               	movf	13,w	;volatile
  9155     10F3  0023               	movlb	3	; select bank3
  9156     10F4  0640               	xorwf	(??_shift_out_to_motors+2)^(0+384),w
  9157     10F5  39EF               	andlw	-17
  9158     10F6  0640               	xorwf	(??_shift_out_to_motors+2)^(0+384),w
  9159     10F7  0022               	movlb	2	; select bank2
  9160     10F8  008D               	movwf	13	;volatile
  9161     10F9                     l6603:
  9162                           
  9163                           ;main.c: 256:         _delay((unsigned long)((1)*(4000000/4000.0)));
  9164     10F9  30C8               	movlw	200
  9165     10FA                     u5737:
  9166     10FA  3200               	nop2
  9167     10FB  0B89               	decfsz	9,f
  9168     10FC  28FA               	goto	u5737
  9169     10FD                     l6605:
  9170                           
  9171                           ;main.c: 258:         LATBbits.LATB6 = 1;
  9172     10FD  0022               	movlb	2	; select bank2
  9173     10FE  170D               	bsf	13,6	;volatile
  9174     10FF                     l6607:
  9175                           
  9176                           ;main.c: 259:         _delay((unsigned long)((1)*(4000000/4000.0)));
  9177     10FF  30C8               	movlw	200
  9178     1100                     u5747:
  9179     1100  3200               	nop2
  9180     1101  0B89               	decfsz	9,f
  9181     1102  2900               	goto	u5747
  9182     1103                     l6609:
  9183                           
  9184                           ;main.c: 261:         LATBbits.LATB4 = 1;
  9185     1103  0022               	movlb	2	; select bank2
  9186     1104  160D               	bsf	13,4	;volatile
  9187     1105                     l6611:
  9188                           
  9189                           ;main.c: 262:         LATBbits.LATB6 = 0;
  9190     1105  130D               	bcf	13,6	;volatile
  9191     1106                     l6613:
  9192                           
  9193                           ;main.c: 263:         _delay((unsigned long)((1)*(4000000/4000.0)));
  9194     1106  30C8               	movlw	200
  9195     1107                     u5757:
  9196     1107  3200               	nop2
  9197     1108  0B89               	decfsz	9,f
  9198     1109  2907               	goto	u5757
  9199     110A                     l6615:
  9200                           
  9201                           ;main.c: 264:     }
  9202     110A  3001               	movlw	1
  9203     110B  0023               	movlb	3	; select bank3
  9204     110C  00BE               	movwf	??_shift_out_to_motors^(0+384)
  9205     110D  083E               	movf	??_shift_out_to_motors^(0+384),w
  9206     110E  07C2               	addwf	shift_out_to_motors@i^(0+384),f
  9207     110F  3008               	movlw	8
  9208     1110  0242               	subwf	shift_out_to_motors@i^(0+384),w
  9209     1111  1C03               	skipc
  9210     1112  2914               	goto	u5661
  9211     1113  2915               	goto	u5660
  9212     1114                     u5661:
  9213     1114  28DF               	goto	l6601
  9214     1115                     u5660:
  9215     1115                     l1169:
  9216                           
  9217                           ;main.c: 267:     LATBbits.LATB5 = 1;
  9218     1115  0022               	movlb	2	; select bank2
  9219     1116  168D               	bsf	13,5	;volatile
  9220     1117                     l6617:
  9221                           
  9222                           ;main.c: 268:     _delay((unsigned long)((1)*(4000000/4000.0)));
  9223     1117  30C8               	movlw	200
  9224     1118                     u5767:
  9225     1118  3200               	nop2
  9226     1119  0B89               	decfsz	9,f
  9227     111A  2918               	goto	u5767
  9228     111B                     l6619:
  9229                           
  9230                           ;main.c: 269:     LATBbits.LATB5 = 0;
  9231     111B  0022               	movlb	2	; select bank2
  9232     111C  128D               	bcf	13,5	;volatile
  9233                           
  9234                           ;main.c: 271:     _delay((unsigned long)((1)*(4000000/4000.0)));
  9235     111D  30C8               	movlw	200
  9236     111E                     u5777:
  9237     111E  3200               	nop2
  9238     111F  0B89               	decfsz	9,f
  9239     1120  291E               	goto	u5777
  9240     1121                     l1170:
  9241     1121  0008               	return
  9242     1122                     __end_of_shift_out_to_motors:
  9243                           
  9244                           	psect	text2
  9245     1F59                     __ptext2:	
  9246 ;; *************** function _SYSTEM_Initialize *****************
  9247 ;; Defined at:
  9248 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;		None
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;		None
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  1    wreg      void 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2, status,0, pclath, cstack
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;Total ram usage:        0 bytes
  9267 ;; Hardware stack levels used: 1
  9268 ;; Hardware stack levels required when called: 14
  9269 ;; This function calls:
  9270 ;;		_ADC_Initialize
  9271 ;;		_CCP1_Initialize
  9272 ;;		_CCP2_Initialize
  9273 ;;		_CLOCK_Initialize
  9274 ;;		_EUSART_Initialize
  9275 ;;		_I2C1_Initialize
  9276 ;;		_INTERRUPT_Initialize
  9277 ;;		_PIN_MANAGER_Initialize
  9278 ;;		_TMR1_Initialize
  9279 ;;		_TMR2_Initialize
  9280 ;;		_TMR4_Initialize
  9281 ;;		_Timer0_Initialize
  9282 ;; This function is called by:
  9283 ;;		_main
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287     1F59                     _SYSTEM_Initialize:	
  9288                           ;psect for function _SYSTEM_Initialize
  9289                           
  9290     1F59                     l6557:	
  9291                           ;incstack = 0
  9292                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9293                           
  9294                           
  9295                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  9296     1F59  319B  23DC  319F   	fcall	_CLOCK_Initialize
  9297                           
  9298                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  9299     1F5C  3191  2170  319F   	fcall	_PIN_MANAGER_Initialize
  9300                           
  9301                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  9302     1F5F  319C  241F  319F   	fcall	_ADC_Initialize
  9303                           
  9304                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
  9305     1F62  319F  27A4  319F   	fcall	_EUSART_Initialize
  9306                           
  9307                           ;mcc_generated_files/system/src/system.c: 46:     I2C1_Initialize();
  9308     1F65  319C  24C5  319F   	fcall	_I2C1_Initialize
  9309                           
  9310                           ;mcc_generated_files/system/src/system.c: 47:     CCP1_Initialize();
  9311     1F68  319B  23FF  319F   	fcall	_CCP1_Initialize
  9312                           
  9313                           ;mcc_generated_files/system/src/system.c: 48:     CCP2_Initialize();
  9314     1F6B  3187  27F5  319F   	fcall	_CCP2_Initialize
  9315                           
  9316                           ;mcc_generated_files/system/src/system.c: 49:     Timer0_Initialize();
  9317     1F6E  319D  2581  319F   	fcall	_Timer0_Initialize
  9318                           
  9319                           ;mcc_generated_files/system/src/system.c: 50:     TMR1_Initialize();
  9320     1F71  319E  2615  319F   	fcall	_TMR1_Initialize
  9321                           
  9322                           ;mcc_generated_files/system/src/system.c: 51:     TMR2_Initialize();
  9323     1F74  319C  24D9  319F   	fcall	_TMR2_Initialize
  9324                           
  9325                           ;mcc_generated_files/system/src/system.c: 52:     TMR4_Initialize();
  9326     1F77  319D  2556  319F   	fcall	_TMR4_Initialize
  9327                           
  9328                           ;mcc_generated_files/system/src/system.c: 53:     INTERRUPT_Initialize();
  9329     1F7A  319C  245A  319F   	fcall	_INTERRUPT_Initialize
  9330     1F7D                     l375:
  9331     1F7D  0008               	return
  9332     1F7E                     __end_of_SYSTEM_Initialize:
  9333                           
  9334                           	psect	text3
  9335     1D81                     __ptext3:	
  9336 ;; *************** function _Timer0_Initialize *****************
  9337 ;; Defined at:
  9338 ;;		line 51 in file "mcc_generated_files/timer/src/tmr0.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;		None
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;		None
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      void 
  9345 ;; Registers used:
  9346 ;;		wreg, status,2, status,0, pclath, cstack
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9356 ;;Total ram usage:        0 bytes
  9357 ;; Hardware stack levels used: 1
  9358 ;; Hardware stack levels required when called: 13
  9359 ;; This function calls:
  9360 ;;		_Timer0_OverflowCallbackRegister
  9361 ;; This function is called by:
  9362 ;;		_SYSTEM_Initialize
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366     1D81                     _Timer0_Initialize:	
  9367                           ;psect for function _Timer0_Initialize
  9368                           
  9369     1D81                     l6481:	
  9370                           ;incstack = 0
  9371                           ; Regs used in _Timer0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9372                           
  9373                           
  9374                           ;mcc_generated_files/timer/src/tmr0.c: 54:   OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) 
      +                          | (0xD7 & 0x3F));
  9375     1D81  0021               	movlb	1	; select bank1
  9376     1D82  0815               	movf	21,w	;volatile
  9377     1D83  39C0               	andlw	192
  9378     1D84  3817               	iorlw	23
  9379     1D85  0095               	movwf	21	;volatile
  9380     1D86                     l6483:
  9381                           
  9382                           ;mcc_generated_files/timer/src/tmr0.c: 57:   TMR0 = 0x3D;
  9383     1D86  303D               	movlw	61
  9384     1D87  0020               	movlb	0	; select bank0
  9385     1D88  0095               	movwf	21	;volatile
  9386     1D89                     l6485:
  9387                           
  9388                           ;mcc_generated_files/timer/src/tmr0.c: 60:   timer0ReloadVal = 61;
  9389     1D89  303D               	movlw	61
  9390     1D8A  0022               	movlb	2	; select bank2
  9391     1D8B  00EB               	movwf	_timer0ReloadVal^(0+256)	;volatile
  9392     1D8C                     l6487:
  9393                           
  9394                           ;mcc_generated_files/timer/src/tmr0.c: 63:   Timer0_OverflowCallbackRegister(Timer0_Defa
      +                          ultOverflowCallback);
  9395     1D8C  3065               	movlw	low _Timer0_DefaultOverflowCallback
  9396     1D8D  0023               	movlb	3	; select bank3
  9397     1D8E  00BE               	movwf	Timer0_OverflowCallbackRegister@CallbackHandler^(0+384)
  9398     1D8F  301B               	movlw	high _Timer0_DefaultOverflowCallback
  9399     1D90  00BF               	movwf	(Timer0_OverflowCallbackRegister@CallbackHandler^(0+384)+1)
  9400     1D91  319B  23F6  319D   	fcall	_Timer0_OverflowCallbackRegister
  9401     1D94                     l6489:
  9402                           
  9403                           ;mcc_generated_files/timer/src/tmr0.c: 66:   INTCONbits.TMR0IF = 0;
  9404     1D94  110B               	bcf	11,2	;volatile
  9405     1D95                     l6491:
  9406                           
  9407                           ;mcc_generated_files/timer/src/tmr0.c: 69:   INTCONbits.TMR0IE = 1;
  9408     1D95  168B               	bsf	11,5	;volatile
  9409     1D96                     l627:
  9410     1D96  0008               	return
  9411     1D97                     __end_of_Timer0_Initialize:
  9412                           
  9413                           	psect	text4
  9414     1BF6                     __ptext4:	
  9415 ;; *************** function _Timer0_OverflowCallbackRegister *****************
  9416 ;; Defined at:
  9417 ;;		line 121 in file "mcc_generated_files/timer/src/tmr0.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;  CallbackHand    2    0[BANK3 ] PTR FTN()void 
  9420 ;;		 -> TMR4_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), Timer0_DefaultOverflowCallback(1), TMR2_Defaul
      +tOverflowCallback(1), 
  9421 ;; Auto vars:     Size  Location     Type
  9422 ;;		None
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  1    wreg      void 
  9425 ;; Registers used:
  9426 ;;		wreg
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9432 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9435 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9436 ;;Total ram usage:        2 bytes
  9437 ;; Hardware stack levels used: 1
  9438 ;; Hardware stack levels required when called: 12
  9439 ;; This function calls:
  9440 ;;		Nothing
  9441 ;; This function is called by:
  9442 ;;		_Timer0_Initialize
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446     1BF6                     _Timer0_OverflowCallbackRegister:	
  9447                           ;psect for function _Timer0_OverflowCallbackRegister
  9448                           
  9449     1BF6                     l6317:	
  9450                           ;incstack = 0
  9451                           ; Regs used in _Timer0_OverflowCallbackRegister: [wreg]
  9452                           
  9453                           
  9454                           ;mcc_generated_files/timer/src/tmr0.c: 121: void Timer0_OverflowCallbackRegister(void (*
      +                           CallbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 122: {;mcc_generated_file
      +                          s/timer/src/tmr0.c: 123:   Timer0_OverflowCallback = CallbackHandler;
  9455     1BF6  0023               	movlb	3	; select bank3
  9456     1BF7  083F               	movf	(Timer0_OverflowCallbackRegister@CallbackHandler+1)^(0+384),w
  9457     1BF8  0022               	movlb	2	; select bank2
  9458     1BF9  00E2               	movwf	(_Timer0_OverflowCallback+1)^(0+256)
  9459     1BFA  0023               	movlb	3	; select bank3
  9460     1BFB  083E               	movf	Timer0_OverflowCallbackRegister@CallbackHandler^(0+384),w
  9461     1BFC  0022               	movlb	2	; select bank2
  9462     1BFD  00E1               	movwf	_Timer0_OverflowCallback^(0+256)
  9463     1BFE                     l649:
  9464     1BFE  0008               	return
  9465     1BFF                     __end_of_Timer0_OverflowCallbackRegister:
  9466                           
  9467                           	psect	text5
  9468     1D56                     __ptext5:	
  9469 ;; *************** function _TMR4_Initialize *****************
  9470 ;; Defined at:
  9471 ;;		line 57 in file "mcc_generated_files/timer/src/tmr4.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;		None
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;		None
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  1    wreg      void 
  9478 ;; Registers used:
  9479 ;;		wreg, status,2, status,0, pclath, cstack
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9489 ;;Total ram usage:        0 bytes
  9490 ;; Hardware stack levels used: 1
  9491 ;; Hardware stack levels required when called: 13
  9492 ;; This function calls:
  9493 ;;		_TMR4_OverflowCallbackRegister
  9494 ;; This function is called by:
  9495 ;;		_SYSTEM_Initialize
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499     1D56                     _TMR4_Initialize:	
  9500                           ;psect for function _TMR4_Initialize
  9501                           
  9502     1D56                     l6521:	
  9503                           ;incstack = 0
  9504                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9505                           
  9506                           
  9507                           ;mcc_generated_files/timer/src/tmr4.c: 61:     T4CLKCON = 0x0;
  9508     1D56  0028               	movlb	8	; select bank8
  9509     1D57  0197               	clrf	23	;volatile
  9510                           
  9511                           ;mcc_generated_files/timer/src/tmr4.c: 63:     T4HLT = 0x0;
  9512     1D58  0196               	clrf	22	;volatile
  9513                           
  9514                           ;mcc_generated_files/timer/src/tmr4.c: 65:     T4RST = 0x0;
  9515     1D59  0198               	clrf	24	;volatile
  9516     1D5A                     l6523:
  9517                           
  9518                           ;mcc_generated_files/timer/src/tmr4.c: 67:     T4PR = 0x9C;
  9519     1D5A  309C               	movlw	156
  9520     1D5B  0094               	movwf	20	;volatile
  9521     1D5C                     l6525:
  9522                           
  9523                           ;mcc_generated_files/timer/src/tmr4.c: 69:     T4TMR = 0x0;
  9524     1D5C  0193               	clrf	19	;volatile
  9525     1D5D                     l6527:
  9526                           
  9527                           ;mcc_generated_files/timer/src/tmr4.c: 72:     TMR4_OverflowCallbackRegister(TMR4_Defaul
      +                          tOverflowCallback);
  9528     1D5D  3002               	movlw	low _TMR4_DefaultOverflowCallback
  9529     1D5E  0023               	movlb	3	; select bank3
  9530     1D5F  00BE               	movwf	TMR4_OverflowCallbackRegister@InterruptHandler^(0+384)
  9531     1D60  3000               	movlw	high _TMR4_DefaultOverflowCallback
  9532     1D61  00BF               	movwf	(TMR4_OverflowCallbackRegister@InterruptHandler^(0+384)+1)
  9533     1D62  319B  23A9  319D   	fcall	_TMR4_OverflowCallbackRegister
  9534     1D65                     l6529:
  9535                           
  9536                           ;mcc_generated_files/timer/src/tmr4.c: 75:     PIR2bits.TMR4IF = 0;
  9537     1D65  0020               	movlb	0	; select bank0
  9538     1D66  1091               	bcf	17,1	;volatile
  9539     1D67                     l6531:
  9540                           
  9541                           ;mcc_generated_files/timer/src/tmr4.c: 77:     T4CON = 0xF0;
  9542     1D67  30F0               	movlw	240
  9543     1D68  0028               	movlb	8	; select bank8
  9544     1D69  0095               	movwf	21	;volatile
  9545     1D6A                     l778:
  9546     1D6A  0008               	return
  9547     1D6B                     __end_of_TMR4_Initialize:
  9548                           
  9549                           	psect	text6
  9550     1BA9                     __ptext6:	
  9551 ;; *************** function _TMR4_OverflowCallbackRegister *****************
  9552 ;; Defined at:
  9553 ;;		line 122 in file "mcc_generated_files/timer/src/tmr4.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;  InterruptHan    2    0[BANK3 ] PTR FTN()void 
  9556 ;;		 -> TMR4_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), Timer0_DefaultOverflowCallback(1), TMR2_Defaul
      +tOverflowCallback(1), 
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9568 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9572 ;;Total ram usage:        2 bytes
  9573 ;; Hardware stack levels used: 1
  9574 ;; Hardware stack levels required when called: 12
  9575 ;; This function calls:
  9576 ;;		Nothing
  9577 ;; This function is called by:
  9578 ;;		_TMR4_Initialize
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582     1BA9                     _TMR4_OverflowCallbackRegister:	
  9583                           ;psect for function _TMR4_OverflowCallbackRegister
  9584                           
  9585     1BA9                     l6321:	
  9586                           ;incstack = 0
  9587                           ; Regs used in _TMR4_OverflowCallbackRegister: [wreg]
  9588                           
  9589                           
  9590                           ;mcc_generated_files/timer/src/tmr4.c: 122: void TMR4_OverflowCallbackRegister(void (* I
      +                          nterruptHandler)(void));mcc_generated_files/timer/src/tmr4.c: 123: {;mcc_generated_files
      +                          /timer/src/tmr4.c: 124:    TMR4_OverflowCallback = InterruptHandler;
  9591     1BA9  0023               	movlb	3	; select bank3
  9592     1BAA  083F               	movf	(TMR4_OverflowCallbackRegister@InterruptHandler+1)^(0+384),w
  9593     1BAB  00B3               	movwf	(_TMR4_OverflowCallback+1)^(0+384)
  9594     1BAC  083E               	movf	TMR4_OverflowCallbackRegister@InterruptHandler^(0+384),w
  9595     1BAD  00B2               	movwf	_TMR4_OverflowCallback^(0+384)
  9596     1BAE                     l802:
  9597     1BAE  0008               	return
  9598     1BAF                     __end_of_TMR4_OverflowCallbackRegister:
  9599                           
  9600                           	psect	text7
  9601     1CD9                     __ptext7:	
  9602 ;; *************** function _TMR2_Initialize *****************
  9603 ;; Defined at:
  9604 ;;		line 57 in file "mcc_generated_files/timer/src/tmr2.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;		None
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;		None
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  1    wreg      void 
  9611 ;; Registers used:
  9612 ;;		wreg, status,2, status,0, pclath, cstack
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9622 ;;Total ram usage:        0 bytes
  9623 ;; Hardware stack levels used: 1
  9624 ;; Hardware stack levels required when called: 13
  9625 ;; This function calls:
  9626 ;;		_TMR2_OverflowCallbackRegister
  9627 ;; This function is called by:
  9628 ;;		_SYSTEM_Initialize
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632     1CD9                     _TMR2_Initialize:	
  9633                           ;psect for function _TMR2_Initialize
  9634                           
  9635     1CD9                     l6509:	
  9636                           ;incstack = 0
  9637                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9638                           
  9639                           
  9640                           ;mcc_generated_files/timer/src/tmr2.c: 61:     T2CLKCON = 0x0;
  9641     1CD9  0020               	movlb	0	; select bank0
  9642     1CDA  019E               	clrf	30	;volatile
  9643                           
  9644                           ;mcc_generated_files/timer/src/tmr2.c: 63:     T2HLT = 0x0;
  9645     1CDB  019D               	clrf	29	;volatile
  9646                           
  9647                           ;mcc_generated_files/timer/src/tmr2.c: 65:     T2RST = 0x0;
  9648     1CDC  019F               	clrf	31	;volatile
  9649     1CDD                     l6511:
  9650                           
  9651                           ;mcc_generated_files/timer/src/tmr2.c: 67:     T2PR = 0xFF;
  9652     1CDD  30FF               	movlw	255
  9653     1CDE  009B               	movwf	27	;volatile
  9654     1CDF                     l6513:
  9655                           
  9656                           ;mcc_generated_files/timer/src/tmr2.c: 69:     T2TMR = 0x0;
  9657     1CDF  019A               	clrf	26	;volatile
  9658     1CE0                     l6515:
  9659                           
  9660                           ;mcc_generated_files/timer/src/tmr2.c: 72:     TMR2_OverflowCallbackRegister(TMR2_Defaul
      +                          tOverflowCallback);
  9661     1CE0  3025               	movlw	low _TMR2_DefaultOverflowCallback
  9662     1CE1  0023               	movlb	3	; select bank3
  9663     1CE2  00BE               	movwf	TMR2_OverflowCallbackRegister@InterruptHandler^(0+384)
  9664     1CE3  301B               	movlw	high _TMR2_DefaultOverflowCallback
  9665     1CE4  00BF               	movwf	(TMR2_OverflowCallbackRegister@InterruptHandler^(0+384)+1)
  9666     1CE5  319B  23A3  319C   	fcall	_TMR2_OverflowCallbackRegister
  9667     1CE8                     l6517:
  9668                           
  9669                           ;mcc_generated_files/timer/src/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  9670     1CE8  0020               	movlb	0	; select bank0
  9671     1CE9  1090               	bcf	16,1	;volatile
  9672     1CEA                     l6519:
  9673                           
  9674                           ;mcc_generated_files/timer/src/tmr2.c: 77:     T2CON = 0xF0;
  9675     1CEA  30F0               	movlw	240
  9676     1CEB  009C               	movwf	28	;volatile
  9677     1CEC                     l571:
  9678     1CEC  0008               	return
  9679     1CED                     __end_of_TMR2_Initialize:
  9680                           
  9681                           	psect	text8
  9682     1BA3                     __ptext8:	
  9683 ;; *************** function _TMR2_OverflowCallbackRegister *****************
  9684 ;; Defined at:
  9685 ;;		line 122 in file "mcc_generated_files/timer/src/tmr2.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;  InterruptHan    2    0[BANK3 ] PTR FTN()void 
  9688 ;;		 -> TMR4_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), Timer0_DefaultOverflowCallback(1), TMR2_Defaul
      +tOverflowCallback(1), 
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;		None
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  1    wreg      void 
  9693 ;; Registers used:
  9694 ;;		wreg
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9700 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9703 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9704 ;;Total ram usage:        2 bytes
  9705 ;; Hardware stack levels used: 1
  9706 ;; Hardware stack levels required when called: 12
  9707 ;; This function calls:
  9708 ;;		Nothing
  9709 ;; This function is called by:
  9710 ;;		_TMR2_Initialize
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714     1BA3                     _TMR2_OverflowCallbackRegister:	
  9715                           ;psect for function _TMR2_OverflowCallbackRegister
  9716                           
  9717     1BA3                     l6315:	
  9718                           ;incstack = 0
  9719                           ; Regs used in _TMR2_OverflowCallbackRegister: [wreg]
  9720                           
  9721                           
  9722                           ;mcc_generated_files/timer/src/tmr2.c: 122: void TMR2_OverflowCallbackRegister(void (* I
      +                          nterruptHandler)(void));mcc_generated_files/timer/src/tmr2.c: 123: {;mcc_generated_files
      +                          /timer/src/tmr2.c: 124:    TMR2_OverflowCallback = InterruptHandler;
  9723     1BA3  0023               	movlb	3	; select bank3
  9724     1BA4  083F               	movf	(TMR2_OverflowCallbackRegister@InterruptHandler+1)^(0+384),w
  9725     1BA5  00B9               	movwf	(_TMR2_OverflowCallback+1)^(0+384)
  9726     1BA6  083E               	movf	TMR2_OverflowCallbackRegister@InterruptHandler^(0+384),w
  9727     1BA7  00B8               	movwf	_TMR2_OverflowCallback^(0+384)
  9728     1BA8                     l595:
  9729     1BA8  0008               	return
  9730     1BA9                     __end_of_TMR2_OverflowCallbackRegister:
  9731                           
  9732                           	psect	text9
  9733     1E15                     __ptext9:	
  9734 ;; *************** function _TMR1_Initialize *****************
  9735 ;; Defined at:
  9736 ;;		line 57 in file "mcc_generated_files/timer/src/tmr1.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;		None
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;		None
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg, status,2, status,0, pclath, cstack
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;Total ram usage:        0 bytes
  9755 ;; Hardware stack levels used: 1
  9756 ;; Hardware stack levels required when called: 13
  9757 ;; This function calls:
  9758 ;;		_TMR1_OverflowCallbackRegister
  9759 ;; This function is called by:
  9760 ;;		_SYSTEM_Initialize
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764     1E15                     _TMR1_Initialize:	
  9765                           ;psect for function _TMR1_Initialize
  9766                           
  9767     1E15                     l6493:	
  9768                           ;incstack = 0
  9769                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9770                           
  9771                           
  9772                           ;mcc_generated_files/timer/src/tmr1.c: 60:     T1GCON = 0x0;
  9773     1E15  0020               	movlb	0	; select bank0
  9774     1E16  0199               	clrf	25	;volatile
  9775     1E17                     l6495:
  9776                           
  9777                           ;mcc_generated_files/timer/src/tmr1.c: 62:     TMR1H = 0xFF;
  9778     1E17  30FF               	movlw	255
  9779     1E18  0097               	movwf	23	;volatile
  9780     1E19                     l6497:
  9781                           
  9782                           ;mcc_generated_files/timer/src/tmr1.c: 64:     TMR1L = 0xFF;
  9783     1E19  30FF               	movlw	255
  9784     1E1A  0096               	movwf	22	;volatile
  9785     1E1B                     l6499:
  9786                           
  9787                           ;mcc_generated_files/timer/src/tmr1.c: 67:     timer1ReloadVal=((uint16_t)TMR1H << 8) | 
      +                          TMR1L;
  9788     1E1B  0817               	movf	23,w	;volatile
  9789     1E1C  0022               	movlb	2	; select bank2
  9790     1E1D  00DE               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  9791     1E1E  0020               	movlb	0	; select bank0
  9792     1E1F  0816               	movf	22,w	;volatile
  9793     1E20  0022               	movlb	2	; select bank2
  9794     1E21  00DD               	movwf	_timer1ReloadVal^(0+256)	;volatile
  9795     1E22                     l6501:
  9796                           
  9797                           ;mcc_generated_files/timer/src/tmr1.c: 70:     TMR1_OverflowCallbackRegister(TMR1_Defaul
      +                          tOverflowCallback);
  9798     1E22  3000               	movlw	low _TMR1_DefaultOverflowCallback
  9799     1E23  0023               	movlb	3	; select bank3
  9800     1E24  00BE               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler^(0+384)
  9801     1E25  3010               	movlw	high _TMR1_DefaultOverflowCallback
  9802     1E26  00BF               	movwf	(TMR1_OverflowCallbackRegister@CallbackHandler^(0+384)+1)
  9803     1E27  319B  239D  319E   	fcall	_TMR1_OverflowCallbackRegister
  9804     1E2A                     l6503:
  9805                           
  9806                           ;mcc_generated_files/timer/src/tmr1.c: 73:     PIR1bits.TMR1IF = 0;
  9807     1E2A  0020               	movlb	0	; select bank0
  9808     1E2B  1010               	bcf	16,0	;volatile
  9809     1E2C                     l6505:
  9810                           
  9811                           ;mcc_generated_files/timer/src/tmr1.c: 74:     PIR1bits.TMR1GIF = 0;
  9812     1E2C  1390               	bcf	16,7	;volatile
  9813     1E2D                     l6507:
  9814                           
  9815                           ;mcc_generated_files/timer/src/tmr1.c: 77:     T1CON = 0x1;
  9816     1E2D  3001               	movlw	1
  9817     1E2E  0098               	movwf	24	;volatile
  9818     1E2F                     l691:
  9819     1E2F  0008               	return
  9820     1E30                     __end_of_TMR1_Initialize:
  9821                           
  9822                           	psect	text10
  9823     1B9D                     __ptext10:	
  9824 ;; *************** function _TMR1_OverflowCallbackRegister *****************
  9825 ;; Defined at:
  9826 ;;		line 150 in file "mcc_generated_files/timer/src/tmr1.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;  CallbackHand    2    0[BANK3 ] PTR FTN()void 
  9829 ;;		 -> TMR4_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), Timer0_DefaultOverflowCallback(1), TMR2_Defaul
      +tOverflowCallback(1), 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1    wreg      void 
  9834 ;; Registers used:
  9835 ;;		wreg
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9841 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9845 ;;Total ram usage:        2 bytes
  9846 ;; Hardware stack levels used: 1
  9847 ;; Hardware stack levels required when called: 12
  9848 ;; This function calls:
  9849 ;;		Nothing
  9850 ;; This function is called by:
  9851 ;;		_TMR1_Initialize
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855     1B9D                     _TMR1_OverflowCallbackRegister:	
  9856                           ;psect for function _TMR1_OverflowCallbackRegister
  9857                           
  9858     1B9D                     l6319:	
  9859                           ;incstack = 0
  9860                           ; Regs used in _TMR1_OverflowCallbackRegister: [wreg]
  9861                           
  9862                           
  9863                           ;mcc_generated_files/timer/src/tmr1.c: 150: void TMR1_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr1.c: 151: {;mcc_generated_files/
      +                          timer/src/tmr1.c: 152:     TMR1_OverflowCallback = CallbackHandler;
  9864     1B9D  0023               	movlb	3	; select bank3
  9865     1B9E  083F               	movf	(TMR1_OverflowCallbackRegister@CallbackHandler+1)^(0+384),w
  9866     1B9F  00B5               	movwf	(_TMR1_OverflowCallback+1)^(0+384)
  9867     1BA0  083E               	movf	TMR1_OverflowCallbackRegister@CallbackHandler^(0+384),w
  9868     1BA1  00B4               	movwf	_TMR1_OverflowCallback^(0+384)
  9869     1BA2                     l720:
  9870     1BA2  0008               	return
  9871     1BA3                     __end_of_TMR1_OverflowCallbackRegister:
  9872                           
  9873                           	psect	text11
  9874     1170                     __ptext11:	
  9875 ;; *************** function _PIN_MANAGER_Initialize *****************
  9876 ;; Defined at:
  9877 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;		None
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;		None
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  1    wreg      void 
  9884 ;; Registers used:
  9885 ;;		wreg, status,2
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9895 ;;Total ram usage:        0 bytes
  9896 ;; Hardware stack levels used: 1
  9897 ;; Hardware stack levels required when called: 12
  9898 ;; This function calls:
  9899 ;;		Nothing
  9900 ;; This function is called by:
  9901 ;;		_SYSTEM_Initialize
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905     1170                     _PIN_MANAGER_Initialize:	
  9906                           ;psect for function _PIN_MANAGER_Initialize
  9907                           
  9908     1170                     l6381:	
  9909                           ;incstack = 0
  9910                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9911                           
  9912                           
  9913                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  9914     1170  0022               	movlb	2	; select bank2
  9915     1171  018C               	clrf	12	;volatile
  9916                           
  9917                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  9918     1172  018D               	clrf	13	;volatile
  9919     1173                     l6383:
  9920                           
  9921                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x18;
  9922     1173  3018               	movlw	24
  9923     1174  008E               	movwf	14	;volatile
  9924     1175                     l6385:
  9925                           
  9926                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
  9927     1175  3019               	movlw	25
  9928     1176  0021               	movlb	1	; select bank1
  9929     1177  008C               	movwf	12	;volatile
  9930     1178                     l6387:
  9931                           
  9932                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x80;
  9933     1178  3080               	movlw	128
  9934     1179  008D               	movwf	13	;volatile
  9935     117A                     l6389:
  9936                           
  9937                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x9B;
  9938     117A  309B               	movlw	155
  9939     117B  008E               	movwf	14	;volatile
  9940     117C                     l6391:
  9941                           
  9942                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x15;
  9943     117C  3015               	movlw	21
  9944     117D  0023               	movlb	3	; select bank3
  9945     117E  008C               	movwf	12	;volatile
  9946     117F                     l6393:
  9947                           
  9948                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x0;
  9949     117F  018D               	clrf	13	;volatile
  9950                           
  9951                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0x1;
  9952     1180  3001               	movlw	1
  9953     1181  008E               	movwf	14	;volatile
  9954                           
  9955                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x3A;
  9956     1182  303A               	movlw	58
  9957     1183  0024               	movlb	4	; select bank4
  9958     1184  008C               	movwf	12	;volatile
  9959                           
  9960                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xF0;
  9961     1185  30F0               	movlw	240
  9962     1186  008D               	movwf	13	;volatile
  9963                           
  9964                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0xDF;
  9965     1187  30DF               	movlw	223
  9966     1188  008E               	movwf	14	;volatile
  9967     1189                     l6395:
  9968                           
  9969                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  9970     1189  0021               	movlb	1	; select bank1
  9971     118A  1395               	bcf	21,7	;volatile
  9972     118B                     l6397:
  9973                           
  9974                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  9975     118B  0025               	movlb	5	; select bank5
  9976     118C  018C               	clrf	12	;volatile
  9977     118D                     l6399:
  9978                           
  9979                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  9980     118D  018D               	clrf	13	;volatile
  9981     118E                     l6401:
  9982                           
  9983                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  9984     118E  018E               	clrf	14	;volatile
  9985     118F                     l6403:
  9986                           
  9987                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x36;
  9988     118F  3036               	movlw	54
  9989     1190  0026               	movlb	6	; select bank6
  9990     1191  008C               	movwf	12	;volatile
  9991     1192                     l6405:
  9992                           
  9993                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  9994     1192  30F0               	movlw	240
  9995     1193  008D               	movwf	13	;volatile
  9996     1194                     l6407:
  9997                           
  9998                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  9999     1194  30FF               	movlw	255
 10000     1195  008E               	movwf	14	;volatile
 10001     1196                     l6409:
 10002                           
 10003                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x18;
 10004     1196  3018               	movlw	24
 10005     1197  0027               	movlb	7	; select bank7
 10006     1198  008C               	movwf	12	;volatile
 10007     1199                     l6411:
 10008                           
 10009                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
 10010     1199  30F0               	movlw	240
 10011     119A  008D               	movwf	13	;volatile
 10012     119B                     l6413:
 10013                           
 10014                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0x7;
 10015     119B  3007               	movlw	7
 10016     119C  008E               	movwf	14	;volatile
 10017     119D                     l6415:
 10018                           
 10019                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0x17;
 10020     119D  3017               	movlw	23
 10021     119E  003C               	movlb	28	; select bank28
 10022     119F  00A4               	movwf	36	;volatile
 10023     11A0                     l6417:
 10024                           
 10025                           ;mcc_generated_files/system/src/pins.c: 93:     RC6PPS = 18;
 10026     11A0  3012               	movlw	18
 10027     11A1  003D               	movlb	29	; select bank29
 10028     11A2  00A6               	movwf	38	;volatile
 10029     11A3                     l6419:
 10030                           
 10031                           ;mcc_generated_files/system/src/pins.c: 94:     SSPCLKPPS = 0x14;
 10032     11A3  3014               	movlw	20
 10033     11A4  003C               	movlb	28	; select bank28
 10034     11A5  00A0               	movwf	32	;volatile
 10035     11A6                     l6421:
 10036                           
 10037                           ;mcc_generated_files/system/src/pins.c: 95:     RC4PPS = 16;
 10038     11A6  3010               	movlw	16
 10039     11A7  003D               	movlb	29	; select bank29
 10040     11A8  00A4               	movwf	36	;volatile
 10041     11A9                     l6423:
 10042                           
 10043                           ;mcc_generated_files/system/src/pins.c: 96:     SSPDATPPS = 0x13;
 10044     11A9  3013               	movlw	19
 10045     11AA  003C               	movlb	28	; select bank28
 10046     11AB  00A1               	movwf	33	;volatile
 10047     11AC                     l6425:
 10048                           
 10049                           ;mcc_generated_files/system/src/pins.c: 97:     RC3PPS = 17;
 10050     11AC  3011               	movlw	17
 10051     11AD  003D               	movlb	29	; select bank29
 10052     11AE  00A3               	movwf	35	;volatile
 10053     11AF                     l6427:
 10054                           
 10055                           ;mcc_generated_files/system/src/pins.c: 98:     CCP2PPS = 0x2;
 10056     11AF  3002               	movlw	2
 10057     11B0  003C               	movlb	28	; select bank28
 10058     11B1  0095               	movwf	21	;volatile
 10059     11B2                     l6429:
 10060                           
 10061                           ;mcc_generated_files/system/src/pins.c: 99:     RA2PPS = 13;
 10062     11B2  300D               	movlw	13
 10063     11B3  003D               	movlb	29	; select bank29
 10064     11B4  0092               	movwf	18	;volatile
 10065     11B5                     l6431:
 10066                           
 10067                           ;mcc_generated_files/system/src/pins.c: 100:     CCP1PPS = 0x15;
 10068     11B5  3015               	movlw	21
 10069     11B6  003C               	movlb	28	; select bank28
 10070     11B7  0094               	movwf	20	;volatile
 10071     11B8                     l6433:
 10072                           
 10073                           ;mcc_generated_files/system/src/pins.c: 101:     RC5PPS = 12;
 10074     11B8  300C               	movlw	12
 10075     11B9  003D               	movlb	29	; select bank29
 10076     11BA  00A5               	movwf	37	;volatile
 10077     11BB                     l6435:
 10078                           
 10079                           ;mcc_generated_files/system/src/pins.c: 110:     IOCAP = 0x0;
 10080     11BB  0027               	movlb	7	; select bank7
 10081     11BC  0191               	clrf	17	;volatile
 10082     11BD                     l6437:
 10083                           
 10084                           ;mcc_generated_files/system/src/pins.c: 111:     IOCAN = 0x0;
 10085     11BD  0192               	clrf	18	;volatile
 10086     11BE                     l6439:
 10087                           
 10088                           ;mcc_generated_files/system/src/pins.c: 112:     IOCAF = 0x0;
 10089     11BE  0193               	clrf	19	;volatile
 10090     11BF                     l6441:
 10091                           
 10092                           ;mcc_generated_files/system/src/pins.c: 113:     IOCBP = 0x0;
 10093     11BF  0194               	clrf	20	;volatile
 10094     11C0                     l6443:
 10095                           
 10096                           ;mcc_generated_files/system/src/pins.c: 114:     IOCBN = 0x0;
 10097     11C0  0195               	clrf	21	;volatile
 10098     11C1                     l6445:
 10099                           
 10100                           ;mcc_generated_files/system/src/pins.c: 115:     IOCBF = 0x0;
 10101     11C1  0196               	clrf	22	;volatile
 10102     11C2                     l6447:
 10103                           
 10104                           ;mcc_generated_files/system/src/pins.c: 116:     IOCCP = 0x0;
 10105     11C2  0197               	clrf	23	;volatile
 10106     11C3                     l6449:
 10107                           
 10108                           ;mcc_generated_files/system/src/pins.c: 117:     IOCCN = 0x0;
 10109     11C3  0198               	clrf	24	;volatile
 10110     11C4                     l6451:
 10111                           
 10112                           ;mcc_generated_files/system/src/pins.c: 118:     IOCCF = 0x0;
 10113     11C4  0199               	clrf	25	;volatile
 10114     11C5                     l469:
 10115     11C5  0008               	return
 10116     11C6                     __end_of_PIN_MANAGER_Initialize:
 10117                           
 10118                           	psect	text12
 10119     1C5A                     __ptext12:	
 10120 ;; *************** function _INTERRUPT_Initialize *****************
 10121 ;; Defined at:
 10122 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 10123 ;; Parameters:    Size  Location     Type
 10124 ;;		None
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;		None
 10127 ;; Return value:  Size  Location     Type
 10128 ;;                  1    wreg      void 
 10129 ;; Registers used:
 10130 ;;		wreg, status,2, status,0, pclath, cstack
 10131 ;; Tracked objects:
 10132 ;;		On entry : 0/0
 10133 ;;		On exit  : 0/0
 10134 ;;		Unchanged: 0/0
 10135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;Total ram usage:        0 bytes
 10141 ;; Hardware stack levels used: 1
 10142 ;; Hardware stack levels required when called: 13
 10143 ;; This function calls:
 10144 ;;		_INT_SetInterruptHandler
 10145 ;; This function is called by:
 10146 ;;		_SYSTEM_Initialize
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150     1C5A                     _INTERRUPT_Initialize:	
 10151                           ;psect for function _INTERRUPT_Initialize
 10152                           
 10153     1C5A                     l6533:	
 10154                           ;incstack = 0
 10155                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10156                           
 10157                           
 10158                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
 10159     1C5A  108B               	bcf	11,1	;volatile
 10160                           
 10161                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
 10162     1C5B  0021               	movlb	1	; select bank1
 10163     1C5C  1715               	bsf	21,6	;volatile
 10164     1C5D                     l6535:
 10165                           
 10166                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 10167     1C5D  3000               	movlw	0
 10168     1C5E  0023               	movlb	3	; select bank3
 10169     1C5F  00BE               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+384)
 10170     1C60  3000               	movlw	0
 10171     1C61  00BF               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+384)+1)
 10172     1C62  319B  23ED  319C   	fcall	_INT_SetInterruptHandler
 10173     1C65                     l503:
 10174     1C65  0008               	return
 10175     1C66                     __end_of_INTERRUPT_Initialize:
 10176                           
 10177                           	psect	text13
 10178     1BED                     __ptext13:	
 10179 ;; *************** function _INT_SetInterruptHandler *****************
 10180 ;; Defined at:
 10181 ;;		line 101 in file "mcc_generated_files/system/src/interrupt.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  InterruptHan    2    0[BANK3 ] PTR FTN()void 
 10184 ;;		 -> INT_DefaultInterruptHandler(1), 
 10185 ;; Auto vars:     Size  Location     Type
 10186 ;;		None
 10187 ;; Return value:  Size  Location     Type
 10188 ;;                  1    wreg      void 
 10189 ;; Registers used:
 10190 ;;		wreg
 10191 ;; Tracked objects:
 10192 ;;		On entry : 0/0
 10193 ;;		On exit  : 0/0
 10194 ;;		Unchanged: 0/0
 10195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10196 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10199 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10200 ;;Total ram usage:        2 bytes
 10201 ;; Hardware stack levels used: 1
 10202 ;; Hardware stack levels required when called: 12
 10203 ;; This function calls:
 10204 ;;		Nothing
 10205 ;; This function is called by:
 10206 ;;		_INTERRUPT_Initialize
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210     1BED                     _INT_SetInterruptHandler:	
 10211                           ;psect for function _INT_SetInterruptHandler
 10212                           
 10213     1BED                     l6313:	
 10214                           ;incstack = 0
 10215                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 10216                           
 10217                           
 10218                           ;mcc_generated_files/system/src/interrupt.c: 102:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 10219     1BED  0023               	movlb	3	; select bank3
 10220     1BEE  083F               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+384),w
 10221     1BEF  0022               	movlb	2	; select bank2
 10222     1BF0  00E4               	movwf	(_INT_InterruptHandler+1)^(0+256)
 10223     1BF1  0023               	movlb	3	; select bank3
 10224     1BF2  083E               	movf	INT_SetInterruptHandler@InterruptHandler^(0+384),w
 10225     1BF3  0022               	movlb	2	; select bank2
 10226     1BF4  00E3               	movwf	_INT_InterruptHandler^(0+256)
 10227     1BF5                     l523:
 10228     1BF5  0008               	return
 10229     1BF6                     __end_of_INT_SetInterruptHandler:
 10230                           
 10231                           	psect	text14
 10232     1CC5                     __ptext14:	
 10233 ;; *************** function _I2C1_Initialize *****************
 10234 ;; Defined at:
 10235 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;		None
 10238 ;; Auto vars:     Size  Location     Type
 10239 ;;		None
 10240 ;; Return value:  Size  Location     Type
 10241 ;;                  1    wreg      void 
 10242 ;; Registers used:
 10243 ;;		wreg, status,2, status,0, pclath, cstack
 10244 ;; Tracked objects:
 10245 ;;		On entry : 0/0
 10246 ;;		On exit  : 0/0
 10247 ;;		Unchanged: 0/0
 10248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10253 ;;Total ram usage:        0 bytes
 10254 ;; Hardware stack levels used: 1
 10255 ;; Hardware stack levels required when called: 13
 10256 ;; This function calls:
 10257 ;;		_I2C1_CallbackRegister
 10258 ;; This function is called by:
 10259 ;;		_SYSTEM_Initialize
 10260 ;; This function uses a non-reentrant model
 10261 ;;
 10262                           
 10263     1CC5                     _I2C1_Initialize:	
 10264                           ;psect for function _I2C1_Initialize
 10265                           
 10266     1CC5                     l6353:	
 10267                           ;incstack = 0
 10268                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10269                           
 10270                           
 10271                           ;mcc_generated_files/i2c_host/src/mssp.c: 117:     SSP1STAT = 0x80;
 10272     1CC5  3080               	movlw	128
 10273     1CC6  0024               	movlb	4	; select bank4
 10274     1CC7  0094               	movwf	20	;volatile
 10275                           
 10276                           ;mcc_generated_files/i2c_host/src/mssp.c: 119:     SSP1CON1 = 0x8;
 10277     1CC8  3008               	movlw	8
 10278     1CC9  0095               	movwf	21	;volatile
 10279     1CCA                     l6355:
 10280                           
 10281                           ;mcc_generated_files/i2c_host/src/mssp.c: 121:     SSP1CON2 = 0x0;
 10282     1CCA  0196               	clrf	22	;volatile
 10283     1CCB                     l6357:
 10284                           
 10285                           ;mcc_generated_files/i2c_host/src/mssp.c: 123:     SSP1CON3 = 0x0;
 10286     1CCB  0197               	clrf	23	;volatile
 10287                           
 10288                           ;mcc_generated_files/i2c_host/src/mssp.c: 125:     SSP1ADD = 0x9;
 10289     1CCC  3009               	movlw	9
 10290     1CCD  0092               	movwf	18	;volatile
 10291     1CCE                     l6359:
 10292                           
 10293                           ;mcc_generated_files/i2c_host/src/mssp.c: 127:     I2C1_CallbackRegister(I2C1_DefaultCal
      +                          lback);
 10294     1CCE  3024               	movlw	low _I2C1_DefaultCallback
 10295     1CCF  0023               	movlb	3	; select bank3
 10296     1CD0  00BE               	movwf	I2C1_CallbackRegister@callbackHandler^(0+384)
 10297     1CD1  301B               	movlw	high _I2C1_DefaultCallback
 10298     1CD2  00BF               	movwf	(I2C1_CallbackRegister@callbackHandler^(0+384)+1)
 10299     1CD3  319C  244E  319C   	fcall	_I2C1_CallbackRegister
 10300     1CD6                     l6361:
 10301                           
 10302                           ;mcc_generated_files/i2c_host/src/mssp.c: 128:     SSP1CON1bits.SSPEN = 1;
 10303     1CD6  0024               	movlb	4	; select bank4
 10304     1CD7  1695               	bsf	21,5	;volatile
 10305     1CD8                     l157:
 10306     1CD8  0008               	return
 10307     1CD9                     __end_of_I2C1_Initialize:
 10308                           
 10309                           	psect	text15
 10310     1C4E                     __ptext15:	
 10311 ;; *************** function _I2C1_CallbackRegister *****************
 10312 ;; Defined at:
 10313 ;;		line 211 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;  callbackHand    2    0[BANK3 ] PTR FTN()void 
 10316 ;;		 -> I2C1_DefaultCallback(1), 
 10317 ;; Auto vars:     Size  Location     Type
 10318 ;;		None
 10319 ;; Return value:  Size  Location     Type
 10320 ;;                  1    wreg      void 
 10321 ;; Registers used:
 10322 ;;		wreg, status,2, status,0
 10323 ;; Tracked objects:
 10324 ;;		On entry : 0/0
 10325 ;;		On exit  : 0/0
 10326 ;;		Unchanged: 0/0
 10327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10328 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10331 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10332 ;;Total ram usage:        2 bytes
 10333 ;; Hardware stack levels used: 1
 10334 ;; Hardware stack levels required when called: 12
 10335 ;; This function calls:
 10336 ;;		Nothing
 10337 ;; This function is called by:
 10338 ;;		_I2C1_Initialize
 10339 ;;		_I2C1_Deinitialize
 10340 ;; This function uses a non-reentrant model
 10341 ;;
 10342                           
 10343     1C4E                     _I2C1_CallbackRegister:	
 10344                           ;psect for function _I2C1_CallbackRegister
 10345                           
 10346     1C4E                     l6309:	
 10347                           ;incstack = 0
 10348                           ; Regs used in _I2C1_CallbackRegister: [wreg+status,2+status,0]
 10349                           
 10350                           
 10351                           ;mcc_generated_files/i2c_host/src/mssp.c: 211: void I2C1_CallbackRegister(void (*callbac
      +                          kHandler)(void));mcc_generated_files/i2c_host/src/mssp.c: 212: {;mcc_generated_files/i2c
      +                          _host/src/mssp.c: 213:     if (callbackHandler != ((void*)0))
 10352     1C4E  0023               	movlb	3	; select bank3
 10353     1C4F  083E               	movf	I2C1_CallbackRegister@callbackHandler^(0+384),w
 10354     1C50  043F               	iorwf	(I2C1_CallbackRegister@callbackHandler+1)^(0+384),w
 10355     1C51  1903               	btfsc	3,2
 10356     1C52  2C54               	goto	u5571
 10357     1C53  2C55               	goto	u5570
 10358     1C54                     u5571:
 10359     1C54  2C59               	goto	l184
 10360     1C55                     u5570:
 10361     1C55                     l6311:
 10362                           
 10363                           ;mcc_generated_files/i2c_host/src/mssp.c: 214:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 215:         I2C1_Callback = callbackHandler;
 10364     1C55  083F               	movf	(I2C1_CallbackRegister@callbackHandler+1)^(0+384),w
 10365     1C56  00BD               	movwf	(_I2C1_Callback+1)^(0+384)
 10366     1C57  083E               	movf	I2C1_CallbackRegister@callbackHandler^(0+384),w
 10367     1C58  00BC               	movwf	_I2C1_Callback^(0+384)
 10368     1C59                     l184:
 10369     1C59  0008               	return
 10370     1C5A                     __end_of_I2C1_CallbackRegister:
 10371                           
 10372                           	psect	text16
 10373     1FA4                     __ptext16:	
 10374 ;; *************** function _EUSART_Initialize *****************
 10375 ;; Defined at:
 10376 ;;		line 108 in file "mcc_generated_files/uart/src/eusart.c"
 10377 ;; Parameters:    Size  Location     Type
 10378 ;;		None
 10379 ;; Auto vars:     Size  Location     Type
 10380 ;;		None
 10381 ;; Return value:  Size  Location     Type
 10382 ;;                  1    wreg      void 
 10383 ;; Registers used:
 10384 ;;		wreg, status,2, status,0, pclath, cstack
 10385 ;; Tracked objects:
 10386 ;;		On entry : 0/0
 10387 ;;		On exit  : 0/0
 10388 ;;		Unchanged: 0/0
 10389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10394 ;;Total ram usage:        0 bytes
 10395 ;; Hardware stack levels used: 1
 10396 ;; Hardware stack levels required when called: 13
 10397 ;; This function calls:
 10398 ;;		_EUSART_FramingErrorCallbackRegister
 10399 ;;		_EUSART_OverrunErrorCallbackRegister
 10400 ;;		_EUSART_RxCompleteCallbackRegister
 10401 ;; This function is called by:
 10402 ;;		_SYSTEM_Initialize
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406     1FA4                     _EUSART_Initialize:	
 10407                           ;psect for function _EUSART_Initialize
 10408                           
 10409     1FA4                     l6453:	
 10410                           ;incstack = 0
 10411                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10412                           
 10413                           
 10414                           ;mcc_generated_files/uart/src/eusart.c: 110:     PIE1bits.RCIE = 0;
 10415     1FA4  0021               	movlb	1	; select bank1
 10416     1FA5  1290               	bcf	16,5	;volatile
 10417     1FA6                     l6455:
 10418                           
 10419                           ;mcc_generated_files/uart/src/eusart.c: 111:     EUSART_RxCompleteCallbackRegister(EUSAR
      +                          T_ReceiveISR);
 10420     1FA6  300D               	movlw	low _EUSART_ReceiveISR
 10421     1FA7  0023               	movlb	3	; select bank3
 10422     1FA8  00BE               	movwf	EUSART_RxCompleteCallbackRegister@callbackHandler^(0+384)
 10423     1FA9  3013               	movlw	high _EUSART_ReceiveISR
 10424     1FAA  00BF               	movwf	(EUSART_RxCompleteCallbackRegister@callbackHandler^(0+384)+1)
 10425     1FAB  319C  2442  319F   	fcall	_EUSART_RxCompleteCallbackRegister
 10426     1FAE                     l6457:
 10427                           
 10428                           ;mcc_generated_files/uart/src/eusart.c: 116:     BAUD1CON = 0x48;
 10429     1FAE  3048               	movlw	72
 10430     1FAF  0023               	movlb	3	; select bank3
 10431     1FB0  009F               	movwf	31	;volatile
 10432     1FB1                     l6459:
 10433                           
 10434                           ;mcc_generated_files/uart/src/eusart.c: 118:     RC1STA = 0x90;
 10435     1FB1  3090               	movlw	144
 10436     1FB2  009D               	movwf	29	;volatile
 10437     1FB3                     l6461:
 10438                           
 10439                           ;mcc_generated_files/uart/src/eusart.c: 120:     TX1STA = 0x26;
 10440     1FB3  3026               	movlw	38
 10441     1FB4  009E               	movwf	30	;volatile
 10442     1FB5                     l6463:
 10443                           
 10444                           ;mcc_generated_files/uart/src/eusart.c: 122:     SPBRGL = 0x67;
 10445     1FB5  3067               	movlw	103
 10446     1FB6  009B               	movwf	27	;volatile
 10447     1FB7                     l6465:
 10448                           
 10449                           ;mcc_generated_files/uart/src/eusart.c: 124:     SPBRGH = 0x0;
 10450     1FB7  019C               	clrf	28	;volatile
 10451     1FB8                     l6467:
 10452                           
 10453                           ;mcc_generated_files/uart/src/eusart.c: 126:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 10454     1FB8  3022               	movlw	low _EUSART_DefaultFramingErrorCallback
 10455     1FB9  00BE               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+384)
 10456     1FBA  301B               	movlw	high _EUSART_DefaultFramingErrorCallback
 10457     1FBB  00BF               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+384)+1)
 10458     1FBC  319C  2472  319F   	fcall	_EUSART_FramingErrorCallbackRegister
 10459     1FBF                     l6469:
 10460                           
 10461                           ;mcc_generated_files/uart/src/eusart.c: 127:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 10462     1FBF  3041               	movlw	low _EUSART_DefaultOverrunErrorCallback
 10463     1FC0  0023               	movlb	3	; select bank3
 10464     1FC1  00BE               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+384)
 10465     1FC2  301B               	movlw	high _EUSART_DefaultOverrunErrorCallback
 10466     1FC3  00BF               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+384)+1)
 10467     1FC4  319C  2481  319F   	fcall	_EUSART_OverrunErrorCallbackRegister
 10468     1FC7                     l6471:
 10469                           
 10470                           ;mcc_generated_files/uart/src/eusart.c: 128:     eusartRxLastError.status = 0;
 10471     1FC7  0023               	movlb	3	; select bank3
 10472     1FC8  01B0               	clrf	_eusartRxLastError^(0+384)	;volatile
 10473     1FC9  01B1               	clrf	(_eusartRxLastError+1)^(0+384)	;volatile
 10474     1FCA                     l6473:
 10475                           
 10476                           ;mcc_generated_files/uart/src/eusart.c: 130:     eusartRxHead = 0;
 10477     1FCA  0022               	movlb	2	; select bank2
 10478     1FCB  01EA               	clrf	_eusartRxHead^(0+256)	;volatile
 10479     1FCC                     l6475:
 10480                           
 10481                           ;mcc_generated_files/uart/src/eusart.c: 131:     eusartRxTail = 0;
 10482     1FCC  01E9               	clrf	_eusartRxTail^(0+256)	;volatile
 10483     1FCD                     l6477:
 10484                           
 10485                           ;mcc_generated_files/uart/src/eusart.c: 132:     eusartRxCount = 0;
 10486     1FCD  01E8               	clrf	_eusartRxCount^(0+256)	;volatile
 10487     1FCE                     l6479:
 10488                           
 10489                           ;mcc_generated_files/uart/src/eusart.c: 134:     PIE1bits.RCIE = 1;
 10490     1FCE  0021               	movlb	1	; select bank1
 10491     1FCF  1690               	bsf	16,5	;volatile
 10492     1FD0                     l896:
 10493     1FD0  0008               	return
 10494     1FD1                     __end_of_EUSART_Initialize:
 10495                           
 10496                           	psect	text17
 10497     1C42                     __ptext17:	
 10498 ;; *************** function _EUSART_RxCompleteCallbackRegister *****************
 10499 ;; Defined at:
 10500 ;;		line 346 in file "mcc_generated_files/uart/src/eusart.c"
 10501 ;; Parameters:    Size  Location     Type
 10502 ;;  callbackHand    2    0[BANK3 ] PTR FTN()void 
 10503 ;;		 -> EUSART_ReceiveISR(1), 
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;		None
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  1    wreg      void 
 10508 ;; Registers used:
 10509 ;;		wreg, status,2, status,0
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10515 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10518 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10519 ;;Total ram usage:        2 bytes
 10520 ;; Hardware stack levels used: 1
 10521 ;; Hardware stack levels required when called: 12
 10522 ;; This function calls:
 10523 ;;		Nothing
 10524 ;; This function is called by:
 10525 ;;		_EUSART_Initialize
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529     1C42                     _EUSART_RxCompleteCallbackRegister:	
 10530                           ;psect for function _EUSART_RxCompleteCallbackRegister
 10531                           
 10532     1C42                     l6323:	
 10533                           ;incstack = 0
 10534                           ; Regs used in _EUSART_RxCompleteCallbackRegister: [wreg+status,2+status,0]
 10535                           
 10536                           
 10537                           ;mcc_generated_files/uart/src/eusart.c: 346: void EUSART_RxCompleteCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 347: {;mcc_generated_
      +                          files/uart/src/eusart.c: 348:     if(((void*)0) != callbackHandler)
 10538     1C42  0023               	movlb	3	; select bank3
 10539     1C43  083E               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler^(0+384),w
 10540     1C44  043F               	iorwf	(EUSART_RxCompleteCallbackRegister@callbackHandler+1)^(0+384),w
 10541     1C45  1903               	btfsc	3,2
 10542     1C46  2C48               	goto	u5581
 10543     1C47  2C49               	goto	u5580
 10544     1C48                     u5581:
 10545     1C48  2C4D               	goto	l991
 10546     1C49                     u5580:
 10547     1C49                     l6325:
 10548                           
 10549                           ;mcc_generated_files/uart/src/eusart.c: 349:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 350:        EUSART_RxInterruptHandler = callbackHandler;
 10550     1C49  083F               	movf	(EUSART_RxCompleteCallbackRegister@callbackHandler+1)^(0+384),w
 10551     1C4A  00BB               	movwf	(_EUSART_RxInterruptHandler+1)^(0+384)
 10552     1C4B  083E               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler^(0+384),w
 10553     1C4C  00BA               	movwf	_EUSART_RxInterruptHandler^(0+384)
 10554     1C4D                     l991:
 10555     1C4D  0008               	return
 10556     1C4E                     __end_of_EUSART_RxCompleteCallbackRegister:
 10557                           
 10558                           	psect	text18
 10559     1C81                     __ptext18:	
 10560 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 10561 ;; Defined at:
 10562 ;;		line 338 in file "mcc_generated_files/uart/src/eusart.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  callbackHand    2    0[BANK3 ] PTR FTN()void 
 10565 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 10566 ;; Auto vars:     Size  Location     Type
 10567 ;;		None
 10568 ;; Return value:  Size  Location     Type
 10569 ;;                  1    wreg      void 
 10570 ;; Registers used:
 10571 ;;		wreg, status,2, status,0
 10572 ;; Tracked objects:
 10573 ;;		On entry : 0/0
 10574 ;;		On exit  : 0/0
 10575 ;;		Unchanged: 0/0
 10576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10577 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10580 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10581 ;;Total ram usage:        2 bytes
 10582 ;; Hardware stack levels used: 1
 10583 ;; Hardware stack levels required when called: 12
 10584 ;; This function calls:
 10585 ;;		Nothing
 10586 ;; This function is called by:
 10587 ;;		_EUSART_Initialize
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591     1C81                     _EUSART_OverrunErrorCallbackRegister:	
 10592                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 10593                           
 10594     1C81                     l6331:	
 10595                           ;incstack = 0
 10596                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 10597                           
 10598                           
 10599                           ;mcc_generated_files/uart/src/eusart.c: 338: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 339: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 340:     if(((void*)0) != callbackHandler)
 10600     1C81  0023               	movlb	3	; select bank3
 10601     1C82  083E               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+384),w
 10602     1C83  043F               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+384),w
 10603     1C84  1903               	btfsc	3,2
 10604     1C85  2C87               	goto	u5601
 10605     1C86  2C88               	goto	u5600
 10606     1C87                     u5601:
 10607     1C87  2C8F               	goto	l987
 10608     1C88                     u5600:
 10609     1C88                     l6333:
 10610                           
 10611                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         EUSART_OverrunErrorHandler = callbackHandler;
 10612     1C88  083F               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+384),w
 10613     1C89  0022               	movlb	2	; select bank2
 10614     1C8A  00DA               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 10615     1C8B  0023               	movlb	3	; select bank3
 10616     1C8C  083E               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+384),w
 10617     1C8D  0022               	movlb	2	; select bank2
 10618     1C8E  00D9               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 10619     1C8F                     l987:
 10620     1C8F  0008               	return
 10621     1C90                     __end_of_EUSART_OverrunErrorCallbackRegister:
 10622                           
 10623                           	psect	text19
 10624     1C72                     __ptext19:	
 10625 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 10626 ;; Defined at:
 10627 ;;		line 330 in file "mcc_generated_files/uart/src/eusart.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;  callbackHand    2    0[BANK3 ] PTR FTN()void 
 10630 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 10631 ;; Auto vars:     Size  Location     Type
 10632 ;;		None
 10633 ;; Return value:  Size  Location     Type
 10634 ;;                  1    wreg      void 
 10635 ;; Registers used:
 10636 ;;		wreg, status,2, status,0
 10637 ;; Tracked objects:
 10638 ;;		On entry : 0/0
 10639 ;;		On exit  : 0/0
 10640 ;;		Unchanged: 0/0
 10641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10642 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10645 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10646 ;;Total ram usage:        2 bytes
 10647 ;; Hardware stack levels used: 1
 10648 ;; Hardware stack levels required when called: 12
 10649 ;; This function calls:
 10650 ;;		Nothing
 10651 ;; This function is called by:
 10652 ;;		_EUSART_Initialize
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656     1C72                     _EUSART_FramingErrorCallbackRegister:	
 10657                           ;psect for function _EUSART_FramingErrorCallbackRegister
 10658                           
 10659     1C72                     l6327:	
 10660                           ;incstack = 0
 10661                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 10662                           
 10663                           
 10664                           ;mcc_generated_files/uart/src/eusart.c: 330: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 331: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 332:     if(((void*)0) != callbackHandler)
 10665     1C72  0023               	movlb	3	; select bank3
 10666     1C73  083E               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+384),w
 10667     1C74  043F               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+384),w
 10668     1C75  1903               	btfsc	3,2
 10669     1C76  2C78               	goto	u5591
 10670     1C77  2C79               	goto	u5590
 10671     1C78                     u5591:
 10672     1C78  2C80               	goto	l983
 10673     1C79                     u5590:
 10674     1C79                     l6329:
 10675                           
 10676                           ;mcc_generated_files/uart/src/eusart.c: 333:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 334:         EUSART_FramingErrorHandler = callbackHandler;
 10677     1C79  083F               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+384),w
 10678     1C7A  0022               	movlb	2	; select bank2
 10679     1C7B  00DC               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
 10680     1C7C  0023               	movlb	3	; select bank3
 10681     1C7D  083E               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+384),w
 10682     1C7E  0022               	movlb	2	; select bank2
 10683     1C7F  00DB               	movwf	_EUSART_FramingErrorHandler^(0+256)
 10684     1C80                     l983:
 10685     1C80  0008               	return
 10686     1C81                     __end_of_EUSART_FramingErrorCallbackRegister:
 10687                           
 10688                           	psect	text20
 10689     1BDC                     __ptext20:	
 10690 ;; *************** function _CLOCK_Initialize *****************
 10691 ;; Defined at:
 10692 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 10693 ;; Parameters:    Size  Location     Type
 10694 ;;		None
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;		None
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  1    wreg      void 
 10699 ;; Registers used:
 10700 ;;		wreg, status,2
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;Total ram usage:        0 bytes
 10711 ;; Hardware stack levels used: 1
 10712 ;; Hardware stack levels required when called: 12
 10713 ;; This function calls:
 10714 ;;		Nothing
 10715 ;; This function is called by:
 10716 ;;		_SYSTEM_Initialize
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720     1BDC                     _CLOCK_Initialize:	
 10721                           ;psect for function _CLOCK_Initialize
 10722                           
 10723     1BDC                     l6375:	
 10724                           ;incstack = 0
 10725                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
 10726                           
 10727                           
 10728                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (13 << 0x3)
 10729     1BDC  306A               	movlw	106
 10730     1BDD  0021               	movlb	1	; select bank1
 10731     1BDE  0099               	movwf	25	;volatile
 10732     1BDF                     l6377:
 10733                           
 10734                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7)
 10735     1BDF  0022               	movlb	2	; select bank2
 10736     1BE0  0196               	clrf	22	;volatile
 10737     1BE1                     l6379:
 10738                           
 10739                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
 10740     1BE1  0021               	movlb	1	; select bank1
 10741     1BE2  0198               	clrf	24	;volatile
 10742     1BE3                     l384:
 10743     1BE3  0008               	return
 10744     1BE4                     __end_of_CLOCK_Initialize:
 10745                           
 10746                           	psect	text21
 10747     07F5                     __ptext21:	
 10748 ;; *************** function _CCP2_Initialize *****************
 10749 ;; Defined at:
 10750 ;;		line 50 in file "mcc_generated_files/pwm/src/ccp2.c"
 10751 ;; Parameters:    Size  Location     Type
 10752 ;;		None
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;		None
 10755 ;; Return value:  Size  Location     Type
 10756 ;;                  1    wreg      void 
 10757 ;; Registers used:
 10758 ;;		wreg, status,2, status,0
 10759 ;; Tracked objects:
 10760 ;;		On entry : 0/0
 10761 ;;		On exit  : 0/0
 10762 ;;		Unchanged: 0/0
 10763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10768 ;;Total ram usage:        0 bytes
 10769 ;; Hardware stack levels used: 1
 10770 ;; Hardware stack levels required when called: 12
 10771 ;; This function calls:
 10772 ;;		Nothing
 10773 ;; This function is called by:
 10774 ;;		_SYSTEM_Initialize
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778     07F5                     _CCP2_Initialize:	
 10779                           ;psect for function _CCP2_Initialize
 10780                           
 10781     07F5                     l6367:	
 10782                           ;incstack = 0
 10783                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0]
 10784                           
 10785                           
 10786                           ;mcc_generated_files/pwm/src/ccp2.c: 55:     CCP2CON = 0x8F;
 10787     07F5  308F               	movlw	143
 10788     07F6  0025               	movlb	5	; select bank5
 10789     07F7  009A               	movwf	26	;volatile
 10790     07F8                     l6369:
 10791                           
 10792                           ;mcc_generated_files/pwm/src/ccp2.c: 58:     CCPR2H = 0x0;
 10793     07F8  0199               	clrf	25	;volatile
 10794     07F9                     l6371:
 10795                           
 10796                           ;mcc_generated_files/pwm/src/ccp2.c: 61:     CCPR2L = 0x18;
 10797     07F9  3018               	movlw	24
 10798     07FA  0098               	movwf	24	;volatile
 10799     07FB                     l6373:
 10800                           
 10801                           ;mcc_generated_files/pwm/src/ccp2.c: 64:     CCPTMRSbits.CCP2TSEL = 0x1;
 10802     07FB  081E               	movf	30,w	;volatile
 10803     07FC  39F3               	andlw	-13
 10804     07FD  3804               	iorlw	4
 10805     07FE  009E               	movwf	30	;volatile
 10806     07FF                     l338:
 10807     07FF  0008               	return
 10808     0800                     __end_of_CCP2_Initialize:
 10809                           
 10810                           	psect	text22
 10811     1BFF                     __ptext22:	
 10812 ;; *************** function _CCP1_Initialize *****************
 10813 ;; Defined at:
 10814 ;;		line 50 in file "mcc_generated_files/pwm/src/ccp1.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;		None
 10817 ;; Auto vars:     Size  Location     Type
 10818 ;;		None
 10819 ;; Return value:  Size  Location     Type
 10820 ;;                  1    wreg      void 
 10821 ;; Registers used:
 10822 ;;		wreg, status,2, status,0
 10823 ;; Tracked objects:
 10824 ;;		On entry : 0/0
 10825 ;;		On exit  : 0/0
 10826 ;;		Unchanged: 0/0
 10827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10832 ;;Total ram usage:        0 bytes
 10833 ;; Hardware stack levels used: 1
 10834 ;; Hardware stack levels required when called: 12
 10835 ;; This function calls:
 10836 ;;		Nothing
 10837 ;; This function is called by:
 10838 ;;		_SYSTEM_Initialize
 10839 ;; This function uses a non-reentrant model
 10840 ;;
 10841                           
 10842     1BFF                     _CCP1_Initialize:	
 10843                           ;psect for function _CCP1_Initialize
 10844                           
 10845     1BFF                     l6363:	
 10846                           ;incstack = 0
 10847                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0]
 10848                           
 10849                           
 10850                           ;mcc_generated_files/pwm/src/ccp1.c: 55:     CCP1CON = 0x8F;
 10851     1BFF  308F               	movlw	143
 10852     1C00  0025               	movlb	5	; select bank5
 10853     1C01  0093               	movwf	19	;volatile
 10854                           
 10855                           ;mcc_generated_files/pwm/src/ccp1.c: 58:     CCPR1H = 0x1;
 10856     1C02  3001               	movlw	1
 10857     1C03  0092               	movwf	18	;volatile
 10858                           
 10859                           ;mcc_generated_files/pwm/src/ccp1.c: 61:     CCPR1L = 0xFF;
 10860     1C04  30FF               	movlw	255
 10861     1C05  0091               	movwf	17	;volatile
 10862     1C06                     l6365:
 10863                           
 10864                           ;mcc_generated_files/pwm/src/ccp1.c: 64:     CCPTMRSbits.CCP1TSEL = 0x0;
 10865     1C06  30FC               	movlw	-4
 10866     1C07  059E               	andwf	30,f	;volatile
 10867     1C08                     l317:
 10868     1C08  0008               	return
 10869     1C09                     __end_of_CCP1_Initialize:
 10870                           
 10871                           	psect	text23
 10872     1C1F                     __ptext23:	
 10873 ;; *************** function _ADC_Initialize *****************
 10874 ;; Defined at:
 10875 ;;		line 53 in file "mcc_generated_files/adc/src/adc.c"
 10876 ;; Parameters:    Size  Location     Type
 10877 ;;		None
 10878 ;; Auto vars:     Size  Location     Type
 10879 ;;		None
 10880 ;; Return value:  Size  Location     Type
 10881 ;;                  1    wreg      void 
 10882 ;; Registers used:
 10883 ;;		wreg, status,2
 10884 ;; Tracked objects:
 10885 ;;		On entry : 0/0
 10886 ;;		On exit  : 0/0
 10887 ;;		Unchanged: 0/0
 10888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10893 ;;Total ram usage:        0 bytes
 10894 ;; Hardware stack levels used: 1
 10895 ;; Hardware stack levels required when called: 12
 10896 ;; This function calls:
 10897 ;;		Nothing
 10898 ;; This function is called by:
 10899 ;;		_SYSTEM_Initialize
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903     1C1F                     _ADC_Initialize:	
 10904                           ;psect for function _ADC_Initialize
 10905                           
 10906     1C1F                     l6341:	
 10907                           ;incstack = 0
 10908                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 10909                           
 10910                           
 10911                           ;mcc_generated_files/adc/src/adc.c: 56:     ADCON1 = 0x90;
 10912     1C1F  3090               	movlw	144
 10913     1C20  0021               	movlb	1	; select bank1
 10914     1C21  009E               	movwf	30	;volatile
 10915     1C22                     l6343:
 10916                           
 10917                           ;mcc_generated_files/adc/src/adc.c: 59:     ADRESL = 0x0;
 10918     1C22  019B               	clrf	27	;volatile
 10919     1C23                     l6345:
 10920                           
 10921                           ;mcc_generated_files/adc/src/adc.c: 62:     ADRESH = 0x0;
 10922     1C23  019C               	clrf	28	;volatile
 10923     1C24                     l6347:
 10924                           
 10925                           ;mcc_generated_files/adc/src/adc.c: 65:     ADCON2 = 0x0;
 10926     1C24  019F               	clrf	31	;volatile
 10927     1C25                     l6349:
 10928                           
 10929                           ;mcc_generated_files/adc/src/adc.c: 68:     ADCON0 = 0x1;
 10930     1C25  3001               	movlw	1
 10931     1C26  009D               	movwf	29	;volatile
 10932     1C27                     l6351:
 10933                           
 10934                           ;mcc_generated_files/adc/src/adc.c: 71:     PIR1bits.ADIF = 0;
 10935     1C27  0020               	movlb	0	; select bank0
 10936     1C28  1310               	bcf	16,6	;volatile
 10937     1C29                     l19:
 10938     1C29  0008               	return
 10939     1C2A                     __end_of_ADC_Initialize:
 10940                           
 10941                           	psect	text24
 10942     1297                     __ptext24:	
 10943 ;; *************** function _LCD_Init *****************
 10944 ;; Defined at:
 10945 ;;		line 41 in file "I2C_LCD.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;  I2C_Add         1    wreg     unsigned char 
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;  I2C_Add         1    7[BANK3 ] unsigned char 
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1    wreg      void 
 10952 ;; Registers used:
 10953 ;;		wreg, status,2, status,0, pclath, cstack
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
 10962 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10963 ;;Total ram usage:        2 bytes
 10964 ;; Hardware stack levels used: 1
 10965 ;; Hardware stack levels required when called: 17
 10966 ;; This function calls:
 10967 ;;		_IO_Expander_Write
 10968 ;;		_LCD_CMD
 10969 ;; This function is called by:
 10970 ;;		_main
 10971 ;; This function uses a non-reentrant model
 10972 ;;
 10973                           
 10974     1297                     _LCD_Init:	
 10975                           ;psect for function _LCD_Init
 10976                           
 10977                           
 10978                           ;incstack = 0
 10979 ;; hardware stack exceeded
 10980                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
 10981                           ;LCD_Init@I2C_Add stored from wreg
 10982     1297  0023               	movlb	3	; select bank3
 10983     1298  00C5               	movwf	LCD_Init@I2C_Add^(0+384)
 10984     1299                     l6569:
 10985                           
 10986                           ;I2C_LCD.c: 41: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 42: {;I2C_LCD.c: 43:   i
      +                          2c_add = I2C_Add;
 10987     1299  0845               	movf	LCD_Init@I2C_Add^(0+384),w
 10988     129A  0022               	movlb	2	; select bank2
 10989     129B  00E6               	movwf	_i2c_add^(0+256)
 10990     129C                     l6571:
 10991                           
 10992                           ;I2C_LCD.c: 44:   IO_Expander_Write(0x00);
 10993     129C  3000               	movlw	0
 10994     129D  319D  2541  3192   	fcall	_IO_Expander_Write
 10995     12A0                     l6573:
 10996                           
 10997                           ;I2C_LCD.c: 45:   _delay((unsigned long)((30)*(4000000/4000.0)));
 10998     12A0  3027               	movlw	39
 10999     12A1  0023               	movlb	3	; select bank3
 11000     12A2  00C4               	movwf	??_LCD_Init^(0+384)
 11001     12A3  30F5               	movlw	245
 11002     12A4                     u5787:
 11003     12A4  0B89               	decfsz	9,f
 11004     12A5  2AA4               	goto	u5787
 11005     12A6  0BC4               	decfsz	??_LCD_Init^(0+384),f
 11006     12A7  2AA4               	goto	u5787
 11007                           
 11008                           ;I2C_LCD.c: 46:   LCD_CMD(0x03);
 11009     12A8  3003               	movlw	3
 11010     12A9  319D  25AF  3192   	fcall	_LCD_CMD
 11011     12AC                     l6575:
 11012                           
 11013                           ;I2C_LCD.c: 47:   _delay((unsigned long)((5)*(4000000/4000.0)));
 11014     12AC  3007               	movlw	7
 11015     12AD  0023               	movlb	3	; select bank3
 11016     12AE  00C4               	movwf	??_LCD_Init^(0+384)
 11017     12AF  307D               	movlw	125
 11018     12B0                     u5797:
 11019     12B0  0B89               	decfsz	9,f
 11020     12B1  2AB0               	goto	u5797
 11021     12B2  0BC4               	decfsz	??_LCD_Init^(0+384),f
 11022     12B3  2AB0               	goto	u5797
 11023     12B4                     l6577:
 11024                           
 11025                           ;I2C_LCD.c: 48:   LCD_CMD(0x03);
 11026     12B4  3003               	movlw	3
 11027     12B5  319D  25AF  3192   	fcall	_LCD_CMD
 11028                           
 11029                           ;I2C_LCD.c: 49:   _delay((unsigned long)((5)*(4000000/4000.0)));
 11030     12B8  3007               	movlw	7
 11031     12B9  0023               	movlb	3	; select bank3
 11032     12BA  00C4               	movwf	??_LCD_Init^(0+384)
 11033     12BB  307D               	movlw	125
 11034     12BC                     u5807:
 11035     12BC  0B89               	decfsz	9,f
 11036     12BD  2ABC               	goto	u5807
 11037     12BE  0BC4               	decfsz	??_LCD_Init^(0+384),f
 11038     12BF  2ABC               	goto	u5807
 11039     12C0                     l6579:
 11040                           
 11041                           ;I2C_LCD.c: 50:   LCD_CMD(0x03);
 11042     12C0  3003               	movlw	3
 11043     12C1  319D  25AF  3192   	fcall	_LCD_CMD
 11044     12C4                     l6581:
 11045                           
 11046                           ;I2C_LCD.c: 51:   _delay((unsigned long)((5)*(4000000/4000.0)));
 11047     12C4  3007               	movlw	7
 11048     12C5  0023               	movlb	3	; select bank3
 11049     12C6  00C4               	movwf	??_LCD_Init^(0+384)
 11050     12C7  307D               	movlw	125
 11051     12C8                     u5817:
 11052     12C8  0B89               	decfsz	9,f
 11053     12C9  2AC8               	goto	u5817
 11054     12CA  0BC4               	decfsz	??_LCD_Init^(0+384),f
 11055     12CB  2AC8               	goto	u5817
 11056                           
 11057                           ;I2C_LCD.c: 52:   LCD_CMD(0x02);
 11058     12CC  3002               	movlw	2
 11059     12CD  319D  25AF  3192   	fcall	_LCD_CMD
 11060     12D0                     l6583:
 11061                           
 11062                           ;I2C_LCD.c: 53:   _delay((unsigned long)((5)*(4000000/4000.0)));
 11063     12D0  3007               	movlw	7
 11064     12D1  0023               	movlb	3	; select bank3
 11065     12D2  00C4               	movwf	??_LCD_Init^(0+384)
 11066     12D3  307D               	movlw	125
 11067     12D4                     u5827:
 11068     12D4  0B89               	decfsz	9,f
 11069     12D5  2AD4               	goto	u5827
 11070     12D6  0BC4               	decfsz	??_LCD_Init^(0+384),f
 11071     12D7  2AD4               	goto	u5827
 11072     12D8                     l6585:
 11073                           
 11074                           ;I2C_LCD.c: 54:   LCD_CMD(0x20 | (2 << 2));
 11075     12D8  3028               	movlw	40
 11076     12D9  319D  25AF  3192   	fcall	_LCD_CMD
 11077                           
 11078                           ;I2C_LCD.c: 55:   _delay((unsigned long)((50)*(4000000/4000.0)));
 11079     12DC  3041               	movlw	65
 11080     12DD  0023               	movlb	3	; select bank3
 11081     12DE  00C4               	movwf	??_LCD_Init^(0+384)
 11082     12DF  30EE               	movlw	238
 11083     12E0                     u5837:
 11084     12E0  0B89               	decfsz	9,f
 11085     12E1  2AE0               	goto	u5837
 11086     12E2  0BC4               	decfsz	??_LCD_Init^(0+384),f
 11087     12E3  2AE0               	goto	u5837
 11088     12E4  0000               	nop
 11089     12E5                     l6587:
 11090                           
 11091                           ;I2C_LCD.c: 56:   LCD_CMD(0x0C);
 11092     12E5  300C               	movlw	12
 11093     12E6  319D  25AF  3192   	fcall	_LCD_CMD
 11094     12E9                     l6589:
 11095                           
 11096                           ;I2C_LCD.c: 57:   _delay((unsigned long)((50)*(4000000/4000.0)));
 11097     12E9  3041               	movlw	65
 11098     12EA  0023               	movlb	3	; select bank3
 11099     12EB  00C4               	movwf	??_LCD_Init^(0+384)
 11100     12EC  30EE               	movlw	238
 11101     12ED                     u5847:
 11102     12ED  0B89               	decfsz	9,f
 11103     12EE  2AED               	goto	u5847
 11104     12EF  0BC4               	decfsz	??_LCD_Init^(0+384),f
 11105     12F0  2AED               	goto	u5847
 11106     12F1  0000               	nop
 11107                           
 11108                           ;I2C_LCD.c: 58:   LCD_CMD(0x01);
 11109     12F2  3001               	movlw	1
 11110     12F3  319D  25AF  3192   	fcall	_LCD_CMD
 11111     12F6                     l6591:
 11112                           
 11113                           ;I2C_LCD.c: 59:   _delay((unsigned long)((50)*(4000000/4000.0)));
 11114     12F6  3041               	movlw	65
 11115     12F7  0023               	movlb	3	; select bank3
 11116     12F8  00C4               	movwf	??_LCD_Init^(0+384)
 11117     12F9  30EE               	movlw	238
 11118     12FA                     u5857:
 11119     12FA  0B89               	decfsz	9,f
 11120     12FB  2AFA               	goto	u5857
 11121     12FC  0BC4               	decfsz	??_LCD_Init^(0+384),f
 11122     12FD  2AFA               	goto	u5857
 11123     12FE  0000               	nop
 11124     12FF                     l6593:
 11125                           
 11126                           ;I2C_LCD.c: 60:   LCD_CMD(0x04 | 0x02);
 11127     12FF  3006               	movlw	6
 11128     1300  319D  25AF  3192   	fcall	_LCD_CMD
 11129                           
 11130                           ;I2C_LCD.c: 61:   _delay((unsigned long)((50)*(4000000/4000.0)));
 11131     1303  3041               	movlw	65
 11132     1304  0023               	movlb	3	; select bank3
 11133     1305  00C4               	movwf	??_LCD_Init^(0+384)
 11134     1306  30EE               	movlw	238
 11135     1307                     u5867:
 11136     1307  0B89               	decfsz	9,f
 11137     1308  2B07               	goto	u5867
 11138     1309  0BC4               	decfsz	??_LCD_Init^(0+384),f
 11139     130A  2B07               	goto	u5867
 11140     130B  0000               	nop
 11141     130C                     l1045:
 11142     130C  0008               	return
 11143     130D                     __end_of_LCD_Init:
 11144                           
 11145                           	psect	text25
 11146     1DAF                     __ptext25:	
 11147 ;; *************** function _LCD_CMD *****************
 11148 ;; Defined at:
 11149 ;;		line 78 in file "I2C_LCD.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;  CMD             1    wreg     unsigned char 
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;  CMD             1    5[BANK3 ] unsigned char 
 11154 ;; Return value:  Size  Location     Type
 11155 ;;                  1    wreg      void 
 11156 ;; Registers used:
 11157 ;;		wreg, status,2, status,0, pclath, cstack
 11158 ;; Tracked objects:
 11159 ;;		On entry : 0/0
 11160 ;;		On exit  : 0/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
 11165 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
 11166 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 11167 ;;Total ram usage:        2 bytes
 11168 ;; Hardware stack levels used: 1
 11169 ;; Hardware stack levels required when called: 16
 11170 ;; This function calls:
 11171 ;;		_LCD_Write_4Bit
 11172 ;; This function is called by:
 11173 ;;		_LCD_Init
 11174 ;;		_LCD_SL
 11175 ;;		_LCD_SR
 11176 ;; This function uses a non-reentrant model
 11177 ;;
 11178                           
 11179     1DAF                     _LCD_CMD:	
 11180                           ;psect for function _LCD_CMD
 11181                           
 11182                           
 11183                           ;incstack = 0
 11184 ;; hardware stack exceeded
 11185                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
 11186                           ;LCD_CMD@CMD stored from wreg
 11187     1DAF  0023               	movlb	3	; select bank3
 11188     1DB0  00C3               	movwf	LCD_CMD@CMD^(0+384)
 11189     1DB1                     l6537:
 11190                           
 11191                           ;I2C_LCD.c: 78: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 79: {;I2C_LCD.c: 80:   RS = 0
      +                          ;
 11192     1DB1  0022               	movlb	2	; select bank2
 11193     1DB2  01E7               	clrf	_RS^(0+256)
 11194     1DB3                     l6539:
 11195                           
 11196                           ;I2C_LCD.c: 81:   LCD_Write_4Bit(CMD & 0xF0);
 11197     1DB3  0023               	movlb	3	; select bank3
 11198     1DB4  0843               	movf	LCD_CMD@CMD^(0+384),w
 11199     1DB5  39F0               	andlw	240
 11200     1DB6  319D  2597  319D   	fcall	_LCD_Write_4Bit
 11201     1DB9                     l6541:
 11202                           
 11203                           ;I2C_LCD.c: 82:   LCD_Write_4Bit((CMD << 4) & 0xF0);
 11204     1DB9  0023               	movlb	3	; select bank3
 11205     1DBA  0843               	movf	LCD_CMD@CMD^(0+384),w
 11206     1DBB  00C2               	movwf	??_LCD_CMD^(0+384)
 11207     1DBC  3003               	movlw	3
 11208     1DBD                     u5615:
 11209     1DBD  35C2               	lslf	??_LCD_CMD^(0+384),f
 11210     1DBE  3EFF               	addlw	-1
 11211     1DBF  1D03               	skipz
 11212     1DC0  2DBD               	goto	u5615
 11213     1DC1  3542               	lslf	??_LCD_CMD^(0+384),w
 11214     1DC2  39F0               	andlw	240
 11215     1DC3  319D  2597  319D   	fcall	_LCD_Write_4Bit
 11216     1DC6                     l1054:
 11217     1DC6  0008               	return
 11218     1DC7                     __end_of_LCD_CMD:
 11219                           
 11220                           	psect	text26
 11221     1D97                     __ptext26:	
 11222 ;; *************** function _LCD_Write_4Bit *****************
 11223 ;; Defined at:
 11224 ;;		line 70 in file "I2C_LCD.c"
 11225 ;; Parameters:    Size  Location     Type
 11226 ;;  Nibble          1    wreg     unsigned char 
 11227 ;; Auto vars:     Size  Location     Type
 11228 ;;  Nibble          1    3[BANK3 ] unsigned char 
 11229 ;; Return value:  Size  Location     Type
 11230 ;;                  1    wreg      void 
 11231 ;; Registers used:
 11232 ;;		wreg, status,2, status,0, pclath, cstack
 11233 ;; Tracked objects:
 11234 ;;		On entry : 0/0
 11235 ;;		On exit  : 0/0
 11236 ;;		Unchanged: 0/0
 11237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11239 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
 11240 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
 11241 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 11242 ;;Total ram usage:        2 bytes
 11243 ;; Hardware stack levels used: 1
 11244 ;; Hardware stack levels required when called: 15
 11245 ;; This function calls:
 11246 ;;		_IO_Expander_Write
 11247 ;; This function is called by:
 11248 ;;		_LCD_CMD
 11249 ;; This function uses a non-reentrant model
 11250 ;;
 11251                           
 11252     1D97                     _LCD_Write_4Bit:	
 11253                           ;psect for function _LCD_Write_4Bit
 11254                           
 11255                           
 11256                           ;incstack = 0
 11257 ;; hardware stack exceeded
 11258                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
 11259                           ;LCD_Write_4Bit@Nibble stored from wreg
 11260     1D97  0023               	movlb	3	; select bank3
 11261     1D98  00C1               	movwf	LCD_Write_4Bit@Nibble^(0+384)
 11262     1D99                     l6335:
 11263                           
 11264                           ;I2C_LCD.c: 70: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 71: {;I2C_LCD.c: 73
      +                          :   Nibble |= RS;
 11265     1D99  0022               	movlb	2	; select bank2
 11266     1D9A  0867               	movf	_RS^(0+256),w
 11267     1D9B  0023               	movlb	3	; select bank3
 11268     1D9C  00C0               	movwf	??_LCD_Write_4Bit^(0+384)
 11269     1D9D  0840               	movf	??_LCD_Write_4Bit^(0+384),w
 11270     1D9E  04C1               	iorwf	LCD_Write_4Bit@Nibble^(0+384),f
 11271     1D9F                     l6337:
 11272                           
 11273                           ;I2C_LCD.c: 74:   IO_Expander_Write(Nibble | 0x04);
 11274     1D9F  0841               	movf	LCD_Write_4Bit@Nibble^(0+384),w
 11275     1DA0  3804               	iorlw	4
 11276     1DA1  319D  2541  319D   	fcall	_IO_Expander_Write
 11277     1DA4                     l6339:
 11278                           
 11279                           ;I2C_LCD.c: 75:   IO_Expander_Write(Nibble & 0xFB);
 11280     1DA4  0023               	movlb	3	; select bank3
 11281     1DA5  0841               	movf	LCD_Write_4Bit@Nibble^(0+384),w
 11282     1DA6  39FB               	andlw	251
 11283     1DA7  319D  2541  319D   	fcall	_IO_Expander_Write
 11284                           
 11285                           ;I2C_LCD.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 11286     1DAA  3010               	movlw	16
 11287     1DAB                     u5877:
 11288     1DAB  0B89               	decfsz	9,f
 11289     1DAC  2DAB               	goto	u5877
 11290     1DAD  3200               	nop2
 11291     1DAE                     l1051:
 11292     1DAE  0008               	return
 11293     1DAF                     __end_of_LCD_Write_4Bit:
 11294                           
 11295                           	psect	text27
 11296     1D41                     __ptext27:	
 11297 ;; *************** function _IO_Expander_Write *****************
 11298 ;; Defined at:
 11299 ;;		line 63 in file "I2C_LCD.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;  Data            1    wreg     unsigned char 
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;  Data            1    1[BANK3 ] unsigned char 
 11304 ;; Return value:  Size  Location     Type
 11305 ;;                  1    wreg      void 
 11306 ;; Registers used:
 11307 ;;		wreg, status,2, status,0, pclath, cstack
 11308 ;; Tracked objects:
 11309 ;;		On entry : 0/0
 11310 ;;		On exit  : 0/0
 11311 ;;		Unchanged: 0/0
 11312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
 11317 ;;Total ram usage:        1 bytes
 11318 ;; Hardware stack levels used: 1
 11319 ;; Hardware stack levels required when called: 14
 11320 ;; This function calls:
 11321 ;;		_I2C_Master_Start
 11322 ;;		_I2C_Master_Stop
 11323 ;;		_I2C_Master_Write
 11324 ;; This function is called by:
 11325 ;;		_LCD_Init
 11326 ;;		_LCD_Write_4Bit
 11327 ;;		_noBacklight
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331     1D41                     _IO_Expander_Write:	
 11332                           ;psect for function _IO_Expander_Write
 11333                           
 11334                           
 11335                           ;incstack = 0
 11336 ;; hardware stack exceeded
 11337                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
 11338                           ;IO_Expander_Write@Data stored from wreg
 11339     1D41  0023               	movlb	3	; select bank3
 11340     1D42  00BF               	movwf	IO_Expander_Write@Data^(0+384)
 11341     1D43                     l6307:
 11342                           
 11343                           ;I2C_LCD.c: 63: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 64: {;I2C_LCD.c: 6
      +                          5:   I2C_Master_Start();
 11344     1D43  319B  2391  319D   	fcall	_I2C_Master_Start
 11345                           
 11346                           ;I2C_LCD.c: 66:   I2C_Master_Write(i2c_add);
 11347     1D46  0022               	movlb	2	; select bank2
 11348     1D47  0866               	movf	_i2c_add^(0+256),w
 11349     1D48  319C  24A0  319D   	fcall	_I2C_Master_Write
 11350                           
 11351                           ;I2C_LCD.c: 67:   I2C_Master_Write(Data | BackLight_State);
 11352     1D4B  0023               	movlb	3	; select bank3
 11353     1D4C  083F               	movf	IO_Expander_Write@Data^(0+384),w
 11354     1D4D  0022               	movlb	2	; select bank2
 11355     1D4E  046C               	iorwf	_BackLight_State^(0+256),w
 11356     1D4F  319C  24A0  319D   	fcall	_I2C_Master_Write
 11357                           
 11358                           ;I2C_LCD.c: 68:   I2C_Master_Stop();
 11359     1D52  319B  2397  319D   	fcall	_I2C_Master_Stop
 11360     1D55                     l1048:
 11361     1D55  0008               	return
 11362     1D56                     __end_of_IO_Expander_Write:
 11363                           
 11364                           	psect	text28
 11365     1CA0                     __ptext28:	
 11366 ;; *************** function _I2C_Master_Write *****************
 11367 ;; Defined at:
 11368 ;;		line 29 in file "I2C_LCD.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;  data            1    wreg     unsigned char 
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;  data            1    0[BANK3 ] unsigned char 
 11373 ;; Return value:  Size  Location     Type
 11374 ;;                  1    wreg      unsigned char 
 11375 ;; Registers used:
 11376 ;;		wreg, status,2, status,0, pclath, cstack
 11377 ;; Tracked objects:
 11378 ;;		On entry : 0/0
 11379 ;;		On exit  : 0/0
 11380 ;;		Unchanged: 0/0
 11381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11383 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
 11384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11385 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
 11386 ;;Total ram usage:        1 bytes
 11387 ;; Hardware stack levels used: 1
 11388 ;; Hardware stack levels required when called: 13
 11389 ;; This function calls:
 11390 ;;		_I2C_Master_Wait
 11391 ;; This function is called by:
 11392 ;;		_IO_Expander_Write
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           
 11396     1CA0                     _I2C_Master_Write:	
 11397                           ;psect for function _I2C_Master_Write
 11398                           
 11399                           
 11400                           ;incstack = 0
 11401 ;; hardware stack exceeded
 11402                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11403                           ;I2C_Master_Write@data stored from wreg
 11404     1CA0  0023               	movlb	3	; select bank3
 11405     1CA1  00BE               	movwf	I2C_Master_Write@data^(0+384)
 11406     1CA2                     l6299:
 11407                           
 11408                           ;I2C_LCD.c: 29: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 30: {;I2C_
      +                          LCD.c: 31:   I2C_Master_Wait();
 11409     1CA2  319C  2436  319C   	fcall	_I2C_Master_Wait
 11410     1CA5                     l6301:
 11411                           
 11412                           ;I2C_LCD.c: 32:   SSP1BUF = data;
 11413     1CA5  0023               	movlb	3	; select bank3
 11414     1CA6  083E               	movf	I2C_Master_Write@data^(0+384),w
 11415     1CA7  0024               	movlb	4	; select bank4
 11416     1CA8  0091               	movwf	17	;volatile
 11417     1CA9                     l1039:	
 11418                           ;I2C_LCD.c: 33:   while(!PIR1bits.SSP1IF);
 11419                           
 11420     1CA9  0020               	movlb	0	; select bank0
 11421     1CAA  1D90               	btfss	16,3	;volatile
 11422     1CAB  2CAD               	goto	u5561
 11423     1CAC  2CAE               	goto	u5560
 11424     1CAD                     u5561:
 11425     1CAD  2CA9               	goto	l1039
 11426     1CAE                     u5560:
 11427     1CAE                     l1041:
 11428                           
 11429                           ;I2C_LCD.c: 34:   PIR1bits.SSP1IF = 0;
 11430     1CAE  1190               	bcf	16,3	;volatile
 11431     1CAF                     l6303:
 11432                           
 11433                           ;I2C_LCD.c: 35:   return SSP1CON2bits.ACKSTAT;;	Return value of _I2C_Master_Write is nev
      +                          er used
 11434     1CAF  0024               	movlb	4	; select bank4
 11435     1CB0  0816               	movf	22,w	;volatile
 11436     1CB1                     l1042:
 11437     1CB1  0008               	return
 11438     1CB2                     __end_of_I2C_Master_Write:
 11439                           
 11440                           	psect	text29
 11441     1B97                     __ptext29:	
 11442 ;; *************** function _I2C_Master_Stop *****************
 11443 ;; Defined at:
 11444 ;;		line 24 in file "I2C_LCD.c"
 11445 ;; Parameters:    Size  Location     Type
 11446 ;;		None
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;		None
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  1    wreg      void 
 11451 ;; Registers used:
 11452 ;;		wreg, status,2, status,0, pclath, cstack
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;Total ram usage:        0 bytes
 11463 ;; Hardware stack levels used: 1
 11464 ;; Hardware stack levels required when called: 13
 11465 ;; This function calls:
 11466 ;;		_I2C_Master_Wait
 11467 ;; This function is called by:
 11468 ;;		_IO_Expander_Write
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472     1B97                     _I2C_Master_Stop:	
 11473                           ;psect for function _I2C_Master_Stop
 11474                           
 11475     1B97                     l6295:	
 11476                           ;incstack = 0
 11477 ;; hardware stack exceeded
 11478                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11479                           
 11480                           
 11481                           ;I2C_LCD.c: 26:   I2C_Master_Wait();
 11482     1B97  319C  2436  319B   	fcall	_I2C_Master_Wait
 11483     1B9A                     l6297:
 11484                           
 11485                           ;I2C_LCD.c: 27:   SSP1CON2bits.PEN = 1;
 11486     1B9A  0024               	movlb	4	; select bank4
 11487     1B9B  1516               	bsf	22,2	;volatile
 11488     1B9C                     l1036:
 11489     1B9C  0008               	return
 11490     1B9D                     __end_of_I2C_Master_Stop:
 11491                           
 11492                           	psect	text30
 11493     1B91                     __ptext30:	
 11494 ;; *************** function _I2C_Master_Start *****************
 11495 ;; Defined at:
 11496 ;;		line 19 in file "I2C_LCD.c"
 11497 ;; Parameters:    Size  Location     Type
 11498 ;;		None
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;		None
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  1    wreg      void 
 11503 ;; Registers used:
 11504 ;;		wreg, status,2, status,0, pclath, cstack
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/0
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11514 ;;Total ram usage:        0 bytes
 11515 ;; Hardware stack levels used: 1
 11516 ;; Hardware stack levels required when called: 13
 11517 ;; This function calls:
 11518 ;;		_I2C_Master_Wait
 11519 ;; This function is called by:
 11520 ;;		_IO_Expander_Write
 11521 ;; This function uses a non-reentrant model
 11522 ;;
 11523                           
 11524     1B91                     _I2C_Master_Start:	
 11525                           ;psect for function _I2C_Master_Start
 11526                           
 11527     1B91                     l6291:	
 11528                           ;incstack = 0
 11529 ;; hardware stack exceeded
 11530                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11531                           
 11532                           
 11533                           ;I2C_LCD.c: 21:   I2C_Master_Wait();
 11534     1B91  319C  2436  319B   	fcall	_I2C_Master_Wait
 11535     1B94                     l6293:
 11536                           
 11537                           ;I2C_LCD.c: 22:   SSP1CON2bits.SEN = 1;
 11538     1B94  0024               	movlb	4	; select bank4
 11539     1B95  1416               	bsf	22,0	;volatile
 11540     1B96                     l1033:
 11541     1B96  0008               	return
 11542     1B97                     __end_of_I2C_Master_Start:
 11543                           
 11544                           	psect	text31
 11545     1C36                     __ptext31:	
 11546 ;; *************** function _I2C_Master_Wait *****************
 11547 ;; Defined at:
 11548 ;;		line 15 in file "I2C_LCD.c"
 11549 ;; Parameters:    Size  Location     Type
 11550 ;;		None
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;		None
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  1    wreg      void 
 11555 ;; Registers used:
 11556 ;;		wreg, status,2
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11566 ;;Total ram usage:        0 bytes
 11567 ;; Hardware stack levels used: 1
 11568 ;; Hardware stack levels required when called: 12
 11569 ;; This function calls:
 11570 ;;		Nothing
 11571 ;; This function is called by:
 11572 ;;		_I2C_Master_Start
 11573 ;;		_I2C_Master_Stop
 11574 ;;		_I2C_Master_Write
 11575 ;; This function uses a non-reentrant model
 11576 ;;
 11577                           
 11578     1C36                     _I2C_Master_Wait:	
 11579                           ;psect for function _I2C_Master_Wait
 11580                           
 11581     1C36                     l6287:	
 11582                           ;incstack = 0
 11583 ;; hardware stack exceeded
 11584                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11585                           
 11586     1C36                     l1027:	
 11587                           ;I2C_LCD.c: 17:   while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 11588                           
 11589     1C36  0024               	movlb	4	; select bank4
 11590     1C37  1914               	btfsc	20,2	;volatile
 11591     1C38  2C3A               	goto	u5541
 11592     1C39  2C3B               	goto	u5540
 11593     1C3A                     u5541:
 11594     1C3A  2C36               	goto	l1027
 11595     1C3B                     u5540:
 11596     1C3B                     l6289:
 11597     1C3B  0816               	movf	22,w	;volatile
 11598     1C3C  391F               	andlw	31
 11599     1C3D  1D03               	btfss	3,2
 11600     1C3E  2C40               	goto	u5551
 11601     1C3F  2C41               	goto	u5550
 11602     1C40                     u5551:
 11603     1C40  2C36               	goto	l1027
 11604     1C41                     u5550:
 11605     1C41                     l1030:
 11606     1C41  0008               	return
 11607     1C42                     __end_of_I2C_Master_Wait:
 11608                           
 11609                           	psect	text32
 11610     1C14                     __ptext32:	
 11611 ;; *************** function _I2C_Master_Init *****************
 11612 ;; Defined at:
 11613 ;;		line 6 in file "I2C_LCD.c"
 11614 ;; Parameters:    Size  Location     Type
 11615 ;;		None
 11616 ;; Auto vars:     Size  Location     Type
 11617 ;;		None
 11618 ;; Return value:  Size  Location     Type
 11619 ;;                  1    wreg      void 
 11620 ;; Registers used:
 11621 ;;		wreg, status,2
 11622 ;; Tracked objects:
 11623 ;;		On entry : 0/0
 11624 ;;		On exit  : 0/0
 11625 ;;		Unchanged: 0/0
 11626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11631 ;;Total ram usage:        0 bytes
 11632 ;; Hardware stack levels used: 1
 11633 ;; Hardware stack levels required when called: 12
 11634 ;; This function calls:
 11635 ;;		Nothing
 11636 ;; This function is called by:
 11637 ;;		_main
 11638 ;; This function uses a non-reentrant model
 11639 ;;
 11640                           
 11641     1C14                     _I2C_Master_Init:	
 11642                           ;psect for function _I2C_Master_Init
 11643                           
 11644     1C14                     l6559:	
 11645                           ;incstack = 0
 11646                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
 11647                           
 11648                           
 11649                           ;I2C_LCD.c: 8:   SSP1CON1 = 0x38;
 11650     1C14  3038               	movlw	56
 11651     1C15  0024               	movlb	4	; select bank4
 11652     1C16  0095               	movwf	21	;volatile
 11653     1C17                     l6561:
 11654                           
 11655                           ;I2C_LCD.c: 9:   SSP1CON2 = 0x00;
 11656     1C17  0196               	clrf	22	;volatile
 11657     1C18                     l6563:
 11658                           
 11659                           ;I2C_LCD.c: 10:   SSP1STAT = 0x00;
 11660     1C18  0194               	clrf	20	;volatile
 11661                           
 11662                           ;I2C_LCD.c: 11:   SSP1ADD = ((4000000/4)/100000) - 1;
 11663     1C19  3009               	movlw	9
 11664     1C1A  0092               	movwf	18	;volatile
 11665     1C1B                     l6565:
 11666                           
 11667                           ;I2C_LCD.c: 12:   TRISC4 = 1;
 11668     1C1B  0021               	movlb	1	; select bank1
 11669     1C1C  160E               	bsf	14,4	;volatile
 11670     1C1D                     l6567:
 11671                           
 11672                           ;I2C_LCD.c: 13:   TRISC3 = 1;
 11673     1C1D  158E               	bsf	14,3	;volatile
 11674     1C1E                     l1024:
 11675     1C1E  0008               	return
 11676     1C1F                     __end_of_I2C_Master_Init:
 11677                           
 11678                           	psect	text33
 11679     1DC7                     __ptext33:	
 11680 ;; *************** function _CCP2_LoadDutyValue *****************
 11681 ;; Defined at:
 11682 ;;		line 67 in file "mcc_generated_files/pwm/src/ccp2.c"
 11683 ;; Parameters:    Size  Location     Type
 11684 ;;  dutyValue       2    0[BANK3 ] unsigned short 
 11685 ;; Auto vars:     Size  Location     Type
 11686 ;;		None
 11687 ;; Return value:  Size  Location     Type
 11688 ;;                  1    wreg      void 
 11689 ;; Registers used:
 11690 ;;		wreg, status,2
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11696 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 11697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11699 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 11700 ;;Total ram usage:        2 bytes
 11701 ;; Hardware stack levels used: 1
 11702 ;; Hardware stack levels required when called: 12
 11703 ;; This function calls:
 11704 ;;		Nothing
 11705 ;; This function is called by:
 11706 ;;		_main
 11707 ;; This function uses a non-reentrant model
 11708 ;;
 11709                           
 11710     1DC7                     _CCP2_LoadDutyValue:	
 11711                           ;psect for function _CCP2_LoadDutyValue
 11712                           
 11713     1DC7                     l6543:	
 11714                           ;incstack = 0
 11715                           ; Regs used in _CCP2_LoadDutyValue: [wreg+status,2]
 11716                           
 11717                           
 11718                           ;mcc_generated_files/pwm/src/ccp2.c: 67: void CCP2_LoadDutyValue(uint16_t dutyValue);mcc
      +                          _generated_files/pwm/src/ccp2.c: 68: {;mcc_generated_files/pwm/src/ccp2.c: 69:    dutyVa
      +                          lue &= 0x03FF;
 11719     1DC7  30FF               	movlw	255
 11720     1DC8  0023               	movlb	3	; select bank3
 11721     1DC9  05BE               	andwf	CCP2_LoadDutyValue@dutyValue^(0+384),f
 11722     1DCA  3003               	movlw	3
 11723     1DCB  05BF               	andwf	(CCP2_LoadDutyValue@dutyValue+1)^(0+384),f
 11724     1DCC                     l6545:
 11725                           
 11726                           ;mcc_generated_files/pwm/src/ccp2.c: 72:     if(CCP2CONbits.FMT)
 11727     1DCC  0025               	movlb	5	; select bank5
 11728     1DCD  1E1A               	btfss	26,4	;volatile
 11729     1DCE  2DD0               	goto	u5621
 11730     1DCF  2DD1               	goto	u5620
 11731     1DD0                     u5621:
 11732     1DD0  2DD7               	goto	l6549
 11733     1DD1                     u5620:
 11734     1DD1                     l6547:
 11735                           
 11736                           ;mcc_generated_files/pwm/src/ccp2.c: 73:     {;mcc_generated_files/pwm/src/ccp2.c: 74:  
      +                                 dutyValue <<= 6;
 11737     1DD1  3006               	movlw	6
 11738     1DD2  0023               	movlb	3	; select bank3
 11739     1DD3                     u5635:
 11740     1DD3  35BE               	lslf	CCP2_LoadDutyValue@dutyValue^(0+384),f
 11741     1DD4  0DBF               	rlf	(CCP2_LoadDutyValue@dutyValue+1)^(0+384),f
 11742     1DD5  0B89               	decfsz	9,f
 11743     1DD6  2DD3               	goto	u5635
 11744     1DD7                     l6549:
 11745                           
 11746                           ;mcc_generated_files/pwm/src/ccp2.c: 75:         CCPR2H = (uint8_t)(dutyValue >> 8);
 11747     1DD7  0023               	movlb	3	; select bank3
 11748     1DD8  083F               	movf	(CCP2_LoadDutyValue@dutyValue+1)^(0+384),w
 11749     1DD9  0025               	movlb	5	; select bank5
 11750     1DDA  0099               	movwf	25	;volatile
 11751     1DDB                     l6551:
 11752                           
 11753                           ;mcc_generated_files/pwm/src/ccp2.c: 76:         CCPR2L = (uint8_t)dutyValue;
 11754     1DDB  0023               	movlb	3	; select bank3
 11755     1DDC  083E               	movf	CCP2_LoadDutyValue@dutyValue^(0+384),w
 11756     1DDD  0025               	movlb	5	; select bank5
 11757     1DDE  0098               	movwf	24	;volatile
 11758     1DDF                     l343:	
 11759                           ;mcc_generated_files/pwm/src/ccp2.c: 77:     }
 11760                           
 11761     1DDF  0008               	return
 11762     1DE0                     __end_of_CCP2_LoadDutyValue:
 11763                           
 11764                           	psect	intentry
 11765     0004                     __pintentry:	
 11766 ;; *************** function _INTERRUPT_InterruptManager *****************
 11767 ;; Defined at:
 11768 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 11769 ;; Parameters:    Size  Location     Type
 11770 ;;		None
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1    wreg      void 
 11775 ;; Registers used:
 11776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;Total ram usage:        0 bytes
 11787 ;; Hardware stack levels used: 1
 11788 ;; Hardware stack levels required when called: 11
 11789 ;; This function calls:
 11790 ;;		NULL
 11791 ;;		_EUSART_ReceiveISR
 11792 ;;		_I2C1_ERROR_ISR
 11793 ;;		_I2C1_ISR
 11794 ;;		_Timer0_OverflowISR
 11795 ;; This function is called by:
 11796 ;;		Interrupt level 1
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800     0004                     _INTERRUPT_InterruptManager:
 11801                           
 11802                           ;incstack = 0
 11803 ;; hardware stack exceeded
 11804     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11805                           
 11806                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11807     0005  3180               	pagesel	$
 11808     0006                     i1l6129:
 11809                           
 11810                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 11811     0006  1F0B               	btfss	11,6	;volatile
 11812     0007  2809               	goto	u538_21
 11813     0008  280A               	goto	u538_20
 11814     0009                     u538_21:
 11815     0009  283F               	goto	i1l513
 11816     000A                     u538_20:
 11817     000A                     i1l6131:
 11818                           
 11819                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 11820     000A  0021               	movlb	1	; select bank1
 11821     000B  1D90               	btfss	16,3	;volatile
 11822     000C  280E               	goto	u539_21
 11823     000D  280F               	goto	u539_20
 11824     000E                     u539_21:
 11825     000E  2817               	goto	i1l6137
 11826     000F                     u539_20:
 11827     000F                     i1l6133:
 11828     000F  0020               	movlb	0	; select bank0
 11829     0010  1D90               	btfss	16,3	;volatile
 11830     0011  2813               	goto	u540_21
 11831     0012  2814               	goto	u540_20
 11832     0013                     u540_21:
 11833     0013  2817               	goto	i1l6137
 11834     0014                     u540_20:
 11835     0014                     i1l6135:
 11836                           
 11837                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             I2C1_ISR();
 11838     0014  319B  2361  3180   	fcall	_I2C1_ISR
 11839     0017                     i1l6137:
 11840                           
 11841                           ;mcc_generated_files/system/src/interrupt.c: 68:         if(PIE1bits.RCIE == 1 && PIR1bi
      +                          ts.RCIF == 1)
 11842     0017  0021               	movlb	1	; select bank1
 11843     0018  1E90               	btfss	16,5	;volatile
 11844     0019  281B               	goto	u541_21
 11845     001A  281C               	goto	u541_20
 11846     001B                     u541_21:
 11847     001B  2827               	goto	i1l6143
 11848     001C                     u541_20:
 11849     001C                     i1l6139:
 11850     001C  0020               	movlb	0	; select bank0
 11851     001D  1E90               	btfss	16,5	;volatile
 11852     001E  2820               	goto	u542_21
 11853     001F  2821               	goto	u542_20
 11854     0020                     u542_21:
 11855     0020  2827               	goto	i1l6143
 11856     0021                     u542_20:
 11857     0021                     i1l6141:
 11858                           
 11859                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 11860     0021  0023               	movlb	3	; select bank3
 11861     0022  083B               	movf	(_EUSART_RxInterruptHandler+1)^(0+384),w
 11862     0023  008A               	movwf	10
 11863     0024  083A               	movf	_EUSART_RxInterruptHandler^(0+384),w
 11864     0025  000A               	callw
 11865     0026  3180               	pagesel	$
 11866     0027                     i1l6143:
 11867                           
 11868                           ;mcc_generated_files/system/src/interrupt.c: 72:         if(PIE2bits.BCL1IE == 1 && PIR2
      +                          bits.BCL1IF == 1)
 11869     0027  0021               	movlb	1	; select bank1
 11870     0028  1D91               	btfss	17,3	;volatile
 11871     0029  282B               	goto	u543_21
 11872     002A  282C               	goto	u543_20
 11873     002B                     u543_21:
 11874     002B  2834               	goto	i1l6149
 11875     002C                     u543_20:
 11876     002C                     i1l6145:
 11877     002C  0020               	movlb	0	; select bank0
 11878     002D  1D91               	btfss	17,3	;volatile
 11879     002E  2830               	goto	u544_21
 11880     002F  2831               	goto	u544_20
 11881     0030                     u544_21:
 11882     0030  2834               	goto	i1l6149
 11883     0031                     u544_20:
 11884     0031                     i1l6147:
 11885                           
 11886                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             I2C1_ERROR_ISR();
 11887     0031  319B  235D  3180   	fcall	_I2C1_ERROR_ISR
 11888     0034                     i1l6149:
 11889                           
 11890                           ;mcc_generated_files/system/src/interrupt.c: 76:         if(INTCONbits.TMR0IE == 1 && IN
      +                          TCONbits.TMR0IF == 1)
 11891     0034  1E8B               	btfss	11,5	;volatile
 11892     0035  2837               	goto	u545_21
 11893     0036  2838               	goto	u545_20
 11894     0037                     u545_21:
 11895     0037  283F               	goto	i1l513
 11896     0038                     u545_20:
 11897     0038                     i1l6151:
 11898     0038  1D0B               	btfss	11,2	;volatile
 11899     0039  283B               	goto	u546_21
 11900     003A  283C               	goto	u546_20
 11901     003B                     u546_21:
 11902     003B  283F               	goto	i1l513
 11903     003C                     u546_20:
 11904     003C                     i1l6153:
 11905                           
 11906                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             Timer0_OverflowISR();
 11907     003C  319E  26CC  3180   	fcall	_Timer0_OverflowISR
 11908     003F                     i1l513:
 11909     003F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11910     0040  0009               	retfie
 11911     0041                     __end_of_INTERRUPT_InterruptManager:
 11912                           
 11913                           	psect	text35
 11914     1ECC                     __ptext35:	
 11915 ;; *************** function _Timer0_OverflowISR *****************
 11916 ;; Defined at:
 11917 ;;		line 99 in file "mcc_generated_files/timer/src/tmr0.c"
 11918 ;; Parameters:    Size  Location     Type
 11919 ;;		None
 11920 ;; Auto vars:     Size  Location     Type
 11921 ;;		None
 11922 ;; Return value:  Size  Location     Type
 11923 ;;                  1    wreg      void 
 11924 ;; Registers used:
 11925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11926 ;; Tracked objects:
 11927 ;;		On entry : 0/0
 11928 ;;		On exit  : 0/0
 11929 ;;		Unchanged: 0/0
 11930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11935 ;;Total ram usage:        0 bytes
 11936 ;; Hardware stack levels used: 1
 11937 ;; Hardware stack levels required when called: 10
 11938 ;; This function calls:
 11939 ;;		NULL
 11940 ;;		_TMR1_DefaultOverflowCallback
 11941 ;;		_TMR2_DefaultOverflowCallback
 11942 ;;		_TMR4_DefaultOverflowCallback
 11943 ;;		_Timer0_DefaultOverflowCallback
 11944 ;; This function is called by:
 11945 ;;		_INTERRUPT_InterruptManager
 11946 ;; This function uses a non-reentrant model
 11947 ;;
 11948                           
 11949     1ECC                     _Timer0_OverflowISR:	
 11950                           ;psect for function _Timer0_OverflowISR
 11951                           
 11952     1ECC                     i1l5911:	
 11953                           ;incstack = 0
 11954 ;; hardware stack exceeded
 11955                           ; Regs used in _Timer0_OverflowISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11956                           
 11957                           
 11958                           ;mcc_generated_files/timer/src/tmr0.c: 101:   static volatile uint16_t CountCallBack = 0
      +                          ;;mcc_generated_files/timer/src/tmr0.c: 104:   INTCONbits.TMR0IF = 0;
 11959     1ECC  110B               	bcf	11,2	;volatile
 11960     1ECD                     i1l5913:
 11961                           
 11962                           ;mcc_generated_files/timer/src/tmr0.c: 106:   TMR0 = timer0ReloadVal;
 11963     1ECD  0022               	movlb	2	; select bank2
 11964     1ECE  086B               	movf	_timer0ReloadVal^(0+256),w	;volatile
 11965     1ECF  0020               	movlb	0	; select bank0
 11966     1ED0  0095               	movwf	21	;volatile
 11967                           
 11968                           ;mcc_generated_files/timer/src/tmr0.c: 109:   if (++CountCallBack >= 100)
 11969     1ED1  3001               	movlw	1
 11970     1ED2  0022               	movlb	2	; select bank2
 11971     1ED3  07DF               	addwf	Timer0_OverflowISR@CountCallBack^(0+256),f	;volatile
 11972     1ED4  3000               	movlw	0
 11973     1ED5  3DE0               	addwfc	(Timer0_OverflowISR@CountCallBack+1)^(0+256),f	;volatile
 11974     1ED6  3000               	movlw	0
 11975     1ED7  0260               	subwf	(Timer0_OverflowISR@CountCallBack+1)^(0+256),w	;volatile
 11976     1ED8  3064               	movlw	100
 11977     1ED9  1903               	skipnz
 11978     1EDA  025F               	subwf	Timer0_OverflowISR@CountCallBack^(0+256),w	;volatile
 11979     1EDB  1C03               	skipc
 11980     1EDC  2EDE               	goto	u522_21
 11981     1EDD  2EDF               	goto	u522_20
 11982     1EDE                     u522_21:
 11983     1EDE  2EED               	goto	i1l646
 11984     1EDF                     u522_20:
 11985     1EDF                     i1l5915:
 11986                           
 11987                           ;mcc_generated_files/timer/src/tmr0.c: 110:   {;mcc_generated_files/timer/src/tmr0.c: 11
      +                          2:     if(Timer0_OverflowCallback)
 11988     1EDF  0861               	movf	_Timer0_OverflowCallback^(0+256),w
 11989     1EE0  0462               	iorwf	(_Timer0_OverflowCallback+1)^(0+256),w
 11990     1EE1  1903               	btfsc	3,2
 11991     1EE2  2EE4               	goto	u523_21
 11992     1EE3  2EE5               	goto	u523_20
 11993     1EE4                     u523_21:
 11994     1EE4  2EEA               	goto	i1l5919
 11995     1EE5                     u523_20:
 11996     1EE5                     i1l5917:
 11997                           
 11998                           ;mcc_generated_files/timer/src/tmr0.c: 113:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          114:       Timer0_OverflowCallback();
 11999     1EE5  0862               	movf	(_Timer0_OverflowCallback+1)^(0+256),w
 12000     1EE6  008A               	movwf	10
 12001     1EE7  0861               	movf	_Timer0_OverflowCallback^(0+256),w
 12002     1EE8  000A               	callw
 12003     1EE9  319E               	pagesel	$
 12004     1EEA                     i1l5919:
 12005                           
 12006                           ;mcc_generated_files/timer/src/tmr0.c: 117:       CountCallBack = 0;
 12007     1EEA  0022               	movlb	2	; select bank2
 12008     1EEB  01DF               	clrf	Timer0_OverflowISR@CountCallBack^(0+256)	;volatile
 12009     1EEC  01E0               	clrf	(Timer0_OverflowISR@CountCallBack+1)^(0+256)	;volatile
 12010     1EED                     i1l646:
 12011     1EED  0008               	return
 12012     1EEE                     __end_of_Timer0_OverflowISR:
 12013                           
 12014                           	psect	text36
 12015     0002                     __ptext36:	
 12016 ;; *************** function _TMR4_DefaultOverflowCallback *****************
 12017 ;; Defined at:
 12018 ;;		line 127 in file "mcc_generated_files/timer/src/tmr4.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;		None
 12021 ;; Auto vars:     Size  Location     Type
 12022 ;;		None
 12023 ;; Return value:  Size  Location     Type
 12024 ;;                  1    wreg      void 
 12025 ;; Registers used:
 12026 ;;		None
 12027 ;; Tracked objects:
 12028 ;;		On entry : 0/0
 12029 ;;		On exit  : 0/0
 12030 ;;		Unchanged: 0/0
 12031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;Total ram usage:        0 bytes
 12037 ;; Hardware stack levels used: 1
 12038 ;; This function calls:
 12039 ;;		Nothing
 12040 ;; This function is called by:
 12041 ;;		_TMR4_Initialize
 12042 ;;		_Timer0_OverflowISR
 12043 ;;		_TMR2_Tasks
 12044 ;;		_TMR1_Tasks
 12045 ;;		_TMR4_Tasks
 12046 ;; This function uses a non-reentrant model
 12047 ;;
 12048                           
 12049     0002                     _TMR4_DefaultOverflowCallback:	
 12050                           ;psect for function _TMR4_DefaultOverflowCallback
 12051                           
 12052     0002                     i1l805:	
 12053                           ;incstack = 0
 12054                           ; Regs used in _TMR4_DefaultOverflowCallback: []
 12055                           
 12056     0002  0008               	return
 12057     0003                     __end_of_TMR4_DefaultOverflowCallback:
 12058                           
 12059                           	psect	text37
 12060     1000                     __ptext37:	
 12061 ;; *************** function _TMR1_DefaultOverflowCallback *****************
 12062 ;; Defined at:
 12063 ;;		line 155 in file "mcc_generated_files/timer/src/tmr1.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;		None
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;		None
 12068 ;; Return value:  Size  Location     Type
 12069 ;;                  1    wreg      void 
 12070 ;; Registers used:
 12071 ;;		None
 12072 ;; Tracked objects:
 12073 ;;		On entry : 0/0
 12074 ;;		On exit  : 0/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12081 ;;Total ram usage:        0 bytes
 12082 ;; Hardware stack levels used: 1
 12083 ;; This function calls:
 12084 ;;		Nothing
 12085 ;; This function is called by:
 12086 ;;		_TMR1_Initialize
 12087 ;;		_Timer0_OverflowISR
 12088 ;;		_TMR2_Tasks
 12089 ;;		_TMR1_Tasks
 12090 ;;		_TMR4_Tasks
 12091 ;; This function uses a non-reentrant model
 12092 ;;
 12093                           
 12094     1000                     _TMR1_DefaultOverflowCallback:	
 12095                           ;psect for function _TMR1_DefaultOverflowCallback
 12096                           
 12097     1000                     i1l723:	
 12098                           ;incstack = 0
 12099                           ; Regs used in _TMR1_DefaultOverflowCallback: []
 12100                           
 12101     1000  0008               	return
 12102     1001                     __end_of_TMR1_DefaultOverflowCallback:
 12103                           
 12104                           	psect	text38
 12105     1B25                     __ptext38:	
 12106 ;; *************** function _TMR2_DefaultOverflowCallback *****************
 12107 ;; Defined at:
 12108 ;;		line 127 in file "mcc_generated_files/timer/src/tmr2.c"
 12109 ;; Parameters:    Size  Location     Type
 12110 ;;		None
 12111 ;; Auto vars:     Size  Location     Type
 12112 ;;		None
 12113 ;; Return value:  Size  Location     Type
 12114 ;;                  1    wreg      void 
 12115 ;; Registers used:
 12116 ;;		None
 12117 ;; Tracked objects:
 12118 ;;		On entry : 0/0
 12119 ;;		On exit  : 0/0
 12120 ;;		Unchanged: 0/0
 12121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12126 ;;Total ram usage:        0 bytes
 12127 ;; Hardware stack levels used: 1
 12128 ;; This function calls:
 12129 ;;		Nothing
 12130 ;; This function is called by:
 12131 ;;		_TMR2_Initialize
 12132 ;;		_Timer0_OverflowISR
 12133 ;;		_TMR2_Tasks
 12134 ;;		_TMR1_Tasks
 12135 ;;		_TMR4_Tasks
 12136 ;; This function uses a non-reentrant model
 12137 ;;
 12138                           
 12139     1B25                     _TMR2_DefaultOverflowCallback:	
 12140                           ;psect for function _TMR2_DefaultOverflowCallback
 12141                           
 12142     1B25                     i1l598:	
 12143                           ;incstack = 0
 12144                           ; Regs used in _TMR2_DefaultOverflowCallback: []
 12145                           
 12146     1B25  0008               	return
 12147     1B26                     __end_of_TMR2_DefaultOverflowCallback:
 12148                           
 12149                           	psect	text39
 12150     1B65                     __ptext39:	
 12151 ;; *************** function _Timer0_DefaultOverflowCallback *****************
 12152 ;; Defined at:
 12153 ;;		line 126 in file "mcc_generated_files/timer/src/tmr0.c"
 12154 ;; Parameters:    Size  Location     Type
 12155 ;;		None
 12156 ;; Auto vars:     Size  Location     Type
 12157 ;;		None
 12158 ;; Return value:  Size  Location     Type
 12159 ;;                  1    wreg      void 
 12160 ;; Registers used:
 12161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12162 ;; Tracked objects:
 12163 ;;		On entry : 0/0
 12164 ;;		On exit  : 0/0
 12165 ;;		Unchanged: 0/0
 12166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12171 ;;Total ram usage:        0 bytes
 12172 ;; Hardware stack levels used: 1
 12173 ;; Hardware stack levels required when called: 9
 12174 ;; This function calls:
 12175 ;;		_TMR0_Custom_ISR
 12176 ;; This function is called by:
 12177 ;;		_Timer0_Initialize
 12178 ;;		_Timer0_OverflowISR
 12179 ;;		_TMR2_Tasks
 12180 ;;		_TMR1_Tasks
 12181 ;;		_TMR4_Tasks
 12182 ;; This function uses a non-reentrant model
 12183 ;;
 12184                           
 12185     1B65                     _Timer0_DefaultOverflowCallback:	
 12186                           ;psect for function _Timer0_DefaultOverflowCallback
 12187                           
 12188     1B65                     i1l5863:	
 12189                           ;incstack = 0
 12190 ;; hardware stack exceeded
 12191                           ; Regs used in _Timer0_DefaultOverflowCallback: [wreg-fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 12192                           
 12193                           
 12194                           ;mcc_generated_files/timer/src/tmr0.c: 130:     TMR0_Custom_ISR();
 12195     1B65  318A  2201  319B   	fcall	_TMR0_Custom_ISR
 12196     1B68                     i1l652:
 12197     1B68  0008               	return
 12198     1B69                     __end_of_Timer0_DefaultOverflowCallback:
 12199                           
 12200                           	psect	text40
 12201     0A01                     __ptext40:	
 12202 ;; *************** function _TMR0_Custom_ISR *****************
 12203 ;; Defined at:
 12204 ;;		line 321 in file "main.c"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;		None
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;  buffer         16   19[BANK2 ] unsigned char [16]
 12209 ;; Return value:  Size  Location     Type
 12210 ;;                  1    wreg      void 
 12211 ;; Registers used:
 12212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12213 ;; Tracked objects:
 12214 ;;		On entry : 0/0
 12215 ;;		On exit  : 0/0
 12216 ;;		Unchanged: 0/0
 12217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;      Locals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Totals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;Total ram usage:       26 bytes
 12223 ;; Hardware stack levels used: 1
 12224 ;; Hardware stack levels required when called: 8
 12225 ;; This function calls:
 12226 ;;		_ADC_GetConversion
 12227 ;;		_Backlight
 12228 ;;		_LCD_Clear
 12229 ;;		_LCD_Set_Cursor
 12230 ;;		_LCD_Write_String
 12231 ;;		_TMR1_Start
 12232 ;;		_TMR1_Stop
 12233 ;;		___fldiv
 12234 ;;		___flge
 12235 ;;		___flmul
 12236 ;;		___xxtofl
 12237 ;;		_sprintf
 12238 ;; This function is called by:
 12239 ;;		_Timer0_DefaultOverflowCallback
 12240 ;; This function uses a non-reentrant model
 12241 ;;
 12242                           
 12243     0A01                     _TMR0_Custom_ISR:	
 12244                           ;psect for function _TMR0_Custom_ISR
 12245                           
 12246     0A01                     i1l5569:	
 12247                           ;incstack = 0
 12248 ;; hardware stack exceeded
 12249                           ; Regs used in _TMR0_Custom_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12250                           
 12251                           
 12252                           ;main.c: 323:     char buffer[16];;main.c: 325:     LCD_Clear();
 12253     0A01  319B  23E4  318A   	fcall	_LCD_Clear
 12254     0A04                     i1l5571:
 12255                           
 12256                           ;main.c: 326:     LCD_Set_Cursor(1, 1);
 12257     0A04  01F6               	clrf	LCD_Set_Cursor@COL
 12258     0A05  0AF6               	incf	LCD_Set_Cursor@COL,f
 12259     0A06  3001               	movlw	1
 12260     0A07  319F  277E  318A   	fcall	_LCD_Set_Cursor
 12261     0A0A                     i1l5573:
 12262                           
 12263                           ;main.c: 327:     Backlight();
 12264     0A0A  319B  23C4  318A   	fcall	_Backlight
 12265                           
 12266                           ;main.c: 328:     LCD_Write_String(" TMR0 ..");
 12267     0A0D  30CE               	movlw	low (STR_4| (0+32768))
 12268     0A0E  00F6               	movwf	LCD_Write_String@Str
 12269     0A0F  3098               	movlw	high (STR_4| (0+32768))
 12270     0A10  00F7               	movwf	LCD_Write_String@Str+1
 12271     0A11  319E  2630  318A   	fcall	_LCD_Write_String
 12272                           
 12273                           ;main.c: 329:     LCD_Set_Cursor(2, 1);
 12274     0A14  01F6               	clrf	LCD_Set_Cursor@COL
 12275     0A15  0AF6               	incf	LCD_Set_Cursor@COL,f
 12276     0A16  3002               	movlw	2
 12277     0A17  319F  277E  318A   	fcall	_LCD_Set_Cursor
 12278                           
 12279                           ;main.c: 330:     LCD_Write_String(" .. Interrupt");
 12280     0A1A  308F               	movlw	low (STR_2| (0+32768))
 12281     0A1B  00F6               	movwf	LCD_Write_String@Str
 12282     0A1C  3098               	movlw	high (STR_2| (0+32768))
 12283     0A1D  00F7               	movwf	LCD_Write_String@Str+1
 12284     0A1E  319E  2630  318A   	fcall	_LCD_Write_String
 12285     0A21                     i1l5575:
 12286                           
 12287                           ;main.c: 331:     _delay((unsigned long)((1000)*(4000000/4000.0)));
 12288     0A21  3006               	movlw	6
 12289     0A22  0022               	movlb	2	; select bank2
 12290     0A23  00AE               	movwf	(??_TMR0_Custom_ISR^(0+256)+1)
 12291     0A24  3013               	movlw	19
 12292     0A25  00AD               	movwf	??_TMR0_Custom_ISR^(0+256)
 12293     0A26  30AD               	movlw	173
 12294     0A27                     u588_27:
 12295     0A27  0B89               	decfsz	9,f
 12296     0A28  2A27               	goto	u588_27
 12297     0A29  0BAD               	decfsz	??_TMR0_Custom_ISR^(0+256),f
 12298     0A2A  2A27               	goto	u588_27
 12299     0A2B  0BAE               	decfsz	(??_TMR0_Custom_ISR^(0+256)+1),f
 12300     0A2C  2A27               	goto	u588_27
 12301     0A2D  3200               	nop2
 12302     0A2E                     i1l5577:
 12303                           
 12304                           ;main.c: 333:     TMR1H = 0x00;
 12305     0A2E  0020               	movlb	0	; select bank0
 12306     0A2F  0197               	clrf	23	;volatile
 12307     0A30                     i1l5579:
 12308                           
 12309                           ;main.c: 334:     TMR1L = 0x00;
 12310     0A30  0196               	clrf	22	;volatile
 12311     0A31                     i1l5581:
 12312     0A31  0022               	movlb	2	; select bank2
 12313     0A32  150E               	bsf	14,2	;volatile
 12314     0A33                     i1l5583:
 12315                           
 12316                           ;main.c: 337:     _delay((unsigned long)((10)*(4000000/4000000.0)));
 12317     0A33  3003               	movlw	3
 12318     0A34                     u589_27:
 12319     0A34  0B89               	decfsz	9,f
 12320     0A35  2A34               	goto	u589_27
 12321     0A36  0000               	nop
 12322     0A37                     i1l5585:
 12323     0A37  0022               	movlb	2	; select bank2
 12324     0A38  110E               	bcf	14,2	;volatile
 12325     0A39                     i1l1196:
 12326     0A39  0020               	movlb	0	; select bank0
 12327     0A3A  1C8E               	btfss	14,1	;volatile
 12328     0A3B  2A3D               	goto	u508_21
 12329     0A3C  2A3E               	goto	u508_20
 12330     0A3D                     u508_21:
 12331     0A3D  2A39               	goto	i1l1196
 12332     0A3E                     u508_20:
 12333     0A3E                     i1l5587:
 12334                           
 12335                           ;main.c: 342:     TMR1_Start();
 12336     0A3E  319B  233B  318A   	fcall	_TMR1_Start
 12337     0A41                     i1l1199:	
 12338                           ;main.c: 344:     while(PORTCbits.RC1 == 1);
 12339                           
 12340     0A41  0020               	movlb	0	; select bank0
 12341     0A42  188E               	btfsc	14,1	;volatile
 12342     0A43  2A45               	goto	u509_21
 12343     0A44  2A46               	goto	u509_20
 12344     0A45                     u509_21:
 12345     0A45  2A41               	goto	i1l1199
 12346     0A46                     u509_20:
 12347     0A46                     i1l5589:
 12348                           
 12349                           ;main.c: 346:     TMR1_Stop();
 12350     0A46  319B  233E  318A   	fcall	_TMR1_Stop
 12351     0A49                     i1l5591:
 12352                           
 12353                           ;main.c: 348:     distance = ((double)((TMR1H<<8) + TMR1L))/58.82;
 12354     0A49  3042               	movlw	66
 12355     0A4A  0020               	movlb	0	; select bank0
 12356     0A4B  00C3               	movwf	___fldiv@a+3
 12357     0A4C  306B               	movlw	107
 12358     0A4D  00C2               	movwf	___fldiv@a+2
 12359     0A4E  3047               	movlw	71
 12360     0A4F  00C1               	movwf	___fldiv@a+1
 12361     0A50  30AE               	movlw	174
 12362     0A51  00C0               	movwf	___fldiv@a
 12363     0A52  0816               	movf	22,w	;volatile
 12364     0A53  0022               	movlb	2	; select bank2
 12365     0A54  00AD               	movwf	??_TMR0_Custom_ISR^(0+256)
 12366     0A55  01AE               	clrf	(??_TMR0_Custom_ISR^(0+256)+1)
 12367     0A56  0020               	movlb	0	; select bank0
 12368     0A57  0817               	movf	23,w	;volatile
 12369     0A58  0022               	movlb	2	; select bank2
 12370     0A59  00AF               	movwf	(??_TMR0_Custom_ISR+2)^(0+256)
 12371     0A5A  01B0               	clrf	((??_TMR0_Custom_ISR+2)^(0+256)+1)
 12372     0A5B  082F               	movf	(??_TMR0_Custom_ISR+2)^(0+256),w
 12373     0A5C  00B0               	movwf	((??_TMR0_Custom_ISR+2)^(0+256)+1)
 12374     0A5D  01AF               	clrf	(??_TMR0_Custom_ISR+2)^(0+256)
 12375     0A5E  082D               	movf	??_TMR0_Custom_ISR^(0+256),w
 12376     0A5F  072F               	addwf	(??_TMR0_Custom_ISR+2)^(0+256),w
 12377     0A60  00F4               	movwf	___xxtofl@val
 12378     0A61  082E               	movf	(??_TMR0_Custom_ISR+1)^(0+256),w
 12379     0A62  3D30               	addwfc	(??_TMR0_Custom_ISR+3)^(0+256),w
 12380     0A63  00F5               	movwf	___xxtofl@val+1
 12381     0A64  01F6               	clrf	___xxtofl@val+2
 12382     0A65  1BF5               	btfsc	___xxtofl@val+1,7
 12383     0A66  03F6               	decf	___xxtofl@val+2,f
 12384     0A67  0876               	movf	___xxtofl@val+2,w
 12385     0A68  00F7               	movwf	___xxtofl@val+3
 12386     0A69  3001               	movlw	1
 12387     0A6A  3195  2510  318A   	fcall	___xxtofl
 12388     0A6D  0877               	movf	?___xxtofl+3,w
 12389     0A6E  0020               	movlb	0	; select bank0
 12390     0A6F  00C7               	movwf	___fldiv@b+3
 12391     0A70  0876               	movf	?___xxtofl+2,w
 12392     0A71  00C6               	movwf	___fldiv@b+2
 12393     0A72  0875               	movf	?___xxtofl+1,w
 12394     0A73  00C5               	movwf	___fldiv@b+1
 12395     0A74  0874               	movf	?___xxtofl,w
 12396     0A75  00C4               	movwf	___fldiv@b
 12397     0A76  3188  2057  318A   	fcall	___fldiv
 12398     0A79  0020               	movlb	0	; select bank0
 12399     0A7A  0843               	movf	?___fldiv+3,w
 12400     0A7B  0023               	movlb	3	; select bank3
 12401     0A7C  00AF               	movwf	(_distance+3)^(0+384)
 12402     0A7D  0020               	movlb	0	; select bank0
 12403     0A7E  0842               	movf	?___fldiv+2,w
 12404     0A7F  0023               	movlb	3	; select bank3
 12405     0A80  00AE               	movwf	(_distance+2)^(0+384)
 12406     0A81  0020               	movlb	0	; select bank0
 12407     0A82  0841               	movf	?___fldiv+1,w
 12408     0A83  0023               	movlb	3	; select bank3
 12409     0A84  00AD               	movwf	(_distance+1)^(0+384)
 12410     0A85  0020               	movlb	0	; select bank0
 12411     0A86  0840               	movf	?___fldiv,w
 12412     0A87  0023               	movlb	3	; select bank3
 12413     0A88  00AC               	movwf	_distance^(0+384)
 12414     0A89                     i1l5593:
 12415                           
 12416                           ;main.c: 349:     if(distance >= 2 && distance <= 400)
 12417     0A89  082F               	movf	(_distance+3)^(0+384),w
 12418     0A8A  0020               	movlb	0	; select bank0
 12419     0A8B  00C3               	movwf	___flge@ff1+3
 12420     0A8C  0023               	movlb	3	; select bank3
 12421     0A8D  082E               	movf	(_distance+2)^(0+384),w
 12422     0A8E  0020               	movlb	0	; select bank0
 12423     0A8F  00C2               	movwf	___flge@ff1+2
 12424     0A90  0023               	movlb	3	; select bank3
 12425     0A91  082D               	movf	(_distance+1)^(0+384),w
 12426     0A92  0020               	movlb	0	; select bank0
 12427     0A93  00C1               	movwf	___flge@ff1+1
 12428     0A94  0023               	movlb	3	; select bank3
 12429     0A95  082C               	movf	_distance^(0+384),w
 12430     0A96  0020               	movlb	0	; select bank0
 12431     0A97  00C0               	movwf	___flge@ff1
 12432     0A98  3040               	movlw	64
 12433     0A99  00C7               	movwf	___flge@ff2+3
 12434     0A9A  3000               	movlw	0
 12435     0A9B  00C6               	movwf	___flge@ff2+2
 12436     0A9C  3000               	movlw	0
 12437     0A9D  00C5               	movwf	___flge@ff2+1
 12438     0A9E  3000               	movlw	0
 12439     0A9F  00C4               	movwf	___flge@ff2
 12440     0AA0  3194  2485  318A   	fcall	___flge
 12441     0AA3  1C03               	btfss	3,0
 12442     0AA4  2AA6               	goto	u510_21
 12443     0AA5  2AA7               	goto	u510_20
 12444     0AA6                     u510_21:
 12445     0AA6  2AF1               	goto	i1l5605
 12446     0AA7                     u510_20:
 12447     0AA7                     i1l5595:
 12448     0AA7  3043               	movlw	67
 12449     0AA8  0020               	movlb	0	; select bank0
 12450     0AA9  00C3               	movwf	___flge@ff1+3
 12451     0AAA  30C8               	movlw	200
 12452     0AAB  00C2               	movwf	___flge@ff1+2
 12453     0AAC  3000               	movlw	0
 12454     0AAD  00C1               	movwf	___flge@ff1+1
 12455     0AAE  3000               	movlw	0
 12456     0AAF  00C0               	movwf	___flge@ff1
 12457     0AB0  0023               	movlb	3	; select bank3
 12458     0AB1  082F               	movf	(_distance+3)^(0+384),w
 12459     0AB2  0020               	movlb	0	; select bank0
 12460     0AB3  00C7               	movwf	___flge@ff2+3
 12461     0AB4  0023               	movlb	3	; select bank3
 12462     0AB5  082E               	movf	(_distance+2)^(0+384),w
 12463     0AB6  0020               	movlb	0	; select bank0
 12464     0AB7  00C6               	movwf	___flge@ff2+2
 12465     0AB8  0023               	movlb	3	; select bank3
 12466     0AB9  082D               	movf	(_distance+1)^(0+384),w
 12467     0ABA  0020               	movlb	0	; select bank0
 12468     0ABB  00C5               	movwf	___flge@ff2+1
 12469     0ABC  0023               	movlb	3	; select bank3
 12470     0ABD  082C               	movf	_distance^(0+384),w
 12471     0ABE  0020               	movlb	0	; select bank0
 12472     0ABF  00C4               	movwf	___flge@ff2
 12473     0AC0  3194  2485  318A   	fcall	___flge
 12474     0AC3  1C03               	btfss	3,0
 12475     0AC4  2AC6               	goto	u511_21
 12476     0AC5  2AC7               	goto	u511_20
 12477     0AC6                     u511_21:
 12478     0AC6  2AF1               	goto	i1l5605
 12479     0AC7                     u511_20:
 12480     0AC7                     i1l5597:
 12481                           
 12482                           ;main.c: 350:     {;main.c: 351:         LCD_Clear();
 12483     0AC7  319B  23E4  318A   	fcall	_LCD_Clear
 12484     0ACA                     i1l5599:
 12485                           
 12486                           ;main.c: 352:         LCD_Set_Cursor(1, 1);
 12487     0ACA  01F6               	clrf	LCD_Set_Cursor@COL
 12488     0ACB  0AF6               	incf	LCD_Set_Cursor@COL,f
 12489     0ACC  3001               	movlw	1
 12490     0ACD  319F  277E  318A   	fcall	_LCD_Set_Cursor
 12491     0AD0                     i1l5601:
 12492                           
 12493                           ;main.c: 353:         sprintf(buffer, "Dist.: %.2f cm", distance);
 12494     0AD0  3072               	movlw	low (STR_6| (0+32768))
 12495     0AD1  0021               	movlb	1	; select bank1
 12496     0AD2  00E9               	movwf	sprintf@fmt^(0+128)
 12497     0AD3  3098               	movlw	high (STR_6| (0+32768))
 12498     0AD4  00EA               	movwf	(sprintf@fmt^(0+128)+1)
 12499     0AD5  0023               	movlb	3	; select bank3
 12500     0AD6  082F               	movf	(_distance+3)^(0+384),w
 12501     0AD7  0021               	movlb	1	; select bank1
 12502     0AD8  00EE               	movwf	((?_sprintf+3)^(0+128)+2)
 12503     0AD9  0023               	movlb	3	; select bank3
 12504     0ADA  082E               	movf	(_distance+2)^(0+384),w
 12505     0ADB  0021               	movlb	1	; select bank1
 12506     0ADC  00ED               	movwf	((?_sprintf+2)^(0+128)+2)
 12507     0ADD  0023               	movlb	3	; select bank3
 12508     0ADE  082D               	movf	(_distance+1)^(0+384),w
 12509     0ADF  0021               	movlb	1	; select bank1
 12510     0AE0  00EC               	movwf	((?_sprintf+1)^(0+128)+2)
 12511     0AE1  0023               	movlb	3	; select bank3
 12512     0AE2  082C               	movf	_distance^(0+384),w
 12513     0AE3  0021               	movlb	1	; select bank1
 12514     0AE4  00EB               	movwf	(?_sprintf^(0+128)+2)
 12515     0AE5  3033               	movlw	(low (TMR0_Custom_ISR@buffer| (0+256)))& (0+255)
 12516     0AE6  319E  26AC  318A   	fcall	_sprintf
 12517     0AE9                     i1l5603:
 12518                           
 12519                           ;main.c: 354:         LCD_Write_String(buffer);
 12520     0AE9  3033               	movlw	low TMR0_Custom_ISR@buffer
 12521     0AEA  00F6               	movwf	LCD_Write_String@Str
 12522     0AEB  3001               	movlw	high TMR0_Custom_ISR@buffer
 12523     0AEC  00F7               	movwf	LCD_Write_String@Str+1
 12524     0AED  319E  2630  318A   	fcall	_LCD_Write_String
 12525                           
 12526                           ;main.c: 355:     }
 12527     0AF0  2B01               	goto	i1l1203
 12528     0AF1                     i1l5605:
 12529                           
 12530                           ;main.c: 357:     {;main.c: 358:         LCD_Clear();
 12531     0AF1  319B  23E4  318A   	fcall	_LCD_Clear
 12532     0AF4                     i1l5607:
 12533                           
 12534                           ;main.c: 359:         LCD_Set_Cursor(1, 1);
 12535     0AF4  01F6               	clrf	LCD_Set_Cursor@COL
 12536     0AF5  0AF6               	incf	LCD_Set_Cursor@COL,f
 12537     0AF6  3001               	movlw	1
 12538     0AF7  319F  277E  318A   	fcall	_LCD_Set_Cursor
 12539     0AFA                     i1l5609:
 12540                           
 12541                           ;main.c: 360:         LCD_Write_String("Out of Range");
 12542     0AFA  309D               	movlw	low (STR_7| (0+32768))
 12543     0AFB  00F6               	movwf	LCD_Write_String@Str
 12544     0AFC  3098               	movlw	high (STR_7| (0+32768))
 12545     0AFD  00F7               	movwf	LCD_Write_String@Str+1
 12546     0AFE  319E  2630  318A   	fcall	_LCD_Write_String
 12547     0B01                     i1l1203:	
 12548                           ;main.c: 361:     }
 12549                           
 12550                           
 12551                           ;main.c: 363:     temperature = ((double)(ADC_GetConversion(0) & 0x3FF) * 3.3/1023)*100;
 12552     0B01  3044               	movlw	68
 12553     0B02  0020               	movlb	0	; select bank0
 12554     0B03  00C3               	movwf	___fldiv@a+3
 12555     0B04  307F               	movlw	127
 12556     0B05  00C2               	movwf	___fldiv@a+2
 12557     0B06  30C0               	movlw	192
 12558     0B07  00C1               	movwf	___fldiv@a+1
 12559     0B08  3000               	movlw	0
 12560     0B09  00C0               	movwf	___fldiv@a
 12561     0B0A  3040               	movlw	64
 12562     0B0B  00A9               	movwf	___flmul@b+3
 12563     0B0C  3053               	movlw	83
 12564     0B0D  00A8               	movwf	___flmul@b+2
 12565     0B0E  3033               	movlw	51
 12566     0B0F  00A7               	movwf	___flmul@b+1
 12567     0B10  3033               	movlw	51
 12568     0B11  00A6               	movwf	___flmul@b
 12569     0B12  3000               	movlw	0
 12570     0B13  319D  25E0  318A   	fcall	_ADC_GetConversion
 12571     0B16  30FF               	movlw	255
 12572     0B17  0570               	andwf	?_ADC_GetConversion,w
 12573     0B18  0022               	movlb	2	; select bank2
 12574     0B19  00AD               	movwf	??_TMR0_Custom_ISR^(0+256)
 12575     0B1A  3003               	movlw	3
 12576     0B1B  0571               	andwf	?_ADC_GetConversion+1,w
 12577     0B1C  00AE               	movwf	(??_TMR0_Custom_ISR+1)^(0+256)
 12578     0B1D  082D               	movf	??_TMR0_Custom_ISR^(0+256),w
 12579     0B1E  00AF               	movwf	(??_TMR0_Custom_ISR+2)^(0+256)
 12580     0B1F  082E               	movf	(??_TMR0_Custom_ISR+1)^(0+256),w
 12581     0B20  00B0               	movwf	((??_TMR0_Custom_ISR+2)^(0+256)+1)
 12582     0B21  01B1               	clrf	((??_TMR0_Custom_ISR+2)^(0+256)+2)
 12583     0B22  01B2               	clrf	((??_TMR0_Custom_ISR+2)^(0+256)+3)
 12584     0B23  0832               	movf	(??_TMR0_Custom_ISR+5)^(0+256),w
 12585     0B24  00F7               	movwf	___xxtofl@val+3
 12586     0B25  0831               	movf	(??_TMR0_Custom_ISR+4)^(0+256),w
 12587     0B26  00F6               	movwf	___xxtofl@val+2
 12588     0B27  0830               	movf	(??_TMR0_Custom_ISR+3)^(0+256),w
 12589     0B28  00F5               	movwf	___xxtofl@val+1
 12590     0B29  082F               	movf	(??_TMR0_Custom_ISR+2)^(0+256),w
 12591     0B2A  00F4               	movwf	___xxtofl@val
 12592     0B2B  3000               	movlw	0
 12593     0B2C  3195  2510  318A   	fcall	___xxtofl
 12594     0B2F  0877               	movf	?___xxtofl+3,w
 12595     0B30  0020               	movlb	0	; select bank0
 12596     0B31  00AD               	movwf	___flmul@a+3
 12597     0B32  0876               	movf	?___xxtofl+2,w
 12598     0B33  00AC               	movwf	___flmul@a+2
 12599     0B34  0875               	movf	?___xxtofl+1,w
 12600     0B35  00AB               	movwf	___flmul@a+1
 12601     0B36  0874               	movf	?___xxtofl,w
 12602     0B37  00AA               	movwf	___flmul@a
 12603     0B38  318D  25C5  318A   	fcall	___flmul
 12604     0B3B  0020               	movlb	0	; select bank0
 12605     0B3C  0829               	movf	?___flmul+3,w
 12606     0B3D  00C7               	movwf	___fldiv@b+3
 12607     0B3E  0828               	movf	?___flmul+2,w
 12608     0B3F  00C6               	movwf	___fldiv@b+2
 12609     0B40  0827               	movf	?___flmul+1,w
 12610     0B41  00C5               	movwf	___fldiv@b+1
 12611     0B42  0826               	movf	?___flmul,w
 12612     0B43  00C4               	movwf	___fldiv@b
 12613     0B44  3188  2057  318A   	fcall	___fldiv
 12614     0B47  0020               	movlb	0	; select bank0
 12615     0B48  0843               	movf	?___fldiv+3,w
 12616     0B49  0022               	movlb	2	; select bank2
 12617     0B4A  00C6               	movwf	(_TMR0_Custom_ISR$3583+3)^(0+256)
 12618     0B4B  0020               	movlb	0	; select bank0
 12619     0B4C  0842               	movf	?___fldiv+2,w
 12620     0B4D  0022               	movlb	2	; select bank2
 12621     0B4E  00C5               	movwf	(_TMR0_Custom_ISR$3583+2)^(0+256)
 12622     0B4F  0020               	movlb	0	; select bank0
 12623     0B50  0841               	movf	?___fldiv+1,w
 12624     0B51  0022               	movlb	2	; select bank2
 12625     0B52  00C4               	movwf	(_TMR0_Custom_ISR$3583+1)^(0+256)
 12626     0B53  0020               	movlb	0	; select bank0
 12627     0B54  0840               	movf	?___fldiv,w
 12628     0B55  0022               	movlb	2	; select bank2
 12629     0B56  00C3               	movwf	_TMR0_Custom_ISR$3583^(0+256)
 12630                           
 12631                           ;main.c: 363:     temperature = ((double)(ADC_GetConversion(0) & 0x3FF) * 3.3/1023)*100;
 12632     0B57  3042               	movlw	66
 12633     0B58  0020               	movlb	0	; select bank0
 12634     0B59  00A9               	movwf	___flmul@b+3
 12635     0B5A  30C8               	movlw	200
 12636     0B5B  00A8               	movwf	___flmul@b+2
 12637     0B5C  3000               	movlw	0
 12638     0B5D  00A7               	movwf	___flmul@b+1
 12639     0B5E  3000               	movlw	0
 12640     0B5F  00A6               	movwf	___flmul@b
 12641     0B60  0022               	movlb	2	; select bank2
 12642     0B61  0846               	movf	(_TMR0_Custom_ISR$3583+3)^(0+256),w
 12643     0B62  0020               	movlb	0	; select bank0
 12644     0B63  00AD               	movwf	___flmul@a+3
 12645     0B64  0022               	movlb	2	; select bank2
 12646     0B65  0845               	movf	(_TMR0_Custom_ISR$3583+2)^(0+256),w
 12647     0B66  0020               	movlb	0	; select bank0
 12648     0B67  00AC               	movwf	___flmul@a+2
 12649     0B68  0022               	movlb	2	; select bank2
 12650     0B69  0844               	movf	(_TMR0_Custom_ISR$3583+1)^(0+256),w
 12651     0B6A  0020               	movlb	0	; select bank0
 12652     0B6B  00AB               	movwf	___flmul@a+1
 12653     0B6C  0022               	movlb	2	; select bank2
 12654     0B6D  0843               	movf	_TMR0_Custom_ISR$3583^(0+256),w
 12655     0B6E  0020               	movlb	0	; select bank0
 12656     0B6F  00AA               	movwf	___flmul@a
 12657     0B70  318D  25C5  318A   	fcall	___flmul
 12658     0B73  0020               	movlb	0	; select bank0
 12659     0B74  0829               	movf	?___flmul+3,w
 12660     0B75  0023               	movlb	3	; select bank3
 12661     0B76  00AB               	movwf	(_temperature+3)^(0+384)
 12662     0B77  0020               	movlb	0	; select bank0
 12663     0B78  0828               	movf	?___flmul+2,w
 12664     0B79  0023               	movlb	3	; select bank3
 12665     0B7A  00AA               	movwf	(_temperature+2)^(0+384)
 12666     0B7B  0020               	movlb	0	; select bank0
 12667     0B7C  0827               	movf	?___flmul+1,w
 12668     0B7D  0023               	movlb	3	; select bank3
 12669     0B7E  00A9               	movwf	(_temperature+1)^(0+384)
 12670     0B7F  0020               	movlb	0	; select bank0
 12671     0B80  0826               	movf	?___flmul,w
 12672     0B81  0023               	movlb	3	; select bank3
 12673     0B82  00A8               	movwf	_temperature^(0+384)
 12674     0B83                     i1l5611:
 12675                           
 12676                           ;main.c: 364:     ADCON0bits.ADON = 0;
 12677     0B83  0021               	movlb	1	; select bank1
 12678     0B84  101D               	bcf	29,0	;volatile
 12679     0B85                     i1l5613:
 12680                           
 12681                           ;main.c: 366:     LCD_Set_Cursor(2, 1);
 12682     0B85  01F6               	clrf	LCD_Set_Cursor@COL
 12683     0B86  0AF6               	incf	LCD_Set_Cursor@COL,f
 12684     0B87  3002               	movlw	2
 12685     0B88  319F  277E  318A   	fcall	_LCD_Set_Cursor
 12686     0B8B                     i1l5615:
 12687                           
 12688                           ;main.c: 367:     sprintf(buffer, "Temp.: %.2f C", temperature);
 12689     0B8B  3081               	movlw	low (STR_8| (0+32768))
 12690     0B8C  0021               	movlb	1	; select bank1
 12691     0B8D  00E9               	movwf	sprintf@fmt^(0+128)
 12692     0B8E  3098               	movlw	high (STR_8| (0+32768))
 12693     0B8F  00EA               	movwf	(sprintf@fmt^(0+128)+1)
 12694     0B90  0023               	movlb	3	; select bank3
 12695     0B91  082B               	movf	(_temperature+3)^(0+384),w
 12696     0B92  0021               	movlb	1	; select bank1
 12697     0B93  00EE               	movwf	((?_sprintf+3)^(0+128)+2)
 12698     0B94  0023               	movlb	3	; select bank3
 12699     0B95  082A               	movf	(_temperature+2)^(0+384),w
 12700     0B96  0021               	movlb	1	; select bank1
 12701     0B97  00ED               	movwf	((?_sprintf+2)^(0+128)+2)
 12702     0B98  0023               	movlb	3	; select bank3
 12703     0B99  0829               	movf	(_temperature+1)^(0+384),w
 12704     0B9A  0021               	movlb	1	; select bank1
 12705     0B9B  00EC               	movwf	((?_sprintf+1)^(0+128)+2)
 12706     0B9C  0023               	movlb	3	; select bank3
 12707     0B9D  0828               	movf	_temperature^(0+384),w
 12708     0B9E  0021               	movlb	1	; select bank1
 12709     0B9F  00EB               	movwf	(?_sprintf^(0+128)+2)
 12710     0BA0  3033               	movlw	(low (TMR0_Custom_ISR@buffer| (0+256)))& (0+255)
 12711     0BA1  319E  26AC  318A   	fcall	_sprintf
 12712     0BA4                     i1l5617:
 12713                           
 12714                           ;main.c: 368:     LCD_Write_String(buffer);
 12715     0BA4  3033               	movlw	low TMR0_Custom_ISR@buffer
 12716     0BA5  00F6               	movwf	LCD_Write_String@Str
 12717     0BA6  3001               	movlw	high TMR0_Custom_ISR@buffer
 12718     0BA7  00F7               	movwf	LCD_Write_String@Str+1
 12719     0BA8  319E  2630  318A   	fcall	_LCD_Write_String
 12720     0BAB                     i1l5619:
 12721                           
 12722                           ;main.c: 370:     _delay((unsigned long)((1000)*(4000000/4000.0)));
 12723     0BAB  3006               	movlw	6
 12724     0BAC  0022               	movlb	2	; select bank2
 12725     0BAD  00AE               	movwf	(??_TMR0_Custom_ISR^(0+256)+1)
 12726     0BAE  3013               	movlw	19
 12727     0BAF  00AD               	movwf	??_TMR0_Custom_ISR^(0+256)
 12728     0BB0  30AD               	movlw	173
 12729     0BB1                     u590_27:
 12730     0BB1  0B89               	decfsz	9,f
 12731     0BB2  2BB1               	goto	u590_27
 12732     0BB3  0BAD               	decfsz	??_TMR0_Custom_ISR^(0+256),f
 12733     0BB4  2BB1               	goto	u590_27
 12734     0BB5  0BAE               	decfsz	(??_TMR0_Custom_ISR^(0+256)+1),f
 12735     0BB6  2BB1               	goto	u590_27
 12736     0BB7  3200               	nop2
 12737     0BB8                     i1l1204:
 12738     0BB8  0008               	return
 12739     0BB9                     __end_of_TMR0_Custom_ISR:
 12740                           
 12741                           	psect	text41
 12742     1510                     __ptext41:	
 12743 ;; *************** function ___xxtofl *****************
 12744 ;; Defined at:
 12745 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
 12746 ;; Parameters:    Size  Location     Type
 12747 ;;  sign            1    wreg     unsigned char 
 12748 ;;  val             4    4[COMMON] long 
 12749 ;; Auto vars:     Size  Location     Type
 12750 ;;  sign            1    0[BANK0 ] unsigned char 
 12751 ;;  arg             4    2[BANK0 ] unsigned long 
 12752 ;;  exp             1    1[BANK0 ] unsigned char 
 12753 ;; Return value:  Size  Location     Type
 12754 ;;                  4    4[COMMON] unsigned char 
 12755 ;; Registers used:
 12756 ;;		wreg, status,2, status,0
 12757 ;; Tracked objects:
 12758 ;;		On entry : 0/0
 12759 ;;		On exit  : 0/0
 12760 ;;		Unchanged: 0/0
 12761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12763 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12764 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12765 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12766 ;;Total ram usage:       14 bytes
 12767 ;; Hardware stack levels used: 1
 12768 ;; This function calls:
 12769 ;;		Nothing
 12770 ;; This function is called by:
 12771 ;;		_TMR0_Custom_ISR
 12772 ;;		_get_distance_from_supersonic
 12773 ;;		_get_temperature
 12774 ;; This function uses a non-reentrant model
 12775 ;;
 12776                           
 12777     1510                     ___xxtofl:	
 12778                           ;psect for function ___xxtofl
 12779                           
 12780                           
 12781                           ;incstack = 0
 12782                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 12783                           ;___xxtofl@sign stored from wreg
 12784     1510  0020               	movlb	0	; select bank0
 12785     1511  00A0               	movwf	___xxtofl@sign
 12786     1512                     i1l5419:
 12787     1512  0820               	movf	___xxtofl@sign,w
 12788     1513  1903               	btfsc	3,2
 12789     1514  2D16               	goto	u488_21
 12790     1515  2D17               	goto	u488_20
 12791     1516                     u488_21:
 12792     1516  2D2B               	goto	i1l5425
 12793     1517                     u488_20:
 12794     1517                     i1l5421:
 12795     1517  1FF7               	btfss	___xxtofl@val+3,7
 12796     1518  2D1A               	goto	u489_21
 12797     1519  2D1B               	goto	u489_20
 12798     151A                     u489_21:
 12799     151A  2D2B               	goto	i1l5425
 12800     151B                     u489_20:
 12801     151B                     i1l5423:
 12802     151B  0974               	comf	___xxtofl@val,w
 12803     151C  00A2               	movwf	___xxtofl@arg
 12804     151D  0975               	comf	___xxtofl@val+1,w
 12805     151E  00A3               	movwf	___xxtofl@arg+1
 12806     151F  0976               	comf	___xxtofl@val+2,w
 12807     1520  00A4               	movwf	___xxtofl@arg+2
 12808     1521  0977               	comf	___xxtofl@val+3,w
 12809     1522  00A5               	movwf	___xxtofl@arg+3
 12810     1523  0AA2               	incf	___xxtofl@arg,f
 12811     1524  1903               	skipnz
 12812     1525  0AA3               	incf	___xxtofl@arg+1,f
 12813     1526  1903               	skipnz
 12814     1527  0AA4               	incf	___xxtofl@arg+2,f
 12815     1528  1903               	skipnz
 12816     1529  0AA5               	incf	___xxtofl@arg+3,f
 12817     152A  2D33               	goto	i1l1713
 12818     152B                     i1l5425:
 12819     152B  0877               	movf	___xxtofl@val+3,w
 12820     152C  00A5               	movwf	___xxtofl@arg+3
 12821     152D  0876               	movf	___xxtofl@val+2,w
 12822     152E  00A4               	movwf	___xxtofl@arg+2
 12823     152F  0875               	movf	___xxtofl@val+1,w
 12824     1530  00A3               	movwf	___xxtofl@arg+1
 12825     1531  0874               	movf	___xxtofl@val,w
 12826     1532  00A2               	movwf	___xxtofl@arg
 12827     1533                     i1l1713:
 12828     1533  0877               	movf	___xxtofl@val+3,w
 12829     1534  0476               	iorwf	___xxtofl@val+2,w
 12830     1535  0475               	iorwf	___xxtofl@val+1,w
 12831     1536  0474               	iorwf	___xxtofl@val,w
 12832     1537  1D03               	skipz
 12833     1538  2D3A               	goto	u490_21
 12834     1539  2D3B               	goto	u490_20
 12835     153A                     u490_21:
 12836     153A  2D44               	goto	i1l5431
 12837     153B                     u490_20:
 12838     153B                     i1l5427:
 12839     153B  3000               	movlw	0
 12840     153C  00F7               	movwf	?___xxtofl+3
 12841     153D  3000               	movlw	0
 12842     153E  00F6               	movwf	?___xxtofl+2
 12843     153F  3000               	movlw	0
 12844     1540  00F5               	movwf	?___xxtofl+1
 12845     1541  3000               	movlw	0
 12846     1542  00F4               	movwf	?___xxtofl
 12847     1543  2DBA               	goto	i1l1715
 12848     1544                     i1l5431:
 12849     1544  3096               	movlw	150
 12850     1545  00A1               	movwf	___xxtofl@exp
 12851     1546  2D52               	goto	i1l5435
 12852     1547                     i1l5433:
 12853     1547  3001               	movlw	1
 12854     1548  00F8               	movwf	??___xxtofl
 12855     1549  0878               	movf	??___xxtofl,w
 12856     154A  07A1               	addwf	___xxtofl@exp,f
 12857     154B  3001               	movlw	1
 12858     154C                     u491_25:
 12859     154C  36A5               	lsrf	___xxtofl@arg+3,f
 12860     154D  0CA4               	rrf	___xxtofl@arg+2,f
 12861     154E  0CA3               	rrf	___xxtofl@arg+1,f
 12862     154F  0CA2               	rrf	___xxtofl@arg,f
 12863     1550  0B89               	decfsz	9,f
 12864     1551  2D4C               	goto	u491_25
 12865     1552                     i1l5435:
 12866     1552  30FE               	movlw	254
 12867     1553  0525               	andwf	___xxtofl@arg+3,w
 12868     1554  1D03               	btfss	3,2
 12869     1555  2D57               	goto	u492_21
 12870     1556  2D58               	goto	u492_20
 12871     1557                     u492_21:
 12872     1557  2D47               	goto	i1l5433
 12873     1558                     u492_20:
 12874     1558  2D6C               	goto	i1l1719
 12875     1559                     i1l5437:
 12876     1559  3001               	movlw	1
 12877     155A  00F8               	movwf	??___xxtofl
 12878     155B  0878               	movf	??___xxtofl,w
 12879     155C  07A1               	addwf	___xxtofl@exp,f
 12880     155D                     i1l5439:
 12881     155D  3001               	movlw	1
 12882     155E  07A2               	addwf	___xxtofl@arg,f
 12883     155F  3000               	movlw	0
 12884     1560  3DA3               	addwfc	___xxtofl@arg+1,f
 12885     1561  3000               	movlw	0
 12886     1562  3DA4               	addwfc	___xxtofl@arg+2,f
 12887     1563  3000               	movlw	0
 12888     1564  3DA5               	addwfc	___xxtofl@arg+3,f
 12889     1565                     i1l5441:
 12890     1565  3001               	movlw	1
 12891     1566                     u493_25:
 12892     1566  36A5               	lsrf	___xxtofl@arg+3,f
 12893     1567  0CA4               	rrf	___xxtofl@arg+2,f
 12894     1568  0CA3               	rrf	___xxtofl@arg+1,f
 12895     1569  0CA2               	rrf	___xxtofl@arg,f
 12896     156A  0B89               	decfsz	9,f
 12897     156B  2D66               	goto	u493_25
 12898     156C                     i1l1719:
 12899     156C  30FF               	movlw	255
 12900     156D  0525               	andwf	___xxtofl@arg+3,w
 12901     156E  1D03               	btfss	3,2
 12902     156F  2D71               	goto	u494_21
 12903     1570  2D72               	goto	u494_20
 12904     1571                     u494_21:
 12905     1571  2D59               	goto	i1l5437
 12906     1572                     u494_20:
 12907     1572  2D7C               	goto	i1l5445
 12908     1573                     i1l5443:
 12909     1573  3001               	movlw	1
 12910     1574  02A1               	subwf	___xxtofl@exp,f
 12911     1575  3001               	movlw	1
 12912     1576                     u495_25:
 12913     1576  35A2               	lslf	___xxtofl@arg,f
 12914     1577  0DA3               	rlf	___xxtofl@arg+1,f
 12915     1578  0DA4               	rlf	___xxtofl@arg+2,f
 12916     1579  0DA5               	rlf	___xxtofl@arg+3,f
 12917     157A  0B89               	decfsz	9,f
 12918     157B  2D76               	goto	u495_25
 12919     157C                     i1l5445:
 12920     157C  1BA4               	btfsc	___xxtofl@arg+2,7
 12921     157D  2D7F               	goto	u496_21
 12922     157E  2D80               	goto	u496_20
 12923     157F                     u496_21:
 12924     157F  2D86               	goto	i1l1726
 12925     1580                     u496_20:
 12926     1580                     i1l5447:
 12927     1580  3002               	movlw	2
 12928     1581  0221               	subwf	___xxtofl@exp,w
 12929     1582  1803               	skipnc
 12930     1583  2D85               	goto	u497_21
 12931     1584  2D86               	goto	u497_20
 12932     1585                     u497_21:
 12933     1585  2D73               	goto	i1l5443
 12934     1586                     u497_20:
 12935     1586                     i1l1726:
 12936     1586  1821               	btfsc	___xxtofl@exp,0
 12937     1587  2D89               	goto	u498_21
 12938     1588  2D8A               	goto	u498_20
 12939     1589                     u498_21:
 12940     1589  2D92               	goto	i1l1727
 12941     158A                     u498_20:
 12942     158A                     i1l5449:
 12943     158A  30FF               	movlw	255
 12944     158B  05A2               	andwf	___xxtofl@arg,f
 12945     158C  30FF               	movlw	255
 12946     158D  05A3               	andwf	___xxtofl@arg+1,f
 12947     158E  307F               	movlw	127
 12948     158F  05A4               	andwf	___xxtofl@arg+2,f
 12949     1590  30FF               	movlw	255
 12950     1591  05A5               	andwf	___xxtofl@arg+3,f
 12951     1592                     i1l1727:
 12952     1592  1003               	clrc
 12953     1593  0CA1               	rrf	___xxtofl@exp,f
 12954     1594                     i1l5451:
 12955     1594  0821               	movf	___xxtofl@exp,w
 12956     1595  00F8               	movwf	??___xxtofl
 12957     1596  01F9               	clrf	??___xxtofl+1
 12958     1597  01FA               	clrf	??___xxtofl+2
 12959     1598  01FB               	clrf	??___xxtofl+3
 12960     1599  3018               	movlw	24
 12961     159A                     u499_25:
 12962     159A  35F8               	lslf	??___xxtofl,f
 12963     159B  0DF9               	rlf	??___xxtofl+1,f
 12964     159C  0DFA               	rlf	??___xxtofl+2,f
 12965     159D  0DFB               	rlf	??___xxtofl+3,f
 12966     159E                     u499_20:
 12967     159E  0B89               	decfsz	9,f
 12968     159F  2D9A               	goto	u499_25
 12969     15A0  0878               	movf	??___xxtofl,w
 12970     15A1  04A2               	iorwf	___xxtofl@arg,f
 12971     15A2  0879               	movf	??___xxtofl+1,w
 12972     15A3  04A3               	iorwf	___xxtofl@arg+1,f
 12973     15A4  087A               	movf	??___xxtofl+2,w
 12974     15A5  04A4               	iorwf	___xxtofl@arg+2,f
 12975     15A6  087B               	movf	??___xxtofl+3,w
 12976     15A7  04A5               	iorwf	___xxtofl@arg+3,f
 12977     15A8                     i1l5453:
 12978     15A8  0820               	movf	___xxtofl@sign,w
 12979     15A9  1903               	btfsc	3,2
 12980     15AA  2DAC               	goto	u500_21
 12981     15AB  2DAD               	goto	u500_20
 12982     15AC                     u500_21:
 12983     15AC  2DB2               	goto	i1l5459
 12984     15AD                     u500_20:
 12985     15AD                     i1l5455:
 12986     15AD  1FF7               	btfss	___xxtofl@val+3,7
 12987     15AE  2DB0               	goto	u501_21
 12988     15AF  2DB1               	goto	u501_20
 12989     15B0                     u501_21:
 12990     15B0  2DB2               	goto	i1l5459
 12991     15B1                     u501_20:
 12992     15B1                     i1l5457:
 12993     15B1  17A5               	bsf	___xxtofl@arg+3,7
 12994     15B2                     i1l5459:
 12995     15B2  0825               	movf	___xxtofl@arg+3,w
 12996     15B3  00F7               	movwf	?___xxtofl+3
 12997     15B4  0824               	movf	___xxtofl@arg+2,w
 12998     15B5  00F6               	movwf	?___xxtofl+2
 12999     15B6  0823               	movf	___xxtofl@arg+1,w
 13000     15B7  00F5               	movwf	?___xxtofl+1
 13001     15B8  0822               	movf	___xxtofl@arg,w
 13002     15B9  00F4               	movwf	?___xxtofl
 13003     15BA                     i1l1715:
 13004     15BA  0008               	return
 13005     15BB                     __end_of___xxtofl:
 13006                           
 13007                           	psect	text42
 13008     1B3E                     __ptext42:	
 13009 ;; *************** function _TMR1_Stop *****************
 13010 ;; Defined at:
 13011 ;;		line 86 in file "mcc_generated_files/timer/src/tmr1.c"
 13012 ;; Parameters:    Size  Location     Type
 13013 ;;		None
 13014 ;; Auto vars:     Size  Location     Type
 13015 ;;		None
 13016 ;; Return value:  Size  Location     Type
 13017 ;;                  1    wreg      void 
 13018 ;; Registers used:
 13019 ;;		None
 13020 ;; Tracked objects:
 13021 ;;		On entry : 0/0
 13022 ;;		On exit  : 0/0
 13023 ;;		Unchanged: 0/0
 13024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13029 ;;Total ram usage:        0 bytes
 13030 ;; Hardware stack levels used: 1
 13031 ;; This function calls:
 13032 ;;		Nothing
 13033 ;; This function is called by:
 13034 ;;		_TMR0_Custom_ISR
 13035 ;;		_get_distance_from_supersonic
 13036 ;; This function uses a non-reentrant model
 13037 ;;
 13038                           
 13039     1B3E                     _TMR1_Stop:	
 13040                           ;psect for function _TMR1_Stop
 13041                           
 13042     1B3E                     i1l5375:	
 13043                           ;incstack = 0
 13044                           ; Regs used in _TMR1_Stop: []
 13045                           
 13046                           
 13047                           ;mcc_generated_files/timer/src/tmr1.c: 89:     T1CONbits.TMR1ON = 0;
 13048     1B3E  0020               	movlb	0	; select bank0
 13049     1B3F  1018               	bcf	24,0	;volatile
 13050     1B40                     i1l697:
 13051     1B40  0008               	return
 13052     1B41                     __end_of_TMR1_Stop:
 13053                           
 13054                           	psect	text43
 13055     1B3B                     __ptext43:	
 13056 ;; *************** function _TMR1_Start *****************
 13057 ;; Defined at:
 13058 ;;		line 80 in file "mcc_generated_files/timer/src/tmr1.c"
 13059 ;; Parameters:    Size  Location     Type
 13060 ;;		None
 13061 ;; Auto vars:     Size  Location     Type
 13062 ;;		None
 13063 ;; Return value:  Size  Location     Type
 13064 ;;                  1    wreg      void 
 13065 ;; Registers used:
 13066 ;;		None
 13067 ;; Tracked objects:
 13068 ;;		On entry : 0/0
 13069 ;;		On exit  : 0/0
 13070 ;;		Unchanged: 0/0
 13071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13076 ;;Total ram usage:        0 bytes
 13077 ;; Hardware stack levels used: 1
 13078 ;; This function calls:
 13079 ;;		Nothing
 13080 ;; This function is called by:
 13081 ;;		_TMR0_Custom_ISR
 13082 ;;		_get_distance_from_supersonic
 13083 ;; This function uses a non-reentrant model
 13084 ;;
 13085                           
 13086     1B3B                     _TMR1_Start:	
 13087                           ;psect for function _TMR1_Start
 13088                           
 13089     1B3B                     i1l5373:	
 13090                           ;incstack = 0
 13091                           ; Regs used in _TMR1_Start: []
 13092                           
 13093                           
 13094                           ;mcc_generated_files/timer/src/tmr1.c: 83:     T1CONbits.TMR1ON = 1;
 13095     1B3B  0020               	movlb	0	; select bank0
 13096     1B3C  1418               	bsf	24,0	;volatile
 13097     1B3D                     i1l694:
 13098     1B3D  0008               	return
 13099     1B3E                     __end_of_TMR1_Start:
 13100                           
 13101                           	psect	text44
 13102     1DE0                     __ptext44:	
 13103 ;; *************** function _ADC_GetConversion *****************
 13104 ;; Defined at:
 13105 ;;		line 98 in file "mcc_generated_files/adc/src/adc.c"
 13106 ;; Parameters:    Size  Location     Type
 13107 ;;  channel         1    wreg     enum E9885
 13108 ;; Auto vars:     Size  Location     Type
 13109 ;;  channel         1    3[COMMON] enum E9885
 13110 ;; Return value:  Size  Location     Type
 13111 ;;                  2    0[COMMON] unsigned short 
 13112 ;; Registers used:
 13113 ;;		wreg, status,2, status,0
 13114 ;; Tracked objects:
 13115 ;;		On entry : 0/0
 13116 ;;		On exit  : 0/0
 13117 ;;		Unchanged: 0/0
 13118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13121 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13123 ;;Total ram usage:        4 bytes
 13124 ;; Hardware stack levels used: 1
 13125 ;; This function calls:
 13126 ;;		Nothing
 13127 ;; This function is called by:
 13128 ;;		_TMR0_Custom_ISR
 13129 ;;		_get_temperature
 13130 ;; This function uses a non-reentrant model
 13131 ;;
 13132                           
 13133     1DE0                     _ADC_GetConversion:	
 13134                           ;psect for function _ADC_GetConversion
 13135                           
 13136                           
 13137                           ;incstack = 0
 13138                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 13139                           ;ADC_GetConversion@channel stored from wreg
 13140     1DE0  00F3               	movwf	ADC_GetConversion@channel
 13141     1DE1                     i1l5327:
 13142                           
 13143                           ;mcc_generated_files/adc/src/adc.c: 98: adc_result_t ADC_GetConversion(adc_channel_t cha
      +                          nnel);mcc_generated_files/adc/src/adc.c: 99: {;mcc_generated_files/adc/src/adc.c: 101:  
      +                             ADCON0bits.CHS = channel;
 13144     1DE1  0873               	movf	ADC_GetConversion@channel,w
 13145     1DE2  00F2               	movwf	??_ADC_GetConversion
 13146     1DE3  0DF2               	rlf	??_ADC_GetConversion,f
 13147     1DE4  0DF2               	rlf	??_ADC_GetConversion,f
 13148     1DE5  0021               	movlb	1	; select bank1
 13149     1DE6  081D               	movf	29,w	;volatile
 13150     1DE7  0672               	xorwf	??_ADC_GetConversion,w
 13151     1DE8  3983               	andlw	-125
 13152     1DE9  0672               	xorwf	??_ADC_GetConversion,w
 13153     1DEA  009D               	movwf	29	;volatile
 13154     1DEB                     i1l5329:
 13155                           
 13156                           ;mcc_generated_files/adc/src/adc.c: 104:     ADCON0bits.ADON = 1;
 13157     1DEB  141D               	bsf	29,0	;volatile
 13158     1DEC                     i1l5331:
 13159                           
 13160                           ;mcc_generated_files/adc/src/adc.c: 107:     _delay((unsigned long)((5)*(4000000/4000000
      +                          .0)));
 13161     1DEC  3200               	nop2	;2 cycle nop
 13162     1DED  3200               	nop2	;2 cycle nop
 13163     1DEE  0000               	nop
 13164     1DEF                     i1l5333:
 13165                           
 13166                           ;mcc_generated_files/adc/src/adc.c: 110:     ADCON0bits.GO_nDONE = 1;
 13167     1DEF  0021               	movlb	1	; select bank1
 13168     1DF0  149D               	bsf	29,1	;volatile
 13169     1DF1                     i1l34:	
 13170                           ;mcc_generated_files/adc/src/adc.c: 114:     {;mcc_generated_files/adc/src/adc.c: 115:  
      +                             }
 13171                           
 13172                           
 13173                           ;mcc_generated_files/adc/src/adc.c: 113:     while (ADCON0bits.GO_nDONE)
 13174     1DF1  189D               	btfsc	29,1	;volatile
 13175     1DF2  2DF4               	goto	u486_21
 13176     1DF3  2DF5               	goto	u486_20
 13177     1DF4                     u486_21:
 13178     1DF4  2DF1               	goto	i1l34
 13179     1DF5                     u486_20:
 13180     1DF5                     i1l5335:
 13181                           
 13182                           ;mcc_generated_files/adc/src/adc.c: 118:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 13183     1DF5  081C               	movf	28,w	;volatile
 13184     1DF6  00F1               	movwf	?_ADC_GetConversion+1
 13185     1DF7  081B               	movf	27,w	;volatile
 13186     1DF8  00F0               	movwf	?_ADC_GetConversion
 13187     1DF9                     i1l37:
 13188     1DF9  0008               	return
 13189     1DFA                     __end_of_ADC_GetConversion:
 13190                           
 13191                           	psect	text45
 13192     1B61                     __ptext45:	
 13193 ;; *************** function _I2C1_ISR *****************
 13194 ;; Defined at:
 13195 ;;		line 219 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13196 ;; Parameters:    Size  Location     Type
 13197 ;;		None
 13198 ;; Auto vars:     Size  Location     Type
 13199 ;;		None
 13200 ;; Return value:  Size  Location     Type
 13201 ;;                  1    wreg      void 
 13202 ;; Registers used:
 13203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13204 ;; Tracked objects:
 13205 ;;		On entry : 0/0
 13206 ;;		On exit  : 0/0
 13207 ;;		Unchanged: 0/0
 13208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13213 ;;Total ram usage:        0 bytes
 13214 ;; Hardware stack levels used: 1
 13215 ;; Hardware stack levels required when called: 5
 13216 ;; This function calls:
 13217 ;;		_I2C1_EventHandler
 13218 ;; This function is called by:
 13219 ;;		_INTERRUPT_InterruptManager
 13220 ;; This function uses a non-reentrant model
 13221 ;;
 13222                           
 13223     1B61                     _I2C1_ISR:	
 13224                           ;psect for function _I2C1_ISR
 13225                           
 13226     1B61                     i1l5891:	
 13227                           ;incstack = 0
 13228                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13229                           
 13230                           
 13231                           ;mcc_generated_files/i2c_host/src/mssp.c: 221:     I2C1_EventHandler();
 13232     1B61  3190  2099  319B   	fcall	_I2C1_EventHandler
 13233     1B64                     i1l187:
 13234     1B64  0008               	return
 13235     1B65                     __end_of_I2C1_ISR:
 13236                           
 13237                           	psect	text46
 13238     1099                     __ptext46:	
 13239 ;; *************** function _I2C1_EventHandler *****************
 13240 ;; Defined at:
 13241 ;;		line 256 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13242 ;; Parameters:    Size  Location     Type
 13243 ;;		None
 13244 ;; Auto vars:     Size  Location     Type
 13245 ;;		None
 13246 ;; Return value:  Size  Location     Type
 13247 ;;                  1    wreg      void 
 13248 ;; Registers used:
 13249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13250 ;; Tracked objects:
 13251 ;;		On entry : 0/0
 13252 ;;		On exit  : 0/0
 13253 ;;		Unchanged: 0/0
 13254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13257 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13259 ;;Total ram usage:        2 bytes
 13260 ;; Hardware stack levels used: 1
 13261 ;; Hardware stack levels required when called: 4
 13262 ;; This function calls:
 13263 ;;		_I2C1_EVENT_ERROR
 13264 ;;		_I2C1_EVENT_IDLE
 13265 ;;		_I2C1_EVENT_NACK
 13266 ;;		_I2C1_EVENT_RESET
 13267 ;;		_I2C1_EVENT_RX
 13268 ;;		_I2C1_EVENT_SEND_RD_ADDR
 13269 ;;		_I2C1_EVENT_SEND_WR_ADDR
 13270 ;;		_I2C1_EVENT_STOP
 13271 ;;		_I2C1_EVENT_TX
 13272 ;;		_I2C1_InterruptClear
 13273 ;;		_I2C1_IsAddr
 13274 ;;		_I2C1_IsData
 13275 ;;		_I2C1_IsNack
 13276 ;; This function is called by:
 13277 ;;		_I2C1_ISR
 13278 ;; This function uses a non-reentrant model
 13279 ;;
 13280                           
 13281     1099                     _I2C1_EventHandler:	
 13282                           ;psect for function _I2C1_EventHandler
 13283                           
 13284     1099                     i1l5665:	
 13285                           ;incstack = 0
 13286                           ; Regs used in _I2C1_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13287                           
 13288                           
 13289                           ;mcc_generated_files/i2c_host/src/mssp.c: 258:     I2C1_InterruptClear();
 13290     1099  319B  2329  3190   	fcall	_I2C1_InterruptClear
 13291     109C                     i1l5667:
 13292                           
 13293                           ;mcc_generated_files/i2c_host/src/mssp.c: 259:     if (I2C1_IsAddr() && I2C1_IsNack())
 13294     109C  319B  23BD  3190   	fcall	_I2C1_IsAddr
 13295     109F  3A00               	xorlw	0
 13296     10A0  1903               	skipnz
 13297     10A1  28A3               	goto	u515_21
 13298     10A2  28A4               	goto	u515_20
 13299     10A3                     u515_21:
 13300     10A3  28B2               	goto	i1l5673
 13301     10A4                     u515_20:
 13302     10A4                     i1l5669:
 13303     10A4  319B  238B  3190   	fcall	_I2C1_IsNack
 13304     10A7  3A00               	xorlw	0
 13305     10A8  1903               	skipnz
 13306     10A9  28AB               	goto	u516_21
 13307     10AA  28AC               	goto	u516_20
 13308     10AB                     u516_21:
 13309     10AB  28B2               	goto	i1l5673
 13310     10AC                     u516_20:
 13311     10AC                     i1l5671:
 13312                           
 13313                           ;mcc_generated_files/i2c_host/src/mssp.c: 260:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 261:         i2c1Status.state = I2C_STATE_NACK;
 13314     10AC  3005               	movlw	5
 13315     10AD  0022               	movlb	2	; select bank2
 13316     10AE  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 13317                           
 13318                           ;mcc_generated_files/i2c_host/src/mssp.c: 262:         i2c1Status.errorState = I2C_ERROR
      +                          _ADDR_NACK;
 13319     10AF  3001               	movlw	1
 13320     10B0  00D3               	movwf	(_i2c1Status^(0+256)+12)	;volatile
 13321                           
 13322                           ;mcc_generated_files/i2c_host/src/mssp.c: 263:     }
 13323     10B1  28C7               	goto	i1l5679
 13324     10B2                     i1l5673:
 13325     10B2  319B  236E  3190   	fcall	_I2C1_IsData
 13326     10B5  3A00               	xorlw	0
 13327     10B6  1903               	skipnz
 13328     10B7  28B9               	goto	u517_21
 13329     10B8  28BA               	goto	u517_20
 13330     10B9                     u517_21:
 13331     10B9  28C7               	goto	i1l5679
 13332     10BA                     u517_20:
 13333     10BA                     i1l5675:
 13334     10BA  319B  238B  3190   	fcall	_I2C1_IsNack
 13335     10BD  3A00               	xorlw	0
 13336     10BE  1903               	skipnz
 13337     10BF  28C1               	goto	u518_21
 13338     10C0  28C2               	goto	u518_20
 13339     10C1                     u518_21:
 13340     10C1  28C7               	goto	i1l5679
 13341     10C2                     u518_20:
 13342     10C2                     i1l5677:
 13343                           
 13344                           ;mcc_generated_files/i2c_host/src/mssp.c: 265:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 266:         i2c1Status.state = I2C_STATE_NACK;
 13345     10C2  3005               	movlw	5
 13346     10C3  0022               	movlb	2	; select bank2
 13347     10C4  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 13348                           
 13349                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:         i2c1Status.errorState = I2C_ERROR
      +                          _DATA_NACK;
 13350     10C5  3002               	movlw	2
 13351     10C6  00D3               	movwf	(_i2c1Status^(0+256)+12)	;volatile
 13352     10C7                     i1l5679:
 13353                           
 13354                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 13355     10C7  0022               	movlb	2	; select bank2
 13356     10C8  0854               	movf	(_i2c1Status^(0+256)+13),w	;volatile
 13357     10C9  00F4               	movwf	??_I2C1_EventHandler
 13358     10CA  01F5               	clrf	??_I2C1_EventHandler+1
 13359     10CB  35F4               	lslf	??_I2C1_EventHandler,f
 13360     10CC  0DF5               	rlf	??_I2C1_EventHandler+1,f
 13361     10CD  3060               	movlw	low _i2c1_eventTable
 13362     10CE  0774               	addwf	??_I2C1_EventHandler,w
 13363     10CF  0084               	movwf	4
 13364     10D0  3018               	movlw	high _i2c1_eventTable
 13365     10D1  3D75               	addwfc	??_I2C1_EventHandler+1,w
 13366     10D2  3880               	iorlw	128
 13367     10D3  0085               	movwf	5
 13368     10D4  3F01               	moviw [1]fsr0
 13369     10D5  008A               	movwf	10
 13370     10D6  3F00               	moviw [0]fsr0
 13371     10D7  000A               	callw
 13372     10D8  3190               	pagesel	$
 13373     10D9  0022               	movlb	2	; select bank2
 13374     10DA  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 13375     10DB                     i1l205:
 13376     10DB  0008               	return
 13377     10DC                     __end_of_I2C1_EventHandler:
 13378                           
 13379                           	psect	text47
 13380     1B8B                     __ptext47:	
 13381 ;; *************** function _I2C1_IsNack *****************
 13382 ;; Defined at:
 13383 ;;		line 447 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13384 ;; Parameters:    Size  Location     Type
 13385 ;;		None
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;		None
 13388 ;; Return value:  Size  Location     Type
 13389 ;;                  1    wreg      _Bool 
 13390 ;; Registers used:
 13391 ;;		wreg, status,2, status,0
 13392 ;; Tracked objects:
 13393 ;;		On entry : 0/0
 13394 ;;		On exit  : 0/0
 13395 ;;		Unchanged: 0/0
 13396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13401 ;;Total ram usage:        0 bytes
 13402 ;; Hardware stack levels used: 1
 13403 ;; This function calls:
 13404 ;;		Nothing
 13405 ;; This function is called by:
 13406 ;;		_I2C1_EventHandler
 13407 ;; This function uses a non-reentrant model
 13408 ;;
 13409                           
 13410     1B8B                     _I2C1_IsNack:	
 13411                           ;psect for function _I2C1_IsNack
 13412                           
 13413     1B8B                     i1l5471:	
 13414                           ;incstack = 0
 13415                           ; Regs used in _I2C1_IsNack: [wreg+status,2+status,0]
 13416                           
 13417                           
 13418                           ;mcc_generated_files/i2c_host/src/mssp.c: 449:     return SSP1CON2bits.ACKSTAT;
 13419     1B8B  0024               	movlb	4	; select bank4
 13420     1B8C  0E16               	swapf	22,w	;volatile
 13421     1B8D  0C89               	rrf	9,f
 13422     1B8E  0C89               	rrf	9,f
 13423     1B8F  3901               	andlw	1
 13424     1B90                     i1l280:
 13425     1B90  0008               	return
 13426     1B91                     __end_of_I2C1_IsNack:
 13427                           
 13428                           	psect	text48
 13429     1B6E                     __ptext48:	
 13430 ;; *************** function _I2C1_IsData *****************
 13431 ;; Defined at:
 13432 ;;		line 452 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13433 ;; Parameters:    Size  Location     Type
 13434 ;;		None
 13435 ;; Auto vars:     Size  Location     Type
 13436 ;;		None
 13437 ;; Return value:  Size  Location     Type
 13438 ;;                  1    wreg      _Bool 
 13439 ;; Registers used:
 13440 ;;		wreg, status,2, status,0
 13441 ;; Tracked objects:
 13442 ;;		On entry : 0/0
 13443 ;;		On exit  : 0/0
 13444 ;;		Unchanged: 0/0
 13445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13450 ;;Total ram usage:        0 bytes
 13451 ;; Hardware stack levels used: 1
 13452 ;; This function calls:
 13453 ;;		Nothing
 13454 ;; This function is called by:
 13455 ;;		_I2C1_EventHandler
 13456 ;; This function uses a non-reentrant model
 13457 ;;
 13458                           
 13459     1B6E                     _I2C1_IsData:	
 13460                           ;psect for function _I2C1_IsData
 13461                           
 13462     1B6E                     i1l5475:	
 13463                           ;incstack = 0
 13464                           ; Regs used in _I2C1_IsData: [wreg+status,2+status,0]
 13465                           
 13466                           
 13467                           ;mcc_generated_files/i2c_host/src/mssp.c: 454:     return (SSP1STATbits.D_nA);
 13468     1B6E  0024               	movlb	4	; select bank4
 13469     1B6F  0E14               	swapf	20,w	;volatile
 13470     1B70  0C89               	rrf	9,f
 13471     1B71  3901               	andlw	1
 13472     1B72                     i1l283:
 13473     1B72  0008               	return
 13474     1B73                     __end_of_I2C1_IsData:
 13475                           
 13476                           	psect	text49
 13477     1BBD                     __ptext49:	
 13478 ;; *************** function _I2C1_IsAddr *****************
 13479 ;; Defined at:
 13480 ;;		line 457 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13481 ;; Parameters:    Size  Location     Type
 13482 ;;		None
 13483 ;; Auto vars:     Size  Location     Type
 13484 ;;		None
 13485 ;; Return value:  Size  Location     Type
 13486 ;;                  1    wreg      _Bool 
 13487 ;; Registers used:
 13488 ;;		wreg, status,0
 13489 ;; Tracked objects:
 13490 ;;		On entry : 0/0
 13491 ;;		On exit  : 0/0
 13492 ;;		Unchanged: 0/0
 13493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13498 ;;Total ram usage:        0 bytes
 13499 ;; Hardware stack levels used: 1
 13500 ;; This function calls:
 13501 ;;		Nothing
 13502 ;; This function is called by:
 13503 ;;		_I2C1_EventHandler
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507     1BBD                     _I2C1_IsAddr:	
 13508                           ;psect for function _I2C1_IsAddr
 13509                           
 13510     1BBD                     i1l5467:	
 13511                           ;incstack = 0
 13512                           ; Regs used in _I2C1_IsAddr: [wreg+status,0]
 13513                           
 13514                           
 13515                           ;mcc_generated_files/i2c_host/src/mssp.c: 459:     return !(SSP1STATbits.D_nA);
 13516     1BBD  1003               	clrc
 13517     1BBE  0024               	movlb	4	; select bank4
 13518     1BBF  1E94               	btfss	20,5	;volatile
 13519     1BC0  1403               	setc
 13520     1BC1  3000               	movlw	0
 13521     1BC2  3D09               	addwfc	9,w
 13522     1BC3                     i1l286:
 13523     1BC3  0008               	return
 13524     1BC4                     __end_of_I2C1_IsAddr:
 13525                           
 13526                           	psect	text50
 13527     1B5D                     __ptext50:	
 13528 ;; *************** function _I2C1_ERROR_ISR *****************
 13529 ;; Defined at:
 13530 ;;		line 224 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13531 ;; Parameters:    Size  Location     Type
 13532 ;;		None
 13533 ;; Auto vars:     Size  Location     Type
 13534 ;;		None
 13535 ;; Return value:  Size  Location     Type
 13536 ;;                  1    wreg      void 
 13537 ;; Registers used:
 13538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13539 ;; Tracked objects:
 13540 ;;		On entry : 0/0
 13541 ;;		On exit  : 0/0
 13542 ;;		Unchanged: 0/0
 13543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13548 ;;Total ram usage:        0 bytes
 13549 ;; Hardware stack levels used: 1
 13550 ;; Hardware stack levels required when called: 5
 13551 ;; This function calls:
 13552 ;;		_I2C1_ErrorEventHandler
 13553 ;; This function is called by:
 13554 ;;		_INTERRUPT_InterruptManager
 13555 ;; This function uses a non-reentrant model
 13556 ;;
 13557                           
 13558     1B5D                     _I2C1_ERROR_ISR:	
 13559                           ;psect for function _I2C1_ERROR_ISR
 13560                           
 13561     1B5D                     i1l5893:	
 13562                           ;incstack = 0
 13563                           ; Regs used in _I2C1_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13564                           
 13565                           
 13566                           ;mcc_generated_files/i2c_host/src/mssp.c: 226:     I2C1_ErrorEventHandler();
 13567     1B5D  319F  2711  319B   	fcall	_I2C1_ErrorEventHandler
 13568     1B60                     i1l190:
 13569     1B60  0008               	return
 13570     1B61                     __end_of_I2C1_ERROR_ISR:
 13571                           
 13572                           	psect	text51
 13573     1F11                     __ptext51:	
 13574 ;; *************** function _I2C1_ErrorEventHandler *****************
 13575 ;; Defined at:
 13576 ;;		line 272 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13577 ;; Parameters:    Size  Location     Type
 13578 ;;		None
 13579 ;; Auto vars:     Size  Location     Type
 13580 ;;		None
 13581 ;; Return value:  Size  Location     Type
 13582 ;;                  1    wreg      void 
 13583 ;; Registers used:
 13584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13585 ;; Tracked objects:
 13586 ;;		On entry : 0/0
 13587 ;;		On exit  : 0/0
 13588 ;;		Unchanged: 0/0
 13589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13594 ;;Total ram usage:        2 bytes
 13595 ;; Hardware stack levels used: 1
 13596 ;; Hardware stack levels required when called: 4
 13597 ;; This function calls:
 13598 ;;		NULL
 13599 ;;		_I2C1_DefaultCallback
 13600 ;;		_I2C1_EVENT_ERROR
 13601 ;;		_I2C1_EVENT_IDLE
 13602 ;;		_I2C1_EVENT_NACK
 13603 ;;		_I2C1_EVENT_RESET
 13604 ;;		_I2C1_EVENT_RX
 13605 ;;		_I2C1_EVENT_SEND_RD_ADDR
 13606 ;;		_I2C1_EVENT_SEND_WR_ADDR
 13607 ;;		_I2C1_EVENT_STOP
 13608 ;;		_I2C1_EVENT_TX
 13609 ;;		_I2C1_ErrorInterruptClear
 13610 ;; This function is called by:
 13611 ;;		_I2C1_ERROR_ISR
 13612 ;; This function uses a non-reentrant model
 13613 ;;
 13614                           
 13615     1F11                     _I2C1_ErrorEventHandler:	
 13616                           ;psect for function _I2C1_ErrorEventHandler
 13617                           
 13618     1F11                     i1l5681:	
 13619                           ;incstack = 0
 13620                           ; Regs used in _I2C1_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13621                           
 13622                           
 13623                           ;mcc_generated_files/i2c_host/src/mssp.c: 274:     i2c1Status.state = I2C_STATE_ERROR;
 13624     1F11  3006               	movlw	6
 13625     1F12  0022               	movlb	2	; select bank2
 13626     1F13  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 13627                           
 13628                           ;mcc_generated_files/i2c_host/src/mssp.c: 275:     i2c1Status.errorState = I2C_ERROR_BUS
      +                          _COLLISION;
 13629     1F14  3003               	movlw	3
 13630     1F15  00D3               	movwf	(_i2c1Status^(0+256)+12)	;volatile
 13631     1F16                     i1l5683:
 13632                           
 13633                           ;mcc_generated_files/i2c_host/src/mssp.c: 276:     I2C1_ErrorInterruptClear();
 13634     1F16  319B  2326  319F   	fcall	_I2C1_ErrorInterruptClear
 13635     1F19                     i1l5685:
 13636                           
 13637                           ;mcc_generated_files/i2c_host/src/mssp.c: 277:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 13638     1F19  0022               	movlb	2	; select bank2
 13639     1F1A  0854               	movf	(_i2c1Status^(0+256)+13),w	;volatile
 13640     1F1B  00F4               	movwf	??_I2C1_ErrorEventHandler
 13641     1F1C  01F5               	clrf	??_I2C1_ErrorEventHandler+1
 13642     1F1D  35F4               	lslf	??_I2C1_ErrorEventHandler,f
 13643     1F1E  0DF5               	rlf	??_I2C1_ErrorEventHandler+1,f
 13644     1F1F  3060               	movlw	low _i2c1_eventTable
 13645     1F20  0774               	addwf	??_I2C1_ErrorEventHandler,w
 13646     1F21  0084               	movwf	4
 13647     1F22  3018               	movlw	high _i2c1_eventTable
 13648     1F23  3D75               	addwfc	??_I2C1_ErrorEventHandler+1,w
 13649     1F24  3880               	iorlw	128
 13650     1F25  0085               	movwf	5
 13651     1F26  3F01               	moviw [1]fsr0
 13652     1F27  008A               	movwf	10
 13653     1F28  3F00               	moviw [0]fsr0
 13654     1F29  000A               	callw
 13655     1F2A  319F               	pagesel	$
 13656     1F2B  0022               	movlb	2	; select bank2
 13657     1F2C  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 13658     1F2D                     i1l5687:
 13659                           
 13660                           ;mcc_generated_files/i2c_host/src/mssp.c: 278:     I2C1_Callback();
 13661     1F2D  0023               	movlb	3	; select bank3
 13662     1F2E  083D               	movf	(_I2C1_Callback+1)^(0+384),w
 13663     1F2F  008A               	movwf	10
 13664     1F30  083C               	movf	_I2C1_Callback^(0+384),w
 13665     1F31  000A               	callw
 13666     1F32  319F               	pagesel	$
 13667     1F33                     i1l208:
 13668     1F33  0008               	return
 13669     1F34                     __end_of_I2C1_ErrorEventHandler:
 13670                           
 13671                           	psect	text52
 13672     1BB6                     __ptext52:	
 13673 ;; *************** function _I2C1_EVENT_RESET *****************
 13674 ;; Defined at:
 13675 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13676 ;; Parameters:    Size  Location     Type
 13677 ;;		None
 13678 ;; Auto vars:     Size  Location     Type
 13679 ;;		None
 13680 ;; Return value:  Size  Location     Type
 13681 ;;                  1    wreg      enum E10210
 13682 ;; Registers used:
 13683 ;;		wreg, status,2, status,0, pclath, cstack
 13684 ;; Tracked objects:
 13685 ;;		On entry : 0/0
 13686 ;;		On exit  : 0/0
 13687 ;;		Unchanged: 0/0
 13688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13693 ;;Total ram usage:        0 bytes
 13694 ;; Hardware stack levels used: 1
 13695 ;; Hardware stack levels required when called: 1
 13696 ;; This function calls:
 13697 ;;		_I2C1_BusReset
 13698 ;; This function is called by:
 13699 ;;		_I2C1_EVENT_ERROR
 13700 ;;		_I2C1_EventHandler
 13701 ;;		_I2C1_ErrorEventHandler
 13702 ;; This function uses a non-reentrant model
 13703 ;;
 13704                           
 13705     1BB6                     _I2C1_EVENT_RESET:	
 13706                           ;psect for function _I2C1_EVENT_RESET
 13707                           
 13708     1BB6                     i1l5365:	
 13709                           ;incstack = 0
 13710                           ; Regs used in _I2C1_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 13711                           
 13712                           
 13713                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:     I2C1_BusReset();
 13714     1BB6  319B  2345  319B   	fcall	_I2C1_BusReset
 13715     1BB9                     i1l5367:
 13716                           
 13717                           ;mcc_generated_files/i2c_host/src/mssp.c: 387:     i2c1Status.busy = 0;
 13718     1BB9  0022               	movlb	2	; select bank2
 13719     1BBA  01C7               	clrf	_i2c1Status^(0+256)	;volatile
 13720     1BBB                     i1l5369:
 13721                           
 13722                           ;mcc_generated_files/i2c_host/src/mssp.c: 388:     return I2C_STATE_IDLE;
 13723     1BBB  3000               	movlw	0
 13724     1BBC                     i1l247:
 13725     1BBC  0008               	return
 13726     1BBD                     __end_of_I2C1_EVENT_RESET:
 13727                           
 13728                           	psect	text53
 13729     1BD4                     __ptext53:	
 13730 ;; *************** function _I2C1_EVENT_STOP *****************
 13731 ;; Defined at:
 13732 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13733 ;; Parameters:    Size  Location     Type
 13734 ;;		None
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;		None
 13737 ;; Return value:  Size  Location     Type
 13738 ;;                  1    wreg      enum E10210
 13739 ;; Registers used:
 13740 ;;		wreg, status,2, status,0, pclath, cstack
 13741 ;; Tracked objects:
 13742 ;;		On entry : 0/0
 13743 ;;		On exit  : 0/0
 13744 ;;		Unchanged: 0/0
 13745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13750 ;;Total ram usage:        0 bytes
 13751 ;; Hardware stack levels used: 1
 13752 ;; Hardware stack levels required when called: 2
 13753 ;; This function calls:
 13754 ;;		_I2C1_Close
 13755 ;;		_I2C1_StopSend
 13756 ;; This function is called by:
 13757 ;;		_I2C1_EVENT_TX
 13758 ;;		_I2C1_EVENT_NACK
 13759 ;;		_I2C1_EventHandler
 13760 ;;		_I2C1_ErrorEventHandler
 13761 ;; This function uses a non-reentrant model
 13762 ;;
 13763                           
 13764     1BD4                     _I2C1_EVENT_STOP:	
 13765                           ;psect for function _I2C1_EVENT_STOP
 13766                           
 13767     1BD4                     i1l5343:	
 13768                           ;incstack = 0
 13769                           ; Regs used in _I2C1_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 13770                           
 13771                           
 13772                           ;mcc_generated_files/i2c_host/src/mssp.c: 379:     I2C1_StopSend();
 13773     1BD4  319B  232C  319B   	fcall	_I2C1_StopSend
 13774                           
 13775                           ;mcc_generated_files/i2c_host/src/mssp.c: 380:     I2C1_Close();
 13776     1BD7  319D  252C  319B   	fcall	_I2C1_Close
 13777     1BDA                     i1l5345:
 13778                           
 13779                           ;mcc_generated_files/i2c_host/src/mssp.c: 381:     return I2C_STATE_IDLE;
 13780     1BDA  3000               	movlw	0
 13781     1BDB                     i1l244:
 13782     1BDB  0008               	return
 13783     1BDC                     __end_of_I2C1_EVENT_STOP:
 13784                           
 13785                           	psect	text54
 13786     1B85                     __ptext54:	
 13787 ;; *************** function _I2C1_EVENT_ERROR *****************
 13788 ;; Defined at:
 13789 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13790 ;; Parameters:    Size  Location     Type
 13791 ;;		None
 13792 ;; Auto vars:     Size  Location     Type
 13793 ;;  retEventStat    1    0[COMMON] enum E10210
 13794 ;; Return value:  Size  Location     Type
 13795 ;;                  1    wreg      enum E10210
 13796 ;; Registers used:
 13797 ;;		wreg, status,2, status,0, pclath, cstack
 13798 ;; Tracked objects:
 13799 ;;		On entry : 0/0
 13800 ;;		On exit  : 0/0
 13801 ;;		Unchanged: 0/0
 13802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13807 ;;Total ram usage:        1 bytes
 13808 ;; Hardware stack levels used: 1
 13809 ;; Hardware stack levels required when called: 2
 13810 ;; This function calls:
 13811 ;;		_I2C1_EVENT_RESET
 13812 ;; This function is called by:
 13813 ;;		_I2C1_EventHandler
 13814 ;;		_I2C1_ErrorEventHandler
 13815 ;; This function uses a non-reentrant model
 13816 ;;
 13817                           
 13818     1B85                     _I2C1_EVENT_ERROR:	
 13819                           ;psect for function _I2C1_EVENT_ERROR
 13820                           
 13821     1B85                     i1l5555:	
 13822                           ;incstack = 0
 13823                           ; Regs used in _I2C1_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 13824                           
 13825     1B85                     i1l5557:
 13826                           
 13827                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     retEventState = I2C1_EVENT_RESET();
 13828     1B85  319B  23B6  319B   	fcall	_I2C1_EVENT_RESET
 13829     1B88  00F0               	movwf	I2C1_EVENT_ERROR@retEventState
 13830     1B89                     i1l5559:
 13831                           
 13832                           ;mcc_generated_files/i2c_host/src/mssp.c: 374:     return retEventState;
 13833     1B89  0870               	movf	I2C1_EVENT_ERROR@retEventState,w
 13834     1B8A                     i1l241:
 13835     1B8A  0008               	return
 13836     1B8B                     __end_of_I2C1_EVENT_ERROR:
 13837                           
 13838                           	psect	text55
 13839     1B7F                     __ptext55:	
 13840 ;; *************** function _I2C1_EVENT_NACK *****************
 13841 ;; Defined at:
 13842 ;;		line 363 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13843 ;; Parameters:    Size  Location     Type
 13844 ;;		None
 13845 ;; Auto vars:     Size  Location     Type
 13846 ;;  retEventStat    1    0[COMMON] enum E10210
 13847 ;; Return value:  Size  Location     Type
 13848 ;;                  1    wreg      enum E10210
 13849 ;; Registers used:
 13850 ;;		wreg, status,2, status,0, pclath, cstack
 13851 ;; Tracked objects:
 13852 ;;		On entry : 0/0
 13853 ;;		On exit  : 0/0
 13854 ;;		Unchanged: 0/0
 13855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13860 ;;Total ram usage:        1 bytes
 13861 ;; Hardware stack levels used: 1
 13862 ;; Hardware stack levels required when called: 3
 13863 ;; This function calls:
 13864 ;;		_I2C1_EVENT_STOP
 13865 ;; This function is called by:
 13866 ;;		_I2C1_EventHandler
 13867 ;;		_I2C1_ErrorEventHandler
 13868 ;; This function uses a non-reentrant model
 13869 ;;
 13870                           
 13871     1B7F                     _I2C1_EVENT_NACK:	
 13872                           ;psect for function _I2C1_EVENT_NACK
 13873                           
 13874     1B7F                     i1l5547:	
 13875                           ;incstack = 0
 13876                           ; Regs used in _I2C1_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 13877                           
 13878     1B7F                     i1l5549:
 13879                           
 13880                           ;mcc_generated_files/i2c_host/src/mssp.c: 366:     retEventState = I2C1_EVENT_STOP();
 13881     1B7F  319B  23D4  319B   	fcall	_I2C1_EVENT_STOP
 13882     1B82  00F0               	movwf	I2C1_EVENT_NACK@retEventState
 13883     1B83                     i1l5551:
 13884                           
 13885                           ;mcc_generated_files/i2c_host/src/mssp.c: 367:     return retEventState;
 13886     1B83  0870               	movf	I2C1_EVENT_NACK@retEventState,w
 13887     1B84                     i1l238:
 13888     1B84  0008               	return
 13889     1B85                     __end_of_I2C1_EVENT_NACK:
 13890                           
 13891                           	psect	text56
 13892     1058                     __ptext56:	
 13893 ;; *************** function _I2C1_EVENT_RX *****************
 13894 ;; Defined at:
 13895 ;;		line 331 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13896 ;; Parameters:    Size  Location     Type
 13897 ;;		None
 13898 ;; Auto vars:     Size  Location     Type
 13899 ;;  retEventStat    1    1[COMMON] enum E10210
 13900 ;; Return value:  Size  Location     Type
 13901 ;;                  1    wreg      enum E10210
 13902 ;; Registers used:
 13903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13904 ;; Tracked objects:
 13905 ;;		On entry : 0/0
 13906 ;;		On exit  : 0/0
 13907 ;;		Unchanged: 0/0
 13908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13913 ;;Total ram usage:        2 bytes
 13914 ;; Hardware stack levels used: 1
 13915 ;; Hardware stack levels required when called: 1
 13916 ;; This function calls:
 13917 ;;		_I2C1_AckSend
 13918 ;;		_I2C1_DataReceive
 13919 ;;		_I2C1_IsRxBufFull
 13920 ;;		_I2C1_NackSend
 13921 ;;		_I2C1_ReceiveEnable
 13922 ;;		_I2C1_RestartDisable
 13923 ;; This function is called by:
 13924 ;;		_I2C1_EventHandler
 13925 ;;		_I2C1_ErrorEventHandler
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929     1058                     _I2C1_EVENT_RX:	
 13930                           ;psect for function _I2C1_EVENT_RX
 13931                           
 13932     1058                     i1l5521:	
 13933                           ;incstack = 0
 13934                           ; Regs used in _I2C1_EVENT_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13935                           
 13936                           
 13937                           ;mcc_generated_files/i2c_host/src/mssp.c: 333:     i2c_host_event_states_t retEventState
      +                           = I2C_STATE_RX;
 13938     1058  3004               	movlw	4
 13939     1059  00F1               	movwf	I2C1_EVENT_RX@retEventState
 13940     105A                     i1l5523:
 13941                           
 13942                           ;mcc_generated_files/i2c_host/src/mssp.c: 335:     if (I2C1_IsRxBufFull())
 13943     105A  319B  2351  3190   	fcall	_I2C1_IsRxBufFull
 13944     105D  3A00               	xorlw	0
 13945     105E  1903               	skipnz
 13946     105F  2861               	goto	u505_21
 13947     1060  2862               	goto	u505_20
 13948     1061                     u505_21:
 13949     1061  2894               	goto	i1l5541
 13950     1062                     u505_20:
 13951     1062                     i1l5525:
 13952                           
 13953                           ;mcc_generated_files/i2c_host/src/mssp.c: 336:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 337:         if (i2c1Status.readLength > 0)
 13954     1062  0022               	movlb	2	; select bank2
 13955     1063  0850               	movf	(_i2c1Status^(0+256)+9),w	;volatile
 13956     1064  0451               	iorwf	((_i2c1Status+1)^(0+256)+9),w	;volatile
 13957     1065  1903               	btfsc	3,2
 13958     1066  2868               	goto	u506_21
 13959     1067  2869               	goto	u506_20
 13960     1068                     u506_21:
 13961     1068  2881               	goto	i1l5533
 13962     1069                     u506_20:
 13963     1069                     i1l5527:
 13964                           
 13965                           ;mcc_generated_files/i2c_host/src/mssp.c: 338:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 339:             *i2c1Status.readPtr++ = I2C1_DataReceive();
 13966     1069  319B  232F  3190   	fcall	_I2C1_DataReceive
 13967     106C  00F0               	movwf	??_I2C1_EVENT_RX
 13968     106D  3007               	movlw	7
 13969     106E  3E47               	addlw	(low (_i2c1Status| (0+256)))& (0+255)
 13970     106F  0086               	movwf	6
 13971     1070  3001               	movlw	1	; select bank2/3
 13972     1071  0087               	movwf	7
 13973     1072  3F40               	moviw [0]fsr1
 13974     1073  0084               	movwf	4
 13975     1074  3F41               	moviw [1]fsr1
 13976     1075  0085               	movwf	5
 13977     1076  0870               	movf	??_I2C1_EVENT_RX,w
 13978     1077  0080               	movwf	0
 13979     1078                     i1l5529:
 13980     1078  3001               	movlw	1
 13981     1079  0022               	movlb	2	; select bank2
 13982     107A  07CE               	addwf	(low ((_i2c1Status| (0+256)+7)))^0,f	;volatile
 13983     107B  3000               	movlw	0
 13984     107C  3DCF               	addwfc	((low ((_i2c1Status| (0+256)+7))+1))^0,f	;volatile
 13985     107D                     i1l5531:
 13986                           
 13987                           ;mcc_generated_files/i2c_host/src/mssp.c: 340:             i2c1Status.readLength--;
 13988     107D  3001               	movlw	1
 13989     107E  02D0               	subwf	(_i2c1Status^(0+256)+9),f	;volatile
 13990     107F  3000               	movlw	0
 13991     1080  3BD1               	subwfb	((_i2c1Status+1)^(0+256)+9),f	;volatile
 13992     1081                     i1l5533:
 13993                           
 13994                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:         if (i2c1Status.readLength > 0)
 13995     1081  0850               	movf	(_i2c1Status^(0+256)+9),w	;volatile
 13996     1082  0451               	iorwf	((_i2c1Status+1)^(0+256)+9),w	;volatile
 13997     1083  1903               	btfsc	3,2
 13998     1084  2886               	goto	u507_21
 13999     1085  2887               	goto	u507_20
 14000     1086                     u507_21:
 14001     1086  288B               	goto	i1l5537
 14002     1087                     u507_20:
 14003     1087                     i1l5535:
 14004                           
 14005                           ;mcc_generated_files/i2c_host/src/mssp.c: 345:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 346:             I2C1_AckSend();
 14006     1087  319B  234D  3190   	fcall	_I2C1_AckSend
 14007                           
 14008                           ;mcc_generated_files/i2c_host/src/mssp.c: 347:         }
 14009     108A  2897               	goto	i1l5543
 14010     108B                     i1l5537:
 14011                           
 14012                           ;mcc_generated_files/i2c_host/src/mssp.c: 349:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 350:             I2C1_RestartDisable();
 14013     108B  319B  2335  3190   	fcall	_I2C1_RestartDisable
 14014                           
 14015                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:             I2C1_NackSend();
 14016     108E  319B  2355  3190   	fcall	_I2C1_NackSend
 14017     1091                     i1l5539:
 14018                           
 14019                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:             retEventState = I2C_STATE_STO
      +                          P;
 14020     1091  3007               	movlw	7
 14021     1092  00F1               	movwf	I2C1_EVENT_RX@retEventState
 14022     1093  2897               	goto	i1l5543
 14023     1094                     i1l5541:
 14024                           
 14025                           ;mcc_generated_files/i2c_host/src/mssp.c: 357:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 358:         I2C1_ReceiveEnable();
 14026     1094  319B  2332  3190   	fcall	_I2C1_ReceiveEnable
 14027     1097                     i1l5543:
 14028                           
 14029                           ;mcc_generated_files/i2c_host/src/mssp.c: 360:     return retEventState;
 14030     1097  0871               	movf	I2C1_EVENT_RX@retEventState,w
 14031     1098                     i1l235:
 14032     1098  0008               	return
 14033     1099                     __end_of_I2C1_EVENT_RX:
 14034                           
 14035                           	psect	text57
 14036     1BAF                     __ptext57:	
 14037 ;; *************** function _I2C1_EVENT_SEND_WR_ADDR *****************
 14038 ;; Defined at:
 14039 ;;		line 299 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14040 ;; Parameters:    Size  Location     Type
 14041 ;;		None
 14042 ;; Auto vars:     Size  Location     Type
 14043 ;;		None
 14044 ;; Return value:  Size  Location     Type
 14045 ;;                  1    wreg      enum E10210
 14046 ;; Registers used:
 14047 ;;		wreg, status,2, status,0, pclath, cstack
 14048 ;; Tracked objects:
 14049 ;;		On entry : 0/0
 14050 ;;		On exit  : 0/0
 14051 ;;		Unchanged: 0/0
 14052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14057 ;;Total ram usage:        0 bytes
 14058 ;; Hardware stack levels used: 1
 14059 ;; Hardware stack levels required when called: 1
 14060 ;; This function calls:
 14061 ;;		_I2C1_DataTransmit
 14062 ;; This function is called by:
 14063 ;;		_I2C1_EventHandler
 14064 ;;		_I2C1_ErrorEventHandler
 14065 ;; This function uses a non-reentrant model
 14066 ;;
 14067                           
 14068     1BAF                     _I2C1_EVENT_SEND_WR_ADDR:	
 14069                           ;psect for function _I2C1_EVENT_SEND_WR_ADDR
 14070                           
 14071     1BAF                     i1l5491:	
 14072                           ;incstack = 0
 14073                           ; Regs used in _I2C1_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 14074                           
 14075                           
 14076                           ;mcc_generated_files/i2c_host/src/mssp.c: 301:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
 14077     1BAF  0022               	movlb	2	; select bank2
 14078     1BB0  3548               	lslf	(_i2c1Status^(0+256)+1),w	;volatile
 14079     1BB1  319B  2369  319B   	fcall	_I2C1_DataTransmit
 14080     1BB4                     i1l5493:
 14081                           
 14082                           ;mcc_generated_files/i2c_host/src/mssp.c: 302:     return I2C_STATE_TX;
 14083     1BB4  3003               	movlw	3
 14084     1BB5                     i1l220:
 14085     1BB5  0008               	return
 14086     1BB6                     __end_of_I2C1_EVENT_SEND_WR_ADDR:
 14087                           
 14088                           	psect	text58
 14089     1BCC                     __ptext58:	
 14090 ;; *************** function _I2C1_EVENT_SEND_RD_ADDR *****************
 14091 ;; Defined at:
 14092 ;;		line 293 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14093 ;; Parameters:    Size  Location     Type
 14094 ;;		None
 14095 ;; Auto vars:     Size  Location     Type
 14096 ;;		None
 14097 ;; Return value:  Size  Location     Type
 14098 ;;                  1    wreg      enum E10210
 14099 ;; Registers used:
 14100 ;;		wreg, status,2, status,0, pclath, cstack
 14101 ;; Tracked objects:
 14102 ;;		On entry : 0/0
 14103 ;;		On exit  : 0/0
 14104 ;;		Unchanged: 0/0
 14105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14110 ;;Total ram usage:        0 bytes
 14111 ;; Hardware stack levels used: 1
 14112 ;; Hardware stack levels required when called: 1
 14113 ;; This function calls:
 14114 ;;		_I2C1_DataTransmit
 14115 ;; This function is called by:
 14116 ;;		_I2C1_EventHandler
 14117 ;;		_I2C1_ErrorEventHandler
 14118 ;; This function uses a non-reentrant model
 14119 ;;
 14120                           
 14121     1BCC                     _I2C1_EVENT_SEND_RD_ADDR:	
 14122                           ;psect for function _I2C1_EVENT_SEND_RD_ADDR
 14123                           
 14124     1BCC                     i1l5485:	
 14125                           ;incstack = 0
 14126                           ; Regs used in _I2C1_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 14127                           
 14128                           
 14129                           ;mcc_generated_files/i2c_host/src/mssp.c: 295:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1 | 1));
 14130     1BCC  1403               	setc
 14131     1BCD  0022               	movlb	2	; select bank2
 14132     1BCE  0D48               	rlf	(_i2c1Status^(0+256)+1),w	;volatile
 14133     1BCF  319B  2369  319B   	fcall	_I2C1_DataTransmit
 14134     1BD2                     i1l5487:
 14135                           
 14136                           ;mcc_generated_files/i2c_host/src/mssp.c: 296:     return I2C_STATE_RX;
 14137     1BD2  3004               	movlw	4
 14138     1BD3                     i1l217:
 14139     1BD3  0008               	return
 14140     1BD4                     __end_of_I2C1_EVENT_SEND_RD_ADDR:
 14141                           
 14142                           	psect	text59
 14143     1B59                     __ptext59:	
 14144 ;; *************** function _I2C1_EVENT_IDLE *****************
 14145 ;; Defined at:
 14146 ;;		line 287 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14147 ;; Parameters:    Size  Location     Type
 14148 ;;		None
 14149 ;; Auto vars:     Size  Location     Type
 14150 ;;		None
 14151 ;; Return value:  Size  Location     Type
 14152 ;;                  1    wreg      enum E10210
 14153 ;; Registers used:
 14154 ;;		wreg, status,2
 14155 ;; Tracked objects:
 14156 ;;		On entry : 0/0
 14157 ;;		On exit  : 0/0
 14158 ;;		Unchanged: 0/0
 14159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14164 ;;Total ram usage:        0 bytes
 14165 ;; Hardware stack levels used: 1
 14166 ;; This function calls:
 14167 ;;		Nothing
 14168 ;; This function is called by:
 14169 ;;		_I2C1_EventHandler
 14170 ;;		_I2C1_ErrorEventHandler
 14171 ;; This function uses a non-reentrant model
 14172 ;;
 14173                           
 14174     1B59                     _I2C1_EVENT_IDLE:	
 14175                           ;psect for function _I2C1_EVENT_IDLE
 14176                           
 14177     1B59                     i1l5479:	
 14178                           ;incstack = 0
 14179                           ; Regs used in _I2C1_EVENT_IDLE: [wreg+status,2]
 14180                           
 14181                           
 14182                           ;mcc_generated_files/i2c_host/src/mssp.c: 289:     i2c1Status.busy = 0;
 14183     1B59  0022               	movlb	2	; select bank2
 14184     1B5A  01C7               	clrf	_i2c1Status^(0+256)	;volatile
 14185     1B5B                     i1l5481:
 14186                           
 14187                           ;mcc_generated_files/i2c_host/src/mssp.c: 290:     return I2C_STATE_RESET;
 14188     1B5B  3008               	movlw	8
 14189     1B5C                     i1l214:
 14190     1B5C  0008               	return
 14191     1B5D                     __end_of_I2C1_EVENT_IDLE:
 14192                           
 14193                           	psect	text60
 14194     1FD1                     __ptext60:	
 14195 ;; *************** function _I2C1_EVENT_TX *****************
 14196 ;; Defined at:
 14197 ;;		line 305 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14198 ;; Parameters:    Size  Location     Type
 14199 ;;		None
 14200 ;; Auto vars:     Size  Location     Type
 14201 ;;  retEventStat    1    3[COMMON] enum E10210
 14202 ;; Return value:  Size  Location     Type
 14203 ;;                  1    wreg      enum E10210
 14204 ;; Registers used:
 14205 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14206 ;; Tracked objects:
 14207 ;;		On entry : 0/0
 14208 ;;		On exit  : 0/0
 14209 ;;		Unchanged: 0/0
 14210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14214 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14215 ;;Total ram usage:        3 bytes
 14216 ;; Hardware stack levels used: 1
 14217 ;; Hardware stack levels required when called: 3
 14218 ;; This function calls:
 14219 ;;		_I2C1_DataTransmit
 14220 ;;		_I2C1_EVENT_STOP
 14221 ;;		_I2C1_RestartEnable
 14222 ;; This function is called by:
 14223 ;;		_I2C1_EventHandler
 14224 ;;		_I2C1_ErrorEventHandler
 14225 ;; This function uses a non-reentrant model
 14226 ;;
 14227                           
 14228     1FD1                     _I2C1_EVENT_TX:	
 14229                           ;psect for function _I2C1_EVENT_TX
 14230                           
 14231     1FD1                     i1l5497:	
 14232                           ;incstack = 0
 14233                           ; Regs used in _I2C1_EVENT_TX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14234                           
 14235     1FD1                     i1l5499:
 14236                           
 14237                           ;mcc_generated_files/i2c_host/src/mssp.c: 308:     if (i2c1Status.writeLength)
 14238     1FD1  0022               	movlb	2	; select bank2
 14239     1FD2  084C               	movf	(_i2c1Status^(0+256)+5),w	;volatile
 14240     1FD3  044D               	iorwf	((_i2c1Status+1)^(0+256)+5),w	;volatile
 14241     1FD4  1903               	btfsc	3,2
 14242     1FD5  2FD7               	goto	u503_21
 14243     1FD6  2FD8               	goto	u503_20
 14244     1FD7                     u503_21:
 14245     1FD7  2FEE               	goto	i1l5507
 14246     1FD8                     u503_20:
 14247     1FD8                     i1l5501:
 14248                           
 14249                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 310:         i2c1Status.writeLength--;
 14250     1FD8  3001               	movlw	1
 14251     1FD9  02CC               	subwf	(_i2c1Status^(0+256)+5),f	;volatile
 14252     1FDA  3000               	movlw	0
 14253     1FDB  3BCD               	subwfb	((_i2c1Status+1)^(0+256)+5),f	;volatile
 14254     1FDC                     i1l5503:
 14255                           
 14256                           ;mcc_generated_files/i2c_host/src/mssp.c: 311:         I2C1_DataTransmit(*i2c1Status.wri
      +                          tePtr++);
 14257     1FDC  084B               	movf	((low ((_i2c1Status| (0+256)+3))+1))^0,w	;volatile
 14258     1FDD  00F2               	movwf	??_I2C1_EVENT_TX+1
 14259     1FDE  084A               	movf	(low ((_i2c1Status| (0+256)+3)))^0,w	;volatile
 14260     1FDF  00F1               	movwf	??_I2C1_EVENT_TX
 14261     1FE0  0ACA               	incf	(low ((_i2c1Status| (0+256)+3)))^0,f	;volatile
 14262     1FE1  1903               	skipnz
 14263     1FE2  0ACB               	incf	((low ((_i2c1Status| (0+256)+3))+1))^0,f	;volatile
 14264     1FE3  0871               	movf	??_I2C1_EVENT_TX,w
 14265     1FE4  0086               	movwf	6
 14266     1FE5  0872               	movf	??_I2C1_EVENT_TX+1,w
 14267     1FE6  0087               	movwf	7
 14268     1FE7  0801               	movf	1,w
 14269     1FE8  319B  2369  319F   	fcall	_I2C1_DataTransmit
 14270     1FEB                     i1l5505:
 14271                           
 14272                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:         retEventState = I2C_STATE_TX;
 14273     1FEB  3003               	movlw	3
 14274     1FEC  00F3               	movwf	I2C1_EVENT_TX@retEventState
 14275                           
 14276                           ;mcc_generated_files/i2c_host/src/mssp.c: 313:     }
 14277     1FED  2FFE               	goto	i1l5517
 14278     1FEE                     i1l5507:
 14279                           
 14280                           ;mcc_generated_files/i2c_host/src/mssp.c: 315:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 316:         if (i2c1Status.switchToRead)
 14281     1FEE  0852               	movf	(_i2c1Status^(0+256)+11),w	;volatile
 14282     1FEF  1903               	btfsc	3,2
 14283     1FF0  2FF2               	goto	u504_21
 14284     1FF1  2FF3               	goto	u504_20
 14285     1FF2                     u504_21:
 14286     1FF2  2FFA               	goto	i1l5515
 14287     1FF3                     u504_20:
 14288     1FF3                     i1l5509:
 14289                           
 14290                           ;mcc_generated_files/i2c_host/src/mssp.c: 317:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 318:             i2c1Status.switchToRead = 0;
 14291     1FF3  01D2               	clrf	(_i2c1Status^(0+256)+11)	;volatile
 14292     1FF4                     i1l5511:
 14293                           
 14294                           ;mcc_generated_files/i2c_host/src/mssp.c: 319:             I2C1_RestartEnable();
 14295     1FF4  319B  2338  319F   	fcall	_I2C1_RestartEnable
 14296     1FF7                     i1l5513:
 14297                           
 14298                           ;mcc_generated_files/i2c_host/src/mssp.c: 320:             retEventState = I2C_STATE_SEN
      +                          D_RD_ADDR;
 14299     1FF7  01F3               	clrf	I2C1_EVENT_TX@retEventState
 14300     1FF8  0AF3               	incf	I2C1_EVENT_TX@retEventState,f
 14301                           
 14302                           ;mcc_generated_files/i2c_host/src/mssp.c: 321:         }
 14303     1FF9  2FFE               	goto	i1l5517
 14304     1FFA                     i1l5515:
 14305                           
 14306                           ;mcc_generated_files/i2c_host/src/mssp.c: 323:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 324:             retEventState = I2C1_EVENT_STOP();
 14307     1FFA  319B  23D4  319F   	fcall	_I2C1_EVENT_STOP
 14308     1FFD  00F3               	movwf	I2C1_EVENT_TX@retEventState
 14309     1FFE                     i1l5517:
 14310                           
 14311                           ;mcc_generated_files/i2c_host/src/mssp.c: 328:     return retEventState;
 14312     1FFE  0873               	movf	I2C1_EVENT_TX@retEventState,w
 14313     1FFF                     i1l227:
 14314     1FFF  0008               	return
 14315     2000                     __end_of_I2C1_EVENT_TX:
 14316                           
 14317                           	psect	text61
 14318     1B38                     __ptext61:	
 14319 ;; *************** function _I2C1_RestartEnable *****************
 14320 ;; Defined at:
 14321 ;;		line 415 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14322 ;; Parameters:    Size  Location     Type
 14323 ;;		None
 14324 ;; Auto vars:     Size  Location     Type
 14325 ;;		None
 14326 ;; Return value:  Size  Location     Type
 14327 ;;                  1    wreg      void 
 14328 ;; Registers used:
 14329 ;;		None
 14330 ;; Tracked objects:
 14331 ;;		On entry : 0/0
 14332 ;;		On exit  : 0/0
 14333 ;;		Unchanged: 0/0
 14334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14339 ;;Total ram usage:        0 bytes
 14340 ;; Hardware stack levels used: 1
 14341 ;; This function calls:
 14342 ;;		Nothing
 14343 ;; This function is called by:
 14344 ;;		_I2C1_EVENT_TX
 14345 ;; This function uses a non-reentrant model
 14346 ;;
 14347                           
 14348     1B38                     _I2C1_RestartEnable:	
 14349                           ;psect for function _I2C1_RestartEnable
 14350                           
 14351     1B38                     i1l5341:	
 14352                           ;incstack = 0
 14353                           ; Regs used in _I2C1_RestartEnable: []
 14354                           
 14355                           
 14356                           ;mcc_generated_files/i2c_host/src/mssp.c: 417:     SSP1CON2bits.RSEN = 1;
 14357     1B38  0024               	movlb	4	; select bank4
 14358     1B39  1496               	bsf	22,1	;volatile
 14359     1B3A                     i1l262:
 14360     1B3A  0008               	return
 14361     1B3B                     __end_of_I2C1_RestartEnable:
 14362                           
 14363                           	psect	text62
 14364     1B69                     __ptext62:	
 14365 ;; *************** function _I2C1_DataTransmit *****************
 14366 ;; Defined at:
 14367 ;;		line 399 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14368 ;; Parameters:    Size  Location     Type
 14369 ;;  data            1    wreg     unsigned char 
 14370 ;; Auto vars:     Size  Location     Type
 14371 ;;  data            1    0[COMMON] unsigned char 
 14372 ;; Return value:  Size  Location     Type
 14373 ;;                  1    wreg      void 
 14374 ;; Registers used:
 14375 ;;		wreg
 14376 ;; Tracked objects:
 14377 ;;		On entry : 0/0
 14378 ;;		On exit  : 0/0
 14379 ;;		Unchanged: 0/0
 14380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14384 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14385 ;;Total ram usage:        1 bytes
 14386 ;; Hardware stack levels used: 1
 14387 ;; This function calls:
 14388 ;;		Nothing
 14389 ;; This function is called by:
 14390 ;;		_I2C1_EVENT_SEND_RD_ADDR
 14391 ;;		_I2C1_EVENT_SEND_WR_ADDR
 14392 ;;		_I2C1_EVENT_TX
 14393 ;; This function uses a non-reentrant model
 14394 ;;
 14395                           
 14396     1B69                     _I2C1_DataTransmit:	
 14397                           ;psect for function _I2C1_DataTransmit
 14398                           
 14399                           
 14400                           ;incstack = 0
 14401                           ; Regs used in _I2C1_DataTransmit: [wreg]
 14402                           ;I2C1_DataTransmit@data stored from wreg
 14403     1B69  00F0               	movwf	I2C1_DataTransmit@data
 14404     1B6A                     i1l5339:
 14405                           
 14406                           ;mcc_generated_files/i2c_host/src/mssp.c: 399: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/mssp.c: 400: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 401:     SSP1BUF = data;
 14407     1B6A  0870               	movf	I2C1_DataTransmit@data,w
 14408     1B6B  0024               	movlb	4	; select bank4
 14409     1B6C  0091               	movwf	17	;volatile
 14410     1B6D                     i1l253:
 14411     1B6D  0008               	return
 14412     1B6E                     __end_of_I2C1_DataTransmit:
 14413                           
 14414                           	psect	text63
 14415     1B35                     __ptext63:	
 14416 ;; *************** function _I2C1_RestartDisable *****************
 14417 ;; Defined at:
 14418 ;;		line 420 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14419 ;; Parameters:    Size  Location     Type
 14420 ;;		None
 14421 ;; Auto vars:     Size  Location     Type
 14422 ;;		None
 14423 ;; Return value:  Size  Location     Type
 14424 ;;                  1    wreg      void 
 14425 ;; Registers used:
 14426 ;;		None
 14427 ;; Tracked objects:
 14428 ;;		On entry : 0/0
 14429 ;;		On exit  : 0/0
 14430 ;;		Unchanged: 0/0
 14431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14436 ;;Total ram usage:        0 bytes
 14437 ;; Hardware stack levels used: 1
 14438 ;; This function calls:
 14439 ;;		Nothing
 14440 ;; This function is called by:
 14441 ;;		_I2C1_EVENT_RX
 14442 ;; This function uses a non-reentrant model
 14443 ;;
 14444                           
 14445     1B35                     _I2C1_RestartDisable:	
 14446                           ;psect for function _I2C1_RestartDisable
 14447                           
 14448     1B35                     i1l5359:	
 14449                           ;incstack = 0
 14450                           ; Regs used in _I2C1_RestartDisable: []
 14451                           
 14452                           
 14453                           ;mcc_generated_files/i2c_host/src/mssp.c: 422:     SSP1CON2bits.RSEN = 0;
 14454     1B35  0024               	movlb	4	; select bank4
 14455     1B36  1096               	bcf	22,1	;volatile
 14456     1B37                     i1l265:
 14457     1B37  0008               	return
 14458     1B38                     __end_of_I2C1_RestartDisable:
 14459                           
 14460                           	psect	text64
 14461     1B32                     __ptext64:	
 14462 ;; *************** function _I2C1_ReceiveEnable *****************
 14463 ;; Defined at:
 14464 ;;		line 410 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14465 ;; Parameters:    Size  Location     Type
 14466 ;;		None
 14467 ;; Auto vars:     Size  Location     Type
 14468 ;;		None
 14469 ;; Return value:  Size  Location     Type
 14470 ;;                  1    wreg      void 
 14471 ;; Registers used:
 14472 ;;		None
 14473 ;; Tracked objects:
 14474 ;;		On entry : 0/0
 14475 ;;		On exit  : 0/0
 14476 ;;		Unchanged: 0/0
 14477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14482 ;;Total ram usage:        0 bytes
 14483 ;; Hardware stack levels used: 1
 14484 ;; This function calls:
 14485 ;;		Nothing
 14486 ;; This function is called by:
 14487 ;;		_I2C1_EVENT_RX
 14488 ;; This function uses a non-reentrant model
 14489 ;;
 14490                           
 14491     1B32                     _I2C1_ReceiveEnable:	
 14492                           ;psect for function _I2C1_ReceiveEnable
 14493                           
 14494     1B32                     i1l5363:	
 14495                           ;incstack = 0
 14496                           ; Regs used in _I2C1_ReceiveEnable: []
 14497                           
 14498                           
 14499                           ;mcc_generated_files/i2c_host/src/mssp.c: 412:     SSP1CON2bits.RCEN = 1;
 14500     1B32  0024               	movlb	4	; select bank4
 14501     1B33  1596               	bsf	22,3	;volatile
 14502     1B34                     i1l259:
 14503     1B34  0008               	return
 14504     1B35                     __end_of_I2C1_ReceiveEnable:
 14505                           
 14506                           	psect	text65
 14507     1B55                     __ptext65:	
 14508 ;; *************** function _I2C1_NackSend *****************
 14509 ;; Defined at:
 14510 ;;		line 441 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14511 ;; Parameters:    Size  Location     Type
 14512 ;;		None
 14513 ;; Auto vars:     Size  Location     Type
 14514 ;;		None
 14515 ;; Return value:  Size  Location     Type
 14516 ;;                  1    wreg      void 
 14517 ;; Registers used:
 14518 ;;		None
 14519 ;; Tracked objects:
 14520 ;;		On entry : 0/0
 14521 ;;		On exit  : 0/0
 14522 ;;		Unchanged: 0/0
 14523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14528 ;;Total ram usage:        0 bytes
 14529 ;; Hardware stack levels used: 1
 14530 ;; This function calls:
 14531 ;;		Nothing
 14532 ;; This function is called by:
 14533 ;;		_I2C1_EVENT_RX
 14534 ;; This function uses a non-reentrant model
 14535 ;;
 14536                           
 14537     1B55                     _I2C1_NackSend:	
 14538                           ;psect for function _I2C1_NackSend
 14539                           
 14540     1B55                     i1l5361:	
 14541                           ;incstack = 0
 14542                           ; Regs used in _I2C1_NackSend: []
 14543                           
 14544                           
 14545                           ;mcc_generated_files/i2c_host/src/mssp.c: 443:     SSP1CON2bits.ACKDT = 1;
 14546     1B55  0024               	movlb	4	; select bank4
 14547     1B56  1696               	bsf	22,5	;volatile
 14548                           
 14549                           ;mcc_generated_files/i2c_host/src/mssp.c: 444:     SSP1CON2bits.ACKEN = 1;
 14550     1B57  1616               	bsf	22,4	;volatile
 14551     1B58                     i1l277:
 14552     1B58  0008               	return
 14553     1B59                     __end_of_I2C1_NackSend:
 14554                           
 14555                           	psect	text66
 14556     1B51                     __ptext66:	
 14557 ;; *************** function _I2C1_IsRxBufFull *****************
 14558 ;; Defined at:
 14559 ;;		line 462 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14560 ;; Parameters:    Size  Location     Type
 14561 ;;		None
 14562 ;; Auto vars:     Size  Location     Type
 14563 ;;		None
 14564 ;; Return value:  Size  Location     Type
 14565 ;;                  1    wreg      _Bool 
 14566 ;; Registers used:
 14567 ;;		wreg, status,2, status,0
 14568 ;; Tracked objects:
 14569 ;;		On entry : 0/0
 14570 ;;		On exit  : 0/0
 14571 ;;		Unchanged: 0/0
 14572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14577 ;;Total ram usage:        0 bytes
 14578 ;; Hardware stack levels used: 1
 14579 ;; This function calls:
 14580 ;;		Nothing
 14581 ;; This function is called by:
 14582 ;;		_I2C1_EVENT_RX
 14583 ;; This function uses a non-reentrant model
 14584 ;;
 14585                           
 14586     1B51                     _I2C1_IsRxBufFull:	
 14587                           ;psect for function _I2C1_IsRxBufFull
 14588                           
 14589     1B51                     i1l5349:	
 14590                           ;incstack = 0
 14591                           ; Regs used in _I2C1_IsRxBufFull: [wreg+status,2+status,0]
 14592                           
 14593                           
 14594                           ;mcc_generated_files/i2c_host/src/mssp.c: 464:     return SSP1STATbits.BF;
 14595     1B51  0024               	movlb	4	; select bank4
 14596     1B52  0814               	movf	20,w	;volatile
 14597     1B53  3901               	andlw	1
 14598     1B54                     i1l289:
 14599     1B54  0008               	return
 14600     1B55                     __end_of_I2C1_IsRxBufFull:
 14601                           
 14602                           	psect	text67
 14603     1B2F                     __ptext67:	
 14604 ;; *************** function _I2C1_DataReceive *****************
 14605 ;; Defined at:
 14606 ;;		line 394 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14607 ;; Parameters:    Size  Location     Type
 14608 ;;		None
 14609 ;; Auto vars:     Size  Location     Type
 14610 ;;		None
 14611 ;; Return value:  Size  Location     Type
 14612 ;;                  1    wreg      unsigned char 
 14613 ;; Registers used:
 14614 ;;		wreg
 14615 ;; Tracked objects:
 14616 ;;		On entry : 0/0
 14617 ;;		On exit  : 0/0
 14618 ;;		Unchanged: 0/0
 14619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14624 ;;Total ram usage:        0 bytes
 14625 ;; Hardware stack levels used: 1
 14626 ;; This function calls:
 14627 ;;		Nothing
 14628 ;; This function is called by:
 14629 ;;		_I2C1_EVENT_RX
 14630 ;; This function uses a non-reentrant model
 14631 ;;
 14632                           
 14633     1B2F                     _I2C1_DataReceive:	
 14634                           ;psect for function _I2C1_DataReceive
 14635                           
 14636     1B2F                     i1l5353:	
 14637                           ;incstack = 0
 14638                           ; Regs used in _I2C1_DataReceive: [wreg]
 14639                           
 14640                           
 14641                           ;mcc_generated_files/i2c_host/src/mssp.c: 396:     return SSP1BUF;
 14642     1B2F  0024               	movlb	4	; select bank4
 14643     1B30  0811               	movf	17,w	;volatile
 14644     1B31                     i1l250:
 14645     1B31  0008               	return
 14646     1B32                     __end_of_I2C1_DataReceive:
 14647                           
 14648                           	psect	text68
 14649     1B4D                     __ptext68:	
 14650 ;; *************** function _I2C1_AckSend *****************
 14651 ;; Defined at:
 14652 ;;		line 435 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14653 ;; Parameters:    Size  Location     Type
 14654 ;;		None
 14655 ;; Auto vars:     Size  Location     Type
 14656 ;;		None
 14657 ;; Return value:  Size  Location     Type
 14658 ;;                  1    wreg      void 
 14659 ;; Registers used:
 14660 ;;		None
 14661 ;; Tracked objects:
 14662 ;;		On entry : 0/0
 14663 ;;		On exit  : 0/0
 14664 ;;		Unchanged: 0/0
 14665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;Total ram usage:        0 bytes
 14671 ;; Hardware stack levels used: 1
 14672 ;; This function calls:
 14673 ;;		Nothing
 14674 ;; This function is called by:
 14675 ;;		_I2C1_EVENT_RX
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679     1B4D                     _I2C1_AckSend:	
 14680                           ;psect for function _I2C1_AckSend
 14681                           
 14682     1B4D                     i1l5357:	
 14683                           ;incstack = 0
 14684                           ; Regs used in _I2C1_AckSend: []
 14685                           
 14686                           
 14687                           ;mcc_generated_files/i2c_host/src/mssp.c: 437:     SSP1CON2bits.ACKDT = 0;
 14688     1B4D  0024               	movlb	4	; select bank4
 14689     1B4E  1296               	bcf	22,5	;volatile
 14690                           
 14691                           ;mcc_generated_files/i2c_host/src/mssp.c: 438:     SSP1CON2bits.ACKEN = 1;
 14692     1B4F  1616               	bsf	22,4	;volatile
 14693     1B50                     i1l274:
 14694     1B50  0008               	return
 14695     1B51                     __end_of_I2C1_AckSend:
 14696                           
 14697                           	psect	text69
 14698     1B2C                     __ptext69:	
 14699 ;; *************** function _I2C1_StopSend *****************
 14700 ;; Defined at:
 14701 ;;		line 430 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14702 ;; Parameters:    Size  Location     Type
 14703 ;;		None
 14704 ;; Auto vars:     Size  Location     Type
 14705 ;;		None
 14706 ;; Return value:  Size  Location     Type
 14707 ;;                  1    wreg      void 
 14708 ;; Registers used:
 14709 ;;		None
 14710 ;; Tracked objects:
 14711 ;;		On entry : 0/0
 14712 ;;		On exit  : 0/0
 14713 ;;		Unchanged: 0/0
 14714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14719 ;;Total ram usage:        0 bytes
 14720 ;; Hardware stack levels used: 1
 14721 ;; This function calls:
 14722 ;;		Nothing
 14723 ;; This function is called by:
 14724 ;;		_I2C1_EVENT_STOP
 14725 ;; This function uses a non-reentrant model
 14726 ;;
 14727                           
 14728     1B2C                     _I2C1_StopSend:	
 14729                           ;psect for function _I2C1_StopSend
 14730                           
 14731     1B2C                     i1l5287:	
 14732                           ;incstack = 0
 14733                           ; Regs used in _I2C1_StopSend: []
 14734                           
 14735                           
 14736                           ;mcc_generated_files/i2c_host/src/mssp.c: 432:     SSP1CON2bits.PEN = 1;
 14737     1B2C  0024               	movlb	4	; select bank4
 14738     1B2D  1516               	bsf	22,2	;volatile
 14739     1B2E                     i1l271:
 14740     1B2E  0008               	return
 14741     1B2F                     __end_of_I2C1_StopSend:
 14742                           
 14743                           	psect	text70
 14744     1D2C                     __ptext70:	
 14745 ;; *************** function _I2C1_Close *****************
 14746 ;; Defined at:
 14747 ;;		line 244 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14748 ;; Parameters:    Size  Location     Type
 14749 ;;		None
 14750 ;; Auto vars:     Size  Location     Type
 14751 ;;		None
 14752 ;; Return value:  Size  Location     Type
 14753 ;;                  1    wreg      void 
 14754 ;; Registers used:
 14755 ;;		status,2, status,0, pclath, cstack
 14756 ;; Tracked objects:
 14757 ;;		On entry : 0/0
 14758 ;;		On exit  : 0/0
 14759 ;;		Unchanged: 0/0
 14760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14765 ;;Total ram usage:        0 bytes
 14766 ;; Hardware stack levels used: 1
 14767 ;; Hardware stack levels required when called: 1
 14768 ;; This function calls:
 14769 ;;		_I2C1_ErrorInterruptClear
 14770 ;;		_I2C1_InterruptClear
 14771 ;;		_I2C1_StatusFlagsClear
 14772 ;; This function is called by:
 14773 ;;		_I2C1_EVENT_STOP
 14774 ;; This function uses a non-reentrant model
 14775 ;;
 14776                           
 14777     1D2C                     _I2C1_Close:	
 14778                           ;psect for function _I2C1_Close
 14779                           
 14780     1D2C                     i1l5277:	
 14781                           ;incstack = 0
 14782                           ; Regs used in _I2C1_Close: [status,2+status,0+pclath+cstack]
 14783                           
 14784                           
 14785                           ;mcc_generated_files/i2c_host/src/mssp.c: 246:     i2c1Status.busy = 0;
 14786     1D2C  0022               	movlb	2	; select bank2
 14787     1D2D  01C7               	clrf	_i2c1Status^(0+256)	;volatile
 14788     1D2E                     i1l5279:
 14789                           
 14790                           ;mcc_generated_files/i2c_host/src/mssp.c: 247:     i2c1Status.address = 0xFF;
 14791     1D2E  3000               	movlw	0
 14792     1D2F  00C9               	movwf	((_i2c1Status+1)^(0+256)+1)	;volatile
 14793     1D30  30FF               	movlw	255
 14794     1D31  00C8               	movwf	(_i2c1Status^(0+256)+1)	;volatile
 14795                           
 14796                           ;mcc_generated_files/i2c_host/src/mssp.c: 248:     i2c1Status.writePtr = ((void*)0);
 14797     1D32  01CA               	clrf	(low ((_i2c1Status| (0+256)+3)))^0	;volatile
 14798     1D33  01CB               	clrf	((low ((_i2c1Status| (0+256)+3))+1))^0	;volatile
 14799                           
 14800                           ;mcc_generated_files/i2c_host/src/mssp.c: 249:     i2c1Status.readPtr = ((void*)0);
 14801     1D34  01CE               	clrf	(low ((_i2c1Status| (0+256)+7)))^0	;volatile
 14802     1D35  01CF               	clrf	((low ((_i2c1Status| (0+256)+7))+1))^0	;volatile
 14803                           
 14804                           ;mcc_generated_files/i2c_host/src/mssp.c: 250:     i2c1Status.state = I2C_STATE_IDLE;
 14805     1D36  01D4               	clrf	(_i2c1Status^(0+256)+13)	;volatile
 14806     1D37                     i1l5281:
 14807                           
 14808                           ;mcc_generated_files/i2c_host/src/mssp.c: 251:     I2C1_InterruptClear();
 14809     1D37  319B  2329  319D   	fcall	_I2C1_InterruptClear
 14810     1D3A                     i1l5283:
 14811                           
 14812                           ;mcc_generated_files/i2c_host/src/mssp.c: 252:     I2C1_ErrorInterruptClear();
 14813     1D3A  319B  2326  319D   	fcall	_I2C1_ErrorInterruptClear
 14814     1D3D                     i1l5285:
 14815                           
 14816                           ;mcc_generated_files/i2c_host/src/mssp.c: 253:     I2C1_StatusFlagsClear();
 14817     1D3D  319B  2349  319D   	fcall	_I2C1_StatusFlagsClear
 14818     1D40                     i1l199:
 14819     1D40  0008               	return
 14820     1D41                     __end_of_I2C1_Close:
 14821                           
 14822                           	psect	text71
 14823     1B49                     __ptext71:	
 14824 ;; *************** function _I2C1_StatusFlagsClear *****************
 14825 ;; Defined at:
 14826 ;;		line 489 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14827 ;; Parameters:    Size  Location     Type
 14828 ;;		None
 14829 ;; Auto vars:     Size  Location     Type
 14830 ;;		None
 14831 ;; Return value:  Size  Location     Type
 14832 ;;                  1    wreg      void 
 14833 ;; Registers used:
 14834 ;;		None
 14835 ;; Tracked objects:
 14836 ;;		On entry : 0/0
 14837 ;;		On exit  : 0/0
 14838 ;;		Unchanged: 0/0
 14839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14844 ;;Total ram usage:        0 bytes
 14845 ;; Hardware stack levels used: 1
 14846 ;; This function calls:
 14847 ;;		Nothing
 14848 ;; This function is called by:
 14849 ;;		_I2C1_Close
 14850 ;; This function uses a non-reentrant model
 14851 ;;
 14852                           
 14853     1B49                     _I2C1_StatusFlagsClear:	
 14854                           ;psect for function _I2C1_StatusFlagsClear
 14855                           
 14856     1B49                     i1l5169:	
 14857                           ;incstack = 0
 14858                           ; Regs used in _I2C1_StatusFlagsClear: []
 14859                           
 14860                           
 14861                           ;mcc_generated_files/i2c_host/src/mssp.c: 491:     SSP1CON1bits.WCOL = 0;
 14862     1B49  0024               	movlb	4	; select bank4
 14863     1B4A  1395               	bcf	21,7	;volatile
 14864                           
 14865                           ;mcc_generated_files/i2c_host/src/mssp.c: 492:     SSP1CON1bits.SSPOV = 0;
 14866     1B4B  1315               	bcf	21,6	;volatile
 14867     1B4C                     i1l304:
 14868     1B4C  0008               	return
 14869     1B4D                     __end_of_I2C1_StatusFlagsClear:
 14870                           
 14871                           	psect	text72
 14872     1B29                     __ptext72:	
 14873 ;; *************** function _I2C1_InterruptClear *****************
 14874 ;; Defined at:
 14875 ;;		line 479 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14876 ;; Parameters:    Size  Location     Type
 14877 ;;		None
 14878 ;; Auto vars:     Size  Location     Type
 14879 ;;		None
 14880 ;; Return value:  Size  Location     Type
 14881 ;;                  1    wreg      void 
 14882 ;; Registers used:
 14883 ;;		None
 14884 ;; Tracked objects:
 14885 ;;		On entry : 0/0
 14886 ;;		On exit  : 0/0
 14887 ;;		Unchanged: 0/0
 14888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14893 ;;Total ram usage:        0 bytes
 14894 ;; Hardware stack levels used: 1
 14895 ;; This function calls:
 14896 ;;		Nothing
 14897 ;; This function is called by:
 14898 ;;		_I2C1_Close
 14899 ;;		_I2C1_EventHandler
 14900 ;; This function uses a non-reentrant model
 14901 ;;
 14902                           
 14903     1B29                     _I2C1_InterruptClear:	
 14904                           ;psect for function _I2C1_InterruptClear
 14905                           
 14906     1B29                     i1l5165:	
 14907                           ;incstack = 0
 14908                           ; Regs used in _I2C1_InterruptClear: []
 14909                           
 14910                           
 14911                           ;mcc_generated_files/i2c_host/src/mssp.c: 481:     PIR1bits.SSP1IF = 0;
 14912     1B29  0020               	movlb	0	; select bank0
 14913     1B2A  1190               	bcf	16,3	;volatile
 14914     1B2B                     i1l298:
 14915     1B2B  0008               	return
 14916     1B2C                     __end_of_I2C1_InterruptClear:
 14917                           
 14918                           	psect	text73
 14919     1B26                     __ptext73:	
 14920 ;; *************** function _I2C1_ErrorInterruptClear *****************
 14921 ;; Defined at:
 14922 ;;		line 484 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14923 ;; Parameters:    Size  Location     Type
 14924 ;;		None
 14925 ;; Auto vars:     Size  Location     Type
 14926 ;;		None
 14927 ;; Return value:  Size  Location     Type
 14928 ;;                  1    wreg      void 
 14929 ;; Registers used:
 14930 ;;		None
 14931 ;; Tracked objects:
 14932 ;;		On entry : 0/0
 14933 ;;		On exit  : 0/0
 14934 ;;		Unchanged: 0/0
 14935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14940 ;;Total ram usage:        0 bytes
 14941 ;; Hardware stack levels used: 1
 14942 ;; This function calls:
 14943 ;;		Nothing
 14944 ;; This function is called by:
 14945 ;;		_I2C1_Close
 14946 ;;		_I2C1_ErrorEventHandler
 14947 ;; This function uses a non-reentrant model
 14948 ;;
 14949                           
 14950     1B26                     _I2C1_ErrorInterruptClear:	
 14951                           ;psect for function _I2C1_ErrorInterruptClear
 14952                           
 14953     1B26                     i1l5167:	
 14954                           ;incstack = 0
 14955                           ; Regs used in _I2C1_ErrorInterruptClear: []
 14956                           
 14957                           
 14958                           ;mcc_generated_files/i2c_host/src/mssp.c: 486:     PIR2bits.BCL1IF = 0;
 14959     1B26  0020               	movlb	0	; select bank0
 14960     1B27  1191               	bcf	17,3	;volatile
 14961     1B28                     i1l301:
 14962     1B28  0008               	return
 14963     1B29                     __end_of_I2C1_ErrorInterruptClear:
 14964                           
 14965                           	psect	text74
 14966     1B45                     __ptext74:	
 14967 ;; *************** function _I2C1_BusReset *****************
 14968 ;; Defined at:
 14969 ;;		line 404 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14970 ;; Parameters:    Size  Location     Type
 14971 ;;		None
 14972 ;; Auto vars:     Size  Location     Type
 14973 ;;		None
 14974 ;; Return value:  Size  Location     Type
 14975 ;;                  1    wreg      void 
 14976 ;; Registers used:
 14977 ;;		None
 14978 ;; Tracked objects:
 14979 ;;		On entry : 0/0
 14980 ;;		On exit  : 0/0
 14981 ;;		Unchanged: 0/0
 14982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14987 ;;Total ram usage:        0 bytes
 14988 ;; Hardware stack levels used: 1
 14989 ;; This function calls:
 14990 ;;		Nothing
 14991 ;; This function is called by:
 14992 ;;		_I2C1_EVENT_RESET
 14993 ;; This function uses a non-reentrant model
 14994 ;;
 14995                           
 14996     1B45                     _I2C1_BusReset:	
 14997                           ;psect for function _I2C1_BusReset
 14998                           
 14999     1B45                     i1l5289:	
 15000                           ;incstack = 0
 15001                           ; Regs used in _I2C1_BusReset: []
 15002                           
 15003                           
 15004                           ;mcc_generated_files/i2c_host/src/mssp.c: 406:     SSP1CON1bits.SSPEN = 0;
 15005     1B45  0024               	movlb	4	; select bank4
 15006     1B46  1295               	bcf	21,5	;volatile
 15007                           
 15008                           ;mcc_generated_files/i2c_host/src/mssp.c: 407:     SSP1CON1bits.SSPEN = 1;
 15009     1B47  1695               	bsf	21,5	;volatile
 15010     1B48                     i1l256:
 15011     1B48  0008               	return
 15012     1B49                     __end_of_I2C1_BusReset:
 15013                           
 15014                           	psect	text75
 15015     1B24                     __ptext75:	
 15016 ;; *************** function _I2C1_DefaultCallback *****************
 15017 ;; Defined at:
 15018 ;;		line 281 in file "mcc_generated_files/i2c_host/src/mssp.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;		None
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      void 
 15025 ;; Registers used:
 15026 ;;		None
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15036 ;;Total ram usage:        0 bytes
 15037 ;; Hardware stack levels used: 1
 15038 ;; This function calls:
 15039 ;;		Nothing
 15040 ;; This function is called by:
 15041 ;;		_I2C1_Initialize
 15042 ;;		_I2C1_Deinitialize
 15043 ;;		_I2C1_ErrorEventHandler
 15044 ;; This function uses a non-reentrant model
 15045 ;;
 15046                           
 15047     1B24                     _I2C1_DefaultCallback:	
 15048                           ;psect for function _I2C1_DefaultCallback
 15049                           
 15050     1B24                     i1l211:	
 15051                           ;incstack = 0
 15052                           ; Regs used in _I2C1_DefaultCallback: []
 15053                           
 15054     1B24  0008               	return
 15055     1B25                     __end_of_I2C1_DefaultCallback:
 15056                           
 15057                           	psect	text76
 15058     130D                     __ptext76:	
 15059 ;; *************** function _EUSART_ReceiveISR *****************
 15060 ;; Defined at:
 15061 ;;		line 269 in file "mcc_generated_files/uart/src/eusart.c"
 15062 ;; Parameters:    Size  Location     Type
 15063 ;;		None
 15064 ;; Auto vars:     Size  Location     Type
 15065 ;;  tempRxHead      1   37[BANK2 ] unsigned char 
 15066 ;;  regValue        1   36[BANK2 ] unsigned char 
 15067 ;; Return value:  Size  Location     Type
 15068 ;;                  1    wreg      void 
 15069 ;; Registers used:
 15070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15071 ;; Tracked objects:
 15072 ;;		On entry : 0/0
 15073 ;;		On exit  : 0/0
 15074 ;;		Unchanged: 0/0
 15075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15077 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 15078 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 15079 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 15080 ;;Total ram usage:        6 bytes
 15081 ;; Hardware stack levels used: 1
 15082 ;; Hardware stack levels required when called: 9
 15083 ;; This function calls:
 15084 ;;		NULL
 15085 ;;		_EUSART_DefaultFramingErrorCallback
 15086 ;;		_EUSART_DefaultOverrunErrorCallback
 15087 ;;		_UART_Custom_ISR
 15088 ;; This function is called by:
 15089 ;;		_EUSART_Initialize
 15090 ;;		_INTERRUPT_InterruptManager
 15091 ;; This function uses a non-reentrant model
 15092 ;;
 15093                           
 15094     130D                     _EUSART_ReceiveISR:	
 15095                           ;psect for function _EUSART_ReceiveISR
 15096                           
 15097     130D                     i1l5935:	
 15098                           ;incstack = 0
 15099 ;; hardware stack exceeded
 15100                           ; Regs used in _EUSART_ReceiveISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15101                           
 15102                           
 15103                           ;mcc_generated_files/uart/src/eusart.c: 271:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 272:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 274: 
      +                              PIR1bits.RCIF = 0;
 15104     130D  0020               	movlb	0	; select bank0
 15105     130E  1290               	bcf	16,5	;volatile
 15106     130F                     i1l5937:
 15107                           
 15108                           ;mcc_generated_files/uart/src/eusart.c: 277:     eusartRxStatusBuffer[eusartRxHead].stat
      +                          us = 0;
 15109     130F  0022               	movlb	2	; select bank2
 15110     1310  086A               	movf	_eusartRxHead^(0+256),w	;volatile
 15111     1311  00C0               	movwf	??_EUSART_ReceiveISR^(0+256)
 15112     1312  01C1               	clrf	(??_EUSART_ReceiveISR^(0+256)+1)
 15113     1313  35C0               	lslf	??_EUSART_ReceiveISR^(0+256),f
 15114     1314  0DC1               	rlf	(??_EUSART_ReceiveISR^(0+256)+1),f
 15115     1315  3070               	movlw	112
 15116     1316  00C2               	movwf	(??_EUSART_ReceiveISR+2)^(0+256)
 15117     1317  3023               	movlw	35
 15118     1318  00C3               	movwf	((??_EUSART_ReceiveISR+2)^(0+256)+1)
 15119     1319  0840               	movf	??_EUSART_ReceiveISR^(0+256),w
 15120     131A  0742               	addwf	(??_EUSART_ReceiveISR+2)^(0+256),w
 15121     131B  0086               	movwf	6
 15122     131C  0841               	movf	(??_EUSART_ReceiveISR+1)^(0+256),w
 15123     131D  3D43               	addwfc	(??_EUSART_ReceiveISR+3)^(0+256),w
 15124     131E  0087               	movwf	7
 15125     131F  3000               	movlw	0
 15126     1320  3FC0               	movwi [0]fsr1
 15127     1321  3FC1               	movwi [1]fsr1
 15128     1322                     i1l5939:
 15129                           
 15130                           ;mcc_generated_files/uart/src/eusart.c: 279:     if(RC1STAbits.OERR)
 15131     1322  0023               	movlb	3	; select bank3
 15132     1323  1C9D               	btfss	29,1	;volatile
 15133     1324  2B26               	goto	u525_21
 15134     1325  2B27               	goto	u525_20
 15135     1326                     u525_21:
 15136     1326  2B43               	goto	i1l5947
 15137     1327                     u525_20:
 15138     1327                     i1l5941:
 15139                           
 15140                           ;mcc_generated_files/uart/src/eusart.c: 280:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 281:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 15141     1327  0022               	movlb	2	; select bank2
 15142     1328  086A               	movf	_eusartRxHead^(0+256),w	;volatile
 15143     1329  00C0               	movwf	??_EUSART_ReceiveISR^(0+256)
 15144     132A  01C1               	clrf	(??_EUSART_ReceiveISR^(0+256)+1)
 15145     132B  35C0               	lslf	??_EUSART_ReceiveISR^(0+256),f
 15146     132C  0DC1               	rlf	(??_EUSART_ReceiveISR^(0+256)+1),f
 15147     132D  3070               	movlw	112
 15148     132E  00C2               	movwf	(??_EUSART_ReceiveISR+2)^(0+256)
 15149     132F  3023               	movlw	35
 15150     1330  00C3               	movwf	((??_EUSART_ReceiveISR+2)^(0+256)+1)
 15151     1331  0840               	movf	??_EUSART_ReceiveISR^(0+256),w
 15152     1332  0742               	addwf	(??_EUSART_ReceiveISR+2)^(0+256),w
 15153     1333  0086               	movwf	6
 15154     1334  0841               	movf	(??_EUSART_ReceiveISR+1)^(0+256),w
 15155     1335  3D43               	addwfc	(??_EUSART_ReceiveISR+3)^(0+256),w
 15156     1336  0087               	movwf	7
 15157     1337  1501               	bsf	1,2
 15158     1338                     i1l5943:
 15159                           
 15160                           ;mcc_generated_files/uart/src/eusart.c: 282:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 15161     1338  0859               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 15162     1339  045A               	iorwf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 15163     133A  1903               	btfsc	3,2
 15164     133B  2B3D               	goto	u526_21
 15165     133C  2B3E               	goto	u526_20
 15166     133D                     u526_21:
 15167     133D  2B43               	goto	i1l5947
 15168     133E                     u526_20:
 15169     133E                     i1l5945:
 15170                           
 15171                           ;mcc_generated_files/uart/src/eusart.c: 283:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 284:             EUSART_OverrunErrorHandler();
 15172     133E  085A               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 15173     133F  008A               	movwf	10
 15174     1340  0859               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 15175     1341  000A               	callw
 15176     1342  3193               	pagesel	$
 15177     1343                     i1l5947:
 15178                           
 15179                           ;mcc_generated_files/uart/src/eusart.c: 287:     if(RC1STAbits.FERR)
 15180     1343  0023               	movlb	3	; select bank3
 15181     1344  1D1D               	btfss	29,2	;volatile
 15182     1345  2B47               	goto	u527_21
 15183     1346  2B48               	goto	u527_20
 15184     1347                     u527_21:
 15185     1347  2B64               	goto	i1l5955
 15186     1348                     u527_20:
 15187     1348                     i1l5949:
 15188                           
 15189                           ;mcc_generated_files/uart/src/eusart.c: 288:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 289:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 15190     1348  0022               	movlb	2	; select bank2
 15191     1349  086A               	movf	_eusartRxHead^(0+256),w	;volatile
 15192     134A  00C0               	movwf	??_EUSART_ReceiveISR^(0+256)
 15193     134B  01C1               	clrf	(??_EUSART_ReceiveISR^(0+256)+1)
 15194     134C  35C0               	lslf	??_EUSART_ReceiveISR^(0+256),f
 15195     134D  0DC1               	rlf	(??_EUSART_ReceiveISR^(0+256)+1),f
 15196     134E  3070               	movlw	112
 15197     134F  00C2               	movwf	(??_EUSART_ReceiveISR+2)^(0+256)
 15198     1350  3023               	movlw	35
 15199     1351  00C3               	movwf	((??_EUSART_ReceiveISR+2)^(0+256)+1)
 15200     1352  0840               	movf	??_EUSART_ReceiveISR^(0+256),w
 15201     1353  0742               	addwf	(??_EUSART_ReceiveISR+2)^(0+256),w
 15202     1354  0086               	movwf	6
 15203     1355  0841               	movf	(??_EUSART_ReceiveISR+1)^(0+256),w
 15204     1356  3D43               	addwfc	(??_EUSART_ReceiveISR+3)^(0+256),w
 15205     1357  0087               	movwf	7
 15206     1358  1481               	bsf	1,1
 15207     1359                     i1l5951:
 15208                           
 15209                           ;mcc_generated_files/uart/src/eusart.c: 290:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 15210     1359  085B               	movf	_EUSART_FramingErrorHandler^(0+256),w
 15211     135A  045C               	iorwf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 15212     135B  1903               	btfsc	3,2
 15213     135C  2B5E               	goto	u528_21
 15214     135D  2B5F               	goto	u528_20
 15215     135E                     u528_21:
 15216     135E  2B64               	goto	i1l5955
 15217     135F                     u528_20:
 15218     135F                     i1l5953:
 15219                           
 15220                           ;mcc_generated_files/uart/src/eusart.c: 291:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 292:             EUSART_FramingErrorHandler();
 15221     135F  085C               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 15222     1360  008A               	movwf	10
 15223     1361  085B               	movf	_EUSART_FramingErrorHandler^(0+256),w
 15224     1362  000A               	callw
 15225     1363  3193               	pagesel	$
 15226     1364                     i1l5955:
 15227                           
 15228                           ;mcc_generated_files/uart/src/eusart.c: 296:     regValue = RC1REG;
 15229     1364  0023               	movlb	3	; select bank3
 15230     1365  0819               	movf	25,w	;volatile
 15231     1366  0022               	movlb	2	; select bank2
 15232     1367  00C4               	movwf	EUSART_ReceiveISR@regValue^(0+256)
 15233     1368                     i1l5957:
 15234                           
 15235                           ;mcc_generated_files/uart/src/eusart.c: 298:     tempRxHead = (eusartRxHead + 1) & ((64)
      +                          -1);
 15236     1368  086A               	movf	_eusartRxHead^(0+256),w	;volatile
 15237     1369  3E01               	addlw	1
 15238     136A  393F               	andlw	63
 15239     136B  00C5               	movwf	EUSART_ReceiveISR@tempRxHead^(0+256)
 15240     136C                     i1l5959:
 15241                           
 15242                           ;mcc_generated_files/uart/src/eusart.c: 299:     if (tempRxHead == eusartRxTail)
 15243     136C  0845               	movf	EUSART_ReceiveISR@tempRxHead^(0+256),w
 15244     136D  0669               	xorwf	_eusartRxTail^(0+256),w	;volatile
 15245     136E  1D03               	skipz
 15246     136F  2B71               	goto	u529_21
 15247     1370  2B72               	goto	u529_20
 15248     1371                     u529_21:
 15249     1371  2B73               	goto	i1l5963
 15250     1372                     u529_20:
 15251     1372  2B80               	goto	i1l5969
 15252     1373                     i1l5963:
 15253                           
 15254                           ;mcc_generated_files/uart/src/eusart.c: 304:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 305:         eusartRxBuffer[eusartRxHead] = regValue;
 15255     1373  086A               	movf	_eusartRxHead^(0+256),w
 15256     1374  3EA0               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 15257     1375  0086               	movwf	6
 15258     1376  3002               	movlw	2	; select bank5/6
 15259     1377  0087               	movwf	7
 15260     1378  0844               	movf	EUSART_ReceiveISR@regValue^(0+256),w
 15261     1379  0081               	movwf	1
 15262     137A                     i1l5965:
 15263                           
 15264                           ;mcc_generated_files/uart/src/eusart.c: 306:   eusartRxHead = tempRxHead;
 15265     137A  0845               	movf	EUSART_ReceiveISR@tempRxHead^(0+256),w
 15266     137B  00EA               	movwf	_eusartRxHead^(0+256)	;volatile
 15267     137C                     i1l5967:
 15268                           
 15269                           ;mcc_generated_files/uart/src/eusart.c: 307:   eusartRxCount++;
 15270     137C  3001               	movlw	1
 15271     137D  00C0               	movwf	??_EUSART_ReceiveISR^(0+256)
 15272     137E  0840               	movf	??_EUSART_ReceiveISR^(0+256),w
 15273     137F  07E8               	addwf	_eusartRxCount^(0+256),f	;volatile
 15274     1380                     i1l5969:
 15275                           
 15276                           ;mcc_generated_files/uart/src/eusart.c: 310:     UART_Custom_ISR(regValue);
 15277     1380  0844               	movf	EUSART_ReceiveISR@regValue^(0+256),w
 15278     1381  3187  2794  3193   	fcall	_UART_Custom_ISR
 15279     1384                     i1l970:
 15280     1384  0008               	return
 15281     1385                     __end_of_EUSART_ReceiveISR:
 15282                           
 15283                           	psect	text77
 15284     0794                     __ptext77:	
 15285 ;; *************** function _UART_Custom_ISR *****************
 15286 ;; Defined at:
 15287 ;;		line 302 in file "main.c"
 15288 ;; Parameters:    Size  Location     Type
 15289 ;;  Rx_Code         1    wreg     unsigned char 
 15290 ;; Auto vars:     Size  Location     Type
 15291 ;;  Rx_Code         1   31[BANK2 ] unsigned char 
 15292 ;;  buffer         16   15[BANK2 ] unsigned char [16]
 15293 ;; Return value:  Size  Location     Type
 15294 ;;                  1    wreg      void 
 15295 ;; Registers used:
 15296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15297 ;; Tracked objects:
 15298 ;;		On entry : 0/0
 15299 ;;		On exit  : 0/0
 15300 ;;		Unchanged: 0/0
 15301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15303 ;;      Locals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0
 15304 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 15305 ;;      Totals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0
 15306 ;;Total ram usage:       19 bytes
 15307 ;; Hardware stack levels used: 1
 15308 ;; Hardware stack levels required when called: 8
 15309 ;; This function calls:
 15310 ;;		_Backlight
 15311 ;;		_LCD_Clear
 15312 ;;		_LCD_Set_Cursor
 15313 ;;		_LCD_Write_String
 15314 ;;		_sprintf
 15315 ;; This function is called by:
 15316 ;;		_EUSART_ReceiveISR
 15317 ;; This function uses a non-reentrant model
 15318 ;;
 15319                           
 15320     0794                     _UART_Custom_ISR:	
 15321                           ;psect for function _UART_Custom_ISR
 15322                           
 15323                           
 15324                           ;incstack = 0
 15325 ;; hardware stack exceeded
 15326                           ; Regs used in _UART_Custom_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15327                           ;UART_Custom_ISR@Rx_Code stored from wreg
 15328     0794  0022               	movlb	2	; select bank2
 15329     0795  00BF               	movwf	UART_Custom_ISR@Rx_Code^(0+256)
 15330     0796                     i1l5865:
 15331                           
 15332                           ;main.c: 302: void UART_Custom_ISR(uint8_t Rx_Code);main.c: 303: {;main.c: 304:     char
      +                           buffer[16];;main.c: 306:     LCD_Clear();
 15333     0796  319B  23E4  3187   	fcall	_LCD_Clear
 15334     0799                     i1l5867:
 15335                           
 15336                           ;main.c: 307:     LCD_Set_Cursor(1, 1);
 15337     0799  01F6               	clrf	LCD_Set_Cursor@COL
 15338     079A  0AF6               	incf	LCD_Set_Cursor@COL,f
 15339     079B  3001               	movlw	1
 15340     079C  319F  277E  3187   	fcall	_LCD_Set_Cursor
 15341     079F                     i1l5869:
 15342                           
 15343                           ;main.c: 308:     Backlight();
 15344     079F  319B  23C4  3187   	fcall	_Backlight
 15345                           
 15346                           ;main.c: 309:     LCD_Write_String(" UART ..");
 15347     07A2  30D7               	movlw	low (STR_1| (0+32768))
 15348     07A3  00F6               	movwf	LCD_Write_String@Str
 15349     07A4  3098               	movlw	high (STR_1| (0+32768))
 15350     07A5  00F7               	movwf	LCD_Write_String@Str+1
 15351     07A6  319E  2630  3187   	fcall	_LCD_Write_String
 15352                           
 15353                           ;main.c: 310:     LCD_Set_Cursor(2, 1);
 15354     07A9  01F6               	clrf	LCD_Set_Cursor@COL
 15355     07AA  0AF6               	incf	LCD_Set_Cursor@COL,f
 15356     07AB  3002               	movlw	2
 15357     07AC  319F  277E  3187   	fcall	_LCD_Set_Cursor
 15358                           
 15359                           ;main.c: 311:     LCD_Write_String(" .. Interrupt");
 15360     07AF  308F               	movlw	low (STR_2| (0+32768))
 15361     07B0  00F6               	movwf	LCD_Write_String@Str
 15362     07B1  3098               	movlw	high (STR_2| (0+32768))
 15363     07B2  00F7               	movwf	LCD_Write_String@Str+1
 15364     07B3  319E  2630  3187   	fcall	_LCD_Write_String
 15365     07B6                     i1l5871:
 15366                           
 15367                           ;main.c: 312:     _delay((unsigned long)((350)*(4000000/4000.0)));
 15368     07B6  3002               	movlw	2
 15369     07B7  0022               	movlb	2	; select bank2
 15370     07B8  00AE               	movwf	(??_UART_Custom_ISR^(0+256)+1)
 15371     07B9  30C7               	movlw	199
 15372     07BA  00AD               	movwf	??_UART_Custom_ISR^(0+256)
 15373     07BB  3088               	movlw	136
 15374     07BC                     u591_27:
 15375     07BC  0B89               	decfsz	9,f
 15376     07BD  2FBC               	goto	u591_27
 15377     07BE  0BAD               	decfsz	??_UART_Custom_ISR^(0+256),f
 15378     07BF  2FBC               	goto	u591_27
 15379     07C0  0BAE               	decfsz	(??_UART_Custom_ISR^(0+256)+1),f
 15380     07C1  2FBC               	goto	u591_27
 15381     07C2  0000               	nop
 15382     07C3                     i1l5873:
 15383                           
 15384                           ;main.c: 314:     LCD_Clear();
 15385     07C3  319B  23E4  3187   	fcall	_LCD_Clear
 15386     07C6                     i1l5875:
 15387                           
 15388                           ;main.c: 315:     LCD_Set_Cursor(1, 1);
 15389     07C6  01F6               	clrf	LCD_Set_Cursor@COL
 15390     07C7  0AF6               	incf	LCD_Set_Cursor@COL,f
 15391     07C8  3001               	movlw	1
 15392     07C9  319F  277E  3187   	fcall	_LCD_Set_Cursor
 15393     07CC                     i1l5877:
 15394                           
 15395                           ;main.c: 316:     sprintf(buffer, "Sent code: %hhx", Rx_Code);
 15396     07CC  303C               	movlw	low (STR_3| (0+32768))
 15397     07CD  0021               	movlb	1	; select bank1
 15398     07CE  00E9               	movwf	sprintf@fmt^(0+128)
 15399     07CF  3098               	movlw	high (STR_3| (0+32768))
 15400     07D0  00EA               	movwf	(sprintf@fmt^(0+128)+1)
 15401     07D1  0022               	movlb	2	; select bank2
 15402     07D2  083F               	movf	UART_Custom_ISR@Rx_Code^(0+256),w
 15403     07D3  00AD               	movwf	??_UART_Custom_ISR^(0+256)
 15404     07D4  01AE               	clrf	(??_UART_Custom_ISR^(0+256)+1)
 15405     07D5  082D               	movf	??_UART_Custom_ISR^(0+256),w
 15406     07D6  0021               	movlb	1	; select bank1
 15407     07D7  00EB               	movwf	(?_sprintf^(0+128)+2)
 15408     07D8  0022               	movlb	2	; select bank2
 15409     07D9  082E               	movf	(??_UART_Custom_ISR+1)^(0+256),w
 15410     07DA  0021               	movlb	1	; select bank1
 15411     07DB  00EC               	movwf	((?_sprintf+1)^(0+128)+2)
 15412     07DC  302F               	movlw	(low (UART_Custom_ISR@buffer| (0+256)))& (0+255)
 15413     07DD  319E  26AC  3187   	fcall	_sprintf
 15414     07E0                     i1l5879:
 15415                           
 15416                           ;main.c: 317:     LCD_Write_String(buffer);
 15417     07E0  302F               	movlw	low UART_Custom_ISR@buffer
 15418     07E1  00F6               	movwf	LCD_Write_String@Str
 15419     07E2  3001               	movlw	high UART_Custom_ISR@buffer
 15420     07E3  00F7               	movwf	LCD_Write_String@Str+1
 15421     07E4  319E  2630  3187   	fcall	_LCD_Write_String
 15422     07E7                     i1l5881:
 15423                           
 15424                           ;main.c: 318:     _delay((unsigned long)((350)*(4000000/4000.0)));
 15425     07E7  3002               	movlw	2
 15426     07E8  0022               	movlb	2	; select bank2
 15427     07E9  00AE               	movwf	(??_UART_Custom_ISR^(0+256)+1)
 15428     07EA  30C7               	movlw	199
 15429     07EB  00AD               	movwf	??_UART_Custom_ISR^(0+256)
 15430     07EC  3088               	movlw	136
 15431     07ED                     u592_27:
 15432     07ED  0B89               	decfsz	9,f
 15433     07EE  2FED               	goto	u592_27
 15434     07EF  0BAD               	decfsz	??_UART_Custom_ISR^(0+256),f
 15435     07F0  2FED               	goto	u592_27
 15436     07F1  0BAE               	decfsz	(??_UART_Custom_ISR^(0+256)+1),f
 15437     07F2  2FED               	goto	u592_27
 15438     07F3  0000               	nop
 15439     07F4                     i1l1189:
 15440     07F4  0008               	return
 15441     07F5                     __end_of_UART_Custom_ISR:
 15442                           
 15443                           	psect	text78
 15444     1EAC                     __ptext78:	
 15445 ;; *************** function _sprintf *****************
 15446 ;; Defined at:
 15447 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
 15448 ;; Parameters:    Size  Location     Type
 15449 ;;  s               1    wreg     PTR unsigned char 
 15450 ;;		 -> TMR0_Custom_ISR@buffer(16), UART_Custom_ISR@buffer(16), 
 15451 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
 15452 ;;		 -> STR_8(14), STR_6(15), STR_3(16), 
 15453 ;; Auto vars:     Size  Location     Type
 15454 ;;  s               1    0[BANK2 ] PTR unsigned char 
 15455 ;;		 -> TMR0_Custom_ISR@buffer(16), UART_Custom_ISR@buffer(16), 
 15456 ;;  f              11    2[BANK2 ] struct _IO_FILE
 15457 ;;  ret             2    0        int 
 15458 ;;  ap              1    1[BANK2 ] PTR void [1]
 15459 ;;		 -> ?_sprintf(2), 
 15460 ;; Return value:  Size  Location     Type
 15461 ;;                  2   73[BANK1 ] int 
 15462 ;; Registers used:
 15463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15464 ;; Tracked objects:
 15465 ;;		On entry : 0/0
 15466 ;;		On exit  : 0/0
 15467 ;;		Unchanged: 0/0
 15468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15469 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 15470 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
 15471 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15472 ;;      Totals:         0       0       7      13       0       0       0       0       0       0       0       0       
      +0       0
 15473 ;;Total ram usage:       20 bytes
 15474 ;; Hardware stack levels used: 1
 15475 ;; Hardware stack levels required when called: 7
 15476 ;; This function calls:
 15477 ;;		_vfprintf
 15478 ;; This function is called by:
 15479 ;;		_UART_Custom_ISR
 15480 ;;		_TMR0_Custom_ISR
 15481 ;; This function uses a non-reentrant model
 15482 ;;
 15483                           
 15484     1EAC                     _sprintf:	
 15485                           ;psect for function _sprintf
 15486                           
 15487                           
 15488                           ;incstack = 0
 15489 ;; hardware stack exceeded
 15490                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15491                           ;sprintf@s stored from wreg
 15492     1EAC  0022               	movlb	2	; select bank2
 15493     1EAD  00A0               	movwf	sprintf@s^(0+256)
 15494     1EAE                     i1l5407:
 15495     1EAE  30EB               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 15496     1EAF  00A1               	movwf	sprintf@ap^(0+256)
 15497     1EB0  0820               	movf	sprintf@s^(0+256),w
 15498     1EB1  00A2               	movwf	sprintf@f^(0+256)
 15499     1EB2                     i1l5409:
 15500     1EB2  01A4               	clrf	(sprintf@f^(0+256)+2)
 15501     1EB3  01A5               	clrf	((sprintf@f+1)^(0+256)+2)
 15502     1EB4                     i1l5411:
 15503     1EB4  01AB               	clrf	(sprintf@f^(0+256)+9)
 15504     1EB5  01AC               	clrf	((sprintf@f+1)^(0+256)+9)
 15505     1EB6                     i1l5413:
 15506     1EB6  0021               	movlb	1	; select bank1
 15507     1EB7  086A               	movf	(sprintf@fmt+1)^(0+128),w
 15508     1EB8  00E3               	movwf	(vfprintf@fmt+1)^(0+128)
 15509     1EB9  0869               	movf	sprintf@fmt^(0+128),w
 15510     1EBA  00E2               	movwf	vfprintf@fmt^(0+128)
 15511     1EBB  3021               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
 15512     1EBC  00E4               	movwf	vfprintf@ap^(0+128)
 15513     1EBD  3022               	movlw	(low (sprintf@f| (0+256)))& (0+255)
 15514     1EBE  319E  268C  319E   	fcall	_vfprintf
 15515     1EC1                     i1l5415:
 15516     1EC1  0022               	movlb	2	; select bank2
 15517     1EC2  0824               	movf	(sprintf@f^(0+256)+2),w
 15518     1EC3  0720               	addwf	sprintf@s^(0+256),w
 15519     1EC4  0021               	movlb	1	; select bank1
 15520     1EC5  00EF               	movwf	??_sprintf^(0+128)
 15521     1EC6  086F               	movf	??_sprintf^(0+128),w
 15522     1EC7  0086               	movwf	6
 15523     1EC8  3001               	movlw	1	; select bank2/3
 15524     1EC9  0087               	movwf	7
 15525     1ECA  0181               	clrf	1
 15526     1ECB                     i1l1735:
 15527     1ECB  0008               	return
 15528     1ECC                     __end_of_sprintf:
 15529                           
 15530                           	psect	text79
 15531     1E8C                     __ptext79:	
 15532 ;; *************** function _vfprintf *****************
 15533 ;; Defined at:
 15534 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 15535 ;; Parameters:    Size  Location     Type
 15536 ;;  fp              1    wreg     PTR struct _IO_FILE
 15537 ;;		 -> sprintf@f(11), 
 15538 ;;  fmt             2   66[BANK1 ] PTR const unsigned char 
 15539 ;;		 -> STR_8(14), STR_6(15), STR_3(16), 
 15540 ;;  ap              1   68[BANK1 ] PTR PTR void 
 15541 ;;		 -> sprintf@ap(1), 
 15542 ;; Auto vars:     Size  Location     Type
 15543 ;;  fp              1   70[BANK1 ] PTR struct _IO_FILE
 15544 ;;		 -> sprintf@f(11), 
 15545 ;;  cfmt            2   71[BANK1 ] PTR unsigned char 
 15546 ;;		 -> STR_8(14), STR_6(15), STR_3(16), 
 15547 ;; Return value:  Size  Location     Type
 15548 ;;                  2   66[BANK1 ] int 
 15549 ;; Registers used:
 15550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15551 ;; Tracked objects:
 15552 ;;		On entry : 0/0
 15553 ;;		On exit  : 0/0
 15554 ;;		Unchanged: 0/0
 15555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15556 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15557 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15558 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15559 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 15560 ;;Total ram usage:        7 bytes
 15561 ;; Hardware stack levels used: 1
 15562 ;; Hardware stack levels required when called: 6
 15563 ;; This function calls:
 15564 ;;		_vfpfcnvrt
 15565 ;; This function is called by:
 15566 ;;		_sprintf
 15567 ;; This function uses a non-reentrant model
 15568 ;;
 15569                           
 15570     1E8C                     _vfprintf:	
 15571                           ;psect for function _vfprintf
 15572                           
 15573                           
 15574                           ;incstack = 0
 15575 ;; hardware stack exceeded
 15576                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15577                           ;vfprintf@fp stored from wreg
 15578     1E8C  0021               	movlb	1	; select bank1
 15579     1E8D  00E6               	movwf	vfprintf@fp^(0+128)
 15580     1E8E                     i1l5311:
 15581                           
 15582                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 15583     1E8E  0863               	movf	(vfprintf@fmt+1)^(0+128),w
 15584     1E8F  00E8               	movwf	(vfprintf@cfmt+1)^(0+128)
 15585     1E90  0862               	movf	vfprintf@fmt^(0+128),w
 15586     1E91  00E7               	movwf	vfprintf@cfmt^(0+128)
 15587                           
 15588                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 15589     1E92  2E9F               	goto	i1l5315
 15590     1E93                     i1l5313:
 15591                           
 15592                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 15593     1E93  30E7               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 15594     1E94  0020               	movlb	0	; select bank0
 15595     1E95  00EE               	movwf	vfpfcnvrt@fmt
 15596     1E96  0021               	movlb	1	; select bank1
 15597     1E97  0864               	movf	vfprintf@ap^(0+128),w
 15598     1E98  0020               	movlb	0	; select bank0
 15599     1E99  00EF               	movwf	vfpfcnvrt@ap
 15600     1E9A  0021               	movlb	1	; select bank1
 15601     1E9B  0866               	movf	vfprintf@fp^(0+128),w
 15602     1E9C  3196  2670  319E   	fcall	_vfpfcnvrt
 15603     1E9F                     i1l5315:
 15604                           
 15605                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 15606     1E9F  0021               	movlb	1	; select bank1
 15607     1EA0  0867               	movf	vfprintf@cfmt^(0+128),w
 15608     1EA1  0084               	movwf	4
 15609     1EA2  0868               	movf	(vfprintf@cfmt+1)^(0+128),w
 15610     1EA3  0085               	movwf	5
 15611     1EA4  0012               	moviw fsr0++
 15612     1EA5  1D03               	btfss	3,2
 15613     1EA6  2EA8               	goto	u484_21
 15614     1EA7  2EA9               	goto	u484_20
 15615     1EA8                     u484_21:
 15616     1EA8  2E93               	goto	i1l5313
 15617     1EA9                     u484_20:
 15618     1EA9                     i1l5317:
 15619                           
 15620                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 15621     1EA9  01E2               	clrf	?_vfprintf^(0+128)
 15622     1EAA  01E3               	clrf	(?_vfprintf+1)^(0+128)
 15623     1EAB                     i1l1883:
 15624     1EAB  0008               	return
 15625     1EAC                     __end_of_vfprintf:
 15626                           
 15627                           	psect	text80
 15628     1670                     __ptext80:	
 15629 ;; *************** function _vfpfcnvrt *****************
 15630 ;; Defined at:
 15631 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 15632 ;; Parameters:    Size  Location     Type
 15633 ;;  fp              1    wreg     PTR struct _IO_FILE
 15634 ;;		 -> sprintf@f(11), 
 15635 ;;  fmt             1   78[BANK0 ] PTR PTR unsigned char 
 15636 ;;		 -> vfprintf@cfmt(2), 
 15637 ;;  ap              1   79[BANK0 ] PTR PTR void 
 15638 ;;		 -> sprintf@ap(1), 
 15639 ;; Auto vars:     Size  Location     Type
 15640 ;;  fp              1   62[BANK1 ] PTR struct _IO_FILE
 15641 ;;		 -> sprintf@f(11), 
 15642 ;;  convarg         4   58[BANK1 ] struct .
 15643 ;;  cp              2   64[BANK1 ] PTR unsigned char 
 15644 ;;		 -> STR_8(14), STR_6(15), STR_3(16), 
 15645 ;;  c               1   63[BANK1 ] unsigned char 
 15646 ;;  done            1    0        _Bool 
 15647 ;; Return value:  Size  Location     Type
 15648 ;;                  1    wreg      void 
 15649 ;; Registers used:
 15650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15651 ;; Tracked objects:
 15652 ;;		On entry : 0/0
 15653 ;;		On exit  : 0/0
 15654 ;;		Unchanged: 0/0
 15655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15656 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15657 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 15658 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15659 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0
 15660 ;;Total ram usage:       14 bytes
 15661 ;; Hardware stack levels used: 1
 15662 ;; Hardware stack levels required when called: 5
 15663 ;; This function calls:
 15664 ;;		_efgtoa
 15665 ;;		_fputc
 15666 ;;		_read_prec_or_width
 15667 ;;		_xtoa
 15668 ;; This function is called by:
 15669 ;;		_vfprintf
 15670 ;; This function uses a non-reentrant model
 15671 ;;
 15672                           
 15673     1670                     _vfpfcnvrt:	
 15674                           ;psect for function _vfpfcnvrt
 15675                           
 15676                           
 15677                           ;incstack = 0
 15678 ;; hardware stack exceeded
 15679                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15680                           ;vfpfcnvrt@fp stored from wreg
 15681     1670  0021               	movlb	1	; select bank1
 15682     1671  00DE               	movwf	vfpfcnvrt@fp^(0+128)
 15683     1672                     i1l5175:
 15684                           
 15685                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 15686     1672  0020               	movlb	0	; select bank0
 15687     1673  086E               	movf	vfpfcnvrt@fmt,w
 15688     1674  0086               	movwf	6
 15689     1675  0187               	clrf	7
 15690     1676  3F40               	moviw [0]fsr1
 15691     1677  0021               	movlb	1	; select bank1
 15692     1678  00D6               	movwf	??_vfpfcnvrt^(0+128)
 15693     1679  3F41               	moviw [1]fsr1
 15694     167A  00D7               	movwf	(??_vfpfcnvrt^(0+128)+1)
 15695     167B  0856               	movf	??_vfpfcnvrt^(0+128),w
 15696     167C  0084               	movwf	4
 15697     167D  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 15698     167E  0085               	movwf	5
 15699     167F  0012               	moviw fsr0++
 15700     1680  3A25               	xorlw	37
 15701     1681  1D03               	btfss	3,2
 15702     1682  2E84               	goto	u477_21
 15703     1683  2E85               	goto	u477_20
 15704     1684                     u477_21:
 15705     1684  2FE5               	goto	i1l5265
 15706     1685                     u477_20:
 15707     1685                     i1l5177:
 15708                           
 15709                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 15710     1685  0020               	movlb	0	; select bank0
 15711     1686  086E               	movf	vfpfcnvrt@fmt,w
 15712     1687  0086               	movwf	6
 15713     1688  0187               	clrf	7
 15714     1689  3001               	movlw	1
 15715     168A  0781               	addwf	1,f
 15716     168B  3141               	addfsr 1,1
 15717     168C  1803               	skipnc
 15718     168D  0A81               	incf	1,f
 15719     168E                     i1l5179:
 15720                           
 15721                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 15722     168E  0022               	movlb	2	; select bank2
 15723     168F  01D5               	clrf	_width^(0+256)
 15724     1690  01D6               	clrf	(_width+1)^(0+256)
 15725     1691  1003               	clrc
 15726     1692  3000               	movlw	0
 15727     1693  1803               	btfsc	3,0
 15728     1694  3001               	movlw	1
 15729     1695  00E5               	movwf	_flags^(0+256)
 15730     1696                     i1l5181:
 15731                           
 15732                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 15733     1696  30FF               	movlw	255
 15734     1697  00D7               	movwf	_prec^(0+256)
 15735     1698  30FF               	movlw	255
 15736     1699  00D8               	movwf	(_prec^(0+256)+1)
 15737     169A                     i1l5183:
 15738                           
 15739                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 15740     169A  0020               	movlb	0	; select bank0
 15741     169B  086E               	movf	vfpfcnvrt@fmt,w
 15742     169C  0086               	movwf	6
 15743     169D  0187               	clrf	7
 15744     169E  3F40               	moviw [0]fsr1
 15745     169F  0021               	movlb	1	; select bank1
 15746     16A0  00D6               	movwf	??_vfpfcnvrt^(0+128)
 15747     16A1  3F41               	moviw [1]fsr1
 15748     16A2  00D7               	movwf	(??_vfpfcnvrt^(0+128)+1)
 15749     16A3  0856               	movf	??_vfpfcnvrt^(0+128),w
 15750     16A4  0084               	movwf	4
 15751     16A5  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 15752     16A6  0085               	movwf	5
 15753     16A7  0012               	moviw fsr0++
 15754     16A8  3A2E               	xorlw	46
 15755     16A9  1D03               	btfss	3,2
 15756     16AA  2EAC               	goto	u478_21
 15757     16AB  2EAD               	goto	u478_20
 15758     16AC                     u478_21:
 15759     16AC  2EC1               	goto	i1l5189
 15760     16AD                     u478_20:
 15761     16AD                     i1l5185:
 15762                           
 15763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 15764     16AD  0020               	movlb	0	; select bank0
 15765     16AE  086E               	movf	vfpfcnvrt@fmt,w
 15766     16AF  0086               	movwf	6
 15767     16B0  0187               	clrf	7
 15768     16B1  3001               	movlw	1
 15769     16B2  0781               	addwf	1,f
 15770     16B3  3141               	addfsr 1,1
 15771     16B4  1803               	skipnc
 15772     16B5  0A81               	incf	1,f
 15773     16B6                     i1l5187:
 15774                           
 15775                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 15776     16B6  086F               	movf	vfpfcnvrt@ap,w
 15777     16B7  00F6               	movwf	read_prec_or_width@ap
 15778     16B8  086E               	movf	vfpfcnvrt@fmt,w
 15779     16B9  3191  21C6  3196   	fcall	_read_prec_or_width
 15780     16BC  0877               	movf	?_read_prec_or_width+1,w
 15781     16BD  0022               	movlb	2	; select bank2
 15782     16BE  00D8               	movwf	(_prec+1)^(0+256)
 15783     16BF  0876               	movf	?_read_prec_or_width,w
 15784     16C0  00D7               	movwf	_prec^(0+256)
 15785     16C1                     i1l5189:
 15786                           
 15787                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 15788     16C1  0020               	movlb	0	; select bank0
 15789     16C2  086E               	movf	vfpfcnvrt@fmt,w
 15790     16C3  0086               	movwf	6
 15791     16C4  0187               	clrf	7
 15792     16C5  3F40               	moviw [0]fsr1
 15793     16C6  0021               	movlb	1	; select bank1
 15794     16C7  00E0               	movwf	vfpfcnvrt@cp^(0+128)
 15795     16C8  3F41               	moviw [1]fsr1
 15796     16C9  00E1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 15797     16CA                     i1l5191:
 15798                           
 15799                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 15800     16CA  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15801     16CB  0084               	movwf	4
 15802     16CC  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 15803     16CD  0085               	movwf	5
 15804     16CE  0800               	movf	0,w	;code access
 15805     16CF  00DF               	movwf	vfpfcnvrt@c^(0+128)
 15806                           
 15807                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 15808     16D0  2EEB               	goto	i1l5205
 15809     16D1                     i1l5193:
 15810                           
 15811                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1298:     cp++;
 15812     16D1  3001               	movlw	1
 15813     16D2  07E0               	addwf	vfpfcnvrt@cp^(0+128),f
 15814     16D3  3000               	movlw	0
 15815     16D4  3DE1               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
 15816     16D5                     i1l5195:
 15817                           
 15818                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1300:     if (*cp
      +                           == 'h') {
 15819     16D5  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15820     16D6  0084               	movwf	4
 15821     16D7  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 15822     16D8  0085               	movwf	5
 15823     16D9  0012               	moviw fsr0++
 15824     16DA  3A68               	xorlw	104
 15825     16DB  1D03               	btfss	3,2
 15826     16DC  2EDE               	goto	u479_21
 15827     16DD  2EDF               	goto	u479_20
 15828     16DE                     u479_21:
 15829     16DE  2EF3               	goto	i1l5207
 15830     16DF                     u479_20:
 15831     16DF                     i1l5197:
 15832                           
 15833                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1301:      c = 'H
      +                          ';
 15834     16DF  3048               	movlw	72
 15835     16E0  00DF               	movwf	vfpfcnvrt@c^(0+128)
 15836                           
 15837                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1302:      cp++;
 15838     16E1  3001               	movlw	1
 15839     16E2  07E0               	addwf	vfpfcnvrt@cp^(0+128),f
 15840     16E3  3000               	movlw	0
 15841     16E4  3DE1               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
 15842     16E5  2EF3               	goto	i1l5207
 15843     16E6                     i1l5199:
 15844                           
 15845                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 15846     16E6  3069               	movlw	105
 15847     16E7  00DF               	movwf	vfpfcnvrt@c^(0+128)
 15848                           
 15849                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1351:     break;
 15850     16E8  2EF3               	goto	i1l5207
 15851     16E9                     i1l5201:
 15852                           
 15853                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 15854     16E9  01DF               	clrf	vfpfcnvrt@c^(0+128)
 15855                           
 15856                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
 15857     16EA  2EF3               	goto	i1l5207
 15858     16EB                     i1l5205:
 15859     16EB  085F               	movf	vfpfcnvrt@c^(0+128),w
 15860                           
 15861                           ; Switch size 1, requested type "simple"
 15862                           ; Number of cases is 2, Range of values is 104 to 120
 15863                           ; switch strategies available:
 15864                           ; Name         Instructions Cycles
 15865                           ; simple_byte            7     4 (average)
 15866                           ; direct_byte           43     9 (fixed)
 15867                           ; jumptable            263     9 (fixed)
 15868                           ;	Chosen strategy is simple_byte
 15869     16EC  3A68               	xorlw	104	; case 104
 15870     16ED  1903               	skipnz
 15871     16EE  2ED1               	goto	i1l5193
 15872     16EF  3A10               	xorlw	16	; case 120
 15873     16F0  1903               	skipnz
 15874     16F1  2EE6               	goto	i1l5199
 15875     16F2  2EE9               	goto	i1l5201
 15876     16F3                     i1l5207:
 15877     16F3  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15878     16F4  0084               	movwf	4
 15879     16F5  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 15880     16F6  0085               	movwf	5
 15881     16F7  0012               	moviw fsr0++
 15882     16F8  3A78               	xorlw	120
 15883     16F9  1D03               	btfss	3,2
 15884     16FA  2EFC               	goto	u480_21
 15885     16FB  2EFD               	goto	u480_20
 15886     16FC                     u480_21:
 15887     16FC  2F4F               	goto	i1l5227
 15888     16FD                     u480_20:
 15889     16FD  2F21               	goto	i1l5215
 15890     16FE                     i1l5209:
 15891                           
 15892                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 15893     16FE  0020               	movlb	0	; select bank0
 15894     16FF  086F               	movf	vfpfcnvrt@ap,w
 15895     1700  0086               	movwf	6
 15896     1701  3001               	movlw	1	; select bank2/3
 15897     1702  0087               	movwf	7
 15898     1703  0801               	movf	1,w
 15899     1704  0084               	movwf	4
 15900     1705  0185               	clrf	5
 15901     1706  3002               	movlw	2
 15902     1707  0781               	addwf	1,f
 15903     1708  3F00               	moviw [0]fsr0
 15904     1709  0021               	movlb	1	; select bank1
 15905     170A  00DA               	movwf	vfpfcnvrt@convarg^(0+128)
 15906     170B  3F01               	moviw [1]fsr0
 15907     170C  00DB               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 15908                           
 15909                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1457:      break;
 15910     170D  2F29               	goto	i1l5217
 15911     170E                     i1l5211:
 15912                           
 15913                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1465:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned char)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (u
      +                          nsigned int)0));
 15914     170E  0020               	movlb	0	; select bank0
 15915     170F  086F               	movf	vfpfcnvrt@ap,w
 15916     1710  0086               	movwf	6
 15917     1711  3001               	movlw	1	; select bank2/3
 15918     1712  0087               	movwf	7
 15919     1713  0801               	movf	1,w
 15920     1714  0084               	movwf	4
 15921     1715  0185               	clrf	5
 15922     1716  3002               	movlw	2
 15923     1717  0781               	addwf	1,f
 15924     1718  0800               	movf	0,w
 15925     1719  0021               	movlb	1	; select bank1
 15926     171A  00D6               	movwf	??_vfpfcnvrt^(0+128)
 15927     171B  01D7               	clrf	(??_vfpfcnvrt^(0+128)+1)
 15928     171C  0856               	movf	??_vfpfcnvrt^(0+128),w
 15929     171D  00DA               	movwf	vfpfcnvrt@convarg^(0+128)
 15930     171E  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 15931     171F  00DB               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 15932                           
 15933                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1466:      break;
 15934     1720  2F29               	goto	i1l5217
 15935     1721                     i1l5215:
 15936     1721  085F               	movf	vfpfcnvrt@c^(0+128),w
 15937                           
 15938                           ; Switch size 1, requested type "simple"
 15939                           ; Number of cases is 2, Range of values is 72 to 105
 15940                           ; switch strategies available:
 15941                           ; Name         Instructions Cycles
 15942                           ; simple_byte            7     4 (average)
 15943                           ; direct_byte           77     9 (fixed)
 15944                           ; jumptable            263     9 (fixed)
 15945                           ;	Chosen strategy is simple_byte
 15946     1722  3A48               	xorlw	72	; case 72
 15947     1723  1903               	skipnz
 15948     1724  2F0E               	goto	i1l5211
 15949     1725  3A21               	xorlw	33	; case 105
 15950     1726  1903               	skipnz
 15951     1727  2EFE               	goto	i1l5209
 15952     1728  2F29               	goto	i1l5217
 15953     1729                     i1l5217:
 15954                           
 15955                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 15956     1729  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15957     172A  3E01               	addlw	1
 15958     172B  00D6               	movwf	??_vfpfcnvrt^(0+128)
 15959     172C  3000               	movlw	0
 15960     172D  3D61               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 15961     172E  00D7               	movwf	(??_vfpfcnvrt+1)^(0+128)
 15962     172F  0020               	movlb	0	; select bank0
 15963     1730  086E               	movf	vfpfcnvrt@fmt,w
 15964     1731  0086               	movwf	6
 15965     1732  0187               	clrf	7
 15966     1733  0021               	movlb	1	; select bank1
 15967     1734  0856               	movf	??_vfpfcnvrt^(0+128),w
 15968     1735  3FC0               	movwi [0]fsr1
 15969     1736  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 15970     1737  3FC1               	movwi [1]fsr1
 15971                           
 15972                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 15973     1738  2F46               	goto	i1l5225
 15974     1739                     i1l5219:
 15975                           
 15976                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
 15977     1739  085B               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 15978     173A  0020               	movlb	0	; select bank0
 15979     173B  00A9               	movwf	xtoa@d+1
 15980     173C  0021               	movlb	1	; select bank1
 15981     173D  085A               	movf	vfpfcnvrt@convarg^(0+128),w
 15982     173E  0020               	movlb	0	; select bank0
 15983     173F  00A8               	movwf	xtoa@d
 15984     1740  0021               	movlb	1	; select bank1
 15985     1741  085E               	movf	vfpfcnvrt@fp^(0+128),w
 15986     1742  3194  2404  3196   	fcall	_xtoa
 15987     1745  2FFF               	goto	i1l1860
 15988     1746                     i1l5225:
 15989     1746  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15990     1747  0084               	movwf	4
 15991     1748  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 15992     1749  0085               	movwf	5
 15993     174A  0800               	movf	0,w	;code access
 15994                           
 15995                           ; Switch size 1, requested type "simple"
 15996                           ; Number of cases is 1, Range of values is 120 to 120
 15997                           ; switch strategies available:
 15998                           ; Name         Instructions Cycles
 15999                           ; simple_byte            4     3 (average)
 16000                           ; direct_byte           11     9 (fixed)
 16001                           ; jumptable            263     9 (fixed)
 16002                           ;	Chosen strategy is simple_byte
 16003     174B  3A78               	xorlw	120	; case 120
 16004     174C  1903               	skipnz
 16005     174D  2F39               	goto	i1l5219
 16006     174E  2F4F               	goto	i1l5227
 16007     174F                     i1l5227:
 16008                           
 16009                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 16010     174F  0020               	movlb	0	; select bank0
 16011     1750  086E               	movf	vfpfcnvrt@fmt,w
 16012     1751  0086               	movwf	6
 16013     1752  0187               	clrf	7
 16014     1753  3F40               	moviw [0]fsr1
 16015     1754  0021               	movlb	1	; select bank1
 16016     1755  00E0               	movwf	vfpfcnvrt@cp^(0+128)
 16017     1756  3F41               	moviw [1]fsr1
 16018     1757  00E1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 16019     1758                     i1l5229:
 16020                           
 16021                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 16022     1758  0860               	movf	vfpfcnvrt@cp^(0+128),w
 16023     1759  0084               	movwf	4
 16024     175A  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 16025     175B  0085               	movwf	5
 16026     175C  0800               	movf	0,w	;code access
 16027     175D  00DF               	movwf	vfpfcnvrt@c^(0+128)
 16028                           
 16029                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 16030     175E  2F69               	goto	i1l5239
 16031     175F                     i1l5231:
 16032                           
 16033                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 16034     175F  3001               	movlw	1
 16035     1760  07E0               	addwf	vfpfcnvrt@cp^(0+128),f
 16036     1761  3000               	movlw	0
 16037     1762  3DE1               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
 16038                           
 16039                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
 16040     1763  2F74               	goto	i1l5241
 16041     1764                     i1l5233:
 16042                           
 16043                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 16044     1764  306C               	movlw	108
 16045     1765  00DF               	movwf	vfpfcnvrt@c^(0+128)
 16046                           
 16047                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
 16048     1766  2F74               	goto	i1l5241
 16049     1767                     i1l5235:
 16050                           
 16051                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 16052     1767  01DF               	clrf	vfpfcnvrt@c^(0+128)
 16053                           
 16054                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
 16055     1768  2F74               	goto	i1l5241
 16056     1769                     i1l5239:
 16057     1769  085F               	movf	vfpfcnvrt@c^(0+128),w
 16058                           
 16059                           ; Switch size 1, requested type "simple"
 16060                           ; Number of cases is 3, Range of values is 76 to 108
 16061                           ; switch strategies available:
 16062                           ; Name         Instructions Cycles
 16063                           ; simple_byte           10     6 (average)
 16064                           ; direct_byte           75     9 (fixed)
 16065                           ; jumptable            263     9 (fixed)
 16066                           ;	Chosen strategy is simple_byte
 16067     176A  3A4C               	xorlw	76	; case 76
 16068     176B  1903               	skipnz
 16069     176C  2F5F               	goto	i1l5231
 16070     176D  3A2A               	xorlw	42	; case 102
 16071     176E  1903               	skipnz
 16072     176F  2F64               	goto	i1l5233
 16073     1770  3A0A               	xorlw	10	; case 108
 16074     1771  1903               	skipnz
 16075     1772  2F5F               	goto	i1l5231
 16076     1773  2F67               	goto	i1l5235
 16077     1774                     i1l5241:
 16078     1774  0860               	movf	vfpfcnvrt@cp^(0+128),w
 16079     1775  0084               	movwf	4
 16080     1776  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 16081     1777  0085               	movwf	5
 16082     1778  0012               	moviw fsr0++
 16083     1779  3A66               	xorlw	102
 16084     177A  1D03               	btfss	3,2
 16085     177B  2F7D               	goto	u481_21
 16086     177C  2F7E               	goto	u481_20
 16087     177D                     u481_21:
 16088     177D  2FDB               	goto	i1l5261
 16089     177E                     u481_20:
 16090     177E  2FA7               	goto	i1l5249
 16091     177F                     i1l5243:
 16092                           
 16093                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 16094     177F  0020               	movlb	0	; select bank0
 16095     1780  086F               	movf	vfpfcnvrt@ap,w
 16096     1781  0086               	movwf	6
 16097     1782  3001               	movlw	1	; select bank2/3
 16098     1783  0087               	movwf	7
 16099     1784  0801               	movf	1,w
 16100     1785  0084               	movwf	4
 16101     1786  0185               	clrf	5
 16102     1787  3004               	movlw	4
 16103     1788  0781               	addwf	1,f
 16104     1789  3F00               	moviw [0]fsr0
 16105     178A  0021               	movlb	1	; select bank1
 16106     178B  00DA               	movwf	vfpfcnvrt@convarg^(0+128)
 16107     178C  3F01               	moviw [1]fsr0
 16108     178D  00DB               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 16109     178E  3F02               	moviw [2]fsr0
 16110     178F  00DC               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
 16111     1790  3F03               	moviw [3]fsr0
 16112     1791  00DD               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
 16113                           
 16114                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
 16115     1792  2FAF               	goto	i1l5251
 16116     1793                     i1l5245:
 16117                           
 16118                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 16119     1793  0020               	movlb	0	; select bank0
 16120     1794  086F               	movf	vfpfcnvrt@ap,w
 16121     1795  0086               	movwf	6
 16122     1796  3001               	movlw	1	; select bank2/3
 16123     1797  0087               	movwf	7
 16124     1798  0801               	movf	1,w
 16125     1799  0084               	movwf	4
 16126     179A  0185               	clrf	5
 16127     179B  3004               	movlw	4
 16128     179C  0781               	addwf	1,f
 16129     179D  3F00               	moviw [0]fsr0
 16130     179E  0021               	movlb	1	; select bank1
 16131     179F  00DA               	movwf	vfpfcnvrt@convarg^(0+128)
 16132     17A0  3F01               	moviw [1]fsr0
 16133     17A1  00DB               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 16134     17A2  3F02               	moviw [2]fsr0
 16135     17A3  00DC               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
 16136     17A4  3F03               	moviw [3]fsr0
 16137     17A5  00DD               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
 16138                           
 16139                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
 16140     17A6  2FAF               	goto	i1l5251
 16141     17A7                     i1l5249:
 16142     17A7  085F               	movf	vfpfcnvrt@c^(0+128),w
 16143                           
 16144                           ; Switch size 1, requested type "simple"
 16145                           ; Number of cases is 2, Range of values is 76 to 108
 16146                           ; switch strategies available:
 16147                           ; Name         Instructions Cycles
 16148                           ; simple_byte            7     4 (average)
 16149                           ; direct_byte           75     9 (fixed)
 16150                           ; jumptable            263     9 (fixed)
 16151                           ;	Chosen strategy is simple_byte
 16152     17A8  3A4C               	xorlw	76	; case 76
 16153     17A9  1903               	skipnz
 16154     17AA  2F93               	goto	i1l5245
 16155     17AB  3A20               	xorlw	32	; case 108
 16156     17AC  1903               	skipnz
 16157     17AD  2F7F               	goto	i1l5243
 16158     17AE  2FAF               	goto	i1l5251
 16159     17AF                     i1l5251:
 16160                           
 16161                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 16162     17AF  0860               	movf	vfpfcnvrt@cp^(0+128),w
 16163     17B0  3E01               	addlw	1
 16164     17B1  00D6               	movwf	??_vfpfcnvrt^(0+128)
 16165     17B2  3000               	movlw	0
 16166     17B3  3D61               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 16167     17B4  00D7               	movwf	(??_vfpfcnvrt+1)^(0+128)
 16168     17B5  0020               	movlb	0	; select bank0
 16169     17B6  086E               	movf	vfpfcnvrt@fmt,w
 16170     17B7  0086               	movwf	6
 16171     17B8  0187               	clrf	7
 16172     17B9  0021               	movlb	1	; select bank1
 16173     17BA  0856               	movf	??_vfpfcnvrt^(0+128),w
 16174     17BB  3FC0               	movwi [0]fsr1
 16175     17BC  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 16176     17BD  3FC1               	movwi [1]fsr1
 16177                           
 16178                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 16179     17BE  2FD2               	goto	i1l5259
 16180     17BF                     i1l5253:
 16181                           
 16182                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 16183     17BF  085D               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
 16184     17C0  00A3               	movwf	(efgtoa@f+3)^(0+128)
 16185     17C1  085C               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
 16186     17C2  00A2               	movwf	(efgtoa@f+2)^(0+128)
 16187     17C3  085B               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 16188     17C4  00A1               	movwf	(efgtoa@f+1)^(0+128)
 16189     17C5  085A               	movf	vfpfcnvrt@convarg^(0+128),w
 16190     17C6  00A0               	movwf	efgtoa@f^(0+128)
 16191     17C7  0860               	movf	vfpfcnvrt@cp^(0+128),w
 16192     17C8  0084               	movwf	4
 16193     17C9  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 16194     17CA  0085               	movwf	5
 16195     17CB  0800               	movf	0,w	;code access
 16196     17CC  00A4               	movwf	efgtoa@c^(0+128)
 16197     17CD  085E               	movf	vfpfcnvrt@fp^(0+128),w
 16198     17CE  3180  2083  3196   	fcall	_efgtoa
 16199     17D1  2FFF               	goto	i1l1860
 16200     17D2                     i1l5259:
 16201     17D2  0860               	movf	vfpfcnvrt@cp^(0+128),w
 16202     17D3  0084               	movwf	4
 16203     17D4  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 16204     17D5  0085               	movwf	5
 16205     17D6  0800               	movf	0,w	;code access
 16206                           
 16207                           ; Switch size 1, requested type "simple"
 16208                           ; Number of cases is 1, Range of values is 102 to 102
 16209                           ; switch strategies available:
 16210                           ; Name         Instructions Cycles
 16211                           ; simple_byte            4     3 (average)
 16212                           ; direct_byte           11     9 (fixed)
 16213                           ; jumptable            263     9 (fixed)
 16214                           ;	Chosen strategy is simple_byte
 16215     17D7  3A66               	xorlw	102	; case 102
 16216     17D8  1903               	skipnz
 16217     17D9  2FBF               	goto	i1l5253
 16218     17DA  2FDB               	goto	i1l5261
 16219     17DB                     i1l5261:
 16220                           
 16221                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 16222     17DB  0020               	movlb	0	; select bank0
 16223     17DC  086E               	movf	vfpfcnvrt@fmt,w
 16224     17DD  0086               	movwf	6
 16225     17DE  0187               	clrf	7
 16226     17DF  3001               	movlw	1
 16227     17E0  0781               	addwf	1,f
 16228     17E1  3141               	addfsr 1,1
 16229     17E2  1803               	skipnc
 16230     17E3  0A81               	incf	1,f
 16231     17E4  2FFF               	goto	i1l1860
 16232     17E5                     i1l5265:
 16233                           
 16234                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 16235     17E5  0020               	movlb	0	; select bank0
 16236     17E6  086E               	movf	vfpfcnvrt@fmt,w
 16237     17E7  0086               	movwf	6
 16238     17E8  0187               	clrf	7
 16239     17E9  3F40               	moviw [0]fsr1
 16240     17EA  0021               	movlb	1	; select bank1
 16241     17EB  00D6               	movwf	??_vfpfcnvrt^(0+128)
 16242     17EC  3F41               	moviw [1]fsr1
 16243     17ED  00D7               	movwf	(??_vfpfcnvrt^(0+128)+1)
 16244     17EE  0856               	movf	??_vfpfcnvrt^(0+128),w
 16245     17EF  0084               	movwf	4
 16246     17F0  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 16247     17F1  0085               	movwf	5
 16248     17F2  0800               	movf	0,w	;code access
 16249     17F3  00D8               	movwf	(??_vfpfcnvrt+2)^(0+128)
 16250     17F4  01D9               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 16251     17F5  0858               	movf	(??_vfpfcnvrt+2)^(0+128),w
 16252     17F6  00F0               	movwf	fputc@c
 16253     17F7  0859               	movf	(??_vfpfcnvrt+3)^(0+128),w
 16254     17F8  00F1               	movwf	fputc@c+1
 16255     17F9  085E               	movf	vfpfcnvrt@fp^(0+128),w
 16256     17FA  00F2               	movwf	fputc@fp
 16257     17FB  3188  2000  3196   	fcall	_fputc
 16258     17FE  2FDB               	goto	i1l5261
 16259     17FF                     i1l1860:
 16260     17FF  0008               	return
 16261     1800                     __end_of_vfpfcnvrt:
 16262                           
 16263                           	psect	text81
 16264     1404                     __ptext81:	
 16265 ;; *************** function _xtoa *****************
 16266 ;; Defined at:
 16267 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 16268 ;; Parameters:    Size  Location     Type
 16269 ;;  fp              1    wreg     PTR struct _IO_FILE
 16270 ;;		 -> sprintf@f(11), 
 16271 ;;  d               2    8[BANK0 ] unsigned int 
 16272 ;; Auto vars:     Size  Location     Type
 16273 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
 16274 ;;		 -> sprintf@f(11), 
 16275 ;;  i               2   17[BANK0 ] int 
 16276 ;;  p               2   14[BANK0 ] int 
 16277 ;;  w               2   11[BANK0 ] int 
 16278 ;;  c               1   16[BANK0 ] unsigned char 
 16279 ;; Return value:  Size  Location     Type
 16280 ;;                  1    wreg      void 
 16281 ;; Registers used:
 16282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16283 ;; Tracked objects:
 16284 ;;		On entry : 0/0
 16285 ;;		On exit  : 0/0
 16286 ;;		Unchanged: 0/0
 16287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16289 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16290 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16291 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16292 ;;Total ram usage:       11 bytes
 16293 ;; Hardware stack levels used: 1
 16294 ;; Hardware stack levels required when called: 4
 16295 ;; This function calls:
 16296 ;;		_pad
 16297 ;; This function is called by:
 16298 ;;		_vfpfcnvrt
 16299 ;; This function uses a non-reentrant model
 16300 ;;
 16301                           
 16302     1404                     _xtoa:	
 16303                           ;psect for function _xtoa
 16304                           
 16305                           
 16306                           ;incstack = 0
 16307 ;; hardware stack exceeded
 16308                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16309                           ;xtoa@fp stored from wreg
 16310     1404  0020               	movlb	0	; select bank0
 16311     1405  00AD               	movwf	xtoa@fp
 16312     1406                     i1l5109:
 16313                           
 16314                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c
      +                          : 1065:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 10
      +                          80:     p = (0 <= prec) ? prec : 1;
 16315     1406  0022               	movlb	2	; select bank2
 16316     1407  1FD8               	btfss	(_prec+1)^(0+256),7
 16317     1408  2C0A               	goto	u468_21
 16318     1409  2C0B               	goto	u468_20
 16319     140A                     u468_21:
 16320     140A  2C11               	goto	i1l5113
 16321     140B                     u468_20:
 16322     140B                     i1l5111:
 16323     140B  3001               	movlw	1
 16324     140C  0020               	movlb	0	; select bank0
 16325     140D  00AE               	movwf	xtoa@p
 16326     140E  3000               	movlw	0
 16327     140F  00AF               	movwf	xtoa@p+1
 16328     1410  2C18               	goto	i1l1824
 16329     1411                     i1l5113:
 16330     1411  0858               	movf	(_prec+1)^(0+256),w
 16331     1412  0020               	movlb	0	; select bank0
 16332     1413  00AF               	movwf	xtoa@p+1
 16333     1414  0022               	movlb	2	; select bank2
 16334     1415  0857               	movf	_prec^(0+256),w
 16335     1416  0020               	movlb	0	; select bank0
 16336     1417  00AE               	movwf	xtoa@p
 16337     1418                     i1l1824:
 16338                           
 16339                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 16340     1418  0022               	movlb	2	; select bank2
 16341     1419  0856               	movf	(_width+1)^(0+256),w
 16342     141A  0020               	movlb	0	; select bank0
 16343     141B  00AC               	movwf	xtoa@w+1
 16344     141C  0022               	movlb	2	; select bank2
 16345     141D  0855               	movf	_width^(0+256),w
 16346     141E  0020               	movlb	0	; select bank0
 16347     141F  00AB               	movwf	xtoa@w
 16348                           
 16349                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 16350     1420  304F               	movlw	79
 16351     1421  00B1               	movwf	xtoa@i
 16352     1422  3000               	movlw	0
 16353     1423  00B2               	movwf	xtoa@i+1
 16354     1424                     i1l5115:
 16355                           
 16356                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 16357     1424  0024               	movlb	4	; select bank4
 16358     1425  01EF               	clrf	(_dbuf^(0+512)+79)
 16359                           
 16360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 16361     1426  2C56               	goto	i1l5135
 16362     1427                     i1l5117:
 16363                           
 16364                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1107:         --i;
 16365     1427  30FF               	movlw	255
 16366     1428  0020               	movlb	0	; select bank0
 16367     1429  07B1               	addwf	xtoa@i,f
 16368     142A  30FF               	movlw	255
 16369     142B  3DB2               	addwfc	xtoa@i+1,f
 16370     142C                     i1l5119:
 16371                           
 16372                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 16373     142C  0828               	movf	xtoa@d,w
 16374     142D  390F               	andlw	15
 16375     142E  00B0               	movwf	xtoa@c
 16376     142F                     i1l5121:
 16377                           
 16378                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 16379     142F  300A               	movlw	10
 16380     1430  0230               	subwf	xtoa@c,w
 16381     1431  1803               	skipnc
 16382     1432  2C34               	goto	u469_21
 16383     1433  2C35               	goto	u469_20
 16384     1434                     u469_21:
 16385     1434  2C3A               	goto	i1l5125
 16386     1435                     u469_20:
 16387     1435                     i1l5123:
 16388                           
 16389                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 16390     1435  3030               	movlw	48
 16391     1436  00AA               	movwf	??_xtoa
 16392     1437  082A               	movf	??_xtoa,w
 16393     1438  07B0               	addwf	xtoa@c,f
 16394                           
 16395                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1111:   }
 16396     1439  2C3E               	goto	i1l5127
 16397     143A                     i1l5125:
 16398                           
 16399                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1116:    c += 'a'
      +                           - 10;
 16400     143A  3057               	movlw	87
 16401     143B  00AA               	movwf	??_xtoa
 16402     143C  082A               	movf	??_xtoa,w
 16403     143D  07B0               	addwf	xtoa@c,f
 16404     143E                     i1l5127:
 16405                           
 16406                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 16407     143E  0831               	movf	xtoa@i,w
 16408     143F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 16409     1440  0086               	movwf	6
 16410     1441  3002               	movlw	2	; select bank4/5
 16411     1442  0087               	movwf	7
 16412     1443  0830               	movf	xtoa@c,w
 16413     1444  0081               	movwf	1
 16414     1445                     i1l5129:
 16415                           
 16416                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
 16417     1445  30FF               	movlw	255
 16418     1446  07AE               	addwf	xtoa@p,f
 16419     1447  30FF               	movlw	255
 16420     1448  3DAF               	addwfc	xtoa@p+1,f
 16421     1449                     i1l5131:
 16422                           
 16423                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 16424     1449  30FF               	movlw	255
 16425     144A  07AB               	addwf	xtoa@w,f
 16426     144B  30FF               	movlw	255
 16427     144C  3DAC               	addwfc	xtoa@w+1,f
 16428     144D                     i1l5133:
 16429                           
 16430                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 16431     144D  0E28               	swapf	xtoa@d,w
 16432     144E  390F               	andlw	15
 16433     144F  00A8               	movwf	xtoa@d
 16434     1450  0E29               	swapf	xtoa@d+1,w
 16435     1451  39F0               	andlw	240
 16436     1452  04A8               	iorwf	xtoa@d,f
 16437     1453  0E29               	swapf	xtoa@d+1,w
 16438     1454  390F               	andlw	15
 16439     1455  00A9               	movwf	xtoa@d+1
 16440     1456                     i1l5135:
 16441                           
 16442                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 16443     1456  0020               	movlb	0	; select bank0
 16444     1457  0832               	movf	xtoa@i+1,w
 16445     1458  3A80               	xorlw	128
 16446     1459  00AA               	movwf	??_xtoa
 16447     145A  3080               	movlw	128
 16448     145B  022A               	subwf	??_xtoa,w
 16449     145C  1D03               	skipz
 16450     145D  2C60               	goto	u470_25
 16451     145E  3002               	movlw	2
 16452     145F  0231               	subwf	xtoa@i,w
 16453     1460                     u470_25:
 16454     1460  1C03               	skipc
 16455     1461  2C63               	goto	u470_21
 16456     1462  2C64               	goto	u470_20
 16457     1463                     u470_21:
 16458     1463  2C78               	goto	i1l5141
 16459     1464                     u470_20:
 16460     1464                     i1l5137:
 16461     1464  0020               	movlb	0	; select bank0
 16462     1465  0828               	movf	xtoa@d,w
 16463     1466  0429               	iorwf	xtoa@d+1,w
 16464     1467  1D03               	btfss	3,2
 16465     1468  2C6A               	goto	u471_21
 16466     1469  2C6B               	goto	u471_20
 16467     146A                     u471_21:
 16468     146A  2C27               	goto	i1l5117
 16469     146B                     u471_20:
 16470     146B                     i1l5139:
 16471     146B  082F               	movf	xtoa@p+1,w
 16472     146C  3A80               	xorlw	128
 16473     146D  00AA               	movwf	??_xtoa
 16474     146E  3080               	movlw	128
 16475     146F  022A               	subwf	??_xtoa,w
 16476     1470  1D03               	skipz
 16477     1471  2C74               	goto	u472_25
 16478     1472  3001               	movlw	1
 16479     1473  022E               	subwf	xtoa@p,w
 16480     1474                     u472_25:
 16481     1474  1803               	skipnc
 16482     1475  2C77               	goto	u472_21
 16483     1476  2C78               	goto	u472_20
 16484     1477                     u472_21:
 16485     1477  2C27               	goto	i1l5117
 16486     1478                     u472_20:
 16487     1478                     i1l5141:
 16488                           
 16489                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 16490     1478  0020               	movlb	0	; select bank0
 16491     1479  0831               	movf	xtoa@i,w
 16492     147A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 16493     147B  00FB               	movwf	pad@buf
 16494     147C  082C               	movf	xtoa@w+1,w
 16495     147D  00FD               	movwf	pad@p+1
 16496     147E  082B               	movf	xtoa@w,w
 16497     147F  00FC               	movwf	pad@p
 16498     1480  082D               	movf	xtoa@fp,w
 16499     1481  3190  2028  3194   	fcall	_pad
 16500     1484                     i1l1832:
 16501     1484  0008               	return
 16502     1485                     __end_of_xtoa:
 16503                           
 16504                           	psect	text82
 16505     11C6                     __ptext82:	
 16506 ;; *************** function _read_prec_or_width *****************
 16507 ;; Defined at:
 16508 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 16509 ;; Parameters:    Size  Location     Type
 16510 ;;  fmt             1    wreg     PTR PTR const unsigned c
 16511 ;;		 -> vfprintf@cfmt(2), 
 16512 ;;  ap              1    6[COMMON] PTR PTR void [1]
 16513 ;;		 -> sprintf@ap(1), 
 16514 ;; Auto vars:     Size  Location     Type
 16515 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
 16516 ;;		 -> vfprintf@cfmt(2), 
 16517 ;;  c               1    0[BANK0 ] unsigned char 
 16518 ;;  n               2    1[BANK0 ] int 
 16519 ;; Return value:  Size  Location     Type
 16520 ;;                  2    6[COMMON] int 
 16521 ;; Registers used:
 16522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16523 ;; Tracked objects:
 16524 ;;		On entry : 0/0
 16525 ;;		On exit  : 0/0
 16526 ;;		Unchanged: 0/0
 16527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16529 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16530 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16531 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16532 ;;Total ram usage:        9 bytes
 16533 ;; Hardware stack levels used: 1
 16534 ;; Hardware stack levels required when called: 1
 16535 ;; This function calls:
 16536 ;;		___wmul
 16537 ;; This function is called by:
 16538 ;;		_vfpfcnvrt
 16539 ;; This function uses a non-reentrant model
 16540 ;;
 16541                           
 16542     11C6                     _read_prec_or_width:	
 16543                           ;psect for function _read_prec_or_width
 16544                           
 16545                           
 16546                           ;incstack = 0
 16547                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16548                           ;read_prec_or_width@fmt stored from wreg
 16549     11C6  0020               	movlb	0	; select bank0
 16550     11C7  00A3               	movwf	read_prec_or_width@fmt
 16551     11C8                     i1l5145:
 16552                           
 16553                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 16554     11C8  01A1               	clrf	read_prec_or_width@n
 16555     11C9  01A2               	clrf	read_prec_or_width@n+1
 16556     11CA                     i1l5147:
 16557                           
 16558                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 16559     11CA  0823               	movf	read_prec_or_width@fmt,w
 16560     11CB  0086               	movwf	6
 16561     11CC  0187               	clrf	7
 16562     11CD  3F40               	moviw [0]fsr1
 16563     11CE  00F8               	movwf	??_read_prec_or_width
 16564     11CF  3F41               	moviw [1]fsr1
 16565     11D0  00F9               	movwf	??_read_prec_or_width+1
 16566     11D1  0878               	movf	??_read_prec_or_width,w
 16567     11D2  0084               	movwf	4
 16568     11D3  0879               	movf	??_read_prec_or_width+1,w
 16569     11D4  0085               	movwf	5
 16570     11D5  0012               	moviw fsr0++
 16571     11D6  3A2A               	xorlw	42
 16572     11D7  1D03               	btfss	3,2
 16573     11D8  29DA               	goto	u473_21
 16574     11D9  29DB               	goto	u473_20
 16575     11DA                     u473_21:
 16576     11DA  2A0E               	goto	i1l5157
 16577     11DB                     u473_20:
 16578     11DB                     i1l5149:
 16579                           
 16580                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 16581     11DB  0823               	movf	read_prec_or_width@fmt,w
 16582     11DC  0086               	movwf	6
 16583     11DD  0187               	clrf	7
 16584     11DE  3001               	movlw	1
 16585     11DF  0781               	addwf	1,f
 16586     11E0  3141               	addfsr 1,1
 16587     11E1  1803               	skipnc
 16588     11E2  0A81               	incf	1,f
 16589     11E3                     i1l5151:
 16590                           
 16591                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 16592     11E3  0876               	movf	read_prec_or_width@ap,w
 16593     11E4  0086               	movwf	6
 16594     11E5  3001               	movlw	1	; select bank2/3
 16595     11E6  0087               	movwf	7
 16596     11E7  0801               	movf	1,w
 16597     11E8  0084               	movwf	4
 16598     11E9  0185               	clrf	5
 16599     11EA  3002               	movlw	2
 16600     11EB  0781               	addwf	1,f
 16601     11EC  3F00               	moviw [0]fsr0
 16602     11ED  00A1               	movwf	read_prec_or_width@n
 16603     11EE  3F01               	moviw [1]fsr0
 16604     11EF  00A2               	movwf	read_prec_or_width@n+1
 16605                           
 16606                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 16607     11F0  2A22               	goto	i1l5159
 16608     11F1                     i1l5153:
 16609                           
 16610                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 16611     11F1  0820               	movf	read_prec_or_width@c,w
 16612     11F2  00F8               	movwf	??_read_prec_or_width
 16613     11F3  01F9               	clrf	??_read_prec_or_width+1
 16614     11F4  0822               	movf	read_prec_or_width@n+1,w
 16615     11F5  00F1               	movwf	___wmul@multiplier+1
 16616     11F6  0821               	movf	read_prec_or_width@n,w
 16617     11F7  00F0               	movwf	___wmul@multiplier
 16618     11F8  300A               	movlw	10
 16619     11F9  00F2               	movwf	___wmul@multiplicand
 16620     11FA  3000               	movlw	0
 16621     11FB  00F3               	movwf	___wmul@multiplicand+1
 16622     11FC  319E  264D  3191   	fcall	___wmul
 16623     11FF  0878               	movf	??_read_prec_or_width,w
 16624     1200  0770               	addwf	?___wmul,w
 16625     1201  0020               	movlb	0	; select bank0
 16626     1202  00A1               	movwf	read_prec_or_width@n
 16627     1203  0879               	movf	??_read_prec_or_width+1,w
 16628     1204  3D71               	addwfc	?___wmul+1,w
 16629     1205  00A2               	movwf	read_prec_or_width@n+1
 16630     1206                     i1l5155:
 16631                           
 16632                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 16633     1206  0823               	movf	read_prec_or_width@fmt,w
 16634     1207  0086               	movwf	6
 16635     1208  0187               	clrf	7
 16636     1209  3001               	movlw	1
 16637     120A  0781               	addwf	1,f
 16638     120B  3141               	addfsr 1,1
 16639     120C  1803               	skipnc
 16640     120D  0A81               	incf	1,f
 16641     120E                     i1l5157:
 16642                           
 16643                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 16644     120E  0823               	movf	read_prec_or_width@fmt,w
 16645     120F  0086               	movwf	6
 16646     1210  0187               	clrf	7
 16647     1211  3F40               	moviw [0]fsr1
 16648     1212  00F8               	movwf	??_read_prec_or_width
 16649     1213  3F41               	moviw [1]fsr1
 16650     1214  00F9               	movwf	??_read_prec_or_width+1
 16651     1215  0878               	movf	??_read_prec_or_width,w
 16652     1216  0084               	movwf	4
 16653     1217  0879               	movf	??_read_prec_or_width+1,w
 16654     1218  0085               	movwf	5
 16655     1219  0800               	movf	0,w	;code access
 16656     121A  3ED0               	addlw	208
 16657     121B  00A0               	movwf	read_prec_or_width@c
 16658     121C  300A               	movlw	10
 16659     121D  0220               	subwf	read_prec_or_width@c,w
 16660     121E  1C03               	skipc
 16661     121F  2A21               	goto	u474_21
 16662     1220  2A22               	goto	u474_20
 16663     1221                     u474_21:
 16664     1221  29F1               	goto	i1l5153
 16665     1222                     u474_20:
 16666     1222                     i1l5159:
 16667                           
 16668                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 16669     1222  0822               	movf	read_prec_or_width@n+1,w
 16670     1223  00F7               	movwf	?_read_prec_or_width+1
 16671     1224  0821               	movf	read_prec_or_width@n,w
 16672     1225  00F6               	movwf	?_read_prec_or_width
 16673     1226                     i1l1840:
 16674     1226  0008               	return
 16675     1227                     __end_of_read_prec_or_width:
 16676                           
 16677                           	psect	text83
 16678     1E4D                     __ptext83:	
 16679 ;; *************** function ___wmul *****************
 16680 ;; Defined at:
 16681 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 16682 ;; Parameters:    Size  Location     Type
 16683 ;;  multiplier      2    0[COMMON] unsigned int 
 16684 ;;  multiplicand    2    2[COMMON] unsigned int 
 16685 ;; Auto vars:     Size  Location     Type
 16686 ;;  product         2    4[COMMON] unsigned int 
 16687 ;; Return value:  Size  Location     Type
 16688 ;;                  2    0[COMMON] unsigned int 
 16689 ;; Registers used:
 16690 ;;		wreg, status,2, status,0
 16691 ;; Tracked objects:
 16692 ;;		On entry : 0/0
 16693 ;;		On exit  : 0/0
 16694 ;;		Unchanged: 0/0
 16695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16697 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16699 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16700 ;;Total ram usage:        6 bytes
 16701 ;; Hardware stack levels used: 1
 16702 ;; This function calls:
 16703 ;;		Nothing
 16704 ;; This function is called by:
 16705 ;;		_read_prec_or_width
 16706 ;; This function uses a non-reentrant model
 16707 ;;
 16708                           
 16709     1E4D                     ___wmul:	
 16710                           ;psect for function ___wmul
 16711                           
 16712     1E4D                     i1l4429:	
 16713                           ;incstack = 0
 16714                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16715                           
 16716     1E4D  01F4               	clrf	___wmul@product
 16717     1E4E  01F5               	clrf	___wmul@product+1
 16718     1E4F                     i1l4431:
 16719     1E4F  1C70               	btfss	___wmul@multiplier,0
 16720     1E50  2E52               	goto	u333_21
 16721     1E51  2E53               	goto	u333_20
 16722     1E52                     u333_21:
 16723     1E52  2E57               	goto	i1l1272
 16724     1E53                     u333_20:
 16725     1E53                     i1l4433:
 16726     1E53  0872               	movf	___wmul@multiplicand,w
 16727     1E54  07F4               	addwf	___wmul@product,f
 16728     1E55  0873               	movf	___wmul@multiplicand+1,w
 16729     1E56  3DF5               	addwfc	___wmul@product+1,f
 16730     1E57                     i1l1272:
 16731     1E57  3001               	movlw	1
 16732     1E58                     u334_25:
 16733     1E58  35F2               	lslf	___wmul@multiplicand,f
 16734     1E59  0DF3               	rlf	___wmul@multiplicand+1,f
 16735     1E5A  0B89               	decfsz	9,f
 16736     1E5B  2E58               	goto	u334_25
 16737     1E5C                     i1l4435:
 16738     1E5C  3001               	movlw	1
 16739     1E5D                     u335_25:
 16740     1E5D  36F1               	lsrf	___wmul@multiplier+1,f
 16741     1E5E  0CF0               	rrf	___wmul@multiplier,f
 16742     1E5F  0B89               	decfsz	9,f
 16743     1E60  2E5D               	goto	u335_25
 16744     1E61                     i1l4437:
 16745     1E61  0870               	movf	___wmul@multiplier,w
 16746     1E62  0471               	iorwf	___wmul@multiplier+1,w
 16747     1E63  1D03               	btfss	3,2
 16748     1E64  2E66               	goto	u336_21
 16749     1E65  2E67               	goto	u336_20
 16750     1E66                     u336_21:
 16751     1E66  2E4F               	goto	i1l4431
 16752     1E67                     u336_20:
 16753     1E67                     i1l4439:
 16754     1E67  0875               	movf	___wmul@product+1,w
 16755     1E68  00F1               	movwf	?___wmul+1
 16756     1E69  0874               	movf	___wmul@product,w
 16757     1E6A  00F0               	movwf	?___wmul
 16758     1E6B                     i1l1274:
 16759     1E6B  0008               	return
 16760     1E6C                     __end_of___wmul:
 16761                           
 16762                           	psect	text84
 16763     0083                     __ptext84:	
 16764 ;; *************** function _efgtoa *****************
 16765 ;; Defined at:
 16766 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 16767 ;; Parameters:    Size  Location     Type
 16768 ;;  fp              1    wreg     PTR struct _IO_FILE
 16769 ;;		 -> sprintf@f(11), 
 16770 ;;  f               4    0[BANK1 ] PTR struct _IO_FILE
 16771 ;;  c               1    4[BANK1 ] unsigned char 
 16772 ;; Auto vars:     Size  Location     Type
 16773 ;;  fp              1   24[BANK1 ] PTR struct _IO_FILE
 16774 ;;		 -> sprintf@f(11), 
 16775 ;;  u               4   50[BANK1 ] struct flui
 16776 ;;  g               4   46[BANK1 ] struct flui
 16777 ;;  l               4   39[BANK1 ] struct flui
 16778 ;;  h               4   35[BANK1 ] struct flui
 16779 ;;  ou              4   29[BANK1 ] struct flui
 16780 ;;  n               2   44[BANK1 ] int 
 16781 ;;  i               2   33[BANK1 ] int 
 16782 ;;  w               2   27[BANK1 ] int 
 16783 ;;  e               2   25[BANK1 ] int 
 16784 ;;  m               2   22[BANK1 ] int 
 16785 ;;  d               2   20[BANK1 ] int 
 16786 ;;  t               2   13[BANK1 ] int 
 16787 ;;  p               2   11[BANK1 ] int 
 16788 ;;  ne              2    9[BANK1 ] int 
 16789 ;;  sign            1   43[BANK1 ] unsigned char 
 16790 ;;  nmode           1   19[BANK1 ] unsigned char 
 16791 ;;  mode            1   18[BANK1 ] unsigned char 
 16792 ;;  pp              1   17[BANK1 ] unsigned char 
 16793 ;;  esign           1    0        unsigned char 
 16794 ;; Return value:  Size  Location     Type
 16795 ;;                  1    wreg      void 
 16796 ;; Registers used:
 16797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16798 ;; Tracked objects:
 16799 ;;		On entry : 0/0
 16800 ;;		On exit  : 0/0
 16801 ;;		Unchanged: 0/0
 16802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16803 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 16804 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0
 16805 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16806 ;;      Totals:         0       0      54       0       0       0       0       0       0       0       0       0       
      +0       0
 16807 ;;Total ram usage:       54 bytes
 16808 ;; Hardware stack levels used: 1
 16809 ;; Hardware stack levels required when called: 4
 16810 ;; This function calls:
 16811 ;;		___fladd
 16812 ;;		___fldiv
 16813 ;;		___fleq
 16814 ;;		___flge
 16815 ;;		___flmul
 16816 ;;		___flneg
 16817 ;;		___flsub
 16818 ;;		___fltol
 16819 ;;		___fpclassifyf
 16820 ;;		_floorf
 16821 ;;		_labs
 16822 ;;		_memcpy
 16823 ;;		_pad
 16824 ;;		_strcpy
 16825 ;; This function is called by:
 16826 ;;		_vfpfcnvrt
 16827 ;; This function uses a non-reentrant model
 16828 ;;
 16829                           
 16830     0083                     _efgtoa:	
 16831                           ;psect for function _efgtoa
 16832                           
 16833                           
 16834                           ;incstack = 0
 16835 ;; hardware stack exceeded
 16836                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16837                           ;efgtoa@fp stored from wreg
 16838     0083  0021               	movlb	1	; select bank1
 16839     0084  00B8               	movwf	efgtoa@fp^(0+128)
 16840     0085                     i1l4907:
 16841                           
 16842                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 16843     0085  01CB               	clrf	efgtoa@sign^(0+128)
 16844     0086                     i1l4909:
 16845                           
 16846                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 16847     0086  0823               	movf	(efgtoa@f+3)^(0+128),w
 16848     0087  00D1               	movwf	(efgtoa@g+3)^(0+128)
 16849     0088  0822               	movf	(efgtoa@f+2)^(0+128),w
 16850     0089  00D0               	movwf	(efgtoa@g+2)^(0+128)
 16851     008A  0821               	movf	(efgtoa@f+1)^(0+128),w
 16852     008B  00CF               	movwf	(efgtoa@g+1)^(0+128)
 16853     008C  0820               	movf	efgtoa@f^(0+128),w
 16854     008D  00CE               	movwf	efgtoa@g^(0+128)
 16855     008E                     i1l4911:
 16856                           
 16857                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 16858     008E  0851               	movf	(efgtoa@g+3)^(0+128),w
 16859     008F  0020               	movlb	0	; select bank0
 16860     0090  00C3               	movwf	___flge@ff1+3
 16861     0091  0021               	movlb	1	; select bank1
 16862     0092  0850               	movf	(efgtoa@g+2)^(0+128),w
 16863     0093  0020               	movlb	0	; select bank0
 16864     0094  00C2               	movwf	___flge@ff1+2
 16865     0095  0021               	movlb	1	; select bank1
 16866     0096  084F               	movf	(efgtoa@g+1)^(0+128),w
 16867     0097  0020               	movlb	0	; select bank0
 16868     0098  00C1               	movwf	___flge@ff1+1
 16869     0099  0021               	movlb	1	; select bank1
 16870     009A  084E               	movf	efgtoa@g^(0+128),w
 16871     009B  0020               	movlb	0	; select bank0
 16872     009C  00C0               	movwf	___flge@ff1
 16873     009D  3000               	movlw	0
 16874     009E  00C7               	movwf	___flge@ff2+3
 16875     009F  3000               	movlw	0
 16876     00A0  00C6               	movwf	___flge@ff2+2
 16877     00A1  3000               	movlw	0
 16878     00A2  00C5               	movwf	___flge@ff2+1
 16879     00A3  3000               	movlw	0
 16880     00A4  00C4               	movwf	___flge@ff2
 16881     00A5  3194  2485  3180   	fcall	___flge
 16882     00A8  1803               	btfsc	3,0
 16883     00A9  28AB               	goto	u436_21
 16884     00AA  28AC               	goto	u436_20
 16885     00AB                     u436_21:
 16886     00AB  28C3               	goto	i1l4917
 16887     00AC                     u436_20:
 16888     00AC                     i1l4913:
 16889                           
 16890                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 16891     00AC  0021               	movlb	1	; select bank1
 16892     00AD  01CB               	clrf	efgtoa@sign^(0+128)
 16893     00AE  0ACB               	incf	efgtoa@sign^(0+128),f
 16894     00AF                     i1l4915:
 16895                           
 16896                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 16897     00AF  0851               	movf	(efgtoa@g+3)^(0+128),w
 16898     00B0  00F3               	movwf	___flneg@f1+3
 16899     00B1  0850               	movf	(efgtoa@g+2)^(0+128),w
 16900     00B2  00F2               	movwf	___flneg@f1+2
 16901     00B3  084F               	movf	(efgtoa@g+1)^(0+128),w
 16902     00B4  00F1               	movwf	___flneg@f1+1
 16903     00B5  084E               	movf	efgtoa@g^(0+128),w
 16904     00B6  00F0               	movwf	___flneg@f1
 16905     00B7  319C  2409  3180   	fcall	___flneg
 16906     00BA  0873               	movf	?___flneg+3,w
 16907     00BB  0021               	movlb	1	; select bank1
 16908     00BC  00D1               	movwf	(efgtoa@g+3)^(0+128)
 16909     00BD  0872               	movf	?___flneg+2,w
 16910     00BE  00D0               	movwf	(efgtoa@g+2)^(0+128)
 16911     00BF  0871               	movf	?___flneg+1,w
 16912     00C0  00CF               	movwf	(efgtoa@g+1)^(0+128)
 16913     00C1  0870               	movf	?___flneg,w
 16914     00C2  00CE               	movwf	efgtoa@g^(0+128)
 16915     00C3                     i1l4917:
 16916                           
 16917                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 16918     00C3  0021               	movlb	1	; select bank1
 16919     00C4  01CC               	clrf	efgtoa@n^(0+128)
 16920     00C5  01CD               	clrf	(efgtoa@n+1)^(0+128)
 16921     00C6                     i1l4919:
 16922                           
 16923                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 16924     00C6  0022               	movlb	2	; select bank2
 16925     00C7  0856               	movf	(_width+1)^(0+256),w
 16926     00C8  0021               	movlb	1	; select bank1
 16927     00C9  00BC               	movwf	(efgtoa@w+1)^(0+128)
 16928     00CA  0022               	movlb	2	; select bank2
 16929     00CB  0855               	movf	_width^(0+256),w
 16930     00CC  0021               	movlb	1	; select bank1
 16931     00CD  00BB               	movwf	efgtoa@w^(0+128)
 16932     00CE                     i1l4921:
 16933                           
 16934                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
 16935     00CE  084B               	movf	efgtoa@sign^(0+128),w
 16936     00CF  1903               	btfsc	3,2
 16937     00D0  28D2               	goto	u437_21
 16938     00D1  28D3               	goto	u437_20
 16939     00D2                     u437_21:
 16940     00D2  28E3               	goto	i1l4929
 16941     00D3                     u437_20:
 16942     00D3                     i1l4923:
 16943                           
 16944                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 16945     00D3  084B               	movf	efgtoa@sign^(0+128),w
 16946     00D4  1D03               	btfss	3,2
 16947     00D5  28D7               	goto	u438_21
 16948     00D6  28D8               	goto	u438_20
 16949     00D7                     u438_21:
 16950     00D7  28DD               	goto	i1l4927
 16951     00D8                     u438_20:
 16952     00D8                     i1l4925:
 16953     00D8  302B               	movlw	43
 16954     00D9  00AF               	movwf	_efgtoa$3155^(0+128)
 16955     00DA  3000               	movlw	0
 16956     00DB  00B0               	movwf	(_efgtoa$3155^(0+128)+1)
 16957     00DC  28E1               	goto	i1l1774
 16958     00DD                     i1l4927:
 16959     00DD  302D               	movlw	45
 16960     00DE  00AF               	movwf	_efgtoa$3155^(0+128)
 16961     00DF  3000               	movlw	0
 16962     00E0  00B0               	movwf	(_efgtoa$3155^(0+128)+1)
 16963     00E1                     i1l1774:
 16964     00E1  082F               	movf	_efgtoa$3155^(0+128),w
 16965     00E2  00CB               	movwf	efgtoa@sign^(0+128)
 16966     00E3                     i1l4929:
 16967                           
 16968                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 16969     00E3  0851               	movf	(efgtoa@g+3)^(0+128),w
 16970     00E4  00F3               	movwf	___fpclassifyf@x+3
 16971     00E5  0850               	movf	(efgtoa@g+2)^(0+128),w
 16972     00E6  00F2               	movwf	___fpclassifyf@x+2
 16973     00E7  084F               	movf	(efgtoa@g+1)^(0+128),w
 16974     00E8  00F1               	movwf	___fpclassifyf@x+1
 16975     00E9  084E               	movf	efgtoa@g^(0+128),w
 16976     00EA  00F0               	movwf	___fpclassifyf@x
 16977     00EB  3193  2385  3180   	fcall	___fpclassifyf
 16978     00EE  0370               	decf	?___fpclassifyf,w
 16979     00EF  0471               	iorwf	?___fpclassifyf+1,w
 16980     00F0  1D03               	btfss	3,2
 16981     00F1  28F3               	goto	u439_21
 16982     00F2  28F4               	goto	u439_20
 16983     00F3                     u439_21:
 16984     00F3  291F               	goto	i1l4941
 16985     00F4                     u439_20:
 16986     00F4                     i1l4931:
 16987                           
 16988                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 16989     00F4  0021               	movlb	1	; select bank1
 16990     00F5  084B               	movf	efgtoa@sign^(0+128),w
 16991     00F6  1903               	btfsc	3,2
 16992     00F7  28F9               	goto	u440_21
 16993     00F8  28FA               	goto	u440_20
 16994     00F9                     u440_21:
 16995     00F9  2906               	goto	i1l4935
 16996     00FA                     u440_20:
 16997     00FA                     i1l4933:
 16998                           
 16999                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 17000     00FA  084B               	movf	efgtoa@sign^(0+128),w
 17001     00FB  0024               	movlb	4	; select bank4
 17002     00FC  00A0               	movwf	_dbuf^(0+512)
 17003                           
 17004                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
 17005     00FD  30FF               	movlw	255
 17006     00FE  0021               	movlb	1	; select bank1
 17007     00FF  07BB               	addwf	efgtoa@w^(0+128),f
 17008     0100  30FF               	movlw	255
 17009     0101  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 17010                           
 17011                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 17012     0102  3001               	movlw	1
 17013     0103  00CC               	movwf	efgtoa@n^(0+128)
 17014     0104  3000               	movlw	0
 17015     0105  00CD               	movwf	(efgtoa@n^(0+128)+1)
 17016     0106                     i1l4935:
 17017                           
 17018                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 17019     0106  30E0               	movlw	low (STR_9| (0+32768))
 17020     0107  00F0               	movwf	strcpy@src
 17021     0108  3098               	movlw	high (STR_9| (0+32768))
 17022     0109  00F1               	movwf	strcpy@src+1
 17023     010A  084C               	movf	efgtoa@n^(0+128),w
 17024     010B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17025     010C  319D  25FA  3180   	fcall	_strcpy
 17026     010F                     i1l4937:
 17027                           
 17028                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 17029     010F  30FD               	movlw	253
 17030     0110  0021               	movlb	1	; select bank1
 17031     0111  07BB               	addwf	efgtoa@w^(0+128),f
 17032     0112  30FF               	movlw	255
 17033     0113  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 17034                           
 17035                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 17036     0114  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 17037     0115  00FB               	movwf	pad@buf
 17038     0116  083C               	movf	(efgtoa@w+1)^(0+128),w
 17039     0117  00FD               	movwf	pad@p+1
 17040     0118  083B               	movf	efgtoa@w^(0+128),w
 17041     0119  00FC               	movwf	pad@p
 17042     011A  0838               	movf	efgtoa@fp^(0+128),w
 17043     011B  3190  2028  3180   	fcall	_pad
 17044     011E  2EA8               	goto	i1l1777
 17045     011F                     i1l4941:
 17046                           
 17047                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 17048     011F  0021               	movlb	1	; select bank1
 17049     0120  0851               	movf	(efgtoa@g+3)^(0+128),w
 17050     0121  00F3               	movwf	___fpclassifyf@x+3
 17051     0122  0850               	movf	(efgtoa@g+2)^(0+128),w
 17052     0123  00F2               	movwf	___fpclassifyf@x+2
 17053     0124  084F               	movf	(efgtoa@g+1)^(0+128),w
 17054     0125  00F1               	movwf	___fpclassifyf@x+1
 17055     0126  084E               	movf	efgtoa@g^(0+128),w
 17056     0127  00F0               	movwf	___fpclassifyf@x
 17057     0128  3193  2385  3180   	fcall	___fpclassifyf
 17058     012B  0870               	movf	?___fpclassifyf,w
 17059     012C  0471               	iorwf	?___fpclassifyf+1,w
 17060     012D  1D03               	btfss	3,2
 17061     012E  2930               	goto	u441_21
 17062     012F  2931               	goto	u441_20
 17063     0130                     u441_21:
 17064     0130  295C               	goto	i1l4953
 17065     0131                     u441_20:
 17066     0131                     i1l4943:
 17067                           
 17068                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 17069     0131  0021               	movlb	1	; select bank1
 17070     0132  084B               	movf	efgtoa@sign^(0+128),w
 17071     0133  1903               	btfsc	3,2
 17072     0134  2936               	goto	u442_21
 17073     0135  2937               	goto	u442_20
 17074     0136                     u442_21:
 17075     0136  2943               	goto	i1l4947
 17076     0137                     u442_20:
 17077     0137                     i1l4945:
 17078                           
 17079                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 17080     0137  084B               	movf	efgtoa@sign^(0+128),w
 17081     0138  0024               	movlb	4	; select bank4
 17082     0139  00A0               	movwf	_dbuf^(0+512)
 17083                           
 17084                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
 17085     013A  30FF               	movlw	255
 17086     013B  0021               	movlb	1	; select bank1
 17087     013C  07BB               	addwf	efgtoa@w^(0+128),f
 17088     013D  30FF               	movlw	255
 17089     013E  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 17090                           
 17091                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 17092     013F  3001               	movlw	1
 17093     0140  00CC               	movwf	efgtoa@n^(0+128)
 17094     0141  3000               	movlw	0
 17095     0142  00CD               	movwf	(efgtoa@n^(0+128)+1)
 17096     0143                     i1l4947:
 17097                           
 17098                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 17099     0143  30E4               	movlw	low (STR_12| (0+32768))
 17100     0144  00F0               	movwf	strcpy@src
 17101     0145  3098               	movlw	high (STR_12| (0+32768))
 17102     0146  00F1               	movwf	strcpy@src+1
 17103     0147  084C               	movf	efgtoa@n^(0+128),w
 17104     0148  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17105     0149  319D  25FA  3180   	fcall	_strcpy
 17106     014C                     i1l4949:
 17107                           
 17108                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 651:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 652:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
 17109     014C  30FD               	movlw	253
 17110     014D  0021               	movlb	1	; select bank1
 17111     014E  07BB               	addwf	efgtoa@w^(0+128),f
 17112     014F  30FF               	movlw	255
 17113     0150  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 17114                           
 17115                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 653:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 17116     0151  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 17117     0152  00FB               	movwf	pad@buf
 17118     0153  083C               	movf	(efgtoa@w+1)^(0+128),w
 17119     0154  00FD               	movwf	pad@p+1
 17120     0155  083B               	movf	efgtoa@w^(0+128),w
 17121     0156  00FC               	movwf	pad@p
 17122     0157  0838               	movf	efgtoa@fp^(0+128),w
 17123     0158  3190  2028  3180   	fcall	_pad
 17124     015B  2EA8               	goto	i1l1777
 17125     015C                     i1l4953:
 17126                           
 17127                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 17128     015C  303F               	movlw	63
 17129     015D  0021               	movlb	1	; select bank1
 17130     015E  00D5               	movwf	(efgtoa@u+3)^(0+128)
 17131     015F  3080               	movlw	128
 17132     0160  00D4               	movwf	(efgtoa@u+2)^(0+128)
 17133     0161  3000               	movlw	0
 17134     0162  00D3               	movwf	(efgtoa@u+1)^(0+128)
 17135     0163  3000               	movlw	0
 17136     0164  00D2               	movwf	efgtoa@u^(0+128)
 17137     0165                     i1l4955:
 17138                           
 17139                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 17140     0165  01B9               	clrf	efgtoa@e^(0+128)
 17141     0166  01BA               	clrf	(efgtoa@e+1)^(0+128)
 17142     0167                     i1l4957:
 17143                           
 17144                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 17145     0167  0851               	movf	(efgtoa@g+3)^(0+128),w
 17146     0168  00F3               	movwf	___fleq@ff1+3
 17147     0169  0850               	movf	(efgtoa@g+2)^(0+128),w
 17148     016A  00F2               	movwf	___fleq@ff1+2
 17149     016B  084F               	movf	(efgtoa@g+1)^(0+128),w
 17150     016C  00F1               	movwf	___fleq@ff1+1
 17151     016D  084E               	movf	efgtoa@g^(0+128),w
 17152     016E  00F0               	movwf	___fleq@ff1
 17153     016F  3000               	movlw	0
 17154     0170  00F7               	movwf	___fleq@ff2+3
 17155     0171  3000               	movlw	0
 17156     0172  00F6               	movwf	___fleq@ff2+2
 17157     0173  3000               	movlw	0
 17158     0174  00F5               	movwf	___fleq@ff2+1
 17159     0175  3000               	movlw	0
 17160     0176  00F4               	movwf	___fleq@ff2
 17161     0177  3191  2122  3180   	fcall	___fleq
 17162     017A  1803               	btfsc	3,0
 17163     017B  297D               	goto	u443_21
 17164     017C  297E               	goto	u443_20
 17165     017D                     u443_21:
 17166     017D  2ABA               	goto	i1l4983
 17167     017E                     u443_20:
 17168     017E  298C               	goto	i1l4963
 17169     017F                     i1l4961:
 17170                           
 17171                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 17172     017F  0021               	movlb	1	; select bank1
 17173     0180  0840               	movf	(efgtoa@ou+3)^(0+128),w
 17174     0181  00D5               	movwf	(efgtoa@u+3)^(0+128)
 17175     0182  083F               	movf	(efgtoa@ou+2)^(0+128),w
 17176     0183  00D4               	movwf	(efgtoa@u+2)^(0+128)
 17177     0184  083E               	movf	(efgtoa@ou+1)^(0+128),w
 17178     0185  00D3               	movwf	(efgtoa@u+1)^(0+128)
 17179     0186  083D               	movf	efgtoa@ou^(0+128),w
 17180     0187  00D2               	movwf	efgtoa@u^(0+128)
 17181                           
 17182                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
 17183     0188  3001               	movlw	1
 17184     0189  07B9               	addwf	efgtoa@e^(0+128),f
 17185     018A  3000               	movlw	0
 17186     018B  3DBA               	addwfc	(efgtoa@e+1)^(0+128),f
 17187     018C                     i1l4963:
 17188                           
 17189                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 17190     018C  3041               	movlw	65
 17191     018D  0020               	movlb	0	; select bank0
 17192     018E  00A9               	movwf	___flmul@b+3
 17193     018F  3020               	movlw	32
 17194     0190  00A8               	movwf	___flmul@b+2
 17195     0191  3000               	movlw	0
 17196     0192  00A7               	movwf	___flmul@b+1
 17197     0193  3000               	movlw	0
 17198     0194  00A6               	movwf	___flmul@b
 17199     0195  0021               	movlb	1	; select bank1
 17200     0196  0855               	movf	(efgtoa@u+3)^(0+128),w
 17201     0197  0020               	movlb	0	; select bank0
 17202     0198  00AD               	movwf	___flmul@a+3
 17203     0199  0021               	movlb	1	; select bank1
 17204     019A  0854               	movf	(efgtoa@u+2)^(0+128),w
 17205     019B  0020               	movlb	0	; select bank0
 17206     019C  00AC               	movwf	___flmul@a+2
 17207     019D  0021               	movlb	1	; select bank1
 17208     019E  0853               	movf	(efgtoa@u+1)^(0+128),w
 17209     019F  0020               	movlb	0	; select bank0
 17210     01A0  00AB               	movwf	___flmul@a+1
 17211     01A1  0021               	movlb	1	; select bank1
 17212     01A2  0852               	movf	efgtoa@u^(0+128),w
 17213     01A3  0020               	movlb	0	; select bank0
 17214     01A4  00AA               	movwf	___flmul@a
 17215     01A5  318D  25C5  3180   	fcall	___flmul
 17216     01A8  0020               	movlb	0	; select bank0
 17217     01A9  0829               	movf	?___flmul+3,w
 17218     01AA  0021               	movlb	1	; select bank1
 17219     01AB  00C0               	movwf	(efgtoa@ou+3)^(0+128)
 17220     01AC  0020               	movlb	0	; select bank0
 17221     01AD  0828               	movf	?___flmul+2,w
 17222     01AE  0021               	movlb	1	; select bank1
 17223     01AF  00BF               	movwf	(efgtoa@ou+2)^(0+128)
 17224     01B0  0020               	movlb	0	; select bank0
 17225     01B1  0827               	movf	?___flmul+1,w
 17226     01B2  0021               	movlb	1	; select bank1
 17227     01B3  00BE               	movwf	(efgtoa@ou+1)^(0+128)
 17228     01B4  0020               	movlb	0	; select bank0
 17229     01B5  0826               	movf	?___flmul,w
 17230     01B6  0021               	movlb	1	; select bank1
 17231     01B7  00BD               	movwf	efgtoa@ou^(0+128)
 17232     01B8                     i1l4965:
 17233     01B8  083D               	movf	efgtoa@ou^(0+128),w
 17234     01B9  024E               	subwf	efgtoa@g^(0+128),w
 17235     01BA  00A5               	movwf	??_efgtoa^(0+128)
 17236     01BB  083E               	movf	(efgtoa@ou+1)^(0+128),w
 17237     01BC  3B4F               	subwfb	(efgtoa@g+1)^(0+128),w
 17238     01BD  00A6               	movwf	(??_efgtoa^(0+128)+1)
 17239     01BE  083F               	movf	(efgtoa@ou+2)^(0+128),w
 17240     01BF  3B50               	subwfb	(efgtoa@g+2)^(0+128),w
 17241     01C0  00A7               	movwf	(??_efgtoa^(0+128)+2)
 17242     01C1  0840               	movf	(efgtoa@ou+3)^(0+128),w
 17243     01C2  3B51               	subwfb	(efgtoa@g+3)^(0+128),w
 17244     01C3  00A8               	movwf	(??_efgtoa^(0+128)+3)
 17245     01C4  0828               	movf	(??_efgtoa+3)^(0+128),w
 17246     01C5  00F3               	movwf	labs@a+3
 17247     01C6  0827               	movf	(??_efgtoa+2)^(0+128),w
 17248     01C7  00F2               	movwf	labs@a+2
 17249     01C8  0826               	movf	(??_efgtoa+1)^(0+128),w
 17250     01C9  00F1               	movwf	labs@a+1
 17251     01CA  0825               	movf	??_efgtoa^(0+128),w
 17252     01CB  00F0               	movwf	labs@a
 17253     01CC  319D  2517  3180   	fcall	_labs
 17254     01CF  1BF3               	btfsc	?_labs+3,7
 17255     01D0  29DF               	goto	u444_21
 17256     01D1  0873               	movf	?_labs+3,w
 17257     01D2  1D03               	btfss	3,2
 17258     01D3  29E0               	goto	u444_20
 17259     01D4  0872               	movf	?_labs+2,w
 17260     01D5  1D03               	btfss	3,2
 17261     01D6  29E0               	goto	u444_20
 17262     01D7  0871               	movf	?_labs+1,w
 17263     01D8  1D03               	btfss	3,2
 17264     01D9  29E0               	goto	u444_20
 17265     01DA  3002               	movlw	2
 17266     01DB  0270               	subwf	?_labs,w
 17267     01DC  1C03               	btfss	3,0
 17268     01DD  29DF               	goto	u444_21
 17269     01DE  29E0               	goto	u444_20
 17270     01DF                     u444_21:
 17271     01DF  297F               	goto	i1l4961
 17272     01E0                     u444_20:
 17273     01E0                     i1l4967:
 17274     01E0  0021               	movlb	1	; select bank1
 17275     01E1  0840               	movf	(efgtoa@ou+3)^(0+128),w
 17276     01E2  0020               	movlb	0	; select bank0
 17277     01E3  00C3               	movwf	___flge@ff1+3
 17278     01E4  0021               	movlb	1	; select bank1
 17279     01E5  083F               	movf	(efgtoa@ou+2)^(0+128),w
 17280     01E6  0020               	movlb	0	; select bank0
 17281     01E7  00C2               	movwf	___flge@ff1+2
 17282     01E8  0021               	movlb	1	; select bank1
 17283     01E9  083E               	movf	(efgtoa@ou+1)^(0+128),w
 17284     01EA  0020               	movlb	0	; select bank0
 17285     01EB  00C1               	movwf	___flge@ff1+1
 17286     01EC  0021               	movlb	1	; select bank1
 17287     01ED  083D               	movf	efgtoa@ou^(0+128),w
 17288     01EE  0020               	movlb	0	; select bank0
 17289     01EF  00C0               	movwf	___flge@ff1
 17290     01F0  0021               	movlb	1	; select bank1
 17291     01F1  0851               	movf	(efgtoa@g+3)^(0+128),w
 17292     01F2  0020               	movlb	0	; select bank0
 17293     01F3  00C7               	movwf	___flge@ff2+3
 17294     01F4  0021               	movlb	1	; select bank1
 17295     01F5  0850               	movf	(efgtoa@g+2)^(0+128),w
 17296     01F6  0020               	movlb	0	; select bank0
 17297     01F7  00C6               	movwf	___flge@ff2+2
 17298     01F8  0021               	movlb	1	; select bank1
 17299     01F9  084F               	movf	(efgtoa@g+1)^(0+128),w
 17300     01FA  0020               	movlb	0	; select bank0
 17301     01FB  00C5               	movwf	___flge@ff2+1
 17302     01FC  0021               	movlb	1	; select bank1
 17303     01FD  084E               	movf	efgtoa@g^(0+128),w
 17304     01FE  0020               	movlb	0	; select bank0
 17305     01FF  00C4               	movwf	___flge@ff2
 17306     0200  3194  2485  3180   	fcall	___flge
 17307     0203  1C03               	btfss	3,0
 17308     0204  2A06               	goto	u445_21
 17309     0205  2A07               	goto	u445_20
 17310     0206                     u445_21:
 17311     0206  297F               	goto	i1l4961
 17312     0207                     u445_20:
 17313     0207                     i1l4969:
 17314                           
 17315                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 17316     0207  0021               	movlb	1	; select bank1
 17317     0208  0852               	movf	efgtoa@u^(0+128),w
 17318     0209  024E               	subwf	efgtoa@g^(0+128),w
 17319     020A  00A5               	movwf	??_efgtoa^(0+128)
 17320     020B  0853               	movf	(efgtoa@u+1)^(0+128),w
 17321     020C  3B4F               	subwfb	(efgtoa@g+1)^(0+128),w
 17322     020D  00A6               	movwf	(??_efgtoa^(0+128)+1)
 17323     020E  0854               	movf	(efgtoa@u+2)^(0+128),w
 17324     020F  3B50               	subwfb	(efgtoa@g+2)^(0+128),w
 17325     0210  00A7               	movwf	(??_efgtoa^(0+128)+2)
 17326     0211  0855               	movf	(efgtoa@u+3)^(0+128),w
 17327     0212  3B51               	subwfb	(efgtoa@g+3)^(0+128),w
 17328     0213  00A8               	movwf	(??_efgtoa^(0+128)+3)
 17329     0214  0828               	movf	(??_efgtoa+3)^(0+128),w
 17330     0215  00F3               	movwf	labs@a+3
 17331     0216  0827               	movf	(??_efgtoa+2)^(0+128),w
 17332     0217  00F2               	movwf	labs@a+2
 17333     0218  0826               	movf	(??_efgtoa+1)^(0+128),w
 17334     0219  00F1               	movwf	labs@a+1
 17335     021A  0825               	movf	??_efgtoa^(0+128),w
 17336     021B  00F0               	movwf	labs@a
 17337     021C  319D  2517  3180   	fcall	_labs
 17338     021F  1BF3               	btfsc	?_labs+3,7
 17339     0220  2A30               	goto	u446_20
 17340     0221  0873               	movf	?_labs+3,w
 17341     0222  1D03               	btfss	3,2
 17342     0223  2A2F               	goto	u446_21
 17343     0224  0872               	movf	?_labs+2,w
 17344     0225  1D03               	btfss	3,2
 17345     0226  2A2F               	goto	u446_21
 17346     0227  0871               	movf	?_labs+1,w
 17347     0228  1D03               	btfss	3,2
 17348     0229  2A2F               	goto	u446_21
 17349     022A  3002               	movlw	2
 17350     022B  0270               	subwf	?_labs,w
 17351     022C  1803               	btfsc	3,0
 17352     022D  2A2F               	goto	u446_21
 17353     022E  2A30               	goto	u446_20
 17354     022F                     u446_21:
 17355     022F  2A93               	goto	i1l4981
 17356     0230                     u446_20:
 17357     0230                     i1l4971:
 17358                           
 17359                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
 17360     0230  0021               	movlb	1	; select bank1
 17361     0231  0855               	movf	(efgtoa@u+3)^(0+128),w
 17362     0232  00D1               	movwf	(efgtoa@g+3)^(0+128)
 17363     0233  0854               	movf	(efgtoa@u+2)^(0+128),w
 17364     0234  00D0               	movwf	(efgtoa@g+2)^(0+128)
 17365     0235  0853               	movf	(efgtoa@u+1)^(0+128),w
 17366     0236  00CF               	movwf	(efgtoa@g+1)^(0+128)
 17367     0237  0852               	movf	efgtoa@u^(0+128),w
 17368     0238  00CE               	movwf	efgtoa@g^(0+128)
 17369                           
 17370                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
 17371     0239  2ABA               	goto	i1l4983
 17372     023A                     i1l4973:
 17373                           
 17374                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 17375     023A  3041               	movlw	65
 17376     023B  0020               	movlb	0	; select bank0
 17377     023C  00C3               	movwf	___fldiv@a+3
 17378     023D  3020               	movlw	32
 17379     023E  00C2               	movwf	___fldiv@a+2
 17380     023F  3000               	movlw	0
 17381     0240  00C1               	movwf	___fldiv@a+1
 17382     0241  3000               	movlw	0
 17383     0242  00C0               	movwf	___fldiv@a
 17384     0243  0021               	movlb	1	; select bank1
 17385     0244  0855               	movf	(efgtoa@u+3)^(0+128),w
 17386     0245  0020               	movlb	0	; select bank0
 17387     0246  00C7               	movwf	___fldiv@b+3
 17388     0247  0021               	movlb	1	; select bank1
 17389     0248  0854               	movf	(efgtoa@u+2)^(0+128),w
 17390     0249  0020               	movlb	0	; select bank0
 17391     024A  00C6               	movwf	___fldiv@b+2
 17392     024B  0021               	movlb	1	; select bank1
 17393     024C  0853               	movf	(efgtoa@u+1)^(0+128),w
 17394     024D  0020               	movlb	0	; select bank0
 17395     024E  00C5               	movwf	___fldiv@b+1
 17396     024F  0021               	movlb	1	; select bank1
 17397     0250  0852               	movf	efgtoa@u^(0+128),w
 17398     0251  0020               	movlb	0	; select bank0
 17399     0252  00C4               	movwf	___fldiv@b
 17400     0253  3188  2057  3180   	fcall	___fldiv
 17401     0256  0020               	movlb	0	; select bank0
 17402     0257  0843               	movf	?___fldiv+3,w
 17403     0258  0021               	movlb	1	; select bank1
 17404     0259  00D5               	movwf	(efgtoa@u+3)^(0+128)
 17405     025A  0020               	movlb	0	; select bank0
 17406     025B  0842               	movf	?___fldiv+2,w
 17407     025C  0021               	movlb	1	; select bank1
 17408     025D  00D4               	movwf	(efgtoa@u+2)^(0+128)
 17409     025E  0020               	movlb	0	; select bank0
 17410     025F  0841               	movf	?___fldiv+1,w
 17411     0260  0021               	movlb	1	; select bank1
 17412     0261  00D3               	movwf	(efgtoa@u+1)^(0+128)
 17413     0262  0020               	movlb	0	; select bank0
 17414     0263  0840               	movf	?___fldiv,w
 17415     0264  0021               	movlb	1	; select bank1
 17416     0265  00D2               	movwf	efgtoa@u^(0+128)
 17417     0266                     i1l4975:
 17418                           
 17419                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
 17420     0266  30FF               	movlw	255
 17421     0267  07B9               	addwf	efgtoa@e^(0+128),f
 17422     0268  30FF               	movlw	255
 17423     0269  3DBA               	addwfc	(efgtoa@e+1)^(0+128),f
 17424     026A                     i1l4977:
 17425                           
 17426                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 17427     026A  0852               	movf	efgtoa@u^(0+128),w
 17428     026B  024E               	subwf	efgtoa@g^(0+128),w
 17429     026C  00A5               	movwf	??_efgtoa^(0+128)
 17430     026D  0853               	movf	(efgtoa@u+1)^(0+128),w
 17431     026E  3B4F               	subwfb	(efgtoa@g+1)^(0+128),w
 17432     026F  00A6               	movwf	(??_efgtoa^(0+128)+1)
 17433     0270  0854               	movf	(efgtoa@u+2)^(0+128),w
 17434     0271  3B50               	subwfb	(efgtoa@g+2)^(0+128),w
 17435     0272  00A7               	movwf	(??_efgtoa^(0+128)+2)
 17436     0273  0855               	movf	(efgtoa@u+3)^(0+128),w
 17437     0274  3B51               	subwfb	(efgtoa@g+3)^(0+128),w
 17438     0275  00A8               	movwf	(??_efgtoa^(0+128)+3)
 17439     0276  0828               	movf	(??_efgtoa+3)^(0+128),w
 17440     0277  00F3               	movwf	labs@a+3
 17441     0278  0827               	movf	(??_efgtoa+2)^(0+128),w
 17442     0279  00F2               	movwf	labs@a+2
 17443     027A  0826               	movf	(??_efgtoa+1)^(0+128),w
 17444     027B  00F1               	movwf	labs@a+1
 17445     027C  0825               	movf	??_efgtoa^(0+128),w
 17446     027D  00F0               	movwf	labs@a
 17447     027E  319D  2517  3180   	fcall	_labs
 17448     0281  1BF3               	btfsc	?_labs+3,7
 17449     0282  2A92               	goto	u447_20
 17450     0283  0873               	movf	?_labs+3,w
 17451     0284  1D03               	btfss	3,2
 17452     0285  2A91               	goto	u447_21
 17453     0286  0872               	movf	?_labs+2,w
 17454     0287  1D03               	btfss	3,2
 17455     0288  2A91               	goto	u447_21
 17456     0289  0871               	movf	?_labs+1,w
 17457     028A  1D03               	btfss	3,2
 17458     028B  2A91               	goto	u447_21
 17459     028C  3002               	movlw	2
 17460     028D  0270               	subwf	?_labs,w
 17461     028E  1803               	btfsc	3,0
 17462     028F  2A91               	goto	u447_21
 17463     0290  2A92               	goto	u447_20
 17464     0291                     u447_21:
 17465     0291  2A93               	goto	i1l4981
 17466     0292                     u447_20:
 17467     0292  2A30               	goto	i1l4971
 17468     0293                     i1l4981:
 17469                           
 17470                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 17471     0293  0021               	movlb	1	; select bank1
 17472     0294  0851               	movf	(efgtoa@g+3)^(0+128),w
 17473     0295  0020               	movlb	0	; select bank0
 17474     0296  00C3               	movwf	___flge@ff1+3
 17475     0297  0021               	movlb	1	; select bank1
 17476     0298  0850               	movf	(efgtoa@g+2)^(0+128),w
 17477     0299  0020               	movlb	0	; select bank0
 17478     029A  00C2               	movwf	___flge@ff1+2
 17479     029B  0021               	movlb	1	; select bank1
 17480     029C  084F               	movf	(efgtoa@g+1)^(0+128),w
 17481     029D  0020               	movlb	0	; select bank0
 17482     029E  00C1               	movwf	___flge@ff1+1
 17483     029F  0021               	movlb	1	; select bank1
 17484     02A0  084E               	movf	efgtoa@g^(0+128),w
 17485     02A1  0020               	movlb	0	; select bank0
 17486     02A2  00C0               	movwf	___flge@ff1
 17487     02A3  0021               	movlb	1	; select bank1
 17488     02A4  0855               	movf	(efgtoa@u+3)^(0+128),w
 17489     02A5  0020               	movlb	0	; select bank0
 17490     02A6  00C7               	movwf	___flge@ff2+3
 17491     02A7  0021               	movlb	1	; select bank1
 17492     02A8  0854               	movf	(efgtoa@u+2)^(0+128),w
 17493     02A9  0020               	movlb	0	; select bank0
 17494     02AA  00C6               	movwf	___flge@ff2+2
 17495     02AB  0021               	movlb	1	; select bank1
 17496     02AC  0853               	movf	(efgtoa@u+1)^(0+128),w
 17497     02AD  0020               	movlb	0	; select bank0
 17498     02AE  00C5               	movwf	___flge@ff2+1
 17499     02AF  0021               	movlb	1	; select bank1
 17500     02B0  0852               	movf	efgtoa@u^(0+128),w
 17501     02B1  0020               	movlb	0	; select bank0
 17502     02B2  00C4               	movwf	___flge@ff2
 17503     02B3  3194  2485  3180   	fcall	___flge
 17504     02B6  1C03               	btfss	3,0
 17505     02B7  2AB9               	goto	u448_21
 17506     02B8  2ABA               	goto	u448_20
 17507     02B9                     u448_21:
 17508     02B9  2A3A               	goto	i1l4973
 17509     02BA                     u448_20:
 17510     02BA                     i1l4983:
 17511                           
 17512                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 17513     02BA  0021               	movlb	1	; select bank1
 17514     02BB  0824               	movf	efgtoa@c^(0+128),w
 17515     02BC  00B2               	movwf	efgtoa@mode^(0+128)
 17516                           
 17517                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 17518     02BD  0832               	movf	efgtoa@mode^(0+128),w
 17519     02BE  00B3               	movwf	efgtoa@nmode^(0+128)
 17520     02BF                     i1l4985:
 17521                           
 17522                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 17523     02BF  0022               	movlb	2	; select bank2
 17524     02C0  1BD8               	btfsc	(_prec+1)^(0+256),7
 17525     02C1  2AC3               	goto	u449_21
 17526     02C2  2AC4               	goto	u449_20
 17527     02C3                     u449_21:
 17528     02C3  2ACC               	goto	i1l4989
 17529     02C4                     u449_20:
 17530     02C4                     i1l4987:
 17531     02C4  0858               	movf	(_prec+1)^(0+256),w
 17532     02C5  0021               	movlb	1	; select bank1
 17533     02C6  00AC               	movwf	(efgtoa@p+1)^(0+128)
 17534     02C7  0022               	movlb	2	; select bank2
 17535     02C8  0857               	movf	_prec^(0+256),w
 17536     02C9  0021               	movlb	1	; select bank1
 17537     02CA  00AB               	movwf	efgtoa@p^(0+128)
 17538     02CB  2AD1               	goto	i1l1793
 17539     02CC                     i1l4989:
 17540     02CC  3006               	movlw	6
 17541     02CD  0021               	movlb	1	; select bank1
 17542     02CE  00AB               	movwf	efgtoa@p^(0+128)
 17543     02CF  3000               	movlw	0
 17544     02D0  00AC               	movwf	(efgtoa@p^(0+128)+1)
 17545     02D1                     i1l1793:
 17546                           
 17547                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
 17548     02D1  082C               	movf	(efgtoa@p+1)^(0+128),w
 17549     02D2  00B7               	movwf	(efgtoa@m+1)^(0+128)
 17550     02D3  082B               	movf	efgtoa@p^(0+128),w
 17551     02D4  00B6               	movwf	efgtoa@m^(0+128)
 17552                           
 17553                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
 17554     02D5  3001               	movlw	1
 17555     02D6  07B6               	addwf	efgtoa@m^(0+128),f
 17556     02D7  3000               	movlw	0
 17557     02D8  3DB7               	addwfc	(efgtoa@m+1)^(0+128),f
 17558     02D9                     i1l4991:
 17559                           
 17560                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 17561     02D9  3066               	movlw	102
 17562     02DA  0633               	xorwf	efgtoa@nmode^(0+128),w
 17563     02DB  1D03               	btfss	3,2
 17564     02DC  2ADE               	goto	u450_21
 17565     02DD  2ADF               	goto	u450_20
 17566     02DE                     u450_21:
 17567     02DE  2AF7               	goto	i1l5003
 17568     02DF                     u450_20:
 17569     02DF                     i1l4993:
 17570                           
 17571                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 17572     02DF  1FBA               	btfss	(efgtoa@e+1)^(0+128),7
 17573     02E0  2AE2               	goto	u451_21
 17574     02E1  2AE3               	goto	u451_20
 17575     02E2                     u451_21:
 17576     02E2  2AED               	goto	i1l4999
 17577     02E3                     u451_20:
 17578     02E3                     i1l4995:
 17579                           
 17580                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 17581     02E3  303F               	movlw	63
 17582     02E4  00D5               	movwf	(efgtoa@u+3)^(0+128)
 17583     02E5  3080               	movlw	128
 17584     02E6  00D4               	movwf	(efgtoa@u+2)^(0+128)
 17585     02E7  3000               	movlw	0
 17586     02E8  00D3               	movwf	(efgtoa@u+1)^(0+128)
 17587     02E9  3000               	movlw	0
 17588     02EA  00D2               	movwf	efgtoa@u^(0+128)
 17589     02EB                     i1l4997:
 17590                           
 17591                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 17592     02EB  01B9               	clrf	efgtoa@e^(0+128)
 17593     02EC  01BA               	clrf	(efgtoa@e+1)^(0+128)
 17594     02ED                     i1l4999:
 17595                           
 17596                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 17597     02ED  3067               	movlw	103
 17598     02EE  0632               	xorwf	efgtoa@mode^(0+128),w
 17599     02EF  1903               	btfsc	3,2
 17600     02F0  2AF2               	goto	u452_21
 17601     02F1  2AF3               	goto	u452_20
 17602     02F2                     u452_21:
 17603     02F2  2AF7               	goto	i1l5003
 17604     02F3                     u452_20:
 17605     02F3                     i1l5001:
 17606                           
 17607                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 17608     02F3  0839               	movf	efgtoa@e^(0+128),w
 17609     02F4  07B6               	addwf	efgtoa@m^(0+128),f
 17610     02F5  083A               	movf	(efgtoa@e+1)^(0+128),w
 17611     02F6  3DB7               	addwfc	(efgtoa@m+1)^(0+128),f
 17612     02F7                     i1l5003:
 17613                           
 17614                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 17615     02F7  01C1               	clrf	efgtoa@i^(0+128)
 17616     02F8  01C2               	clrf	(efgtoa@i+1)^(0+128)
 17617     02F9                     i1l5005:
 17618                           
 17619                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 17620     02F9  0851               	movf	(efgtoa@g+3)^(0+128),w
 17621     02FA  00C6               	movwf	(efgtoa@h+3)^(0+128)
 17622     02FB  0850               	movf	(efgtoa@g+2)^(0+128),w
 17623     02FC  00C5               	movwf	(efgtoa@h+2)^(0+128)
 17624     02FD  084F               	movf	(efgtoa@g+1)^(0+128),w
 17625     02FE  00C4               	movwf	(efgtoa@h+1)^(0+128)
 17626     02FF  084E               	movf	efgtoa@g^(0+128),w
 17627     0300  00C3               	movwf	efgtoa@h^(0+128)
 17628     0301                     i1l5007:
 17629                           
 17630                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 17631     0301  0855               	movf	(efgtoa@u+3)^(0+128),w
 17632     0302  00C0               	movwf	(efgtoa@ou+3)^(0+128)
 17633     0303  0854               	movf	(efgtoa@u+2)^(0+128),w
 17634     0304  00BF               	movwf	(efgtoa@ou+2)^(0+128)
 17635     0305  0853               	movf	(efgtoa@u+1)^(0+128),w
 17636     0306  00BE               	movwf	(efgtoa@ou+1)^(0+128)
 17637     0307  0852               	movf	efgtoa@u^(0+128),w
 17638     0308  00BD               	movwf	efgtoa@ou^(0+128)
 17639                           
 17640                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 17641     0309  2BD7               	goto	i1l5013
 17642     030A                     i1l5009:
 17643                           
 17644                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 17645     030A  0021               	movlb	1	; select bank1
 17646     030B  0855               	movf	(efgtoa@u+3)^(0+128),w
 17647     030C  0020               	movlb	0	; select bank0
 17648     030D  00C3               	movwf	___fldiv@a+3
 17649     030E  0021               	movlb	1	; select bank1
 17650     030F  0854               	movf	(efgtoa@u+2)^(0+128),w
 17651     0310  0020               	movlb	0	; select bank0
 17652     0311  00C2               	movwf	___fldiv@a+2
 17653     0312  0021               	movlb	1	; select bank1
 17654     0313  0853               	movf	(efgtoa@u+1)^(0+128),w
 17655     0314  0020               	movlb	0	; select bank0
 17656     0315  00C1               	movwf	___fldiv@a+1
 17657     0316  0021               	movlb	1	; select bank1
 17658     0317  0852               	movf	efgtoa@u^(0+128),w
 17659     0318  0020               	movlb	0	; select bank0
 17660     0319  00C0               	movwf	___fldiv@a
 17661     031A  0021               	movlb	1	; select bank1
 17662     031B  0846               	movf	(efgtoa@h+3)^(0+128),w
 17663     031C  0020               	movlb	0	; select bank0
 17664     031D  00C7               	movwf	___fldiv@b+3
 17665     031E  0021               	movlb	1	; select bank1
 17666     031F  0845               	movf	(efgtoa@h+2)^(0+128),w
 17667     0320  0020               	movlb	0	; select bank0
 17668     0321  00C6               	movwf	___fldiv@b+2
 17669     0322  0021               	movlb	1	; select bank1
 17670     0323  0844               	movf	(efgtoa@h+1)^(0+128),w
 17671     0324  0020               	movlb	0	; select bank0
 17672     0325  00C5               	movwf	___fldiv@b+1
 17673     0326  0021               	movlb	1	; select bank1
 17674     0327  0843               	movf	efgtoa@h^(0+128),w
 17675     0328  0020               	movlb	0	; select bank0
 17676     0329  00C4               	movwf	___fldiv@b
 17677     032A  3188  2057  3180   	fcall	___fldiv
 17678     032D  0020               	movlb	0	; select bank0
 17679     032E  0843               	movf	?___fldiv+3,w
 17680     032F  00DD               	movwf	floorf@x+3
 17681     0330  0842               	movf	?___fldiv+2,w
 17682     0331  00DC               	movwf	floorf@x+2
 17683     0332  0841               	movf	?___fldiv+1,w
 17684     0333  00DB               	movwf	floorf@x+1
 17685     0334  0840               	movf	?___fldiv,w
 17686     0335  00DA               	movwf	floorf@x
 17687     0336  3186  26A9  3180   	fcall	_floorf
 17688     0339  0020               	movlb	0	; select bank0
 17689     033A  085D               	movf	?_floorf+3,w
 17690     033B  0021               	movlb	1	; select bank1
 17691     033C  00CA               	movwf	(efgtoa@l+3)^(0+128)
 17692     033D  0020               	movlb	0	; select bank0
 17693     033E  085C               	movf	?_floorf+2,w
 17694     033F  0021               	movlb	1	; select bank1
 17695     0340  00C9               	movwf	(efgtoa@l+2)^(0+128)
 17696     0341  0020               	movlb	0	; select bank0
 17697     0342  085B               	movf	?_floorf+1,w
 17698     0343  0021               	movlb	1	; select bank1
 17699     0344  00C8               	movwf	(efgtoa@l+1)^(0+128)
 17700     0345  0020               	movlb	0	; select bank0
 17701     0346  085A               	movf	?_floorf,w
 17702     0347  0021               	movlb	1	; select bank1
 17703     0348  00C7               	movwf	efgtoa@l^(0+128)
 17704                           
 17705                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 17706     0349  084A               	movf	(efgtoa@l+3)^(0+128),w
 17707     034A  00F3               	movwf	___fltol@f1+3
 17708     034B  0849               	movf	(efgtoa@l+2)^(0+128),w
 17709     034C  00F2               	movwf	___fltol@f1+2
 17710     034D  0848               	movf	(efgtoa@l+1)^(0+128),w
 17711     034E  00F1               	movwf	___fltol@f1+1
 17712     034F  0847               	movf	efgtoa@l^(0+128),w
 17713     0350  00F0               	movwf	___fltol@f1
 17714     0351  3192  2227  3180   	fcall	___fltol
 17715     0354  0871               	movf	?___fltol+1,w
 17716     0355  0021               	movlb	1	; select bank1
 17717     0356  00B5               	movwf	(efgtoa@d+1)^(0+128)
 17718     0357  0870               	movf	?___fltol,w
 17719     0358  00B4               	movwf	efgtoa@d^(0+128)
 17720                           
 17721                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 17722     0359  0855               	movf	(efgtoa@u+3)^(0+128),w
 17723     035A  0020               	movlb	0	; select bank0
 17724     035B  00AD               	movwf	___flmul@a+3
 17725     035C  0021               	movlb	1	; select bank1
 17726     035D  0854               	movf	(efgtoa@u+2)^(0+128),w
 17727     035E  0020               	movlb	0	; select bank0
 17728     035F  00AC               	movwf	___flmul@a+2
 17729     0360  0021               	movlb	1	; select bank1
 17730     0361  0853               	movf	(efgtoa@u+1)^(0+128),w
 17731     0362  0020               	movlb	0	; select bank0
 17732     0363  00AB               	movwf	___flmul@a+1
 17733     0364  0021               	movlb	1	; select bank1
 17734     0365  0852               	movf	efgtoa@u^(0+128),w
 17735     0366  0020               	movlb	0	; select bank0
 17736     0367  00AA               	movwf	___flmul@a
 17737     0368  0021               	movlb	1	; select bank1
 17738     0369  084A               	movf	(efgtoa@l+3)^(0+128),w
 17739     036A  0020               	movlb	0	; select bank0
 17740     036B  00A9               	movwf	___flmul@b+3
 17741     036C  0021               	movlb	1	; select bank1
 17742     036D  0849               	movf	(efgtoa@l+2)^(0+128),w
 17743     036E  0020               	movlb	0	; select bank0
 17744     036F  00A8               	movwf	___flmul@b+2
 17745     0370  0021               	movlb	1	; select bank1
 17746     0371  0848               	movf	(efgtoa@l+1)^(0+128),w
 17747     0372  0020               	movlb	0	; select bank0
 17748     0373  00A7               	movwf	___flmul@b+1
 17749     0374  0021               	movlb	1	; select bank1
 17750     0375  0847               	movf	efgtoa@l^(0+128),w
 17751     0376  0020               	movlb	0	; select bank0
 17752     0377  00A6               	movwf	___flmul@b
 17753     0378  318D  25C5  3180   	fcall	___flmul
 17754     037B  0020               	movlb	0	; select bank0
 17755     037C  0829               	movf	?___flmul+3,w
 17756     037D  00C3               	movwf	___flsub@a+3
 17757     037E  0828               	movf	?___flmul+2,w
 17758     037F  00C2               	movwf	___flsub@a+2
 17759     0380  0827               	movf	?___flmul+1,w
 17760     0381  00C1               	movwf	___flsub@a+1
 17761     0382  0826               	movf	?___flmul,w
 17762     0383  00C0               	movwf	___flsub@a
 17763     0384  0021               	movlb	1	; select bank1
 17764     0385  0846               	movf	(efgtoa@h+3)^(0+128),w
 17765     0386  0020               	movlb	0	; select bank0
 17766     0387  00C7               	movwf	___flsub@b+3
 17767     0388  0021               	movlb	1	; select bank1
 17768     0389  0845               	movf	(efgtoa@h+2)^(0+128),w
 17769     038A  0020               	movlb	0	; select bank0
 17770     038B  00C6               	movwf	___flsub@b+2
 17771     038C  0021               	movlb	1	; select bank1
 17772     038D  0844               	movf	(efgtoa@h+1)^(0+128),w
 17773     038E  0020               	movlb	0	; select bank0
 17774     038F  00C5               	movwf	___flsub@b+1
 17775     0390  0021               	movlb	1	; select bank1
 17776     0391  0843               	movf	efgtoa@h^(0+128),w
 17777     0392  0020               	movlb	0	; select bank0
 17778     0393  00C4               	movwf	___flsub@b
 17779     0394  319E  266C  3180   	fcall	___flsub
 17780     0397  0020               	movlb	0	; select bank0
 17781     0398  0843               	movf	?___flsub+3,w
 17782     0399  0021               	movlb	1	; select bank1
 17783     039A  00C6               	movwf	(efgtoa@h+3)^(0+128)
 17784     039B  0020               	movlb	0	; select bank0
 17785     039C  0842               	movf	?___flsub+2,w
 17786     039D  0021               	movlb	1	; select bank1
 17787     039E  00C5               	movwf	(efgtoa@h+2)^(0+128)
 17788     039F  0020               	movlb	0	; select bank0
 17789     03A0  0841               	movf	?___flsub+1,w
 17790     03A1  0021               	movlb	1	; select bank1
 17791     03A2  00C4               	movwf	(efgtoa@h+1)^(0+128)
 17792     03A3  0020               	movlb	0	; select bank0
 17793     03A4  0840               	movf	?___flsub,w
 17794     03A5  0021               	movlb	1	; select bank1
 17795     03A6  00C3               	movwf	efgtoa@h^(0+128)
 17796                           
 17797                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 17798     03A7  3041               	movlw	65
 17799     03A8  0020               	movlb	0	; select bank0
 17800     03A9  00C3               	movwf	___fldiv@a+3
 17801     03AA  3020               	movlw	32
 17802     03AB  00C2               	movwf	___fldiv@a+2
 17803     03AC  3000               	movlw	0
 17804     03AD  00C1               	movwf	___fldiv@a+1
 17805     03AE  3000               	movlw	0
 17806     03AF  00C0               	movwf	___fldiv@a
 17807     03B0  0021               	movlb	1	; select bank1
 17808     03B1  0855               	movf	(efgtoa@u+3)^(0+128),w
 17809     03B2  0020               	movlb	0	; select bank0
 17810     03B3  00C7               	movwf	___fldiv@b+3
 17811     03B4  0021               	movlb	1	; select bank1
 17812     03B5  0854               	movf	(efgtoa@u+2)^(0+128),w
 17813     03B6  0020               	movlb	0	; select bank0
 17814     03B7  00C6               	movwf	___fldiv@b+2
 17815     03B8  0021               	movlb	1	; select bank1
 17816     03B9  0853               	movf	(efgtoa@u+1)^(0+128),w
 17817     03BA  0020               	movlb	0	; select bank0
 17818     03BB  00C5               	movwf	___fldiv@b+1
 17819     03BC  0021               	movlb	1	; select bank1
 17820     03BD  0852               	movf	efgtoa@u^(0+128),w
 17821     03BE  0020               	movlb	0	; select bank0
 17822     03BF  00C4               	movwf	___fldiv@b
 17823     03C0  3188  2057  3180   	fcall	___fldiv
 17824     03C3  0020               	movlb	0	; select bank0
 17825     03C4  0843               	movf	?___fldiv+3,w
 17826     03C5  0021               	movlb	1	; select bank1
 17827     03C6  00D5               	movwf	(efgtoa@u+3)^(0+128)
 17828     03C7  0020               	movlb	0	; select bank0
 17829     03C8  0842               	movf	?___fldiv+2,w
 17830     03C9  0021               	movlb	1	; select bank1
 17831     03CA  00D4               	movwf	(efgtoa@u+2)^(0+128)
 17832     03CB  0020               	movlb	0	; select bank0
 17833     03CC  0841               	movf	?___fldiv+1,w
 17834     03CD  0021               	movlb	1	; select bank1
 17835     03CE  00D3               	movwf	(efgtoa@u+1)^(0+128)
 17836     03CF  0020               	movlb	0	; select bank0
 17837     03D0  0840               	movf	?___fldiv,w
 17838     03D1  0021               	movlb	1	; select bank1
 17839     03D2  00D2               	movwf	efgtoa@u^(0+128)
 17840     03D3                     i1l5011:
 17841                           
 17842                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
 17843     03D3  3001               	movlw	1
 17844     03D4  07C1               	addwf	efgtoa@i^(0+128),f
 17845     03D5  3000               	movlw	0
 17846     03D6  3DC2               	addwfc	(efgtoa@i+1)^(0+128),f
 17847     03D7                     i1l5013:
 17848                           
 17849                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 17850     03D7  0842               	movf	(efgtoa@i+1)^(0+128),w
 17851     03D8  3A80               	xorlw	128
 17852     03D9  00A5               	movwf	??_efgtoa^(0+128)
 17853     03DA  0837               	movf	(efgtoa@m+1)^(0+128),w
 17854     03DB  3A80               	xorlw	128
 17855     03DC  0225               	subwf	??_efgtoa^(0+128),w
 17856     03DD  1D03               	skipz
 17857     03DE  2BE1               	goto	u453_25
 17858     03DF  0836               	movf	efgtoa@m^(0+128),w
 17859     03E0  0241               	subwf	efgtoa@i^(0+128),w
 17860     03E1                     u453_25:
 17861     03E1  1C03               	skipc
 17862     03E2  2BE4               	goto	u453_21
 17863     03E3  2BE5               	goto	u453_20
 17864     03E4                     u453_21:
 17865     03E4  2B0A               	goto	i1l5009
 17866     03E5                     u453_20:
 17867     03E5                     i1l5015:
 17868                           
 17869                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 17870     03E5  3040               	movlw	64
 17871     03E6  0020               	movlb	0	; select bank0
 17872     03E7  00A9               	movwf	___flmul@b+3
 17873     03E8  30A0               	movlw	160
 17874     03E9  00A8               	movwf	___flmul@b+2
 17875     03EA  3000               	movlw	0
 17876     03EB  00A7               	movwf	___flmul@b+1
 17877     03EC  3000               	movlw	0
 17878     03ED  00A6               	movwf	___flmul@b
 17879     03EE  0021               	movlb	1	; select bank1
 17880     03EF  0855               	movf	(efgtoa@u+3)^(0+128),w
 17881     03F0  0020               	movlb	0	; select bank0
 17882     03F1  00AD               	movwf	___flmul@a+3
 17883     03F2  0021               	movlb	1	; select bank1
 17884     03F3  0854               	movf	(efgtoa@u+2)^(0+128),w
 17885     03F4  0020               	movlb	0	; select bank0
 17886     03F5  00AC               	movwf	___flmul@a+2
 17887     03F6  0021               	movlb	1	; select bank1
 17888     03F7  0853               	movf	(efgtoa@u+1)^(0+128),w
 17889     03F8  0020               	movlb	0	; select bank0
 17890     03F9  00AB               	movwf	___flmul@a+1
 17891     03FA  0021               	movlb	1	; select bank1
 17892     03FB  0852               	movf	efgtoa@u^(0+128),w
 17893     03FC  0020               	movlb	0	; select bank0
 17894     03FD  00AA               	movwf	___flmul@a
 17895     03FE  318D  25C5  3180   	fcall	___flmul
 17896     0401  0020               	movlb	0	; select bank0
 17897     0402  0829               	movf	?___flmul+3,w
 17898     0403  0021               	movlb	1	; select bank1
 17899     0404  00CA               	movwf	(efgtoa@l+3)^(0+128)
 17900     0405  0020               	movlb	0	; select bank0
 17901     0406  0828               	movf	?___flmul+2,w
 17902     0407  0021               	movlb	1	; select bank1
 17903     0408  00C9               	movwf	(efgtoa@l+2)^(0+128)
 17904     0409  0020               	movlb	0	; select bank0
 17905     040A  0827               	movf	?___flmul+1,w
 17906     040B  0021               	movlb	1	; select bank1
 17907     040C  00C8               	movwf	(efgtoa@l+1)^(0+128)
 17908     040D  0020               	movlb	0	; select bank0
 17909     040E  0826               	movf	?___flmul,w
 17910     040F  0021               	movlb	1	; select bank1
 17911     0410  00C7               	movwf	efgtoa@l^(0+128)
 17912                           
 17913                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 17914     0411  0846               	movf	(efgtoa@h+3)^(0+128),w
 17915     0412  0020               	movlb	0	; select bank0
 17916     0413  00C3               	movwf	___flge@ff1+3
 17917     0414  0021               	movlb	1	; select bank1
 17918     0415  0845               	movf	(efgtoa@h+2)^(0+128),w
 17919     0416  0020               	movlb	0	; select bank0
 17920     0417  00C2               	movwf	___flge@ff1+2
 17921     0418  0021               	movlb	1	; select bank1
 17922     0419  0844               	movf	(efgtoa@h+1)^(0+128),w
 17923     041A  0020               	movlb	0	; select bank0
 17924     041B  00C1               	movwf	___flge@ff1+1
 17925     041C  0021               	movlb	1	; select bank1
 17926     041D  0843               	movf	efgtoa@h^(0+128),w
 17927     041E  0020               	movlb	0	; select bank0
 17928     041F  00C0               	movwf	___flge@ff1
 17929     0420  0021               	movlb	1	; select bank1
 17930     0421  084A               	movf	(efgtoa@l+3)^(0+128),w
 17931     0422  0020               	movlb	0	; select bank0
 17932     0423  00C7               	movwf	___flge@ff2+3
 17933     0424  0021               	movlb	1	; select bank1
 17934     0425  0849               	movf	(efgtoa@l+2)^(0+128),w
 17935     0426  0020               	movlb	0	; select bank0
 17936     0427  00C6               	movwf	___flge@ff2+2
 17937     0428  0021               	movlb	1	; select bank1
 17938     0429  0848               	movf	(efgtoa@l+1)^(0+128),w
 17939     042A  0020               	movlb	0	; select bank0
 17940     042B  00C5               	movwf	___flge@ff2+1
 17941     042C  0021               	movlb	1	; select bank1
 17942     042D  0847               	movf	efgtoa@l^(0+128),w
 17943     042E  0020               	movlb	0	; select bank0
 17944     042F  00C4               	movwf	___flge@ff2
 17945     0430  3194  2485  3180   	fcall	___flge
 17946     0433  1803               	btfsc	3,0
 17947     0434  2C36               	goto	u454_21
 17948     0435  2C37               	goto	u454_20
 17949     0436                     u454_21:
 17950     0436  2C41               	goto	i1l5019
 17951     0437                     u454_20:
 17952     0437                     i1l5017:
 17953                           
 17954                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 17955     0437  3000               	movlw	0
 17956     0438  0021               	movlb	1	; select bank1
 17957     0439  00CA               	movwf	(efgtoa@l+3)^(0+128)
 17958     043A  3000               	movlw	0
 17959     043B  00C9               	movwf	(efgtoa@l+2)^(0+128)
 17960     043C  3000               	movlw	0
 17961     043D  00C8               	movwf	(efgtoa@l+1)^(0+128)
 17962     043E  3000               	movlw	0
 17963     043F  00C7               	movwf	efgtoa@l^(0+128)
 17964                           
 17965                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
 17966     0440  2C66               	goto	i1l5025
 17967     0441                     i1l5019:
 17968                           
 17969                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 17970     0441  0021               	movlb	1	; select bank1
 17971     0442  0846               	movf	(efgtoa@h+3)^(0+128),w
 17972     0443  00F3               	movwf	___fleq@ff1+3
 17973     0444  0845               	movf	(efgtoa@h+2)^(0+128),w
 17974     0445  00F2               	movwf	___fleq@ff1+2
 17975     0446  0844               	movf	(efgtoa@h+1)^(0+128),w
 17976     0447  00F1               	movwf	___fleq@ff1+1
 17977     0448  0843               	movf	efgtoa@h^(0+128),w
 17978     0449  00F0               	movwf	___fleq@ff1
 17979     044A  084A               	movf	(efgtoa@l+3)^(0+128),w
 17980     044B  00F7               	movwf	___fleq@ff2+3
 17981     044C  0849               	movf	(efgtoa@l+2)^(0+128),w
 17982     044D  00F6               	movwf	___fleq@ff2+2
 17983     044E  0848               	movf	(efgtoa@l+1)^(0+128),w
 17984     044F  00F5               	movwf	___fleq@ff2+1
 17985     0450  0847               	movf	efgtoa@l^(0+128),w
 17986     0451  00F4               	movwf	___fleq@ff2
 17987     0452  3191  2122  3180   	fcall	___fleq
 17988     0455  1C03               	btfss	3,0
 17989     0456  2C58               	goto	u455_21
 17990     0457  2C59               	goto	u455_20
 17991     0458                     u455_21:
 17992     0458  2C66               	goto	i1l5025
 17993     0459                     u455_20:
 17994     0459                     i1l5021:
 17995     0459  0021               	movlb	1	; select bank1
 17996     045A  1834               	btfsc	efgtoa@d^(0+128),0
 17997     045B  2C5D               	goto	u456_21
 17998     045C  2C5E               	goto	u456_20
 17999     045D                     u456_21:
 18000     045D  2C66               	goto	i1l5025
 18001     045E                     u456_20:
 18002     045E                     i1l5023:
 18003                           
 18004                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 18005     045E  3000               	movlw	0
 18006     045F  00CA               	movwf	(efgtoa@l+3)^(0+128)
 18007     0460  3000               	movlw	0
 18008     0461  00C9               	movwf	(efgtoa@l+2)^(0+128)
 18009     0462  3000               	movlw	0
 18010     0463  00C8               	movwf	(efgtoa@l+1)^(0+128)
 18011     0464  3000               	movlw	0
 18012     0465  00C7               	movwf	efgtoa@l^(0+128)
 18013     0466                     i1l5025:
 18014                           
 18015                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 18016     0466  0021               	movlb	1	; select bank1
 18017     0467  084A               	movf	(efgtoa@l+3)^(0+128),w
 18018     0468  00F3               	movwf	___fladd@b+3
 18019     0469  0849               	movf	(efgtoa@l+2)^(0+128),w
 18020     046A  00F2               	movwf	___fladd@b+2
 18021     046B  0848               	movf	(efgtoa@l+1)^(0+128),w
 18022     046C  00F1               	movwf	___fladd@b+1
 18023     046D  0847               	movf	efgtoa@l^(0+128),w
 18024     046E  00F0               	movwf	___fladd@b
 18025     046F  0851               	movf	(efgtoa@g+3)^(0+128),w
 18026     0470  00F7               	movwf	___fladd@a+3
 18027     0471  0850               	movf	(efgtoa@g+2)^(0+128),w
 18028     0472  00F6               	movwf	___fladd@a+2
 18029     0473  084F               	movf	(efgtoa@g+1)^(0+128),w
 18030     0474  00F5               	movwf	___fladd@a+1
 18031     0475  084E               	movf	efgtoa@g^(0+128),w
 18032     0476  00F4               	movwf	___fladd@a
 18033     0477  318B  23B9  3180   	fcall	___fladd
 18034     047A  0873               	movf	?___fladd+3,w
 18035     047B  0021               	movlb	1	; select bank1
 18036     047C  00C6               	movwf	(efgtoa@h+3)^(0+128)
 18037     047D  0872               	movf	?___fladd+2,w
 18038     047E  00C5               	movwf	(efgtoa@h+2)^(0+128)
 18039     047F  0871               	movf	?___fladd+1,w
 18040     0480  00C4               	movwf	(efgtoa@h+1)^(0+128)
 18041     0481  0870               	movf	?___fladd,w
 18042     0482  00C3               	movwf	efgtoa@h^(0+128)
 18043     0483                     i1l5027:
 18044                           
 18045                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 18046     0483  0846               	movf	(efgtoa@h+3)^(0+128),w
 18047     0484  0020               	movlb	0	; select bank0
 18048     0485  00C3               	movwf	___flge@ff1+3
 18049     0486  0021               	movlb	1	; select bank1
 18050     0487  0845               	movf	(efgtoa@h+2)^(0+128),w
 18051     0488  0020               	movlb	0	; select bank0
 18052     0489  00C2               	movwf	___flge@ff1+2
 18053     048A  0021               	movlb	1	; select bank1
 18054     048B  0844               	movf	(efgtoa@h+1)^(0+128),w
 18055     048C  0020               	movlb	0	; select bank0
 18056     048D  00C1               	movwf	___flge@ff1+1
 18057     048E  0021               	movlb	1	; select bank1
 18058     048F  0843               	movf	efgtoa@h^(0+128),w
 18059     0490  0020               	movlb	0	; select bank0
 18060     0491  00C0               	movwf	___flge@ff1
 18061     0492  3041               	movlw	65
 18062     0493  00A9               	movwf	___flmul@b+3
 18063     0494  3020               	movlw	32
 18064     0495  00A8               	movwf	___flmul@b+2
 18065     0496  3000               	movlw	0
 18066     0497  00A7               	movwf	___flmul@b+1
 18067     0498  3000               	movlw	0
 18068     0499  00A6               	movwf	___flmul@b
 18069     049A  0021               	movlb	1	; select bank1
 18070     049B  0840               	movf	(efgtoa@ou+3)^(0+128),w
 18071     049C  0020               	movlb	0	; select bank0
 18072     049D  00AD               	movwf	___flmul@a+3
 18073     049E  0021               	movlb	1	; select bank1
 18074     049F  083F               	movf	(efgtoa@ou+2)^(0+128),w
 18075     04A0  0020               	movlb	0	; select bank0
 18076     04A1  00AC               	movwf	___flmul@a+2
 18077     04A2  0021               	movlb	1	; select bank1
 18078     04A3  083E               	movf	(efgtoa@ou+1)^(0+128),w
 18079     04A4  0020               	movlb	0	; select bank0
 18080     04A5  00AB               	movwf	___flmul@a+1
 18081     04A6  0021               	movlb	1	; select bank1
 18082     04A7  083D               	movf	efgtoa@ou^(0+128),w
 18083     04A8  0020               	movlb	0	; select bank0
 18084     04A9  00AA               	movwf	___flmul@a
 18085     04AA  318D  25C5  3180   	fcall	___flmul
 18086     04AD  0020               	movlb	0	; select bank0
 18087     04AE  0829               	movf	?___flmul+3,w
 18088     04AF  00C7               	movwf	___flge@ff2+3
 18089     04B0  0828               	movf	?___flmul+2,w
 18090     04B1  00C6               	movwf	___flge@ff2+2
 18091     04B2  0827               	movf	?___flmul+1,w
 18092     04B3  00C5               	movwf	___flge@ff2+1
 18093     04B4  0826               	movf	?___flmul,w
 18094     04B5  00C4               	movwf	___flge@ff2
 18095     04B6  3194  2485  3180   	fcall	___flge
 18096     04B9  1C03               	btfss	3,0
 18097     04BA  2CBC               	goto	u457_21
 18098     04BB  2CBD               	goto	u457_20
 18099     04BC                     u457_21:
 18100     04BC  2CF8               	goto	i1l1803
 18101     04BD                     u457_20:
 18102     04BD                     i1l5029:
 18103                           
 18104                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
 18105     04BD  3001               	movlw	1
 18106     04BE  0021               	movlb	1	; select bank1
 18107     04BF  07B9               	addwf	efgtoa@e^(0+128),f
 18108     04C0  3000               	movlw	0
 18109     04C1  3DBA               	addwfc	(efgtoa@e+1)^(0+128),f
 18110     04C2                     i1l5031:
 18111                           
 18112                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 18113     04C2  3041               	movlw	65
 18114     04C3  0020               	movlb	0	; select bank0
 18115     04C4  00A9               	movwf	___flmul@b+3
 18116     04C5  3020               	movlw	32
 18117     04C6  00A8               	movwf	___flmul@b+2
 18118     04C7  3000               	movlw	0
 18119     04C8  00A7               	movwf	___flmul@b+1
 18120     04C9  3000               	movlw	0
 18121     04CA  00A6               	movwf	___flmul@b
 18122     04CB  0021               	movlb	1	; select bank1
 18123     04CC  0840               	movf	(efgtoa@ou+3)^(0+128),w
 18124     04CD  0020               	movlb	0	; select bank0
 18125     04CE  00AD               	movwf	___flmul@a+3
 18126     04CF  0021               	movlb	1	; select bank1
 18127     04D0  083F               	movf	(efgtoa@ou+2)^(0+128),w
 18128     04D1  0020               	movlb	0	; select bank0
 18129     04D2  00AC               	movwf	___flmul@a+2
 18130     04D3  0021               	movlb	1	; select bank1
 18131     04D4  083E               	movf	(efgtoa@ou+1)^(0+128),w
 18132     04D5  0020               	movlb	0	; select bank0
 18133     04D6  00AB               	movwf	___flmul@a+1
 18134     04D7  0021               	movlb	1	; select bank1
 18135     04D8  083D               	movf	efgtoa@ou^(0+128),w
 18136     04D9  0020               	movlb	0	; select bank0
 18137     04DA  00AA               	movwf	___flmul@a
 18138     04DB  318D  25C5  3180   	fcall	___flmul
 18139     04DE  0020               	movlb	0	; select bank0
 18140     04DF  0829               	movf	?___flmul+3,w
 18141     04E0  0021               	movlb	1	; select bank1
 18142     04E1  00C0               	movwf	(efgtoa@ou+3)^(0+128)
 18143     04E2  0020               	movlb	0	; select bank0
 18144     04E3  0828               	movf	?___flmul+2,w
 18145     04E4  0021               	movlb	1	; select bank1
 18146     04E5  00BF               	movwf	(efgtoa@ou+2)^(0+128)
 18147     04E6  0020               	movlb	0	; select bank0
 18148     04E7  0827               	movf	?___flmul+1,w
 18149     04E8  0021               	movlb	1	; select bank1
 18150     04E9  00BE               	movwf	(efgtoa@ou+1)^(0+128)
 18151     04EA  0020               	movlb	0	; select bank0
 18152     04EB  0826               	movf	?___flmul,w
 18153     04EC  0021               	movlb	1	; select bank1
 18154     04ED  00BD               	movwf	efgtoa@ou^(0+128)
 18155     04EE                     i1l5033:
 18156                           
 18157                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 18158     04EE  3066               	movlw	102
 18159     04EF  0633               	xorwf	efgtoa@nmode^(0+128),w
 18160     04F0  1D03               	btfss	3,2
 18161     04F1  2CF3               	goto	u458_21
 18162     04F2  2CF4               	goto	u458_20
 18163     04F3                     u458_21:
 18164     04F3  2CF8               	goto	i1l1803
 18165     04F4                     u458_20:
 18166     04F4                     i1l5035:
 18167                           
 18168                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
 18169     04F4  3001               	movlw	1
 18170     04F5  07B6               	addwf	efgtoa@m^(0+128),f
 18171     04F6  3000               	movlw	0
 18172     04F7  3DB7               	addwfc	(efgtoa@m+1)^(0+128),f
 18173     04F8                     i1l1803:	
 18174                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 767:  }
 18175                           
 18176                           
 18177                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 18178     04F8  0021               	movlb	1	; select bank1
 18179     04F9  0840               	movf	(efgtoa@ou+3)^(0+128),w
 18180     04FA  00D5               	movwf	(efgtoa@u+3)^(0+128)
 18181     04FB  083F               	movf	(efgtoa@ou+2)^(0+128),w
 18182     04FC  00D4               	movwf	(efgtoa@u+2)^(0+128)
 18183     04FD  083E               	movf	(efgtoa@ou+1)^(0+128),w
 18184     04FE  00D3               	movwf	(efgtoa@u+1)^(0+128)
 18185     04FF  083D               	movf	efgtoa@ou^(0+128),w
 18186     0500  00D2               	movwf	efgtoa@u^(0+128)
 18187                           
 18188                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 18189     0501  083A               	movf	(efgtoa@e+1)^(0+128),w
 18190     0502  00AA               	movwf	(efgtoa@ne+1)^(0+128)
 18191     0503  0839               	movf	efgtoa@e^(0+128),w
 18192     0504  00A9               	movwf	efgtoa@ne^(0+128)
 18193     0505                     i1l5037:
 18194                           
 18195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 18196     0505  01B1               	clrf	efgtoa@pp^(0+128)
 18197     0506                     i1l5039:
 18198                           
 18199                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 18200     0506  01AD               	clrf	efgtoa@t^(0+128)
 18201     0507  01AE               	clrf	(efgtoa@t+1)^(0+128)
 18202     0508                     i1l5041:
 18203                           
 18204                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 18205     0508  01C1               	clrf	efgtoa@i^(0+128)
 18206     0509  01C2               	clrf	(efgtoa@i+1)^(0+128)
 18207                           
 18208                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 18209     050A  2E40               	goto	i1l5085
 18210     050B                     i1l5043:
 18211                           
 18212                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 18213     050B  0021               	movlb	1	; select bank1
 18214     050C  0855               	movf	(efgtoa@u+3)^(0+128),w
 18215     050D  0020               	movlb	0	; select bank0
 18216     050E  00C3               	movwf	___fldiv@a+3
 18217     050F  0021               	movlb	1	; select bank1
 18218     0510  0854               	movf	(efgtoa@u+2)^(0+128),w
 18219     0511  0020               	movlb	0	; select bank0
 18220     0512  00C2               	movwf	___fldiv@a+2
 18221     0513  0021               	movlb	1	; select bank1
 18222     0514  0853               	movf	(efgtoa@u+1)^(0+128),w
 18223     0515  0020               	movlb	0	; select bank0
 18224     0516  00C1               	movwf	___fldiv@a+1
 18225     0517  0021               	movlb	1	; select bank1
 18226     0518  0852               	movf	efgtoa@u^(0+128),w
 18227     0519  0020               	movlb	0	; select bank0
 18228     051A  00C0               	movwf	___fldiv@a
 18229     051B  0021               	movlb	1	; select bank1
 18230     051C  0846               	movf	(efgtoa@h+3)^(0+128),w
 18231     051D  0020               	movlb	0	; select bank0
 18232     051E  00C7               	movwf	___fldiv@b+3
 18233     051F  0021               	movlb	1	; select bank1
 18234     0520  0845               	movf	(efgtoa@h+2)^(0+128),w
 18235     0521  0020               	movlb	0	; select bank0
 18236     0522  00C6               	movwf	___fldiv@b+2
 18237     0523  0021               	movlb	1	; select bank1
 18238     0524  0844               	movf	(efgtoa@h+1)^(0+128),w
 18239     0525  0020               	movlb	0	; select bank0
 18240     0526  00C5               	movwf	___fldiv@b+1
 18241     0527  0021               	movlb	1	; select bank1
 18242     0528  0843               	movf	efgtoa@h^(0+128),w
 18243     0529  0020               	movlb	0	; select bank0
 18244     052A  00C4               	movwf	___fldiv@b
 18245     052B  3188  2057  3180   	fcall	___fldiv
 18246     052E  0020               	movlb	0	; select bank0
 18247     052F  0843               	movf	?___fldiv+3,w
 18248     0530  00DD               	movwf	floorf@x+3
 18249     0531  0842               	movf	?___fldiv+2,w
 18250     0532  00DC               	movwf	floorf@x+2
 18251     0533  0841               	movf	?___fldiv+1,w
 18252     0534  00DB               	movwf	floorf@x+1
 18253     0535  0840               	movf	?___fldiv,w
 18254     0536  00DA               	movwf	floorf@x
 18255     0537  3186  26A9  3180   	fcall	_floorf
 18256     053A  0020               	movlb	0	; select bank0
 18257     053B  085D               	movf	?_floorf+3,w
 18258     053C  0021               	movlb	1	; select bank1
 18259     053D  00CA               	movwf	(efgtoa@l+3)^(0+128)
 18260     053E  0020               	movlb	0	; select bank0
 18261     053F  085C               	movf	?_floorf+2,w
 18262     0540  0021               	movlb	1	; select bank1
 18263     0541  00C9               	movwf	(efgtoa@l+2)^(0+128)
 18264     0542  0020               	movlb	0	; select bank0
 18265     0543  085B               	movf	?_floorf+1,w
 18266     0544  0021               	movlb	1	; select bank1
 18267     0545  00C8               	movwf	(efgtoa@l+1)^(0+128)
 18268     0546  0020               	movlb	0	; select bank0
 18269     0547  085A               	movf	?_floorf,w
 18270     0548  0021               	movlb	1	; select bank1
 18271     0549  00C7               	movwf	efgtoa@l^(0+128)
 18272                           
 18273                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 18274     054A  084A               	movf	(efgtoa@l+3)^(0+128),w
 18275     054B  00F3               	movwf	___fltol@f1+3
 18276     054C  0849               	movf	(efgtoa@l+2)^(0+128),w
 18277     054D  00F2               	movwf	___fltol@f1+2
 18278     054E  0848               	movf	(efgtoa@l+1)^(0+128),w
 18279     054F  00F1               	movwf	___fltol@f1+1
 18280     0550  0847               	movf	efgtoa@l^(0+128),w
 18281     0551  00F0               	movwf	___fltol@f1
 18282     0552  3192  2227  3180   	fcall	___fltol
 18283     0555  0871               	movf	?___fltol+1,w
 18284     0556  3A80               	xorlw	128
 18285     0557  0021               	movlb	1	; select bank1
 18286     0558  00A5               	movwf	??_efgtoa^(0+128)
 18287     0559  3080               	movlw	128
 18288     055A  0225               	subwf	??_efgtoa^(0+128),w
 18289     055B  1D03               	skipz
 18290     055C  2D5F               	goto	u459_25
 18291     055D  300A               	movlw	10
 18292     055E  0270               	subwf	?___fltol,w
 18293     055F                     u459_25:
 18294     055F  1803               	skipnc
 18295     0560  2D62               	goto	u459_21
 18296     0561  2D63               	goto	u459_20
 18297     0562                     u459_21:
 18298     0562  2D75               	goto	i1l5047
 18299     0563                     u459_20:
 18300     0563                     i1l5045:
 18301     0563  0021               	movlb	1	; select bank1
 18302     0564  084A               	movf	(efgtoa@l+3)^(0+128),w
 18303     0565  00F3               	movwf	___fltol@f1+3
 18304     0566  0849               	movf	(efgtoa@l+2)^(0+128),w
 18305     0567  00F2               	movwf	___fltol@f1+2
 18306     0568  0848               	movf	(efgtoa@l+1)^(0+128),w
 18307     0569  00F1               	movwf	___fltol@f1+1
 18308     056A  0847               	movf	efgtoa@l^(0+128),w
 18309     056B  00F0               	movwf	___fltol@f1
 18310     056C  3192  2227  3180   	fcall	___fltol
 18311     056F  0871               	movf	?___fltol+1,w
 18312     0570  0021               	movlb	1	; select bank1
 18313     0571  00B5               	movwf	(efgtoa@d+1)^(0+128)
 18314     0572  0870               	movf	?___fltol,w
 18315     0573  00B4               	movwf	efgtoa@d^(0+128)
 18316     0574  2D7A               	goto	i1l5049
 18317     0575                     i1l5047:
 18318     0575  3009               	movlw	9
 18319     0576  0021               	movlb	1	; select bank1
 18320     0577  00B4               	movwf	efgtoa@d^(0+128)
 18321     0578  3000               	movlw	0
 18322     0579  00B5               	movwf	(efgtoa@d^(0+128)+1)
 18323     057A                     i1l5049:
 18324                           
 18325                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 18326     057A  0831               	movf	efgtoa@pp^(0+128),w
 18327     057B  1D03               	btfss	3,2
 18328     057C  2D7E               	goto	u460_21
 18329     057D  2D7F               	goto	u460_20
 18330     057E                     u460_21:
 18331     057E  2DA8               	goto	i1l5069
 18332     057F                     u460_20:
 18333     057F                     i1l5051:
 18334     057F  1FAA               	btfss	(efgtoa@ne+1)^(0+128),7
 18335     0580  2D82               	goto	u461_21
 18336     0581  2D83               	goto	u461_20
 18337     0582                     u461_21:
 18338     0582  2DA8               	goto	i1l5069
 18339     0583                     u461_20:
 18340     0583                     i1l5053:
 18341                           
 18342                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 18343     0583  084C               	movf	efgtoa@n^(0+128),w
 18344     0584  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 18345     0585  0086               	movwf	6
 18346     0586  3002               	movlw	2	; select bank4/5
 18347     0587  0087               	movwf	7
 18348     0588  302E               	movlw	46
 18349     0589  0081               	movwf	1
 18350     058A                     i1l5055:
 18351     058A  3001               	movlw	1
 18352     058B  07CC               	addwf	efgtoa@n^(0+128),f
 18353     058C  3000               	movlw	0
 18354     058D  3DCD               	addwfc	(efgtoa@n+1)^(0+128),f
 18355     058E                     i1l5057:
 18356                           
 18357                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 18358     058E  30FF               	movlw	255
 18359     058F  07BB               	addwf	efgtoa@w^(0+128),f
 18360     0590  30FF               	movlw	255
 18361     0591  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 18362     0592                     i1l5059:
 18363                           
 18364                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 18365     0592  01B1               	clrf	efgtoa@pp^(0+128)
 18366     0593  0AB1               	incf	efgtoa@pp^(0+128),f
 18367     0594  2DA8               	goto	i1l5069
 18368     0595                     i1l5061:
 18369                           
 18370                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 18371     0595  084C               	movf	efgtoa@n^(0+128),w
 18372     0596  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 18373     0597  0086               	movwf	6
 18374     0598  3002               	movlw	2	; select bank4/5
 18375     0599  0087               	movwf	7
 18376     059A  3030               	movlw	48
 18377     059B  0081               	movwf	1
 18378     059C                     i1l5063:
 18379     059C  3001               	movlw	1
 18380     059D  07CC               	addwf	efgtoa@n^(0+128),f
 18381     059E  3000               	movlw	0
 18382     059F  3DCD               	addwfc	(efgtoa@n+1)^(0+128),f
 18383     05A0                     i1l5065:
 18384                           
 18385                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 18386     05A0  30FF               	movlw	255
 18387     05A1  07BB               	addwf	efgtoa@w^(0+128),f
 18388     05A2  30FF               	movlw	255
 18389     05A3  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 18390     05A4                     i1l5067:
 18391                           
 18392                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 18393     05A4  30FF               	movlw	255
 18394     05A5  07AD               	addwf	efgtoa@t^(0+128),f
 18395     05A6  30FF               	movlw	255
 18396     05A7  3DAE               	addwfc	(efgtoa@t+1)^(0+128),f
 18397     05A8                     i1l5069:
 18398                           
 18399                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 18400     05A8  082D               	movf	efgtoa@t^(0+128),w
 18401     05A9  042E               	iorwf	(efgtoa@t+1)^(0+128),w
 18402     05AA  1D03               	btfss	3,2
 18403     05AB  2DAD               	goto	u462_21
 18404     05AC  2DAE               	goto	u462_20
 18405     05AD                     u462_21:
 18406     05AD  2D95               	goto	i1l5061
 18407     05AE                     u462_20:
 18408     05AE                     i1l5071:
 18409                           
 18410                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 18411     05AE  084C               	movf	efgtoa@n^(0+128),w
 18412     05AF  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 18413     05B0  0086               	movwf	6
 18414     05B1  3002               	movlw	2	; select bank4/5
 18415     05B2  0087               	movwf	7
 18416     05B3  0834               	movf	efgtoa@d^(0+128),w
 18417     05B4  3E30               	addlw	48
 18418     05B5  0081               	movwf	1
 18419     05B6                     i1l5073:
 18420     05B6  3001               	movlw	1
 18421     05B7  07CC               	addwf	efgtoa@n^(0+128),f
 18422     05B8  3000               	movlw	0
 18423     05B9  3DCD               	addwfc	(efgtoa@n+1)^(0+128),f
 18424     05BA                     i1l5075:
 18425                           
 18426                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 18427     05BA  30FF               	movlw	255
 18428     05BB  07BB               	addwf	efgtoa@w^(0+128),f
 18429     05BC  30FF               	movlw	255
 18430     05BD  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 18431     05BE                     i1l5077:
 18432                           
 18433                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 18434     05BE  0855               	movf	(efgtoa@u+3)^(0+128),w
 18435     05BF  0020               	movlb	0	; select bank0
 18436     05C0  00AD               	movwf	___flmul@a+3
 18437     05C1  0021               	movlb	1	; select bank1
 18438     05C2  0854               	movf	(efgtoa@u+2)^(0+128),w
 18439     05C3  0020               	movlb	0	; select bank0
 18440     05C4  00AC               	movwf	___flmul@a+2
 18441     05C5  0021               	movlb	1	; select bank1
 18442     05C6  0853               	movf	(efgtoa@u+1)^(0+128),w
 18443     05C7  0020               	movlb	0	; select bank0
 18444     05C8  00AB               	movwf	___flmul@a+1
 18445     05C9  0021               	movlb	1	; select bank1
 18446     05CA  0852               	movf	efgtoa@u^(0+128),w
 18447     05CB  0020               	movlb	0	; select bank0
 18448     05CC  00AA               	movwf	___flmul@a
 18449     05CD  0021               	movlb	1	; select bank1
 18450     05CE  084A               	movf	(efgtoa@l+3)^(0+128),w
 18451     05CF  0020               	movlb	0	; select bank0
 18452     05D0  00A9               	movwf	___flmul@b+3
 18453     05D1  0021               	movlb	1	; select bank1
 18454     05D2  0849               	movf	(efgtoa@l+2)^(0+128),w
 18455     05D3  0020               	movlb	0	; select bank0
 18456     05D4  00A8               	movwf	___flmul@b+2
 18457     05D5  0021               	movlb	1	; select bank1
 18458     05D6  0848               	movf	(efgtoa@l+1)^(0+128),w
 18459     05D7  0020               	movlb	0	; select bank0
 18460     05D8  00A7               	movwf	___flmul@b+1
 18461     05D9  0021               	movlb	1	; select bank1
 18462     05DA  0847               	movf	efgtoa@l^(0+128),w
 18463     05DB  0020               	movlb	0	; select bank0
 18464     05DC  00A6               	movwf	___flmul@b
 18465     05DD  318D  25C5  3180   	fcall	___flmul
 18466     05E0  0020               	movlb	0	; select bank0
 18467     05E1  0829               	movf	?___flmul+3,w
 18468     05E2  00C3               	movwf	___flsub@a+3
 18469     05E3  0828               	movf	?___flmul+2,w
 18470     05E4  00C2               	movwf	___flsub@a+2
 18471     05E5  0827               	movf	?___flmul+1,w
 18472     05E6  00C1               	movwf	___flsub@a+1
 18473     05E7  0826               	movf	?___flmul,w
 18474     05E8  00C0               	movwf	___flsub@a
 18475     05E9  0021               	movlb	1	; select bank1
 18476     05EA  0846               	movf	(efgtoa@h+3)^(0+128),w
 18477     05EB  0020               	movlb	0	; select bank0
 18478     05EC  00C7               	movwf	___flsub@b+3
 18479     05ED  0021               	movlb	1	; select bank1
 18480     05EE  0845               	movf	(efgtoa@h+2)^(0+128),w
 18481     05EF  0020               	movlb	0	; select bank0
 18482     05F0  00C6               	movwf	___flsub@b+2
 18483     05F1  0021               	movlb	1	; select bank1
 18484     05F2  0844               	movf	(efgtoa@h+1)^(0+128),w
 18485     05F3  0020               	movlb	0	; select bank0
 18486     05F4  00C5               	movwf	___flsub@b+1
 18487     05F5  0021               	movlb	1	; select bank1
 18488     05F6  0843               	movf	efgtoa@h^(0+128),w
 18489     05F7  0020               	movlb	0	; select bank0
 18490     05F8  00C4               	movwf	___flsub@b
 18491     05F9  319E  266C  3180   	fcall	___flsub
 18492     05FC  0020               	movlb	0	; select bank0
 18493     05FD  0843               	movf	?___flsub+3,w
 18494     05FE  0021               	movlb	1	; select bank1
 18495     05FF  00C6               	movwf	(efgtoa@h+3)^(0+128)
 18496     0600  0020               	movlb	0	; select bank0
 18497     0601  0842               	movf	?___flsub+2,w
 18498     0602  0021               	movlb	1	; select bank1
 18499     0603  00C5               	movwf	(efgtoa@h+2)^(0+128)
 18500     0604  0020               	movlb	0	; select bank0
 18501     0605  0841               	movf	?___flsub+1,w
 18502     0606  0021               	movlb	1	; select bank1
 18503     0607  00C4               	movwf	(efgtoa@h+1)^(0+128)
 18504     0608  0020               	movlb	0	; select bank0
 18505     0609  0840               	movf	?___flsub,w
 18506     060A  0021               	movlb	1	; select bank1
 18507     060B  00C3               	movwf	efgtoa@h^(0+128)
 18508     060C                     i1l5079:
 18509                           
 18510                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 18511     060C  3041               	movlw	65
 18512     060D  0020               	movlb	0	; select bank0
 18513     060E  00C3               	movwf	___fldiv@a+3
 18514     060F  3020               	movlw	32
 18515     0610  00C2               	movwf	___fldiv@a+2
 18516     0611  3000               	movlw	0
 18517     0612  00C1               	movwf	___fldiv@a+1
 18518     0613  3000               	movlw	0
 18519     0614  00C0               	movwf	___fldiv@a
 18520     0615  0021               	movlb	1	; select bank1
 18521     0616  0855               	movf	(efgtoa@u+3)^(0+128),w
 18522     0617  0020               	movlb	0	; select bank0
 18523     0618  00C7               	movwf	___fldiv@b+3
 18524     0619  0021               	movlb	1	; select bank1
 18525     061A  0854               	movf	(efgtoa@u+2)^(0+128),w
 18526     061B  0020               	movlb	0	; select bank0
 18527     061C  00C6               	movwf	___fldiv@b+2
 18528     061D  0021               	movlb	1	; select bank1
 18529     061E  0853               	movf	(efgtoa@u+1)^(0+128),w
 18530     061F  0020               	movlb	0	; select bank0
 18531     0620  00C5               	movwf	___fldiv@b+1
 18532     0621  0021               	movlb	1	; select bank1
 18533     0622  0852               	movf	efgtoa@u^(0+128),w
 18534     0623  0020               	movlb	0	; select bank0
 18535     0624  00C4               	movwf	___fldiv@b
 18536     0625  3188  2057  3180   	fcall	___fldiv
 18537     0628  0020               	movlb	0	; select bank0
 18538     0629  0843               	movf	?___fldiv+3,w
 18539     062A  0021               	movlb	1	; select bank1
 18540     062B  00D5               	movwf	(efgtoa@u+3)^(0+128)
 18541     062C  0020               	movlb	0	; select bank0
 18542     062D  0842               	movf	?___fldiv+2,w
 18543     062E  0021               	movlb	1	; select bank1
 18544     062F  00D4               	movwf	(efgtoa@u+2)^(0+128)
 18545     0630  0020               	movlb	0	; select bank0
 18546     0631  0841               	movf	?___fldiv+1,w
 18547     0632  0021               	movlb	1	; select bank1
 18548     0633  00D3               	movwf	(efgtoa@u+1)^(0+128)
 18549     0634  0020               	movlb	0	; select bank0
 18550     0635  0840               	movf	?___fldiv,w
 18551     0636  0021               	movlb	1	; select bank1
 18552     0637  00D2               	movwf	efgtoa@u^(0+128)
 18553     0638                     i1l5081:
 18554                           
 18555                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 18556     0638  30FF               	movlw	255
 18557     0639  07A9               	addwf	efgtoa@ne^(0+128),f
 18558     063A  30FF               	movlw	255
 18559     063B  3DAA               	addwfc	(efgtoa@ne+1)^(0+128),f
 18560     063C                     i1l5083:
 18561                           
 18562                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
 18563     063C  3001               	movlw	1
 18564     063D  07C1               	addwf	efgtoa@i^(0+128),f
 18565     063E  3000               	movlw	0
 18566     063F  3DC2               	addwfc	(efgtoa@i+1)^(0+128),f
 18567     0640                     i1l5085:
 18568                           
 18569                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 18570     0640  0842               	movf	(efgtoa@i+1)^(0+128),w
 18571     0641  3A80               	xorlw	128
 18572     0642  00A5               	movwf	??_efgtoa^(0+128)
 18573     0643  0837               	movf	(efgtoa@m+1)^(0+128),w
 18574     0644  3A80               	xorlw	128
 18575     0645  0225               	subwf	??_efgtoa^(0+128),w
 18576     0646  1D03               	skipz
 18577     0647  2E4A               	goto	u463_25
 18578     0648  0836               	movf	efgtoa@m^(0+128),w
 18579     0649  0241               	subwf	efgtoa@i^(0+128),w
 18580     064A                     u463_25:
 18581     064A  1803               	skipnc
 18582     064B  2E4D               	goto	u463_21
 18583     064C  2E4E               	goto	u463_20
 18584     064D                     u463_21:
 18585     064D  2E5C               	goto	i1l5089
 18586     064E                     u463_20:
 18587     064E                     i1l5087:
 18588     064E  0021               	movlb	1	; select bank1
 18589     064F  084D               	movf	(efgtoa@n+1)^(0+128),w
 18590     0650  3A80               	xorlw	128
 18591     0651  00A5               	movwf	??_efgtoa^(0+128)
 18592     0652  3080               	movlw	128
 18593     0653  0225               	subwf	??_efgtoa^(0+128),w
 18594     0654  1D03               	skipz
 18595     0655  2E58               	goto	u464_25
 18596     0656  304B               	movlw	75
 18597     0657  024C               	subwf	efgtoa@n^(0+128),w
 18598     0658                     u464_25:
 18599     0658  1C03               	skipc
 18600     0659  2E5B               	goto	u464_21
 18601     065A  2E5C               	goto	u464_20
 18602     065B                     u464_21:
 18603     065B  2D0B               	goto	i1l5043
 18604     065C                     u464_20:
 18605     065C                     i1l5089:
 18606                           
 18607                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 18608     065C  304F               	movlw	79
 18609     065D  0021               	movlb	1	; select bank1
 18610     065E  00C1               	movwf	efgtoa@i^(0+128)
 18611     065F  3000               	movlw	0
 18612     0660  00C2               	movwf	(efgtoa@i^(0+128)+1)
 18613     0661                     i1l5091:
 18614                           
 18615                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 18616     0661  0841               	movf	efgtoa@i^(0+128),w
 18617     0662  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 18618     0663  0086               	movwf	6
 18619     0664  3002               	movlw	2	; select bank4/5
 18620     0665  0087               	movwf	7
 18621     0666  0181               	clrf	1
 18622     0667                     i1l5093:
 18623                           
 18624                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 18625     0667  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 18626     0668  00F0               	movwf	memcpy@s1
 18627     0669  084D               	movf	(efgtoa@n+1)^(0+128),w
 18628     066A  00F2               	movwf	memcpy@n+1
 18629     066B  084C               	movf	efgtoa@n^(0+128),w
 18630     066C  00F1               	movwf	memcpy@n
 18631     066D  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 18632     066E  00A5               	movwf	??_efgtoa^(0+128)
 18633     066F  084C               	movf	efgtoa@n^(0+128),w
 18634     0670  0225               	subwf	??_efgtoa^(0+128),w
 18635     0671  0741               	addwf	efgtoa@i^(0+128),w
 18636     0672  3190  2001  3180   	fcall	_memcpy
 18637     0675                     i1l5095:
 18638                           
 18639                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 18640     0675  0021               	movlb	1	; select bank1
 18641     0676  084C               	movf	efgtoa@n^(0+128),w
 18642     0677  0241               	subwf	efgtoa@i^(0+128),w
 18643     0678  00CC               	movwf	efgtoa@n^(0+128)
 18644     0679  084D               	movf	(efgtoa@n+1)^(0+128),w
 18645     067A  3B42               	subwfb	(efgtoa@i+1)^(0+128),w
 18646     067B  00CD               	movwf	(efgtoa@n+1)^(0+128)
 18647     067C                     i1l5097:
 18648                           
 18649                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 18650     067C  084B               	movf	efgtoa@sign^(0+128),w
 18651     067D  1D03               	btfss	3,2
 18652     067E  2E80               	goto	u465_21
 18653     067F  2E82               	goto	u465_20
 18654     0680                     u465_21:
 18655     0680  3001               	movlw	1
 18656     0681  2E83               	goto	u466_20
 18657     0682                     u465_20:
 18658     0682  3000               	movlw	0
 18659     0683                     u466_20:
 18660     0683  00A5               	movwf	??_efgtoa^(0+128)
 18661     0684  01A6               	clrf	(??_efgtoa^(0+128)+1)
 18662     0685  0825               	movf	??_efgtoa^(0+128),w
 18663     0686  00C1               	movwf	efgtoa@i^(0+128)
 18664     0687  0826               	movf	(??_efgtoa+1)^(0+128),w
 18665     0688  00C2               	movwf	(efgtoa@i+1)^(0+128)
 18666     0689                     i1l5099:
 18667                           
 18668                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 18669     0689  084B               	movf	efgtoa@sign^(0+128),w
 18670     068A  1903               	btfsc	3,2
 18671     068B  2E8D               	goto	u467_21
 18672     068C  2E8E               	goto	u467_20
 18673     068D                     u467_21:
 18674     068D  2E99               	goto	i1l5103
 18675     068E                     u467_20:
 18676     068E                     i1l5101:
 18677                           
 18678                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 18679     068E  30FF               	movlw	255
 18680     068F  07CC               	addwf	efgtoa@n^(0+128),f
 18681     0690  30FF               	movlw	255
 18682     0691  3DCD               	addwfc	(efgtoa@n+1)^(0+128),f
 18683     0692  084C               	movf	efgtoa@n^(0+128),w
 18684     0693  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 18685     0694  0086               	movwf	6
 18686     0695  3002               	movlw	2	; select bank4/5
 18687     0696  0087               	movwf	7
 18688     0697  084B               	movf	efgtoa@sign^(0+128),w
 18689     0698  0081               	movwf	1
 18690     0699                     i1l5103:
 18691                           
 18692                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 18693     0699  0841               	movf	efgtoa@i^(0+128),w
 18694     069A  02BB               	subwf	efgtoa@w^(0+128),f
 18695     069B  0842               	movf	(efgtoa@i+1)^(0+128),w
 18696     069C  3BBC               	subwfb	(efgtoa@w+1)^(0+128),f
 18697     069D                     i1l5105:
 18698                           
 18699                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 18700     069D  084C               	movf	efgtoa@n^(0+128),w
 18701     069E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 18702     069F  00FB               	movwf	pad@buf
 18703     06A0  083C               	movf	(efgtoa@w+1)^(0+128),w
 18704     06A1  00FD               	movwf	pad@p+1
 18705     06A2  083B               	movf	efgtoa@w^(0+128),w
 18706     06A3  00FC               	movwf	pad@p
 18707     06A4  0838               	movf	efgtoa@fp^(0+128),w
 18708     06A5  3190  2028  3180   	fcall	_pad
 18709     06A8                     i1l1777:
 18710     06A8  0008               	return
 18711     06A9                     __end_of_efgtoa:
 18712                           
 18713                           	psect	text85
 18714     1DFA                     __ptext85:	
 18715 ;; *************** function _strcpy *****************
 18716 ;; Defined at:
 18717 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 18718 ;; Parameters:    Size  Location     Type
 18719 ;;  dest            1    wreg     PTR unsigned char 
 18720 ;;		 -> dbuf(80), 
 18721 ;;  src             2    0[COMMON] PTR const unsigned char 
 18722 ;;		 -> STR_12(4), STR_9(4), 
 18723 ;; Auto vars:     Size  Location     Type
 18724 ;;  dest            1    5[COMMON] PTR unsigned char 
 18725 ;;		 -> dbuf(80), 
 18726 ;;  d               1    4[COMMON] PTR unsigned char 
 18727 ;;		 -> dbuf(80), 
 18728 ;; Return value:  Size  Location     Type
 18729 ;;                  1    wreg      PTR unsigned char 
 18730 ;; Registers used:
 18731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18732 ;; Tracked objects:
 18733 ;;		On entry : 0/0
 18734 ;;		On exit  : 0/0
 18735 ;;		Unchanged: 0/0
 18736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18740 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18741 ;;Total ram usage:        6 bytes
 18742 ;; Hardware stack levels used: 1
 18743 ;; This function calls:
 18744 ;;		Nothing
 18745 ;; This function is called by:
 18746 ;;		_efgtoa
 18747 ;; This function uses a non-reentrant model
 18748 ;;
 18749                           
 18750     1DFA                     _strcpy:	
 18751                           ;psect for function _strcpy
 18752                           
 18753                           
 18754                           ;incstack = 0
 18755                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 18756                           ;strcpy@dest stored from wreg
 18757     1DFA  00F5               	movwf	strcpy@dest
 18758     1DFB                     i1l4841:
 18759     1DFB  0875               	movf	strcpy@dest,w
 18760     1DFC  00F4               	movwf	strcpy@d
 18761     1DFD                     i1l4843:
 18762     1DFD  0874               	movf	strcpy@d,w
 18763     1DFE  0086               	movwf	6
 18764     1DFF  3002               	movlw	2	; select bank4/5
 18765     1E00  0087               	movwf	7
 18766     1E01  0AF4               	incf	strcpy@d,f
 18767     1E02  0871               	movf	strcpy@src+1,w
 18768     1E03  00F3               	movwf	??_strcpy+1
 18769     1E04  0870               	movf	strcpy@src,w
 18770     1E05  00F2               	movwf	??_strcpy
 18771     1E06  0AF0               	incf	strcpy@src,f
 18772     1E07  1903               	skipnz
 18773     1E08  0AF1               	incf	strcpy@src+1,f
 18774     1E09  0872               	movf	??_strcpy,w
 18775     1E0A  0084               	movwf	4
 18776     1E0B  0873               	movf	??_strcpy+1,w
 18777     1E0C  0085               	movwf	5
 18778     1E0D  0800               	movf	0,w	;code access
 18779     1E0E  3FC0               	movwi [0]fsr1
 18780     1E0F  0889               	movf	9,f
 18781     1E10  1D03               	btfss	3,2
 18782     1E11  2E13               	goto	u421_21
 18783     1E12  2E14               	goto	u421_20
 18784     1E13                     u421_21:
 18785     1E13  2DFD               	goto	i1l4843
 18786     1E14                     u421_20:
 18787     1E14                     i1l1949:
 18788     1E14  0008               	return
 18789     1E15                     __end_of_strcpy:
 18790                           
 18791                           	psect	text86
 18792     1028                     __ptext86:	
 18793 ;; *************** function _pad *****************
 18794 ;; Defined at:
 18795 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 18796 ;; Parameters:    Size  Location     Type
 18797 ;;  fp              1    wreg     PTR struct _IO_FILE
 18798 ;;		 -> sprintf@f(11), 
 18799 ;;  buf             1   11[COMMON] PTR unsigned char 
 18800 ;;		 -> dbuf(80), 
 18801 ;;  p               2   12[COMMON] int 
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
 18804 ;;		 -> sprintf@f(11), 
 18805 ;;  i               2    5[BANK0 ] int 
 18806 ;; Return value:  Size  Location     Type
 18807 ;;                  1    wreg      void 
 18808 ;; Registers used:
 18809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18810 ;; Tracked objects:
 18811 ;;		On entry : 0/0
 18812 ;;		On exit  : 0/0
 18813 ;;		Unchanged: 0/0
 18814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18815 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18816 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18817 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18818 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18819 ;;Total ram usage:        7 bytes
 18820 ;; Hardware stack levels used: 1
 18821 ;; Hardware stack levels required when called: 3
 18822 ;; This function calls:
 18823 ;;		_fputc
 18824 ;;		_fputs
 18825 ;; This function is called by:
 18826 ;;		_efgtoa
 18827 ;;		_xtoa
 18828 ;; This function uses a non-reentrant model
 18829 ;;
 18830                           
 18831     1028                     _pad:	
 18832                           ;psect for function _pad
 18833                           
 18834                           
 18835                           ;incstack = 0
 18836 ;; hardware stack exceeded
 18837                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18838                           ;pad@fp stored from wreg
 18839     1028  0020               	movlb	0	; select bank0
 18840     1029  00A7               	movwf	pad@fp
 18841     102A                     i1l4805:
 18842                           
 18843                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 18844     102A  1FFD               	btfss	pad@p+1,7
 18845     102B  282D               	goto	u411_21
 18846     102C  282E               	goto	u411_20
 18847     102D                     u411_21:
 18848     102D  2830               	goto	i1l1762
 18849     102E                     u411_20:
 18850     102E                     i1l4807:
 18851                           
 18852                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 18853     102E  01FC               	clrf	pad@p
 18854     102F  01FD               	clrf	pad@p+1
 18855     1030                     i1l1762:	
 18856                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 207:  }
 18857                           
 18858                           
 18859                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 18860     1030  01A5               	clrf	pad@i
 18861     1031  01A6               	clrf	pad@i+1
 18862                           
 18863                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 18864     1032  2842               	goto	i1l4813
 18865     1033                     i1l4809:
 18866                           
 18867                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 18868     1033  3020               	movlw	32
 18869     1034  00F0               	movwf	fputc@c
 18870     1035  3000               	movlw	0
 18871     1036  00F1               	movwf	fputc@c+1
 18872     1037  0020               	movlb	0	; select bank0
 18873     1038  0827               	movf	pad@fp,w
 18874     1039  00F2               	movwf	fputc@fp
 18875     103A  3188  2000  3190   	fcall	_fputc
 18876     103D                     i1l4811:
 18877                           
 18878                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
 18879     103D  3001               	movlw	1
 18880     103E  0020               	movlb	0	; select bank0
 18881     103F  07A5               	addwf	pad@i,f
 18882     1040  3000               	movlw	0
 18883     1041  3DA6               	addwfc	pad@i+1,f
 18884     1042                     i1l4813:
 18885                           
 18886                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 18887     1042  0826               	movf	pad@i+1,w
 18888     1043  3A80               	xorlw	128
 18889     1044  00A4               	movwf	??_pad
 18890     1045  087D               	movf	pad@p+1,w
 18891     1046  3A80               	xorlw	128
 18892     1047  0224               	subwf	??_pad,w
 18893     1048  1D03               	skipz
 18894     1049  284C               	goto	u412_25
 18895     104A  087C               	movf	pad@p,w
 18896     104B  0225               	subwf	pad@i,w
 18897     104C                     u412_25:
 18898     104C  1C03               	skipc
 18899     104D  284F               	goto	u412_21
 18900     104E  2850               	goto	u412_20
 18901     104F                     u412_21:
 18902     104F  2833               	goto	i1l4809
 18903     1050                     u412_20:
 18904     1050                     i1l4815:
 18905                           
 18906                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 18907     1050  0020               	movlb	0	; select bank0
 18908     1051  0827               	movf	pad@fp,w
 18909     1052  00F8               	movwf	fputs@fp
 18910     1053  087B               	movf	pad@buf,w
 18911     1054  319F  2734  3190   	fcall	_fputs
 18912     1057                     i1l1766:
 18913     1057  0008               	return
 18914     1058                     __end_of_pad:
 18915                           
 18916                           	psect	text87
 18917     1F34                     __ptext87:	
 18918 ;; *************** function _fputs *****************
 18919 ;; Defined at:
 18920 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
 18921 ;; Parameters:    Size  Location     Type
 18922 ;;  s               1    wreg     PTR const unsigned char 
 18923 ;;		 -> dbuf(80), 
 18924 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
 18925 ;;		 -> sprintf@f(11), 
 18926 ;; Auto vars:     Size  Location     Type
 18927 ;;  s               1    3[BANK0 ] PTR const unsigned char 
 18928 ;;		 -> dbuf(80), 
 18929 ;;  i               2    1[BANK0 ] int 
 18930 ;;  c               1    0[BANK0 ] unsigned char 
 18931 ;; Return value:  Size  Location     Type
 18932 ;;                  2    8[COMMON] int 
 18933 ;; Registers used:
 18934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18935 ;; Tracked objects:
 18936 ;;		On entry : 0/0
 18937 ;;		On exit  : 0/0
 18938 ;;		Unchanged: 0/0
 18939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18940 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18941 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18943 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18944 ;;Total ram usage:        7 bytes
 18945 ;; Hardware stack levels used: 1
 18946 ;; Hardware stack levels required when called: 2
 18947 ;; This function calls:
 18948 ;;		_fputc
 18949 ;; This function is called by:
 18950 ;;		_pad
 18951 ;; This function uses a non-reentrant model
 18952 ;;
 18953                           
 18954     1F34                     _fputs:	
 18955                           ;psect for function _fputs
 18956                           
 18957                           
 18958                           ;incstack = 0
 18959 ;; hardware stack exceeded
 18960                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18961                           ;fputs@s stored from wreg
 18962     1F34  0020               	movlb	0	; select bank0
 18963     1F35  00A3               	movwf	fputs@s
 18964     1F36                     i1l4417:
 18965     1F36  01A1               	clrf	fputs@i
 18966     1F37  01A2               	clrf	fputs@i+1
 18967     1F38  2F4A               	goto	i1l4423
 18968     1F39                     i1l4419:
 18969     1F39  0820               	movf	fputs@c,w
 18970     1F3A  00F9               	movwf	??_fputs
 18971     1F3B  01FA               	clrf	??_fputs+1
 18972     1F3C  0879               	movf	??_fputs,w
 18973     1F3D  00F0               	movwf	fputc@c
 18974     1F3E  087A               	movf	??_fputs+1,w
 18975     1F3F  00F1               	movwf	fputc@c+1
 18976     1F40  0878               	movf	fputs@fp,w
 18977     1F41  00F2               	movwf	fputc@fp
 18978     1F42  3188  2000  319F   	fcall	_fputc
 18979     1F45                     i1l4421:
 18980     1F45  3001               	movlw	1
 18981     1F46  0020               	movlb	0	; select bank0
 18982     1F47  07A1               	addwf	fputs@i,f
 18983     1F48  3000               	movlw	0
 18984     1F49  3DA2               	addwfc	fputs@i+1,f
 18985     1F4A                     i1l4423:
 18986     1F4A  0821               	movf	fputs@i,w
 18987     1F4B  0723               	addwf	fputs@s,w
 18988     1F4C  00F9               	movwf	??_fputs
 18989     1F4D  0879               	movf	??_fputs,w
 18990     1F4E  0086               	movwf	6
 18991     1F4F  3002               	movlw	2	; select bank4/5
 18992     1F50  0087               	movwf	7
 18993     1F51  0801               	movf	1,w
 18994     1F52  00A0               	movwf	fputs@c
 18995     1F53  0820               	movf	fputs@c,w
 18996     1F54  1D03               	btfss	3,2
 18997     1F55  2F57               	goto	u330_21
 18998     1F56  2F58               	goto	u330_20
 18999     1F57                     u330_21:
 19000     1F57  2F39               	goto	i1l4419
 19001     1F58                     u330_20:
 19002     1F58                     i1l1940:
 19003     1F58  0008               	return
 19004     1F59                     __end_of_fputs:
 19005                           
 19006                           	psect	text88
 19007     0800                     __ptext88:	
 19008 ;; *************** function _fputc *****************
 19009 ;; Defined at:
 19010 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
 19011 ;; Parameters:    Size  Location     Type
 19012 ;;  c               2    0[COMMON] int 
 19013 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
 19014 ;;		 -> sprintf@f(11), 
 19015 ;; Auto vars:     Size  Location     Type
 19016 ;;		None
 19017 ;; Return value:  Size  Location     Type
 19018 ;;                  2    0[COMMON] int 
 19019 ;; Registers used:
 19020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19021 ;; Tracked objects:
 19022 ;;		On entry : 0/0
 19023 ;;		On exit  : 0/0
 19024 ;;		Unchanged: 0/0
 19025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19026 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19028 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19029 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19030 ;;Total ram usage:        8 bytes
 19031 ;; Hardware stack levels used: 1
 19032 ;; Hardware stack levels required when called: 1
 19033 ;; This function calls:
 19034 ;;		_putch
 19035 ;; This function is called by:
 19036 ;;		_pad
 19037 ;;		_vfpfcnvrt
 19038 ;;		_fputs
 19039 ;; This function uses a non-reentrant model
 19040 ;;
 19041                           
 19042     0800                     _fputc:	
 19043                           ;psect for function _fputc
 19044                           
 19045     0800                     i1l4193:	
 19046                           ;incstack = 0
 19047 ;; hardware stack exceeded
 19048                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19049                           
 19050     0800  0872               	movf	fputc@fp,w
 19051     0801  1903               	btfsc	3,2
 19052     0802  2804               	goto	u280_21
 19053     0803  2805               	goto	u280_20
 19054     0804                     u280_21:
 19055     0804  280A               	goto	i1l4197
 19056     0805                     u280_20:
 19057     0805                     i1l4195:
 19058     0805  0872               	movf	fputc@fp,w
 19059     0806  1D03               	btfss	3,2
 19060     0807  2809               	goto	u281_21
 19061     0808  280A               	goto	u281_20
 19062     0809                     u281_21:
 19063     0809  280F               	goto	i1l4199
 19064     080A                     u281_20:
 19065     080A                     i1l4197:
 19066     080A  0870               	movf	fputc@c,w
 19067     080B  319B  2323  3188   	fcall	_putch
 19068     080E  2856               	goto	i1l1932
 19069     080F                     i1l4199:
 19070     080F  0872               	movf	fputc@fp,w
 19071     0810  3E09               	addlw	9
 19072     0811  0086               	movwf	6
 19073     0812  3001               	movlw	1	; select bank2/3
 19074     0813  0087               	movwf	7
 19075     0814  0016               	moviw fsr1++
 19076     0815  0401               	iorwf	1,w
 19077     0816  1903               	btfsc	3,2
 19078     0817  2819               	goto	u282_21
 19079     0818  281A               	goto	u282_20
 19080     0819                     u282_21:
 19081     0819  283A               	goto	i1l4203
 19082     081A                     u282_20:
 19083     081A                     i1l4201:
 19084     081A  0872               	movf	fputc@fp,w
 19085     081B  3E09               	addlw	9
 19086     081C  0086               	movwf	6
 19087     081D  3001               	movlw	1	; select bank2/3
 19088     081E  0087               	movwf	7
 19089     081F  3F40               	moviw [0]fsr1
 19090     0820  00F3               	movwf	??_fputc
 19091     0821  3F41               	moviw [1]fsr1
 19092     0822  00F4               	movwf	??_fputc+1
 19093     0823  0872               	movf	fputc@fp,w
 19094     0824  3E02               	addlw	2
 19095     0825  0086               	movwf	6
 19096     0826  3001               	movlw	1	; select bank2/3
 19097     0827  0087               	movwf	7
 19098     0828  3F40               	moviw [0]fsr1
 19099     0829  00F5               	movwf	??_fputc+2
 19100     082A  3F41               	moviw [1]fsr1
 19101     082B  00F6               	movwf	??_fputc+3
 19102     082C  0876               	movf	??_fputc+3,w
 19103     082D  3A80               	xorlw	128
 19104     082E  00F7               	movwf	??_fputc+4
 19105     082F  0874               	movf	??_fputc+1,w
 19106     0830  3A80               	xorlw	128
 19107     0831  0277               	subwf	??_fputc+4,w
 19108     0832  1D03               	skipz
 19109     0833  2836               	goto	u283_25
 19110     0834  0873               	movf	??_fputc,w
 19111     0835  0275               	subwf	??_fputc+2,w
 19112     0836                     u283_25:
 19113     0836  1803               	skipnc
 19114     0837  2839               	goto	u283_21
 19115     0838  283A               	goto	u283_20
 19116     0839                     u283_21:
 19117     0839  2856               	goto	i1l1932
 19118     083A                     u283_20:
 19119     083A                     i1l4203:
 19120     083A  0872               	movf	fputc@fp,w
 19121     083B  0086               	movwf	6
 19122     083C  3001               	movlw	1	; select bank2/3
 19123     083D  0087               	movwf	7
 19124     083E  0872               	movf	fputc@fp,w
 19125     083F  3E02               	addlw	2
 19126     0840  0084               	movwf	4
 19127     0841  3001               	movlw	1	; select bank2/3
 19128     0842  0085               	movwf	5
 19129     0843  0800               	movf	0,w
 19130     0844  0701               	addwf	1,w
 19131     0845  00F3               	movwf	??_fputc
 19132     0846  0873               	movf	??_fputc,w
 19133     0847  0086               	movwf	6
 19134     0848  3001               	movlw	1	; select bank2/3
 19135     0849  0087               	movwf	7
 19136     084A  0870               	movf	fputc@c,w
 19137     084B  0081               	movwf	1
 19138     084C                     i1l4205:
 19139     084C  0872               	movf	fputc@fp,w
 19140     084D  3E02               	addlw	2
 19141     084E  0086               	movwf	6
 19142     084F  3001               	movlw	1	; select bank2/3
 19143     0850  0087               	movwf	7
 19144     0851  3001               	movlw	1
 19145     0852  0781               	addwf	1,f
 19146     0853  3141               	addfsr 1,1
 19147     0854  1803               	skipnc
 19148     0855  0A81               	incf	1,f
 19149     0856                     i1l1932:
 19150     0856  0008               	return
 19151     0857                     __end_of_fputc:
 19152                           
 19153                           	psect	text89
 19154     1B23                     __ptext89:	
 19155 ;; *************** function _putch *****************
 19156 ;; Defined at:
 19157 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
 19158 ;; Parameters:    Size  Location     Type
 19159 ;;  c               1    wreg     unsigned char 
 19160 ;; Auto vars:     Size  Location     Type
 19161 ;;  c               1    0[COMMON] unsigned char 
 19162 ;; Return value:  Size  Location     Type
 19163 ;;                  1    wreg      void 
 19164 ;; Registers used:
 19165 ;;		wreg
 19166 ;; Tracked objects:
 19167 ;;		On entry : 0/0
 19168 ;;		On exit  : 0/0
 19169 ;;		Unchanged: 0/0
 19170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19175 ;;Total ram usage:        0 bytes
 19176 ;; Hardware stack levels used: 1
 19177 ;; This function calls:
 19178 ;;		Nothing
 19179 ;; This function is called by:
 19180 ;;		_fputc
 19181 ;; This function uses a non-reentrant model
 19182 ;;
 19183                           
 19184     1B23                     _putch:	
 19185                           ;psect for function _putch
 19186                           
 19187     1B23                     i1l1943:	
 19188                           ;incstack = 0
 19189 ;; hardware stack exceeded
 19190                           ; Regs used in _putch: [wreg]
 19191                           
 19192     1B23  0008               	return
 19193     1B24                     __end_of_putch:
 19194                           
 19195                           	psect	text90
 19196     1001                     __ptext90:	
 19197 ;; *************** function _memcpy *****************
 19198 ;; Defined at:
 19199 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 19200 ;; Parameters:    Size  Location     Type
 19201 ;;  d1              1    wreg     PTR void 
 19202 ;;		 -> dbuf(80), 
 19203 ;;  s1              1    0[COMMON] PTR const void 
 19204 ;;		 -> dbuf(80), 
 19205 ;;  n               2    1[COMMON] unsigned int 
 19206 ;; Auto vars:     Size  Location     Type
 19207 ;;  d1              1    5[COMMON] PTR void 
 19208 ;;		 -> dbuf(80), 
 19209 ;;  s               1    7[COMMON] PTR const unsigned char 
 19210 ;;		 -> dbuf(80), 
 19211 ;;  d               1    6[COMMON] PTR unsigned char 
 19212 ;;		 -> dbuf(80), 
 19213 ;;  tmp             1    4[COMMON] unsigned char 
 19214 ;; Return value:  Size  Location     Type
 19215 ;;                  1    wreg      PTR void 
 19216 ;; Registers used:
 19217 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19218 ;; Tracked objects:
 19219 ;;		On entry : 0/0
 19220 ;;		On exit  : 0/0
 19221 ;;		Unchanged: 0/0
 19222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19223 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19224 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19226 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19227 ;;Total ram usage:        8 bytes
 19228 ;; Hardware stack levels used: 1
 19229 ;; This function calls:
 19230 ;;		Nothing
 19231 ;; This function is called by:
 19232 ;;		_efgtoa
 19233 ;; This function uses a non-reentrant model
 19234 ;;
 19235                           
 19236     1001                     _memcpy:	
 19237                           ;psect for function _memcpy
 19238                           
 19239                           
 19240                           ;incstack = 0
 19241                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
 19242                           ;memcpy@d1 stored from wreg
 19243     1001  00F5               	movwf	memcpy@d1
 19244     1002                     i1l4883:
 19245     1002  0870               	movf	memcpy@s1,w
 19246     1003  00F7               	movwf	memcpy@s
 19247     1004  0875               	movf	memcpy@d1,w
 19248     1005  00F6               	movwf	memcpy@d
 19249     1006  281B               	goto	i1l1917
 19250     1007                     i1l4885:
 19251     1007  0877               	movf	memcpy@s,w
 19252     1008  0086               	movwf	6
 19253     1009  3002               	movlw	2	; select bank4/5
 19254     100A  0087               	movwf	7
 19255     100B  0801               	movf	1,w
 19256     100C  00F4               	movwf	memcpy@tmp
 19257     100D                     i1l4887:
 19258     100D  3001               	movlw	1
 19259     100E  00F3               	movwf	??_memcpy
 19260     100F  0873               	movf	??_memcpy,w
 19261     1010  07F7               	addwf	memcpy@s,f
 19262     1011                     i1l4889:
 19263     1011  0876               	movf	memcpy@d,w
 19264     1012  0086               	movwf	6
 19265     1013  3002               	movlw	2	; select bank4/5
 19266     1014  0087               	movwf	7
 19267     1015  0874               	movf	memcpy@tmp,w
 19268     1016  0081               	movwf	1
 19269     1017  3001               	movlw	1
 19270     1018  00F3               	movwf	??_memcpy
 19271     1019  0873               	movf	??_memcpy,w
 19272     101A  07F6               	addwf	memcpy@d,f
 19273     101B                     i1l1917:
 19274     101B  3001               	movlw	1
 19275     101C  02F1               	subwf	memcpy@n,f
 19276     101D  3000               	movlw	0
 19277     101E  3BF2               	subwfb	memcpy@n+1,f
 19278     101F  0A71               	incf	memcpy@n,w
 19279     1020  1D03               	skipz
 19280     1021  2826               	goto	u434_21
 19281     1022  0A72               	incf	memcpy@n+1,w
 19282     1023  1D03               	btfss	3,2
 19283     1024  2826               	goto	u434_21
 19284     1025  2827               	goto	u434_20
 19285     1026                     u434_21:
 19286     1026  2807               	goto	i1l4885
 19287     1027                     u434_20:
 19288     1027                     i1l1920:
 19289     1027  0008               	return
 19290     1028                     __end_of_memcpy:
 19291                           
 19292                           	psect	text91
 19293     1D17                     __ptext91:	
 19294 ;; *************** function _labs *****************
 19295 ;; Defined at:
 19296 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
 19297 ;; Parameters:    Size  Location     Type
 19298 ;;  a               4    0[COMMON] long 
 19299 ;; Auto vars:     Size  Location     Type
 19300 ;;		None
 19301 ;; Return value:  Size  Location     Type
 19302 ;;                  4    0[COMMON] long 
 19303 ;; Registers used:
 19304 ;;		wreg, status,2, status,0
 19305 ;; Tracked objects:
 19306 ;;		On entry : 0/0
 19307 ;;		On exit  : 0/0
 19308 ;;		Unchanged: 0/0
 19309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19313 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19314 ;;Total ram usage:        4 bytes
 19315 ;; Hardware stack levels used: 1
 19316 ;; This function calls:
 19317 ;;		Nothing
 19318 ;; This function is called by:
 19319 ;;		_efgtoa
 19320 ;; This function uses a non-reentrant model
 19321 ;;
 19322                           
 19323     1D17                     _labs:	
 19324                           ;psect for function _labs
 19325                           
 19326     1D17                     i1l4845:	
 19327                           ;incstack = 0
 19328                           ; Regs used in _labs: [wreg+status,2+status,0]
 19329                           
 19330     1D17  1BF3               	btfsc	labs@a+3,7
 19331     1D18  2D1A               	goto	u422_21
 19332     1D19  2D1B               	goto	u422_20
 19333     1D1A                     u422_21:
 19334     1D1A  2D1C               	goto	i1l4849
 19335     1D1B                     u422_20:
 19336     1D1B                     i1l4847:
 19337     1D1B  2D2B               	goto	i1l1914
 19338     1D1C                     i1l4849:
 19339     1D1C  0970               	comf	labs@a,w
 19340     1D1D  00F0               	movwf	?_labs
 19341     1D1E  0971               	comf	labs@a+1,w
 19342     1D1F  00F1               	movwf	?_labs+1
 19343     1D20  0972               	comf	labs@a+2,w
 19344     1D21  00F2               	movwf	?_labs+2
 19345     1D22  0973               	comf	labs@a+3,w
 19346     1D23  00F3               	movwf	?_labs+3
 19347     1D24  0AF0               	incf	?_labs,f
 19348     1D25  1903               	skipnz
 19349     1D26  0AF1               	incf	?_labs+1,f
 19350     1D27  1903               	skipnz
 19351     1D28  0AF2               	incf	?_labs+2,f
 19352     1D29  1903               	skipnz
 19353     1D2A  0AF3               	incf	?_labs+3,f
 19354     1D2B                     i1l1914:
 19355     1D2B  0008               	return
 19356     1D2C                     __end_of_labs:
 19357                           
 19358                           	psect	text92
 19359     06A9                     __ptext92:	
 19360 ;; *************** function _floorf *****************
 19361 ;; Defined at:
 19362 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
 19363 ;; Parameters:    Size  Location     Type
 19364 ;;  x               4   58[BANK0 ] float 
 19365 ;; Auto vars:     Size  Location     Type
 19366 ;;  u               4   74[BANK0 ] struct .
 19367 ;;  m               4   68[BANK0 ] unsigned long 
 19368 ;;  e               2   72[BANK0 ] int 
 19369 ;; Return value:  Size  Location     Type
 19370 ;;                  4   58[BANK0 ] float 
 19371 ;; Registers used:
 19372 ;;		wreg, status,2, status,0
 19373 ;; Tracked objects:
 19374 ;;		On entry : 0/0
 19375 ;;		On exit  : 0/0
 19376 ;;		Unchanged: 0/0
 19377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19378 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19379 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19380 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19381 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19382 ;;Total ram usage:       20 bytes
 19383 ;; Hardware stack levels used: 1
 19384 ;; This function calls:
 19385 ;;		Nothing
 19386 ;; This function is called by:
 19387 ;;		_efgtoa
 19388 ;; This function uses a non-reentrant model
 19389 ;;
 19390                           
 19391     06A9                     _floorf:	
 19392                           ;psect for function _floorf
 19393                           
 19394     06A9                     i1l4853:	
 19395                           ;incstack = 0
 19396                           ; Regs used in _floorf: [wreg+status,2+status,0]
 19397                           
 19398     06A9  0023               	movlb	3	; select bank3
 19399     06AA  0823               	movf	(floorf@F521+3)^(0+384),w
 19400     06AB  0020               	movlb	0	; select bank0
 19401     06AC  00ED               	movwf	floorf@u+3
 19402     06AD  0023               	movlb	3	; select bank3
 19403     06AE  0822               	movf	(floorf@F521+2)^(0+384),w
 19404     06AF  0020               	movlb	0	; select bank0
 19405     06B0  00EC               	movwf	floorf@u+2
 19406     06B1  0023               	movlb	3	; select bank3
 19407     06B2  0821               	movf	(floorf@F521+1)^(0+384),w
 19408     06B3  0020               	movlb	0	; select bank0
 19409     06B4  00EB               	movwf	floorf@u+1
 19410     06B5  0023               	movlb	3	; select bank3
 19411     06B6  0820               	movf	floorf@F521^(0+384),w
 19412     06B7  0020               	movlb	0	; select bank0
 19413     06B8  00EA               	movwf	floorf@u
 19414     06B9  085D               	movf	floorf@x+3,w
 19415     06BA  00ED               	movwf	floorf@u+3
 19416     06BB  085C               	movf	floorf@x+2,w
 19417     06BC  00EC               	movwf	floorf@u+2
 19418     06BD  085B               	movf	floorf@x+1,w
 19419     06BE  00EB               	movwf	floorf@u+1
 19420     06BF  085A               	movf	floorf@x,w
 19421     06C0  00EA               	movwf	floorf@u
 19422     06C1                     i1l4855:
 19423     06C1  086A               	movf	floorf@u,w
 19424     06C2  00DE               	movwf	??_floorf
 19425     06C3  086B               	movf	floorf@u+1,w
 19426     06C4  00DF               	movwf	??_floorf+1
 19427     06C5  086C               	movf	floorf@u+2,w
 19428     06C6  00E0               	movwf	??_floorf+2
 19429     06C7  086D               	movf	floorf@u+3,w
 19430     06C8  00E1               	movwf	??_floorf+3
 19431     06C9  3017               	movlw	23
 19432     06CA                     u423_25:
 19433     06CA  36E1               	lsrf	??_floorf+3,f
 19434     06CB  0CE0               	rrf	??_floorf+2,f
 19435     06CC  0CDF               	rrf	??_floorf+1,f
 19436     06CD  0CDE               	rrf	??_floorf,f
 19437     06CE                     u423_20:
 19438     06CE  0B89               	decfsz	9,f
 19439     06CF  2ECA               	goto	u423_25
 19440     06D0  30FF               	movlw	255
 19441     06D1  055E               	andwf	??_floorf,w
 19442     06D2  00E2               	movwf	??_floorf+4
 19443     06D3  3000               	movlw	0
 19444     06D4  055F               	andwf	??_floorf+1,w
 19445     06D5  00E3               	movwf	??_floorf+5
 19446     06D6  0862               	movf	??_floorf+4,w
 19447     06D7  3E81               	addlw	129
 19448     06D8  00E8               	movwf	floorf@e
 19449     06D9  30FF               	movlw	255
 19450     06DA  3D63               	addwfc	??_floorf+5,w
 19451     06DB  00E9               	movwf	floorf@e+1
 19452     06DC                     i1l4857:
 19453     06DC  0869               	movf	floorf@e+1,w
 19454     06DD  3A80               	xorlw	128
 19455     06DE  00DE               	movwf	??_floorf
 19456     06DF  3080               	movlw	128
 19457     06E0  025E               	subwf	??_floorf,w
 19458     06E1  1D03               	skipz
 19459     06E2  2EE5               	goto	u424_25
 19460     06E3  3017               	movlw	23
 19461     06E4  0268               	subwf	floorf@e,w
 19462     06E5                     u424_25:
 19463     06E5  1C03               	skipc
 19464     06E6  2EE8               	goto	u424_21
 19465     06E7  2EE9               	goto	u424_20
 19466     06E8                     u424_21:
 19467     06E8  2EEA               	goto	i1l1899
 19468     06E9                     u424_20:
 19469     06E9                     i1l4859:
 19470     06E9  2F93               	goto	i1l1900
 19471     06EA                     i1l1899:
 19472     06EA  0020               	movlb	0	; select bank0
 19473     06EB  1BE9               	btfsc	floorf@e+1,7
 19474     06EC  2EEE               	goto	u425_21
 19475     06ED  2EEF               	goto	u425_20
 19476     06EE                     u425_21:
 19477     06EE  2F4C               	goto	i1l4873
 19478     06EF                     u425_20:
 19479     06EF                     i1l4861:
 19480     06EF  30FF               	movlw	255
 19481     06F0  00DE               	movwf	??_floorf
 19482     06F1  30FF               	movlw	255
 19483     06F2  00DF               	movwf	??_floorf+1
 19484     06F3  307F               	movlw	127
 19485     06F4  00E0               	movwf	??_floorf+2
 19486     06F5  3000               	movlw	0
 19487     06F6  00E1               	movwf	??_floorf+3
 19488     06F7  0A68               	incf	floorf@e,w
 19489     06F8  2EFD               	goto	u426_20
 19490     06F9                     u426_25:
 19491     06F9  37E1               	asrf	??_floorf+3,f
 19492     06FA  0CE0               	rrf	??_floorf+2,f
 19493     06FB  0CDF               	rrf	??_floorf+1,f
 19494     06FC  0CDE               	rrf	??_floorf,f
 19495     06FD                     u426_20:
 19496     06FD  0B89               	decfsz	9,f
 19497     06FE  2EF9               	goto	u426_25
 19498     06FF  0861               	movf	??_floorf+3,w
 19499     0700  00E7               	movwf	floorf@m+3
 19500     0701  0860               	movf	??_floorf+2,w
 19501     0702  00E6               	movwf	floorf@m+2
 19502     0703  085F               	movf	??_floorf+1,w
 19503     0704  00E5               	movwf	floorf@m+1
 19504     0705  085E               	movf	??_floorf,w
 19505     0706  00E4               	movwf	floorf@m
 19506     0707                     i1l4863:
 19507     0707  086A               	movf	floorf@u,w
 19508     0708  0564               	andwf	floorf@m,w
 19509     0709  00DE               	movwf	??_floorf
 19510     070A  086B               	movf	floorf@u+1,w
 19511     070B  0565               	andwf	floorf@m+1,w
 19512     070C  00DF               	movwf	??_floorf+1
 19513     070D  086C               	movf	floorf@u+2,w
 19514     070E  0566               	andwf	floorf@m+2,w
 19515     070F  00E0               	movwf	??_floorf+2
 19516     0710  086D               	movf	floorf@u+3,w
 19517     0711  0567               	andwf	floorf@m+3,w
 19518     0712  00E1               	movwf	??_floorf+3
 19519     0713  0861               	movf	??_floorf+3,w
 19520     0714  0460               	iorwf	??_floorf+2,w
 19521     0715  045F               	iorwf	??_floorf+1,w
 19522     0716  045E               	iorwf	??_floorf,w
 19523     0717  1D03               	skipz
 19524     0718  2F1A               	goto	u427_21
 19525     0719  2F1B               	goto	u427_20
 19526     071A                     u427_21:
 19527     071A  2F1C               	goto	i1l4867
 19528     071B                     u427_20:
 19529     071B  2EE9               	goto	i1l4859
 19530     071C                     i1l4867:
 19531     071C  086A               	movf	floorf@u,w
 19532     071D  00DE               	movwf	??_floorf
 19533     071E  086B               	movf	floorf@u+1,w
 19534     071F  00DF               	movwf	??_floorf+1
 19535     0720  086C               	movf	floorf@u+2,w
 19536     0721  00E0               	movwf	??_floorf+2
 19537     0722  086D               	movf	floorf@u+3,w
 19538     0723  00E1               	movwf	??_floorf+3
 19539     0724  301F               	movlw	31
 19540     0725                     u428_25:
 19541     0725  36E1               	lsrf	??_floorf+3,f
 19542     0726  0CE0               	rrf	??_floorf+2,f
 19543     0727  0CDF               	rrf	??_floorf+1,f
 19544     0728  0CDE               	rrf	??_floorf,f
 19545     0729                     u428_20:
 19546     0729  0B89               	decfsz	9,f
 19547     072A  2F25               	goto	u428_25
 19548     072B  0861               	movf	??_floorf+3,w
 19549     072C  0460               	iorwf	??_floorf+2,w
 19550     072D  045F               	iorwf	??_floorf+1,w
 19551     072E  045E               	iorwf	??_floorf,w
 19552     072F  1903               	skipnz
 19553     0730  2F32               	goto	u429_21
 19554     0731  2F33               	goto	u429_20
 19555     0732                     u429_21:
 19556     0732  2F3B               	goto	i1l4871
 19557     0733                     u429_20:
 19558     0733                     i1l4869:
 19559     0733  0864               	movf	floorf@m,w
 19560     0734  07EA               	addwf	floorf@u,f
 19561     0735  0865               	movf	floorf@m+1,w
 19562     0736  3DEB               	addwfc	floorf@u+1,f
 19563     0737  0866               	movf	floorf@m+2,w
 19564     0738  3DEC               	addwfc	floorf@u+2,f
 19565     0739  0867               	movf	floorf@m+3,w
 19566     073A  3DED               	addwfc	floorf@u+3,f
 19567     073B                     i1l4871:
 19568     073B  0964               	comf	floorf@m,w
 19569     073C  00DE               	movwf	??_floorf
 19570     073D  0965               	comf	floorf@m+1,w
 19571     073E  00DF               	movwf	??_floorf+1
 19572     073F  0966               	comf	floorf@m+2,w
 19573     0740  00E0               	movwf	??_floorf+2
 19574     0741  0967               	comf	floorf@m+3,w
 19575     0742  00E1               	movwf	??_floorf+3
 19576     0743  085E               	movf	??_floorf,w
 19577     0744  05EA               	andwf	floorf@u,f
 19578     0745  085F               	movf	??_floorf+1,w
 19579     0746  05EB               	andwf	floorf@u+1,f
 19580     0747  0860               	movf	??_floorf+2,w
 19581     0748  05EC               	andwf	floorf@u+2,f
 19582     0749  0861               	movf	??_floorf+3,w
 19583     074A  05ED               	andwf	floorf@u+3,f
 19584     074B  2F8B               	goto	i1l1904
 19585     074C                     i1l4873:
 19586     074C  086A               	movf	floorf@u,w
 19587     074D  00DE               	movwf	??_floorf
 19588     074E  086B               	movf	floorf@u+1,w
 19589     074F  00DF               	movwf	??_floorf+1
 19590     0750  086C               	movf	floorf@u+2,w
 19591     0751  00E0               	movwf	??_floorf+2
 19592     0752  086D               	movf	floorf@u+3,w
 19593     0753  00E1               	movwf	??_floorf+3
 19594     0754  301F               	movlw	31
 19595     0755                     u430_25:
 19596     0755  36E1               	lsrf	??_floorf+3,f
 19597     0756  0CE0               	rrf	??_floorf+2,f
 19598     0757  0CDF               	rrf	??_floorf+1,f
 19599     0758  0CDE               	rrf	??_floorf,f
 19600     0759                     u430_20:
 19601     0759  0B89               	decfsz	9,f
 19602     075A  2F55               	goto	u430_25
 19603     075B  0861               	movf	??_floorf+3,w
 19604     075C  0460               	iorwf	??_floorf+2,w
 19605     075D  045F               	iorwf	??_floorf+1,w
 19606     075E  045E               	iorwf	??_floorf,w
 19607     075F  1D03               	skipz
 19608     0760  2F62               	goto	u431_21
 19609     0761  2F63               	goto	u431_20
 19610     0762                     u431_21:
 19611     0762  2F6C               	goto	i1l4877
 19612     0763                     u431_20:
 19613     0763                     i1l4875:
 19614     0763  3000               	movlw	0
 19615     0764  00ED               	movwf	floorf@u+3
 19616     0765  3000               	movlw	0
 19617     0766  00EC               	movwf	floorf@u+2
 19618     0767  3000               	movlw	0
 19619     0768  00EB               	movwf	floorf@u+1
 19620     0769  3000               	movlw	0
 19621     076A  00EA               	movwf	floorf@u
 19622     076B  2F8B               	goto	i1l1904
 19623     076C                     i1l4877:
 19624     076C  086A               	movf	floorf@u,w
 19625     076D  00DE               	movwf	??_floorf
 19626     076E  086B               	movf	floorf@u+1,w
 19627     076F  00DF               	movwf	??_floorf+1
 19628     0770  086C               	movf	floorf@u+2,w
 19629     0771  00E0               	movwf	??_floorf+2
 19630     0772  086D               	movf	floorf@u+3,w
 19631     0773  00E1               	movwf	??_floorf+3
 19632     0774  3001               	movlw	1
 19633     0775                     u432_25:
 19634     0775  35DE               	lslf	??_floorf,f
 19635     0776  0DDF               	rlf	??_floorf+1,f
 19636     0777  0DE0               	rlf	??_floorf+2,f
 19637     0778  0DE1               	rlf	??_floorf+3,f
 19638     0779                     u432_20:
 19639     0779  0B89               	decfsz	9,f
 19640     077A  2F75               	goto	u432_25
 19641     077B  0861               	movf	??_floorf+3,w
 19642     077C  0460               	iorwf	??_floorf+2,w
 19643     077D  045F               	iorwf	??_floorf+1,w
 19644     077E  045E               	iorwf	??_floorf,w
 19645     077F  1903               	skipnz
 19646     0780  2F82               	goto	u433_21
 19647     0781  2F83               	goto	u433_20
 19648     0782                     u433_21:
 19649     0782  2F8B               	goto	i1l1904
 19650     0783                     u433_20:
 19651     0783                     i1l4879:
 19652     0783  30BF               	movlw	191
 19653     0784  00ED               	movwf	floorf@u+3
 19654     0785  3080               	movlw	128
 19655     0786  00EC               	movwf	floorf@u+2
 19656     0787  3000               	movlw	0
 19657     0788  00EB               	movwf	floorf@u+1
 19658     0789  3000               	movlw	0
 19659     078A  00EA               	movwf	floorf@u
 19660     078B                     i1l1904:
 19661     078B  086D               	movf	floorf@u+3,w
 19662     078C  00DD               	movwf	?_floorf+3
 19663     078D  086C               	movf	floorf@u+2,w
 19664     078E  00DC               	movwf	?_floorf+2
 19665     078F  086B               	movf	floorf@u+1,w
 19666     0790  00DB               	movwf	?_floorf+1
 19667     0791  086A               	movf	floorf@u,w
 19668     0792  00DA               	movwf	?_floorf
 19669     0793                     i1l1900:
 19670     0793  0008               	return
 19671     0794                     __end_of_floorf:
 19672                           
 19673                           	psect	text93
 19674     1385                     __ptext93:	
 19675 ;; *************** function ___fpclassifyf *****************
 19676 ;; Defined at:
 19677 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
 19678 ;; Parameters:    Size  Location     Type
 19679 ;;  x               4    0[COMMON] float 
 19680 ;; Auto vars:     Size  Location     Type
 19681 ;;  u               4    2[BANK0 ] struct .
 19682 ;;  e               2    0[BANK0 ] int 
 19683 ;; Return value:  Size  Location     Type
 19684 ;;                  2    0[COMMON] int 
 19685 ;; Registers used:
 19686 ;;		wreg, status,2, status,0
 19687 ;; Tracked objects:
 19688 ;;		On entry : 0/0
 19689 ;;		On exit  : 0/0
 19690 ;;		Unchanged: 0/0
 19691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19693 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19694 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19695 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19696 ;;Total ram usage:       16 bytes
 19697 ;; Hardware stack levels used: 1
 19698 ;; This function calls:
 19699 ;;		Nothing
 19700 ;; This function is called by:
 19701 ;;		_efgtoa
 19702 ;; This function uses a non-reentrant model
 19703 ;;
 19704                           
 19705     1385                     ___fpclassifyf:	
 19706                           ;psect for function ___fpclassifyf
 19707                           
 19708     1385                     i1l4817:	
 19709                           ;incstack = 0
 19710                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 19711                           
 19712     1385  0023               	movlb	3	; select bank3
 19713     1386  0827               	movf	(___fpclassifyf@F465+3)^(0+384),w
 19714     1387  0020               	movlb	0	; select bank0
 19715     1388  00A5               	movwf	___fpclassifyf@u+3
 19716     1389  0023               	movlb	3	; select bank3
 19717     138A  0826               	movf	(___fpclassifyf@F465+2)^(0+384),w
 19718     138B  0020               	movlb	0	; select bank0
 19719     138C  00A4               	movwf	___fpclassifyf@u+2
 19720     138D  0023               	movlb	3	; select bank3
 19721     138E  0825               	movf	(___fpclassifyf@F465+1)^(0+384),w
 19722     138F  0020               	movlb	0	; select bank0
 19723     1390  00A3               	movwf	___fpclassifyf@u+1
 19724     1391  0023               	movlb	3	; select bank3
 19725     1392  0824               	movf	___fpclassifyf@F465^(0+384),w
 19726     1393  0020               	movlb	0	; select bank0
 19727     1394  00A2               	movwf	___fpclassifyf@u
 19728     1395  0873               	movf	___fpclassifyf@x+3,w
 19729     1396  00A5               	movwf	___fpclassifyf@u+3
 19730     1397  0872               	movf	___fpclassifyf@x+2,w
 19731     1398  00A4               	movwf	___fpclassifyf@u+2
 19732     1399  0871               	movf	___fpclassifyf@x+1,w
 19733     139A  00A3               	movwf	___fpclassifyf@u+1
 19734     139B  0870               	movf	___fpclassifyf@x,w
 19735     139C  00A2               	movwf	___fpclassifyf@u
 19736     139D                     i1l4819:
 19737     139D  0822               	movf	___fpclassifyf@u,w
 19738     139E  00F4               	movwf	??___fpclassifyf
 19739     139F  0823               	movf	___fpclassifyf@u+1,w
 19740     13A0  00F5               	movwf	??___fpclassifyf+1
 19741     13A1  0824               	movf	___fpclassifyf@u+2,w
 19742     13A2  00F6               	movwf	??___fpclassifyf+2
 19743     13A3  0825               	movf	___fpclassifyf@u+3,w
 19744     13A4  00F7               	movwf	??___fpclassifyf+3
 19745     13A5  3017               	movlw	23
 19746     13A6                     u413_25:
 19747     13A6  36F7               	lsrf	??___fpclassifyf+3,f
 19748     13A7  0CF6               	rrf	??___fpclassifyf+2,f
 19749     13A8  0CF5               	rrf	??___fpclassifyf+1,f
 19750     13A9  0CF4               	rrf	??___fpclassifyf,f
 19751     13AA                     u413_20:
 19752     13AA  0B89               	decfsz	9,f
 19753     13AB  2BA6               	goto	u413_25
 19754     13AC  30FF               	movlw	255
 19755     13AD  0574               	andwf	??___fpclassifyf,w
 19756     13AE  00A0               	movwf	___fpclassifyf@e
 19757     13AF  3000               	movlw	0
 19758     13B0  0575               	andwf	??___fpclassifyf+1,w
 19759     13B1  00A1               	movwf	___fpclassifyf@e+1
 19760     13B2                     i1l4821:
 19761     13B2  0820               	movf	___fpclassifyf@e,w
 19762     13B3  0421               	iorwf	___fpclassifyf@e+1,w
 19763     13B4  1D03               	btfss	3,2
 19764     13B5  2BB7               	goto	u414_21
 19765     13B6  2BB8               	goto	u414_20
 19766     13B7                     u414_21:
 19767     13B7  2BD9               	goto	i1l4831
 19768     13B8                     u414_20:
 19769     13B8                     i1l4823:
 19770     13B8  0822               	movf	___fpclassifyf@u,w
 19771     13B9  00F4               	movwf	??___fpclassifyf
 19772     13BA  0823               	movf	___fpclassifyf@u+1,w
 19773     13BB  00F5               	movwf	??___fpclassifyf+1
 19774     13BC  0824               	movf	___fpclassifyf@u+2,w
 19775     13BD  00F6               	movwf	??___fpclassifyf+2
 19776     13BE  0825               	movf	___fpclassifyf@u+3,w
 19777     13BF  00F7               	movwf	??___fpclassifyf+3
 19778     13C0  3001               	movlw	1
 19779     13C1                     u415_25:
 19780     13C1  35F4               	lslf	??___fpclassifyf,f
 19781     13C2  0DF5               	rlf	??___fpclassifyf+1,f
 19782     13C3  0DF6               	rlf	??___fpclassifyf+2,f
 19783     13C4  0DF7               	rlf	??___fpclassifyf+3,f
 19784     13C5                     u415_20:
 19785     13C5  0B89               	decfsz	9,f
 19786     13C6  2BC1               	goto	u415_25
 19787     13C7  0877               	movf	??___fpclassifyf+3,w
 19788     13C8  0476               	iorwf	??___fpclassifyf+2,w
 19789     13C9  0475               	iorwf	??___fpclassifyf+1,w
 19790     13CA  0474               	iorwf	??___fpclassifyf,w
 19791     13CB  1D03               	skipz
 19792     13CC  2BCE               	goto	u416_21
 19793     13CD  2BCF               	goto	u416_20
 19794     13CE                     u416_21:
 19795     13CE  2BD4               	goto	i1l4827
 19796     13CF                     u416_20:
 19797     13CF                     i1l4825:
 19798     13CF  3002               	movlw	2
 19799     13D0  00F0               	movwf	?___fpclassifyf
 19800     13D1  3000               	movlw	0
 19801     13D2  00F1               	movwf	?___fpclassifyf+1
 19802     13D3  2C03               	goto	i1l1893
 19803     13D4                     i1l4827:
 19804     13D4  3003               	movlw	3
 19805     13D5  00F0               	movwf	?___fpclassifyf
 19806     13D6  3000               	movlw	0
 19807     13D7  00F1               	movwf	?___fpclassifyf+1
 19808     13D8  2C03               	goto	i1l1893
 19809     13D9                     i1l4831:
 19810     13D9  0A20               	incf	___fpclassifyf@e,w
 19811     13DA  0421               	iorwf	___fpclassifyf@e+1,w
 19812     13DB  1D03               	btfss	3,2
 19813     13DC  2BDE               	goto	u417_21
 19814     13DD  2BDF               	goto	u417_20
 19815     13DE                     u417_21:
 19816     13DE  2BFF               	goto	i1l4837
 19817     13DF                     u417_20:
 19818     13DF                     i1l4833:
 19819     13DF  0822               	movf	___fpclassifyf@u,w
 19820     13E0  00F4               	movwf	??___fpclassifyf
 19821     13E1  0823               	movf	___fpclassifyf@u+1,w
 19822     13E2  00F5               	movwf	??___fpclassifyf+1
 19823     13E3  0824               	movf	___fpclassifyf@u+2,w
 19824     13E4  00F6               	movwf	??___fpclassifyf+2
 19825     13E5  0825               	movf	___fpclassifyf@u+3,w
 19826     13E6  00F7               	movwf	??___fpclassifyf+3
 19827     13E7  3009               	movlw	9
 19828     13E8                     u418_25:
 19829     13E8  35F4               	lslf	??___fpclassifyf,f
 19830     13E9  0DF5               	rlf	??___fpclassifyf+1,f
 19831     13EA  0DF6               	rlf	??___fpclassifyf+2,f
 19832     13EB  0DF7               	rlf	??___fpclassifyf+3,f
 19833     13EC                     u418_20:
 19834     13EC  0B89               	decfsz	9,f
 19835     13ED  2BE8               	goto	u418_25
 19836     13EE  0877               	movf	??___fpclassifyf+3,w
 19837     13EF  0476               	iorwf	??___fpclassifyf+2,w
 19838     13F0  0475               	iorwf	??___fpclassifyf+1,w
 19839     13F1  0474               	iorwf	??___fpclassifyf,w
 19840     13F2  1903               	skipnz
 19841     13F3  2BF5               	goto	u419_21
 19842     13F4  2BF7               	goto	u419_20
 19843     13F5                     u419_21:
 19844     13F5  3001               	movlw	1
 19845     13F6  2BF8               	goto	u420_20
 19846     13F7                     u419_20:
 19847     13F7  3000               	movlw	0
 19848     13F8                     u420_20:
 19849     13F8  00F8               	movwf	??___fpclassifyf+4
 19850     13F9  01F9               	clrf	??___fpclassifyf+5
 19851     13FA  0878               	movf	??___fpclassifyf+4,w
 19852     13FB  00F0               	movwf	?___fpclassifyf
 19853     13FC  0879               	movf	??___fpclassifyf+5,w
 19854     13FD  00F1               	movwf	?___fpclassifyf+1
 19855     13FE  2C03               	goto	i1l1893
 19856     13FF                     i1l4837:
 19857     13FF  3004               	movlw	4
 19858     1400  00F0               	movwf	?___fpclassifyf
 19859     1401  3000               	movlw	0
 19860     1402  00F1               	movwf	?___fpclassifyf+1
 19861     1403                     i1l1893:
 19862     1403  0008               	return
 19863     1404                     __end_of___fpclassifyf:
 19864                           
 19865                           	psect	text94
 19866     1227                     __ptext94:	
 19867 ;; *************** function ___fltol *****************
 19868 ;; Defined at:
 19869 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
 19870 ;; Parameters:    Size  Location     Type
 19871 ;;  f1              4    0[COMMON] int 
 19872 ;; Auto vars:     Size  Location     Type
 19873 ;;  exp1            1    9[COMMON] unsigned char 
 19874 ;;  sign1           1    8[COMMON] unsigned char 
 19875 ;; Return value:  Size  Location     Type
 19876 ;;                  4    0[COMMON] long 
 19877 ;; Registers used:
 19878 ;;		wreg, status,2, status,0
 19879 ;; Tracked objects:
 19880 ;;		On entry : 0/0
 19881 ;;		On exit  : 0/0
 19882 ;;		Unchanged: 0/0
 19883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19886 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19887 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19888 ;;Total ram usage:       10 bytes
 19889 ;; Hardware stack levels used: 1
 19890 ;; This function calls:
 19891 ;;		Nothing
 19892 ;; This function is called by:
 19893 ;;		_efgtoa
 19894 ;;		_get_distance_from_supersonic
 19895 ;; This function uses a non-reentrant model
 19896 ;;
 19897                           
 19898     1227                     ___fltol:	
 19899                           ;psect for function ___fltol
 19900                           
 19901     1227                     i1l4483:	
 19902                           ;incstack = 0
 19903                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 19904                           
 19905     1227  1003               	clrc
 19906     1228  0D72               	rlf	___fltol@f1+2,w
 19907     1229  0D73               	rlf	___fltol@f1+3,w
 19908     122A  00F9               	movwf	___fltol@exp1
 19909     122B  0879               	movf	___fltol@exp1,w
 19910     122C  1D03               	btfss	3,2
 19911     122D  2A2F               	goto	u346_21
 19912     122E  2A30               	goto	u346_20
 19913     122F                     u346_21:
 19914     122F  2A39               	goto	i1l4489
 19915     1230                     u346_20:
 19916     1230                     i1l4485:
 19917     1230  3000               	movlw	0
 19918     1231  00F3               	movwf	?___fltol+3
 19919     1232  3000               	movlw	0
 19920     1233  00F2               	movwf	?___fltol+2
 19921     1234  3000               	movlw	0
 19922     1235  00F1               	movwf	?___fltol+1
 19923     1236  3000               	movlw	0
 19924     1237  00F0               	movwf	?___fltol
 19925     1238  2A96               	goto	i1l1466
 19926     1239                     i1l4489:
 19927     1239  0870               	movf	___fltol@f1,w
 19928     123A  00F4               	movwf	??___fltol
 19929     123B  0871               	movf	___fltol@f1+1,w
 19930     123C  00F5               	movwf	??___fltol+1
 19931     123D  0872               	movf	___fltol@f1+2,w
 19932     123E  00F6               	movwf	??___fltol+2
 19933     123F  0873               	movf	___fltol@f1+3,w
 19934     1240  00F7               	movwf	??___fltol+3
 19935     1241  301F               	movlw	31
 19936     1242                     u347_25:
 19937     1242  36F7               	lsrf	??___fltol+3,f
 19938     1243  0CF6               	rrf	??___fltol+2,f
 19939     1244  0CF5               	rrf	??___fltol+1,f
 19940     1245  0CF4               	rrf	??___fltol,f
 19941     1246                     u347_20:
 19942     1246  0B89               	decfsz	9,f
 19943     1247  2A42               	goto	u347_25
 19944     1248  0874               	movf	??___fltol,w
 19945     1249  00F8               	movwf	___fltol@sign1
 19946     124A                     i1l4491:
 19947     124A  17F2               	bsf	___fltol@f1+2,7
 19948     124B                     i1l4493:
 19949     124B  30FF               	movlw	255
 19950     124C  05F0               	andwf	___fltol@f1,f
 19951     124D  30FF               	movlw	255
 19952     124E  05F1               	andwf	___fltol@f1+1,f
 19953     124F  30FF               	movlw	255
 19954     1250  05F2               	andwf	___fltol@f1+2,f
 19955     1251  3000               	movlw	0
 19956     1252  05F3               	andwf	___fltol@f1+3,f
 19957     1253                     i1l4495:
 19958     1253  3096               	movlw	150
 19959     1254  02F9               	subwf	___fltol@exp1,f
 19960     1255                     i1l4497:
 19961     1255  1FF9               	btfss	___fltol@exp1,7
 19962     1256  2A58               	goto	u348_21
 19963     1257  2A59               	goto	u348_20
 19964     1258                     u348_21:
 19965     1258  2A71               	goto	i1l4507
 19966     1259                     u348_20:
 19967     1259                     i1l4499:
 19968     1259  0879               	movf	___fltol@exp1,w
 19969     125A  3A80               	xorlw	128
 19970     125B  3E97               	addlw	151
 19971     125C  1803               	skipnc
 19972     125D  2A5F               	goto	u349_21
 19973     125E  2A60               	goto	u349_20
 19974     125F                     u349_21:
 19975     125F  2A61               	goto	i1l4505
 19976     1260                     u349_20:
 19977     1260  2A30               	goto	i1l4485
 19978     1261                     i1l4505:
 19979     1261  3001               	movlw	1
 19980     1262                     u350_25:
 19981     1262  36F3               	lsrf	___fltol@f1+3,f
 19982     1263  0CF2               	rrf	___fltol@f1+2,f
 19983     1264  0CF1               	rrf	___fltol@f1+1,f
 19984     1265  0CF0               	rrf	___fltol@f1,f
 19985     1266  0B89               	decfsz	9,f
 19986     1267  2A62               	goto	u350_25
 19987     1268  3001               	movlw	1
 19988     1269  00F4               	movwf	??___fltol
 19989     126A  0874               	movf	??___fltol,w
 19990     126B  07F9               	addwf	___fltol@exp1,f
 19991     126C  1D03               	btfss	3,2
 19992     126D  2A6F               	goto	u351_21
 19993     126E  2A70               	goto	u351_20
 19994     126F                     u351_21:
 19995     126F  2A61               	goto	i1l4505
 19996     1270                     u351_20:
 19997     1270  2A86               	goto	i1l4515
 19998     1271                     i1l4507:
 19999     1271  3020               	movlw	32
 20000     1272  0279               	subwf	___fltol@exp1,w
 20001     1273  1C03               	skipc
 20002     1274  2A76               	goto	u352_21
 20003     1275  2A77               	goto	u352_20
 20004     1276                     u352_21:
 20005     1276  2A81               	goto	i1l1473
 20006     1277                     u352_20:
 20007     1277  2A30               	goto	i1l4485
 20008     1278                     i1l4513:
 20009     1278  3001               	movlw	1
 20010     1279                     u353_25:
 20011     1279  35F0               	lslf	___fltol@f1,f
 20012     127A  0DF1               	rlf	___fltol@f1+1,f
 20013     127B  0DF2               	rlf	___fltol@f1+2,f
 20014     127C  0DF3               	rlf	___fltol@f1+3,f
 20015     127D  0B89               	decfsz	9,f
 20016     127E  2A79               	goto	u353_25
 20017     127F  3001               	movlw	1
 20018     1280  02F9               	subwf	___fltol@exp1,f
 20019     1281                     i1l1473:
 20020     1281  0879               	movf	___fltol@exp1,w
 20021     1282  1D03               	btfss	3,2
 20022     1283  2A85               	goto	u354_21
 20023     1284  2A86               	goto	u354_20
 20024     1285                     u354_21:
 20025     1285  2A78               	goto	i1l4513
 20026     1286                     u354_20:
 20027     1286                     i1l4515:
 20028     1286  0878               	movf	___fltol@sign1,w
 20029     1287  1903               	btfsc	3,2
 20030     1288  2A8A               	goto	u355_21
 20031     1289  2A8B               	goto	u355_20
 20032     128A                     u355_21:
 20033     128A  2A96               	goto	i1l1476
 20034     128B                     u355_20:
 20035     128B                     i1l4517:
 20036     128B  09F0               	comf	___fltol@f1,f
 20037     128C  09F1               	comf	___fltol@f1+1,f
 20038     128D  09F2               	comf	___fltol@f1+2,f
 20039     128E  09F3               	comf	___fltol@f1+3,f
 20040     128F  0AF0               	incf	___fltol@f1,f
 20041     1290  1903               	skipnz
 20042     1291  0AF1               	incf	___fltol@f1+1,f
 20043     1292  1903               	skipnz
 20044     1293  0AF2               	incf	___fltol@f1+2,f
 20045     1294  1903               	skipnz
 20046     1295  0AF3               	incf	___fltol@f1+3,f
 20047     1296                     i1l1476:
 20048     1296                     i1l1466:
 20049     1296  0008               	return
 20050     1297                     __end_of___fltol:
 20051                           
 20052                           	psect	text95
 20053     1E6C                     __ptext95:	
 20054 ;; *************** function ___flsub *****************
 20055 ;; Defined at:
 20056 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 20057 ;; Parameters:    Size  Location     Type
 20058 ;;  a               4   32[BANK0 ] long 
 20059 ;;  b               4   36[BANK0 ] long 
 20060 ;; Auto vars:     Size  Location     Type
 20061 ;;		None
 20062 ;; Return value:  Size  Location     Type
 20063 ;;                  4   32[BANK0 ] long 
 20064 ;; Registers used:
 20065 ;;		wreg, status,2, status,0, pclath, cstack
 20066 ;; Tracked objects:
 20067 ;;		On entry : 0/0
 20068 ;;		On exit  : 0/0
 20069 ;;		Unchanged: 0/0
 20070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20071 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20074 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20075 ;;Total ram usage:        8 bytes
 20076 ;; Hardware stack levels used: 1
 20077 ;; Hardware stack levels required when called: 1
 20078 ;; This function calls:
 20079 ;;		___fladd
 20080 ;; This function is called by:
 20081 ;;		_efgtoa
 20082 ;; This function uses a non-reentrant model
 20083 ;;
 20084                           
 20085     1E6C                     ___flsub:	
 20086                           ;psect for function ___flsub
 20087                           
 20088     1E6C                     i1l4519:	
 20089                           ;incstack = 0
 20090                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 20091                           
 20092     1E6C  3080               	movlw	128
 20093     1E6D  0020               	movlb	0	; select bank0
 20094     1E6E  06C3               	xorwf	___flsub@a+3,f
 20095     1E6F                     i1l4521:
 20096     1E6F  0847               	movf	___flsub@b+3,w
 20097     1E70  00F3               	movwf	___fladd@b+3
 20098     1E71  0846               	movf	___flsub@b+2,w
 20099     1E72  00F2               	movwf	___fladd@b+2
 20100     1E73  0845               	movf	___flsub@b+1,w
 20101     1E74  00F1               	movwf	___fladd@b+1
 20102     1E75  0844               	movf	___flsub@b,w
 20103     1E76  00F0               	movwf	___fladd@b
 20104     1E77  0843               	movf	___flsub@a+3,w
 20105     1E78  00F7               	movwf	___fladd@a+3
 20106     1E79  0842               	movf	___flsub@a+2,w
 20107     1E7A  00F6               	movwf	___fladd@a+2
 20108     1E7B  0841               	movf	___flsub@a+1,w
 20109     1E7C  00F5               	movwf	___fladd@a+1
 20110     1E7D  0840               	movf	___flsub@a,w
 20111     1E7E  00F4               	movwf	___fladd@a
 20112     1E7F  318B  23B9  319E   	fcall	___fladd
 20113     1E82  0873               	movf	?___fladd+3,w
 20114     1E83  0020               	movlb	0	; select bank0
 20115     1E84  00C3               	movwf	?___flsub+3
 20116     1E85  0872               	movf	?___fladd+2,w
 20117     1E86  00C2               	movwf	?___flsub+2
 20118     1E87  0871               	movf	?___fladd+1,w
 20119     1E88  00C1               	movwf	?___flsub+1
 20120     1E89  0870               	movf	?___fladd,w
 20121     1E8A  00C0               	movwf	?___flsub
 20122     1E8B                     i1l1619:
 20123     1E8B  0008               	return
 20124     1E8C                     __end_of___flsub:
 20125                           
 20126                           	psect	text96
 20127     0BB9                     __ptext96:	
 20128 ;; *************** function ___fladd *****************
 20129 ;; Defined at:
 20130 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 20131 ;; Parameters:    Size  Location     Type
 20132 ;;  b               4    0[COMMON] long 
 20133 ;;  a               4    4[COMMON] long 
 20134 ;; Auto vars:     Size  Location     Type
 20135 ;;  grs             1   11[COMMON] unsigned char 
 20136 ;;  bexp            1   10[COMMON] unsigned char 
 20137 ;;  aexp            1    9[COMMON] unsigned char 
 20138 ;;  signs           1    8[COMMON] unsigned char 
 20139 ;; Return value:  Size  Location     Type
 20140 ;;                  4    0[COMMON] unsigned char 
 20141 ;; Registers used:
 20142 ;;		wreg, status,2, status,0
 20143 ;; Tracked objects:
 20144 ;;		On entry : 0/0
 20145 ;;		On exit  : 0/0
 20146 ;;		Unchanged: 0/0
 20147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20148 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20149 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20150 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20151 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20152 ;;Total ram usage:       20 bytes
 20153 ;; Hardware stack levels used: 1
 20154 ;; This function calls:
 20155 ;;		Nothing
 20156 ;; This function is called by:
 20157 ;;		___flsub
 20158 ;;		_efgtoa
 20159 ;; This function uses a non-reentrant model
 20160 ;;
 20161                           
 20162     0BB9                     ___fladd:	
 20163                           ;psect for function ___fladd
 20164                           
 20165     0BB9                     i1l4209:	
 20166                           ;incstack = 0
 20167                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 20168                           
 20169     0BB9  0873               	movf	___fladd@b+3,w
 20170     0BBA  3980               	andlw	128
 20171     0BBB  00F8               	movwf	___fladd@signs
 20172     0BBC                     i1l4211:
 20173     0BBC  3573               	lslf	___fladd@b+3,w
 20174     0BBD  00FA               	movwf	___fladd@bexp
 20175     0BBE                     i1l4213:
 20176     0BBE  1FF2               	btfss	___fladd@b+2,7
 20177     0BBF  2BC1               	goto	u284_21
 20178     0BC0  2BC2               	goto	u284_20
 20179     0BC1                     u284_21:
 20180     0BC1  2BC3               	goto	i1l4217
 20181     0BC2                     u284_20:
 20182     0BC2                     i1l4215:
 20183     0BC2  147A               	bsf	___fladd@bexp,0
 20184     0BC3                     i1l4217:
 20185     0BC3  087A               	movf	___fladd@bexp,w
 20186     0BC4  1903               	btfsc	3,2
 20187     0BC5  2BC7               	goto	u285_21
 20188     0BC6  2BC8               	goto	u285_20
 20189     0BC7                     u285_21:
 20190     0BC7  2BD8               	goto	i1l4227
 20191     0BC8                     u285_20:
 20192     0BC8                     i1l4219:
 20193     0BC8  0A7A               	incf	___fladd@bexp,w
 20194     0BC9  1D03               	btfss	3,2
 20195     0BCA  2BCC               	goto	u286_21
 20196     0BCB  2BCD               	goto	u286_20
 20197     0BCC                     u286_21:
 20198     0BCC  2BD5               	goto	i1l4223
 20199     0BCD                     u286_20:
 20200     0BCD                     i1l4221:
 20201     0BCD  3000               	movlw	0
 20202     0BCE  00F3               	movwf	___fladd@b+3
 20203     0BCF  3000               	movlw	0
 20204     0BD0  00F2               	movwf	___fladd@b+2
 20205     0BD1  3000               	movlw	0
 20206     0BD2  00F1               	movwf	___fladd@b+1
 20207     0BD3  3000               	movlw	0
 20208     0BD4  00F0               	movwf	___fladd@b
 20209     0BD5                     i1l4223:
 20210     0BD5  17F2               	bsf	___fladd@b+2,7
 20211     0BD6                     i1l4225:
 20212     0BD6  01F3               	clrf	___fladd@b+3
 20213     0BD7  2BE0               	goto	i1l4229
 20214     0BD8                     i1l4227:
 20215     0BD8  3000               	movlw	0
 20216     0BD9  00F3               	movwf	___fladd@b+3
 20217     0BDA  3000               	movlw	0
 20218     0BDB  00F2               	movwf	___fladd@b+2
 20219     0BDC  3000               	movlw	0
 20220     0BDD  00F1               	movwf	___fladd@b+1
 20221     0BDE  3000               	movlw	0
 20222     0BDF  00F0               	movwf	___fladd@b
 20223     0BE0                     i1l4229:
 20224     0BE0  0877               	movf	___fladd@a+3,w
 20225     0BE1  3980               	andlw	128
 20226     0BE2  00F9               	movwf	___fladd@aexp
 20227     0BE3                     i1l4231:
 20228     0BE3  0879               	movf	___fladd@aexp,w
 20229     0BE4  0678               	xorwf	___fladd@signs,w
 20230     0BE5  1903               	skipnz
 20231     0BE6  2BE8               	goto	u287_21
 20232     0BE7  2BE9               	goto	u287_20
 20233     0BE8                     u287_21:
 20234     0BE8  2BEA               	goto	i1l4235
 20235     0BE9                     u287_20:
 20236     0BE9                     i1l4233:
 20237     0BE9  1778               	bsf	___fladd@signs,6
 20238     0BEA                     i1l4235:
 20239     0BEA  3577               	lslf	___fladd@a+3,w
 20240     0BEB  00F9               	movwf	___fladd@aexp
 20241     0BEC                     i1l4237:
 20242     0BEC  1FF6               	btfss	___fladd@a+2,7
 20243     0BED  2BEF               	goto	u288_21
 20244     0BEE  2BF0               	goto	u288_20
 20245     0BEF                     u288_21:
 20246     0BEF  2BF1               	goto	i1l4241
 20247     0BF0                     u288_20:
 20248     0BF0                     i1l4239:
 20249     0BF0  1479               	bsf	___fladd@aexp,0
 20250     0BF1                     i1l4241:
 20251     0BF1  0879               	movf	___fladd@aexp,w
 20252     0BF2  1903               	btfsc	3,2
 20253     0BF3  2BF5               	goto	u289_21
 20254     0BF4  2BF6               	goto	u289_20
 20255     0BF5                     u289_21:
 20256     0BF5  2C06               	goto	i1l4251
 20257     0BF6                     u289_20:
 20258     0BF6                     i1l4243:
 20259     0BF6  0A79               	incf	___fladd@aexp,w
 20260     0BF7  1D03               	btfss	3,2
 20261     0BF8  2BFA               	goto	u290_21
 20262     0BF9  2BFB               	goto	u290_20
 20263     0BFA                     u290_21:
 20264     0BFA  2C03               	goto	i1l4247
 20265     0BFB                     u290_20:
 20266     0BFB                     i1l4245:
 20267     0BFB  3000               	movlw	0
 20268     0BFC  00F7               	movwf	___fladd@a+3
 20269     0BFD  3000               	movlw	0
 20270     0BFE  00F6               	movwf	___fladd@a+2
 20271     0BFF  3000               	movlw	0
 20272     0C00  00F5               	movwf	___fladd@a+1
 20273     0C01  3000               	movlw	0
 20274     0C02  00F4               	movwf	___fladd@a
 20275     0C03                     i1l4247:
 20276     0C03  17F6               	bsf	___fladd@a+2,7
 20277     0C04                     i1l4249:
 20278     0C04  01F7               	clrf	___fladd@a+3
 20279     0C05  2C0E               	goto	i1l1573
 20280     0C06                     i1l4251:
 20281     0C06  3000               	movlw	0
 20282     0C07  00F7               	movwf	___fladd@a+3
 20283     0C08  3000               	movlw	0
 20284     0C09  00F6               	movwf	___fladd@a+2
 20285     0C0A  3000               	movlw	0
 20286     0C0B  00F5               	movwf	___fladd@a+1
 20287     0C0C  3000               	movlw	0
 20288     0C0D  00F4               	movwf	___fladd@a
 20289     0C0E                     i1l1573:
 20290     0C0E  087A               	movf	___fladd@bexp,w
 20291     0C0F  0279               	subwf	___fladd@aexp,w
 20292     0C10  1803               	skipnc
 20293     0C11  2C13               	goto	u291_21
 20294     0C12  2C14               	goto	u291_20
 20295     0C13                     u291_21:
 20296     0C13  2C3B               	goto	i1l4287
 20297     0C14                     u291_20:
 20298     0C14                     i1l4253:
 20299     0C14  1F78               	btfss	___fladd@signs,6
 20300     0C15  2C17               	goto	u292_21
 20301     0C16  2C18               	goto	u292_20
 20302     0C17                     u292_21:
 20303     0C17  2C1D               	goto	i1l4257
 20304     0C18                     u292_20:
 20305     0C18                     i1l4255:
 20306     0C18  3080               	movlw	128
 20307     0C19  0020               	movlb	0	; select bank0
 20308     0C1A  00A0               	movwf	??___fladd
 20309     0C1B  0820               	movf	??___fladd,w
 20310     0C1C  06F8               	xorwf	___fladd@signs,f
 20311     0C1D                     i1l4257:
 20312     0C1D  087A               	movf	___fladd@bexp,w
 20313     0C1E  00FB               	movwf	___fladd@grs
 20314     0C1F                     i1l4259:
 20315     0C1F  0879               	movf	___fladd@aexp,w
 20316     0C20  00FA               	movwf	___fladd@bexp
 20317     0C21                     i1l4261:
 20318     0C21  087B               	movf	___fladd@grs,w
 20319     0C22  00F9               	movwf	___fladd@aexp
 20320     0C23                     i1l4263:
 20321     0C23  0870               	movf	___fladd@b,w
 20322     0C24  00FB               	movwf	___fladd@grs
 20323     0C25                     i1l4265:
 20324     0C25  0874               	movf	___fladd@a,w
 20325     0C26  00F0               	movwf	___fladd@b
 20326     0C27                     i1l4267:
 20327     0C27  087B               	movf	___fladd@grs,w
 20328     0C28  00F4               	movwf	___fladd@a
 20329     0C29                     i1l4269:
 20330     0C29  0871               	movf	___fladd@b+1,w
 20331     0C2A  00FB               	movwf	___fladd@grs
 20332     0C2B                     i1l4271:
 20333     0C2B  0875               	movf	___fladd@a+1,w
 20334     0C2C  00F1               	movwf	___fladd@b+1
 20335     0C2D                     i1l4273:
 20336     0C2D  087B               	movf	___fladd@grs,w
 20337     0C2E  00F5               	movwf	___fladd@a+1
 20338     0C2F                     i1l4275:
 20339     0C2F  0872               	movf	___fladd@b+2,w
 20340     0C30  00FB               	movwf	___fladd@grs
 20341     0C31                     i1l4277:
 20342     0C31  0876               	movf	___fladd@a+2,w
 20343     0C32  00F2               	movwf	___fladd@b+2
 20344     0C33                     i1l4279:
 20345     0C33  087B               	movf	___fladd@grs,w
 20346     0C34  00F6               	movwf	___fladd@a+2
 20347     0C35                     i1l4281:
 20348     0C35  0873               	movf	___fladd@b+3,w
 20349     0C36  00FB               	movwf	___fladd@grs
 20350     0C37                     i1l4283:
 20351     0C37  0877               	movf	___fladd@a+3,w
 20352     0C38  00F3               	movwf	___fladd@b+3
 20353     0C39                     i1l4285:
 20354     0C39  087B               	movf	___fladd@grs,w
 20355     0C3A  00F7               	movwf	___fladd@a+3
 20356     0C3B                     i1l4287:
 20357     0C3B  01FB               	clrf	___fladd@grs
 20358     0C3C                     i1l4289:
 20359     0C3C  0879               	movf	___fladd@aexp,w
 20360     0C3D  0020               	movlb	0	; select bank0
 20361     0C3E  00A0               	movwf	??___fladd
 20362     0C3F  01A1               	clrf	??___fladd+1
 20363     0C40  0821               	movf	??___fladd+1,w
 20364     0C41  00A3               	movwf	??___fladd+3
 20365     0C42  087A               	movf	___fladd@bexp,w
 20366     0C43  0220               	subwf	??___fladd,w
 20367     0C44  00A2               	movwf	??___fladd+2
 20368     0C45  1C03               	skipc
 20369     0C46  03A3               	decf	??___fladd+3,f
 20370     0C47  0823               	movf	??___fladd+3,w
 20371     0C48  3A80               	xorlw	128
 20372     0C49  00A4               	movwf	??___fladd+4
 20373     0C4A  3080               	movlw	128
 20374     0C4B  0224               	subwf	??___fladd+4,w
 20375     0C4C  1D03               	skipz
 20376     0C4D  2C50               	goto	u293_25
 20377     0C4E  301A               	movlw	26
 20378     0C4F  0222               	subwf	??___fladd+2,w
 20379     0C50                     u293_25:
 20380     0C50  1C03               	skipc
 20381     0C51  2C53               	goto	u293_21
 20382     0C52  2C54               	goto	u293_20
 20383     0C53                     u293_21:
 20384     0C53  2C86               	goto	i1l4305
 20385     0C54                     u293_20:
 20386     0C54                     i1l4291:
 20387     0C54  0873               	movf	___fladd@b+3,w
 20388     0C55  0472               	iorwf	___fladd@b+2,w
 20389     0C56  0471               	iorwf	___fladd@b+1,w
 20390     0C57  0470               	iorwf	___fladd@b,w
 20391     0C58  1D03               	skipz
 20392     0C59  2C5B               	goto	u294_21
 20393     0C5A  2C5D               	goto	u294_20
 20394     0C5B                     u294_21:
 20395     0C5B  3001               	movlw	1
 20396     0C5C  2C5E               	goto	u295_20
 20397     0C5D                     u294_20:
 20398     0C5D  3000               	movlw	0
 20399     0C5E                     u295_20:
 20400     0C5E  00FB               	movwf	___fladd@grs
 20401     0C5F  3000               	movlw	0
 20402     0C60  00F3               	movwf	___fladd@b+3
 20403     0C61  3000               	movlw	0
 20404     0C62  00F2               	movwf	___fladd@b+2
 20405     0C63  3000               	movlw	0
 20406     0C64  00F1               	movwf	___fladd@b+1
 20407     0C65  3000               	movlw	0
 20408     0C66  00F0               	movwf	___fladd@b
 20409     0C67  0879               	movf	___fladd@aexp,w
 20410     0C68  00FA               	movwf	___fladd@bexp
 20411     0C69  2C8C               	goto	i1l1577
 20412     0C6A                     i1l1579:
 20413     0C6A  1C7B               	btfss	___fladd@grs,0
 20414     0C6B  2C6D               	goto	u296_21
 20415     0C6C  2C6E               	goto	u296_20
 20416     0C6D                     u296_21:
 20417     0C6D  2C72               	goto	i1l4295
 20418     0C6E                     u296_20:
 20419     0C6E                     i1l4293:
 20420     0C6E  367B               	lsrf	___fladd@grs,w
 20421     0C6F  3801               	iorlw	1
 20422     0C70  00FB               	movwf	___fladd@grs
 20423     0C71  2C74               	goto	i1l4297
 20424     0C72                     i1l4295:
 20425     0C72  1003               	clrc
 20426     0C73  0CFB               	rrf	___fladd@grs,f
 20427     0C74                     i1l4297:
 20428     0C74  1C70               	btfss	___fladd@b,0
 20429     0C75  2C77               	goto	u297_21
 20430     0C76  2C78               	goto	u297_20
 20431     0C77                     u297_21:
 20432     0C77  2C79               	goto	i1l4301
 20433     0C78                     u297_20:
 20434     0C78                     i1l4299:
 20435     0C78  17FB               	bsf	___fladd@grs,7
 20436     0C79                     i1l4301:
 20437     0C79  3001               	movlw	1
 20438     0C7A  0020               	movlb	0	; select bank0
 20439     0C7B  00A0               	movwf	??___fladd
 20440     0C7C                     u298_25:
 20441     0C7C  37F3               	asrf	___fladd@b+3,f
 20442     0C7D  0CF2               	rrf	___fladd@b+2,f
 20443     0C7E  0CF1               	rrf	___fladd@b+1,f
 20444     0C7F  0CF0               	rrf	___fladd@b,f
 20445     0C80  0BA0               	decfsz	??___fladd& (0+127),f
 20446     0C81  2C7C               	goto	u298_25
 20447     0C82                     i1l4303:
 20448     0C82  3001               	movlw	1
 20449     0C83  00A0               	movwf	??___fladd
 20450     0C84  0820               	movf	??___fladd,w
 20451     0C85  07FA               	addwf	___fladd@bexp,f
 20452     0C86                     i1l4305:
 20453     0C86  0879               	movf	___fladd@aexp,w
 20454     0C87  027A               	subwf	___fladd@bexp,w
 20455     0C88  1C03               	skipc
 20456     0C89  2C8B               	goto	u299_21
 20457     0C8A  2C8C               	goto	u299_20
 20458     0C8B                     u299_21:
 20459     0C8B  2C6A               	goto	i1l1579
 20460     0C8C                     u299_20:
 20461     0C8C                     i1l1577:
 20462     0C8C  1B78               	btfsc	___fladd@signs,6
 20463     0C8D  2C8F               	goto	u300_21
 20464     0C8E  2C90               	goto	u300_20
 20465     0C8F                     u300_21:
 20466     0C8F  2CC7               	goto	i1l4331
 20467     0C90                     u300_20:
 20468     0C90                     i1l4307:
 20469     0C90  087A               	movf	___fladd@bexp,w
 20470     0C91  1D03               	btfss	3,2
 20471     0C92  2C94               	goto	u301_21
 20472     0C93  2C95               	goto	u301_20
 20473     0C94                     u301_21:
 20474     0C94  2C9E               	goto	i1l4313
 20475     0C95                     u301_20:
 20476     0C95                     i1l4309:
 20477     0C95  3000               	movlw	0
 20478     0C96  00F3               	movwf	?___fladd+3
 20479     0C97  3000               	movlw	0
 20480     0C98  00F2               	movwf	?___fladd+2
 20481     0C99  3000               	movlw	0
 20482     0C9A  00F1               	movwf	?___fladd+1
 20483     0C9B  3000               	movlw	0
 20484     0C9C  00F0               	movwf	?___fladd
 20485     0C9D  2DC4               	goto	i1l1586
 20486     0C9E                     i1l4313:
 20487     0C9E  0874               	movf	___fladd@a,w
 20488     0C9F  07F0               	addwf	___fladd@b,f
 20489     0CA0  0875               	movf	___fladd@a+1,w
 20490     0CA1  3DF1               	addwfc	___fladd@b+1,f
 20491     0CA2  0876               	movf	___fladd@a+2,w
 20492     0CA3  3DF2               	addwfc	___fladd@b+2,f
 20493     0CA4  0877               	movf	___fladd@a+3,w
 20494     0CA5  3DF3               	addwfc	___fladd@b+3,f
 20495     0CA6                     i1l4315:
 20496     0CA6  1C73               	btfss	___fladd@b+3,0
 20497     0CA7  2CA9               	goto	u302_21
 20498     0CA8  2CAA               	goto	u302_20
 20499     0CA9                     u302_21:
 20500     0CA9  2D54               	goto	i1l4365
 20501     0CAA                     u302_20:
 20502     0CAA                     i1l4317:
 20503     0CAA  1C7B               	btfss	___fladd@grs,0
 20504     0CAB  2CAD               	goto	u303_21
 20505     0CAC  2CAE               	goto	u303_20
 20506     0CAD                     u303_21:
 20507     0CAD  2CB2               	goto	i1l4321
 20508     0CAE                     u303_20:
 20509     0CAE                     i1l4319:
 20510     0CAE  367B               	lsrf	___fladd@grs,w
 20511     0CAF  3801               	iorlw	1
 20512     0CB0  00FB               	movwf	___fladd@grs
 20513     0CB1  2CB4               	goto	i1l4323
 20514     0CB2                     i1l4321:
 20515     0CB2  1003               	clrc
 20516     0CB3  0CFB               	rrf	___fladd@grs,f
 20517     0CB4                     i1l4323:
 20518     0CB4  1C70               	btfss	___fladd@b,0
 20519     0CB5  2CB7               	goto	u304_21
 20520     0CB6  2CB8               	goto	u304_20
 20521     0CB7                     u304_21:
 20522     0CB7  2CB9               	goto	i1l4327
 20523     0CB8                     u304_20:
 20524     0CB8                     i1l4325:
 20525     0CB8  17FB               	bsf	___fladd@grs,7
 20526     0CB9                     i1l4327:
 20527     0CB9  3001               	movlw	1
 20528     0CBA  0020               	movlb	0	; select bank0
 20529     0CBB  00A0               	movwf	??___fladd
 20530     0CBC                     u305_25:
 20531     0CBC  37F3               	asrf	___fladd@b+3,f
 20532     0CBD  0CF2               	rrf	___fladd@b+2,f
 20533     0CBE  0CF1               	rrf	___fladd@b+1,f
 20534     0CBF  0CF0               	rrf	___fladd@b,f
 20535     0CC0  0BA0               	decfsz	??___fladd& (0+127),f
 20536     0CC1  2CBC               	goto	u305_25
 20537     0CC2                     i1l4329:
 20538     0CC2  3001               	movlw	1
 20539     0CC3  00A0               	movwf	??___fladd
 20540     0CC4  0820               	movf	??___fladd,w
 20541     0CC5  07FA               	addwf	___fladd@bexp,f
 20542     0CC6  2D54               	goto	i1l4365
 20543     0CC7                     i1l4331:
 20544     0CC7  0873               	movf	___fladd@b+3,w
 20545     0CC8  3A80               	xorlw	128
 20546     0CC9  0020               	movlb	0	; select bank0
 20547     0CCA  00A0               	movwf	??___fladd
 20548     0CCB  0877               	movf	___fladd@a+3,w
 20549     0CCC  3A80               	xorlw	128
 20550     0CCD  0220               	subwf	??___fladd,w
 20551     0CCE  1D03               	skipz
 20552     0CCF  2CDA               	goto	u306_23
 20553     0CD0  0876               	movf	___fladd@a+2,w
 20554     0CD1  0272               	subwf	___fladd@b+2,w
 20555     0CD2  1D03               	skipz
 20556     0CD3  2CDA               	goto	u306_23
 20557     0CD4  0875               	movf	___fladd@a+1,w
 20558     0CD5  0271               	subwf	___fladd@b+1,w
 20559     0CD6  1D03               	skipz
 20560     0CD7  2CDA               	goto	u306_23
 20561     0CD8  0874               	movf	___fladd@a,w
 20562     0CD9  0270               	subwf	___fladd@b,w
 20563     0CDA                     u306_23:
 20564     0CDA  1803               	skipnc
 20565     0CDB  2CDD               	goto	u306_21
 20566     0CDC  2CDE               	goto	u306_20
 20567     0CDD                     u306_21:
 20568     0CDD  2D16               	goto	i1l4341
 20569     0CDE                     u306_20:
 20570     0CDE                     i1l4333:
 20571     0CDE  30FF               	movlw	255
 20572     0CDF  00A0               	movwf	??___fladd
 20573     0CE0  30FF               	movlw	255
 20574     0CE1  00A1               	movwf	??___fladd+1
 20575     0CE2  30FF               	movlw	255
 20576     0CE3  00A2               	movwf	??___fladd+2
 20577     0CE4  30FF               	movlw	255
 20578     0CE5  00A3               	movwf	??___fladd+3
 20579     0CE6  0870               	movf	___fladd@b,w
 20580     0CE7  0274               	subwf	___fladd@a,w
 20581     0CE8  00A4               	movwf	??___fladd+4
 20582     0CE9  0871               	movf	___fladd@b+1,w
 20583     0CEA  3B75               	subwfb	___fladd@a+1,w
 20584     0CEB  00A5               	movwf	??___fladd+5
 20585     0CEC  0872               	movf	___fladd@b+2,w
 20586     0CED  3B76               	subwfb	___fladd@a+2,w
 20587     0CEE  00A6               	movwf	??___fladd+6
 20588     0CEF  0873               	movf	___fladd@b+3,w
 20589     0CF0  3B77               	subwfb	___fladd@a+3,w
 20590     0CF1  00A7               	movwf	??___fladd+7
 20591     0CF2  0824               	movf	??___fladd+4,w
 20592     0CF3  07A0               	addwf	??___fladd,f
 20593     0CF4  0825               	movf	??___fladd+5,w
 20594     0CF5  3DA1               	addwfc	??___fladd+1,f
 20595     0CF6  0826               	movf	??___fladd+6,w
 20596     0CF7  3DA2               	addwfc	??___fladd+2,f
 20597     0CF8  0827               	movf	??___fladd+7,w
 20598     0CF9  3DA3               	addwfc	??___fladd+3,f
 20599     0CFA  0823               	movf	??___fladd+3,w
 20600     0CFB  00F3               	movwf	___fladd@b+3
 20601     0CFC  0822               	movf	??___fladd+2,w
 20602     0CFD  00F2               	movwf	___fladd@b+2
 20603     0CFE  0821               	movf	??___fladd+1,w
 20604     0CFF  00F1               	movwf	___fladd@b+1
 20605     0D00  0820               	movf	??___fladd,w
 20606     0D01  00F0               	movwf	___fladd@b
 20607     0D02                     i1l4335:
 20608     0D02  3080               	movlw	128
 20609     0D03  00A0               	movwf	??___fladd
 20610     0D04  0820               	movf	??___fladd,w
 20611     0D05  06F8               	xorwf	___fladd@signs,f
 20612     0D06  09FB               	comf	___fladd@grs,f
 20613     0D07  0AFB               	incf	___fladd@grs,f
 20614     0D08                     i1l4337:
 20615     0D08  087B               	movf	___fladd@grs,w
 20616     0D09  1D03               	btfss	3,2
 20617     0D0A  2D0C               	goto	u307_21
 20618     0D0B  2D0D               	goto	u307_20
 20619     0D0C                     u307_21:
 20620     0D0C  2D1E               	goto	i1l1594
 20621     0D0D                     u307_20:
 20622     0D0D                     i1l4339:
 20623     0D0D  3001               	movlw	1
 20624     0D0E  07F0               	addwf	___fladd@b,f
 20625     0D0F  3000               	movlw	0
 20626     0D10  3DF1               	addwfc	___fladd@b+1,f
 20627     0D11  3000               	movlw	0
 20628     0D12  3DF2               	addwfc	___fladd@b+2,f
 20629     0D13  3000               	movlw	0
 20630     0D14  3DF3               	addwfc	___fladd@b+3,f
 20631     0D15  2D1E               	goto	i1l1594
 20632     0D16                     i1l4341:
 20633     0D16  0874               	movf	___fladd@a,w
 20634     0D17  02F0               	subwf	___fladd@b,f
 20635     0D18  0875               	movf	___fladd@a+1,w
 20636     0D19  3BF1               	subwfb	___fladd@b+1,f
 20637     0D1A  0876               	movf	___fladd@a+2,w
 20638     0D1B  3BF2               	subwfb	___fladd@b+2,f
 20639     0D1C  0877               	movf	___fladd@a+3,w
 20640     0D1D  3BF3               	subwfb	___fladd@b+3,f
 20641     0D1E                     i1l1594:
 20642     0D1E  0873               	movf	___fladd@b+3,w
 20643     0D1F  0472               	iorwf	___fladd@b+2,w
 20644     0D20  0471               	iorwf	___fladd@b+1,w
 20645     0D21  0470               	iorwf	___fladd@b,w
 20646     0D22  1D03               	skipz
 20647     0D23  2D25               	goto	u308_21
 20648     0D24  2D26               	goto	u308_20
 20649     0D25                     u308_21:
 20650     0D25  2D50               	goto	i1l4363
 20651     0D26                     u308_20:
 20652     0D26                     i1l4343:
 20653     0D26  087B               	movf	___fladd@grs,w
 20654     0D27  1D03               	btfss	3,2
 20655     0D28  2D2A               	goto	u309_21
 20656     0D29  2D2B               	goto	u309_20
 20657     0D2A                     u309_21:
 20658     0D2A  2D50               	goto	i1l4363
 20659     0D2B                     u309_20:
 20660     0D2B                     i1l4345:
 20661     0D2B  3000               	movlw	0
 20662     0D2C  00F3               	movwf	?___fladd+3
 20663     0D2D  3000               	movlw	0
 20664     0D2E  00F2               	movwf	?___fladd+2
 20665     0D2F  3000               	movlw	0
 20666     0D30  00F1               	movwf	?___fladd+1
 20667     0D31  3000               	movlw	0
 20668     0D32  00F0               	movwf	?___fladd
 20669     0D33  2DC4               	goto	i1l1586
 20670     0D34                     i1l4349:
 20671     0D34  3001               	movlw	1
 20672     0D35                     u310_25:
 20673     0D35  35F0               	lslf	___fladd@b,f
 20674     0D36  0DF1               	rlf	___fladd@b+1,f
 20675     0D37  0DF2               	rlf	___fladd@b+2,f
 20676     0D38  0DF3               	rlf	___fladd@b+3,f
 20677     0D39  0B89               	decfsz	9,f
 20678     0D3A  2D35               	goto	u310_25
 20679     0D3B                     i1l4351:
 20680     0D3B  1FFB               	btfss	___fladd@grs,7
 20681     0D3C  2D3E               	goto	u311_21
 20682     0D3D  2D3F               	goto	u311_20
 20683     0D3E                     u311_21:
 20684     0D3E  2D40               	goto	i1l1598
 20685     0D3F                     u311_20:
 20686     0D3F                     i1l4353:
 20687     0D3F  1470               	bsf	___fladd@b,0
 20688     0D40                     i1l1598:
 20689     0D40  1C7B               	btfss	___fladd@grs,0
 20690     0D41  2D43               	goto	u312_21
 20691     0D42  2D44               	goto	u312_20
 20692     0D43                     u312_21:
 20693     0D43  2D47               	goto	i1l4357
 20694     0D44                     u312_20:
 20695     0D44                     i1l4355:
 20696     0D44  1403               	setc
 20697     0D45  0DFB               	rlf	___fladd@grs,f
 20698     0D46  2D49               	goto	i1l4359
 20699     0D47                     i1l4357:
 20700     0D47  1003               	clrc
 20701     0D48  0DFB               	rlf	___fladd@grs,f
 20702     0D49                     i1l4359:
 20703     0D49  087A               	movf	___fladd@bexp,w
 20704     0D4A  1903               	btfsc	3,2
 20705     0D4B  2D4D               	goto	u313_21
 20706     0D4C  2D4E               	goto	u313_20
 20707     0D4D                     u313_21:
 20708     0D4D  2D50               	goto	i1l4363
 20709     0D4E                     u313_20:
 20710     0D4E                     i1l4361:
 20711     0D4E  3001               	movlw	1
 20712     0D4F  02FA               	subwf	___fladd@bexp,f
 20713     0D50                     i1l4363:
 20714     0D50  1FF2               	btfss	___fladd@b+2,7
 20715     0D51  2D53               	goto	u314_21
 20716     0D52  2D54               	goto	u314_20
 20717     0D53                     u314_21:
 20718     0D53  2D34               	goto	i1l4349
 20719     0D54                     u314_20:
 20720     0D54                     i1l4365:
 20721     0D54  01F9               	clrf	___fladd@aexp
 20722     0D55                     i1l4367:
 20723     0D55  1FFB               	btfss	___fladd@grs,7
 20724     0D56  2D58               	goto	u315_21
 20725     0D57  2D59               	goto	u315_20
 20726     0D58                     u315_21:
 20727     0D58  2D67               	goto	i1l4375
 20728     0D59                     u315_20:
 20729     0D59                     i1l4369:
 20730     0D59  087B               	movf	___fladd@grs,w
 20731     0D5A  397F               	andlw	127
 20732     0D5B  1903               	btfsc	3,2
 20733     0D5C  2D5E               	goto	u316_21
 20734     0D5D  2D5F               	goto	u316_20
 20735     0D5E                     u316_21:
 20736     0D5E  2D62               	goto	i1l1604
 20737     0D5F                     u316_20:
 20738     0D5F                     i1l4371:
 20739     0D5F  01F9               	clrf	___fladd@aexp
 20740     0D60  0AF9               	incf	___fladd@aexp,f
 20741     0D61  2D67               	goto	i1l4375
 20742     0D62                     i1l1604:
 20743     0D62  1C70               	btfss	___fladd@b,0
 20744     0D63  2D65               	goto	u317_21
 20745     0D64  2D66               	goto	u317_20
 20746     0D65                     u317_21:
 20747     0D65  2D67               	goto	i1l4375
 20748     0D66                     u317_20:
 20749     0D66  2D5F               	goto	i1l4371
 20750     0D67                     i1l4375:
 20751     0D67  0879               	movf	___fladd@aexp,w
 20752     0D68  1903               	btfsc	3,2
 20753     0D69  2D6B               	goto	u318_21
 20754     0D6A  2D6C               	goto	u318_20
 20755     0D6B                     u318_21:
 20756     0D6B  2D9A               	goto	i1l1607
 20757     0D6C                     u318_20:
 20758     0D6C                     i1l4377:
 20759     0D6C  3001               	movlw	1
 20760     0D6D  07F0               	addwf	___fladd@b,f
 20761     0D6E  3000               	movlw	0
 20762     0D6F  3DF1               	addwfc	___fladd@b+1,f
 20763     0D70  3000               	movlw	0
 20764     0D71  3DF2               	addwfc	___fladd@b+2,f
 20765     0D72  3000               	movlw	0
 20766     0D73  3DF3               	addwfc	___fladd@b+3,f
 20767     0D74                     i1l4379:
 20768     0D74  1C73               	btfss	___fladd@b+3,0
 20769     0D75  2D77               	goto	u319_21
 20770     0D76  2D78               	goto	u319_20
 20771     0D77                     u319_21:
 20772     0D77  2D9A               	goto	i1l1607
 20773     0D78                     u319_20:
 20774     0D78                     i1l4381:
 20775     0D78  0870               	movf	___fladd@b,w
 20776     0D79  0020               	movlb	0	; select bank0
 20777     0D7A  00A0               	movwf	??___fladd
 20778     0D7B  0871               	movf	___fladd@b+1,w
 20779     0D7C  00A1               	movwf	??___fladd+1
 20780     0D7D  0872               	movf	___fladd@b+2,w
 20781     0D7E  00A2               	movwf	??___fladd+2
 20782     0D7F  0873               	movf	___fladd@b+3,w
 20783     0D80  00A3               	movwf	??___fladd+3
 20784     0D81  3001               	movlw	1
 20785     0D82  00A4               	movwf	??___fladd+4
 20786     0D83                     u320_25:
 20787     0D83  37A3               	asrf	??___fladd+3,f
 20788     0D84  0CA2               	rrf	??___fladd+2,f
 20789     0D85  0CA1               	rrf	??___fladd+1,f
 20790     0D86  0CA0               	rrf	??___fladd,f
 20791     0D87                     u320_20:
 20792     0D87  0BA4               	decfsz	??___fladd+4,f
 20793     0D88  2D83               	goto	u320_25
 20794     0D89  0823               	movf	??___fladd+3,w
 20795     0D8A  00F3               	movwf	___fladd@b+3
 20796     0D8B  0822               	movf	??___fladd+2,w
 20797     0D8C  00F2               	movwf	___fladd@b+2
 20798     0D8D  0821               	movf	??___fladd+1,w
 20799     0D8E  00F1               	movwf	___fladd@b+1
 20800     0D8F  0820               	movf	??___fladd,w
 20801     0D90  00F0               	movwf	___fladd@b
 20802     0D91  0A7A               	incf	___fladd@bexp,w
 20803     0D92  1903               	btfsc	3,2
 20804     0D93  2D95               	goto	u321_21
 20805     0D94  2D96               	goto	u321_20
 20806     0D95                     u321_21:
 20807     0D95  2D9A               	goto	i1l1607
 20808     0D96                     u321_20:
 20809     0D96                     i1l4383:
 20810     0D96  3001               	movlw	1
 20811     0D97  00A0               	movwf	??___fladd
 20812     0D98  0820               	movf	??___fladd,w
 20813     0D99  07FA               	addwf	___fladd@bexp,f
 20814     0D9A                     i1l1607:
 20815     0D9A  0A7A               	incf	___fladd@bexp,w
 20816     0D9B  1903               	btfsc	3,2
 20817     0D9C  2D9E               	goto	u322_21
 20818     0D9D  2D9F               	goto	u322_20
 20819     0D9E                     u322_21:
 20820     0D9E  2DA4               	goto	i1l4387
 20821     0D9F                     u322_20:
 20822     0D9F                     i1l4385:
 20823     0D9F  087A               	movf	___fladd@bexp,w
 20824     0DA0  1D03               	btfss	3,2
 20825     0DA1  2DA3               	goto	u323_21
 20826     0DA2  2DA4               	goto	u323_20
 20827     0DA3                     u323_21:
 20828     0DA3  2DB2               	goto	i1l4393
 20829     0DA4                     u323_20:
 20830     0DA4                     i1l4387:
 20831     0DA4  3000               	movlw	0
 20832     0DA5  00F3               	movwf	___fladd@b+3
 20833     0DA6  3000               	movlw	0
 20834     0DA7  00F2               	movwf	___fladd@b+2
 20835     0DA8  3000               	movlw	0
 20836     0DA9  00F1               	movwf	___fladd@b+1
 20837     0DAA  3000               	movlw	0
 20838     0DAB  00F0               	movwf	___fladd@b
 20839     0DAC                     i1l4389:
 20840     0DAC  087A               	movf	___fladd@bexp,w
 20841     0DAD  1D03               	btfss	3,2
 20842     0DAE  2DB0               	goto	u324_21
 20843     0DAF  2DB1               	goto	u324_20
 20844     0DB0                     u324_21:
 20845     0DB0  2DB2               	goto	i1l4393
 20846     0DB1                     u324_20:
 20847     0DB1                     i1l4391:
 20848     0DB1  01F8               	clrf	___fladd@signs
 20849     0DB2                     i1l4393:
 20850     0DB2  1C7A               	btfss	___fladd@bexp,0
 20851     0DB3  2DB5               	goto	u325_21
 20852     0DB4  2DB6               	goto	u325_20
 20853     0DB5                     u325_21:
 20854     0DB5  2DB8               	goto	i1l4397
 20855     0DB6                     u325_20:
 20856     0DB6                     i1l4395:
 20857     0DB6  17F2               	bsf	___fladd@b+2,7
 20858     0DB7  2DBD               	goto	i1l1615
 20859     0DB8                     i1l4397:
 20860     0DB8  307F               	movlw	127
 20861     0DB9  0020               	movlb	0	; select bank0
 20862     0DBA  00A0               	movwf	??___fladd
 20863     0DBB  0820               	movf	??___fladd,w
 20864     0DBC  05F2               	andwf	___fladd@b+2,f
 20865     0DBD                     i1l1615:
 20866     0DBD  367A               	lsrf	___fladd@bexp,w
 20867     0DBE  00F3               	movwf	___fladd@b+3
 20868     0DBF                     i1l4399:
 20869     0DBF  1FF8               	btfss	___fladd@signs,7
 20870     0DC0  2DC2               	goto	u326_21
 20871     0DC1  2DC3               	goto	u326_20
 20872     0DC2                     u326_21:
 20873     0DC2  2DC4               	goto	i1l1616
 20874     0DC3                     u326_20:
 20875     0DC3                     i1l4401:
 20876     0DC3  17F3               	bsf	___fladd@b+3,7
 20877     0DC4                     i1l1616:
 20878     0DC4                     i1l1586:
 20879     0DC4  0008               	return
 20880     0DC5                     __end_of___fladd:
 20881                           
 20882                           	psect	text97
 20883     1C09                     __ptext97:	
 20884 ;; *************** function ___flneg *****************
 20885 ;; Defined at:
 20886 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
 20887 ;; Parameters:    Size  Location     Type
 20888 ;;  f1              4    0[COMMON] unsigned char 
 20889 ;; Auto vars:     Size  Location     Type
 20890 ;;		None
 20891 ;; Return value:  Size  Location     Type
 20892 ;;                  4    0[COMMON] unsigned char 
 20893 ;; Registers used:
 20894 ;;		wreg
 20895 ;; Tracked objects:
 20896 ;;		On entry : 0/0
 20897 ;;		On exit  : 0/0
 20898 ;;		Unchanged: 0/0
 20899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20903 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20904 ;;Total ram usage:        4 bytes
 20905 ;; Hardware stack levels used: 1
 20906 ;; This function calls:
 20907 ;;		Nothing
 20908 ;; This function is called by:
 20909 ;;		_efgtoa
 20910 ;; This function uses a non-reentrant model
 20911 ;;
 20912                           
 20913     1C09                     ___flneg:	
 20914                           ;psect for function ___flneg
 20915                           
 20916     1C09                     i1l4475:	
 20917                           ;incstack = 0
 20918                           ; Regs used in ___flneg: [wreg]
 20919                           
 20920     1C09  0873               	movf	___flneg@f1+3,w
 20921     1C0A  0472               	iorwf	___flneg@f1+2,w
 20922     1C0B  0471               	iorwf	___flneg@f1+1,w
 20923     1C0C  0470               	iorwf	___flneg@f1,w
 20924     1C0D  1903               	skipnz
 20925     1C0E  2C10               	goto	u345_21
 20926     1C0F  2C11               	goto	u345_20
 20927     1C10                     u345_21:
 20928     1C10  2C13               	goto	i1l4479
 20929     1C11                     u345_20:
 20930     1C11                     i1l4477:
 20931     1C11  3080               	movlw	128
 20932     1C12  06F3               	xorwf	___flneg@f1+3,f
 20933     1C13                     i1l4479:
 20934     1C13                     i1l1462:
 20935     1C13  0008               	return
 20936     1C14                     __end_of___flneg:
 20937                           
 20938                           	psect	text98
 20939     0DC5                     __ptext98:	
 20940 ;; *************** function ___flmul *****************
 20941 ;; Defined at:
 20942 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
 20943 ;; Parameters:    Size  Location     Type
 20944 ;;  b               4    6[BANK0 ] unsigned char 
 20945 ;;  a               4   10[BANK0 ] unsigned char 
 20946 ;; Auto vars:     Size  Location     Type
 20947 ;;  prod            4   26[BANK0 ] struct .
 20948 ;;  grs             4   20[BANK0 ] unsigned long 
 20949 ;;  temp            2   30[BANK0 ] struct .
 20950 ;;  bexp            1   25[BANK0 ] unsigned char 
 20951 ;;  aexp            1   24[BANK0 ] unsigned char 
 20952 ;;  sign            1   19[BANK0 ] unsigned char 
 20953 ;; Return value:  Size  Location     Type
 20954 ;;                  4    6[BANK0 ] unsigned char 
 20955 ;; Registers used:
 20956 ;;		wreg, status,2, status,0, pclath, cstack
 20957 ;; Tracked objects:
 20958 ;;		On entry : 0/0
 20959 ;;		On exit  : 0/0
 20960 ;;		Unchanged: 0/0
 20961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20962 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20963 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20964 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20965 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20966 ;;Total ram usage:       26 bytes
 20967 ;; Hardware stack levels used: 1
 20968 ;; Hardware stack levels required when called: 1
 20969 ;; This function calls:
 20970 ;;		__Umul8_16
 20971 ;; This function is called by:
 20972 ;;		_TMR0_Custom_ISR
 20973 ;;		_efgtoa
 20974 ;;		_get_temperature
 20975 ;; This function uses a non-reentrant model
 20976 ;;
 20977                           
 20978     0DC5                     ___flmul:	
 20979                           ;psect for function ___flmul
 20980                           
 20981     0DC5                     i1l4665:	
 20982                           ;incstack = 0
 20983                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 20984                           
 20985     0DC5  0020               	movlb	0	; select bank0
 20986     0DC6  0829               	movf	___flmul@b+3,w
 20987     0DC7  3980               	andlw	128
 20988     0DC8  00B3               	movwf	___flmul@sign
 20989     0DC9                     i1l4667:
 20990     0DC9  3529               	lslf	___flmul@b+3,w
 20991     0DCA  00B9               	movwf	___flmul@bexp
 20992     0DCB                     i1l4669:
 20993     0DCB  1FA8               	btfss	___flmul@b+2,7
 20994     0DCC  2DCE               	goto	u385_21
 20995     0DCD  2DCF               	goto	u385_20
 20996     0DCE                     u385_21:
 20997     0DCE  2DD0               	goto	i1l4673
 20998     0DCF                     u385_20:
 20999     0DCF                     i1l4671:
 21000     0DCF  1439               	bsf	___flmul@bexp,0
 21001     0DD0                     i1l4673:
 21002     0DD0  0839               	movf	___flmul@bexp,w
 21003     0DD1  1903               	btfsc	3,2
 21004     0DD2  2DD4               	goto	u386_21
 21005     0DD3  2DD5               	goto	u386_20
 21006     0DD4                     u386_21:
 21007     0DD4  2DE4               	goto	i1l4681
 21008     0DD5                     u386_20:
 21009     0DD5                     i1l4675:
 21010     0DD5  0A39               	incf	___flmul@bexp,w
 21011     0DD6  1D03               	btfss	3,2
 21012     0DD7  2DD9               	goto	u387_21
 21013     0DD8  2DDA               	goto	u387_20
 21014     0DD9                     u387_21:
 21015     0DD9  2DE2               	goto	i1l4679
 21016     0DDA                     u387_20:
 21017     0DDA                     i1l4677:
 21018     0DDA  3000               	movlw	0
 21019     0DDB  00A9               	movwf	___flmul@b+3
 21020     0DDC  3000               	movlw	0
 21021     0DDD  00A8               	movwf	___flmul@b+2
 21022     0DDE  3000               	movlw	0
 21023     0DDF  00A7               	movwf	___flmul@b+1
 21024     0DE0  3000               	movlw	0
 21025     0DE1  00A6               	movwf	___flmul@b
 21026     0DE2                     i1l4679:
 21027     0DE2  17A8               	bsf	___flmul@b+2,7
 21028     0DE3  2DEC               	goto	i1l4683
 21029     0DE4                     i1l4681:
 21030     0DE4  3000               	movlw	0
 21031     0DE5  00A9               	movwf	___flmul@b+3
 21032     0DE6  3000               	movlw	0
 21033     0DE7  00A8               	movwf	___flmul@b+2
 21034     0DE8  3000               	movlw	0
 21035     0DE9  00A7               	movwf	___flmul@b+1
 21036     0DEA  3000               	movlw	0
 21037     0DEB  00A6               	movwf	___flmul@b
 21038     0DEC                     i1l4683:
 21039     0DEC  082D               	movf	___flmul@a+3,w
 21040     0DED  3980               	andlw	128
 21041     0DEE  00AE               	movwf	??___flmul
 21042     0DEF  082E               	movf	??___flmul,w
 21043     0DF0  06B3               	xorwf	___flmul@sign,f
 21044     0DF1                     i1l4685:
 21045     0DF1  352D               	lslf	___flmul@a+3,w
 21046     0DF2  00B8               	movwf	___flmul@aexp
 21047     0DF3                     i1l4687:
 21048     0DF3  1FAC               	btfss	___flmul@a+2,7
 21049     0DF4  2DF6               	goto	u388_21
 21050     0DF5  2DF7               	goto	u388_20
 21051     0DF6                     u388_21:
 21052     0DF6  2DF8               	goto	i1l4691
 21053     0DF7                     u388_20:
 21054     0DF7                     i1l4689:
 21055     0DF7  1438               	bsf	___flmul@aexp,0
 21056     0DF8                     i1l4691:
 21057     0DF8  0838               	movf	___flmul@aexp,w
 21058     0DF9  1903               	btfsc	3,2
 21059     0DFA  2DFC               	goto	u389_21
 21060     0DFB  2DFD               	goto	u389_20
 21061     0DFC                     u389_21:
 21062     0DFC  2E0C               	goto	i1l4699
 21063     0DFD                     u389_20:
 21064     0DFD                     i1l4693:
 21065     0DFD  0A38               	incf	___flmul@aexp,w
 21066     0DFE  1D03               	btfss	3,2
 21067     0DFF  2E01               	goto	u390_21
 21068     0E00  2E02               	goto	u390_20
 21069     0E01                     u390_21:
 21070     0E01  2E0A               	goto	i1l4697
 21071     0E02                     u390_20:
 21072     0E02                     i1l4695:
 21073     0E02  3000               	movlw	0
 21074     0E03  00AD               	movwf	___flmul@a+3
 21075     0E04  3000               	movlw	0
 21076     0E05  00AC               	movwf	___flmul@a+2
 21077     0E06  3000               	movlw	0
 21078     0E07  00AB               	movwf	___flmul@a+1
 21079     0E08  3000               	movlw	0
 21080     0E09  00AA               	movwf	___flmul@a
 21081     0E0A                     i1l4697:
 21082     0E0A  17AC               	bsf	___flmul@a+2,7
 21083     0E0B  2E14               	goto	i1l4701
 21084     0E0C                     i1l4699:
 21085     0E0C  3000               	movlw	0
 21086     0E0D  00AD               	movwf	___flmul@a+3
 21087     0E0E  3000               	movlw	0
 21088     0E0F  00AC               	movwf	___flmul@a+2
 21089     0E10  3000               	movlw	0
 21090     0E11  00AB               	movwf	___flmul@a+1
 21091     0E12  3000               	movlw	0
 21092     0E13  00AA               	movwf	___flmul@a
 21093     0E14                     i1l4701:
 21094     0E14  0838               	movf	___flmul@aexp,w
 21095     0E15  1903               	btfsc	3,2
 21096     0E16  2E18               	goto	u391_21
 21097     0E17  2E19               	goto	u391_20
 21098     0E18                     u391_21:
 21099     0E18  2E1E               	goto	i1l4705
 21100     0E19                     u391_20:
 21101     0E19                     i1l4703:
 21102     0E19  0839               	movf	___flmul@bexp,w
 21103     0E1A  1D03               	btfss	3,2
 21104     0E1B  2E1D               	goto	u392_21
 21105     0E1C  2E1E               	goto	u392_20
 21106     0E1D                     u392_21:
 21107     0E1D  2E27               	goto	i1l4709
 21108     0E1E                     u392_20:
 21109     0E1E                     i1l4705:
 21110     0E1E  3000               	movlw	0
 21111     0E1F  00A9               	movwf	?___flmul+3
 21112     0E20  3000               	movlw	0
 21113     0E21  00A8               	movwf	?___flmul+2
 21114     0E22  3000               	movlw	0
 21115     0E23  00A7               	movwf	?___flmul+1
 21116     0E24  3000               	movlw	0
 21117     0E25  00A6               	movwf	?___flmul
 21118     0E26  2FFF               	goto	i1l1669
 21119     0E27                     i1l4709:
 21120     0E27  0826               	movf	___flmul@b,w
 21121     0E28  00F0               	movwf	__Umul8_16@multiplicand
 21122     0E29  082C               	movf	___flmul@a+2,w
 21123     0E2A  319E  26EE  318D   	fcall	__Umul8_16
 21124     0E2D  0871               	movf	?__Umul8_16+1,w
 21125     0E2E  0020               	movlb	0	; select bank0
 21126     0E2F  00BF               	movwf	___flmul@temp+1
 21127     0E30  0870               	movf	?__Umul8_16,w
 21128     0E31  00BE               	movwf	___flmul@temp
 21129     0E32                     i1l4711:
 21130     0E32  083E               	movf	___flmul@temp,w
 21131     0E33  00AE               	movwf	??___flmul
 21132     0E34  01AF               	clrf	??___flmul+1
 21133     0E35  01B0               	clrf	??___flmul+2
 21134     0E36  01B1               	clrf	??___flmul+3
 21135     0E37  0831               	movf	??___flmul+3,w
 21136     0E38  00B7               	movwf	___flmul@grs+3
 21137     0E39  0830               	movf	??___flmul+2,w
 21138     0E3A  00B6               	movwf	___flmul@grs+2
 21139     0E3B  082F               	movf	??___flmul+1,w
 21140     0E3C  00B5               	movwf	___flmul@grs+1
 21141     0E3D  082E               	movf	??___flmul,w
 21142     0E3E  00B4               	movwf	___flmul@grs
 21143     0E3F                     i1l4713:
 21144     0E3F  083F               	movf	___flmul@temp+1,w
 21145     0E40  00AE               	movwf	??___flmul
 21146     0E41  01AF               	clrf	??___flmul+1
 21147     0E42  01B0               	clrf	??___flmul+2
 21148     0E43  01B1               	clrf	??___flmul+3
 21149     0E44  0831               	movf	??___flmul+3,w
 21150     0E45  00BD               	movwf	___flmul@prod+3
 21151     0E46  0830               	movf	??___flmul+2,w
 21152     0E47  00BC               	movwf	___flmul@prod+2
 21153     0E48  082F               	movf	??___flmul+1,w
 21154     0E49  00BB               	movwf	___flmul@prod+1
 21155     0E4A  082E               	movf	??___flmul,w
 21156     0E4B  00BA               	movwf	___flmul@prod
 21157     0E4C  0827               	movf	___flmul@b+1,w
 21158     0E4D  00F0               	movwf	__Umul8_16@multiplicand
 21159     0E4E  082B               	movf	___flmul@a+1,w
 21160     0E4F  319E  26EE  318D   	fcall	__Umul8_16
 21161     0E52  0871               	movf	?__Umul8_16+1,w
 21162     0E53  0020               	movlb	0	; select bank0
 21163     0E54  00BF               	movwf	___flmul@temp+1
 21164     0E55  0870               	movf	?__Umul8_16,w
 21165     0E56  00BE               	movwf	___flmul@temp
 21166     0E57                     i1l4715:
 21167     0E57  083E               	movf	___flmul@temp,w
 21168     0E58  00AE               	movwf	??___flmul
 21169     0E59  01AF               	clrf	??___flmul+1
 21170     0E5A  01B0               	clrf	??___flmul+2
 21171     0E5B  01B1               	clrf	??___flmul+3
 21172     0E5C  082E               	movf	??___flmul,w
 21173     0E5D  07B4               	addwf	___flmul@grs,f
 21174     0E5E  082F               	movf	??___flmul+1,w
 21175     0E5F  3DB5               	addwfc	___flmul@grs+1,f
 21176     0E60  0830               	movf	??___flmul+2,w
 21177     0E61  3DB6               	addwfc	___flmul@grs+2,f
 21178     0E62  0831               	movf	??___flmul+3,w
 21179     0E63  3DB7               	addwfc	___flmul@grs+3,f
 21180     0E64                     i1l4717:
 21181     0E64  083F               	movf	___flmul@temp+1,w
 21182     0E65  00AE               	movwf	??___flmul
 21183     0E66  01AF               	clrf	??___flmul+1
 21184     0E67  01B0               	clrf	??___flmul+2
 21185     0E68  01B1               	clrf	??___flmul+3
 21186     0E69  082E               	movf	??___flmul,w
 21187     0E6A  07BA               	addwf	___flmul@prod,f
 21188     0E6B  082F               	movf	??___flmul+1,w
 21189     0E6C  3DBB               	addwfc	___flmul@prod+1,f
 21190     0E6D  0830               	movf	??___flmul+2,w
 21191     0E6E  3DBC               	addwfc	___flmul@prod+2,f
 21192     0E6F  0831               	movf	??___flmul+3,w
 21193     0E70  3DBD               	addwfc	___flmul@prod+3,f
 21194     0E71  0828               	movf	___flmul@b+2,w
 21195     0E72  00F0               	movwf	__Umul8_16@multiplicand
 21196     0E73  082A               	movf	___flmul@a,w
 21197     0E74  319E  26EE  318D   	fcall	__Umul8_16
 21198     0E77  0871               	movf	?__Umul8_16+1,w
 21199     0E78  0020               	movlb	0	; select bank0
 21200     0E79  00BF               	movwf	___flmul@temp+1
 21201     0E7A  0870               	movf	?__Umul8_16,w
 21202     0E7B  00BE               	movwf	___flmul@temp
 21203     0E7C                     i1l4719:
 21204     0E7C  083E               	movf	___flmul@temp,w
 21205     0E7D  00AE               	movwf	??___flmul
 21206     0E7E  01AF               	clrf	??___flmul+1
 21207     0E7F  01B0               	clrf	??___flmul+2
 21208     0E80  01B1               	clrf	??___flmul+3
 21209     0E81  082E               	movf	??___flmul,w
 21210     0E82  07B4               	addwf	___flmul@grs,f
 21211     0E83  082F               	movf	??___flmul+1,w
 21212     0E84  3DB5               	addwfc	___flmul@grs+1,f
 21213     0E85  0830               	movf	??___flmul+2,w
 21214     0E86  3DB6               	addwfc	___flmul@grs+2,f
 21215     0E87  0831               	movf	??___flmul+3,w
 21216     0E88  3DB7               	addwfc	___flmul@grs+3,f
 21217     0E89                     i1l4721:
 21218     0E89  083F               	movf	___flmul@temp+1,w
 21219     0E8A  00AE               	movwf	??___flmul
 21220     0E8B  01AF               	clrf	??___flmul+1
 21221     0E8C  01B0               	clrf	??___flmul+2
 21222     0E8D  01B1               	clrf	??___flmul+3
 21223     0E8E  082E               	movf	??___flmul,w
 21224     0E8F  07BA               	addwf	___flmul@prod,f
 21225     0E90  082F               	movf	??___flmul+1,w
 21226     0E91  3DBB               	addwfc	___flmul@prod+1,f
 21227     0E92  0830               	movf	??___flmul+2,w
 21228     0E93  3DBC               	addwfc	___flmul@prod+2,f
 21229     0E94  0831               	movf	??___flmul+3,w
 21230     0E95  3DBD               	addwfc	___flmul@prod+3,f
 21231     0E96                     i1l4723:
 21232     0E96  3008               	movlw	8
 21233     0E97                     u393_25:
 21234     0E97  35B4               	lslf	___flmul@grs,f
 21235     0E98  0DB5               	rlf	___flmul@grs+1,f
 21236     0E99  0DB6               	rlf	___flmul@grs+2,f
 21237     0E9A  0DB7               	rlf	___flmul@grs+3,f
 21238     0E9B  0B89               	decfsz	9,f
 21239     0E9C  2E97               	goto	u393_25
 21240     0E9D                     i1l4725:
 21241     0E9D  0827               	movf	___flmul@b+1,w
 21242     0E9E  00F0               	movwf	__Umul8_16@multiplicand
 21243     0E9F  082A               	movf	___flmul@a,w
 21244     0EA0  319E  26EE  318D   	fcall	__Umul8_16
 21245     0EA3  0871               	movf	?__Umul8_16+1,w
 21246     0EA4  0020               	movlb	0	; select bank0
 21247     0EA5  00BF               	movwf	___flmul@temp+1
 21248     0EA6  0870               	movf	?__Umul8_16,w
 21249     0EA7  00BE               	movwf	___flmul@temp
 21250     0EA8                     i1l4727:
 21251     0EA8  083E               	movf	___flmul@temp,w
 21252     0EA9  07B4               	addwf	___flmul@grs,f
 21253     0EAA  083F               	movf	___flmul@temp+1,w
 21254     0EAB  3DB5               	addwfc	___flmul@grs+1,f
 21255     0EAC  3000               	movlw	0
 21256     0EAD  3DB6               	addwfc	___flmul@grs+2,f
 21257     0EAE  3DB7               	addwfc	___flmul@grs+3,f
 21258     0EAF                     i1l4729:
 21259     0EAF  0826               	movf	___flmul@b,w
 21260     0EB0  00F0               	movwf	__Umul8_16@multiplicand
 21261     0EB1  082B               	movf	___flmul@a+1,w
 21262     0EB2  319E  26EE  318D   	fcall	__Umul8_16
 21263     0EB5  0871               	movf	?__Umul8_16+1,w
 21264     0EB6  0020               	movlb	0	; select bank0
 21265     0EB7  00BF               	movwf	___flmul@temp+1
 21266     0EB8  0870               	movf	?__Umul8_16,w
 21267     0EB9  00BE               	movwf	___flmul@temp
 21268     0EBA                     i1l4731:
 21269     0EBA  083E               	movf	___flmul@temp,w
 21270     0EBB  07B4               	addwf	___flmul@grs,f
 21271     0EBC  083F               	movf	___flmul@temp+1,w
 21272     0EBD  3DB5               	addwfc	___flmul@grs+1,f
 21273     0EBE  3000               	movlw	0
 21274     0EBF  3DB6               	addwfc	___flmul@grs+2,f
 21275     0EC0  3DB7               	addwfc	___flmul@grs+3,f
 21276     0EC1                     i1l4733:
 21277     0EC1  3008               	movlw	8
 21278     0EC2                     u394_25:
 21279     0EC2  35B4               	lslf	___flmul@grs,f
 21280     0EC3  0DB5               	rlf	___flmul@grs+1,f
 21281     0EC4  0DB6               	rlf	___flmul@grs+2,f
 21282     0EC5  0DB7               	rlf	___flmul@grs+3,f
 21283     0EC6  0B89               	decfsz	9,f
 21284     0EC7  2EC2               	goto	u394_25
 21285     0EC8  0826               	movf	___flmul@b,w
 21286     0EC9  00F0               	movwf	__Umul8_16@multiplicand
 21287     0ECA  082A               	movf	___flmul@a,w
 21288     0ECB  319E  26EE  318D   	fcall	__Umul8_16
 21289     0ECE  0871               	movf	?__Umul8_16+1,w
 21290     0ECF  0020               	movlb	0	; select bank0
 21291     0ED0  00BF               	movwf	___flmul@temp+1
 21292     0ED1  0870               	movf	?__Umul8_16,w
 21293     0ED2  00BE               	movwf	___flmul@temp
 21294     0ED3                     i1l4735:
 21295     0ED3  083E               	movf	___flmul@temp,w
 21296     0ED4  07B4               	addwf	___flmul@grs,f
 21297     0ED5  083F               	movf	___flmul@temp+1,w
 21298     0ED6  3DB5               	addwfc	___flmul@grs+1,f
 21299     0ED7  3000               	movlw	0
 21300     0ED8  3DB6               	addwfc	___flmul@grs+2,f
 21301     0ED9  3DB7               	addwfc	___flmul@grs+3,f
 21302     0EDA                     i1l4737:
 21303     0EDA  0827               	movf	___flmul@b+1,w
 21304     0EDB  00F0               	movwf	__Umul8_16@multiplicand
 21305     0EDC  082C               	movf	___flmul@a+2,w
 21306     0EDD  319E  26EE  318D   	fcall	__Umul8_16
 21307     0EE0  0871               	movf	?__Umul8_16+1,w
 21308     0EE1  0020               	movlb	0	; select bank0
 21309     0EE2  00BF               	movwf	___flmul@temp+1
 21310     0EE3  0870               	movf	?__Umul8_16,w
 21311     0EE4  00BE               	movwf	___flmul@temp
 21312     0EE5  083E               	movf	___flmul@temp,w
 21313     0EE6  07BA               	addwf	___flmul@prod,f
 21314     0EE7  083F               	movf	___flmul@temp+1,w
 21315     0EE8  3DBB               	addwfc	___flmul@prod+1,f
 21316     0EE9  3000               	movlw	0
 21317     0EEA  3DBC               	addwfc	___flmul@prod+2,f
 21318     0EEB  3DBD               	addwfc	___flmul@prod+3,f
 21319     0EEC                     i1l4739:
 21320     0EEC  0828               	movf	___flmul@b+2,w
 21321     0EED  00F0               	movwf	__Umul8_16@multiplicand
 21322     0EEE  082B               	movf	___flmul@a+1,w
 21323     0EEF  319E  26EE  318D   	fcall	__Umul8_16
 21324     0EF2  0871               	movf	?__Umul8_16+1,w
 21325     0EF3  0020               	movlb	0	; select bank0
 21326     0EF4  00BF               	movwf	___flmul@temp+1
 21327     0EF5  0870               	movf	?__Umul8_16,w
 21328     0EF6  00BE               	movwf	___flmul@temp
 21329     0EF7                     i1l4741:
 21330     0EF7  083E               	movf	___flmul@temp,w
 21331     0EF8  07BA               	addwf	___flmul@prod,f
 21332     0EF9  083F               	movf	___flmul@temp+1,w
 21333     0EFA  3DBB               	addwfc	___flmul@prod+1,f
 21334     0EFB  3000               	movlw	0
 21335     0EFC  3DBC               	addwfc	___flmul@prod+2,f
 21336     0EFD  3DBD               	addwfc	___flmul@prod+3,f
 21337     0EFE  0828               	movf	___flmul@b+2,w
 21338     0EFF  00F0               	movwf	__Umul8_16@multiplicand
 21339     0F00  082C               	movf	___flmul@a+2,w
 21340     0F01  319E  26EE  318D   	fcall	__Umul8_16
 21341     0F04  0871               	movf	?__Umul8_16+1,w
 21342     0F05  0020               	movlb	0	; select bank0
 21343     0F06  00BF               	movwf	___flmul@temp+1
 21344     0F07  0870               	movf	?__Umul8_16,w
 21345     0F08  00BE               	movwf	___flmul@temp
 21346     0F09                     i1l4743:
 21347     0F09  083E               	movf	___flmul@temp,w
 21348     0F0A  00AE               	movwf	??___flmul
 21349     0F0B  083F               	movf	___flmul@temp+1,w
 21350     0F0C  00AF               	movwf	??___flmul+1
 21351     0F0D  01B0               	clrf	??___flmul+2
 21352     0F0E  01B1               	clrf	??___flmul+3
 21353     0F0F  3008               	movlw	8
 21354     0F10                     u395_25:
 21355     0F10  35AE               	lslf	??___flmul,f
 21356     0F11  0DAF               	rlf	??___flmul+1,f
 21357     0F12  0DB0               	rlf	??___flmul+2,f
 21358     0F13  0DB1               	rlf	??___flmul+3,f
 21359     0F14                     u395_20:
 21360     0F14  0B89               	decfsz	9,f
 21361     0F15  2F10               	goto	u395_25
 21362     0F16  082E               	movf	??___flmul,w
 21363     0F17  07BA               	addwf	___flmul@prod,f
 21364     0F18  082F               	movf	??___flmul+1,w
 21365     0F19  3DBB               	addwfc	___flmul@prod+1,f
 21366     0F1A  0830               	movf	??___flmul+2,w
 21367     0F1B  3DBC               	addwfc	___flmul@prod+2,f
 21368     0F1C  0831               	movf	??___flmul+3,w
 21369     0F1D  3DBD               	addwfc	___flmul@prod+3,f
 21370     0F1E                     i1l4745:
 21371     0F1E  0834               	movf	___flmul@grs,w
 21372     0F1F  00AE               	movwf	??___flmul
 21373     0F20  0835               	movf	___flmul@grs+1,w
 21374     0F21  00AF               	movwf	??___flmul+1
 21375     0F22  0836               	movf	___flmul@grs+2,w
 21376     0F23  00B0               	movwf	??___flmul+2
 21377     0F24  0837               	movf	___flmul@grs+3,w
 21378     0F25  00B1               	movwf	??___flmul+3
 21379     0F26  3018               	movlw	24
 21380     0F27                     u396_25:
 21381     0F27  36B1               	lsrf	??___flmul+3,f
 21382     0F28  0CB0               	rrf	??___flmul+2,f
 21383     0F29  0CAF               	rrf	??___flmul+1,f
 21384     0F2A  0CAE               	rrf	??___flmul,f
 21385     0F2B                     u396_20:
 21386     0F2B  0B89               	decfsz	9,f
 21387     0F2C  2F27               	goto	u396_25
 21388     0F2D  082E               	movf	??___flmul,w
 21389     0F2E  07BA               	addwf	___flmul@prod,f
 21390     0F2F  082F               	movf	??___flmul+1,w
 21391     0F30  3DBB               	addwfc	___flmul@prod+1,f
 21392     0F31  0830               	movf	??___flmul+2,w
 21393     0F32  3DBC               	addwfc	___flmul@prod+2,f
 21394     0F33  0831               	movf	??___flmul+3,w
 21395     0F34  3DBD               	addwfc	___flmul@prod+3,f
 21396     0F35                     i1l4747:
 21397     0F35  3008               	movlw	8
 21398     0F36                     u397_25:
 21399     0F36  35B4               	lslf	___flmul@grs,f
 21400     0F37  0DB5               	rlf	___flmul@grs+1,f
 21401     0F38  0DB6               	rlf	___flmul@grs+2,f
 21402     0F39  0DB7               	rlf	___flmul@grs+3,f
 21403     0F3A  0B89               	decfsz	9,f
 21404     0F3B  2F36               	goto	u397_25
 21405     0F3C                     i1l4749:
 21406     0F3C  0839               	movf	___flmul@bexp,w
 21407     0F3D  0738               	addwf	___flmul@aexp,w
 21408     0F3E  00AE               	movwf	??___flmul
 21409     0F3F  01AF               	clrf	??___flmul+1
 21410     0F40  0DAF               	rlf	??___flmul+1,f
 21411     0F41  082E               	movf	??___flmul,w
 21412     0F42  3E82               	addlw	130
 21413     0F43  00BE               	movwf	___flmul@temp
 21414     0F44  30FF               	movlw	255
 21415     0F45  3D2F               	addwfc	??___flmul+1,w
 21416     0F46  00BF               	movwf	___flmul@temp+1
 21417     0F47  2F5F               	goto	i1l4761
 21418     0F48                     i1l4751:
 21419     0F48  3001               	movlw	1
 21420     0F49                     u398_25:
 21421     0F49  35BA               	lslf	___flmul@prod,f
 21422     0F4A  0DBB               	rlf	___flmul@prod+1,f
 21423     0F4B  0DBC               	rlf	___flmul@prod+2,f
 21424     0F4C  0DBD               	rlf	___flmul@prod+3,f
 21425     0F4D  0B89               	decfsz	9,f
 21426     0F4E  2F49               	goto	u398_25
 21427     0F4F                     i1l4753:
 21428     0F4F  1FB7               	btfss	___flmul@grs+3,7
 21429     0F50  2F52               	goto	u399_21
 21430     0F51  2F53               	goto	u399_20
 21431     0F52                     u399_21:
 21432     0F52  2F54               	goto	i1l4757
 21433     0F53                     u399_20:
 21434     0F53                     i1l4755:
 21435     0F53  143A               	bsf	___flmul@prod,0
 21436     0F54                     i1l4757:
 21437     0F54  3001               	movlw	1
 21438     0F55                     u400_25:
 21439     0F55  35B4               	lslf	___flmul@grs,f
 21440     0F56  0DB5               	rlf	___flmul@grs+1,f
 21441     0F57  0DB6               	rlf	___flmul@grs+2,f
 21442     0F58  0DB7               	rlf	___flmul@grs+3,f
 21443     0F59  0B89               	decfsz	9,f
 21444     0F5A  2F55               	goto	u400_25
 21445     0F5B                     i1l4759:
 21446     0F5B  30FF               	movlw	255
 21447     0F5C  07BE               	addwf	___flmul@temp,f
 21448     0F5D  30FF               	movlw	255
 21449     0F5E  3DBF               	addwfc	___flmul@temp+1,f
 21450     0F5F                     i1l4761:
 21451     0F5F  1FBC               	btfss	___flmul@prod+2,7
 21452     0F60  2F62               	goto	u401_21
 21453     0F61  2F63               	goto	u401_20
 21454     0F62                     u401_21:
 21455     0F62  2F48               	goto	i1l4751
 21456     0F63                     u401_20:
 21457     0F63                     i1l4763:
 21458     0F63  01B8               	clrf	___flmul@aexp
 21459     0F64                     i1l4765:
 21460     0F64  1FB7               	btfss	___flmul@grs+3,7
 21461     0F65  2F67               	goto	u402_21
 21462     0F66  2F68               	goto	u402_20
 21463     0F67                     u402_21:
 21464     0F67  2F84               	goto	i1l4773
 21465     0F68                     u402_20:
 21466     0F68                     i1l4767:
 21467     0F68  30FF               	movlw	255
 21468     0F69  0534               	andwf	___flmul@grs,w
 21469     0F6A  00AE               	movwf	??___flmul
 21470     0F6B  30FF               	movlw	255
 21471     0F6C  0535               	andwf	___flmul@grs+1,w
 21472     0F6D  00AF               	movwf	??___flmul+1
 21473     0F6E  30FF               	movlw	255
 21474     0F6F  0536               	andwf	___flmul@grs+2,w
 21475     0F70  00B0               	movwf	??___flmul+2
 21476     0F71  307F               	movlw	127
 21477     0F72  0537               	andwf	___flmul@grs+3,w
 21478     0F73  00B1               	movwf	??___flmul+3
 21479     0F74  0831               	movf	??___flmul+3,w
 21480     0F75  0430               	iorwf	??___flmul+2,w
 21481     0F76  042F               	iorwf	??___flmul+1,w
 21482     0F77  042E               	iorwf	??___flmul,w
 21483     0F78  1903               	skipnz
 21484     0F79  2F7B               	goto	u403_21
 21485     0F7A  2F7C               	goto	u403_20
 21486     0F7B                     u403_21:
 21487     0F7B  2F7F               	goto	i1l1675
 21488     0F7C                     u403_20:
 21489     0F7C                     i1l4769:
 21490     0F7C  01B8               	clrf	___flmul@aexp
 21491     0F7D  0AB8               	incf	___flmul@aexp,f
 21492     0F7E  2F84               	goto	i1l4773
 21493     0F7F                     i1l1675:
 21494     0F7F  1C3A               	btfss	___flmul@prod,0
 21495     0F80  2F82               	goto	u404_21
 21496     0F81  2F83               	goto	u404_20
 21497     0F82                     u404_21:
 21498     0F82  2F84               	goto	i1l4773
 21499     0F83                     u404_20:
 21500     0F83  2F7C               	goto	i1l4769
 21501     0F84                     i1l4773:
 21502     0F84  0838               	movf	___flmul@aexp,w
 21503     0F85  1903               	btfsc	3,2
 21504     0F86  2F88               	goto	u405_21
 21505     0F87  2F89               	goto	u405_20
 21506     0F88                     u405_21:
 21507     0F88  2FB1               	goto	i1l4783
 21508     0F89                     u405_20:
 21509     0F89                     i1l4775:
 21510     0F89  3001               	movlw	1
 21511     0F8A  07BA               	addwf	___flmul@prod,f
 21512     0F8B  3000               	movlw	0
 21513     0F8C  3DBB               	addwfc	___flmul@prod+1,f
 21514     0F8D  3000               	movlw	0
 21515     0F8E  3DBC               	addwfc	___flmul@prod+2,f
 21516     0F8F  3000               	movlw	0
 21517     0F90  3DBD               	addwfc	___flmul@prod+3,f
 21518     0F91                     i1l4777:
 21519     0F91  1C3D               	btfss	___flmul@prod+3,0
 21520     0F92  2F94               	goto	u406_21
 21521     0F93  2F95               	goto	u406_20
 21522     0F94                     u406_21:
 21523     0F94  2FB1               	goto	i1l4783
 21524     0F95                     u406_20:
 21525     0F95                     i1l4779:
 21526     0F95  083A               	movf	___flmul@prod,w
 21527     0F96  00AE               	movwf	??___flmul
 21528     0F97  083B               	movf	___flmul@prod+1,w
 21529     0F98  00AF               	movwf	??___flmul+1
 21530     0F99  083C               	movf	___flmul@prod+2,w
 21531     0F9A  00B0               	movwf	??___flmul+2
 21532     0F9B  083D               	movf	___flmul@prod+3,w
 21533     0F9C  00B1               	movwf	??___flmul+3
 21534     0F9D  3001               	movlw	1
 21535     0F9E  00B2               	movwf	??___flmul+4
 21536     0F9F                     u407_25:
 21537     0F9F  37B1               	asrf	??___flmul+3,f
 21538     0FA0  0CB0               	rrf	??___flmul+2,f
 21539     0FA1  0CAF               	rrf	??___flmul+1,f
 21540     0FA2  0CAE               	rrf	??___flmul,f
 21541     0FA3                     u407_20:
 21542     0FA3  0BB2               	decfsz	??___flmul+4,f
 21543     0FA4  2F9F               	goto	u407_25
 21544     0FA5  0831               	movf	??___flmul+3,w
 21545     0FA6  00BD               	movwf	___flmul@prod+3
 21546     0FA7  0830               	movf	??___flmul+2,w
 21547     0FA8  00BC               	movwf	___flmul@prod+2
 21548     0FA9  082F               	movf	??___flmul+1,w
 21549     0FAA  00BB               	movwf	___flmul@prod+1
 21550     0FAB  082E               	movf	??___flmul,w
 21551     0FAC  00BA               	movwf	___flmul@prod
 21552     0FAD                     i1l4781:
 21553     0FAD  3001               	movlw	1
 21554     0FAE  07BE               	addwf	___flmul@temp,f
 21555     0FAF  3000               	movlw	0
 21556     0FB0  3DBF               	addwfc	___flmul@temp+1,f
 21557     0FB1                     i1l4783:
 21558     0FB1  083F               	movf	___flmul@temp+1,w
 21559     0FB2  3A80               	xorlw	128
 21560     0FB3  00AE               	movwf	??___flmul
 21561     0FB4  3080               	movlw	128
 21562     0FB5  022E               	subwf	??___flmul,w
 21563     0FB6  1D03               	skipz
 21564     0FB7  2FBA               	goto	u408_25
 21565     0FB8  30FF               	movlw	255
 21566     0FB9  023E               	subwf	___flmul@temp,w
 21567     0FBA                     u408_25:
 21568     0FBA  1C03               	skipc
 21569     0FBB  2FBD               	goto	u408_21
 21570     0FBC  2FBE               	goto	u408_20
 21571     0FBD                     u408_21:
 21572     0FBD  2FC8               	goto	i1l4787
 21573     0FBE                     u408_20:
 21574     0FBE                     i1l4785:
 21575     0FBE  307F               	movlw	127
 21576     0FBF  0020               	movlb	0	; select bank0
 21577     0FC0  00BD               	movwf	___flmul@prod+3
 21578     0FC1  3080               	movlw	128
 21579     0FC2  00BC               	movwf	___flmul@prod+2
 21580     0FC3  3000               	movlw	0
 21581     0FC4  00BB               	movwf	___flmul@prod+1
 21582     0FC5  3000               	movlw	0
 21583     0FC6  00BA               	movwf	___flmul@prod
 21584     0FC7  2FF3               	goto	i1l1681
 21585     0FC8                     i1l4787:
 21586     0FC8  0020               	movlb	0	; select bank0
 21587     0FC9  083F               	movf	___flmul@temp+1,w
 21588     0FCA  3A80               	xorlw	128
 21589     0FCB  00AE               	movwf	??___flmul
 21590     0FCC  3080               	movlw	128
 21591     0FCD  022E               	subwf	??___flmul,w
 21592     0FCE  1D03               	skipz
 21593     0FCF  2FD2               	goto	u409_25
 21594     0FD0  3001               	movlw	1
 21595     0FD1  023E               	subwf	___flmul@temp,w
 21596     0FD2                     u409_25:
 21597     0FD2  1803               	skipnc
 21598     0FD3  2FD5               	goto	u409_21
 21599     0FD4  2FD6               	goto	u409_20
 21600     0FD5                     u409_21:
 21601     0FD5  2FE1               	goto	i1l4793
 21602     0FD6                     u409_20:
 21603     0FD6                     i1l4789:
 21604     0FD6  3000               	movlw	0
 21605     0FD7  0020               	movlb	0	; select bank0
 21606     0FD8  00BD               	movwf	___flmul@prod+3
 21607     0FD9  3000               	movlw	0
 21608     0FDA  00BC               	movwf	___flmul@prod+2
 21609     0FDB  3000               	movlw	0
 21610     0FDC  00BB               	movwf	___flmul@prod+1
 21611     0FDD  3000               	movlw	0
 21612     0FDE  00BA               	movwf	___flmul@prod
 21613     0FDF                     i1l4791:
 21614     0FDF  01B3               	clrf	___flmul@sign
 21615     0FE0  2FF3               	goto	i1l1681
 21616     0FE1                     i1l4793:
 21617     0FE1  0020               	movlb	0	; select bank0
 21618     0FE2  083E               	movf	___flmul@temp,w
 21619     0FE3  00B9               	movwf	___flmul@bexp
 21620     0FE4  30FF               	movlw	255
 21621     0FE5  05BA               	andwf	___flmul@prod,f
 21622     0FE6  30FF               	movlw	255
 21623     0FE7  05BB               	andwf	___flmul@prod+1,f
 21624     0FE8  307F               	movlw	127
 21625     0FE9  05BC               	andwf	___flmul@prod+2,f
 21626     0FEA  3000               	movlw	0
 21627     0FEB  05BD               	andwf	___flmul@prod+3,f
 21628     0FEC                     i1l4795:
 21629     0FEC  1C39               	btfss	___flmul@bexp,0
 21630     0FED  2FEF               	goto	u410_21
 21631     0FEE  2FF0               	goto	u410_20
 21632     0FEF                     u410_21:
 21633     0FEF  2FF1               	goto	i1l4799
 21634     0FF0                     u410_20:
 21635     0FF0                     i1l4797:
 21636     0FF0  17BC               	bsf	___flmul@prod+2,7
 21637     0FF1                     i1l4799:
 21638     0FF1  3639               	lsrf	___flmul@bexp,w
 21639     0FF2  00BD               	movwf	___flmul@prod+3
 21640     0FF3                     i1l1681:
 21641     0FF3  0833               	movf	___flmul@sign,w
 21642     0FF4  00AE               	movwf	??___flmul
 21643     0FF5  082E               	movf	??___flmul,w
 21644     0FF6  04BD               	iorwf	___flmul@prod+3,f
 21645     0FF7                     i1l4801:
 21646     0FF7  083D               	movf	___flmul@prod+3,w
 21647     0FF8  00A9               	movwf	?___flmul+3
 21648     0FF9  083C               	movf	___flmul@prod+2,w
 21649     0FFA  00A8               	movwf	?___flmul+2
 21650     0FFB  083B               	movf	___flmul@prod+1,w
 21651     0FFC  00A7               	movwf	?___flmul+1
 21652     0FFD  083A               	movf	___flmul@prod,w
 21653     0FFE  00A6               	movwf	?___flmul
 21654     0FFF                     i1l1669:
 21655     0FFF  0008               	return
 21656     1000                     __end_of___flmul:
 21657                           
 21658                           	psect	text99
 21659     1EEE                     __ptext99:	
 21660 ;; *************** function __Umul8_16 *****************
 21661 ;; Defined at:
 21662 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
 21663 ;; Parameters:    Size  Location     Type
 21664 ;;  multiplier      1    wreg     unsigned char 
 21665 ;;  multiplicand    1    0[COMMON] unsigned char 
 21666 ;; Auto vars:     Size  Location     Type
 21667 ;;  multiplier      1    8[COMMON] unsigned char 
 21668 ;;  word_mpld       2    6[COMMON] unsigned short 
 21669 ;;  product         2    4[COMMON] unsigned short 
 21670 ;; Return value:  Size  Location     Type
 21671 ;;                  2    0[COMMON] unsigned int 
 21672 ;; Registers used:
 21673 ;;		wreg, status,2, status,0
 21674 ;; Tracked objects:
 21675 ;;		On entry : 0/0
 21676 ;;		On exit  : 0/0
 21677 ;;		Unchanged: 0/0
 21678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21680 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21682 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21683 ;;Total ram usage:        9 bytes
 21684 ;; Hardware stack levels used: 1
 21685 ;; This function calls:
 21686 ;;		Nothing
 21687 ;; This function is called by:
 21688 ;;		___flmul
 21689 ;; This function uses a non-reentrant model
 21690 ;;
 21691                           
 21692     1EEE                     __Umul8_16:	
 21693                           ;psect for function __Umul8_16
 21694                           
 21695                           
 21696                           ;incstack = 0
 21697                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 21698                           ;__Umul8_16@multiplier stored from wreg
 21699     1EEE  00F8               	movwf	__Umul8_16@multiplier
 21700     1EEF                     i1l4403:
 21701     1EEF  01F4               	clrf	__Umul8_16@product
 21702     1EF0  01F5               	clrf	__Umul8_16@product+1
 21703     1EF1                     i1l4405:
 21704     1EF1  0870               	movf	__Umul8_16@multiplicand,w
 21705     1EF2  00F2               	movwf	??__Umul8_16
 21706     1EF3  01F3               	clrf	??__Umul8_16+1
 21707     1EF4  0872               	movf	??__Umul8_16,w
 21708     1EF5  00F6               	movwf	__Umul8_16@word_mpld
 21709     1EF6  0873               	movf	??__Umul8_16+1,w
 21710     1EF7  00F7               	movwf	__Umul8_16@word_mpld+1
 21711     1EF8                     i1l4407:
 21712     1EF8  1C78               	btfss	__Umul8_16@multiplier,0
 21713     1EF9  2EFB               	goto	u327_21
 21714     1EFA  2EFC               	goto	u327_20
 21715     1EFB                     u327_21:
 21716     1EFB  2F00               	goto	i1l1688
 21717     1EFC                     u327_20:
 21718     1EFC                     i1l4409:
 21719     1EFC  0876               	movf	__Umul8_16@word_mpld,w
 21720     1EFD  07F4               	addwf	__Umul8_16@product,f
 21721     1EFE  0877               	movf	__Umul8_16@word_mpld+1,w
 21722     1EFF  3DF5               	addwfc	__Umul8_16@product+1,f
 21723     1F00                     i1l1688:
 21724     1F00  3001               	movlw	1
 21725     1F01                     u328_25:
 21726     1F01  35F6               	lslf	__Umul8_16@word_mpld,f
 21727     1F02  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 21728     1F03  0B89               	decfsz	9,f
 21729     1F04  2F01               	goto	u328_25
 21730     1F05  1003               	clrc
 21731     1F06  0CF8               	rrf	__Umul8_16@multiplier,f
 21732     1F07                     i1l4411:
 21733     1F07  0878               	movf	__Umul8_16@multiplier,w
 21734     1F08  1D03               	btfss	3,2
 21735     1F09  2F0B               	goto	u329_21
 21736     1F0A  2F0C               	goto	u329_20
 21737     1F0B                     u329_21:
 21738     1F0B  2EF8               	goto	i1l4407
 21739     1F0C                     u329_20:
 21740     1F0C                     i1l4413:
 21741     1F0C  0875               	movf	__Umul8_16@product+1,w
 21742     1F0D  00F1               	movwf	?__Umul8_16+1
 21743     1F0E  0874               	movf	__Umul8_16@product,w
 21744     1F0F  00F0               	movwf	?__Umul8_16
 21745     1F10                     i1l1690:
 21746     1F10  0008               	return
 21747     1F11                     __end_of__Umul8_16:
 21748                           
 21749                           	psect	text100
 21750     1485                     __ptext100:	
 21751 ;; *************** function ___flge *****************
 21752 ;; Defined at:
 21753 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
 21754 ;; Parameters:    Size  Location     Type
 21755 ;;  ff1             4   32[BANK0 ] unsigned int 
 21756 ;;  ff2             4   36[BANK0 ] unsigned int 
 21757 ;; Auto vars:     Size  Location     Type
 21758 ;;		None
 21759 ;; Return value:  Size  Location     Type
 21760 ;;		None               void
 21761 ;; Registers used:
 21762 ;;		wreg, status,2, status,0
 21763 ;; Tracked objects:
 21764 ;;		On entry : 0/0
 21765 ;;		On exit  : 0/0
 21766 ;;		Unchanged: 0/0
 21767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21768 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21770 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21771 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21772 ;;Total ram usage:       12 bytes
 21773 ;; Hardware stack levels used: 1
 21774 ;; This function calls:
 21775 ;;		Nothing
 21776 ;; This function is called by:
 21777 ;;		_TMR0_Custom_ISR
 21778 ;;		_efgtoa
 21779 ;; This function uses a non-reentrant model
 21780 ;;
 21781                           
 21782     1485                     ___flge:	
 21783                           ;psect for function ___flge
 21784                           
 21785     1485                     i1l4455:	
 21786                           ;incstack = 0
 21787                           ; Regs used in ___flge: [wreg+status,2+status,0]
 21788                           
 21789     1485  3000               	movlw	0
 21790     1486  0020               	movlb	0	; select bank0
 21791     1487  0540               	andwf	___flge@ff1,w
 21792     1488  00C8               	movwf	??___flge
 21793     1489  3000               	movlw	0
 21794     148A  0541               	andwf	___flge@ff1+1,w
 21795     148B  00C9               	movwf	??___flge+1
 21796     148C  3080               	movlw	128
 21797     148D  0542               	andwf	___flge@ff1+2,w
 21798     148E  00CA               	movwf	??___flge+2
 21799     148F  307F               	movlw	127
 21800     1490  0543               	andwf	___flge@ff1+3,w
 21801     1491  00CB               	movwf	??___flge+3
 21802     1492  084B               	movf	??___flge+3,w
 21803     1493  044A               	iorwf	??___flge+2,w
 21804     1494  0449               	iorwf	??___flge+1,w
 21805     1495  0448               	iorwf	??___flge,w
 21806     1496  1D03               	skipz
 21807     1497  2C99               	goto	u340_21
 21808     1498  2C9A               	goto	u340_20
 21809     1499                     u340_21:
 21810     1499  2CA2               	goto	i1l1450
 21811     149A                     u340_20:
 21812     149A                     i1l4457:
 21813     149A  3000               	movlw	0
 21814     149B  00C3               	movwf	___flge@ff1+3
 21815     149C  3000               	movlw	0
 21816     149D  00C2               	movwf	___flge@ff1+2
 21817     149E  3000               	movlw	0
 21818     149F  00C1               	movwf	___flge@ff1+1
 21819     14A0  3000               	movlw	0
 21820     14A1  00C0               	movwf	___flge@ff1
 21821     14A2                     i1l1450:
 21822     14A2  3000               	movlw	0
 21823     14A3  0544               	andwf	___flge@ff2,w
 21824     14A4  00C8               	movwf	??___flge
 21825     14A5  3000               	movlw	0
 21826     14A6  0545               	andwf	___flge@ff2+1,w
 21827     14A7  00C9               	movwf	??___flge+1
 21828     14A8  3080               	movlw	128
 21829     14A9  0546               	andwf	___flge@ff2+2,w
 21830     14AA  00CA               	movwf	??___flge+2
 21831     14AB  307F               	movlw	127
 21832     14AC  0547               	andwf	___flge@ff2+3,w
 21833     14AD  00CB               	movwf	??___flge+3
 21834     14AE  084B               	movf	??___flge+3,w
 21835     14AF  044A               	iorwf	??___flge+2,w
 21836     14B0  0449               	iorwf	??___flge+1,w
 21837     14B1  0448               	iorwf	??___flge,w
 21838     14B2  1D03               	skipz
 21839     14B3  2CB5               	goto	u341_21
 21840     14B4  2CB6               	goto	u341_20
 21841     14B5                     u341_21:
 21842     14B5  2CBE               	goto	i1l4461
 21843     14B6                     u341_20:
 21844     14B6                     i1l4459:
 21845     14B6  3000               	movlw	0
 21846     14B7  00C7               	movwf	___flge@ff2+3
 21847     14B8  3000               	movlw	0
 21848     14B9  00C6               	movwf	___flge@ff2+2
 21849     14BA  3000               	movlw	0
 21850     14BB  00C5               	movwf	___flge@ff2+1
 21851     14BC  3000               	movlw	0
 21852     14BD  00C4               	movwf	___flge@ff2
 21853     14BE                     i1l4461:
 21854     14BE  1FC3               	btfss	___flge@ff1+3,7
 21855     14BF  2CC1               	goto	u342_21
 21856     14C0  2CC2               	goto	u342_20
 21857     14C1                     u342_21:
 21858     14C1  2CDA               	goto	i1l4465
 21859     14C2                     u342_20:
 21860     14C2                     i1l4463:
 21861     14C2  3000               	movlw	0
 21862     14C3  00C8               	movwf	??___flge
 21863     14C4  3000               	movlw	0
 21864     14C5  00C9               	movwf	??___flge+1
 21865     14C6  3000               	movlw	0
 21866     14C7  00CA               	movwf	??___flge+2
 21867     14C8  3080               	movlw	128
 21868     14C9  00CB               	movwf	??___flge+3
 21869     14CA  0840               	movf	___flge@ff1,w
 21870     14CB  02C8               	subwf	??___flge,f
 21871     14CC  0841               	movf	___flge@ff1+1,w
 21872     14CD  3BC9               	subwfb	??___flge+1,f
 21873     14CE  0842               	movf	___flge@ff1+2,w
 21874     14CF  3BCA               	subwfb	??___flge+2,f
 21875     14D0  0843               	movf	___flge@ff1+3,w
 21876     14D1  3BCB               	subwfb	??___flge+3,f
 21877     14D2  084B               	movf	??___flge+3,w
 21878     14D3  00C3               	movwf	___flge@ff1+3
 21879     14D4  084A               	movf	??___flge+2,w
 21880     14D5  00C2               	movwf	___flge@ff1+2
 21881     14D6  0849               	movf	??___flge+1,w
 21882     14D7  00C1               	movwf	___flge@ff1+1
 21883     14D8  0848               	movf	??___flge,w
 21884     14D9  00C0               	movwf	___flge@ff1
 21885     14DA                     i1l4465:
 21886     14DA  1FC7               	btfss	___flge@ff2+3,7
 21887     14DB  2CDD               	goto	u343_21
 21888     14DC  2CDE               	goto	u343_20
 21889     14DD                     u343_21:
 21890     14DD  2CF6               	goto	i1l1453
 21891     14DE                     u343_20:
 21892     14DE                     i1l4467:
 21893     14DE  3000               	movlw	0
 21894     14DF  00C8               	movwf	??___flge
 21895     14E0  3000               	movlw	0
 21896     14E1  00C9               	movwf	??___flge+1
 21897     14E2  3000               	movlw	0
 21898     14E3  00CA               	movwf	??___flge+2
 21899     14E4  3080               	movlw	128
 21900     14E5  00CB               	movwf	??___flge+3
 21901     14E6  0844               	movf	___flge@ff2,w
 21902     14E7  02C8               	subwf	??___flge,f
 21903     14E8  0845               	movf	___flge@ff2+1,w
 21904     14E9  3BC9               	subwfb	??___flge+1,f
 21905     14EA  0846               	movf	___flge@ff2+2,w
 21906     14EB  3BCA               	subwfb	??___flge+2,f
 21907     14EC  0847               	movf	___flge@ff2+3,w
 21908     14ED  3BCB               	subwfb	??___flge+3,f
 21909     14EE  084B               	movf	??___flge+3,w
 21910     14EF  00C7               	movwf	___flge@ff2+3
 21911     14F0  084A               	movf	??___flge+2,w
 21912     14F1  00C6               	movwf	___flge@ff2+2
 21913     14F2  0849               	movf	??___flge+1,w
 21914     14F3  00C5               	movwf	___flge@ff2+1
 21915     14F4  0848               	movf	??___flge,w
 21916     14F5  00C4               	movwf	___flge@ff2
 21917     14F6                     i1l1453:
 21918     14F6  3080               	movlw	128
 21919     14F7  06C3               	xorwf	___flge@ff1+3,f
 21920     14F8  3080               	movlw	128
 21921     14F9  06C7               	xorwf	___flge@ff2+3,f
 21922     14FA  0847               	movf	___flge@ff2+3,w
 21923     14FB  0243               	subwf	___flge@ff1+3,w
 21924     14FC  1D03               	skipz
 21925     14FD  2D08               	goto	u344_25
 21926     14FE  0846               	movf	___flge@ff2+2,w
 21927     14FF  0242               	subwf	___flge@ff1+2,w
 21928     1500  1D03               	skipz
 21929     1501  2D08               	goto	u344_25
 21930     1502  0845               	movf	___flge@ff2+1,w
 21931     1503  0241               	subwf	___flge@ff1+1,w
 21932     1504  1D03               	skipz
 21933     1505  2D08               	goto	u344_25
 21934     1506  0844               	movf	___flge@ff2,w
 21935     1507  0240               	subwf	___flge@ff1,w
 21936     1508                     u344_25:
 21937     1508  1803               	skipnc
 21938     1509  2D0B               	goto	u344_21
 21939     150A  2D0C               	goto	u344_20
 21940     150B                     u344_21:
 21941     150B  2D0E               	goto	i1l4471
 21942     150C                     u344_20:
 21943     150C                     i1l4469:
 21944     150C  1003               	clrc
 21945     150D  2D0F               	goto	i1l1458
 21946     150E                     i1l4471:
 21947     150E  1403               	setc
 21948     150F                     i1l1458:
 21949     150F  0008               	return
 21950     1510                     __end_of___flge:
 21951                           
 21952                           	psect	text101
 21953     1122                     __ptext101:	
 21954 ;; *************** function ___fleq *****************
 21955 ;; Defined at:
 21956 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
 21957 ;; Parameters:    Size  Location     Type
 21958 ;;  ff1             4    0[COMMON] unsigned int 
 21959 ;;  ff2             4    4[COMMON] unsigned int 
 21960 ;; Auto vars:     Size  Location     Type
 21961 ;;		None
 21962 ;; Return value:  Size  Location     Type
 21963 ;;		None               void
 21964 ;; Registers used:
 21965 ;;		wreg, status,2, status,0
 21966 ;; Tracked objects:
 21967 ;;		On entry : 0/0
 21968 ;;		On exit  : 0/0
 21969 ;;		Unchanged: 0/0
 21970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21971 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21973 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21974 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21975 ;;Total ram usage:       12 bytes
 21976 ;; Hardware stack levels used: 1
 21977 ;; This function calls:
 21978 ;;		Nothing
 21979 ;; This function is called by:
 21980 ;;		_efgtoa
 21981 ;; This function uses a non-reentrant model
 21982 ;;
 21983                           
 21984     1122                     ___fleq:	
 21985                           ;psect for function ___fleq
 21986                           
 21987     1122                     i1l4443:	
 21988                           ;incstack = 0
 21989                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 21990                           
 21991     1122  3000               	movlw	0
 21992     1123  0570               	andwf	___fleq@ff1,w
 21993     1124  00F8               	movwf	??___fleq
 21994     1125  3000               	movlw	0
 21995     1126  0571               	andwf	___fleq@ff1+1,w
 21996     1127  00F9               	movwf	??___fleq+1
 21997     1128  3080               	movlw	128
 21998     1129  0572               	andwf	___fleq@ff1+2,w
 21999     112A  00FA               	movwf	??___fleq+2
 22000     112B  307F               	movlw	127
 22001     112C  0573               	andwf	___fleq@ff1+3,w
 22002     112D  00FB               	movwf	??___fleq+3
 22003     112E  087B               	movf	??___fleq+3,w
 22004     112F  047A               	iorwf	??___fleq+2,w
 22005     1130  0479               	iorwf	??___fleq+1,w
 22006     1131  0478               	iorwf	??___fleq,w
 22007     1132  1D03               	skipz
 22008     1133  2935               	goto	u337_21
 22009     1134  2936               	goto	u337_20
 22010     1135                     u337_21:
 22011     1135  293E               	goto	i1l1441
 22012     1136                     u337_20:
 22013     1136                     i1l4445:
 22014     1136  3000               	movlw	0
 22015     1137  00F3               	movwf	___fleq@ff1+3
 22016     1138  3000               	movlw	0
 22017     1139  00F2               	movwf	___fleq@ff1+2
 22018     113A  3000               	movlw	0
 22019     113B  00F1               	movwf	___fleq@ff1+1
 22020     113C  3000               	movlw	0
 22021     113D  00F0               	movwf	___fleq@ff1
 22022     113E                     i1l1441:
 22023     113E  3000               	movlw	0
 22024     113F  0574               	andwf	___fleq@ff2,w
 22025     1140  00F8               	movwf	??___fleq
 22026     1141  3000               	movlw	0
 22027     1142  0575               	andwf	___fleq@ff2+1,w
 22028     1143  00F9               	movwf	??___fleq+1
 22029     1144  3080               	movlw	128
 22030     1145  0576               	andwf	___fleq@ff2+2,w
 22031     1146  00FA               	movwf	??___fleq+2
 22032     1147  307F               	movlw	127
 22033     1148  0577               	andwf	___fleq@ff2+3,w
 22034     1149  00FB               	movwf	??___fleq+3
 22035     114A  087B               	movf	??___fleq+3,w
 22036     114B  047A               	iorwf	??___fleq+2,w
 22037     114C  0479               	iorwf	??___fleq+1,w
 22038     114D  0478               	iorwf	??___fleq,w
 22039     114E  1D03               	skipz
 22040     114F  2951               	goto	u338_21
 22041     1150  2952               	goto	u338_20
 22042     1151                     u338_21:
 22043     1151  295A               	goto	i1l1442
 22044     1152                     u338_20:
 22045     1152                     i1l4447:
 22046     1152  3000               	movlw	0
 22047     1153  00F7               	movwf	___fleq@ff2+3
 22048     1154  3000               	movlw	0
 22049     1155  00F6               	movwf	___fleq@ff2+2
 22050     1156  3000               	movlw	0
 22051     1157  00F5               	movwf	___fleq@ff2+1
 22052     1158  3000               	movlw	0
 22053     1159  00F4               	movwf	___fleq@ff2
 22054     115A                     i1l1442:
 22055     115A  0877               	movf	___fleq@ff2+3,w
 22056     115B  0673               	xorwf	___fleq@ff1+3,w
 22057     115C  1D03               	skipz
 22058     115D  2968               	goto	u339_25
 22059     115E  0876               	movf	___fleq@ff2+2,w
 22060     115F  0672               	xorwf	___fleq@ff1+2,w
 22061     1160  1D03               	skipz
 22062     1161  2968               	goto	u339_25
 22063     1162  0875               	movf	___fleq@ff2+1,w
 22064     1163  0671               	xorwf	___fleq@ff1+1,w
 22065     1164  1D03               	skipz
 22066     1165  2968               	goto	u339_25
 22067     1166  0874               	movf	___fleq@ff2,w
 22068     1167  0670               	xorwf	___fleq@ff1,w
 22069     1168                     u339_25:
 22070     1168  1903               	skipnz
 22071     1169  296B               	goto	u339_21
 22072     116A  296C               	goto	u339_20
 22073     116B                     u339_21:
 22074     116B  296E               	goto	i1l4451
 22075     116C                     u339_20:
 22076     116C                     i1l4449:
 22077     116C  1003               	clrc
 22078     116D  296F               	goto	i1l1447
 22079     116E                     i1l4451:
 22080     116E  1403               	setc
 22081     116F                     i1l1447:
 22082     116F  0008               	return
 22083     1170                     __end_of___fleq:
 22084                           
 22085                           	psect	text102
 22086     0857                     __ptext102:	
 22087 ;; *************** function ___fldiv *****************
 22088 ;; Defined at:
 22089 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
 22090 ;; Parameters:    Size  Location     Type
 22091 ;;  a               4   32[BANK0 ] unsigned int 
 22092 ;;  b               4   36[BANK0 ] unsigned int 
 22093 ;; Auto vars:     Size  Location     Type
 22094 ;;  grs             4   52[BANK0 ] unsigned long 
 22095 ;;  rem             4   45[BANK0 ] unsigned long 
 22096 ;;  new_exp         2   50[BANK0 ] short 
 22097 ;;  aexp            1   57[BANK0 ] unsigned char 
 22098 ;;  bexp            1   56[BANK0 ] unsigned char 
 22099 ;;  sign            1   49[BANK0 ] unsigned char 
 22100 ;; Return value:  Size  Location     Type
 22101 ;;                  4   32[BANK0 ] unsigned char 
 22102 ;; Registers used:
 22103 ;;		wreg, status,2, status,0
 22104 ;; Tracked objects:
 22105 ;;		On entry : 0/0
 22106 ;;		On exit  : 0/0
 22107 ;;		Unchanged: 0/0
 22108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22109 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22110 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22111 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22112 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22113 ;;Total ram usage:       26 bytes
 22114 ;; Hardware stack levels used: 1
 22115 ;; This function calls:
 22116 ;;		Nothing
 22117 ;; This function is called by:
 22118 ;;		_TMR0_Custom_ISR
 22119 ;;		_efgtoa
 22120 ;;		_get_distance_from_supersonic
 22121 ;;		_get_temperature
 22122 ;; This function uses a non-reentrant model
 22123 ;;
 22124                           
 22125     0857                     ___fldiv:	
 22126                           ;psect for function ___fldiv
 22127                           
 22128     0857                     i1l4525:	
 22129                           ;incstack = 0
 22130                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 22131                           
 22132     0857  0020               	movlb	0	; select bank0
 22133     0858  0847               	movf	___fldiv@b+3,w
 22134     0859  3980               	andlw	128
 22135     085A  00D1               	movwf	___fldiv@sign
 22136     085B                     i1l4527:
 22137     085B  3547               	lslf	___fldiv@b+3,w
 22138     085C  00D8               	movwf	___fldiv@bexp
 22139     085D                     i1l4529:
 22140     085D  1FC6               	btfss	___fldiv@b+2,7
 22141     085E  2860               	goto	u356_21
 22142     085F  2861               	goto	u356_20
 22143     0860                     u356_21:
 22144     0860  2862               	goto	i1l4533
 22145     0861                     u356_20:
 22146     0861                     i1l4531:
 22147     0861  1458               	bsf	___fldiv@bexp,0
 22148     0862                     i1l4533:
 22149     0862  0858               	movf	___fldiv@bexp,w
 22150     0863  1903               	btfsc	3,2
 22151     0864  2866               	goto	u357_21
 22152     0865  2867               	goto	u357_20
 22153     0866                     u357_21:
 22154     0866  2877               	goto	i1l4543
 22155     0867                     u357_20:
 22156     0867                     i1l4535:
 22157     0867  0A58               	incf	___fldiv@bexp,w
 22158     0868  1D03               	btfss	3,2
 22159     0869  286B               	goto	u358_21
 22160     086A  286C               	goto	u358_20
 22161     086B                     u358_21:
 22162     086B  2874               	goto	i1l4539
 22163     086C                     u358_20:
 22164     086C                     i1l4537:
 22165     086C  3000               	movlw	0
 22166     086D  00C7               	movwf	___fldiv@b+3
 22167     086E  3000               	movlw	0
 22168     086F  00C6               	movwf	___fldiv@b+2
 22169     0870  3000               	movlw	0
 22170     0871  00C5               	movwf	___fldiv@b+1
 22171     0872  3000               	movlw	0
 22172     0873  00C4               	movwf	___fldiv@b
 22173     0874                     i1l4539:
 22174     0874  17C6               	bsf	___fldiv@b+2,7
 22175     0875                     i1l4541:
 22176     0875  01C7               	clrf	___fldiv@b+3
 22177     0876  287F               	goto	i1l4545
 22178     0877                     i1l4543:
 22179     0877  3000               	movlw	0
 22180     0878  00C7               	movwf	___fldiv@b+3
 22181     0879  3000               	movlw	0
 22182     087A  00C6               	movwf	___fldiv@b+2
 22183     087B  3000               	movlw	0
 22184     087C  00C5               	movwf	___fldiv@b+1
 22185     087D  3000               	movlw	0
 22186     087E  00C4               	movwf	___fldiv@b
 22187     087F                     i1l4545:
 22188     087F  0843               	movf	___fldiv@a+3,w
 22189     0880  3980               	andlw	128
 22190     0881  00C8               	movwf	??___fldiv
 22191     0882  0848               	movf	??___fldiv,w
 22192     0883  06D1               	xorwf	___fldiv@sign,f
 22193     0884                     i1l4547:
 22194     0884  3543               	lslf	___fldiv@a+3,w
 22195     0885  00D9               	movwf	___fldiv@aexp
 22196     0886                     i1l4549:
 22197     0886  1FC2               	btfss	___fldiv@a+2,7
 22198     0887  2889               	goto	u359_21
 22199     0888  288A               	goto	u359_20
 22200     0889                     u359_21:
 22201     0889  288B               	goto	i1l4553
 22202     088A                     u359_20:
 22203     088A                     i1l4551:
 22204     088A  1459               	bsf	___fldiv@aexp,0
 22205     088B                     i1l4553:
 22206     088B  0859               	movf	___fldiv@aexp,w
 22207     088C  1903               	btfsc	3,2
 22208     088D  288F               	goto	u360_21
 22209     088E  2890               	goto	u360_20
 22210     088F                     u360_21:
 22211     088F  28A0               	goto	i1l4563
 22212     0890                     u360_20:
 22213     0890                     i1l4555:
 22214     0890  0A59               	incf	___fldiv@aexp,w
 22215     0891  1D03               	btfss	3,2
 22216     0892  2894               	goto	u361_21
 22217     0893  2895               	goto	u361_20
 22218     0894                     u361_21:
 22219     0894  289D               	goto	i1l4559
 22220     0895                     u361_20:
 22221     0895                     i1l4557:
 22222     0895  3000               	movlw	0
 22223     0896  00C3               	movwf	___fldiv@a+3
 22224     0897  3000               	movlw	0
 22225     0898  00C2               	movwf	___fldiv@a+2
 22226     0899  3000               	movlw	0
 22227     089A  00C1               	movwf	___fldiv@a+1
 22228     089B  3000               	movlw	0
 22229     089C  00C0               	movwf	___fldiv@a
 22230     089D                     i1l4559:
 22231     089D  17C2               	bsf	___fldiv@a+2,7
 22232     089E                     i1l4561:
 22233     089E  01C3               	clrf	___fldiv@a+3
 22234     089F  28A8               	goto	i1l1629
 22235     08A0                     i1l4563:
 22236     08A0  3000               	movlw	0
 22237     08A1  00C3               	movwf	___fldiv@a+3
 22238     08A2  3000               	movlw	0
 22239     08A3  00C2               	movwf	___fldiv@a+2
 22240     08A4  3000               	movlw	0
 22241     08A5  00C1               	movwf	___fldiv@a+1
 22242     08A6  3000               	movlw	0
 22243     08A7  00C0               	movwf	___fldiv@a
 22244     08A8                     i1l1629:
 22245     08A8  0843               	movf	___fldiv@a+3,w
 22246     08A9  0442               	iorwf	___fldiv@a+2,w
 22247     08AA  0441               	iorwf	___fldiv@a+1,w
 22248     08AB  0440               	iorwf	___fldiv@a,w
 22249     08AC  1D03               	skipz
 22250     08AD  28AF               	goto	u362_21
 22251     08AE  28B0               	goto	u362_20
 22252     08AF                     u362_21:
 22253     08AF  28C9               	goto	i1l4573
 22254     08B0                     u362_20:
 22255     08B0                     i1l4565:
 22256     08B0  3000               	movlw	0
 22257     08B1  00C7               	movwf	___fldiv@b+3
 22258     08B2  3000               	movlw	0
 22259     08B3  00C6               	movwf	___fldiv@b+2
 22260     08B4  3000               	movlw	0
 22261     08B5  00C5               	movwf	___fldiv@b+1
 22262     08B6  3000               	movlw	0
 22263     08B7  00C4               	movwf	___fldiv@b
 22264     08B8  3080               	movlw	128
 22265     08B9  04C6               	iorwf	___fldiv@b+2,f
 22266     08BA  307F               	movlw	127
 22267     08BB  04C7               	iorwf	___fldiv@b+3,f
 22268     08BC                     i1l4567:
 22269     08BC  0851               	movf	___fldiv@sign,w
 22270     08BD  00C8               	movwf	??___fldiv
 22271     08BE  0848               	movf	??___fldiv,w
 22272     08BF  04C7               	iorwf	___fldiv@b+3,f
 22273     08C0                     i1l4569:
 22274     08C0  0847               	movf	___fldiv@b+3,w
 22275     08C1  00C3               	movwf	?___fldiv+3
 22276     08C2  0846               	movf	___fldiv@b+2,w
 22277     08C3  00C2               	movwf	?___fldiv+2
 22278     08C4  0845               	movf	___fldiv@b+1,w
 22279     08C5  00C1               	movwf	?___fldiv+1
 22280     08C6  0844               	movf	___fldiv@b,w
 22281     08C7  00C0               	movwf	?___fldiv
 22282     08C8  2A00               	goto	i1l1631
 22283     08C9                     i1l4573:
 22284     08C9  0858               	movf	___fldiv@bexp,w
 22285     08CA  1D03               	btfss	3,2
 22286     08CB  28CD               	goto	u363_21
 22287     08CC  28CE               	goto	u363_20
 22288     08CD                     u363_21:
 22289     08CD  28D7               	goto	i1l4579
 22290     08CE                     u363_20:
 22291     08CE                     i1l4575:
 22292     08CE  3000               	movlw	0
 22293     08CF  00C3               	movwf	?___fldiv+3
 22294     08D0  3000               	movlw	0
 22295     08D1  00C2               	movwf	?___fldiv+2
 22296     08D2  3000               	movlw	0
 22297     08D3  00C1               	movwf	?___fldiv+1
 22298     08D4  3000               	movlw	0
 22299     08D5  00C0               	movwf	?___fldiv
 22300     08D6  2A00               	goto	i1l1631
 22301     08D7                     i1l4579:
 22302     08D7  0858               	movf	___fldiv@bexp,w
 22303     08D8  00C8               	movwf	??___fldiv
 22304     08D9  01C9               	clrf	??___fldiv+1
 22305     08DA  0849               	movf	??___fldiv+1,w
 22306     08DB  00CB               	movwf	??___fldiv+3
 22307     08DC  0859               	movf	___fldiv@aexp,w
 22308     08DD  0248               	subwf	??___fldiv,w
 22309     08DE  00CA               	movwf	??___fldiv+2
 22310     08DF  1C03               	skipc
 22311     08E0  03CB               	decf	??___fldiv+3,f
 22312     08E1  084A               	movf	??___fldiv+2,w
 22313     08E2  3E7F               	addlw	127
 22314     08E3  00D2               	movwf	___fldiv@new_exp
 22315     08E4  3000               	movlw	0
 22316     08E5  3D4B               	addwfc	??___fldiv+3,w
 22317     08E6  00D3               	movwf	___fldiv@new_exp+1
 22318     08E7                     i1l4581:
 22319     08E7  0847               	movf	___fldiv@b+3,w
 22320     08E8  00D0               	movwf	___fldiv@rem+3
 22321     08E9  0846               	movf	___fldiv@b+2,w
 22322     08EA  00CF               	movwf	___fldiv@rem+2
 22323     08EB  0845               	movf	___fldiv@b+1,w
 22324     08EC  00CE               	movwf	___fldiv@rem+1
 22325     08ED  0844               	movf	___fldiv@b,w
 22326     08EE  00CD               	movwf	___fldiv@rem
 22327     08EF                     i1l4583:
 22328     08EF  3000               	movlw	0
 22329     08F0  00C7               	movwf	___fldiv@b+3
 22330     08F1  3000               	movlw	0
 22331     08F2  00C6               	movwf	___fldiv@b+2
 22332     08F3  3000               	movlw	0
 22333     08F4  00C5               	movwf	___fldiv@b+1
 22334     08F5  3000               	movlw	0
 22335     08F6  00C4               	movwf	___fldiv@b
 22336     08F7                     i1l4585:
 22337     08F7  3000               	movlw	0
 22338     08F8  00D7               	movwf	___fldiv@grs+3
 22339     08F9  3000               	movlw	0
 22340     08FA  00D6               	movwf	___fldiv@grs+2
 22341     08FB  3000               	movlw	0
 22342     08FC  00D5               	movwf	___fldiv@grs+1
 22343     08FD  3000               	movlw	0
 22344     08FE  00D4               	movwf	___fldiv@grs
 22345     08FF                     i1l4587:
 22346     08FF  01D9               	clrf	___fldiv@aexp
 22347     0900  293F               	goto	i1l4607
 22348     0901                     i1l4589:
 22349     0901  0859               	movf	___fldiv@aexp,w
 22350     0902  1903               	btfsc	3,2
 22351     0903  2905               	goto	u364_21
 22352     0904  2906               	goto	u364_20
 22353     0905                     u364_21:
 22354     0905  2920               	goto	i1l4599
 22355     0906                     u364_20:
 22356     0906                     i1l4591:
 22357     0906  3001               	movlw	1
 22358     0907                     u365_25:
 22359     0907  35CD               	lslf	___fldiv@rem,f
 22360     0908  0DCE               	rlf	___fldiv@rem+1,f
 22361     0909  0DCF               	rlf	___fldiv@rem+2,f
 22362     090A  0DD0               	rlf	___fldiv@rem+3,f
 22363     090B  0B89               	decfsz	9,f
 22364     090C  2907               	goto	u365_25
 22365     090D  3001               	movlw	1
 22366     090E                     u366_25:
 22367     090E  35C4               	lslf	___fldiv@b,f
 22368     090F  0DC5               	rlf	___fldiv@b+1,f
 22369     0910  0DC6               	rlf	___fldiv@b+2,f
 22370     0911  0DC7               	rlf	___fldiv@b+3,f
 22371     0912  0B89               	decfsz	9,f
 22372     0913  290E               	goto	u366_25
 22373     0914                     i1l4593:
 22374     0914  1FD7               	btfss	___fldiv@grs+3,7
 22375     0915  2917               	goto	u367_21
 22376     0916  2918               	goto	u367_20
 22377     0917                     u367_21:
 22378     0917  2919               	goto	i1l4597
 22379     0918                     u367_20:
 22380     0918                     i1l4595:
 22381     0918  1444               	bsf	___fldiv@b,0
 22382     0919                     i1l4597:
 22383     0919  3001               	movlw	1
 22384     091A                     u368_25:
 22385     091A  35D4               	lslf	___fldiv@grs,f
 22386     091B  0DD5               	rlf	___fldiv@grs+1,f
 22387     091C  0DD6               	rlf	___fldiv@grs+2,f
 22388     091D  0DD7               	rlf	___fldiv@grs+3,f
 22389     091E  0B89               	decfsz	9,f
 22390     091F  291A               	goto	u368_25
 22391     0920                     i1l4599:
 22392     0920  0843               	movf	___fldiv@a+3,w
 22393     0921  0250               	subwf	___fldiv@rem+3,w
 22394     0922  1D03               	skipz
 22395     0923  292E               	goto	u369_25
 22396     0924  0842               	movf	___fldiv@a+2,w
 22397     0925  024F               	subwf	___fldiv@rem+2,w
 22398     0926  1D03               	skipz
 22399     0927  292E               	goto	u369_25
 22400     0928  0841               	movf	___fldiv@a+1,w
 22401     0929  024E               	subwf	___fldiv@rem+1,w
 22402     092A  1D03               	skipz
 22403     092B  292E               	goto	u369_25
 22404     092C  0840               	movf	___fldiv@a,w
 22405     092D  024D               	subwf	___fldiv@rem,w
 22406     092E                     u369_25:
 22407     092E  1C03               	skipc
 22408     092F  2931               	goto	u369_21
 22409     0930  2932               	goto	u369_20
 22410     0931                     u369_21:
 22411     0931  293B               	goto	i1l4605
 22412     0932                     u369_20:
 22413     0932                     i1l4601:
 22414     0932  1757               	bsf	___fldiv@grs+3,6
 22415     0933                     i1l4603:
 22416     0933  0840               	movf	___fldiv@a,w
 22417     0934  02CD               	subwf	___fldiv@rem,f
 22418     0935  0841               	movf	___fldiv@a+1,w
 22419     0936  3BCE               	subwfb	___fldiv@rem+1,f
 22420     0937  0842               	movf	___fldiv@a+2,w
 22421     0938  3BCF               	subwfb	___fldiv@rem+2,f
 22422     0939  0843               	movf	___fldiv@a+3,w
 22423     093A  3BD0               	subwfb	___fldiv@rem+3,f
 22424     093B                     i1l4605:
 22425     093B  3001               	movlw	1
 22426     093C  00C8               	movwf	??___fldiv
 22427     093D  0848               	movf	??___fldiv,w
 22428     093E  07D9               	addwf	___fldiv@aexp,f
 22429     093F                     i1l4607:
 22430     093F  301A               	movlw	26
 22431     0940  0259               	subwf	___fldiv@aexp,w
 22432     0941  1C03               	skipc
 22433     0942  2944               	goto	u370_21
 22434     0943  2945               	goto	u370_20
 22435     0944                     u370_21:
 22436     0944  2901               	goto	i1l4589
 22437     0945                     u370_20:
 22438     0945                     i1l4609:
 22439     0945  0850               	movf	___fldiv@rem+3,w
 22440     0946  044F               	iorwf	___fldiv@rem+2,w
 22441     0947  044E               	iorwf	___fldiv@rem+1,w
 22442     0948  044D               	iorwf	___fldiv@rem,w
 22443     0949  1903               	skipnz
 22444     094A  294C               	goto	u371_21
 22445     094B  294D               	goto	u371_20
 22446     094C                     u371_21:
 22447     094C  2966               	goto	i1l4623
 22448     094D                     u371_20:
 22449     094D                     i1l4611:
 22450     094D  1454               	bsf	___fldiv@grs,0
 22451     094E  2966               	goto	i1l4623
 22452     094F                     i1l4613:
 22453     094F  3001               	movlw	1
 22454     0950                     u372_25:
 22455     0950  35C4               	lslf	___fldiv@b,f
 22456     0951  0DC5               	rlf	___fldiv@b+1,f
 22457     0952  0DC6               	rlf	___fldiv@b+2,f
 22458     0953  0DC7               	rlf	___fldiv@b+3,f
 22459     0954  0B89               	decfsz	9,f
 22460     0955  2950               	goto	u372_25
 22461     0956                     i1l4615:
 22462     0956  1FD7               	btfss	___fldiv@grs+3,7
 22463     0957  2959               	goto	u373_21
 22464     0958  295A               	goto	u373_20
 22465     0959                     u373_21:
 22466     0959  295B               	goto	i1l4619
 22467     095A                     u373_20:
 22468     095A                     i1l4617:
 22469     095A  1444               	bsf	___fldiv@b,0
 22470     095B                     i1l4619:
 22471     095B  3001               	movlw	1
 22472     095C                     u374_25:
 22473     095C  35D4               	lslf	___fldiv@grs,f
 22474     095D  0DD5               	rlf	___fldiv@grs+1,f
 22475     095E  0DD6               	rlf	___fldiv@grs+2,f
 22476     095F  0DD7               	rlf	___fldiv@grs+3,f
 22477     0960  0B89               	decfsz	9,f
 22478     0961  295C               	goto	u374_25
 22479     0962                     i1l4621:
 22480     0962  30FF               	movlw	255
 22481     0963  07D2               	addwf	___fldiv@new_exp,f
 22482     0964  30FF               	movlw	255
 22483     0965  3DD3               	addwfc	___fldiv@new_exp+1,f
 22484     0966                     i1l4623:
 22485     0966  1FC6               	btfss	___fldiv@b+2,7
 22486     0967  2969               	goto	u375_21
 22487     0968  296A               	goto	u375_20
 22488     0969                     u375_21:
 22489     0969  294F               	goto	i1l4613
 22490     096A                     u375_20:
 22491     096A                     i1l4625:
 22492     096A  01D9               	clrf	___fldiv@aexp
 22493     096B                     i1l4627:
 22494     096B  1FD7               	btfss	___fldiv@grs+3,7
 22495     096C  296E               	goto	u376_21
 22496     096D  296F               	goto	u376_20
 22497     096E                     u376_21:
 22498     096E  298B               	goto	i1l4635
 22499     096F                     u376_20:
 22500     096F                     i1l4629:
 22501     096F  30FF               	movlw	255
 22502     0970  0554               	andwf	___fldiv@grs,w
 22503     0971  00C8               	movwf	??___fldiv
 22504     0972  30FF               	movlw	255
 22505     0973  0555               	andwf	___fldiv@grs+1,w
 22506     0974  00C9               	movwf	??___fldiv+1
 22507     0975  30FF               	movlw	255
 22508     0976  0556               	andwf	___fldiv@grs+2,w
 22509     0977  00CA               	movwf	??___fldiv+2
 22510     0978  307F               	movlw	127
 22511     0979  0557               	andwf	___fldiv@grs+3,w
 22512     097A  00CB               	movwf	??___fldiv+3
 22513     097B  084B               	movf	??___fldiv+3,w
 22514     097C  044A               	iorwf	??___fldiv+2,w
 22515     097D  0449               	iorwf	??___fldiv+1,w
 22516     097E  0448               	iorwf	??___fldiv,w
 22517     097F  1903               	skipnz
 22518     0980  2982               	goto	u377_21
 22519     0981  2983               	goto	u377_20
 22520     0982                     u377_21:
 22521     0982  2986               	goto	i1l1645
 22522     0983                     u377_20:
 22523     0983                     i1l4631:
 22524     0983  01D9               	clrf	___fldiv@aexp
 22525     0984  0AD9               	incf	___fldiv@aexp,f
 22526     0985  298B               	goto	i1l4635
 22527     0986                     i1l1645:
 22528     0986  1C44               	btfss	___fldiv@b,0
 22529     0987  2989               	goto	u378_21
 22530     0988  298A               	goto	u378_20
 22531     0989                     u378_21:
 22532     0989  298B               	goto	i1l4635
 22533     098A                     u378_20:
 22534     098A  2983               	goto	i1l4631
 22535     098B                     i1l4635:
 22536     098B  0859               	movf	___fldiv@aexp,w
 22537     098C  1903               	btfsc	3,2
 22538     098D  298F               	goto	u379_21
 22539     098E  2990               	goto	u379_20
 22540     098F                     u379_21:
 22541     098F  29B8               	goto	i1l4645
 22542     0990                     u379_20:
 22543     0990                     i1l4637:
 22544     0990  3001               	movlw	1
 22545     0991  07C4               	addwf	___fldiv@b,f
 22546     0992  3000               	movlw	0
 22547     0993  3DC5               	addwfc	___fldiv@b+1,f
 22548     0994  3000               	movlw	0
 22549     0995  3DC6               	addwfc	___fldiv@b+2,f
 22550     0996  3000               	movlw	0
 22551     0997  3DC7               	addwfc	___fldiv@b+3,f
 22552     0998                     i1l4639:
 22553     0998  1C47               	btfss	___fldiv@b+3,0
 22554     0999  299B               	goto	u380_21
 22555     099A  299C               	goto	u380_20
 22556     099B                     u380_21:
 22557     099B  29B8               	goto	i1l4645
 22558     099C                     u380_20:
 22559     099C                     i1l4641:
 22560     099C  0844               	movf	___fldiv@b,w
 22561     099D  00C8               	movwf	??___fldiv
 22562     099E  0845               	movf	___fldiv@b+1,w
 22563     099F  00C9               	movwf	??___fldiv+1
 22564     09A0  0846               	movf	___fldiv@b+2,w
 22565     09A1  00CA               	movwf	??___fldiv+2
 22566     09A2  0847               	movf	___fldiv@b+3,w
 22567     09A3  00CB               	movwf	??___fldiv+3
 22568     09A4  3001               	movlw	1
 22569     09A5  00CC               	movwf	??___fldiv+4
 22570     09A6                     u381_25:
 22571     09A6  37CB               	asrf	??___fldiv+3,f
 22572     09A7  0CCA               	rrf	??___fldiv+2,f
 22573     09A8  0CC9               	rrf	??___fldiv+1,f
 22574     09A9  0CC8               	rrf	??___fldiv,f
 22575     09AA                     u381_20:
 22576     09AA  0BCC               	decfsz	??___fldiv+4,f
 22577     09AB  29A6               	goto	u381_25
 22578     09AC  084B               	movf	??___fldiv+3,w
 22579     09AD  00C7               	movwf	___fldiv@b+3
 22580     09AE  084A               	movf	??___fldiv+2,w
 22581     09AF  00C6               	movwf	___fldiv@b+2
 22582     09B0  0849               	movf	??___fldiv+1,w
 22583     09B1  00C5               	movwf	___fldiv@b+1
 22584     09B2  0848               	movf	??___fldiv,w
 22585     09B3  00C4               	movwf	___fldiv@b
 22586     09B4                     i1l4643:
 22587     09B4  3001               	movlw	1
 22588     09B5  07D2               	addwf	___fldiv@new_exp,f
 22589     09B6  3000               	movlw	0
 22590     09B7  3DD3               	addwfc	___fldiv@new_exp+1,f
 22591     09B8                     i1l4645:
 22592     09B8  0853               	movf	___fldiv@new_exp+1,w
 22593     09B9  3A80               	xorlw	128
 22594     09BA  00C8               	movwf	??___fldiv
 22595     09BB  3080               	movlw	128
 22596     09BC  0248               	subwf	??___fldiv,w
 22597     09BD  1D03               	skipz
 22598     09BE  29C1               	goto	u382_25
 22599     09BF  30FF               	movlw	255
 22600     09C0  0252               	subwf	___fldiv@new_exp,w
 22601     09C1                     u382_25:
 22602     09C1  1C03               	skipc
 22603     09C2  29C4               	goto	u382_21
 22604     09C3  29C5               	goto	u382_20
 22605     09C4                     u382_21:
 22606     09C4  29D2               	goto	i1l1650
 22607     09C5                     u382_20:
 22608     09C5                     i1l4647:
 22609     09C5  30FF               	movlw	255
 22610     09C6  0020               	movlb	0	; select bank0
 22611     09C7  00D2               	movwf	___fldiv@new_exp
 22612     09C8  3000               	movlw	0
 22613     09C9  00D3               	movwf	___fldiv@new_exp+1
 22614     09CA  3000               	movlw	0
 22615     09CB  00C7               	movwf	___fldiv@b+3
 22616     09CC  3000               	movlw	0
 22617     09CD  00C6               	movwf	___fldiv@b+2
 22618     09CE  3000               	movlw	0
 22619     09CF  00C5               	movwf	___fldiv@b+1
 22620     09D0  3000               	movlw	0
 22621     09D1  00C4               	movwf	___fldiv@b
 22622     09D2                     i1l1650:
 22623     09D2  0020               	movlb	0	; select bank0
 22624     09D3  0853               	movf	___fldiv@new_exp+1,w
 22625     09D4  3A80               	xorlw	128
 22626     09D5  00C8               	movwf	??___fldiv
 22627     09D6  3080               	movlw	128
 22628     09D7  0248               	subwf	??___fldiv,w
 22629     09D8  1D03               	skipz
 22630     09D9  29DC               	goto	u383_25
 22631     09DA  3001               	movlw	1
 22632     09DB  0252               	subwf	___fldiv@new_exp,w
 22633     09DC                     u383_25:
 22634     09DC  1803               	skipnc
 22635     09DD  29DF               	goto	u383_21
 22636     09DE  29E0               	goto	u383_20
 22637     09DF                     u383_21:
 22638     09DF  29EC               	goto	i1l1651
 22639     09E0                     u383_20:
 22640     09E0                     i1l4649:
 22641     09E0  0020               	movlb	0	; select bank0
 22642     09E1  01D2               	clrf	___fldiv@new_exp
 22643     09E2  01D3               	clrf	___fldiv@new_exp+1
 22644     09E3                     i1l4651:
 22645     09E3  3000               	movlw	0
 22646     09E4  00C7               	movwf	___fldiv@b+3
 22647     09E5  3000               	movlw	0
 22648     09E6  00C6               	movwf	___fldiv@b+2
 22649     09E7  3000               	movlw	0
 22650     09E8  00C5               	movwf	___fldiv@b+1
 22651     09E9  3000               	movlw	0
 22652     09EA  00C4               	movwf	___fldiv@b
 22653     09EB                     i1l4653:
 22654     09EB  01D1               	clrf	___fldiv@sign
 22655     09EC                     i1l1651:
 22656     09EC  0020               	movlb	0	; select bank0
 22657     09ED  0852               	movf	___fldiv@new_exp,w
 22658     09EE  00D8               	movwf	___fldiv@bexp
 22659     09EF                     i1l4655:
 22660     09EF  1C58               	btfss	___fldiv@bexp,0
 22661     09F0  29F2               	goto	u384_21
 22662     09F1  29F3               	goto	u384_20
 22663     09F2                     u384_21:
 22664     09F2  29F5               	goto	i1l4659
 22665     09F3                     u384_20:
 22666     09F3                     i1l4657:
 22667     09F3  17C6               	bsf	___fldiv@b+2,7
 22668     09F4  29F9               	goto	i1l1653
 22669     09F5                     i1l4659:
 22670     09F5  307F               	movlw	127
 22671     09F6  00C8               	movwf	??___fldiv
 22672     09F7  0848               	movf	??___fldiv,w
 22673     09F8  05C6               	andwf	___fldiv@b+2,f
 22674     09F9                     i1l1653:
 22675     09F9  3658               	lsrf	___fldiv@bexp,w
 22676     09FA  00C7               	movwf	___fldiv@b+3
 22677     09FB  0851               	movf	___fldiv@sign,w
 22678     09FC  00C8               	movwf	??___fldiv
 22679     09FD  0848               	movf	??___fldiv,w
 22680     09FE  04C7               	iorwf	___fldiv@b+3,f
 22681     09FF  28C0               	goto	i1l4569
 22682     0A00                     i1l1631:
 22683     0A00  0008               	return
 22684     0A01                     __end_of___fldiv:
 22685                           
 22686                           	psect	text103
 22687     1E30                     __ptext103:	
 22688 ;; *************** function _LCD_Write_String *****************
 22689 ;; Defined at:
 22690 ;;		line 90 in file "I2C_LCD.c"
 22691 ;; Parameters:    Size  Location     Type
 22692 ;;  Str             2    6[COMMON] PTR unsigned char 
 22693 ;;		 -> STR_7(13), TMR0_Custom_ISR@buffer(16), STR_5(14), STR_4(9), 
 22694 ;;		 -> UART_Custom_ISR@buffer(16), STR_2(14), STR_1(9), 
 22695 ;; Auto vars:     Size  Location     Type
 22696 ;;  i               2    9[COMMON] int 
 22697 ;; Return value:  Size  Location     Type
 22698 ;;                  1    wreg      void 
 22699 ;; Registers used:
 22700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22701 ;; Tracked objects:
 22702 ;;		On entry : 0/0
 22703 ;;		On exit  : 0/0
 22704 ;;		Unchanged: 0/0
 22705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22706 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22708 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22709 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22710 ;;Total ram usage:        5 bytes
 22711 ;; Hardware stack levels used: 1
 22712 ;; Hardware stack levels required when called: 5
 22713 ;; This function calls:
 22714 ;;		_LCD_Write_Char
 22715 ;; This function is called by:
 22716 ;;		_UART_Custom_ISR
 22717 ;;		_TMR0_Custom_ISR
 22718 ;; This function uses a non-reentrant model
 22719 ;;
 22720                           
 22721     1E30                     _LCD_Write_String:	
 22722                           ;psect for function _LCD_Write_String
 22723                           
 22724     1E30                     i1l5379:	
 22725                           ;incstack = 0
 22726                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22727                           
 22728                           
 22729                           ;I2C_LCD.c: 90: void LCD_Write_String(char* Str);I2C_LCD.c: 91: {;I2C_LCD.c: 92:   for(i
      +                          nt i=0; Str[i]!='\0'; i++)
 22730     1E30  01F9               	clrf	LCD_Write_String@i
 22731     1E31  01FA               	clrf	LCD_Write_String@i+1
 22732     1E32  2E41               	goto	i1l5385
 22733     1E33                     i1l5381:
 22734                           
 22735                           ;I2C_LCD.c: 93:     LCD_Write_Char(Str[i]);
 22736     1E33  0876               	movf	LCD_Write_String@Str,w
 22737     1E34  0779               	addwf	LCD_Write_String@i,w
 22738     1E35  0084               	movwf	4
 22739     1E36  0877               	movf	LCD_Write_String@Str+1,w
 22740     1E37  3D7A               	addwfc	LCD_Write_String@i+1,w
 22741     1E38  0085               	movwf	5
 22742     1E39  0800               	movf	0,w	;code access
 22743     1E3A  319D  256B  319E   	fcall	_LCD_Write_Char
 22744     1E3D                     i1l5383:
 22745     1E3D  3001               	movlw	1
 22746     1E3E  07F9               	addwf	LCD_Write_String@i,f
 22747     1E3F  3000               	movlw	0
 22748     1E40  3DFA               	addwfc	LCD_Write_String@i+1,f
 22749     1E41                     i1l5385:
 22750     1E41  0876               	movf	LCD_Write_String@Str,w
 22751     1E42  0779               	addwf	LCD_Write_String@i,w
 22752     1E43  0084               	movwf	4
 22753     1E44  0877               	movf	LCD_Write_String@Str+1,w
 22754     1E45  3D7A               	addwfc	LCD_Write_String@i+1,w
 22755     1E46  0085               	movwf	5
 22756     1E47  0012               	moviw fsr0++
 22757     1E48  1D03               	btfss	3,2
 22758     1E49  2E4B               	goto	u487_21
 22759     1E4A  2E4C               	goto	u487_20
 22760     1E4B                     u487_21:
 22761     1E4B  2E33               	goto	i1l5381
 22762     1E4C                     u487_20:
 22763     1E4C                     i1l1063:
 22764     1E4C  0008               	return
 22765     1E4D                     __end_of_LCD_Write_String:
 22766                           
 22767                           	psect	text104
 22768     1D6B                     __ptext104:	
 22769 ;; *************** function _LCD_Write_Char *****************
 22770 ;; Defined at:
 22771 ;;		line 84 in file "I2C_LCD.c"
 22772 ;; Parameters:    Size  Location     Type
 22773 ;;  Data            1    wreg     unsigned char 
 22774 ;; Auto vars:     Size  Location     Type
 22775 ;;  Data            1    5[COMMON] unsigned char 
 22776 ;; Return value:  Size  Location     Type
 22777 ;;                  1    wreg      void 
 22778 ;; Registers used:
 22779 ;;		wreg, status,2, status,0, pclath, cstack
 22780 ;; Tracked objects:
 22781 ;;		On entry : 0/0
 22782 ;;		On exit  : 0/0
 22783 ;;		Unchanged: 0/0
 22784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22789 ;;Total ram usage:        2 bytes
 22790 ;; Hardware stack levels used: 1
 22791 ;; Hardware stack levels required when called: 4
 22792 ;; This function calls:
 22793 ;;		i1_LCD_Write_4Bit
 22794 ;; This function is called by:
 22795 ;;		_LCD_Write_String
 22796 ;; This function uses a non-reentrant model
 22797 ;;
 22798                           
 22799     1D6B                     _LCD_Write_Char:	
 22800                           ;psect for function _LCD_Write_Char
 22801                           
 22802                           
 22803                           ;incstack = 0
 22804                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 22805                           ;LCD_Write_Char@Data stored from wreg
 22806     1D6B  00F5               	movwf	LCD_Write_Char@Data
 22807     1D6C                     i1l5307:
 22808                           
 22809                           ;I2C_LCD.c: 84: void LCD_Write_Char(char Data);I2C_LCD.c: 85: {;I2C_LCD.c: 86:   RS = 1;
 22810     1D6C  0022               	movlb	2	; select bank2
 22811     1D6D  01E7               	clrf	_RS^(0+256)
 22812     1D6E  0AE7               	incf	_RS^(0+256),f
 22813     1D6F                     i1l5309:
 22814                           
 22815                           ;I2C_LCD.c: 87:   LCD_Write_4Bit(Data & 0xF0);
 22816     1D6F  0875               	movf	LCD_Write_Char@Data,w
 22817     1D70  39F0               	andlw	240
 22818     1D71  319C  24ED  319D   	fcall	i1_LCD_Write_4Bit
 22819                           
 22820                           ;I2C_LCD.c: 88:   LCD_Write_4Bit((Data << 4) & 0xF0);
 22821     1D74  0875               	movf	LCD_Write_Char@Data,w
 22822     1D75  00F4               	movwf	??_LCD_Write_Char
 22823     1D76  3003               	movlw	3
 22824     1D77                     u483_25:
 22825     1D77  35F4               	lslf	??_LCD_Write_Char,f
 22826     1D78  3EFF               	addlw	-1
 22827     1D79  1D03               	skipz
 22828     1D7A  2D77               	goto	u483_25
 22829     1D7B  3574               	lslf	??_LCD_Write_Char,w
 22830     1D7C  39F0               	andlw	240
 22831     1D7D  319C  24ED  319D   	fcall	i1_LCD_Write_4Bit
 22832     1D80                     i1l1057:
 22833     1D80  0008               	return
 22834     1D81                     __end_of_LCD_Write_Char:
 22835                           
 22836                           	psect	text105
 22837     1F7E                     __ptext105:	
 22838 ;; *************** function _LCD_Set_Cursor *****************
 22839 ;; Defined at:
 22840 ;;		line 95 in file "I2C_LCD.c"
 22841 ;; Parameters:    Size  Location     Type
 22842 ;;  ROW             1    wreg     unsigned char 
 22843 ;;  COL             1    6[COMMON] unsigned char 
 22844 ;; Auto vars:     Size  Location     Type
 22845 ;;  ROW             1    7[COMMON] unsigned char 
 22846 ;; Return value:  Size  Location     Type
 22847 ;;                  1    wreg      void 
 22848 ;; Registers used:
 22849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22850 ;; Tracked objects:
 22851 ;;		On entry : 0/0
 22852 ;;		On exit  : 0/0
 22853 ;;		Unchanged: 0/0
 22854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22855 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22859 ;;Total ram usage:        2 bytes
 22860 ;; Hardware stack levels used: 1
 22861 ;; Hardware stack levels required when called: 5
 22862 ;; This function calls:
 22863 ;;		i1_LCD_CMD
 22864 ;; This function is called by:
 22865 ;;		_UART_Custom_ISR
 22866 ;;		_TMR0_Custom_ISR
 22867 ;; This function uses a non-reentrant model
 22868 ;;
 22869                           
 22870     1F7E                     _LCD_Set_Cursor:	
 22871                           ;psect for function _LCD_Set_Cursor
 22872                           
 22873                           
 22874                           ;incstack = 0
 22875                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22876                           ;LCD_Set_Cursor@ROW stored from wreg
 22877     1F7E  00F7               	movwf	LCD_Set_Cursor@ROW
 22878     1F7F                     i1l5387:
 22879                           
 22880                           ;I2C_LCD.c: 95: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 96:
      +                           {;I2C_LCD.c: 97:   switch(ROW)
 22881     1F7F  2F98               	goto	i1l5397
 22882     1F80                     i1l5389:
 22883                           
 22884                           ;I2C_LCD.c: 100:       LCD_CMD(0xC0 + COL-1);
 22885     1F80  0876               	movf	LCD_Set_Cursor@COL,w
 22886     1F81  3EBF               	addlw	191
 22887     1F82  319D  2502  319F   	fcall	i1_LCD_CMD
 22888                           
 22889                           ;I2C_LCD.c: 101:       break;
 22890     1F85  2FA3               	goto	i1l1072
 22891     1F86                     i1l5391:
 22892                           
 22893                           ;I2C_LCD.c: 103:       LCD_CMD(0x94 + COL-1);
 22894     1F86  0876               	movf	LCD_Set_Cursor@COL,w
 22895     1F87  3E93               	addlw	147
 22896     1F88  319D  2502  319F   	fcall	i1_LCD_CMD
 22897                           
 22898                           ;I2C_LCD.c: 104:       break;
 22899     1F8B  2FA3               	goto	i1l1072
 22900     1F8C                     i1l5393:
 22901                           
 22902                           ;I2C_LCD.c: 106:       LCD_CMD(0xD4 + COL-1);
 22903     1F8C  0876               	movf	LCD_Set_Cursor@COL,w
 22904     1F8D  3ED3               	addlw	211
 22905     1F8E  319D  2502  319F   	fcall	i1_LCD_CMD
 22906                           
 22907                           ;I2C_LCD.c: 107:       break;
 22908     1F91  2FA3               	goto	i1l1072
 22909     1F92                     i1l5395:
 22910                           
 22911                           ;I2C_LCD.c: 110:       LCD_CMD(0x80 + COL-1);
 22912     1F92  0876               	movf	LCD_Set_Cursor@COL,w
 22913     1F93  3E7F               	addlw	127
 22914     1F94  319D  2502  319F   	fcall	i1_LCD_CMD
 22915                           
 22916                           ;I2C_LCD.c: 111:   }
 22917     1F97  2FA3               	goto	i1l1072
 22918     1F98                     i1l5397:
 22919     1F98  0877               	movf	LCD_Set_Cursor@ROW,w
 22920                           
 22921                           ; Switch size 1, requested type "simple"
 22922                           ; Number of cases is 3, Range of values is 2 to 4
 22923                           ; switch strategies available:
 22924                           ; Name         Instructions Cycles
 22925                           ; simple_byte           10     6 (average)
 22926                           ; direct_byte           15     9 (fixed)
 22927                           ; jumptable            263     9 (fixed)
 22928                           ;	Chosen strategy is simple_byte
 22929     1F99  3A02               	xorlw	2	; case 2
 22930     1F9A  1903               	skipnz
 22931     1F9B  2F80               	goto	i1l5389
 22932     1F9C  3A01               	xorlw	1	; case 3
 22933     1F9D  1903               	skipnz
 22934     1F9E  2F86               	goto	i1l5391
 22935     1F9F  3A07               	xorlw	7	; case 4
 22936     1FA0  1903               	skipnz
 22937     1FA1  2F8C               	goto	i1l5393
 22938     1FA2  2F92               	goto	i1l5395
 22939     1FA3                     i1l1072:
 22940     1FA3  0008               	return
 22941     1FA4                     __end_of_LCD_Set_Cursor:
 22942                           
 22943                           	psect	text106
 22944     1BE4                     __ptext106:	
 22945 ;; *************** function _LCD_Clear *****************
 22946 ;; Defined at:
 22947 ;;		line 133 in file "I2C_LCD.c"
 22948 ;; Parameters:    Size  Location     Type
 22949 ;;		None
 22950 ;; Auto vars:     Size  Location     Type
 22951 ;;		None
 22952 ;; Return value:  Size  Location     Type
 22953 ;;                  1    wreg      void 
 22954 ;; Registers used:
 22955 ;;		wreg, status,2, status,0, pclath, cstack
 22956 ;; Tracked objects:
 22957 ;;		On entry : 0/0
 22958 ;;		On exit  : 0/0
 22959 ;;		Unchanged: 0/0
 22960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22965 ;;Total ram usage:        0 bytes
 22966 ;; Hardware stack levels used: 1
 22967 ;; Hardware stack levels required when called: 5
 22968 ;; This function calls:
 22969 ;;		i1_LCD_CMD
 22970 ;; This function is called by:
 22971 ;;		_UART_Custom_ISR
 22972 ;;		_TMR0_Custom_ISR
 22973 ;; This function uses a non-reentrant model
 22974 ;;
 22975                           
 22976     1BE4                     _LCD_Clear:	
 22977                           ;psect for function _LCD_Clear
 22978                           
 22979     1BE4                     i1l5403:	
 22980                           ;incstack = 0
 22981                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 22982                           
 22983                           
 22984                           ;I2C_LCD.c: 135:   LCD_CMD(0x01);
 22985     1BE4  3001               	movlw	1
 22986     1BE5  319D  2502  319B   	fcall	i1_LCD_CMD
 22987     1BE8                     i1l5405:
 22988                           
 22989                           ;I2C_LCD.c: 136:   _delay((unsigned long)((40)*(4000000/4000000.0)));
 22990     1BE8  300D               	movlw	13
 22991     1BE9                     u593_27:
 22992     1BE9  0B89               	decfsz	9,f
 22993     1BEA  2BE9               	goto	u593_27
 22994     1BEB  0000               	nop
 22995     1BEC                     i1l1087:
 22996     1BEC  0008               	return
 22997     1BED                     __end_of_LCD_Clear:
 22998                           
 22999                           	psect	text107
 23000     1D02                     __ptext107:	
 23001 ;; *************** function i1_LCD_CMD *****************
 23002 ;; Defined at:
 23003 ;;		line 78 in file "I2C_LCD.c"
 23004 ;; Parameters:    Size  Location     Type
 23005 ;;  CMD             1    wreg     unsigned char 
 23006 ;; Auto vars:     Size  Location     Type
 23007 ;;  CMD             1    5[COMMON] unsigned char 
 23008 ;; Return value:  Size  Location     Type
 23009 ;;                  1    wreg      void 
 23010 ;; Registers used:
 23011 ;;		wreg, status,2, status,0, pclath, cstack
 23012 ;; Tracked objects:
 23013 ;;		On entry : 0/0
 23014 ;;		On exit  : 0/0
 23015 ;;		Unchanged: 0/0
 23016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23019 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23021 ;;Total ram usage:        2 bytes
 23022 ;; Hardware stack levels used: 1
 23023 ;; Hardware stack levels required when called: 4
 23024 ;; This function calls:
 23025 ;;		i1_LCD_Write_4Bit
 23026 ;; This function is called by:
 23027 ;;		_LCD_Set_Cursor
 23028 ;;		_LCD_Clear
 23029 ;; This function uses a non-reentrant model
 23030 ;;
 23031                           
 23032     1D02                     i1_LCD_CMD:	
 23033                           ;psect for function i1_LCD_CMD
 23034                           
 23035                           
 23036                           ;incstack = 0
 23037                           ; Regs used in i1_LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
 23038                           ;i1LCD_CMD@CMD stored from wreg
 23039     1D02  00F5               	movwf	i1LCD_CMD@CMD
 23040     1D03                     i1l5321:
 23041                           
 23042                           ;I2C_LCD.c: 78: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 79: {;I2C_LCD.c: 80:   RS = 0
      +                          ;
 23043     1D03  0022               	movlb	2	; select bank2
 23044     1D04  01E7               	clrf	_RS^(0+256)
 23045     1D05                     i1l5323:
 23046                           
 23047                           ;I2C_LCD.c: 81:   LCD_Write_4Bit(CMD & 0xF0);
 23048     1D05  0875               	movf	i1LCD_CMD@CMD,w
 23049     1D06  39F0               	andlw	240
 23050     1D07  319C  24ED  319D   	fcall	i1_LCD_Write_4Bit
 23051     1D0A                     i1l5325:
 23052                           
 23053                           ;I2C_LCD.c: 82:   LCD_Write_4Bit((CMD << 4) & 0xF0);
 23054     1D0A  0875               	movf	i1LCD_CMD@CMD,w
 23055     1D0B  00F4               	movwf	??i1_LCD_CMD
 23056     1D0C  3003               	movlw	3
 23057     1D0D                     u485_25:
 23058     1D0D  35F4               	lslf	??i1_LCD_CMD,f
 23059     1D0E  3EFF               	addlw	-1
 23060     1D0F  1D03               	skipz
 23061     1D10  2D0D               	goto	u485_25
 23062     1D11  3574               	lslf	??i1_LCD_CMD,w
 23063     1D12  39F0               	andlw	240
 23064     1D13  319C  24ED  319D   	fcall	i1_LCD_Write_4Bit
 23065     1D16                     i1l1054:
 23066     1D16  0008               	return
 23067     1D17                     __end_ofi1_LCD_CMD:
 23068                           
 23069                           	psect	text108
 23070     1CED                     __ptext108:	
 23071 ;; *************** function i1_LCD_Write_4Bit *****************
 23072 ;; Defined at:
 23073 ;;		line 70 in file "I2C_LCD.c"
 23074 ;; Parameters:    Size  Location     Type
 23075 ;;  Nibble          1    wreg     unsigned char 
 23076 ;; Auto vars:     Size  Location     Type
 23077 ;;  Nibble          1    3[COMMON] unsigned char 
 23078 ;; Return value:  Size  Location     Type
 23079 ;;                  1    wreg      void 
 23080 ;; Registers used:
 23081 ;;		wreg, status,2, status,0, pclath, cstack
 23082 ;; Tracked objects:
 23083 ;;		On entry : 0/0
 23084 ;;		On exit  : 0/0
 23085 ;;		Unchanged: 0/0
 23086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23091 ;;Total ram usage:        2 bytes
 23092 ;; Hardware stack levels used: 1
 23093 ;; Hardware stack levels required when called: 3
 23094 ;; This function calls:
 23095 ;;		i1_IO_Expander_Write
 23096 ;; This function is called by:
 23097 ;;		_LCD_Write_Char
 23098 ;;		i1_LCD_CMD
 23099 ;; This function uses a non-reentrant model
 23100 ;;
 23101                           
 23102     1CED                     i1_LCD_Write_4Bit:	
 23103                           ;psect for function i1_LCD_Write_4Bit
 23104                           
 23105                           
 23106                           ;incstack = 0
 23107                           ; Regs used in i1_LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
 23108                           ;i1LCD_Write_4Bit@Nibble stored from wreg
 23109     1CED  00F3               	movwf	i1LCD_Write_4Bit@Nibble
 23110     1CEE                     i1l5271:
 23111                           
 23112                           ;I2C_LCD.c: 70: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 71: {;I2C_LCD.c: 73
      +                          :   Nibble |= RS;
 23113     1CEE  0022               	movlb	2	; select bank2
 23114     1CEF  0867               	movf	_RS^(0+256),w
 23115     1CF0  00F2               	movwf	??i1_LCD_Write_4Bit
 23116     1CF1  0872               	movf	??i1_LCD_Write_4Bit,w
 23117     1CF2  04F3               	iorwf	i1LCD_Write_4Bit@Nibble,f
 23118     1CF3                     i1l5273:
 23119                           
 23120                           ;I2C_LCD.c: 74:   IO_Expander_Write(Nibble | 0x04);
 23121     1CF3  0873               	movf	i1LCD_Write_4Bit@Nibble,w
 23122     1CF4  3804               	iorlw	4
 23123     1CF5  319C  24B2  319C   	fcall	i1_IO_Expander_Write
 23124     1CF8                     i1l5275:
 23125                           
 23126                           ;I2C_LCD.c: 75:   IO_Expander_Write(Nibble & 0xFB);
 23127     1CF8  0873               	movf	i1LCD_Write_4Bit@Nibble,w
 23128     1CF9  39FB               	andlw	251
 23129     1CFA  319C  24B2  319C   	fcall	i1_IO_Expander_Write
 23130                           
 23131                           ;I2C_LCD.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 23132     1CFD  3010               	movlw	16
 23133     1CFE                     u594_27:
 23134     1CFE  0B89               	decfsz	9,f
 23135     1CFF  2CFE               	goto	u594_27
 23136     1D00  3200               	nop2
 23137     1D01                     i1l1051:
 23138     1D01  0008               	return
 23139     1D02                     __end_ofi1_LCD_Write_4Bit:
 23140                           
 23141                           	psect	text109
 23142     1BC4                     __ptext109:	
 23143 ;; *************** function _Backlight *****************
 23144 ;; Defined at:
 23145 ;;		line 113 in file "I2C_LCD.c"
 23146 ;; Parameters:    Size  Location     Type
 23147 ;;		None
 23148 ;; Auto vars:     Size  Location     Type
 23149 ;;		None
 23150 ;; Return value:  Size  Location     Type
 23151 ;;                  1    wreg      void 
 23152 ;; Registers used:
 23153 ;;		wreg, status,2, status,0, pclath, cstack
 23154 ;; Tracked objects:
 23155 ;;		On entry : 0/0
 23156 ;;		On exit  : 0/0
 23157 ;;		Unchanged: 0/0
 23158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23163 ;;Total ram usage:        0 bytes
 23164 ;; Hardware stack levels used: 1
 23165 ;; Hardware stack levels required when called: 3
 23166 ;; This function calls:
 23167 ;;		i1_IO_Expander_Write
 23168 ;; This function is called by:
 23169 ;;		_UART_Custom_ISR
 23170 ;;		_TMR0_Custom_ISR
 23171 ;; This function uses a non-reentrant model
 23172 ;;
 23173                           
 23174     1BC4                     _Backlight:	
 23175                           ;psect for function _Backlight
 23176                           
 23177     1BC4                     i1l5399:	
 23178                           ;incstack = 0
 23179                           ; Regs used in _Backlight: [wreg+status,2+status,0+pclath+cstack]
 23180                           
 23181                           
 23182                           ;I2C_LCD.c: 115:   BackLight_State = 0x08;
 23183     1BC4  3008               	movlw	8
 23184     1BC5  0022               	movlb	2	; select bank2
 23185     1BC6  00EC               	movwf	_BackLight_State^(0+256)
 23186     1BC7                     i1l5401:
 23187                           
 23188                           ;I2C_LCD.c: 116:   IO_Expander_Write(0);
 23189     1BC7  3000               	movlw	0
 23190     1BC8  319C  24B2  319B   	fcall	i1_IO_Expander_Write
 23191     1BCB                     i1l1075:
 23192     1BCB  0008               	return
 23193     1BCC                     __end_of_Backlight:
 23194                           
 23195                           	psect	text110
 23196     1CB2                     __ptext110:	
 23197 ;; *************** function i1_IO_Expander_Write *****************
 23198 ;; Defined at:
 23199 ;;		line 63 in file "I2C_LCD.c"
 23200 ;; Parameters:    Size  Location     Type
 23201 ;;  Data            1    wreg     unsigned char 
 23202 ;; Auto vars:     Size  Location     Type
 23203 ;;  Data            1    1[COMMON] unsigned char 
 23204 ;; Return value:  Size  Location     Type
 23205 ;;                  1    wreg      void 
 23206 ;; Registers used:
 23207 ;;		wreg, status,2, status,0, pclath, cstack
 23208 ;; Tracked objects:
 23209 ;;		On entry : 0/0
 23210 ;;		On exit  : 0/0
 23211 ;;		Unchanged: 0/0
 23212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23214 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23216 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23217 ;;Total ram usage:        1 bytes
 23218 ;; Hardware stack levels used: 1
 23219 ;; Hardware stack levels required when called: 2
 23220 ;; This function calls:
 23221 ;;		i1_I2C_Master_Start
 23222 ;;		i1_I2C_Master_Stop
 23223 ;;		i1_I2C_Master_Write
 23224 ;; This function is called by:
 23225 ;;		_Backlight
 23226 ;;		i1_LCD_Write_4Bit
 23227 ;; This function uses a non-reentrant model
 23228 ;;
 23229                           
 23230     1CB2                     i1_IO_Expander_Write:	
 23231                           ;psect for function i1_IO_Expander_Write
 23232                           
 23233                           
 23234                           ;incstack = 0
 23235                           ; Regs used in i1_IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
 23236                           ;i1IO_Expander_Write@Data stored from wreg
 23237     1CB2  00F1               	movwf	i1IO_Expander_Write@Data
 23238     1CB3                     i1l5163:
 23239                           
 23240                           ;I2C_LCD.c: 63: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 64: {;I2C_LCD.c: 6
      +                          5:   I2C_Master_Start();
 23241     1CB3  319B  2373  319C   	fcall	i1_I2C_Master_Start
 23242                           
 23243                           ;I2C_LCD.c: 66:   I2C_Master_Write(i2c_add);
 23244     1CB6  0022               	movlb	2	; select bank2
 23245     1CB7  0866               	movf	_i2c_add^(0+256),w
 23246     1CB8  319C  2490  319C   	fcall	i1_I2C_Master_Write
 23247                           
 23248                           ;I2C_LCD.c: 67:   I2C_Master_Write(Data | BackLight_State);
 23249     1CBB  0871               	movf	i1IO_Expander_Write@Data,w
 23250     1CBC  0022               	movlb	2	; select bank2
 23251     1CBD  046C               	iorwf	_BackLight_State^(0+256),w
 23252     1CBE  319C  2490  319C   	fcall	i1_I2C_Master_Write
 23253                           
 23254                           ;I2C_LCD.c: 68:   I2C_Master_Stop();
 23255     1CC1  319B  2379  319C   	fcall	i1_I2C_Master_Stop
 23256     1CC4                     i1l1048:
 23257     1CC4  0008               	return
 23258     1CC5                     __end_ofi1_IO_Expander_Write:
 23259                           
 23260                           	psect	text111
 23261     1C90                     __ptext111:	
 23262 ;; *************** function i1_I2C_Master_Write *****************
 23263 ;; Defined at:
 23264 ;;		line 29 in file "I2C_LCD.c"
 23265 ;; Parameters:    Size  Location     Type
 23266 ;;  data            1    wreg     unsigned char 
 23267 ;; Auto vars:     Size  Location     Type
 23268 ;;  data            1    0[COMMON] unsigned char 
 23269 ;; Return value:  Size  Location     Type
 23270 ;;                  1    wreg      unsigned char 
 23271 ;; Registers used:
 23272 ;;		wreg, status,2, status,0, pclath, cstack
 23273 ;; Tracked objects:
 23274 ;;		On entry : 0/0
 23275 ;;		On exit  : 0/0
 23276 ;;		Unchanged: 0/0
 23277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23281 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23282 ;;Total ram usage:        1 bytes
 23283 ;; Hardware stack levels used: 1
 23284 ;; Hardware stack levels required when called: 1
 23285 ;; This function calls:
 23286 ;;		i1_I2C_Master_Wait
 23287 ;; This function is called by:
 23288 ;;		i1_IO_Expander_Write
 23289 ;; This function uses a non-reentrant model
 23290 ;;
 23291                           
 23292     1C90                     i1_I2C_Master_Write:	
 23293                           ;psect for function i1_I2C_Master_Write
 23294                           
 23295                           
 23296                           ;incstack = 0
 23297                           ; Regs used in i1_I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 23298                           ;i1I2C_Master_Write@data stored from wreg
 23299     1C90  00F0               	movwf	i1I2C_Master_Write@data
 23300     1C91                     i1l4899:
 23301                           
 23302                           ;I2C_LCD.c: 29: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 30: {;I2C_
      +                          LCD.c: 31:   I2C_Master_Wait();
 23303     1C91  319C  242A  319C   	fcall	i1_I2C_Master_Wait
 23304     1C94                     i1l4901:
 23305                           
 23306                           ;I2C_LCD.c: 32:   SSP1BUF = data;
 23307     1C94  0870               	movf	i1I2C_Master_Write@data,w
 23308     1C95  0024               	movlb	4	; select bank4
 23309     1C96  0091               	movwf	17	;volatile
 23310     1C97                     i1l1039:	
 23311                           ;I2C_LCD.c: 33:   while(!PIR1bits.SSP1IF);
 23312                           
 23313     1C97  0020               	movlb	0	; select bank0
 23314     1C98  1D90               	btfss	16,3	;volatile
 23315     1C99  2C9B               	goto	u435_21
 23316     1C9A  2C9C               	goto	u435_20
 23317     1C9B                     u435_21:
 23318     1C9B  2C97               	goto	i1l1039
 23319     1C9C                     u435_20:
 23320     1C9C                     i1l1041:
 23321                           
 23322                           ;I2C_LCD.c: 34:   PIR1bits.SSP1IF = 0;
 23323     1C9C  1190               	bcf	16,3	;volatile
 23324     1C9D                     i1l4903:
 23325                           
 23326                           ;I2C_LCD.c: 35:   return SSP1CON2bits.ACKSTAT;;	Return value of i1_I2C_Master_Write is n
      +                          ever used
 23327     1C9D  0024               	movlb	4	; select bank4
 23328     1C9E  0816               	movf	22,w	;volatile
 23329     1C9F                     i1l1042:
 23330     1C9F  0008               	return
 23331     1CA0                     __end_ofi1_I2C_Master_Write:
 23332                           
 23333                           	psect	text112
 23334     1B79                     __ptext112:	
 23335 ;; *************** function i1_I2C_Master_Stop *****************
 23336 ;; Defined at:
 23337 ;;		line 24 in file "I2C_LCD.c"
 23338 ;; Parameters:    Size  Location     Type
 23339 ;;		None
 23340 ;; Auto vars:     Size  Location     Type
 23341 ;;		None
 23342 ;; Return value:  Size  Location     Type
 23343 ;;                  1    wreg      void 
 23344 ;; Registers used:
 23345 ;;		wreg, status,2, status,0, pclath, cstack
 23346 ;; Tracked objects:
 23347 ;;		On entry : 0/0
 23348 ;;		On exit  : 0/0
 23349 ;;		Unchanged: 0/0
 23350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23355 ;;Total ram usage:        0 bytes
 23356 ;; Hardware stack levels used: 1
 23357 ;; Hardware stack levels required when called: 1
 23358 ;; This function calls:
 23359 ;;		i1_I2C_Master_Wait
 23360 ;; This function is called by:
 23361 ;;		i1_IO_Expander_Write
 23362 ;; This function uses a non-reentrant model
 23363 ;;
 23364                           
 23365     1B79                     i1_I2C_Master_Stop:	
 23366                           ;psect for function i1_I2C_Master_Stop
 23367                           
 23368     1B79                     i1l4895:	
 23369                           ;incstack = 0
 23370                           ; Regs used in i1_I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 23371                           
 23372                           
 23373                           ;I2C_LCD.c: 26:   I2C_Master_Wait();
 23374     1B79  319C  242A  319B   	fcall	i1_I2C_Master_Wait
 23375     1B7C                     i1l4897:
 23376                           
 23377                           ;I2C_LCD.c: 27:   SSP1CON2bits.PEN = 1;
 23378     1B7C  0024               	movlb	4	; select bank4
 23379     1B7D  1516               	bsf	22,2	;volatile
 23380     1B7E                     i1l1036:
 23381     1B7E  0008               	return
 23382     1B7F                     __end_ofi1_I2C_Master_Stop:
 23383                           
 23384                           	psect	text113
 23385     1B73                     __ptext113:	
 23386 ;; *************** function i1_I2C_Master_Start *****************
 23387 ;; Defined at:
 23388 ;;		line 19 in file "I2C_LCD.c"
 23389 ;; Parameters:    Size  Location     Type
 23390 ;;		None
 23391 ;; Auto vars:     Size  Location     Type
 23392 ;;		None
 23393 ;; Return value:  Size  Location     Type
 23394 ;;                  1    wreg      void 
 23395 ;; Registers used:
 23396 ;;		wreg, status,2, status,0, pclath, cstack
 23397 ;; Tracked objects:
 23398 ;;		On entry : 0/0
 23399 ;;		On exit  : 0/0
 23400 ;;		Unchanged: 0/0
 23401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23406 ;;Total ram usage:        0 bytes
 23407 ;; Hardware stack levels used: 1
 23408 ;; Hardware stack levels required when called: 1
 23409 ;; This function calls:
 23410 ;;		i1_I2C_Master_Wait
 23411 ;; This function is called by:
 23412 ;;		i1_IO_Expander_Write
 23413 ;; This function uses a non-reentrant model
 23414 ;;
 23415                           
 23416     1B73                     i1_I2C_Master_Start:	
 23417                           ;psect for function i1_I2C_Master_Start
 23418                           
 23419     1B73                     i1l4891:	
 23420                           ;incstack = 0
 23421                           ; Regs used in i1_I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 23422                           
 23423                           
 23424                           ;I2C_LCD.c: 21:   I2C_Master_Wait();
 23425     1B73  319C  242A  319B   	fcall	i1_I2C_Master_Wait
 23426     1B76                     i1l4893:
 23427                           
 23428                           ;I2C_LCD.c: 22:   SSP1CON2bits.SEN = 1;
 23429     1B76  0024               	movlb	4	; select bank4
 23430     1B77  1416               	bsf	22,0	;volatile
 23431     1B78                     i1l1033:
 23432     1B78  0008               	return
 23433     1B79                     __end_ofi1_I2C_Master_Start:
 23434                           
 23435                           	psect	text114
 23436     1C2A                     __ptext114:	
 23437 ;; *************** function i1_I2C_Master_Wait *****************
 23438 ;; Defined at:
 23439 ;;		line 15 in file "I2C_LCD.c"
 23440 ;; Parameters:    Size  Location     Type
 23441 ;;		None
 23442 ;; Auto vars:     Size  Location     Type
 23443 ;;		None
 23444 ;; Return value:  Size  Location     Type
 23445 ;;                  1    wreg      void 
 23446 ;; Registers used:
 23447 ;;		wreg, status,2
 23448 ;; Tracked objects:
 23449 ;;		On entry : 0/0
 23450 ;;		On exit  : 0/0
 23451 ;;		Unchanged: 0/0
 23452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23457 ;;Total ram usage:        0 bytes
 23458 ;; Hardware stack levels used: 1
 23459 ;; This function calls:
 23460 ;;		Nothing
 23461 ;; This function is called by:
 23462 ;;		i1_I2C_Master_Start
 23463 ;;		i1_I2C_Master_Stop
 23464 ;;		i1_I2C_Master_Write
 23465 ;; This function uses a non-reentrant model
 23466 ;;
 23467                           
 23468     1C2A                     i1_I2C_Master_Wait:	
 23469                           ;psect for function i1_I2C_Master_Wait
 23470                           
 23471     1C2A                     i1l4425:	
 23472                           ;incstack = 0
 23473                           ; Regs used in i1_I2C_Master_Wait: [wreg+status,2]
 23474                           
 23475     1C2A                     i1l1027:	
 23476                           ;I2C_LCD.c: 17:   while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 23477                           
 23478     1C2A  0024               	movlb	4	; select bank4
 23479     1C2B  1914               	btfsc	20,2	;volatile
 23480     1C2C  2C2E               	goto	u331_21
 23481     1C2D  2C2F               	goto	u331_20
 23482     1C2E                     u331_21:
 23483     1C2E  2C2A               	goto	i1l1027
 23484     1C2F                     u331_20:
 23485     1C2F                     i1l4427:
 23486     1C2F  0816               	movf	22,w	;volatile
 23487     1C30  391F               	andlw	31
 23488     1C31  1D03               	btfss	3,2
 23489     1C32  2C34               	goto	u332_21
 23490     1C33  2C35               	goto	u332_20
 23491     1C34                     u332_21:
 23492     1C34  2C2A               	goto	i1l1027
 23493     1C35                     u332_20:
 23494     1C35                     i1l1030:
 23495     1C35  0008               	return
 23496     1C36                     __end_ofi1_I2C_Master_Wait:
 23497                           
 23498                           	psect	text115
 23499     1B41                     __ptext115:	
 23500 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 23501 ;; Defined at:
 23502 ;;		line 323 in file "mcc_generated_files/uart/src/eusart.c"
 23503 ;; Parameters:    Size  Location     Type
 23504 ;;		None
 23505 ;; Auto vars:     Size  Location     Type
 23506 ;;		None
 23507 ;; Return value:  Size  Location     Type
 23508 ;;                  1    wreg      void 
 23509 ;; Registers used:
 23510 ;;		None
 23511 ;; Tracked objects:
 23512 ;;		On entry : 0/0
 23513 ;;		On exit  : 0/0
 23514 ;;		Unchanged: 0/0
 23515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23520 ;;Total ram usage:        0 bytes
 23521 ;; Hardware stack levels used: 1
 23522 ;; This function calls:
 23523 ;;		Nothing
 23524 ;; This function is called by:
 23525 ;;		_EUSART_Initialize
 23526 ;;		_EUSART_ReceiveISR
 23527 ;; This function uses a non-reentrant model
 23528 ;;
 23529                           
 23530     1B41                     _EUSART_DefaultOverrunErrorCallback:	
 23531                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 23532                           
 23533     1B41                     i1l5883:	
 23534                           ;incstack = 0
 23535                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 23536                           
 23537                           
 23538                           ;mcc_generated_files/uart/src/eusart.c: 326:     RC1STAbits.CREN = 0;
 23539     1B41  0023               	movlb	3	; select bank3
 23540     1B42  121D               	bcf	29,4	;volatile
 23541                           
 23542                           ;mcc_generated_files/uart/src/eusart.c: 327:     RC1STAbits.CREN = 1;
 23543     1B43  161D               	bsf	29,4	;volatile
 23544     1B44                     i1l979:
 23545     1B44  0008               	return
 23546     1B45                     __end_of_EUSART_DefaultOverrunErrorCallback:
 23547                           
 23548                           	psect	text116
 23549     1B22                     __ptext116:	
 23550 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 23551 ;; Defined at:
 23552 ;;		line 318 in file "mcc_generated_files/uart/src/eusart.c"
 23553 ;; Parameters:    Size  Location     Type
 23554 ;;		None
 23555 ;; Auto vars:     Size  Location     Type
 23556 ;;		None
 23557 ;; Return value:  Size  Location     Type
 23558 ;;                  1    wreg      void 
 23559 ;; Registers used:
 23560 ;;		None
 23561 ;; Tracked objects:
 23562 ;;		On entry : 0/0
 23563 ;;		On exit  : 0/0
 23564 ;;		Unchanged: 0/0
 23565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23570 ;;Total ram usage:        0 bytes
 23571 ;; Hardware stack levels used: 1
 23572 ;; This function calls:
 23573 ;;		Nothing
 23574 ;; This function is called by:
 23575 ;;		_EUSART_Initialize
 23576 ;;		_EUSART_ReceiveISR
 23577 ;; This function uses a non-reentrant model
 23578 ;;
 23579                           
 23580     1B22                     _EUSART_DefaultFramingErrorCallback:	
 23581                           ;psect for function _EUSART_DefaultFramingErrorCallback
 23582                           
 23583     1B22                     i1l976:	
 23584                           ;incstack = 0
 23585                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 23586                           
 23587     1B22  0008               	return
 23588     1B23                     __end_of_EUSART_DefaultFramingErrorCallback:
 23589     007E                     btemp	set	126	;btemp
 23590     007E                     int$flags	set	126
 23591     007E                     wtemp0	set	126
 23592     2370                     
 23593                           	psect	config
 23594                           
 23595                           ;Config register CONFIG1 @ 0x8007
 23596                           ;	Oscillator Selection Bits
 23597                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 23598                           ;	Power-up Timer Enable
 23599                           ;	PWRTE = OFF, PWRT disabled
 23600                           ;	MCLR Pin Function Select
 23601                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 23602                           ;	Flash Program Memory Code Protection
 23603                           ;	CP = ON, Program memory code protection is enabled
 23604                           ;	Brown-out Reset Enable
 23605                           ;	BOREN = ON, Brown-out Reset enabled
 23606                           ;	Clock Out Enable
 23607                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 23608                           ;	Internal/External Switch Over
 23609                           ;	IESO = ON, Internal External Switch Over mode is enabled
 23610                           ;	Fail-Safe Clock Monitor Enable
 23611                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 23612     8007                     	org	32775
 23613     8007  3F7C               	dw	16252
 23614                           
 23615                           ;Config register CONFIG2 @ 0x8008
 23616                           ;	Flash Memory Self-Write Protection
 23617                           ;	WRT = OFF, Write protection off
 23618                           ;	Peripheral Pin Select one-way control
 23619                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 23620                           ;	Zero Cross Detect Disable Bit
 23621                           ;	ZCD = OFF, ZCD disable. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 23622                           ;	PLL Enable Bit
 23623                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 23624                           ;	Stack Overflow/Underflow Reset Enable
 23625                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 23626                           ;	Brown-out Reset Voltage Selection
 23627                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 23628                           ;	Low-Power Brown Out Reset
 23629                           ;	LPBOR = OFF, Low-Power BOR is disabled
 23630                           ;	In-Circuit Debugger Mode
 23631                           ;	DEBUG = 0x1, unprogrammed default
 23632                           ;	Low-Voltage Programming Enable
 23633                           ;	LVP = ON, Low-voltage programming enabled
 23634     8008                     	org	32776
 23635     8008  3EFF               	dw	16127
 23636                           
 23637                           ;Config register CONFIG3 @ 0x8009
 23638                           ;	WDT Period Select
 23639                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 23640                           ;	Watchdog Timer Enable
 23641                           ;	WDTE = OFF, WDT disabled
 23642                           ;	WDT Window Select
 23643                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 23644                           ;	WDT Input Clock Selector
 23645                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 23646     8009                     	org	32777
 23647     8009  3F9F               	dw	16287

Data Sizes:
    Strings     98
    Constant    134
    Data        1
    BSS         211
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     39      77
    BANK3            80     10      40
    BANK4            80      0      80
    BANK5            80      0      64
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    I2C1_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), NULL(), 

    I2C1_CallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    i2c1_eventTable	const PTR FTN()enum E10210[9] size(2) Largest target is 1
		 -> I2C1_EVENT_ERROR(), I2C1_EVENT_IDLE(), I2C1_EVENT_NACK(), I2C1_EVENT_RESET(), 
		 -> I2C1_EVENT_RX(), I2C1_EVENT_SEND_RD_ADDR(), I2C1_EVENT_SEND_WR_ADDR(), I2C1_EVENT_STOP(), 
		 -> I2C1_EVENT_TX(), 

    I2C1_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C1_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C1_Host$ErrorGet	PTR FTN()enum E10201 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C1_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C1_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C1_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    I2C1_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C1_Host$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C1_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    I2C1_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    i2c1Status$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[9]), STR_2(CODE[14]), STR_4(CODE[9]), STR_5(CODE[14]), 
		 -> STR_7(CODE[13]), TMR0_Custom_ISR@buffer(BANK2[16]), UART_Custom_ISR@buffer(BANK2[16]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    NULL$0	PTR struct . size(2) Largest target is 0

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1156$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    S1156TMR_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    S1156TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    S1156TMR_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    S1156TMR_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    S1156TMR_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    S1156TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    S132$2$1	PTR unsigned char  size(2) Largest target is 0

    S132$3$1	PTR unsigned char  size(2) Largest target is 0

    S132$4$1	PTR unsigned char  size(2) Largest target is 0

    S132$4$3	PTR unsigned char  size(2) Largest target is 0

    S132$8$0	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    S132$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S132$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S132$ErrorGet	PTR FTN()enum E10201 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S132$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    S132$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    S132$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    S132$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S132$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S132$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    S132$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    S2021$18$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), 

    S2021$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S2021$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S2021$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S2021$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S2021$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S2021$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S2021$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S2021$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S2021$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S2021$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S2021$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S2021$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S2021$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S2021$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S2021$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S2021$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S2021$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S2021$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S2021$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S2021$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    S231$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S231$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3028$buffer	PTR unsigned char  size(2) Largest target is 0

    S3028$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_6(CODE[15]), STR_8(CODE[14]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> TMR0_Custom_ISR@buffer(BANK2[16]), UART_Custom_ISR@buffer(BANK2[16]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_12(CODE[4]), STR_9(CODE[4]), 

    Timer0$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    Timer0$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    Timer0$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    Timer0$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    Timer0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 
		 -> NULL(), 

    Timer0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    Timer2$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    Timer2$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    Timer2$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    Timer2$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    Timer2$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    Timer2$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    Timer4$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    Timer4$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    Timer4$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    Timer4$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    Timer4$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    Timer4$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    tmr1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    tmr1$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    tmr1$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    tmr1$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    tmr1$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    tmr1$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR1_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 
		 -> NULL(), 

    TMR1_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    TMR2_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 
		 -> NULL(), 

    TMR2_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    TMR4_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 
		 -> NULL(), 

    TMR4_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_6(CODE[15]), STR_8(CODE[14]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_6(CODE[15]), STR_8(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_6(CODE[15]), STR_8(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    ___xxtofl->_ADC_GetConversion
    _I2C1_ISR->_I2C1_EventHandler
    _I2C1_EventHandler->_I2C1_EVENT_TX
    _I2C1_ERROR_ISR->_I2C1_ErrorEventHandler
    _I2C1_ErrorEventHandler->_I2C1_EVENT_TX
    _I2C1_EVENT_TX->_I2C1_DataTransmit
    _I2C1_EVENT_SEND_WR_ADDR->_I2C1_DataTransmit
    _xtoa->_pad
    _read_prec_or_width->___wmul
    _efgtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___flsub->___fladd
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->i1_LCD_Write_4Bit
    _LCD_Set_Cursor->i1_LCD_CMD
    _LCD_Clear->i1_LCD_CMD
    i1_LCD_CMD->i1_LCD_Write_4Bit
    i1_LCD_Write_4Bit->i1_IO_Expander_Write
    _Backlight->i1_IO_Expander_Write
    i1_IO_Expander_Write->i1_I2C_Master_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _vfprintf->_vfpfcnvrt
    _xtoa->_pad
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _TMR0_Custom_ISR->_sprintf
    _UART_Custom_ISR->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    _Timer0_DefaultOverflowCallback->_TMR0_Custom_ISR
    _TMR0_Custom_ISR->_sprintf
    _EUSART_ReceiveISR->_UART_Custom_ISR
    _UART_Custom_ISR->_sprintf

Critical Paths under _main in BANK3

    _main->_LCD_Init
    _Timer0_Initialize->_Timer0_OverflowCallbackRegister
    _TMR4_Initialize->_TMR4_OverflowCallbackRegister
    _TMR2_Initialize->_TMR2_OverflowCallbackRegister
    _TMR1_Initialize->_TMR1_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _I2C1_Initialize->_I2C1_CallbackRegister
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _EUSART_Initialize->_EUSART_RxCompleteCallbackRegister
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2506
                                              8 BANK3      2     2      0
                 _CCP2_LoadDutyValue
                    _I2C_Master_Init
                           _LCD_Init
                  _SYSTEM_Initialize
                _shift_out_to_motors
 ---------------------------------------------------------------------------------
 (1) _shift_out_to_motors                                  5     5      0     161
                                              0 BANK3      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1303
                     _ADC_Initialize
                    _CCP1_Initialize
                    _CCP2_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                  _Timer0_Initialize
 ---------------------------------------------------------------------------------
 (2) _Timer0_Initialize                                    0     0      0     121
    _Timer0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _Timer0_OverflowCallbackRegister                      2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     121
      _TMR4_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR4_OverflowCallbackRegister                        2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
      _TMR2_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR2_OverflowCallbackRegister                        2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR1_OverflowCallbackRegister                        2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     121
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0     242
              _I2C1_CallbackRegister
 ---------------------------------------------------------------------------------
 (3) _I2C1_CallbackRegister                                2     0      2     242
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     456
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
  _EUSART_RxCompleteCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_RxCompleteCallbackRegister                    2     0      2     152
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     152
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     152
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     282
                                              6 BANK3      2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     189
                                              4 BANK3      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0     127
                                              2 BANK3      2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      62
                                              1 BANK3      1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      31
                                              0 BANK3      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP2_LoadDutyValue                                   2     0      2     760
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0   64755
                                NULL *
                  _EUSART_ReceiveISR *
                     _I2C1_ERROR_ISR
                           _I2C1_ISR
                 _Timer0_OverflowISR
 ---------------------------------------------------------------------------------
 (8) _Timer0_OverflowISR                                   0     0      0   36275
                                NULL *
       _TMR1_DefaultOverflowCallback *
       _TMR2_DefaultOverflowCallback *
       _TMR4_DefaultOverflowCallback *
     _Timer0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (9) _Timer0_DefaultOverflowCallback                       0     0      0   36275
                    _TMR0_Custom_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_Custom_ISR                                    26    26      0   36275
                                             13 BANK2     26    26      0
                  _ADC_GetConversion
                          _Backlight
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                         _TMR1_Start
                          _TMR1_Stop
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (11) ___xxtofl                                           14    10      4     626
                                              4 COMMON     8     4      4
                                              0 BANK0      6     6      0
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (11) _TMR1_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_GetConversion                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _TMR4_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR2_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             0     0      0     164
                  _I2C1_EventHandler
 ---------------------------------------------------------------------------------
 (9) _I2C1_EventHandler                                    2     2      0     164
                                              4 COMMON     2     2      0
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
                _I2C1_InterruptClear
                        _I2C1_IsAddr
                        _I2C1_IsData
                        _I2C1_IsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_IsNack                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_IsData                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_IsAddr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_ERROR_ISR                                       0     0      0     164
             _I2C1_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (9) _I2C1_ErrorEventHandler                               2     2      0     164
                                              4 COMMON     2     2      0
                                NULL *
               _I2C1_DefaultCallback *
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
           _I2C1_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_TX                                       3     3      0      48
                                              1 COMMON     3     3      0
                  _I2C1_DataTransmit
                    _I2C1_EVENT_STOP
                 _I2C1_RestartEnable
 ---------------------------------------------------------------------------------
 (11) _I2C1_RestartEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_SEND_WR_ADDR                             0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_SEND_RD_ADDR                             0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (11) _I2C1_DataTransmit                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_RX                                       2     2      0      24
                                              0 COMMON     2     2      0
                       _I2C1_AckSend
                   _I2C1_DataReceive
                   _I2C1_IsRxBufFull
                      _I2C1_NackSend
                 _I2C1_ReceiveEnable
                _I2C1_RestartDisable
 ---------------------------------------------------------------------------------
 (11) _I2C1_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_ReceiveEnable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_NackSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_IsRxBufFull                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_AckSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_NACK                                     1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C1_EVENT_STOP
 ---------------------------------------------------------------------------------
 (11) _I2C1_EVENT_STOP                                     0     0      0       0
                         _I2C1_Close
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (12) _I2C1_StopSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_Close                                          0     0      0       0
           _I2C1_ErrorInterruptClear
                _I2C1_InterruptClear
              _I2C1_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (13) _I2C1_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_InterruptClear                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_IDLE                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_ERROR                                    1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C1_EVENT_RESET
 ---------------------------------------------------------------------------------
 (10) _I2C1_EVENT_RESET                                    0     0      0       0
                      _I2C1_BusReset
 ---------------------------------------------------------------------------------
 (11) _I2C1_BusReset                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DefaultCallback                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_ReceiveISR                                    6     6      0   28152
                                             32 BANK2      6     6      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
                    _UART_Custom_ISR
 ---------------------------------------------------------------------------------
 (9) _UART_Custom_ISR                                     19    19      0   28062
                                             13 BANK2     19    19      0
                          _Backlight
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (11) _sprintf                                            22    16      6   26131
                                             73 BANK1      7     1      6
                                              0 BANK2     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (12) _vfprintf                                            7     4      3   25597
                                             66 BANK1      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (13) _vfpfcnvrt                                          15    13      2   25278
                                             78 BANK0      2     0      2
                                             54 BANK1     12    12      0
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _xtoa
 ---------------------------------------------------------------------------------
 (14) _xtoa                                               11     9      2    2829
                                              8 BANK0     11     9      2
                                _pad
 ---------------------------------------------------------------------------------
 (14) _read_prec_or_width                                  9     7      2     733
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (15) ___wmul                                              6     2      4     444
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (14) _efgtoa                                             55    50      5   20041
                                              0 BANK1     54    49      5
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (15) _strcpy                                              6     4      2     291
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (15) _pad                                                 7     4      3    2445
                                             11 COMMON     3     0      3
                                              4 BANK0      4     4      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (16) _fputs                                               7     6      1     888
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (17) _fputc                                               8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (18) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (15) _memcpy                                              8     5      3     328
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (15) _labs                                                4     0      4     294
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (15) _floorf                                             20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (15) ___fpclassifyf                                      16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (15) ___fltol                                            10     6      4     533
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (15) ___flsub                                             8     0      8    2637
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (16) ___fladd                                            20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (15) ___flneg                                             4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (15) ___flmul                                            26    18      8    3785
                                              6 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (15) ___flge                                             12     4      8    1246
                                             32 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (15) ___fleq                                             12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (15) ___fldiv                                            26    18      8    2489
                                             32 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) _LCD_Write_String                                    5     3      2     831
                                              6 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (12) _LCD_Write_Char                                      2     2      0     133
                                              4 COMMON     2     2      0
                   i1_LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (11) _LCD_Set_Cursor                                      2     1      1     851
                                              6 COMMON     2     1      1
                          i1_LCD_CMD
 ---------------------------------------------------------------------------------
 (11) _LCD_Clear                                           0     0      0     133
                          i1_LCD_CMD
 ---------------------------------------------------------------------------------
 (12) i1_LCD_CMD                                           2     2      0     133
                                              4 COMMON     2     2      0
                   i1_LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (13) i1_LCD_Write_4Bit                                    2     2      0      89
                                              2 COMMON     2     2      0
                i1_IO_Expander_Write
 ---------------------------------------------------------------------------------
 (11) _Backlight                                           0     0      0      44
                i1_IO_Expander_Write
 ---------------------------------------------------------------------------------
 (14) i1_IO_Expander_Write                                 1     1      0      44
                                              1 COMMON     1     1      0
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                 i1_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (15) i1_I2C_Master_Write                                  1     1      0      22
                                              0 COMMON     1     1      0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (15) i1_I2C_Master_Stop                                   0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (15) i1_I2C_Master_Start                                  0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (16) i1_I2C_Master_Wait                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP2_LoadDutyValue
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _CCP2_Initialize
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
       _EUSART_RxCompleteCallbackRegister
     _I2C1_Initialize
       _I2C1_CallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_OverflowCallbackRegister
     _TMR2_Initialize
       _TMR2_OverflowCallbackRegister
     _TMR4_Initialize
       _TMR4_OverflowCallbackRegister
     _Timer0_Initialize
       _Timer0_OverflowCallbackRegister
   _shift_out_to_motors

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
     _UART_Custom_ISR *
       _Backlight
         i1_IO_Expander_Write
           i1_I2C_Master_Start
             i1_I2C_Master_Wait
           i1_I2C_Master_Stop
             i1_I2C_Master_Wait
           i1_I2C_Master_Write
             i1_I2C_Master_Wait
       _LCD_Clear
         i1_LCD_CMD
           i1_LCD_Write_4Bit
             i1_IO_Expander_Write
       _LCD_Set_Cursor
         i1_LCD_CMD
       _LCD_Write_String
         _LCD_Write_Char
           i1_LCD_Write_4Bit
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _efgtoa
               ___fladd
               ___fldiv
                 _ADC_GetConversion (ARG)
                 ___flmul (ARG)
                   _ADC_GetConversion (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _ADC_GetConversion (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
               _strcpy
             _fputc
             _read_prec_or_width
               ___wmul
             _xtoa
               _pad
   _I2C1_ERROR_ISR *
     _I2C1_ErrorEventHandler
       NULL(Fake) *
       _I2C1_DefaultCallback *
       _I2C1_EVENT_ERROR *
         _I2C1_EVENT_RESET
           _I2C1_BusReset
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
         _I2C1_EVENT_STOP
           _I2C1_Close
             _I2C1_ErrorInterruptClear
             _I2C1_InterruptClear
             _I2C1_StatusFlagsClear
           _I2C1_StopSend
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
         _I2C1_AckSend
         _I2C1_DataReceive
         _I2C1_IsRxBufFull
         _I2C1_NackSend
         _I2C1_ReceiveEnable
         _I2C1_RestartDisable
       _I2C1_EVENT_SEND_RD_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_SEND_WR_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
         _I2C1_DataTransmit
         _I2C1_EVENT_STOP
         _I2C1_RestartEnable
       _I2C1_ErrorInterruptClear *
   _I2C1_ISR *
     _I2C1_EventHandler
       _I2C1_EVENT_ERROR *
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
       _I2C1_EVENT_SEND_RD_ADDR *
       _I2C1_EVENT_SEND_WR_ADDR *
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
       _I2C1_InterruptClear *
       _I2C1_IsAddr *
       _I2C1_IsData *
       _I2C1_IsNack *
   _Timer0_OverflowISR *
     NULL(Fake) *
     _TMR1_DefaultOverflowCallback *
     _TMR2_DefaultOverflowCallback *
     _TMR4_DefaultOverflowCallback *
     _Timer0_DefaultOverflowCallback *
       _TMR0_Custom_ISR
         _ADC_GetConversion
         _Backlight
         _LCD_Clear
         _LCD_Set_Cursor
         _LCD_Write_String
         _TMR1_Start
         _TMR1_Stop
         ___fldiv
         ___flge
         ___flmul
         ___xxtofl
         _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     27      4D       9       96.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      A      28      11       50.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1B3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1B3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jun 24 16:24:13 2024

                    ?_TMR2_OverflowCallbackRegister 01BE                                        ___fldiv@aexp 0059  
                                      ___fldiv@bexp 0058                              ??_I2C1_DefaultCallback 0070  
                                      ___fldiv@sign 0051                                                  l19 1C29  
                                                _RS 0167         __end_of_EUSART_OverrunErrorCallbackRegister 1C90  
             ??_EUSART_OverrunErrorCallbackRegister 01C0                ?_EUSART_OverrunErrorCallbackRegister 01BE  
               _EUSART_OverrunErrorCallbackRegister 1C81                                ??_Timer0_OverflowISR 007E  
                                   ??_I2C1_NackSend 0070                                     ??_I2C1_BusReset 0070  
                               ___wmul@multiplicand 0072                                     _timer0ReloadVal 016B  
                           __end_of_CCP1_Initialize 1C09                                 __Umul8_16@word_mpld 0076  
                                               l317 1C08                                                 l157 1CD8  
                                               l343 1DDF                                                 l503 1C65  
                                               l184 1C59                                                 l338 07FF  
                                               l523 1BF5                                                 l375 1F7D  
                                               l384 1BE3                                                 l720 1BA2  
                                               l802 1BAE                                                 l571 1CEC  
                                               l627 1D96                                                 l469 11C5  
                                               l649 1BFE                                                 l691 1E2F  
                                               l595 1BA8                                                 l778 1D6A  
                                               l983 1C80                                                 l991 1C4D  
                                               l896 1FD0                                                 l987 1C8F  
                                               _PR2 001B                                                 _PR4 0414  
                                   _timer1ReloadVal 015D                                                 _pad 1028  
                         __end_of_I2C1_DataTransmit 1B6E                                     _TMR2_Initialize 1CD9  
                                               wreg 0009                            _I2C1_ErrorInterruptClear 1B26  
                                      ___flmul@aexp 0038                                        ___flmul@bexp 0039  
                                      ___flmul@sign 0033                                        ___flmul@temp 003E  
                                      ___flmul@prod 003A                                     __end_of_LCD_CMD 1DC7  
                                      _BAUD1CONbits 019F                                 LCD_Write_String@Str 0076  
                                    _LCD_Set_Cursor 1F7E                                    __end_of_I2C1_ISR 1B65  
                                      ___fltol@exp1 0079                                                l1030 1C41  
                                              l1024 1C1E                                                l1033 1B96  
                                              l1041 1CAE                                                l1042 1CB1  
                                              l1027 1C36                                                l1051 1DAE  
                                              l1036 1B9C                                                l1045 130C  
                                              l1054 1DC6                                                l1039 1CA9  
                                              l1151 15D7                                                l1048 1D55  
                                              l1170 1121                                                l1155 1609  
                                              l1149 15CF                                                l1159 163B  
                                              l1169 1115                                                l6301 1CA5  
                                              ?_pad 007B                                                l6303 1CAF  
                                              l6311 1C55                                                l6313 1BED  
                                              l6401 118E                                                l6321 1BA9  
                                              l6307 1D43                                                l6331 1C81  
                                              l6323 1C42                                                l6411 1199  
                                              l6403 118F                                                l6315 1BA3  
                                              l6341 1C1F                                                l6333 1C88  
                                              l6325 1C49                                                l6309 1C4E  
                                              l6421 11A6                                                l6413 119B  
                                              l6405 1192                                                l6501 1E22  
                                              l6317 1BF6                                                l6335 1D99  
                                              l6351 1C27                                                l6343 1C22  
                                              l6327 1C72                                                l6431 11B5  
                                              l6423 11A9                                                l6415 119D  
                                              l6407 1194                                                l6319 1B9D  
                                              l6503 1E2A                                                l6511 1CDD  
                                              l6337 1D9F                                                l6345 1C23  
                                              l6329 1C79                                                l6361 1CD6  
                                              l6353 1CC5                                                l6441 11BF  
                                              l6433 11B8                                                l6425 11AC  
                                              l6417 11A0                                                l6409 1196  
                                              l6505 1E2C                                                l6513 1CDF  
                                              l6521 1D56                                                l6601 10DF  
                                              l6291 1B91                                                l6339 1DA4  
                                              l6347 1C24                                                l6363 1BFF  
                                              l6371 07F9                                                l6355 1CCA  
                                              l6451 11C4                                                l6443 11C0  
                                              l6435 11BB                                                l6427 11AF  
                                              l6419 11A3                                                l6507 1E2D  
                                              l6515 1CE0                                                l6531 1D67  
                                              l6523 1D5A                                                l6611 1105  
                                              l6603 10F9                                                l6293 1B94  
                                              l6541 1DB9                                                l6349 1C25  
                                              l6365 1C06                                                l6373 07FB  
                                              l6461 1FB3                                                l6453 1FA4  
                                              l6357 1CCB                                                l6533 1C5A  
                                              l6445 11C1                                                l6437 11BD  
                                              l6429 11B2                                                l6381 1170  
                                              l6517 1CE8                                                l6509 1CD9  
                                              l6525 1D5C                                                l6613 1106  
                                              l6605 10FD                                                l6551 1DDB  
                                              l6543 1DC7                                                l6287 1C36  
                                              l6295 1B97                                                l6367 07F5  
                                              l6375 1BDC                                                l6471 1FC7  
                                              l6463 1FB5                                                l6455 1FA6  
                                              l6359 1CCE                                                l6535 1C5D  
                                              l6447 11C2                                                l6439 11BE  
                                              l6391 117C                                                l6383 1173  
                                              l6519 1CEA                                                l6527 1D5D  
                                              l6615 110A                                                l6607 10FF  
                                              l6545 1DCC                                                l6561 1C17  
                                              l6289 1C3B                                                l6297 1B9A  
                                              l6537 1DB1                                                l6369 07F8  
                                              l6377 1BDF                                                l6473 1FCA  
                                              l6465 1FB7                                                l6457 1FAE  
                                              l6449 11C3                                                l6393 117F  
                                              l6385 1175                                                l6529 1D65  
                                              l6481 1D81                                                l6617 1117  
                                              l6609 1103                                                l6641 15BE  
                                              l6547 1DD1                                                l6563 1C18  
                                              l6299 1CA2                                                l6539 1DB3  
                                              l6571 129C                                                l6379 1BE1  
                                              l6475 1FCC                                                l6467 1FB8  
                                              l6459 1FB1                                                l6395 1189  
                                              l6387 1178                                                l6491 1D95  
                                              l6483 1D86                                                l6619 111B  
                                              l6651 15CB                                                l6643 15C0  
                                              l6549 1DD7                                                l6565 1C1B  
                                              l6581 12C4                                                l6573 12A0  
                                              l6477 1FCD                                                l6469 1FBF  
                                              l6397 118B                                                l6389 117A  
                                              l6493 1E15                                                l6485 1D89  
                                              l6557 1F59                                                l6661 15F4  
                                              l6653 15CD                                                l6645 15C1  
                                              l6567 1C1D                                                l6559 1C14  
                                              l6591 12F6                                                l6583 12D0  
                                              l6575 12AC                                                l6479 1FCE  
                                              l6399 118D                                                l6495 1E17  
                                              l6487 1D8C                                                l6671 162E  
                                              l6663 15FC                                                l6655 15CE  
                                              l6647 15C2                                                l6639 15BB  
                                              l6593 12FF                                                l6585 12D8  
                                              l6577 12B4                                                l6569 1299  
                                              l6497 1E19                                                l6489 1D94  
                                              l6673 1647                                                l6665 1615  
                                              l6657 15E3                                                l6649 15CA  
                                              l6587 12E5                                                l6579 12C0  
                                              l6499 1E1B                                                l6595 10DE  
                                              l6675 1654                                                l6667 1622  
                                              l6659 15F0                                                l6589 12E9  
                                              l6677 1658                                                l6669 1626  
                                              l6679 1660                                                STR_1 18D7  
                                              STR_2 188F                                                STR_3 183C  
                                              STR_4 18CE                                                STR_5 188F  
                                              STR_6 1872                                                STR_7 189D  
                                              STR_8 1881                                                STR_9 18E0  
                                 _I2C1_Deinitialize 0000                                                _LATA 010C  
                                              _LATB 010D                                                _LATC 010E  
                                              _T2PR 001B                                                _T4PR 0414  
                                              u5600 1C88                                                u5601 1C87  
                                              i1l34 1DF1                                                u5620 1DD1  
                                              u5540 1C3B                                                i1l37 1DF9  
                                              u5621 1DD0                                                u5541 1C3A  
                                              u5550 1C41                                                u5551 1C40  
                                              u5615 1DBD                                                u5560 1CAE  
                                              u5561 1CAD                                                u5570 1C55  
                                              u5635 1DD3                                                u5571 1C54  
                                              u5707 1634                                                u5580 1C49  
                                              u5660 1115                                                u5644 10E4  
                                              u5581 1C48                                                u5661 1114  
                                              u5645 10E3                                                u5717 164D  
                                              u5590 1C79                                                u5654 10EC  
                                              u5807 12BC                                                u5591 1C78  
                                              u5655 10EB                                                u5727 1666  
                                              u5817 12C8                                                u5737 10FA  
                                              u5827 12D4                                                u5747 1100  
                                              u5837 12E0                                                u5757 1107  
                                              u5677 15E9                                                u5847 12ED  
                                              u5767 1118                                                u5687 1602  
                                              u5857 12FA                                                u5777 111E  
                                              u5697 161B                                                u5867 1307  
                                              u5787 12A4                                                u5877 1DAB  
                                              u5797 12B0                                                _TMR0 0015  
                                              _TMR2 001A                                                _TMR4 0413  
                                              _WPUA 020C                                                _WPUB 020D  
                                              _WPUC 020E                           EUSART_ReceiveISR@regValue 0144  
                        __end_of_CCP2_LoadDutyValue 1DE0                                   ?_LCD_Write_String 0076  
                                   ??_I2C1_StopSend 0070                                                _dbuf 0220  
                           __end_of_CCP2_Initialize 0800                                                _labs 1D17  
                                              _main 15BB                                                _tmr1 18B6  
                                              _prec 0157                                                pad@i 0025  
                                              pad@p 007C                                                fsr0h 0005  
                                              fsr1h 0007                                                indf0 0000  
                                              fsr0l 0004                                                indf1 0001  
                                              fsr1l 0006                                                btemp 007E  
                                              _xtoa 1404                         _INT_DefaultInterruptHandler 0000  
                                     ___fpclassifyf 1385                                                start 0041  
                                ??_LCD_Write_String 0078          __end_of_EUSART_DefaultOverrunErrorCallback 1B45  
              ??_EUSART_DefaultOverrunErrorCallback 0070                 ?_EUSART_DefaultOverrunErrorCallback 0070  
                _EUSART_DefaultOverrunErrorCallback 1B41                                     ___fldiv@new_exp 0052  
                   __end_of_INT_SetInterruptHandler 1BF6                                LCD_Write_4Bit@Nibble 01C1  
                                   _I2C1_EVENT_IDLE 1B59                                     _I2C1_EVENT_NACK 1B7F  
                                        _i2c1Status 0147                                     _I2C1_EVENT_STOP 1BD4  
                                             ??_pad 0024                                    ?_UART_Custom_ISR 0070  
                                  __end_of_LCD_Init 130D                             __end_of_TMR0_Custom_ISR 0BB9  
                                  ?_I2C_Master_Init 0070                                    ?_I2C_Master_Wait 0070  
                                  ?_I2C_Master_Stop 0070                                       ___fltol@sign1 0078  
                    ??_TMR1_DefaultOverflowCallback 0070                                   __end_of_I2C1_Host 1860  
                                             ?_labs 0070                                     __end_of___fladd 0DC5  
                                             ?_main 0070                                     __end_of___fldiv 0A01  
                                   __end_of___flneg 1C14                                               STR_12 18E4  
                                   __end_of___flmul 1000                                     __end_of___flsub 1E8C  
                                   __end_of___fltol 1297                                               ?_xtoa 0028  
                                             _T1CON 0018                                               _T2CON 001C  
                                             _T4CON 0415                                               _IOCAF 0393  
                                             _T2HLT 001D                                               _IOCBF 0396  
                                             _IOCCF 0399                                               _IOCAN 0392  
                                             _IOCAP 0391                                               _IOCBN 0395  
                                             _IOCBP 0394                                               _IOCCN 0398  
                                             _IOCCP 0397                                               _T4HLT 0416  
                                             i1l211 1B24                                               i1l220 1BB5  
                                             _T2TMR 001A                                               i1l301 1B28  
                                             i1l205 10DB                                               i1l214 1B5C  
                                             i1l304 1B4C                                               i1l208 1F33  
                                             i1l217 1BD3                                               i1l241 1B8A  
                                             i1l250 1B31                                               _T2RST 001F  
                                             i1l227 1FFF                                               i1l235 1098  
                                             i1l244 1BDB                                               i1l253 1B6D  
                                             i1l262 1B3A                                               i1l238 1B84  
                                             i1l190 1B60                                               i1l271 1B2E  
                                             i1l247 1BBC                                               i1l256 1B48  
                                             i1l280 1B90                                               i1l265 1B37  
                                             i1l513 003F                                               i1l274 1B50  
                                             i1l259 1B34                                               i1l283 1B72  
                                             i1l187 1B64                                               _T4TMR 0413  
                                             i1l277 1B58                                               i1l286 1BC3  
                                             i1l199 1D40                                               i1l289 1B54  
                                             i1l298 1B2B                                               _T4RST 0418  
                                             i1l723 1000                                               i1l652 1B68  
                                             i1l805 0002                                               i1l646 1EED  
                                             i1l694 1B3D                                               i1l598 1B25  
                                             i1l697 1B40                                               i1l970 1384  
                                             i1l976 1B22                                               i1l979 1B44  
                                             _UART1 1800                                        vfpfcnvrt@fmt 006E  
                                             _TMR1H 0017                                               _TMR1L 0016  
                                             _TRISA 008C                                               _TRISB 008D  
                                             _TRISC 008E                                               _RXPPS 0E24  
                          ?_I2C1_EVENT_SEND_RD_ADDR 0070                                     _TMR4_Initialize 1D56  
                            __end_of_LCD_Set_Cursor 1FA4                                   ??_I2C1_Initialize 01C0  
                                       ?_TMR1_Start 0070                                               _flags 0165  
                           ??_I2C1_CallbackRegister 01C0                                 read_prec_or_width@c 0020  
                               read_prec_or_width@n 0021                                               _fputc 0800  
                                             _fputs 1F34                                   ?_I2C1_IsRxBufFull 0070  
                                             labs@a 0070                            ?_I2C1_EVENT_SEND_WR_ADDR 0070  
                                             pad@fp 0027                                               _width 0155  
                                             _putch 1B23                      ??_TMR4_DefaultOverflowCallback 0070  
                           __end_of_TMR1_Initialize 1E30                                               pclath 000A  
                             I2C1_DataTransmit@data 0070                                  ??_I2C1_IsRxBufFull 0070  
                                             status 0003                                               wtemp0 007E  
                                   __end_of_sprintf 1ECC                                      ?___fpclassifyf 0070  
                                             xtoa@c 0030                                               xtoa@d 0028  
                                             xtoa@i 0031                                               xtoa@p 002E  
                                             xtoa@w 002B                                        ??_I2C1_Close 0070  
                                    _LCD_Write_4Bit 1D97                                      _LCD_Write_Char 1D6B  
                                   __initialization 0043                            ??_I2C1_ErrorEventHandler 0074  
                                      __end_of_labs 1D2C                                        __end_of_main 1670  
                                      __end_of_tmr1 18C2                                        __end_of_xtoa 1485  
                                 _IO_Expander_Write 1D41                                    _I2C1_EVENT_ERROR 1B85  
                                  _I2C1_EVENT_RESET 1BB6                             __end_of_TMR2_Initialize 1CED  
                       ?_INTERRUPT_InterruptManager 0070                                  ?_IO_Expander_Write 0070  
                                            ??_labs 0074                                              ??_main 01C6  
                                  ?_CCP1_Initialize 0070                                              ??_xtoa 002A  
                                 __end_of_LCD_Clear 1BED                                           ??_LCD_CMD 01C2  
                        __end_of_read_prec_or_width 1227                                   ?_I2C_Master_Start 0070  
                                 ?_I2C_Master_Write 0070    EUSART_RxCompleteCallbackRegister@callbackHandler 01BE  
EUSART_OverrunErrorCallbackRegister@callbackHandler 01BE  EUSART_FramingErrorCallbackRegister@callbackHandler 01BE  
              I2C1_CallbackRegister@callbackHandler 01BE                                 ??_IO_Expander_Write 01BF  
                                   ?_LCD_Set_Cursor 0076                                  __end_of_I2C1_Close 1D41  
                                ??_I2C_Master_Start 01BE                                              _ADCON0 009D  
                                            _ADCON1 009E                                  ??_I2C_Master_Write 01BE  
                                            _ADCON2 009F                          _EUSART_OverrunErrorHandler 0159  
                                            ?_fputc 0070                                   __end_ofi1_LCD_CMD 1D17  
                                            ?_fputs 0078                                              _ADRESH 009C  
                                            _ADRESL 009B                                              _CCPR1H 0292  
                                            _CCPR2H 0299                                              _CCPR1L 0291  
                                            _CCPR2L 0298               __end_of_TMR1_OverflowCallbackRegister 1BA3  
                     _TMR1_OverflowCallbackRegister 1B9D                                              _ANSELA 018C  
                                            ?_putch 0070                                              _ANSELB 018D  
                                            _ANSELC 018E                                              _BORCON 0116  
                                            _T1GCON 0019                                              _RC1REG 0199  
                                            _RA2PPS 0E92                                              _RC1STA 019D  
                                            _RC3PPS 0EA3                                              i1l1030 1C35  
                                            i1l1033 1B78                                              i1l1041 1C9C  
                                            i1l1042 1C9F                                              i1l1027 1C2A  
                                            i1l1051 1D01                                              i1l1203 0B01  
                                            _RC4PPS 0EA4                                              i1l1036 1B7E  
                                            i1l1204 0BB8                                              i1l1054 1D16  
                                            i1l1039 1C97                                              i1l1063 1E4C  
                                            i1l1048 1CC4                                              i1l1072 1FA3  
                                            i1l1057 1D80                                              i1l1075 1BCB  
                                            _RC5PPS 0EA5                                              i1l1087 1BEC  
                                            i1l1272 1E57                                              i1l1441 113E  
                                            _ODCONA 028C                                              i1l1442 115A  
                                            i1l1450 14A2                                              i1l1274 1E6B  
                                            _ODCONB 028D                                              _RC6PPS 0EA6  
                                            _ODCONC 028E                                              i1l1604 0D62  
                                            i1l1196 0A39                                              i1l1453 14F6  
                                            i1l1189 07F4                                              i1l1462 1C13  
                                            i1l1631 0A00                                              i1l1447 116F  
                                            i1l1615 0DBD                                              i1l1607 0D9A  
                                            i1l1199 0A41                                              i1l1616 0DC4  
                                            i1l1473 1281                                              i1l4201 081A  
                                            i1l5001 02F3                                              i1l1713 1533  
                                            i1l1650 09D2                                              i1l1458 150F  
                                            i1l1466 1296                                              i1l1651 09EC  
                                            i1l4211 0BBC                                              i1l1619 1E8B  
                                            i1l4203 083A                                              i1l1803 04F8  
                                            i1l5011 03D3                                              i1l5003 02F7  
                                            i1l1715 15BA                                              i1l1476 1296  
                                            i1l1900 0793                                              i1l1653 09F9  
                                            i1l1645 0986                                              i1l1629 08A8  
                                            i1l4301 0C79                                              i1l1573 0C0E  
                                            i1l4221 0BCD                                              i1l4213 0BBE  
                                            i1l4205 084C                                              i1l5101 068E  
                                            i1l5021 0459                                              i1l5013 03D7  
                                            i1l5005 02F9                                              i1l1726 1586  
                                            i1l4303 0C82                                              i1l4231 0BE3  
                                            i1l4223 0BD5                                              i1l4215 0BC2  
                                            i1l5103 0699                                              i1l5031 04C2  
                                            i1l5023 045E                                              i1l5015 03E5  
                                            i1l5007 0301                                              i1l5111 140B  
                                            i1l1735 1ECB                                              i1l1727 1592  
                                            i1l1719 156C                                              i1l1904 078B  
                                            i1l1920 1027                                              i1l1840 1226  
                                            i1l1832 1484                                              i1l1824 1418  
                                            i1l1681 0FF3                                              i1l4401 0DC3  
                                            i1l4321 0CB2                                              i1l4313 0C9E  
                                            i1l1577 0C8C                                              i1l4305 0C86  
                                            i1l4241 0BF1                                              i1l4233 0BE9  
                                            i1l4225 0BD6                                              i1l4217 0BC3  
                                            i1l4209 0BB9                                              i1l5105 069D  
                                            i1l5041 0508                                              i1l5033 04EE  
                                            i1l5025 0466                                              i1l5017 0437  
                                            i1l5009 030A                                              i1l5121 142F  
                                            i1l5113 1411                                              i1l5201 16E9  
                                            i1l1690 1F10                                              i1l1594 0D1E  
                                            i1l1586 0DC4                                              i1l1914 1D2B  
                                            i1l1762 1030                                              i1l4411 1F07  
                                            i1l4403 1EEF                                              i1l1675 0F7F  
                                            i1l4323 0CB4                                              i1l4315 0CA6  
                                            i1l4307 0C90                                              i1l4331 0CC7  
                                            i1l1579 0C6A                                              i1l4243 0BF6  
                                            i1l4251 0C06                                              i1l4235 0BEA  
                                            i1l4219 0BC8                                              i1l4227 0BD8  
                                            i1l5051 057F                                              i1l5043 050B  
                                            i1l5035 04F4                                              i1l5027 0483  
                                            i1l5019 0441                                              i1l5131 1449  
                                            i1l5123 1435                                              i1l5115 1424  
                                            i1l5211 170E                                              i1l1932 0856  
                                            i1l1940 1F58                                              i1l1860 17FF  
                                            i1l4413 1F0C                                              i1l4405 1EF1  
                                            i1l1669 0FFF                                              i1l4333 0CDE  
                                            i1l4341 0D16                                              i1l4325 0CB8  
                                            i1l4317 0CAA                                              i1l4309 0C95  
                                            i1l4261 0C21                                              i1l4253 0C14  
                                            i1l4245 0BFB                                              i1l4237 0BEC  
                                            i1l4229 0BE0                                              i1l1917 101B  
                                            i1l4421 1F45                                              i1l5061 0595  
                                            i1l5053 0583                                              i1l5045 0563  
                                            i1l5037 0505                                              i1l5029 04BD  
                                            i1l5141 1478                                              i1l5133 144D  
                                            i1l5125 143A                                              i1l5117 1427  
                                            i1l5109 1406                                              i1l5205 16EB  
                                            i1l1598 0D40                                              i1l1766 1057  
                                            i1l1774 00E1                                              i1l4407 1EF8  
                                            i1l4351 0D3B                                              i1l4343 0D26  
                                            i1l4335 0D02                                              i1l4327 0CB9  
                                            i1l4319 0CAE                                              i1l4271 0C2B  
                                            i1l4263 0C23                                              i1l4255 0C18  
                                            i1l4247 0C03                                              i1l4239 0BF0  
                                            i1l1943 1B23                                              i1l4423 1F4A  
                                            i1l5071 05AE                                              i1l5063 059C  
                                            i1l5055 058A                                              i1l5047 0575  
                                            i1l5039 0506                                              i1l4431 1E4F  
                                            i1l5151 11E3                                              i1l5127 143E  
                                            i1l5119 142C                                              i1l5135 1456  
                                            i1l5231 175F                                              i1l5215 1721  
                                            i1l5207 16F3                                              i1l5311 1E8E  
                                            i1l1688 1F00                     Timer0_OverflowISR@CountCallBack 015F  
                                            i1l4425 1C2A                                              i1l5401 1BC7  
                                            i1l5321 1D03                                              i1l4601 0932  
                                            i1l4409 1EFC                                              i1l4361 0D4E  
                                            i1l4353 0D3F                                              i1l4345 0D2B  
                                            i1l4337 0D08                                              i1l4329 0CC2  
                                            i1l4281 0C35                                              i1l4273 0C2D  
                                            i1l4265 0C25                                              i1l4257 0C1D  
                                            i1l4249 0C04                                              i1l4521 1E6F  
                                            i1l4513 1278                                              i1l4505 1261  
                                            i1l4193 0800                                              i1l4417 1F36  
                                            i1l5081 0638                                              i1l5073 05B6  
                                            i1l5065 05A0                                              i1l5057 058E  
                                            i1l5049 057A                                              i1l1793 02D1  
                                            i1l1777 06A8                                              i1l4433 1E53  
                                            i1l5153 11F1                                              i1l5145 11C8  
                                            i1l5137 1464                                              i1l5129 1445  
                                            i1l5233 1764                                              i1l5241 1774  
                                            i1l5225 1746                                              i1l5217 1729  
                                            i1l5209 16FE                                              i1l5313 1E93  
                                            i1l4427 1C2F                                              i1l5163 1CB3  
                                            i1l5323 1D05                                              i1l5403 1BE4  
                                            i1l5307 1D6C                                              i1l4611 094D  
                                            i1l4603 0933                                              i1l4531 0861  
                                            i1l4451 116E                                              i1l4443 1122  
                                            i1l4371 0D5F                                              i1l4355 0D44  
                                            i1l4363 0D50                                              i1l4339 0D0D  
                                            i1l4291 0C54                                              i1l4283 0C37  
                                            i1l4275 0C2F                                              i1l4267 0C27  
                                            i1l4259 0C1F                                              i1l4515 1286  
                                            i1l4507 1271                                              i1l4195 0805  
                                            i1l4419 1F39                                              i1l5091 0661  
                                            i1l5083 063C                                              i1l5075 05BA  
                                            i1l5067 05A4                                              i1l5059 0592  
                                            i1l4435 1E5C                                              i1l5155 1206  
                                            i1l5147 11CA                                              i1l5139 146B  
                                            i1l5251 17AF                                              i1l5243 177F  
                                            i1l5235 1767                                              i1l5219 1739  
                                            i1l5227 174F                                              i1l1883 1EAB  
                                            i1l5315 1E9F                                              i1l5411 1EB4  
                                            i1l5331 1DEC                                              i1l6131 000A  
                                            i1l5325 1D0A                                              i1l5405 1BE8  
                                            i1l5309 1D6F                                              i1l4621 0962  
                                            i1l4613 094F                                              i1l4605 093B  
                                            i1l4541 0875                                              i1l4533 0862  
                                            i1l4525 0857                                              i1l4445 1136  
                                            i1l4461 14BE                                              i1l4701 0E14  
                                            i1l4381 0D78                                              i1l4357 0D47  
                                            i1l4349 0D34                                              i1l4365 0D54  
                                            i1l4293 0C6E                                              i1l4285 0C39  
                                            i1l4277 0C31                                              i1l4269 0C29  
                                            i1l4517 128B                                              i1l1893 1403  
                                            i1l4197 080A                                              i1l1949 1E14  
                                            i1l5093 0667                                              i1l5077 05BE  
                                            i1l5069 05A8                                              i1l5085 0640  
                                            i1l4437 1E61                                              i1l4429 1E4D  
                                            i1l5149 11DB                                              i1l5157 120E  
                                            i1l5253 17BF                                              i1l5245 1793  
                                            i1l5261 17DB                                              i1l5229 1758  
                                            i1l5181 1696                                              i1l5317 1EA9  
                                            i1l5413 1EB6                                              i1l5165 1B29  
                                            i1l5341 1B38                                              i1l5501 1FD8  
                                            i1l5333 1DEF                                              i1l5421 1517  
                                            i1l6141 0021                                              i1l6133 000F  
                                            i1l5271 1CEE                                              i1l4631 0983  
                                            i1l4615 0956                                              i1l4623 0966  
                                            i1l4607 093F                                              i1l4551 088A  
                                            i1l4535 0867                                              i1l4543 0877  
                                            i1l4527 085B                                              i1l4447 1152  
                                            i1l4471 150E                                              i1l4463 14C2  
                                            i1l4455 1485                                              i1l4711 0E32  
                                            i1l4703 0E19                                              i1l4391 0DB1  
                                            i1l4383 0D96                                              i1l4375 0D67  
                                            i1l4367 0D55                                              i1l4359 0D49  
                                            i1l4295 0C72                                              i1l4279 0C33  
                                            i1l4287 0C3B                                              i1l4519 1E6C  
                                            i1l4199 080F                                              i1l5095 0675  
                                            i1l5087 064E                                              i1l5079 060C  
                                            i1l4439 1E67                                              i1l5159 1222  
                                            i1l5239 1769                                              i1l5191 16CA  
                                            i1l5183 169A                                              i1l5175 1672  
                                            i1l5415 1EC1                                              i1l5407 1EAE  
                                            i1l5167 1B26                                              i1l5511 1FF4  
                                            i1l5503 1FDC                                              i1l5343 1BD4  
                                            i1l5335 1DF5                                              i1l5327 1DE1  
                                            i1l5431 1544                                              i1l5423 151B  
                                            i1l6151 0038                                              i1l6143 0027  
                                            i1l6135 0014                                              u300_20 0C90  
                                            i1l5273 1CF3                                              i1l4641 099C  
                                            i1l4625 096A                                              i1l4617 095A  
                                            i1l4609 0945                                              i1l4561 089E  
                                            i1l4553 088B                                              i1l4545 087F  
                                            i1l4537 086C                                              i1l4529 085D  
                                            i1l4449 116C                                              i1l4465 14DA  
                                            i1l4457 149A                                              i1l4801 0FF7  
                                            i1l4721 0E89                                              i1l4713 0E3F  
                                            i1l4705 0E1E                                              i1l4393 0DB2  
                                            i1l4385 0D9F                                              i1l4377 0D6C  
                                            i1l4369 0D59                                              u300_21 0C8F  
                                            i1l4297 0C74                                              i1l4289 0C3C  
                                            i1l5097 067C                                              i1l5089 065C  
                                            i1l5249 17A7                                              i1l5193 16D1  
                                            i1l5185 16AD                                              i1l5177 1685  
                                            i1l5265 17E5                                              i1l5409 1EB2  
                                            i1l5169 1B49                                              i1l5281 1D37  
                                            i1l5353 1B2F                                              i1l5361 1B55  
                                            i1l5513 1FF7                                              i1l5505 1FEB  
                                            i1l5521 1058                                              i1l5345 1BDA  
                                            i1l5329 1DEB                                              i1l5441 1565  
                                            i1l5433 1547                                              i1l5425 152B  
                                            i1l5601 0AD0                                              i1l6153 003C  
                                            i1l6145 002C                                              i1l6137 0017  
                                            i1l6129 0006                                              i1l5275 1CF8  
                                            i1l4651 09E3                                              i1l4643 09B4  
                                            i1l4635 098B                                              i1l4627 096B  
                                            i1l4619 095B                                              i1l4555 0890  
                                            i1l4563 08A0                                              i1l4547 0884  
                                            i1l4539 0874                                              i1l4467 14DE  
                                            i1l4459 14B6                                              i1l4731 0EBA  
                                            i1l4723 0E96                                              i1l4715 0E57  
                                            i1l4475 1C09                                              i1l4395 0DB6  
                                            i1l4387 0DA4                                              i1l4379 0D74  
                                            i1l4299 0C78                                              i1l4491 124A  
                                            i1l4483 1227                                              i1l1899 06EA  
                                            i1l4811 103D                                              i1l5099 0689  
                                            i1l5259 17D2                                              i1l5195 16D5  
                                            i1l5187 16B6                                              i1l5179 168E  
                                            i1l5283 1D3A                                              i1l5363 1B32  
                                            i1l5339 1B6A                                              i1l5515 1FFA  
                                            i1l5507 1FEE                                              i1l5531 107D  
                                            i1l5523 105A                                              i1l5451 1594  
                                            i1l5443 1573                                              i1l5435 1552  
                                            i1l5427 153B                                              i1l5419 1512  
                                            i1l5611 0B83                                              i1l5603 0AE9  
                                            i1l6147 0031                                              i1l6139 001C  
                                            i1l4901 1C94                                              i1l5381 1E33  
                                            i1l4653 09EB                                              i1l4637 0990  
                                            i1l4645 09B8                                              i1l4629 096F  
                                            i1l4581 08E7                                              i1l4565 08B0  
                                            i1l4573 08C9                                              i1l4557 0895  
                                            i1l4549 0886                                              i1l4469 150C  
                                            i1l4741 0EF7                                              i1l4733 0EC1  
                                            i1l4725 0E9D                                              i1l4717 0E64  
                                            i1l4709 0E27                                              i1l4477 1C11  
                                            i1l4397 0DB8                                              i1l4389 0DAC  
                                            i1l4493 124B                                              i1l4485 1230  
                                            i1l4821 13B2                                              i1l4813 1042  
                                            i1l4805 102A                                              i1l5197 16DF  
                                            i1l5189 16C1                                              i1l5285 1D3D  
                                            i1l5277 1D2C                                              i1l5357 1B4D  
                                            i1l5349 1B51                                              i1l5509 1FF3  
                                            i1l5517 1FFE                                              i1l5533 1081  
                                            i1l5525 1062                                              i1l5541 1094  
                                            i1l5365 1BB6                                              i1l5373 1B3B  
                                            i1l5453 15A8                                              i1l5445 157C  
                                            i1l5437 1559                                              i1l5613 0B85  
                                            i1l5605 0AF1                                              i1l6149 0034  
                                            i1l4903 1C9D                                              i1l5391 1F86  
                                            i1l5383 1E3D                                              i1l4655 09EF  
                                            i1l4647 09C5                                              i1l4639 0998  
                                            i1l4591 0906                                              i1l4583 08EF  
                                            i1l4575 08CE                                              i1l4567 08BC  
                                            i1l4559 089D                                              i1l4751 0F48  
                                            i1l4743 0F09                                              i1l4735 0ED3  
                                            i1l4727 0EA8                                              i1l4719 0E7C  
                                            i1l4671 0DCF                                              i1l4479 1C13  
                                            i1l4399 0DBF                                              i1l4495 1253  
                                            i1l4823 13B8                                              i1l4831 13D9  
                                            i1l4815 1050                                              i1l4807 102E  
                                            i1l4911 008E                                              i1l5199 16E6  
                                            i1l5279 1D2E                                              i1l5287 1B2C  
                                            i1l5359 1B35                                              i1l5543 1097  
                                            i1l5535 1087                                              i1l5527 1069  
                                            i1l5551 1B83                                              i1l5367 1BB9  
                                            i1l5471 1B8B                                              i1l5375 1B3E  
                                            i1l5455 15AD                                              i1l5447 1580  
                                            i1l5439 155D                                              i1l5615 0B8B  
                                            i1l5607 0AF4                                              u301_20 0C95  
                                            i1l5393 1F8C                                              i1l5385 1E41  
                                            i1l4657 09F3                                              i1l4649 09E0  
                                            i1l4593 0914                                              i1l4585 08F7  
                                            i1l4569 08C0                                              i1l4753 0F4F  
                                            i1l4761 0F5F                                              i1l4745 0F1E  
                                            i1l4737 0EDA                                              i1l4729 0EAF  
                                            i1l4681 0DE4                                              i1l4673 0DD0  
                                            i1l4665 0DC5                                              u301_21 0C94  
                                            i1l4497 1255                                              i1l4489 1239  
                                            i1l4833 13DF                                              i1l4825 13CF  
                                            i1l4817 1385                                              i1l4809 1033  
                                            i1l4841 1DFB                                              i1l4921 00CE  
                                            i1l4913 00AC                                              i1l5289 1B45  
                                            i1l5481 1B5B                                              i1l5537 108B  
                                            i1l5529 1078                                              i1l5369 1BBB  
                                            i1l5457 15B1                                              i1l5449 158A  
                                            i1l5617 0BA4                                              i1l5609 0AFA  
                                            i1l5395 1F92                                              i1l5387 1F7F  
                                            i1l5379 1E30                                              i1l4659 09F5  
                                            i1l4595 0918                                              i1l4587 08FF  
                                            i1l4579 08D7                                              i1l4763 0F63  
                                            i1l4755 0F53                                              i1l4747 0F35  
                                            i1l4739 0EEC                                              i1l4691 0DF8  
                                            i1l4683 0DEC                                              i1l4675 0DD5  
                                            i1l4667 0DC9                                              i1l4499 1259  
                                            i1l4827 13D4                                              i1l4819 139D  
                                            i1l4843 1DFD                                              i1l4931 00F4  
                                            i1l4923 00D3                                              i1l4915 00AF  
                                            i1l4907 0085                                              i1l5491 1BAF  
                                            i1l5539 1091                                              i1l5547 1B7F  
                                            i1l5555 1B85                                              i1l5467 1BBD  
                                            i1l5475 1B6E                                              i1l5459 15B2  
                                            i1l5619 0BAB                                              i1l5571 0A04  
                                            i1l5389 1F80                                              i1l5397 1F98  
                                            i1l4597 0919                                              i1l4589 0901  
                                            i1l4781 0FAD                                              i1l4773 0F84  
                                            i1l4765 0F64                                              i1l4757 0F54  
                                            i1l4749 0F3C                                              i1l4693 0DFD  
                                            i1l4685 0DF1                                              i1l4677 0DDA  
                                            i1l4669 0DCB                                              i1l4837 13FF  
                                            i1l4861 06EF                                              i1l4853 06A9  
                                            i1l4845 1D17                                              i1l4933 00FA  
                                            i1l4941 011F                                              i1l4925 00D8  
                                            i1l4917 00C3                                              i1l4909 0086  
                                            i1l5485 1BCC                                              i1l5493 1BB4  
                                            i1l5549 1B7F                                              i1l5557 1B85  
                                            i1l5581 0A31                                              i1l5573 0A0A  
                                            i1l5399 1BC4                                              i1l4599 0920  
                                            i1l4791 0FDF                                              i1l4775 0F89  
                                            i1l4783 0FB1                                              i1l4767 0F68  
                                            i1l4759 0F5B                                              i1l4695 0E02  
                                            i1l4687 0DF3                                              i1l4679 0DE2  
                                            i1l4871 073B                                              i1l4863 0707  
                                            i1l4855 06C1                                              i1l4847 1D1B  
                                            i1l4943 0131                                              i1l4935 0106  
                                            i1l4927 00DD                                              i1l4919 00C6  
                                            i1l5479 1B59                                              i1l5487 1BD2  
                                            i1l5559 1B89                                              i1l5671 10AC  
                                            i1l5591 0A49                                              i1l5583 0A33  
                                            i1l5575 0A21                                              i1l5911 1ECC  
                                            u302_20 0CAA                                              i1l4793 0FE1  
                                            i1l4785 0FBE                                              i1l4777 0F91  
                                            i1l4769 0F7C                                              i1l4697 0E0A  
                                            i1l4689 0DF7                                              u302_21 0CA9  
                                            i1l4873 074C                                              i1l4857 06DC  
                                            i1l4849 1D1C                                              i1l4961 017F  
                                            i1l4945 0137                                              i1l4953 015C  
                                            i1l4937 010F                                              i1l4929 00E3  
                                            i1l5497 1FD1                                              i1l5681 1F11  
                                            i1l5673 10B2                                              i1l5665 1099  
                                            i1l5593 0A89                                              i1l5585 0A37  
                                            i1l5577 0A2E                                              i1l5569 0A01  
                                            i1l5913 1ECD                                              i1l4891 1B73  
                                            i1l4795 0FEC                                              i1l4787 0FC8  
                                            i1l4779 0F95                                              i1l4699 0E0C  
                                            i1l4875 0763                                              i1l4867 071C  
                                            i1l4859 06E9                                              i1l4883 1002  
                                            i1l4971 0230                                              i1l4963 018C  
                                            i1l4955 0165                                              i1l4947 0143  
                                            i1l5499 1FD1                                              i1l5683 1F16  
                                            i1l5675 10BA                                              i1l5667 109C  
                                            i1l5595 0AA7                                              i1l5587 0A3E  
                                            i1l5579 0A30                                              i1l5915 1EDF  
                                            i1l4893 1B76                                              i1l4797 0FF0  
                                            i1l4789 0FD6                                              u310_25 0D35  
                                            i1l4877 076C                                              i1l4869 0733  
                                            i1l4885 1007                                              i1l4973 023A  
                                            i1l4981 0293                                              i1l4965 01B8  
                                            i1l4957 0167                                              i1l4949 014C  
                                            i1l5941 1327                                              i1l5685 1F19  
                                            i1l5677 10C2                                              i1l5669 10A4  
                                            i1l5597 0AC7                                              i1l5589 0A46  
                                            i1l5917 1EE5                                              i1l4895 1B79  
                                            i1l4799 0FF1                                              i1l4879 0783  
                                            i1l4887 100D                                              i1l4991 02D9  
                                            i1l4975 0266                                              i1l4967 01E0  
                                            i1l4983 02BA                                              i1l5871 07B6  
                                            i1l5951 1359                                              i1l5943 1338  
                                            i1l5935 130D                                              i1l5687 1F2D  
                                            i1l5679 10C7                                              i1l5599 0ACA  
                                            i1l5863 1B65                                              i1l5919 1EEA  
                                            u311_20 0D3F                                              u303_20 0CAE  
                                            i1l4897 1B7C                                              u311_21 0D3E  
                                            u303_21 0CAD                                              i1l4889 1011  
                                            i1l4993 02DF                                              i1l4985 02BF  
                                            i1l4977 026A                                              i1l4969 0207  
                                            i1l5881 07E7                                              i1l5873 07C3  
                                            i1l5865 0796                                              i1l5953 135F  
                                            i1l5945 133E                                              i1l5937 130F  
                                            i1l5883 1B41                                              i1l4899 1C91  
                                            i1l4995 02E3                                              i1l4987 02C4  
                                            i1l5875 07C6                                              i1l5867 0799  
                                            i1l5963 1373                                              i1l5955 1364  
                                            i1l5947 1343                                              i1l5939 1322  
                                            i1l5891 1B61                                              i1l4997 02EB  
                                            i1l4989 02CC                                              i1l5877 07CC  
                                            i1l5869 079F                                              i1l5965 137A  
                                            i1l5957 1368                                              i1l5949 1348  
                                            i1l5893 1B5D                                              i1l4999 02ED  
                                            i1l5879 07E0                                              i1l5967 137C  
                                            i1l5959 136C                                              u320_20 0D87  
                                            u312_20 0D44                                              u304_20 0CB8  
                                            u312_21 0D43                                              u304_21 0CB7  
                                            i1l5969 1380                                              _INLVLA 038C  
                                            _INLVLB 038D                                              _INLVLC 038E  
                                            u400_25 0F55                                              u320_25 0D83  
                                            u401_20 0F63                                              u321_20 0D96  
                                            u313_20 0D4E                                              u401_21 0F62  
                                            u321_21 0D95                                              u313_21 0D4D  
                                            u305_25 0CBC                                              u410_20 0FF0  
                                            u402_20 0F68                                              u322_20 0D9F  
                                            u314_20 0D54                                              u306_20 0CDE  
                                            u330_20 1F58                                              u410_21 0FEF  
                                            u402_21 0F67                                              u322_21 0D9E  
                                            u314_21 0D53                                              u306_21 0CDD  
                                            u330_21 1F57                                              u306_23 0CDA  
                                            u331_20 1C2F                                              u403_20 0F7C  
                                            u323_20 0DA4                                              u315_20 0D59  
                                            u307_20 0D0D                                              u411_20 102E  
                                            u331_21 1C2E                                              u403_21 0F7B  
                                            u323_21 0DA3                                              u315_21 0D58  
                                            u307_21 0D0C                                              u411_21 102D  
                                            u332_20 1C35                                              u340_20 149A  
                                            u404_20 0F83                                              u324_20 0DB1  
                                            u316_20 0D5F                                              u308_20 0D26  
                                            u420_20 13F8                                              u412_20 1050  
                                            u500_20 15AD                                              u332_21 1C34  
                                            u340_21 1499                                              u404_21 0F82  
                                            u324_21 0DB0                                              u316_21 0D5E  
                                            u308_21 0D25                                              u412_21 104F  
                                            u500_21 15AC                                              u412_25 104C  
                                            u341_20 14B6                                              u405_20 0F89  
                                            u325_20 0DB6                                              u317_20 0D66  
                                            u309_20 0D2B                                              u413_20 13AA  
                                            u421_20 1E14                                              u333_20 1E53  
                                            u501_20 15B1                                              u341_21 14B5  
                                            u405_21 0F88                                              u325_21 0DB5  
                                            u317_21 0D65                                              u309_21 0D2A  
                                            u421_21 1E13                                              u333_21 1E52  
                                            u501_21 15B0                                              u413_25 13A6  
                                            u342_20 14C2                                              u406_20 0F95  
                                            u326_20 0DC3                                              u318_20 0D6C  
                                            u414_20 13B8                                              u430_20 0759  
                                            u422_20 1D1B                                              u510_20 0AA7  
                                            u342_21 14C1                                              u406_21 0F94  
                                            u326_21 0DC2                                              u318_21 0D6B  
                                            u414_21 13B7                                              u422_21 1D1A  
                                            u510_21 0AA6                                              u350_25 1262  
                                            u430_25 0755                                              u334_25 1E58  
                                            u343_20 14DE                                              u327_20 1EFC  
                                            u407_20 0FA3                                              u319_20 0D78  
                                            u351_20 1270                                              u415_20 13C5  
                                            u431_20 0763                                              u423_20 06CE  
                                            u503_20 1FD8                                              u511_20 0AC7  
                                            u343_21 14DD                                              u327_21 1EFB  
                                            u319_21 0D77                                              u351_21 126F  
                                            u431_21 0762                                              u503_21 1FD7  
                                            u511_21 0AC6                                              u407_25 0F9F  
                                            u415_25 13C1                                              u423_25 06CA  
                                            u335_25 1E5D                                              u360_20 0890  
                                            u344_20 150C                                              u408_20 0FBE  
                                            u352_20 1277                                              u416_20 13CF  
                                            u432_20 0779                                              u424_20 06E9  
                                            u280_20 0805                                              u440_20 00FA  
                                            u336_20 1E67                                              u504_20 1FF3  
                                            u360_21 088F                                              u344_21 150B  
                                            u408_21 0FBD                                              u352_21 1276  
                                            u416_21 13CE                                              u424_21 06E8  
                                            u280_21 0804                                              u440_21 00F9  
                                            u336_21 1E66                                              u504_21 1FF2  
                                            u344_25 1508                                              u328_25 1F01  
                                            u408_25 0FBA                                              u432_25 0775  
                                            u424_25 06E5                                              u361_20 0895  
                                            u337_20 1136                                              u329_20 1F0C  
                                            u409_20 0FD6                                              u345_20 1C11  
                                            u417_20 13DF                                              u433_20 0783  
                                            u425_20 06EF                                              u281_20 080A  
                                            u441_20 0131                                              u505_20 1062  
                                            u361_21 0894                                              u337_21 1135  
                                            u329_21 1F0B                                              u409_21 0FD5  
                                            u345_21 1C10                                              u417_21 13DE  
                                            u433_21 0782                                              u425_21 06EE  
                                            u281_21 0809                                              u441_21 0130  
                                            u505_21 1061                                              u409_25 0FD2  
                                            u353_25 1279                                              u370_20 0945  
                                            u362_20 08B0                                              u338_20 1152  
                                            u290_20 0BFB                                              u354_20 1286  
                                            u346_20 1230                                              u418_20 13EC  
                                            u426_20 06FD                                              u434_20 1027  
                                            u282_20 081A                                              u450_20 02DF  
                                            u442_20 0137                                              u506_20 1069  
                                            u522_20 1EDF                                              u370_21 0944  
                                            u362_21 08AF                                              u338_21 1151  
                                            u290_21 0BFA                                              u354_21 1285  
                                            u346_21 122F                                              u434_21 1026  
                                            u282_21 0819                                              u450_21 02DE  
                                            u442_21 0136                                              u506_21 1068  
                                            u522_21 1EDE                                              u418_25 13E8  
                                            u426_25 06F9                                              u435_20 1C9C  
                                            u371_20 094D                                              u363_20 08CE  
                                            u339_20 116C                                              u291_20 0C14  
                                            u355_20 128B                                              u347_20 1246  
                                            u419_20 13F7                                              u427_20 071B  
                                            u283_20 083A                                              u451_20 02E3  
                                            u443_20 017E                                              u507_20 1087  
                                            u515_20 10A4                                              u523_20 1EE5  
                                            u435_21 1C9B                                              u371_21 094C  
                                            u363_21 08CD                                              u339_21 116B  
                                            u291_21 0C13                                              u355_21 128A  
                                            u419_21 13F5                                              u427_21 071A  
                                            u283_21 0839                                              u451_21 02E2  
                                            u443_21 017D                                              u507_21 1086  
                                            u515_21 10A3                                              u523_21 1EE4  
                                            u339_25 1168                                              u347_25 1242  
                                            u283_25 0836                                              u380_20 099C  
                                            u364_20 0906                                              u356_20 0861  
                                            u292_20 0C18                                              u284_20 0BC2  
                                            u348_20 1259                                              u428_20 0729  
                                            u460_20 057F                                              u452_20 02F3  
                                            u444_20 01E0                                              u436_20 00AC  
                                            u516_20 10AC                                              u508_20 0A3E  
                                            u540_20 0014                                              u380_21 099B  
                                            u364_21 0905                                              u356_21 0860  
                                            u292_21 0C17                                              u284_21 0BC1  
                                            u348_21 1258                                              u460_21 057E  
                                            u452_21 02F2                                              u444_21 01DF  
                                            u436_21 00AB                                              u516_21 10AB  
                                            u508_21 0A3D                                              u540_21 0013  
                                            u372_25 0950                                              u428_25 0725  
                                            u381_20 09AA                                              u373_20 095A  
                                            u357_20 0867                                              u293_20 0C54  
                                            u285_20 0BC8                                              u349_20 1260  
                                            u429_20 0733                                              u461_20 0583  
                                            u453_20 03E5                                              u445_20 0207  
                                            u437_20 00D3                                              u525_20 1327  
                                            u517_20 10BA                                              u509_20 0A46  
                                            u541_20 001C                                              u373_21 0959  
                                            u357_21 0866                                              u293_21 0C53  
                                            u285_21 0BC7                                              u349_21 125F  
                                            u429_21 0732                                              u461_21 0582  
                                            u453_21 03E4                                              u445_21 0206  
                                            u437_21 00D2                                              u525_21 1326  
                                            u517_21 10B9                                              u509_21 0A45  
                                            u541_21 001B                                              u381_25 09A6  
                                            u365_25 0907                                              u293_25 0C50  
                                            u453_25 03E1                                              u382_20 09C5  
                                            u358_20 086C                                              u390_20 0E02  
                                            u294_20 0C5D                                              u286_20 0BCD  
                                            u462_20 05AE                                              u454_20 0437  
                                            u446_20 0230                                              u438_20 00D8  
                                            u470_20 1464                                              u526_20 133E  
                                            u518_20 10C2                                              u542_20 0021  
                                            u382_21 09C4                                              u358_21 086B  
                                            u390_21 0E01                                              u294_21 0C5B  
                                            u286_21 0BCC                                              u462_21 05AD  
                                            u454_21 0436                                              u446_21 022F  
                                            u438_21 00D7                                              u470_21 1463  
                                            u526_21 133D                                              u518_21 10C1  
                                            u542_21 0020                                              u382_25 09C1  
                                            u374_25 095C                                              u366_25 090E  
                                            u470_25 1460                                              u383_20 09E0  
                                            u375_20 096A                                              u367_20 0918  
                                            u359_20 088A                                              u391_20 0E19  
                                            u295_20 0C5E                                              u287_20 0BE9  
                                            u463_20 064E                                              u455_20 0459  
                                            u447_20 0292                                              u439_20 00F4  
                                            u471_20 146B                                              u527_20 1348  
                                            u543_20 002C                                              u383_21 09DF  
                                            u375_21 0969                                              u367_21 0917  
                                            u359_21 0889                                              u391_21 0E18  
                                            u287_21 0BE8                                              u463_21 064D  
                                            u455_21 0458                                              u447_21 0291  
                                            u439_21 00F3                                              u471_21 146A  
                                            u527_21 1347                                              u543_21 002B  
                                            u383_25 09DC                                              u463_25 064A  
                                            u384_20 09F3                                              u376_20 096F  
                                            u392_20 0E1E                                              u296_20 0C6E  
                                            u288_20 0BF0                                              u464_20 065C  
                                            u456_20 045E                                              u448_20 02BA  
                                            u472_20 1478                                              u480_20 16FD  
                                            u528_20 135F                                              u544_20 0031  
                                            u384_21 09F2                                              u376_21 096E  
                                            u392_21 0E1D                                              u296_21 0C6D  
                                            u288_21 0BEF                                              u464_21 065B  
                                            u456_21 045D                                              u448_21 02B9  
                                            u472_21 1477                                              u480_21 16FC  
                                            u528_21 135E                                              u544_21 0030  
                                            u368_25 091A                                              u464_25 0658  
                                            u472_25 1474                                              u377_20 0983  
                                            u369_20 0932                                              u385_20 0DCF  
                                            u297_20 0C78                                              u289_20 0BF6  
                                            u465_20 0682                                              u457_20 04BD  
                                            u449_20 02C4                                              u473_20 11DB  
                                            u481_20 177E                                              u529_20 1372  
                                            u545_20 0038                                              u377_21 0982  
                                            u369_21 0931                                              u385_21 0DCE  
                                            u297_21 0C77                                              u289_21 0BF5  
                                            u465_21 0680                                              u457_21 04BC  
                                            u449_21 02C3                                              u473_21 11DA  
                                            u481_21 177D                                              u529_21 1371  
                                            u545_21 0037                                              u369_25 092E  
                                            u393_25 0E97                                              u378_20 098A  
                                            u386_20 0DD5                                              u466_20 0683  
                                            u458_20 04F4                                              u474_20 1222  
                                            u490_20 153B                                              u546_20 003C  
                                            u538_20 000A                                              _OSCCON 0099  
                                            u378_21 0989                                              u386_21 0DD4  
                                            u458_21 04F3                                              u474_21 1221  
                                            u490_21 153A                                              u546_21 003B  
                                            u538_21 0009                                              u394_25 0EC2  
                                            u298_25 0C7C                                              u379_20 0990  
                                            u395_20 0F14                                              u387_20 0DDA  
                                            u299_20 0C8C                                              u467_20 068E  
                                            u459_20 0563                                              u539_20 000F  
                                            u379_21 098F                                              u387_21 0DD9  
                                            u299_21 0C8B                                              u467_21 068D  
                                            u459_21 0562                                              u539_21 000E  
                                            u483_25 1D77                                              u395_25 0F10  
                                            u459_25 055F                                              u491_25 154C  
                                            u396_20 0F2B                                              u388_20 0DF7  
                                            u468_20 140B                                              u484_20 1EA9  
                                            u492_20 1558                                              u388_21 0DF6  
                                            u468_21 140A                                              u484_21 1EA8  
                                            u492_21 1557                                              u396_25 0F27  
                                            u389_20 0DFD                                              u469_20 1435  
                                            u477_20 1685                                              u389_21 0DFC  
                                            u469_21 1434                                              u477_21 1684  
                                            u485_25 1D0D                                              u397_25 0F36  
                                            u493_25 1566                                              u478_20 16AD  
                                            u486_20 1DF5                                              u494_20 1572  
                                            u478_21 16AC                                              u486_21 1DF4  
                                            u494_21 1571                                              u398_25 0F49  
                                            u590_27 0BB1                                              u487_20 1E4C  
                                            u399_20 0F53                                              u479_20 16DF  
                                            u487_21 1E4B                                              u399_21 0F52  
                                            u479_21 16DE                                              u495_25 1576  
                                            u591_27 07BC                                              u496_20 1580  
                                            u488_20 1517                                              u496_21 157F  
                                            u488_21 1516                                              u592_27 07ED  
                                            u497_20 1586                                              u489_20 151B  
                                            u497_21 1585                                              u489_21 151A  
                                            u593_27 1BE9                                              u498_20 158A  
                                            u498_21 1589                                              u594_27 1CFE  
                                            u499_20 159E                                              u499_25 159A  
                                            u588_27 0A27                                              u589_27 0A34  
                                            _SPBRGH 019C                                              _SPBRGL 019B  
                                            _TX1REG 019A                                              _TX1STA 019E  
                                            _TRISC3 0473                                              _TRISC4 0474  
                                  ?_CCP2_Initialize 0070                              __end_of_LCD_Write_4Bit 1DAF  
                           __end_of_I2C1_EVENT_IDLE 1B5D                                    __end_of___xxtofl 15BB  
                           __end_of_I2C1_EVENT_NACK 1B85                             __end_of_I2C1_EVENT_STOP 1BDC  
                            __end_of_LCD_Write_Char 1D81                         __end_of_I2C1_InterruptClear 1B2C  
                                            _Timer0 18C2                                              _Timer2 1830  
                                            _Timer4 18AA                           __end_of_IO_Expander_Write 1D56  
                                      vfprintf@cfmt 00E7                                              ___flge 1485  
                                            ___fleq 1122                __end_of_TMR2_DefaultOverflowCallback 1B26  
                      _TMR2_DefaultOverflowCallback 1B25                                           ??___fladd 0020  
                                            ___wmul 1E4D                                           ??___fldiv 0048  
                                 __end_of_TMR1_Stop 1B41                                           ??___flneg 0074  
                                         ??___flmul 002E                                           ??___flsub 007C  
                                         ??___fltol 0074                                              _efgtoa 0083  
                                            _floorf 06A9                                              _memcpy 1001  
                              read_prec_or_width@ap 0076                                  _I2C1_RestartEnable 1B38  
                           shift_out_to_motors@byte 01C1                             __end_of_TMR4_Initialize 1D6B  
                                         ?_I2C1_ISR 0070                                    ?_TMR0_Custom_ISR 0070  
                   __end_of_I2C1_EVENT_SEND_RD_ADDR 1BD4                                              pad@buf 007B  
                                 ?_CLOCK_Initialize 0070                                              _strcpy 1DFA  
             __end_of_TMR4_OverflowCallbackRegister 1BAF                       _TMR4_OverflowCallbackRegister 1BA9  
                                            fputc@c 0070                                              fputs@c 0020  
                                            fputs@i 0021                                              fputs@s 0023  
                                 __end_of_Backlight 1BCC                                  ??_CLOCK_Initialize 01BE  
                                   ___fpclassifyf@e 0020                     __end_of_I2C1_EVENT_SEND_WR_ADDR 1BB6  
                                   ___fpclassifyf@u 0022                                     ___fpclassifyf@x 0070  
                               ?_I2C1_RestartEnable 0070                            ADC_GetConversion@channel 0073  
                       CCP2_LoadDutyValue@dutyValue 01BE                                              putch@c 0070  
                       EUSART_ReceiveISR@tempRxHead 0145                                    __end_of_vfprintf 1EAC  
           INT_SetInterruptHandler@InterruptHandler 01BE                                           ??_sprintf 00EF  
                                            xtoa@fp 002D                                          ___flge@ff1 0040  
                                        ___flge@ff2 0044                                     ??___fpclassifyf 0074  
                                  ?_TMR1_Initialize 0070                                        ___xxtofl@arg 0022  
                                      ___xxtofl@exp 0021                                   _SYSTEM_Initialize 1F59  
                                      ___xxtofl@val 0074                                          ___fleq@ff1 0070  
                                        ___fleq@ff2 0074             __end_of_Timer0_OverflowCallbackRegister 1BFF  
                 ??_Timer0_OverflowCallbackRegister 01C0                    ?_Timer0_OverflowCallbackRegister 01BE  
                   _Timer0_OverflowCallbackRegister 1BF6                             __end_of__initialization 007F  
                                     ??_I2C1_IsAddr 0070                                       ??_I2C1_IsData 0070  
                                         ?_LCD_Init 0070                                       ??_I2C1_IsNack 0070  
                                        ___flneg@f1 0070                                     ?_LCD_Write_4Bit 0070  
                                ?_SYSTEM_Initialize 0070                                        i1LCD_CMD@CMD 0075  
                                        ___fltol@f1 0070                                     ?_LCD_Write_Char 0070  
                              ??_I2C1_RestartEnable 0070                                       __end_of_UART1 1830  
                                    __pcstackCOMMON 0070                                        __pidataBANK2 0003  
                               ??_SYSTEM_Initialize 01C0                               TMR0_Custom_ISR@buffer 0133  
                                     __end_of_fputc 0857                                       __end_of_fputs 1F59  
                        ??_I2C1_ErrorInterruptClear 0070                       ?_TMR2_DefaultOverflowCallback 0070  
                                     __end_of_putch 1B24                                          ??_I2C1_ISR 0076  
                                  ?_TMR2_Initialize 0070                                      _OPTION_REGbits 0095  
                              _eusartRxStatusBuffer 2370                               __end_of_I2C1_EVENT_RX 1099  
                             __end_of_I2C1_EVENT_TX 2000                     ??_TMR2_OverflowCallbackRegister 01C0  
                                 _I2C1_EventHandler 1099                                             ??_fputc 0073  
                         __end_of_SYSTEM_Initialize 1F7E                                             ??_fputs 0079  
                                           ??_putch 0070                                          __pbssBANK2 0147  
                                        __pbssBANK3 01A0                                          __pbssBANK4 0220  
                                        __pbssBANK5 02A0                                  ?_I2C1_EventHandler 0070  
                                        ??_LCD_Init 01C4                               _I2C1_StatusFlagsClear 1B49  
                    ?_TMR1_OverflowCallbackRegister 01BE                                    ?_I2C1_EVENT_IDLE 0070  
                                  ?_I2C1_EVENT_NACK 0070                                    ?_I2C1_EVENT_STOP 0070  
                                 __end_of__Umul8_16 1F11                                 ??_I2C1_EventHandler 0074  
                                        __pmaintext 15BB                                 __end_of_I2C1_IsAddr 1BC4  
                                           ?___flge 0040                                             ?___fleq 0070  
                               __end_of_I2C1_IsData 1B73                                 __end_of_I2C1_IsNack 1B91  
                                           ?___wmul 0070                                  _CCP2_LoadDutyValue 1DC7  
                                        __pintentry 0004                                             ?_efgtoa 00A0  
                                   _I2C1_Initialize 1CC5                                _EUSART_AutoBaudQuery 0000  
                                           _CCP1CON 0293                                             _CCP2CON 029A  
                                           ?_floorf 005A                                             _CCP1PPS 0E14  
                                           _CCP2PPS 0E15                                             ?_memcpy 0070  
                                  ?_TMR4_Initialize 0070                               __end_of_I2C1_NackSend 1B59  
                                           ?_strcpy 0070                               __end_of_I2C1_BusReset 1B49  
                                   _EUSART_IsTxDone 0000                                 ?_CCP2_LoadDutyValue 01BE  
                                           _LCD_CMD 1DAF                                       _eusartRxCount 0168  
         __end_of_EUSART_RxCompleteCallbackRegister 1C4E                 ??_EUSART_RxCompleteCallbackRegister 01C0  
                ?_EUSART_RxCompleteCallbackRegister 01BE                   _EUSART_RxCompleteCallbackRegister 1C42  
                                         ?___xxtofl 0074                                     _EUSART_ErrorGet 0000  
                                         _I2C1_Read 0000                                           _I2C1_Host 184C  
                         __end_of_I2C1_EventHandler 10DC                              _I2C1_ErrorEventHandler 1F11  
                                           _OSCTUNE 0098                                             _SSP1ADD 0212  
                                           _SLRCONA 030C                                             _SLRCONB 030D  
                                           _SLRCONC 030E                                        ??_TMR1_Start 0070  
                                           _SSP1BUF 0211                      ?_TMR4_OverflowCallbackRegister 01BE  
                          __end_of_I2C1_EVENT_ERROR 1B8B                            __end_of_I2C1_EVENT_RESET 1BBD  
                     __end_of_I2C1_CallbackRegister 1C5A                                ??_CCP2_LoadDutyValue 01C0  
                                           _i2c_add 0166                               __end_of_I2C1_StopSend 1B2F  
                  ??_Timer0_DefaultOverflowCallback 007E                     ?_Timer0_DefaultOverflowCallback 0070  
                                           ___fladd 0BB9                                             ___fldiv 0857  
                                           ___flneg 1C09                                             ___flmul 0DC5  
                                           ___flsub 1E6C                                             ___fltol 1227  
                                 _Timer0_Initialize 1D81                                           ?_vfprintf 00E2  
                                __end_of_TMR1_Start 1B3E                                  ?_Timer0_Initialize 0070  
                                  ??_LCD_Set_Cursor 0077                                             __ptext1 10DC  
                                           __ptext2 1F59                                             __ptext3 1D81  
                                           __ptext4 1BF6                                             __ptext5 1D56  
                                           __ptext6 1BA9                                             __ptext7 1CD9  
                                           __ptext8 1BA3                                             __ptext9 1E15  
                                 i1_I2C_Master_Wait 1C2A                                   i1_I2C_Master_Stop 1B79  
                                         _T1CONbits 0018                                    i1_LCD_Write_4Bit 1CED  
                                         _T2CONbits 001C                      ??_TMR2_DefaultOverflowCallback 0070  
                             read_prec_or_width@fmt 0023                                 _I2C1_RestartDisable 1B35  
                                        ??___xxtofl 0078                                  ?i1_I2C_Master_Wait 0070  
                                ?i1_I2C_Master_Stop 0070                                           _T4CONbits 0415  
                          ??_PIN_MANAGER_Initialize 01BE                                           _T2HLTbits 001D  
                                     ?_I2C1_AckSend 0070                             _INT_SetInterruptHandler 1BED  
                               ??_Timer0_Initialize 01C0                                             efgtoa@c 00A4  
                                           efgtoa@d 00B4                                             efgtoa@e 00B9  
                                           efgtoa@f 00A0                                             efgtoa@g 00CE  
                                           efgtoa@h 00C3                                             efgtoa@i 00C1  
                                           efgtoa@l 00C7                                             efgtoa@m 00B6  
                                           efgtoa@n 00CC                                             efgtoa@p 00AB  
                                           efgtoa@t 00AD                                             efgtoa@u 00D2  
                                           efgtoa@w 00BB                                     _i2c1_eventTable 1860  
                                         _LCD_Clear 1BE4                                           _T4HLTbits 0416  
                                           _sprintf 1EAC                                             clrloop0 1C67  
     TMR4_OverflowCallbackRegister@InterruptHandler 01BE       TMR2_OverflowCallbackRegister@InterruptHandler 01BE  
                              end_of_initialization 007F                                 ??i1_I2C_Master_Wait 0070  
                               ??i1_I2C_Master_Stop 0070                                             floorf@e 0068  
                                         _T2RSTbits 001F                                             floorf@m 0064  
                                           floorf@u 006A                                             floorf@x 005A  
                                           memcpy@d 0076                                             memcpy@n 0071  
                                         _T4RSTbits 0418                                             memcpy@s 0077  
                            ?_I2C1_StatusFlagsClear 0070                                             fputc@fp 0072  
                                           fputs@fp 0078                                           i1_LCD_CMD 1D02  
                                       _I2C1_IsAddr 1BBD                                         _I2C1_IsData 1B6E  
                                       _I2C1_IsNack 1B8B                                  _read_prec_or_width 11C6  
                                       _I2C1_IsBusy 0000                                   _EUSART_Initialize 1FA4  
                              ?_I2C1_RestartDisable 0070                             __end_of_I2C1_Initialize 1CD9  
                         __end_of_Timer0_Initialize 1D97                                  ?_EUSART_Initialize 0070  
                                 __end_of_vfpfcnvrt 1800                                          efgtoa@mode 00B2  
                                        efgtoa@sign 00CB                                   _EUSART_ReceiveISR 130D  
                               ?_read_prec_or_width 0076                                    vfpfcnvrt@convarg 00DA  
                                  _I2C1_DataReceive 1B2F                                          ??_vfprintf 00E5  
                                ?_EUSART_ReceiveISR 0070                           __end_ofi1_I2C_Master_Wait 1C36  
                         __end_ofi1_I2C_Master_Stop 1B7F                                             strcpy@d 0074  
                               ??_EUSART_Initialize 01C0                                           _PORTCbits 000E  
                                         _TMR1_Stop 1B3E                                           _TMR2_Stop 0000  
                             _TMR1_OverflowCallback 01B4                                           _TMR4_Stop 0000  
                                        LCD_CMD@CMD 01C3                                           _SSPDATPPS 0E21  
                                         _SSPCLKPPS 0E20                                         ___fladd@grs 007B  
                               ??_EUSART_ReceiveISR 0140                                      ??_I2C1_AckSend 0070  
                                     ___xxtofl@sign 0020        TMR1_OverflowCallbackRegister@CallbackHandler 01BE  
    Timer0_OverflowCallbackRegister@CallbackHandler 01BE                                          ?_LCD_Clear 0070  
                              ??_read_prec_or_width 0078                                         ___fldiv@grs 0054  
                                       ___fldiv@rem 004D                                 _EUSART_Deinitialize 0000  
                                         _Backlight 1BC4                                    ??_LCD_Write_4Bit 01C0  
                               i1_IO_Expander_Write 1CB2                                   LCD_Write_String@i 0079  
                                  ??_LCD_Write_Char 0074                                         ___flmul@grs 0034  
                         __end_of_EUSART_Initialize 1FD1                                          ?i1_LCD_CMD 0070  
                                       _CCP1CONbits 0293                                 _shift_out_to_motors 10DC  
                                       _CCP2CONbits 029A                               ??_I2C1_RestartDisable 0070  
                           i1IO_Expander_Write@Data 0071                           __end_of_EUSART_ReceiveISR 1385  
                              ?i1_IO_Expander_Write 0070                                      __end_of_Timer0 18CE  
                                    __end_of_Timer2 183C                                      __end_of_Timer4 18B6  
                      __end_of_INTERRUPT_Initialize 1C66                                      _I2C1_ERROR_ISR 1B5D  
                                    __end_of___flge 1510                                      __end_of___fleq 1170  
                                       vfpfcnvrt@ap 006F                                         vfpfcnvrt@cp 00E0  
                                       vfpfcnvrt@fp 00DE                                      __end_of___wmul 1E6C  
                                  _LCD_Write_String 1E30                          __end_ofi1_I2C_Master_Start 1B79  
                                    __end_of_efgtoa 06A9                          __end_of_I2C1_ReceiveEnable 1B35  
                                      _EUSART_Write 0000                          __end_ofi1_I2C_Master_Write 1CA0  
                           __end_of_i2c1_eventTable 1872                                      _ADC_Initialize 1C1F  
                                    __end_of_floorf 0794                                ?_shift_out_to_motors 0070  
                                        ?_TMR1_Stop 0070                                      __end_of_memcpy 1028  
                                        floorf@F521 01A0                           ??_INT_SetInterruptHandler 01C0  
                                    __end_of_strcpy 1E15                                 start_initialization 0043  
                                       __end_of_pad 1058                                          ?_Backlight 0070  
                                 ??_UART_Custom_ISR 012D                                   ??_I2C_Master_Init 01BE  
                                 ??_I2C_Master_Wait 01BE                             _I2C1_EVENT_SEND_RD_ADDR 1BCC  
                                 ??_I2C_Master_Stop 01BE                           _EUSART_RxInterruptHandler 01BA  
                             __end_of___fpclassifyf 1404                                    ?_I2C1_Initialize 0070  
                           _I2C1_EVENT_SEND_WR_ADDR 1BAF                              __end_of_I2C1_ERROR_ISR 1B61  
                                       vfprintf@fmt 00E2                          _EUSART_FramingErrorHandler 015B  
                                          ??___flge 0048                                            ??___fleq 0078  
                             ??i1_IO_Expander_Write 0071                                    _I2C1_IsRxBufFull 1B51  
                                          ??___wmul 0074                                         _CCPTMRSbits 029E  
                                          ??_efgtoa 00A5                              __end_of_ADC_Initialize 1C2A  
                                         __Umul8_16 1EEE                                         __pdataBANK2 016C  
                            i1I2C_Master_Write@data 0070                                            ??_floorf 005E  
                                          ??_memcpy 0073                               ??_shift_out_to_motors 01BE  
                   ??_TMR1_OverflowCallbackRegister 01C0                                            ??_strcpy 0072  
                                         ___fladd@a 0074                                           ___fladd@b 0070  
                           ?_I2C1_ErrorEventHandler 0070                                            ?_LCD_CMD 0070  
                                         ___fldiv@a 0040                                           ___fldiv@b 0044  
                                       __pbssBIGRAM 2370                                           ___flmul@a 002A  
                                         ___flmul@b 0026                                           ___flsub@a 0040  
                                         ___flsub@b 0044                                           ___latbits 0002  
                                     __pcstackBANK0 0020                                       __pcstackBANK1 00A0  
                                     __pcstackBANK2 0120                                       __pcstackBANK3 01BE  
                                       ??_LCD_Clear 0076                           ?_I2C1_ErrorInterruptClear 0070  
                      __end_of_I2C1_DefaultCallback 1B25                                   ?_I2C1_EVENT_ERROR 0070  
                                 ?_I2C1_EVENT_RESET 0070                                shift_out_to_motors@i 01C2  
                                       ??i1_LCD_CMD 0074                               _TMR2_OverflowCallback 01B8  
                                ??_I2C1_EVENT_ERROR 0070                                   ??_CCP1_Initialize 01BE  
                                ??_I2C1_EVENT_RESET 0070                                    _I2C_Master_Start 1B91  
                          __end_ofi1_LCD_Write_4Bit 1D02                                    _I2C_Master_Write 1CA0  
                                       _efgtoa$3155 00AF                                __end_of_I2C1_AckSend 1B51  
                            _PIN_MANAGER_Initialize 1170                               IO_Expander_Write@Data 01BF  
                   ??_TMR4_OverflowCallbackRegister 01C0                                     ?_I2C1_ERROR_ISR 0070  
                        __end_of_Timer0_OverflowISR 1EEE                                            ?___fladd 0070  
                                          ?___fldiv 0040                                           __ptext100 1485  
                                         __ptext101 1122                                           __ptext110 1CB2  
                                         __ptext102 0857                                            ?___flneg 0070  
                                         __ptext111 1C90                                           __ptext103 1E30  
                                         __ptext112 1B79                                           __ptext104 1D6B  
                                         __ptext113 1B73                                           __ptext105 1F7E  
                                         __ptext114 1C2A                                           __ptext106 1BE4  
                                         __ptext115 1B41                                           __ptext107 1D02  
                                         __ptext116 1B22                                           __ptext108 1CED  
                                         __ptext109 1BC4                                            ?___flmul 0026  
                                          ?___flsub 0040                                            ?___fltol 0070  
                                        ?__Umul8_16 0070                                     ?_ADC_Initialize 0070  
                                      _eusartRxHead 016A                                        _eusartRxTail 0169  
                                          _I2C1_ISR 1B61                                I2C_Master_Write@data 01BE  
                      ??_INTERRUPT_InterruptManager 007E                      __end_of_I2C1_ErrorEventHandler 1F34  
                                       ??_TMR1_Stop 0070                                            _BAUD1CON 019F  
                                 ??_CCP2_Initialize 01BE                              _EUSART_TransmitDisable 0000  
            __end_of_Timer0_DefaultOverflowCallback 1B69                      _Timer0_DefaultOverflowCallback 1B65  
                     I2C1_EVENT_ERROR@retEventState 0070                                         ??_Backlight 0072  
                           ??_I2C1_StatusFlagsClear 0070                                            ?_sprintf 00E9  
                          __end_of_I2C1_DataReceive 1B32                                            _T2CLKCON 001E  
                         ??_I2C1_EVENT_SEND_RD_ADDR 0070                                            _T4CLKCON 0417  
                                  _EUSART_IsRxReady 0000                                _INTERRUPT_Initialize 1C5A  
                                  _EUSART_IsTxReady 0000                                      _eusartRxBuffer 02A0  
                                  _CLOCK_Initialize 1BDC                                   ??_TMR0_Custom_ISR 012D  
                                          _LCD_Init 1297                                        ?_I2C1_IsAddr 0070  
                                    ___wmul@product 0074                                        ?_I2C1_IsData 0070  
                                          _LATBbits 010D                                            _LATCbits 010E  
                                      ?_I2C1_IsNack 0070                           ??_I2C1_EVENT_SEND_WR_ADDR 0071  
                             _I2C1_CallbackRegister 1C4E                                           clear_ram0 1C66  
                                          _PIE1bits 0090                                            _PIE2bits 0091  
                                 _eusartRxLastError 01B0                                          _I2C1_Close 1D2C  
                                          _PIR1bits 0010                                            _PIR2bits 0011  
                                        _I2C1_Write 0000                                      _I2C1_WriteRead 0000  
                                          _SSP1CON1 0215                                            _SSP1CON2 0216  
                                          _SSP1CON3 0217                                            _SSP1STAT 0214  
                                         _vfpfcnvrt 1670                                   ??_TMR1_Initialize 01C0  
                                        _ADCON0bits 009D                                   ___wmul@multiplier 0070  
                              _TMR0_Custom_ISR$3583 0143                        I2C1_EVENT_NACK@retEventState 0070  
                                     _I2C1_EVENT_RX 1058                                       _I2C1_EVENT_TX 1FD1  
                                       _EUSART_Read 0000                                          vfpfcnvrt@c 00DF  
                             ?_INTERRUPT_Initialize 0070                            __end_of_LCD_Write_String 1E4D  
                                 ??_TMR2_Initialize 01C0                                 _I2C1_InterruptClear 1B29  
                                         memcpy@tmp 0074                                          vfprintf@ap 00E4  
                                        vfprintf@fp 00E6                                   _ADC_GetConversion 1DE0  
                                     _I2C1_Callback 01BC                                         ??__Umul8_16 0072  
                                ?_ADC_GetConversion 0070                                          ?_vfpfcnvrt 006E  
                              _I2C1_DefaultCallback 1B24                                ?_I2C1_InterruptClear 0070  
                                ___fpclassifyf@F465 01A4                               _TMR1_InterruptHandler 01B6  
                                     _I2C1_NackSend 1B55                                       _I2C1_BusReset 1B45  
                               ??_ADC_GetConversion 0072                                          sprintf@fmt 00E9  
                                   _UART_Custom_ISR 0794                                   ??_I2C1_EVENT_IDLE 0070  
                                 ??_I2C1_EVENT_NACK 0070                                     _I2C_Master_Init 1C14  
                                          ___xxtofl 1510                                     _I2C_Master_Wait 1C36  
                                   _I2C_Master_Stop 1B97                                   ??_I2C1_EVENT_STOP 0070  
                                    ?_I2C1_EVENT_RX 0070                                      ?_I2C1_EVENT_TX 0070  
                                     _I2C1_ErrorGet 0000                                  _EUSART_AutoBaudSet 0000  
                                          __ptext10 1B9D                                            __ptext11 1170  
                                          __ptext20 1BDC                                            __ptext12 1C5A  
                                          __ptext21 07F5                                            __ptext13 1BED  
                                        _T1GCONbits 0019                                            __ptext30 1B91  
                                          __ptext22 1BFF                                            __ptext14 1CC5  
                                          __ptext31 1C36                                            __ptext23 1C1F  
                                          __ptext15 1C4E                                            __ptext40 0A01  
                                          __ptext32 1C14                                            __ptext24 1297  
                                          __ptext16 1FA4                                            __ptext41 1510  
                                          __ptext33 1DC7                                            __ptext25 1DAF  
                                          __ptext17 1C42                                            __ptext50 1B5D  
                                          __ptext42 1B3E                                            __ptext26 1D97  
                                          __ptext18 1C81                                            __ptext51 1F11  
                                          __ptext43 1B3B                                            __ptext35 1ECC  
                                          __ptext27 1D41                                            __ptext19 1C72  
                                          __ptext60 1FD1                                            __ptext52 1BB6  
                                          __ptext44 1DE0                                            __ptext36 0002  
                                          __ptext28 1CA0                                            __ptext61 1B38  
                                          __ptext53 1BD4                                            __ptext45 1B61  
                                          __ptext37 1000                                            __ptext29 1B97  
                                          __ptext70 1D2C                                            __ptext62 1B69  
                                          __ptext54 1B85                                            __ptext46 1099  
                                          __ptext38 1B25                                            __ptext71 1B49  
                                          __ptext63 1B35                                            __ptext55 1B7F  
                                          __ptext47 1B8B                                            __ptext39 1B65  
                                          __ptext80 1670                                            __ptext72 1B29  
                                          __ptext64 1B32                                            __ptext56 1058  
                                          __ptext48 1B6E                                            __ptext81 1404  
                                          __ptext73 1B26                                            __ptext65 1B55  
                                          __ptext57 1BAF                                            __ptext49 1BBD  
                                          __ptext90 1001                                            __ptext82 11C6  
                                          __ptext74 1B45                                            __ptext66 1B51  
                                          __ptext58 1BCC                                            __ptext91 1D17  
                                          __ptext83 1E4D                                            __ptext75 1B24  
                                          __ptext67 1B2F                                            __ptext59 1B59  
                                          __ptext92 06A9                                            __ptext84 0083  
                                          __ptext76 130D                                            __ptext68 1B4D  
                                          __ptext93 1385                                            __ptext85 1DFA  
                                          __ptext77 0794                                            __ptext69 1B2C  
                                          __ptext94 1227                                            __ptext86 1028  
                                          __ptext78 1EAC                                            __ptext95 1E6C  
                                          __ptext87 1F34                                            __ptext79 1E8C  
                                          __ptext96 0BB9                                            __ptext88 0800  
                                          __ptext97 1C09                                            __ptext89 1B23  
                                          __ptext98 0DC5                                            __ptext99 1EEE  
                          __end_of_I2C1_IsRxBufFull 1B55                                        _SSP1CON1bits 0215  
                                      _SSP1CON2bits 0216                         __end_of_I2C1_RestartDisable 1B38  
                                i1_I2C_Master_Start 1B73                                  _I2C1_ReceiveEnable 1B32  
                                          _distance 01AC                                  i1_I2C_Master_Write 1C90  
                             _EUSART_TransmitEnable 0000                                          strcpy@dest 0075  
                            ?_I2C1_CallbackRegister 01BE                                     _BackLight_State 016C  
                                 ??_TMR4_Initialize 01C0               __end_of_TMR2_OverflowCallbackRegister 1BA9  
                     _TMR2_OverflowCallbackRegister 1BA3                                 ?i1_I2C_Master_Start 0070  
                               ?_I2C1_ReceiveEnable 0070                                 ?i1_I2C_Master_Write 0070  
                         __end_of_ADC_GetConversion 1DFA                                         ?_I2C1_Close 0070  
                            UART_Custom_ISR@Rx_Code 013F                                       _I2C1_StopSend 1B2C  
              __end_of_TMR1_DefaultOverflowCallback 1001                        _TMR1_DefaultOverflowCallback 1000  
                                        _RC1STAbits 019D                                            efgtoa@fp 00B8  
                                          efgtoa@ne 00A9                                            efgtoa@pp 00B1  
                                          efgtoa@ou 00BD                                            int$flags 007E  
                                          _vfprintf 1E8C                  __end_of_INTERRUPT_InterruptManager 0041  
                        _INTERRUPT_InterruptManager 0004         __end_of_EUSART_FramingErrorCallbackRegister 1C81  
             ??_EUSART_FramingErrorCallbackRegister 01C0                ?_EUSART_FramingErrorCallbackRegister 01BE  
               _EUSART_FramingErrorCallbackRegister 1C72                               ?_I2C1_DefaultCallback 0070  
                                      _SSP1STATbits 0214                               ??_I2C1_InterruptClear 0070  
                  __end_of_I2C1_ErrorInterruptClear 1B29                                      ?_I2C1_NackSend 0070  
                                    ?_I2C1_BusReset 0070                __end_of_TMR4_DefaultOverflowCallback 0003  
                      _TMR4_DefaultOverflowCallback 0002                                ??i1_I2C_Master_Start 0070  
                              ??_I2C1_ReceiveEnable 0070                                ??i1_I2C_Master_Write 0070  
                          __end_of_I2C_Master_Start 1B97                            __end_of_I2C_Master_Write 1CB2  
                                        _INTCONbits 000B                                            memcpy@d1 0075  
                                          memcpy@s1 0070                                        _I2C1_AckSend 1B4D  
                                LCD_Write_Char@Data 0075                                _INT_InterruptHandler 0163  
                                   _CCP1_Initialize 1BFF                                      __pstringtext10 188F  
                                    __pstringtext11 189D                                      __pstringtext12 18CE  
                                    __pstringtext13 18D7                                      __pstringtext14 18E0  
                                    __pstringtext15 18E4                                      __pstringtext16 0000  
                            ??_INTERRUPT_Initialize 01C0                                 _TMR2_PeriodCountSet 0000  
                        I2C1_EVENT_RX@retEventState 0071                             _Timer0_OverflowCallback 0161  
                                          intlevel1 0000                                           sprintf@ap 0121  
                                  ??_I2C1_ERROR_ISR 0076                             ?_PIN_MANAGER_Initialize 0070  
                        __end_of_I2C1_RestartEnable 1B3B          __end_of_EUSART_DefaultFramingErrorCallback 1B23  
              ??_EUSART_DefaultFramingErrorCallback 0070                 ?_EUSART_DefaultFramingErrorCallback 0070  
                _EUSART_DefaultFramingErrorCallback 1B22                         __end_ofi1_IO_Expander_Write 1CC5  
                                         strcpy@src 0070                                      ?_I2C1_StopSend 0070  
                                  ??_ADC_Initialize 01BE                                   ?i1_LCD_Write_4Bit 0070  
                       __end_of_shift_out_to_motors 1122                                     _CCP2_Initialize 07F5  
                                ??i1_LCD_Write_4Bit 0072                                         efgtoa@nmode 00B3  
                     ?_TMR1_DefaultOverflowCallback 0070                               UART_Custom_ISR@buffer 012F  
                          ?_INT_SetInterruptHandler 01BE                             __end_of_UART_Custom_ISR 07F5  
                           __end_of_I2C_Master_Init 1C1F                             __end_of_I2C_Master_Wait 1C42  
                           __end_of_I2C_Master_Stop 1B9D                                         ??_vfpfcnvrt 00D6  
                                   LCD_Init@I2C_Add 01C5                            __end_of_CLOCK_Initialize 1BE4  
                                     __pstringtext1 1800                                       __pstringtext2 184C  
                                     __pstringtext3 1860                                       __pstringtext4 18AA  
                                     __pstringtext5 18B6                                       __pstringtext6 18C2  
                                     __pstringtext7 1830                                       __pstringtext8 1872  
                                     __pstringtext9 1881                              __Umul8_16@multiplicand 0070  
                                        _OPTION_REG 0095                                         _temperature 01A8  
                                          sprintf@f 0122                                            sprintf@s 0120  
                                   ??_I2C1_EVENT_RX 0070                                     ??_I2C1_EVENT_TX 0071  
                                   _TMR0_Custom_ISR 0A01                       ?_TMR4_DefaultOverflowCallback 0070  
                                _Timer0_OverflowISR 1ECC                                   LCD_Set_Cursor@COL 0076  
                                 _I2C1_DataTransmit 1B69                                   LCD_Set_Cursor@ROW 0077  
                             _Timer0_PeriodCountSet 0000                                          _TMR1_Tasks 0000  
                                        _TMR2_Tasks 0000                                          _TMR1_Start 1B3B  
                                        _TX1STAbits 019E                                          _TMR2_Start 0000  
                                        _TMR1_Write 0000                                          _TMR4_Tasks 0000  
                                     ___fladd@signs 0078                                          _TMR4_Start 0000  
                                ?_I2C1_DataTransmit 0070                                   ?_I2C1_DataReceive 0070  
                    __end_of_PIN_MANAGER_Initialize 11C6                       __end_of_I2C1_StatusFlagsClear 1B4D  
                               ?_Timer0_OverflowISR 0070                                        ___fladd@aexp 0079  
                                      ___fladd@bexp 007A                                  ??_I2C1_DataReceive 0070  
                             _TMR4_OverflowCallback 01B2                                __Umul8_16@multiplier 0078  
                               _TMR4_PeriodCountSet 0000                          I2C1_EVENT_TX@retEventState 0073  
                               ??_I2C1_DataTransmit 0070                                     _TMR1_Initialize 1E15  
                            i1LCD_Write_4Bit@Nibble 0073                                   __Umul8_16@product 0074  
