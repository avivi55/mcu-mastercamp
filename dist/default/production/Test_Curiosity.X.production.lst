

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jun 21 16:49:22 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    25                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    26                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,merge=1,delta=2
    35                           	psect	text2,local,class=CODE,merge=1,delta=2
    36                           	psect	text3,local,class=CODE,merge=1,delta=2
    37                           	psect	text4,local,class=CODE,merge=1,delta=2
    38                           	psect	text5,local,class=CODE,merge=1,delta=2
    39                           	psect	text6,local,class=CODE,merge=1,delta=2
    40                           	psect	text7,local,class=CODE,merge=1,delta=2
    41                           	psect	text8,local,class=CODE,merge=1,delta=2
    42                           	psect	text9,local,class=CODE,merge=1,delta=2
    43                           	psect	text10,local,class=CODE,merge=1,delta=2
    44                           	psect	text11,local,class=CODE,merge=1,delta=2
    45                           	psect	text12,local,class=CODE,merge=1,delta=2
    46                           	psect	text13,local,class=CODE,merge=1,delta=2
    47                           	psect	text14,local,class=CODE,merge=1,delta=2
    48                           	psect	text15,local,class=CODE,merge=1,delta=2
    49                           	psect	text16,local,class=CODE,merge=1,delta=2
    50                           	psect	text17,local,class=CODE,merge=1,delta=2
    51                           	psect	text18,local,class=CODE,merge=1,delta=2
    52                           	psect	text19,local,class=CODE,merge=1,delta=2
    53                           	psect	text20,local,class=CODE,merge=1,delta=2
    54                           	psect	text21,local,class=CODE,merge=1,delta=2
    55                           	psect	text22,local,class=CODE,merge=1,delta=2
    56                           	psect	text23,local,class=CODE,merge=1,delta=2
    57                           	psect	text24,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text26,local,class=CODE,merge=1,delta=2
    60                           	psect	text27,local,class=CODE,merge=1,delta=2
    61                           	psect	text28,local,class=CODE,merge=1,delta=2
    62                           	psect	text29,local,class=CODE,merge=1,delta=2
    63                           	psect	text30,local,class=CODE,merge=1,delta=2
    64                           	psect	text31,local,class=CODE,merge=1,delta=2
    65                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text33,local,class=CODE,merge=1,delta=2
    67                           	psect	text34,local,class=CODE,merge=1,delta=2
    68                           	psect	text35,local,class=CODE,merge=1,delta=2
    69                           	psect	text36,local,class=CODE,merge=1,delta=2
    70                           	psect	text37,local,class=CODE,merge=1,delta=2
    71                           	psect	text38,local,class=CODE,merge=1,delta=2
    72                           	psect	text39,local,class=CODE,merge=1,delta=2
    73                           	psect	text40,local,class=CODE,merge=1,delta=2
    74                           	psect	text41,local,class=CODE,merge=1,delta=2
    75                           	psect	text42,local,class=CODE,merge=1,delta=2
    76                           	psect	text43,local,class=CODE,merge=1,delta=2
    77                           	psect	text44,local,class=CODE,merge=1,delta=2
    78                           	psect	text45,local,class=CODE,merge=1,delta=2
    79                           	psect	text46,local,class=CODE,merge=1,delta=2
    80                           	psect	text47,local,class=CODE,merge=1,delta=2
    81                           	psect	text48,local,class=CODE,merge=1,delta=2
    82                           	psect	text49,local,class=CODE,merge=1,delta=2
    83                           	psect	text50,local,class=CODE,merge=1,delta=2
    84                           	psect	text51,local,class=CODE,merge=1,delta=2
    85                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text53,local,class=CODE,merge=1,delta=2
    87                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text57,local,class=CODE,merge=1,delta=2
    91                           	psect	text58,local,class=CODE,merge=1,delta=2
    92                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text61,local,class=CODE,merge=1,delta=2
    95                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text66,local,class=CODE,merge=1,delta=2
   100                           	psect	text67,local,class=CODE,merge=1,delta=2
   101                           	psect	text68,local,class=CODE,merge=1,delta=2
   102                           	psect	text69,local,class=CODE,merge=1,delta=2,group=3
   103                           	psect	text70,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
   105                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
   106                           	psect	text73,local,class=CODE,merge=1,delta=2,group=1
   107                           	psect	text74,local,class=CODE,merge=1,delta=2,group=2
   108                           	psect	text75,local,class=CODE,merge=1,delta=2,group=1
   109                           	psect	text76,local,class=CODE,merge=1,delta=2,group=3
   110                           	psect	text77,local,class=CODE,merge=1,delta=2,group=1
   111                           	psect	text78,local,class=CODE,merge=1,delta=2,group=3
   112                           	psect	text79,local,class=CODE,merge=1,delta=2,group=3
   113                           	psect	text80,local,class=CODE,merge=1,delta=2,group=3
   114                           	psect	text81,local,class=CODE,merge=1,delta=2,group=3
   115                           	psect	text82,local,class=CODE,merge=1,delta=2,group=3
   116                           	psect	text83,local,class=CODE,merge=1,delta=2,group=3
   117                           	psect	text84,local,class=CODE,merge=1,delta=2,group=3
   118                           	psect	text85,local,class=CODE,merge=1,delta=2,group=2
   119                           	psect	text86,local,class=CODE,merge=1,delta=2,group=2
   120                           	psect	text87,local,class=CODE,merge=1,delta=2,group=2
   121                           	psect	text88,local,class=CODE,merge=1,delta=2,group=2
   122                           	psect	text89,local,class=CODE,merge=1,delta=2,group=2
   123                           	psect	text90,local,class=CODE,merge=1,delta=2,group=2
   124                           	psect	text91,local,class=CODE,merge=1,delta=2,group=2
   125                           	psect	text92,local,class=CODE,merge=1,delta=2,group=2
   126                           	psect	text93,local,class=CODE,merge=1,delta=2,group=2
   127                           	psect	text94,local,class=CODE,merge=1,delta=2
   128                           	psect	text95,local,class=CODE,merge=1,delta=2
   129                           	psect	text96,local,class=CODE,merge=1,delta=2
   130                           	psect	text97,local,class=CODE,merge=1,delta=2
   131                           	psect	text98,local,class=CODE,merge=1,delta=2
   132                           	psect	text99,local,class=CODE,merge=1,delta=2
   133                           	psect	text100,local,class=CODE,merge=1,delta=2
   134                           	psect	text101,local,class=CODE,merge=1,delta=2
   135                           	psect	text102,local,class=CODE,merge=1,delta=2
   136                           	psect	text103,local,class=CODE,merge=1,delta=2
   137                           	psect	text104,local,class=CODE,merge=1,delta=2
   138                           	psect	text105,local,class=CODE,merge=1,delta=2
   139                           	psect	text106,local,class=CODE,merge=1,delta=2
   140                           	psect	text107,local,class=CODE,merge=1,delta=2
   141                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   142                           	dabs	1,0x620,48
   143                           	dabs	1,0x5A0,80
   144                           	dabs	1,0x2370,0,_eusartRxStatusBuffer
   145                           	dabs	1,0x7E,2
   146     0000                     
   147                           ; Generated 07/09/2023 GMT
   148                           ; 
   149                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   150                           ; All rights reserved.
   151                           ; 
   152                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   153                           ; 
   154                           ; Redistribution and use in source and binary forms, with or without modification, are
   155                           ; permitted provided that the following conditions are met:
   156                           ; 
   157                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   158                           ;        conditions and the following disclaimer.
   159                           ; 
   160                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   161                           ;        of conditions and the following disclaimer in the documentation and/or other
   162                           ;        materials provided with the distribution. Publication is not required when
   163                           ;        this file is used in an embedded application.
   164                           ; 
   165                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   166                           ;        software without specific prior written permission.
   167                           ; 
   168                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   169                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   170                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   171                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   172                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   173                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   174                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   175                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   176                           ; 
   177                           ; 
   178                           ; Code-generator required, PIC16F1619 Definitions
   179                           ; 
   180                           ; SFR Addresses
   181     0000                     	;# 
   182     0001                     	;# 
   183     0002                     	;# 
   184     0003                     	;# 
   185     0004                     	;# 
   186     0005                     	;# 
   187     0006                     	;# 
   188     0007                     	;# 
   189     0008                     	;# 
   190     0009                     	;# 
   191     000A                     	;# 
   192     000B                     	;# 
   193     000C                     	;# 
   194     000D                     	;# 
   195     000E                     	;# 
   196     0010                     	;# 
   197     0011                     	;# 
   198     0012                     	;# 
   199     0013                     	;# 
   200     0014                     	;# 
   201     0015                     	;# 
   202     0016                     	;# 
   203     0016                     	;# 
   204     0017                     	;# 
   205     0018                     	;# 
   206     0019                     	;# 
   207     001A                     	;# 
   208     001A                     	;# 
   209     001B                     	;# 
   210     001B                     	;# 
   211     001C                     	;# 
   212     001D                     	;# 
   213     001E                     	;# 
   214     001F                     	;# 
   215     008C                     	;# 
   216     008D                     	;# 
   217     008E                     	;# 
   218     0090                     	;# 
   219     0091                     	;# 
   220     0092                     	;# 
   221     0093                     	;# 
   222     0094                     	;# 
   223     0095                     	;# 
   224     0096                     	;# 
   225     0098                     	;# 
   226     0099                     	;# 
   227     009A                     	;# 
   228     009B                     	;# 
   229     009B                     	;# 
   230     009C                     	;# 
   231     009D                     	;# 
   232     009E                     	;# 
   233     009F                     	;# 
   234     010C                     	;# 
   235     010D                     	;# 
   236     010E                     	;# 
   237     0111                     	;# 
   238     0112                     	;# 
   239     0113                     	;# 
   240     0114                     	;# 
   241     0115                     	;# 
   242     0116                     	;# 
   243     0117                     	;# 
   244     0118                     	;# 
   245     0119                     	;# 
   246     011C                     	;# 
   247     018C                     	;# 
   248     018D                     	;# 
   249     018E                     	;# 
   250     0191                     	;# 
   251     0191                     	;# 
   252     0192                     	;# 
   253     0193                     	;# 
   254     0193                     	;# 
   255     0194                     	;# 
   256     0195                     	;# 
   257     0196                     	;# 
   258     0197                     	;# 
   259     0199                     	;# 
   260     0199                     	;# 
   261     0199                     	;# 
   262     019A                     	;# 
   263     019A                     	;# 
   264     019A                     	;# 
   265     019B                     	;# 
   266     019B                     	;# 
   267     019B                     	;# 
   268     019B                     	;# 
   269     019B                     	;# 
   270     019C                     	;# 
   271     019C                     	;# 
   272     019C                     	;# 
   273     019D                     	;# 
   274     019D                     	;# 
   275     019D                     	;# 
   276     019E                     	;# 
   277     019E                     	;# 
   278     019E                     	;# 
   279     019F                     	;# 
   280     019F                     	;# 
   281     019F                     	;# 
   282     019F                     	;# 
   283     019F                     	;# 
   284     020C                     	;# 
   285     020D                     	;# 
   286     020E                     	;# 
   287     0211                     	;# 
   288     0211                     	;# 
   289     0212                     	;# 
   290     0212                     	;# 
   291     0213                     	;# 
   292     0213                     	;# 
   293     0214                     	;# 
   294     0214                     	;# 
   295     0215                     	;# 
   296     0215                     	;# 
   297     0215                     	;# 
   298     0215                     	;# 
   299     0216                     	;# 
   300     0216                     	;# 
   301     0217                     	;# 
   302     0217                     	;# 
   303     028C                     	;# 
   304     028D                     	;# 
   305     028E                     	;# 
   306     0291                     	;# 
   307     0291                     	;# 
   308     0292                     	;# 
   309     0293                     	;# 
   310     0294                     	;# 
   311     0298                     	;# 
   312     0298                     	;# 
   313     0299                     	;# 
   314     029A                     	;# 
   315     029B                     	;# 
   316     029E                     	;# 
   317     030C                     	;# 
   318     030D                     	;# 
   319     030E                     	;# 
   320     038C                     	;# 
   321     038D                     	;# 
   322     038E                     	;# 
   323     0391                     	;# 
   324     0392                     	;# 
   325     0393                     	;# 
   326     0394                     	;# 
   327     0395                     	;# 
   328     0396                     	;# 
   329     0397                     	;# 
   330     0398                     	;# 
   331     0399                     	;# 
   332     040E                     	;# 
   333     0413                     	;# 
   334     0413                     	;# 
   335     0414                     	;# 
   336     0414                     	;# 
   337     0415                     	;# 
   338     0416                     	;# 
   339     0417                     	;# 
   340     0418                     	;# 
   341     041A                     	;# 
   342     041A                     	;# 
   343     041B                     	;# 
   344     041B                     	;# 
   345     041C                     	;# 
   346     041D                     	;# 
   347     041E                     	;# 
   348     041F                     	;# 
   349     0493                     	;# 
   350     0494                     	;# 
   351     0495                     	;# 
   352     0496                     	;# 
   353     049A                     	;# 
   354     049B                     	;# 
   355     049C                     	;# 
   356     049D                     	;# 
   357     058C                     	;# 
   358     058C                     	;# 
   359     058D                     	;# 
   360     058E                     	;# 
   361     058E                     	;# 
   362     058F                     	;# 
   363     0590                     	;# 
   364     0590                     	;# 
   365     0591                     	;# 
   366     0592                     	;# 
   367     0592                     	;# 
   368     0593                     	;# 
   369     0594                     	;# 
   370     0594                     	;# 
   371     0595                     	;# 
   372     0596                     	;# 
   373     0596                     	;# 
   374     0597                     	;# 
   375     0598                     	;# 
   376     0599                     	;# 
   377     059A                     	;# 
   378     059B                     	;# 
   379     059B                     	;# 
   380     059C                     	;# 
   381     059D                     	;# 
   382     060C                     	;# 
   383     060C                     	;# 
   384     060D                     	;# 
   385     060E                     	;# 
   386     060F                     	;# 
   387     060F                     	;# 
   388     0610                     	;# 
   389     0611                     	;# 
   390     0612                     	;# 
   391     0613                     	;# 
   392     0614                     	;# 
   393     0617                     	;# 
   394     0617                     	;# 
   395     0618                     	;# 
   396     0619                     	;# 
   397     061A                     	;# 
   398     061A                     	;# 
   399     061B                     	;# 
   400     061C                     	;# 
   401     0691                     	;# 
   402     0692                     	;# 
   403     0693                     	;# 
   404     0694                     	;# 
   405     0695                     	;# 
   406     0696                     	;# 
   407     0697                     	;# 
   408     0699                     	;# 
   409     069A                     	;# 
   410     0711                     	;# 
   411     0712                     	;# 
   412     0713                     	;# 
   413     0714                     	;# 
   414     0715                     	;# 
   415     0718                     	;# 
   416     0718                     	;# 
   417     0719                     	;# 
   418     071A                     	;# 
   419     071A                     	;# 
   420     071B                     	;# 
   421     071C                     	;# 
   422     071D                     	;# 
   423     0791                     	;# 
   424     0791                     	;# 
   425     0792                     	;# 
   426     0793                     	;# 
   427     0793                     	;# 
   428     0794                     	;# 
   429     0795                     	;# 
   430     0795                     	;# 
   431     0796                     	;# 
   432     0797                     	;# 
   433     0797                     	;# 
   434     0798                     	;# 
   435     0799                     	;# 
   436     079A                     	;# 
   437     080C                     	;# 
   438     080C                     	;# 
   439     080D                     	;# 
   440     080E                     	;# 
   441     080E                     	;# 
   442     080F                     	;# 
   443     0810                     	;# 
   444     0810                     	;# 
   445     0811                     	;# 
   446     0812                     	;# 
   447     0812                     	;# 
   448     0813                     	;# 
   449     0814                     	;# 
   450     0815                     	;# 
   451     0816                     	;# 
   452     0817                     	;# 
   453     0818                     	;# 
   454     0819                     	;# 
   455     081A                     	;# 
   456     081A                     	;# 
   457     081B                     	;# 
   458     081C                     	;# 
   459     081C                     	;# 
   460     081D                     	;# 
   461     088C                     	;# 
   462     088D                     	;# 
   463     088E                     	;# 
   464     088F                     	;# 
   465     088F                     	;# 
   466     0890                     	;# 
   467     0891                     	;# 
   468     0892                     	;# 
   469     0893                     	;# 
   470     0893                     	;# 
   471     0894                     	;# 
   472     0895                     	;# 
   473     0896                     	;# 
   474     0897                     	;# 
   475     0897                     	;# 
   476     0898                     	;# 
   477     0899                     	;# 
   478     0D8C                     	;# 
   479     0D8C                     	;# 
   480     0D8D                     	;# 
   481     0D8E                     	;# 
   482     0D8F                     	;# 
   483     0D8F                     	;# 
   484     0D90                     	;# 
   485     0D91                     	;# 
   486     0D92                     	;# 
   487     0D92                     	;# 
   488     0D93                     	;# 
   489     0D94                     	;# 
   490     0D95                     	;# 
   491     0D95                     	;# 
   492     0D96                     	;# 
   493     0D97                     	;# 
   494     0D98                     	;# 
   495     0D99                     	;# 
   496     0D9A                     	;# 
   497     0D9B                     	;# 
   498     0D9C                     	;# 
   499     0D9D                     	;# 
   500     0D9E                     	;# 
   501     0D9E                     	;# 
   502     0D9F                     	;# 
   503     0DA0                     	;# 
   504     0DA1                     	;# 
   505     0DA1                     	;# 
   506     0DA2                     	;# 
   507     0DA3                     	;# 
   508     0DA4                     	;# 
   509     0DA4                     	;# 
   510     0DA5                     	;# 
   511     0DA6                     	;# 
   512     0DA7                     	;# 
   513     0DA7                     	;# 
   514     0DA8                     	;# 
   515     0DA9                     	;# 
   516     0DAA                     	;# 
   517     0DAB                     	;# 
   518     0DAC                     	;# 
   519     0DAD                     	;# 
   520     0DAE                     	;# 
   521     0DAF                     	;# 
   522     0E0F                     	;# 
   523     0E10                     	;# 
   524     0E11                     	;# 
   525     0E12                     	;# 
   526     0E13                     	;# 
   527     0E14                     	;# 
   528     0E15                     	;# 
   529     0E16                     	;# 
   530     0E17                     	;# 
   531     0E17                     	;# 
   532     0E18                     	;# 
   533     0E18                     	;# 
   534     0E19                     	;# 
   535     0E1A                     	;# 
   536     0E1B                     	;# 
   537     0E1B                     	;# 
   538     0E1C                     	;# 
   539     0E1D                     	;# 
   540     0E1E                     	;# 
   541     0E1E                     	;# 
   542     0E1F                     	;# 
   543     0E20                     	;# 
   544     0E21                     	;# 
   545     0E22                     	;# 
   546     0E23                     	;# 
   547     0E24                     	;# 
   548     0E25                     	;# 
   549     0E26                     	;# 
   550     0E27                     	;# 
   551     0E28                     	;# 
   552     0E29                     	;# 
   553     0E2A                     	;# 
   554     0E2B                     	;# 
   555     0E2C                     	;# 
   556     0E2D                     	;# 
   557     0E2E                     	;# 
   558     0E90                     	;# 
   559     0E91                     	;# 
   560     0E92                     	;# 
   561     0E94                     	;# 
   562     0E95                     	;# 
   563     0E9C                     	;# 
   564     0E9D                     	;# 
   565     0E9E                     	;# 
   566     0E9F                     	;# 
   567     0EA0                     	;# 
   568     0EA1                     	;# 
   569     0EA2                     	;# 
   570     0EA3                     	;# 
   571     0EA4                     	;# 
   572     0EA5                     	;# 
   573     0EA6                     	;# 
   574     0EA7                     	;# 
   575     0F0F                     	;# 
   576     0F10                     	;# 
   577     0F11                     	;# 
   578     0F12                     	;# 
   579     0F13                     	;# 
   580     0F14                     	;# 
   581     0F15                     	;# 
   582     0F16                     	;# 
   583     0F17                     	;# 
   584     0F18                     	;# 
   585     0F19                     	;# 
   586     0F1A                     	;# 
   587     0F1B                     	;# 
   588     0F1C                     	;# 
   589     0F1D                     	;# 
   590     0F1E                     	;# 
   591     0F1F                     	;# 
   592     0F20                     	;# 
   593     0F21                     	;# 
   594     0F22                     	;# 
   595     0F23                     	;# 
   596     0F24                     	;# 
   597     0F25                     	;# 
   598     0F26                     	;# 
   599     0F27                     	;# 
   600     0F28                     	;# 
   601     0F29                     	;# 
   602     0F2A                     	;# 
   603     0F2B                     	;# 
   604     0F2C                     	;# 
   605     0F2D                     	;# 
   606     0F2E                     	;# 
   607     0F2F                     	;# 
   608     0F30                     	;# 
   609     0F31                     	;# 
   610     0F32                     	;# 
   611     0F33                     	;# 
   612     0F34                     	;# 
   613     0F35                     	;# 
   614     0F36                     	;# 
   615     0F37                     	;# 
   616     0FE4                     	;# 
   617     0FE5                     	;# 
   618     0FE6                     	;# 
   619     0FE7                     	;# 
   620     0FE8                     	;# 
   621     0FE9                     	;# 
   622     0FEA                     	;# 
   623     0FEB                     	;# 
   624     0FED                     	;# 
   625     0FEE                     	;# 
   626     0FEF                     	;# 
   627     0000                     	;# 
   628     0001                     	;# 
   629     0002                     	;# 
   630     0003                     	;# 
   631     0004                     	;# 
   632     0005                     	;# 
   633     0006                     	;# 
   634     0007                     	;# 
   635     0008                     	;# 
   636     0009                     	;# 
   637     000A                     	;# 
   638     000B                     	;# 
   639     000C                     	;# 
   640     000D                     	;# 
   641     000E                     	;# 
   642     0010                     	;# 
   643     0011                     	;# 
   644     0012                     	;# 
   645     0013                     	;# 
   646     0014                     	;# 
   647     0015                     	;# 
   648     0016                     	;# 
   649     0016                     	;# 
   650     0017                     	;# 
   651     0018                     	;# 
   652     0019                     	;# 
   653     001A                     	;# 
   654     001A                     	;# 
   655     001B                     	;# 
   656     001B                     	;# 
   657     001C                     	;# 
   658     001D                     	;# 
   659     001E                     	;# 
   660     001F                     	;# 
   661     008C                     	;# 
   662     008D                     	;# 
   663     008E                     	;# 
   664     0090                     	;# 
   665     0091                     	;# 
   666     0092                     	;# 
   667     0093                     	;# 
   668     0094                     	;# 
   669     0095                     	;# 
   670     0096                     	;# 
   671     0098                     	;# 
   672     0099                     	;# 
   673     009A                     	;# 
   674     009B                     	;# 
   675     009B                     	;# 
   676     009C                     	;# 
   677     009D                     	;# 
   678     009E                     	;# 
   679     009F                     	;# 
   680     010C                     	;# 
   681     010D                     	;# 
   682     010E                     	;# 
   683     0111                     	;# 
   684     0112                     	;# 
   685     0113                     	;# 
   686     0114                     	;# 
   687     0115                     	;# 
   688     0116                     	;# 
   689     0117                     	;# 
   690     0118                     	;# 
   691     0119                     	;# 
   692     011C                     	;# 
   693     018C                     	;# 
   694     018D                     	;# 
   695     018E                     	;# 
   696     0191                     	;# 
   697     0191                     	;# 
   698     0192                     	;# 
   699     0193                     	;# 
   700     0193                     	;# 
   701     0194                     	;# 
   702     0195                     	;# 
   703     0196                     	;# 
   704     0197                     	;# 
   705     0199                     	;# 
   706     0199                     	;# 
   707     0199                     	;# 
   708     019A                     	;# 
   709     019A                     	;# 
   710     019A                     	;# 
   711     019B                     	;# 
   712     019B                     	;# 
   713     019B                     	;# 
   714     019B                     	;# 
   715     019B                     	;# 
   716     019C                     	;# 
   717     019C                     	;# 
   718     019C                     	;# 
   719     019D                     	;# 
   720     019D                     	;# 
   721     019D                     	;# 
   722     019E                     	;# 
   723     019E                     	;# 
   724     019E                     	;# 
   725     019F                     	;# 
   726     019F                     	;# 
   727     019F                     	;# 
   728     019F                     	;# 
   729     019F                     	;# 
   730     020C                     	;# 
   731     020D                     	;# 
   732     020E                     	;# 
   733     0211                     	;# 
   734     0211                     	;# 
   735     0212                     	;# 
   736     0212                     	;# 
   737     0213                     	;# 
   738     0213                     	;# 
   739     0214                     	;# 
   740     0214                     	;# 
   741     0215                     	;# 
   742     0215                     	;# 
   743     0215                     	;# 
   744     0215                     	;# 
   745     0216                     	;# 
   746     0216                     	;# 
   747     0217                     	;# 
   748     0217                     	;# 
   749     028C                     	;# 
   750     028D                     	;# 
   751     028E                     	;# 
   752     0291                     	;# 
   753     0291                     	;# 
   754     0292                     	;# 
   755     0293                     	;# 
   756     0294                     	;# 
   757     0298                     	;# 
   758     0298                     	;# 
   759     0299                     	;# 
   760     029A                     	;# 
   761     029B                     	;# 
   762     029E                     	;# 
   763     030C                     	;# 
   764     030D                     	;# 
   765     030E                     	;# 
   766     038C                     	;# 
   767     038D                     	;# 
   768     038E                     	;# 
   769     0391                     	;# 
   770     0392                     	;# 
   771     0393                     	;# 
   772     0394                     	;# 
   773     0395                     	;# 
   774     0396                     	;# 
   775     0397                     	;# 
   776     0398                     	;# 
   777     0399                     	;# 
   778     040E                     	;# 
   779     0413                     	;# 
   780     0413                     	;# 
   781     0414                     	;# 
   782     0414                     	;# 
   783     0415                     	;# 
   784     0416                     	;# 
   785     0417                     	;# 
   786     0418                     	;# 
   787     041A                     	;# 
   788     041A                     	;# 
   789     041B                     	;# 
   790     041B                     	;# 
   791     041C                     	;# 
   792     041D                     	;# 
   793     041E                     	;# 
   794     041F                     	;# 
   795     0493                     	;# 
   796     0494                     	;# 
   797     0495                     	;# 
   798     0496                     	;# 
   799     049A                     	;# 
   800     049B                     	;# 
   801     049C                     	;# 
   802     049D                     	;# 
   803     058C                     	;# 
   804     058C                     	;# 
   805     058D                     	;# 
   806     058E                     	;# 
   807     058E                     	;# 
   808     058F                     	;# 
   809     0590                     	;# 
   810     0590                     	;# 
   811     0591                     	;# 
   812     0592                     	;# 
   813     0592                     	;# 
   814     0593                     	;# 
   815     0594                     	;# 
   816     0594                     	;# 
   817     0595                     	;# 
   818     0596                     	;# 
   819     0596                     	;# 
   820     0597                     	;# 
   821     0598                     	;# 
   822     0599                     	;# 
   823     059A                     	;# 
   824     059B                     	;# 
   825     059B                     	;# 
   826     059C                     	;# 
   827     059D                     	;# 
   828     060C                     	;# 
   829     060C                     	;# 
   830     060D                     	;# 
   831     060E                     	;# 
   832     060F                     	;# 
   833     060F                     	;# 
   834     0610                     	;# 
   835     0611                     	;# 
   836     0612                     	;# 
   837     0613                     	;# 
   838     0614                     	;# 
   839     0617                     	;# 
   840     0617                     	;# 
   841     0618                     	;# 
   842     0619                     	;# 
   843     061A                     	;# 
   844     061A                     	;# 
   845     061B                     	;# 
   846     061C                     	;# 
   847     0691                     	;# 
   848     0692                     	;# 
   849     0693                     	;# 
   850     0694                     	;# 
   851     0695                     	;# 
   852     0696                     	;# 
   853     0697                     	;# 
   854     0699                     	;# 
   855     069A                     	;# 
   856     0711                     	;# 
   857     0712                     	;# 
   858     0713                     	;# 
   859     0714                     	;# 
   860     0715                     	;# 
   861     0718                     	;# 
   862     0718                     	;# 
   863     0719                     	;# 
   864     071A                     	;# 
   865     071A                     	;# 
   866     071B                     	;# 
   867     071C                     	;# 
   868     071D                     	;# 
   869     0791                     	;# 
   870     0791                     	;# 
   871     0792                     	;# 
   872     0793                     	;# 
   873     0793                     	;# 
   874     0794                     	;# 
   875     0795                     	;# 
   876     0795                     	;# 
   877     0796                     	;# 
   878     0797                     	;# 
   879     0797                     	;# 
   880     0798                     	;# 
   881     0799                     	;# 
   882     079A                     	;# 
   883     080C                     	;# 
   884     080C                     	;# 
   885     080D                     	;# 
   886     080E                     	;# 
   887     080E                     	;# 
   888     080F                     	;# 
   889     0810                     	;# 
   890     0810                     	;# 
   891     0811                     	;# 
   892     0812                     	;# 
   893     0812                     	;# 
   894     0813                     	;# 
   895     0814                     	;# 
   896     0815                     	;# 
   897     0816                     	;# 
   898     0817                     	;# 
   899     0818                     	;# 
   900     0819                     	;# 
   901     081A                     	;# 
   902     081A                     	;# 
   903     081B                     	;# 
   904     081C                     	;# 
   905     081C                     	;# 
   906     081D                     	;# 
   907     088C                     	;# 
   908     088D                     	;# 
   909     088E                     	;# 
   910     088F                     	;# 
   911     088F                     	;# 
   912     0890                     	;# 
   913     0891                     	;# 
   914     0892                     	;# 
   915     0893                     	;# 
   916     0893                     	;# 
   917     0894                     	;# 
   918     0895                     	;# 
   919     0896                     	;# 
   920     0897                     	;# 
   921     0897                     	;# 
   922     0898                     	;# 
   923     0899                     	;# 
   924     0D8C                     	;# 
   925     0D8C                     	;# 
   926     0D8D                     	;# 
   927     0D8E                     	;# 
   928     0D8F                     	;# 
   929     0D8F                     	;# 
   930     0D90                     	;# 
   931     0D91                     	;# 
   932     0D92                     	;# 
   933     0D92                     	;# 
   934     0D93                     	;# 
   935     0D94                     	;# 
   936     0D95                     	;# 
   937     0D95                     	;# 
   938     0D96                     	;# 
   939     0D97                     	;# 
   940     0D98                     	;# 
   941     0D99                     	;# 
   942     0D9A                     	;# 
   943     0D9B                     	;# 
   944     0D9C                     	;# 
   945     0D9D                     	;# 
   946     0D9E                     	;# 
   947     0D9E                     	;# 
   948     0D9F                     	;# 
   949     0DA0                     	;# 
   950     0DA1                     	;# 
   951     0DA1                     	;# 
   952     0DA2                     	;# 
   953     0DA3                     	;# 
   954     0DA4                     	;# 
   955     0DA4                     	;# 
   956     0DA5                     	;# 
   957     0DA6                     	;# 
   958     0DA7                     	;# 
   959     0DA7                     	;# 
   960     0DA8                     	;# 
   961     0DA9                     	;# 
   962     0DAA                     	;# 
   963     0DAB                     	;# 
   964     0DAC                     	;# 
   965     0DAD                     	;# 
   966     0DAE                     	;# 
   967     0DAF                     	;# 
   968     0E0F                     	;# 
   969     0E10                     	;# 
   970     0E11                     	;# 
   971     0E12                     	;# 
   972     0E13                     	;# 
   973     0E14                     	;# 
   974     0E15                     	;# 
   975     0E16                     	;# 
   976     0E17                     	;# 
   977     0E17                     	;# 
   978     0E18                     	;# 
   979     0E18                     	;# 
   980     0E19                     	;# 
   981     0E1A                     	;# 
   982     0E1B                     	;# 
   983     0E1B                     	;# 
   984     0E1C                     	;# 
   985     0E1D                     	;# 
   986     0E1E                     	;# 
   987     0E1E                     	;# 
   988     0E1F                     	;# 
   989     0E20                     	;# 
   990     0E21                     	;# 
   991     0E22                     	;# 
   992     0E23                     	;# 
   993     0E24                     	;# 
   994     0E25                     	;# 
   995     0E26                     	;# 
   996     0E27                     	;# 
   997     0E28                     	;# 
   998     0E29                     	;# 
   999     0E2A                     	;# 
  1000     0E2B                     	;# 
  1001     0E2C                     	;# 
  1002     0E2D                     	;# 
  1003     0E2E                     	;# 
  1004     0E90                     	;# 
  1005     0E91                     	;# 
  1006     0E92                     	;# 
  1007     0E94                     	;# 
  1008     0E95                     	;# 
  1009     0E9C                     	;# 
  1010     0E9D                     	;# 
  1011     0E9E                     	;# 
  1012     0E9F                     	;# 
  1013     0EA0                     	;# 
  1014     0EA1                     	;# 
  1015     0EA2                     	;# 
  1016     0EA3                     	;# 
  1017     0EA4                     	;# 
  1018     0EA5                     	;# 
  1019     0EA6                     	;# 
  1020     0EA7                     	;# 
  1021     0F0F                     	;# 
  1022     0F10                     	;# 
  1023     0F11                     	;# 
  1024     0F12                     	;# 
  1025     0F13                     	;# 
  1026     0F14                     	;# 
  1027     0F15                     	;# 
  1028     0F16                     	;# 
  1029     0F17                     	;# 
  1030     0F18                     	;# 
  1031     0F19                     	;# 
  1032     0F1A                     	;# 
  1033     0F1B                     	;# 
  1034     0F1C                     	;# 
  1035     0F1D                     	;# 
  1036     0F1E                     	;# 
  1037     0F1F                     	;# 
  1038     0F20                     	;# 
  1039     0F21                     	;# 
  1040     0F22                     	;# 
  1041     0F23                     	;# 
  1042     0F24                     	;# 
  1043     0F25                     	;# 
  1044     0F26                     	;# 
  1045     0F27                     	;# 
  1046     0F28                     	;# 
  1047     0F29                     	;# 
  1048     0F2A                     	;# 
  1049     0F2B                     	;# 
  1050     0F2C                     	;# 
  1051     0F2D                     	;# 
  1052     0F2E                     	;# 
  1053     0F2F                     	;# 
  1054     0F30                     	;# 
  1055     0F31                     	;# 
  1056     0F32                     	;# 
  1057     0F33                     	;# 
  1058     0F34                     	;# 
  1059     0F35                     	;# 
  1060     0F36                     	;# 
  1061     0F37                     	;# 
  1062     0FE4                     	;# 
  1063     0FE5                     	;# 
  1064     0FE6                     	;# 
  1065     0FE7                     	;# 
  1066     0FE8                     	;# 
  1067     0FE9                     	;# 
  1068     0FEA                     	;# 
  1069     0FEB                     	;# 
  1070     0FED                     	;# 
  1071     0FEE                     	;# 
  1072     0FEF                     	;# 
  1073     0000                     	;# 
  1074     0001                     	;# 
  1075     0002                     	;# 
  1076     0003                     	;# 
  1077     0004                     	;# 
  1078     0005                     	;# 
  1079     0006                     	;# 
  1080     0007                     	;# 
  1081     0008                     	;# 
  1082     0009                     	;# 
  1083     000A                     	;# 
  1084     000B                     	;# 
  1085     000C                     	;# 
  1086     000D                     	;# 
  1087     000E                     	;# 
  1088     0010                     	;# 
  1089     0011                     	;# 
  1090     0012                     	;# 
  1091     0013                     	;# 
  1092     0014                     	;# 
  1093     0015                     	;# 
  1094     0016                     	;# 
  1095     0016                     	;# 
  1096     0017                     	;# 
  1097     0018                     	;# 
  1098     0019                     	;# 
  1099     001A                     	;# 
  1100     001A                     	;# 
  1101     001B                     	;# 
  1102     001B                     	;# 
  1103     001C                     	;# 
  1104     001D                     	;# 
  1105     001E                     	;# 
  1106     001F                     	;# 
  1107     008C                     	;# 
  1108     008D                     	;# 
  1109     008E                     	;# 
  1110     0090                     	;# 
  1111     0091                     	;# 
  1112     0092                     	;# 
  1113     0093                     	;# 
  1114     0094                     	;# 
  1115     0095                     	;# 
  1116     0096                     	;# 
  1117     0098                     	;# 
  1118     0099                     	;# 
  1119     009A                     	;# 
  1120     009B                     	;# 
  1121     009B                     	;# 
  1122     009C                     	;# 
  1123     009D                     	;# 
  1124     009E                     	;# 
  1125     009F                     	;# 
  1126     010C                     	;# 
  1127     010D                     	;# 
  1128     010E                     	;# 
  1129     0111                     	;# 
  1130     0112                     	;# 
  1131     0113                     	;# 
  1132     0114                     	;# 
  1133     0115                     	;# 
  1134     0116                     	;# 
  1135     0117                     	;# 
  1136     0118                     	;# 
  1137     0119                     	;# 
  1138     011C                     	;# 
  1139     018C                     	;# 
  1140     018D                     	;# 
  1141     018E                     	;# 
  1142     0191                     	;# 
  1143     0191                     	;# 
  1144     0192                     	;# 
  1145     0193                     	;# 
  1146     0193                     	;# 
  1147     0194                     	;# 
  1148     0195                     	;# 
  1149     0196                     	;# 
  1150     0197                     	;# 
  1151     0199                     	;# 
  1152     0199                     	;# 
  1153     0199                     	;# 
  1154     019A                     	;# 
  1155     019A                     	;# 
  1156     019A                     	;# 
  1157     019B                     	;# 
  1158     019B                     	;# 
  1159     019B                     	;# 
  1160     019B                     	;# 
  1161     019B                     	;# 
  1162     019C                     	;# 
  1163     019C                     	;# 
  1164     019C                     	;# 
  1165     019D                     	;# 
  1166     019D                     	;# 
  1167     019D                     	;# 
  1168     019E                     	;# 
  1169     019E                     	;# 
  1170     019E                     	;# 
  1171     019F                     	;# 
  1172     019F                     	;# 
  1173     019F                     	;# 
  1174     019F                     	;# 
  1175     019F                     	;# 
  1176     020C                     	;# 
  1177     020D                     	;# 
  1178     020E                     	;# 
  1179     0211                     	;# 
  1180     0211                     	;# 
  1181     0212                     	;# 
  1182     0212                     	;# 
  1183     0213                     	;# 
  1184     0213                     	;# 
  1185     0214                     	;# 
  1186     0214                     	;# 
  1187     0215                     	;# 
  1188     0215                     	;# 
  1189     0215                     	;# 
  1190     0215                     	;# 
  1191     0216                     	;# 
  1192     0216                     	;# 
  1193     0217                     	;# 
  1194     0217                     	;# 
  1195     028C                     	;# 
  1196     028D                     	;# 
  1197     028E                     	;# 
  1198     0291                     	;# 
  1199     0291                     	;# 
  1200     0292                     	;# 
  1201     0293                     	;# 
  1202     0294                     	;# 
  1203     0298                     	;# 
  1204     0298                     	;# 
  1205     0299                     	;# 
  1206     029A                     	;# 
  1207     029B                     	;# 
  1208     029E                     	;# 
  1209     030C                     	;# 
  1210     030D                     	;# 
  1211     030E                     	;# 
  1212     038C                     	;# 
  1213     038D                     	;# 
  1214     038E                     	;# 
  1215     0391                     	;# 
  1216     0392                     	;# 
  1217     0393                     	;# 
  1218     0394                     	;# 
  1219     0395                     	;# 
  1220     0396                     	;# 
  1221     0397                     	;# 
  1222     0398                     	;# 
  1223     0399                     	;# 
  1224     040E                     	;# 
  1225     0413                     	;# 
  1226     0413                     	;# 
  1227     0414                     	;# 
  1228     0414                     	;# 
  1229     0415                     	;# 
  1230     0416                     	;# 
  1231     0417                     	;# 
  1232     0418                     	;# 
  1233     041A                     	;# 
  1234     041A                     	;# 
  1235     041B                     	;# 
  1236     041B                     	;# 
  1237     041C                     	;# 
  1238     041D                     	;# 
  1239     041E                     	;# 
  1240     041F                     	;# 
  1241     0493                     	;# 
  1242     0494                     	;# 
  1243     0495                     	;# 
  1244     0496                     	;# 
  1245     049A                     	;# 
  1246     049B                     	;# 
  1247     049C                     	;# 
  1248     049D                     	;# 
  1249     058C                     	;# 
  1250     058C                     	;# 
  1251     058D                     	;# 
  1252     058E                     	;# 
  1253     058E                     	;# 
  1254     058F                     	;# 
  1255     0590                     	;# 
  1256     0590                     	;# 
  1257     0591                     	;# 
  1258     0592                     	;# 
  1259     0592                     	;# 
  1260     0593                     	;# 
  1261     0594                     	;# 
  1262     0594                     	;# 
  1263     0595                     	;# 
  1264     0596                     	;# 
  1265     0596                     	;# 
  1266     0597                     	;# 
  1267     0598                     	;# 
  1268     0599                     	;# 
  1269     059A                     	;# 
  1270     059B                     	;# 
  1271     059B                     	;# 
  1272     059C                     	;# 
  1273     059D                     	;# 
  1274     060C                     	;# 
  1275     060C                     	;# 
  1276     060D                     	;# 
  1277     060E                     	;# 
  1278     060F                     	;# 
  1279     060F                     	;# 
  1280     0610                     	;# 
  1281     0611                     	;# 
  1282     0612                     	;# 
  1283     0613                     	;# 
  1284     0614                     	;# 
  1285     0617                     	;# 
  1286     0617                     	;# 
  1287     0618                     	;# 
  1288     0619                     	;# 
  1289     061A                     	;# 
  1290     061A                     	;# 
  1291     061B                     	;# 
  1292     061C                     	;# 
  1293     0691                     	;# 
  1294     0692                     	;# 
  1295     0693                     	;# 
  1296     0694                     	;# 
  1297     0695                     	;# 
  1298     0696                     	;# 
  1299     0697                     	;# 
  1300     0699                     	;# 
  1301     069A                     	;# 
  1302     0711                     	;# 
  1303     0712                     	;# 
  1304     0713                     	;# 
  1305     0714                     	;# 
  1306     0715                     	;# 
  1307     0718                     	;# 
  1308     0718                     	;# 
  1309     0719                     	;# 
  1310     071A                     	;# 
  1311     071A                     	;# 
  1312     071B                     	;# 
  1313     071C                     	;# 
  1314     071D                     	;# 
  1315     0791                     	;# 
  1316     0791                     	;# 
  1317     0792                     	;# 
  1318     0793                     	;# 
  1319     0793                     	;# 
  1320     0794                     	;# 
  1321     0795                     	;# 
  1322     0795                     	;# 
  1323     0796                     	;# 
  1324     0797                     	;# 
  1325     0797                     	;# 
  1326     0798                     	;# 
  1327     0799                     	;# 
  1328     079A                     	;# 
  1329     080C                     	;# 
  1330     080C                     	;# 
  1331     080D                     	;# 
  1332     080E                     	;# 
  1333     080E                     	;# 
  1334     080F                     	;# 
  1335     0810                     	;# 
  1336     0810                     	;# 
  1337     0811                     	;# 
  1338     0812                     	;# 
  1339     0812                     	;# 
  1340     0813                     	;# 
  1341     0814                     	;# 
  1342     0815                     	;# 
  1343     0816                     	;# 
  1344     0817                     	;# 
  1345     0818                     	;# 
  1346     0819                     	;# 
  1347     081A                     	;# 
  1348     081A                     	;# 
  1349     081B                     	;# 
  1350     081C                     	;# 
  1351     081C                     	;# 
  1352     081D                     	;# 
  1353     088C                     	;# 
  1354     088D                     	;# 
  1355     088E                     	;# 
  1356     088F                     	;# 
  1357     088F                     	;# 
  1358     0890                     	;# 
  1359     0891                     	;# 
  1360     0892                     	;# 
  1361     0893                     	;# 
  1362     0893                     	;# 
  1363     0894                     	;# 
  1364     0895                     	;# 
  1365     0896                     	;# 
  1366     0897                     	;# 
  1367     0897                     	;# 
  1368     0898                     	;# 
  1369     0899                     	;# 
  1370     0D8C                     	;# 
  1371     0D8C                     	;# 
  1372     0D8D                     	;# 
  1373     0D8E                     	;# 
  1374     0D8F                     	;# 
  1375     0D8F                     	;# 
  1376     0D90                     	;# 
  1377     0D91                     	;# 
  1378     0D92                     	;# 
  1379     0D92                     	;# 
  1380     0D93                     	;# 
  1381     0D94                     	;# 
  1382     0D95                     	;# 
  1383     0D95                     	;# 
  1384     0D96                     	;# 
  1385     0D97                     	;# 
  1386     0D98                     	;# 
  1387     0D99                     	;# 
  1388     0D9A                     	;# 
  1389     0D9B                     	;# 
  1390     0D9C                     	;# 
  1391     0D9D                     	;# 
  1392     0D9E                     	;# 
  1393     0D9E                     	;# 
  1394     0D9F                     	;# 
  1395     0DA0                     	;# 
  1396     0DA1                     	;# 
  1397     0DA1                     	;# 
  1398     0DA2                     	;# 
  1399     0DA3                     	;# 
  1400     0DA4                     	;# 
  1401     0DA4                     	;# 
  1402     0DA5                     	;# 
  1403     0DA6                     	;# 
  1404     0DA7                     	;# 
  1405     0DA7                     	;# 
  1406     0DA8                     	;# 
  1407     0DA9                     	;# 
  1408     0DAA                     	;# 
  1409     0DAB                     	;# 
  1410     0DAC                     	;# 
  1411     0DAD                     	;# 
  1412     0DAE                     	;# 
  1413     0DAF                     	;# 
  1414     0E0F                     	;# 
  1415     0E10                     	;# 
  1416     0E11                     	;# 
  1417     0E12                     	;# 
  1418     0E13                     	;# 
  1419     0E14                     	;# 
  1420     0E15                     	;# 
  1421     0E16                     	;# 
  1422     0E17                     	;# 
  1423     0E17                     	;# 
  1424     0E18                     	;# 
  1425     0E18                     	;# 
  1426     0E19                     	;# 
  1427     0E1A                     	;# 
  1428     0E1B                     	;# 
  1429     0E1B                     	;# 
  1430     0E1C                     	;# 
  1431     0E1D                     	;# 
  1432     0E1E                     	;# 
  1433     0E1E                     	;# 
  1434     0E1F                     	;# 
  1435     0E20                     	;# 
  1436     0E21                     	;# 
  1437     0E22                     	;# 
  1438     0E23                     	;# 
  1439     0E24                     	;# 
  1440     0E25                     	;# 
  1441     0E26                     	;# 
  1442     0E27                     	;# 
  1443     0E28                     	;# 
  1444     0E29                     	;# 
  1445     0E2A                     	;# 
  1446     0E2B                     	;# 
  1447     0E2C                     	;# 
  1448     0E2D                     	;# 
  1449     0E2E                     	;# 
  1450     0E90                     	;# 
  1451     0E91                     	;# 
  1452     0E92                     	;# 
  1453     0E94                     	;# 
  1454     0E95                     	;# 
  1455     0E9C                     	;# 
  1456     0E9D                     	;# 
  1457     0E9E                     	;# 
  1458     0E9F                     	;# 
  1459     0EA0                     	;# 
  1460     0EA1                     	;# 
  1461     0EA2                     	;# 
  1462     0EA3                     	;# 
  1463     0EA4                     	;# 
  1464     0EA5                     	;# 
  1465     0EA6                     	;# 
  1466     0EA7                     	;# 
  1467     0F0F                     	;# 
  1468     0F10                     	;# 
  1469     0F11                     	;# 
  1470     0F12                     	;# 
  1471     0F13                     	;# 
  1472     0F14                     	;# 
  1473     0F15                     	;# 
  1474     0F16                     	;# 
  1475     0F17                     	;# 
  1476     0F18                     	;# 
  1477     0F19                     	;# 
  1478     0F1A                     	;# 
  1479     0F1B                     	;# 
  1480     0F1C                     	;# 
  1481     0F1D                     	;# 
  1482     0F1E                     	;# 
  1483     0F1F                     	;# 
  1484     0F20                     	;# 
  1485     0F21                     	;# 
  1486     0F22                     	;# 
  1487     0F23                     	;# 
  1488     0F24                     	;# 
  1489     0F25                     	;# 
  1490     0F26                     	;# 
  1491     0F27                     	;# 
  1492     0F28                     	;# 
  1493     0F29                     	;# 
  1494     0F2A                     	;# 
  1495     0F2B                     	;# 
  1496     0F2C                     	;# 
  1497     0F2D                     	;# 
  1498     0F2E                     	;# 
  1499     0F2F                     	;# 
  1500     0F30                     	;# 
  1501     0F31                     	;# 
  1502     0F32                     	;# 
  1503     0F33                     	;# 
  1504     0F34                     	;# 
  1505     0F35                     	;# 
  1506     0F36                     	;# 
  1507     0F37                     	;# 
  1508     0FE4                     	;# 
  1509     0FE5                     	;# 
  1510     0FE6                     	;# 
  1511     0FE7                     	;# 
  1512     0FE8                     	;# 
  1513     0FE9                     	;# 
  1514     0FEA                     	;# 
  1515     0FEB                     	;# 
  1516     0FED                     	;# 
  1517     0FEE                     	;# 
  1518     0FEF                     	;# 
  1519     0000                     	;# 
  1520     0001                     	;# 
  1521     0002                     	;# 
  1522     0003                     	;# 
  1523     0004                     	;# 
  1524     0005                     	;# 
  1525     0006                     	;# 
  1526     0007                     	;# 
  1527     0008                     	;# 
  1528     0009                     	;# 
  1529     000A                     	;# 
  1530     000B                     	;# 
  1531     000C                     	;# 
  1532     000D                     	;# 
  1533     000E                     	;# 
  1534     0010                     	;# 
  1535     0011                     	;# 
  1536     0012                     	;# 
  1537     0013                     	;# 
  1538     0014                     	;# 
  1539     0015                     	;# 
  1540     0016                     	;# 
  1541     0016                     	;# 
  1542     0017                     	;# 
  1543     0018                     	;# 
  1544     0019                     	;# 
  1545     001A                     	;# 
  1546     001A                     	;# 
  1547     001B                     	;# 
  1548     001B                     	;# 
  1549     001C                     	;# 
  1550     001D                     	;# 
  1551     001E                     	;# 
  1552     001F                     	;# 
  1553     008C                     	;# 
  1554     008D                     	;# 
  1555     008E                     	;# 
  1556     0090                     	;# 
  1557     0091                     	;# 
  1558     0092                     	;# 
  1559     0093                     	;# 
  1560     0094                     	;# 
  1561     0095                     	;# 
  1562     0096                     	;# 
  1563     0098                     	;# 
  1564     0099                     	;# 
  1565     009A                     	;# 
  1566     009B                     	;# 
  1567     009B                     	;# 
  1568     009C                     	;# 
  1569     009D                     	;# 
  1570     009E                     	;# 
  1571     009F                     	;# 
  1572     010C                     	;# 
  1573     010D                     	;# 
  1574     010E                     	;# 
  1575     0111                     	;# 
  1576     0112                     	;# 
  1577     0113                     	;# 
  1578     0114                     	;# 
  1579     0115                     	;# 
  1580     0116                     	;# 
  1581     0117                     	;# 
  1582     0118                     	;# 
  1583     0119                     	;# 
  1584     011C                     	;# 
  1585     018C                     	;# 
  1586     018D                     	;# 
  1587     018E                     	;# 
  1588     0191                     	;# 
  1589     0191                     	;# 
  1590     0192                     	;# 
  1591     0193                     	;# 
  1592     0193                     	;# 
  1593     0194                     	;# 
  1594     0195                     	;# 
  1595     0196                     	;# 
  1596     0197                     	;# 
  1597     0199                     	;# 
  1598     0199                     	;# 
  1599     0199                     	;# 
  1600     019A                     	;# 
  1601     019A                     	;# 
  1602     019A                     	;# 
  1603     019B                     	;# 
  1604     019B                     	;# 
  1605     019B                     	;# 
  1606     019B                     	;# 
  1607     019B                     	;# 
  1608     019C                     	;# 
  1609     019C                     	;# 
  1610     019C                     	;# 
  1611     019D                     	;# 
  1612     019D                     	;# 
  1613     019D                     	;# 
  1614     019E                     	;# 
  1615     019E                     	;# 
  1616     019E                     	;# 
  1617     019F                     	;# 
  1618     019F                     	;# 
  1619     019F                     	;# 
  1620     019F                     	;# 
  1621     019F                     	;# 
  1622     020C                     	;# 
  1623     020D                     	;# 
  1624     020E                     	;# 
  1625     0211                     	;# 
  1626     0211                     	;# 
  1627     0212                     	;# 
  1628     0212                     	;# 
  1629     0213                     	;# 
  1630     0213                     	;# 
  1631     0214                     	;# 
  1632     0214                     	;# 
  1633     0215                     	;# 
  1634     0215                     	;# 
  1635     0215                     	;# 
  1636     0215                     	;# 
  1637     0216                     	;# 
  1638     0216                     	;# 
  1639     0217                     	;# 
  1640     0217                     	;# 
  1641     028C                     	;# 
  1642     028D                     	;# 
  1643     028E                     	;# 
  1644     0291                     	;# 
  1645     0291                     	;# 
  1646     0292                     	;# 
  1647     0293                     	;# 
  1648     0294                     	;# 
  1649     0298                     	;# 
  1650     0298                     	;# 
  1651     0299                     	;# 
  1652     029A                     	;# 
  1653     029B                     	;# 
  1654     029E                     	;# 
  1655     030C                     	;# 
  1656     030D                     	;# 
  1657     030E                     	;# 
  1658     038C                     	;# 
  1659     038D                     	;# 
  1660     038E                     	;# 
  1661     0391                     	;# 
  1662     0392                     	;# 
  1663     0393                     	;# 
  1664     0394                     	;# 
  1665     0395                     	;# 
  1666     0396                     	;# 
  1667     0397                     	;# 
  1668     0398                     	;# 
  1669     0399                     	;# 
  1670     040E                     	;# 
  1671     0413                     	;# 
  1672     0413                     	;# 
  1673     0414                     	;# 
  1674     0414                     	;# 
  1675     0415                     	;# 
  1676     0416                     	;# 
  1677     0417                     	;# 
  1678     0418                     	;# 
  1679     041A                     	;# 
  1680     041A                     	;# 
  1681     041B                     	;# 
  1682     041B                     	;# 
  1683     041C                     	;# 
  1684     041D                     	;# 
  1685     041E                     	;# 
  1686     041F                     	;# 
  1687     0493                     	;# 
  1688     0494                     	;# 
  1689     0495                     	;# 
  1690     0496                     	;# 
  1691     049A                     	;# 
  1692     049B                     	;# 
  1693     049C                     	;# 
  1694     049D                     	;# 
  1695     058C                     	;# 
  1696     058C                     	;# 
  1697     058D                     	;# 
  1698     058E                     	;# 
  1699     058E                     	;# 
  1700     058F                     	;# 
  1701     0590                     	;# 
  1702     0590                     	;# 
  1703     0591                     	;# 
  1704     0592                     	;# 
  1705     0592                     	;# 
  1706     0593                     	;# 
  1707     0594                     	;# 
  1708     0594                     	;# 
  1709     0595                     	;# 
  1710     0596                     	;# 
  1711     0596                     	;# 
  1712     0597                     	;# 
  1713     0598                     	;# 
  1714     0599                     	;# 
  1715     059A                     	;# 
  1716     059B                     	;# 
  1717     059B                     	;# 
  1718     059C                     	;# 
  1719     059D                     	;# 
  1720     060C                     	;# 
  1721     060C                     	;# 
  1722     060D                     	;# 
  1723     060E                     	;# 
  1724     060F                     	;# 
  1725     060F                     	;# 
  1726     0610                     	;# 
  1727     0611                     	;# 
  1728     0612                     	;# 
  1729     0613                     	;# 
  1730     0614                     	;# 
  1731     0617                     	;# 
  1732     0617                     	;# 
  1733     0618                     	;# 
  1734     0619                     	;# 
  1735     061A                     	;# 
  1736     061A                     	;# 
  1737     061B                     	;# 
  1738     061C                     	;# 
  1739     0691                     	;# 
  1740     0692                     	;# 
  1741     0693                     	;# 
  1742     0694                     	;# 
  1743     0695                     	;# 
  1744     0696                     	;# 
  1745     0697                     	;# 
  1746     0699                     	;# 
  1747     069A                     	;# 
  1748     0711                     	;# 
  1749     0712                     	;# 
  1750     0713                     	;# 
  1751     0714                     	;# 
  1752     0715                     	;# 
  1753     0718                     	;# 
  1754     0718                     	;# 
  1755     0719                     	;# 
  1756     071A                     	;# 
  1757     071A                     	;# 
  1758     071B                     	;# 
  1759     071C                     	;# 
  1760     071D                     	;# 
  1761     0791                     	;# 
  1762     0791                     	;# 
  1763     0792                     	;# 
  1764     0793                     	;# 
  1765     0793                     	;# 
  1766     0794                     	;# 
  1767     0795                     	;# 
  1768     0795                     	;# 
  1769     0796                     	;# 
  1770     0797                     	;# 
  1771     0797                     	;# 
  1772     0798                     	;# 
  1773     0799                     	;# 
  1774     079A                     	;# 
  1775     080C                     	;# 
  1776     080C                     	;# 
  1777     080D                     	;# 
  1778     080E                     	;# 
  1779     080E                     	;# 
  1780     080F                     	;# 
  1781     0810                     	;# 
  1782     0810                     	;# 
  1783     0811                     	;# 
  1784     0812                     	;# 
  1785     0812                     	;# 
  1786     0813                     	;# 
  1787     0814                     	;# 
  1788     0815                     	;# 
  1789     0816                     	;# 
  1790     0817                     	;# 
  1791     0818                     	;# 
  1792     0819                     	;# 
  1793     081A                     	;# 
  1794     081A                     	;# 
  1795     081B                     	;# 
  1796     081C                     	;# 
  1797     081C                     	;# 
  1798     081D                     	;# 
  1799     088C                     	;# 
  1800     088D                     	;# 
  1801     088E                     	;# 
  1802     088F                     	;# 
  1803     088F                     	;# 
  1804     0890                     	;# 
  1805     0891                     	;# 
  1806     0892                     	;# 
  1807     0893                     	;# 
  1808     0893                     	;# 
  1809     0894                     	;# 
  1810     0895                     	;# 
  1811     0896                     	;# 
  1812     0897                     	;# 
  1813     0897                     	;# 
  1814     0898                     	;# 
  1815     0899                     	;# 
  1816     0D8C                     	;# 
  1817     0D8C                     	;# 
  1818     0D8D                     	;# 
  1819     0D8E                     	;# 
  1820     0D8F                     	;# 
  1821     0D8F                     	;# 
  1822     0D90                     	;# 
  1823     0D91                     	;# 
  1824     0D92                     	;# 
  1825     0D92                     	;# 
  1826     0D93                     	;# 
  1827     0D94                     	;# 
  1828     0D95                     	;# 
  1829     0D95                     	;# 
  1830     0D96                     	;# 
  1831     0D97                     	;# 
  1832     0D98                     	;# 
  1833     0D99                     	;# 
  1834     0D9A                     	;# 
  1835     0D9B                     	;# 
  1836     0D9C                     	;# 
  1837     0D9D                     	;# 
  1838     0D9E                     	;# 
  1839     0D9E                     	;# 
  1840     0D9F                     	;# 
  1841     0DA0                     	;# 
  1842     0DA1                     	;# 
  1843     0DA1                     	;# 
  1844     0DA2                     	;# 
  1845     0DA3                     	;# 
  1846     0DA4                     	;# 
  1847     0DA4                     	;# 
  1848     0DA5                     	;# 
  1849     0DA6                     	;# 
  1850     0DA7                     	;# 
  1851     0DA7                     	;# 
  1852     0DA8                     	;# 
  1853     0DA9                     	;# 
  1854     0DAA                     	;# 
  1855     0DAB                     	;# 
  1856     0DAC                     	;# 
  1857     0DAD                     	;# 
  1858     0DAE                     	;# 
  1859     0DAF                     	;# 
  1860     0E0F                     	;# 
  1861     0E10                     	;# 
  1862     0E11                     	;# 
  1863     0E12                     	;# 
  1864     0E13                     	;# 
  1865     0E14                     	;# 
  1866     0E15                     	;# 
  1867     0E16                     	;# 
  1868     0E17                     	;# 
  1869     0E17                     	;# 
  1870     0E18                     	;# 
  1871     0E18                     	;# 
  1872     0E19                     	;# 
  1873     0E1A                     	;# 
  1874     0E1B                     	;# 
  1875     0E1B                     	;# 
  1876     0E1C                     	;# 
  1877     0E1D                     	;# 
  1878     0E1E                     	;# 
  1879     0E1E                     	;# 
  1880     0E1F                     	;# 
  1881     0E20                     	;# 
  1882     0E21                     	;# 
  1883     0E22                     	;# 
  1884     0E23                     	;# 
  1885     0E24                     	;# 
  1886     0E25                     	;# 
  1887     0E26                     	;# 
  1888     0E27                     	;# 
  1889     0E28                     	;# 
  1890     0E29                     	;# 
  1891     0E2A                     	;# 
  1892     0E2B                     	;# 
  1893     0E2C                     	;# 
  1894     0E2D                     	;# 
  1895     0E2E                     	;# 
  1896     0E90                     	;# 
  1897     0E91                     	;# 
  1898     0E92                     	;# 
  1899     0E94                     	;# 
  1900     0E95                     	;# 
  1901     0E9C                     	;# 
  1902     0E9D                     	;# 
  1903     0E9E                     	;# 
  1904     0E9F                     	;# 
  1905     0EA0                     	;# 
  1906     0EA1                     	;# 
  1907     0EA2                     	;# 
  1908     0EA3                     	;# 
  1909     0EA4                     	;# 
  1910     0EA5                     	;# 
  1911     0EA6                     	;# 
  1912     0EA7                     	;# 
  1913     0F0F                     	;# 
  1914     0F10                     	;# 
  1915     0F11                     	;# 
  1916     0F12                     	;# 
  1917     0F13                     	;# 
  1918     0F14                     	;# 
  1919     0F15                     	;# 
  1920     0F16                     	;# 
  1921     0F17                     	;# 
  1922     0F18                     	;# 
  1923     0F19                     	;# 
  1924     0F1A                     	;# 
  1925     0F1B                     	;# 
  1926     0F1C                     	;# 
  1927     0F1D                     	;# 
  1928     0F1E                     	;# 
  1929     0F1F                     	;# 
  1930     0F20                     	;# 
  1931     0F21                     	;# 
  1932     0F22                     	;# 
  1933     0F23                     	;# 
  1934     0F24                     	;# 
  1935     0F25                     	;# 
  1936     0F26                     	;# 
  1937     0F27                     	;# 
  1938     0F28                     	;# 
  1939     0F29                     	;# 
  1940     0F2A                     	;# 
  1941     0F2B                     	;# 
  1942     0F2C                     	;# 
  1943     0F2D                     	;# 
  1944     0F2E                     	;# 
  1945     0F2F                     	;# 
  1946     0F30                     	;# 
  1947     0F31                     	;# 
  1948     0F32                     	;# 
  1949     0F33                     	;# 
  1950     0F34                     	;# 
  1951     0F35                     	;# 
  1952     0F36                     	;# 
  1953     0F37                     	;# 
  1954     0FE4                     	;# 
  1955     0FE5                     	;# 
  1956     0FE6                     	;# 
  1957     0FE7                     	;# 
  1958     0FE8                     	;# 
  1959     0FE9                     	;# 
  1960     0FEA                     	;# 
  1961     0FEB                     	;# 
  1962     0FED                     	;# 
  1963     0FEE                     	;# 
  1964     0FEF                     	;# 
  1965     0000                     	;# 
  1966     0001                     	;# 
  1967     0002                     	;# 
  1968     0003                     	;# 
  1969     0004                     	;# 
  1970     0005                     	;# 
  1971     0006                     	;# 
  1972     0007                     	;# 
  1973     0008                     	;# 
  1974     0009                     	;# 
  1975     000A                     	;# 
  1976     000B                     	;# 
  1977     000C                     	;# 
  1978     000D                     	;# 
  1979     000E                     	;# 
  1980     0010                     	;# 
  1981     0011                     	;# 
  1982     0012                     	;# 
  1983     0013                     	;# 
  1984     0014                     	;# 
  1985     0015                     	;# 
  1986     0016                     	;# 
  1987     0016                     	;# 
  1988     0017                     	;# 
  1989     0018                     	;# 
  1990     0019                     	;# 
  1991     001A                     	;# 
  1992     001A                     	;# 
  1993     001B                     	;# 
  1994     001B                     	;# 
  1995     001C                     	;# 
  1996     001D                     	;# 
  1997     001E                     	;# 
  1998     001F                     	;# 
  1999     008C                     	;# 
  2000     008D                     	;# 
  2001     008E                     	;# 
  2002     0090                     	;# 
  2003     0091                     	;# 
  2004     0092                     	;# 
  2005     0093                     	;# 
  2006     0094                     	;# 
  2007     0095                     	;# 
  2008     0096                     	;# 
  2009     0098                     	;# 
  2010     0099                     	;# 
  2011     009A                     	;# 
  2012     009B                     	;# 
  2013     009B                     	;# 
  2014     009C                     	;# 
  2015     009D                     	;# 
  2016     009E                     	;# 
  2017     009F                     	;# 
  2018     010C                     	;# 
  2019     010D                     	;# 
  2020     010E                     	;# 
  2021     0111                     	;# 
  2022     0112                     	;# 
  2023     0113                     	;# 
  2024     0114                     	;# 
  2025     0115                     	;# 
  2026     0116                     	;# 
  2027     0117                     	;# 
  2028     0118                     	;# 
  2029     0119                     	;# 
  2030     011C                     	;# 
  2031     018C                     	;# 
  2032     018D                     	;# 
  2033     018E                     	;# 
  2034     0191                     	;# 
  2035     0191                     	;# 
  2036     0192                     	;# 
  2037     0193                     	;# 
  2038     0193                     	;# 
  2039     0194                     	;# 
  2040     0195                     	;# 
  2041     0196                     	;# 
  2042     0197                     	;# 
  2043     0199                     	;# 
  2044     0199                     	;# 
  2045     0199                     	;# 
  2046     019A                     	;# 
  2047     019A                     	;# 
  2048     019A                     	;# 
  2049     019B                     	;# 
  2050     019B                     	;# 
  2051     019B                     	;# 
  2052     019B                     	;# 
  2053     019B                     	;# 
  2054     019C                     	;# 
  2055     019C                     	;# 
  2056     019C                     	;# 
  2057     019D                     	;# 
  2058     019D                     	;# 
  2059     019D                     	;# 
  2060     019E                     	;# 
  2061     019E                     	;# 
  2062     019E                     	;# 
  2063     019F                     	;# 
  2064     019F                     	;# 
  2065     019F                     	;# 
  2066     019F                     	;# 
  2067     019F                     	;# 
  2068     020C                     	;# 
  2069     020D                     	;# 
  2070     020E                     	;# 
  2071     0211                     	;# 
  2072     0211                     	;# 
  2073     0212                     	;# 
  2074     0212                     	;# 
  2075     0213                     	;# 
  2076     0213                     	;# 
  2077     0214                     	;# 
  2078     0214                     	;# 
  2079     0215                     	;# 
  2080     0215                     	;# 
  2081     0215                     	;# 
  2082     0215                     	;# 
  2083     0216                     	;# 
  2084     0216                     	;# 
  2085     0217                     	;# 
  2086     0217                     	;# 
  2087     028C                     	;# 
  2088     028D                     	;# 
  2089     028E                     	;# 
  2090     0291                     	;# 
  2091     0291                     	;# 
  2092     0292                     	;# 
  2093     0293                     	;# 
  2094     0294                     	;# 
  2095     0298                     	;# 
  2096     0298                     	;# 
  2097     0299                     	;# 
  2098     029A                     	;# 
  2099     029B                     	;# 
  2100     029E                     	;# 
  2101     030C                     	;# 
  2102     030D                     	;# 
  2103     030E                     	;# 
  2104     038C                     	;# 
  2105     038D                     	;# 
  2106     038E                     	;# 
  2107     0391                     	;# 
  2108     0392                     	;# 
  2109     0393                     	;# 
  2110     0394                     	;# 
  2111     0395                     	;# 
  2112     0396                     	;# 
  2113     0397                     	;# 
  2114     0398                     	;# 
  2115     0399                     	;# 
  2116     040E                     	;# 
  2117     0413                     	;# 
  2118     0413                     	;# 
  2119     0414                     	;# 
  2120     0414                     	;# 
  2121     0415                     	;# 
  2122     0416                     	;# 
  2123     0417                     	;# 
  2124     0418                     	;# 
  2125     041A                     	;# 
  2126     041A                     	;# 
  2127     041B                     	;# 
  2128     041B                     	;# 
  2129     041C                     	;# 
  2130     041D                     	;# 
  2131     041E                     	;# 
  2132     041F                     	;# 
  2133     0493                     	;# 
  2134     0494                     	;# 
  2135     0495                     	;# 
  2136     0496                     	;# 
  2137     049A                     	;# 
  2138     049B                     	;# 
  2139     049C                     	;# 
  2140     049D                     	;# 
  2141     058C                     	;# 
  2142     058C                     	;# 
  2143     058D                     	;# 
  2144     058E                     	;# 
  2145     058E                     	;# 
  2146     058F                     	;# 
  2147     0590                     	;# 
  2148     0590                     	;# 
  2149     0591                     	;# 
  2150     0592                     	;# 
  2151     0592                     	;# 
  2152     0593                     	;# 
  2153     0594                     	;# 
  2154     0594                     	;# 
  2155     0595                     	;# 
  2156     0596                     	;# 
  2157     0596                     	;# 
  2158     0597                     	;# 
  2159     0598                     	;# 
  2160     0599                     	;# 
  2161     059A                     	;# 
  2162     059B                     	;# 
  2163     059B                     	;# 
  2164     059C                     	;# 
  2165     059D                     	;# 
  2166     060C                     	;# 
  2167     060C                     	;# 
  2168     060D                     	;# 
  2169     060E                     	;# 
  2170     060F                     	;# 
  2171     060F                     	;# 
  2172     0610                     	;# 
  2173     0611                     	;# 
  2174     0612                     	;# 
  2175     0613                     	;# 
  2176     0614                     	;# 
  2177     0617                     	;# 
  2178     0617                     	;# 
  2179     0618                     	;# 
  2180     0619                     	;# 
  2181     061A                     	;# 
  2182     061A                     	;# 
  2183     061B                     	;# 
  2184     061C                     	;# 
  2185     0691                     	;# 
  2186     0692                     	;# 
  2187     0693                     	;# 
  2188     0694                     	;# 
  2189     0695                     	;# 
  2190     0696                     	;# 
  2191     0697                     	;# 
  2192     0699                     	;# 
  2193     069A                     	;# 
  2194     0711                     	;# 
  2195     0712                     	;# 
  2196     0713                     	;# 
  2197     0714                     	;# 
  2198     0715                     	;# 
  2199     0718                     	;# 
  2200     0718                     	;# 
  2201     0719                     	;# 
  2202     071A                     	;# 
  2203     071A                     	;# 
  2204     071B                     	;# 
  2205     071C                     	;# 
  2206     071D                     	;# 
  2207     0791                     	;# 
  2208     0791                     	;# 
  2209     0792                     	;# 
  2210     0793                     	;# 
  2211     0793                     	;# 
  2212     0794                     	;# 
  2213     0795                     	;# 
  2214     0795                     	;# 
  2215     0796                     	;# 
  2216     0797                     	;# 
  2217     0797                     	;# 
  2218     0798                     	;# 
  2219     0799                     	;# 
  2220     079A                     	;# 
  2221     080C                     	;# 
  2222     080C                     	;# 
  2223     080D                     	;# 
  2224     080E                     	;# 
  2225     080E                     	;# 
  2226     080F                     	;# 
  2227     0810                     	;# 
  2228     0810                     	;# 
  2229     0811                     	;# 
  2230     0812                     	;# 
  2231     0812                     	;# 
  2232     0813                     	;# 
  2233     0814                     	;# 
  2234     0815                     	;# 
  2235     0816                     	;# 
  2236     0817                     	;# 
  2237     0818                     	;# 
  2238     0819                     	;# 
  2239     081A                     	;# 
  2240     081A                     	;# 
  2241     081B                     	;# 
  2242     081C                     	;# 
  2243     081C                     	;# 
  2244     081D                     	;# 
  2245     088C                     	;# 
  2246     088D                     	;# 
  2247     088E                     	;# 
  2248     088F                     	;# 
  2249     088F                     	;# 
  2250     0890                     	;# 
  2251     0891                     	;# 
  2252     0892                     	;# 
  2253     0893                     	;# 
  2254     0893                     	;# 
  2255     0894                     	;# 
  2256     0895                     	;# 
  2257     0896                     	;# 
  2258     0897                     	;# 
  2259     0897                     	;# 
  2260     0898                     	;# 
  2261     0899                     	;# 
  2262     0D8C                     	;# 
  2263     0D8C                     	;# 
  2264     0D8D                     	;# 
  2265     0D8E                     	;# 
  2266     0D8F                     	;# 
  2267     0D8F                     	;# 
  2268     0D90                     	;# 
  2269     0D91                     	;# 
  2270     0D92                     	;# 
  2271     0D92                     	;# 
  2272     0D93                     	;# 
  2273     0D94                     	;# 
  2274     0D95                     	;# 
  2275     0D95                     	;# 
  2276     0D96                     	;# 
  2277     0D97                     	;# 
  2278     0D98                     	;# 
  2279     0D99                     	;# 
  2280     0D9A                     	;# 
  2281     0D9B                     	;# 
  2282     0D9C                     	;# 
  2283     0D9D                     	;# 
  2284     0D9E                     	;# 
  2285     0D9E                     	;# 
  2286     0D9F                     	;# 
  2287     0DA0                     	;# 
  2288     0DA1                     	;# 
  2289     0DA1                     	;# 
  2290     0DA2                     	;# 
  2291     0DA3                     	;# 
  2292     0DA4                     	;# 
  2293     0DA4                     	;# 
  2294     0DA5                     	;# 
  2295     0DA6                     	;# 
  2296     0DA7                     	;# 
  2297     0DA7                     	;# 
  2298     0DA8                     	;# 
  2299     0DA9                     	;# 
  2300     0DAA                     	;# 
  2301     0DAB                     	;# 
  2302     0DAC                     	;# 
  2303     0DAD                     	;# 
  2304     0DAE                     	;# 
  2305     0DAF                     	;# 
  2306     0E0F                     	;# 
  2307     0E10                     	;# 
  2308     0E11                     	;# 
  2309     0E12                     	;# 
  2310     0E13                     	;# 
  2311     0E14                     	;# 
  2312     0E15                     	;# 
  2313     0E16                     	;# 
  2314     0E17                     	;# 
  2315     0E17                     	;# 
  2316     0E18                     	;# 
  2317     0E18                     	;# 
  2318     0E19                     	;# 
  2319     0E1A                     	;# 
  2320     0E1B                     	;# 
  2321     0E1B                     	;# 
  2322     0E1C                     	;# 
  2323     0E1D                     	;# 
  2324     0E1E                     	;# 
  2325     0E1E                     	;# 
  2326     0E1F                     	;# 
  2327     0E20                     	;# 
  2328     0E21                     	;# 
  2329     0E22                     	;# 
  2330     0E23                     	;# 
  2331     0E24                     	;# 
  2332     0E25                     	;# 
  2333     0E26                     	;# 
  2334     0E27                     	;# 
  2335     0E28                     	;# 
  2336     0E29                     	;# 
  2337     0E2A                     	;# 
  2338     0E2B                     	;# 
  2339     0E2C                     	;# 
  2340     0E2D                     	;# 
  2341     0E2E                     	;# 
  2342     0E90                     	;# 
  2343     0E91                     	;# 
  2344     0E92                     	;# 
  2345     0E94                     	;# 
  2346     0E95                     	;# 
  2347     0E9C                     	;# 
  2348     0E9D                     	;# 
  2349     0E9E                     	;# 
  2350     0E9F                     	;# 
  2351     0EA0                     	;# 
  2352     0EA1                     	;# 
  2353     0EA2                     	;# 
  2354     0EA3                     	;# 
  2355     0EA4                     	;# 
  2356     0EA5                     	;# 
  2357     0EA6                     	;# 
  2358     0EA7                     	;# 
  2359     0F0F                     	;# 
  2360     0F10                     	;# 
  2361     0F11                     	;# 
  2362     0F12                     	;# 
  2363     0F13                     	;# 
  2364     0F14                     	;# 
  2365     0F15                     	;# 
  2366     0F16                     	;# 
  2367     0F17                     	;# 
  2368     0F18                     	;# 
  2369     0F19                     	;# 
  2370     0F1A                     	;# 
  2371     0F1B                     	;# 
  2372     0F1C                     	;# 
  2373     0F1D                     	;# 
  2374     0F1E                     	;# 
  2375     0F1F                     	;# 
  2376     0F20                     	;# 
  2377     0F21                     	;# 
  2378     0F22                     	;# 
  2379     0F23                     	;# 
  2380     0F24                     	;# 
  2381     0F25                     	;# 
  2382     0F26                     	;# 
  2383     0F27                     	;# 
  2384     0F28                     	;# 
  2385     0F29                     	;# 
  2386     0F2A                     	;# 
  2387     0F2B                     	;# 
  2388     0F2C                     	;# 
  2389     0F2D                     	;# 
  2390     0F2E                     	;# 
  2391     0F2F                     	;# 
  2392     0F30                     	;# 
  2393     0F31                     	;# 
  2394     0F32                     	;# 
  2395     0F33                     	;# 
  2396     0F34                     	;# 
  2397     0F35                     	;# 
  2398     0F36                     	;# 
  2399     0F37                     	;# 
  2400     0FE4                     	;# 
  2401     0FE5                     	;# 
  2402     0FE6                     	;# 
  2403     0FE7                     	;# 
  2404     0FE8                     	;# 
  2405     0FE9                     	;# 
  2406     0FEA                     	;# 
  2407     0FEB                     	;# 
  2408     0FED                     	;# 
  2409     0FEE                     	;# 
  2410     0FEF                     	;# 
  2411     0000                     	;# 
  2412     0001                     	;# 
  2413     0002                     	;# 
  2414     0003                     	;# 
  2415     0004                     	;# 
  2416     0005                     	;# 
  2417     0006                     	;# 
  2418     0007                     	;# 
  2419     0008                     	;# 
  2420     0009                     	;# 
  2421     000A                     	;# 
  2422     000B                     	;# 
  2423     000C                     	;# 
  2424     000D                     	;# 
  2425     000E                     	;# 
  2426     0010                     	;# 
  2427     0011                     	;# 
  2428     0012                     	;# 
  2429     0013                     	;# 
  2430     0014                     	;# 
  2431     0015                     	;# 
  2432     0016                     	;# 
  2433     0016                     	;# 
  2434     0017                     	;# 
  2435     0018                     	;# 
  2436     0019                     	;# 
  2437     001A                     	;# 
  2438     001A                     	;# 
  2439     001B                     	;# 
  2440     001B                     	;# 
  2441     001C                     	;# 
  2442     001D                     	;# 
  2443     001E                     	;# 
  2444     001F                     	;# 
  2445     008C                     	;# 
  2446     008D                     	;# 
  2447     008E                     	;# 
  2448     0090                     	;# 
  2449     0091                     	;# 
  2450     0092                     	;# 
  2451     0093                     	;# 
  2452     0094                     	;# 
  2453     0095                     	;# 
  2454     0096                     	;# 
  2455     0098                     	;# 
  2456     0099                     	;# 
  2457     009A                     	;# 
  2458     009B                     	;# 
  2459     009B                     	;# 
  2460     009C                     	;# 
  2461     009D                     	;# 
  2462     009E                     	;# 
  2463     009F                     	;# 
  2464     010C                     	;# 
  2465     010D                     	;# 
  2466     010E                     	;# 
  2467     0111                     	;# 
  2468     0112                     	;# 
  2469     0113                     	;# 
  2470     0114                     	;# 
  2471     0115                     	;# 
  2472     0116                     	;# 
  2473     0117                     	;# 
  2474     0118                     	;# 
  2475     0119                     	;# 
  2476     011C                     	;# 
  2477     018C                     	;# 
  2478     018D                     	;# 
  2479     018E                     	;# 
  2480     0191                     	;# 
  2481     0191                     	;# 
  2482     0192                     	;# 
  2483     0193                     	;# 
  2484     0193                     	;# 
  2485     0194                     	;# 
  2486     0195                     	;# 
  2487     0196                     	;# 
  2488     0197                     	;# 
  2489     0199                     	;# 
  2490     0199                     	;# 
  2491     0199                     	;# 
  2492     019A                     	;# 
  2493     019A                     	;# 
  2494     019A                     	;# 
  2495     019B                     	;# 
  2496     019B                     	;# 
  2497     019B                     	;# 
  2498     019B                     	;# 
  2499     019B                     	;# 
  2500     019C                     	;# 
  2501     019C                     	;# 
  2502     019C                     	;# 
  2503     019D                     	;# 
  2504     019D                     	;# 
  2505     019D                     	;# 
  2506     019E                     	;# 
  2507     019E                     	;# 
  2508     019E                     	;# 
  2509     019F                     	;# 
  2510     019F                     	;# 
  2511     019F                     	;# 
  2512     019F                     	;# 
  2513     019F                     	;# 
  2514     020C                     	;# 
  2515     020D                     	;# 
  2516     020E                     	;# 
  2517     0211                     	;# 
  2518     0211                     	;# 
  2519     0212                     	;# 
  2520     0212                     	;# 
  2521     0213                     	;# 
  2522     0213                     	;# 
  2523     0214                     	;# 
  2524     0214                     	;# 
  2525     0215                     	;# 
  2526     0215                     	;# 
  2527     0215                     	;# 
  2528     0215                     	;# 
  2529     0216                     	;# 
  2530     0216                     	;# 
  2531     0217                     	;# 
  2532     0217                     	;# 
  2533     028C                     	;# 
  2534     028D                     	;# 
  2535     028E                     	;# 
  2536     0291                     	;# 
  2537     0291                     	;# 
  2538     0292                     	;# 
  2539     0293                     	;# 
  2540     0294                     	;# 
  2541     0298                     	;# 
  2542     0298                     	;# 
  2543     0299                     	;# 
  2544     029A                     	;# 
  2545     029B                     	;# 
  2546     029E                     	;# 
  2547     030C                     	;# 
  2548     030D                     	;# 
  2549     030E                     	;# 
  2550     038C                     	;# 
  2551     038D                     	;# 
  2552     038E                     	;# 
  2553     0391                     	;# 
  2554     0392                     	;# 
  2555     0393                     	;# 
  2556     0394                     	;# 
  2557     0395                     	;# 
  2558     0396                     	;# 
  2559     0397                     	;# 
  2560     0398                     	;# 
  2561     0399                     	;# 
  2562     040E                     	;# 
  2563     0413                     	;# 
  2564     0413                     	;# 
  2565     0414                     	;# 
  2566     0414                     	;# 
  2567     0415                     	;# 
  2568     0416                     	;# 
  2569     0417                     	;# 
  2570     0418                     	;# 
  2571     041A                     	;# 
  2572     041A                     	;# 
  2573     041B                     	;# 
  2574     041B                     	;# 
  2575     041C                     	;# 
  2576     041D                     	;# 
  2577     041E                     	;# 
  2578     041F                     	;# 
  2579     0493                     	;# 
  2580     0494                     	;# 
  2581     0495                     	;# 
  2582     0496                     	;# 
  2583     049A                     	;# 
  2584     049B                     	;# 
  2585     049C                     	;# 
  2586     049D                     	;# 
  2587     058C                     	;# 
  2588     058C                     	;# 
  2589     058D                     	;# 
  2590     058E                     	;# 
  2591     058E                     	;# 
  2592     058F                     	;# 
  2593     0590                     	;# 
  2594     0590                     	;# 
  2595     0591                     	;# 
  2596     0592                     	;# 
  2597     0592                     	;# 
  2598     0593                     	;# 
  2599     0594                     	;# 
  2600     0594                     	;# 
  2601     0595                     	;# 
  2602     0596                     	;# 
  2603     0596                     	;# 
  2604     0597                     	;# 
  2605     0598                     	;# 
  2606     0599                     	;# 
  2607     059A                     	;# 
  2608     059B                     	;# 
  2609     059B                     	;# 
  2610     059C                     	;# 
  2611     059D                     	;# 
  2612     060C                     	;# 
  2613     060C                     	;# 
  2614     060D                     	;# 
  2615     060E                     	;# 
  2616     060F                     	;# 
  2617     060F                     	;# 
  2618     0610                     	;# 
  2619     0611                     	;# 
  2620     0612                     	;# 
  2621     0613                     	;# 
  2622     0614                     	;# 
  2623     0617                     	;# 
  2624     0617                     	;# 
  2625     0618                     	;# 
  2626     0619                     	;# 
  2627     061A                     	;# 
  2628     061A                     	;# 
  2629     061B                     	;# 
  2630     061C                     	;# 
  2631     0691                     	;# 
  2632     0692                     	;# 
  2633     0693                     	;# 
  2634     0694                     	;# 
  2635     0695                     	;# 
  2636     0696                     	;# 
  2637     0697                     	;# 
  2638     0699                     	;# 
  2639     069A                     	;# 
  2640     0711                     	;# 
  2641     0712                     	;# 
  2642     0713                     	;# 
  2643     0714                     	;# 
  2644     0715                     	;# 
  2645     0718                     	;# 
  2646     0718                     	;# 
  2647     0719                     	;# 
  2648     071A                     	;# 
  2649     071A                     	;# 
  2650     071B                     	;# 
  2651     071C                     	;# 
  2652     071D                     	;# 
  2653     0791                     	;# 
  2654     0791                     	;# 
  2655     0792                     	;# 
  2656     0793                     	;# 
  2657     0793                     	;# 
  2658     0794                     	;# 
  2659     0795                     	;# 
  2660     0795                     	;# 
  2661     0796                     	;# 
  2662     0797                     	;# 
  2663     0797                     	;# 
  2664     0798                     	;# 
  2665     0799                     	;# 
  2666     079A                     	;# 
  2667     080C                     	;# 
  2668     080C                     	;# 
  2669     080D                     	;# 
  2670     080E                     	;# 
  2671     080E                     	;# 
  2672     080F                     	;# 
  2673     0810                     	;# 
  2674     0810                     	;# 
  2675     0811                     	;# 
  2676     0812                     	;# 
  2677     0812                     	;# 
  2678     0813                     	;# 
  2679     0814                     	;# 
  2680     0815                     	;# 
  2681     0816                     	;# 
  2682     0817                     	;# 
  2683     0818                     	;# 
  2684     0819                     	;# 
  2685     081A                     	;# 
  2686     081A                     	;# 
  2687     081B                     	;# 
  2688     081C                     	;# 
  2689     081C                     	;# 
  2690     081D                     	;# 
  2691     088C                     	;# 
  2692     088D                     	;# 
  2693     088E                     	;# 
  2694     088F                     	;# 
  2695     088F                     	;# 
  2696     0890                     	;# 
  2697     0891                     	;# 
  2698     0892                     	;# 
  2699     0893                     	;# 
  2700     0893                     	;# 
  2701     0894                     	;# 
  2702     0895                     	;# 
  2703     0896                     	;# 
  2704     0897                     	;# 
  2705     0897                     	;# 
  2706     0898                     	;# 
  2707     0899                     	;# 
  2708     0D8C                     	;# 
  2709     0D8C                     	;# 
  2710     0D8D                     	;# 
  2711     0D8E                     	;# 
  2712     0D8F                     	;# 
  2713     0D8F                     	;# 
  2714     0D90                     	;# 
  2715     0D91                     	;# 
  2716     0D92                     	;# 
  2717     0D92                     	;# 
  2718     0D93                     	;# 
  2719     0D94                     	;# 
  2720     0D95                     	;# 
  2721     0D95                     	;# 
  2722     0D96                     	;# 
  2723     0D97                     	;# 
  2724     0D98                     	;# 
  2725     0D99                     	;# 
  2726     0D9A                     	;# 
  2727     0D9B                     	;# 
  2728     0D9C                     	;# 
  2729     0D9D                     	;# 
  2730     0D9E                     	;# 
  2731     0D9E                     	;# 
  2732     0D9F                     	;# 
  2733     0DA0                     	;# 
  2734     0DA1                     	;# 
  2735     0DA1                     	;# 
  2736     0DA2                     	;# 
  2737     0DA3                     	;# 
  2738     0DA4                     	;# 
  2739     0DA4                     	;# 
  2740     0DA5                     	;# 
  2741     0DA6                     	;# 
  2742     0DA7                     	;# 
  2743     0DA7                     	;# 
  2744     0DA8                     	;# 
  2745     0DA9                     	;# 
  2746     0DAA                     	;# 
  2747     0DAB                     	;# 
  2748     0DAC                     	;# 
  2749     0DAD                     	;# 
  2750     0DAE                     	;# 
  2751     0DAF                     	;# 
  2752     0E0F                     	;# 
  2753     0E10                     	;# 
  2754     0E11                     	;# 
  2755     0E12                     	;# 
  2756     0E13                     	;# 
  2757     0E14                     	;# 
  2758     0E15                     	;# 
  2759     0E16                     	;# 
  2760     0E17                     	;# 
  2761     0E17                     	;# 
  2762     0E18                     	;# 
  2763     0E18                     	;# 
  2764     0E19                     	;# 
  2765     0E1A                     	;# 
  2766     0E1B                     	;# 
  2767     0E1B                     	;# 
  2768     0E1C                     	;# 
  2769     0E1D                     	;# 
  2770     0E1E                     	;# 
  2771     0E1E                     	;# 
  2772     0E1F                     	;# 
  2773     0E20                     	;# 
  2774     0E21                     	;# 
  2775     0E22                     	;# 
  2776     0E23                     	;# 
  2777     0E24                     	;# 
  2778     0E25                     	;# 
  2779     0E26                     	;# 
  2780     0E27                     	;# 
  2781     0E28                     	;# 
  2782     0E29                     	;# 
  2783     0E2A                     	;# 
  2784     0E2B                     	;# 
  2785     0E2C                     	;# 
  2786     0E2D                     	;# 
  2787     0E2E                     	;# 
  2788     0E90                     	;# 
  2789     0E91                     	;# 
  2790     0E92                     	;# 
  2791     0E94                     	;# 
  2792     0E95                     	;# 
  2793     0E9C                     	;# 
  2794     0E9D                     	;# 
  2795     0E9E                     	;# 
  2796     0E9F                     	;# 
  2797     0EA0                     	;# 
  2798     0EA1                     	;# 
  2799     0EA2                     	;# 
  2800     0EA3                     	;# 
  2801     0EA4                     	;# 
  2802     0EA5                     	;# 
  2803     0EA6                     	;# 
  2804     0EA7                     	;# 
  2805     0F0F                     	;# 
  2806     0F10                     	;# 
  2807     0F11                     	;# 
  2808     0F12                     	;# 
  2809     0F13                     	;# 
  2810     0F14                     	;# 
  2811     0F15                     	;# 
  2812     0F16                     	;# 
  2813     0F17                     	;# 
  2814     0F18                     	;# 
  2815     0F19                     	;# 
  2816     0F1A                     	;# 
  2817     0F1B                     	;# 
  2818     0F1C                     	;# 
  2819     0F1D                     	;# 
  2820     0F1E                     	;# 
  2821     0F1F                     	;# 
  2822     0F20                     	;# 
  2823     0F21                     	;# 
  2824     0F22                     	;# 
  2825     0F23                     	;# 
  2826     0F24                     	;# 
  2827     0F25                     	;# 
  2828     0F26                     	;# 
  2829     0F27                     	;# 
  2830     0F28                     	;# 
  2831     0F29                     	;# 
  2832     0F2A                     	;# 
  2833     0F2B                     	;# 
  2834     0F2C                     	;# 
  2835     0F2D                     	;# 
  2836     0F2E                     	;# 
  2837     0F2F                     	;# 
  2838     0F30                     	;# 
  2839     0F31                     	;# 
  2840     0F32                     	;# 
  2841     0F33                     	;# 
  2842     0F34                     	;# 
  2843     0F35                     	;# 
  2844     0F36                     	;# 
  2845     0F37                     	;# 
  2846     0FE4                     	;# 
  2847     0FE5                     	;# 
  2848     0FE6                     	;# 
  2849     0FE7                     	;# 
  2850     0FE8                     	;# 
  2851     0FE9                     	;# 
  2852     0FEA                     	;# 
  2853     0FEB                     	;# 
  2854     0FED                     	;# 
  2855     0FEE                     	;# 
  2856     0FEF                     	;# 
  2857     0000                     	;# 
  2858     0001                     	;# 
  2859     0002                     	;# 
  2860     0003                     	;# 
  2861     0004                     	;# 
  2862     0005                     	;# 
  2863     0006                     	;# 
  2864     0007                     	;# 
  2865     0008                     	;# 
  2866     0009                     	;# 
  2867     000A                     	;# 
  2868     000B                     	;# 
  2869     000C                     	;# 
  2870     000D                     	;# 
  2871     000E                     	;# 
  2872     0010                     	;# 
  2873     0011                     	;# 
  2874     0012                     	;# 
  2875     0013                     	;# 
  2876     0014                     	;# 
  2877     0015                     	;# 
  2878     0016                     	;# 
  2879     0016                     	;# 
  2880     0017                     	;# 
  2881     0018                     	;# 
  2882     0019                     	;# 
  2883     001A                     	;# 
  2884     001A                     	;# 
  2885     001B                     	;# 
  2886     001B                     	;# 
  2887     001C                     	;# 
  2888     001D                     	;# 
  2889     001E                     	;# 
  2890     001F                     	;# 
  2891     008C                     	;# 
  2892     008D                     	;# 
  2893     008E                     	;# 
  2894     0090                     	;# 
  2895     0091                     	;# 
  2896     0092                     	;# 
  2897     0093                     	;# 
  2898     0094                     	;# 
  2899     0095                     	;# 
  2900     0096                     	;# 
  2901     0098                     	;# 
  2902     0099                     	;# 
  2903     009A                     	;# 
  2904     009B                     	;# 
  2905     009B                     	;# 
  2906     009C                     	;# 
  2907     009D                     	;# 
  2908     009E                     	;# 
  2909     009F                     	;# 
  2910     010C                     	;# 
  2911     010D                     	;# 
  2912     010E                     	;# 
  2913     0111                     	;# 
  2914     0112                     	;# 
  2915     0113                     	;# 
  2916     0114                     	;# 
  2917     0115                     	;# 
  2918     0116                     	;# 
  2919     0117                     	;# 
  2920     0118                     	;# 
  2921     0119                     	;# 
  2922     011C                     	;# 
  2923     018C                     	;# 
  2924     018D                     	;# 
  2925     018E                     	;# 
  2926     0191                     	;# 
  2927     0191                     	;# 
  2928     0192                     	;# 
  2929     0193                     	;# 
  2930     0193                     	;# 
  2931     0194                     	;# 
  2932     0195                     	;# 
  2933     0196                     	;# 
  2934     0197                     	;# 
  2935     0199                     	;# 
  2936     0199                     	;# 
  2937     0199                     	;# 
  2938     019A                     	;# 
  2939     019A                     	;# 
  2940     019A                     	;# 
  2941     019B                     	;# 
  2942     019B                     	;# 
  2943     019B                     	;# 
  2944     019B                     	;# 
  2945     019B                     	;# 
  2946     019C                     	;# 
  2947     019C                     	;# 
  2948     019C                     	;# 
  2949     019D                     	;# 
  2950     019D                     	;# 
  2951     019D                     	;# 
  2952     019E                     	;# 
  2953     019E                     	;# 
  2954     019E                     	;# 
  2955     019F                     	;# 
  2956     019F                     	;# 
  2957     019F                     	;# 
  2958     019F                     	;# 
  2959     019F                     	;# 
  2960     020C                     	;# 
  2961     020D                     	;# 
  2962     020E                     	;# 
  2963     0211                     	;# 
  2964     0211                     	;# 
  2965     0212                     	;# 
  2966     0212                     	;# 
  2967     0213                     	;# 
  2968     0213                     	;# 
  2969     0214                     	;# 
  2970     0214                     	;# 
  2971     0215                     	;# 
  2972     0215                     	;# 
  2973     0215                     	;# 
  2974     0215                     	;# 
  2975     0216                     	;# 
  2976     0216                     	;# 
  2977     0217                     	;# 
  2978     0217                     	;# 
  2979     028C                     	;# 
  2980     028D                     	;# 
  2981     028E                     	;# 
  2982     0291                     	;# 
  2983     0291                     	;# 
  2984     0292                     	;# 
  2985     0293                     	;# 
  2986     0294                     	;# 
  2987     0298                     	;# 
  2988     0298                     	;# 
  2989     0299                     	;# 
  2990     029A                     	;# 
  2991     029B                     	;# 
  2992     029E                     	;# 
  2993     030C                     	;# 
  2994     030D                     	;# 
  2995     030E                     	;# 
  2996     038C                     	;# 
  2997     038D                     	;# 
  2998     038E                     	;# 
  2999     0391                     	;# 
  3000     0392                     	;# 
  3001     0393                     	;# 
  3002     0394                     	;# 
  3003     0395                     	;# 
  3004     0396                     	;# 
  3005     0397                     	;# 
  3006     0398                     	;# 
  3007     0399                     	;# 
  3008     040E                     	;# 
  3009     0413                     	;# 
  3010     0413                     	;# 
  3011     0414                     	;# 
  3012     0414                     	;# 
  3013     0415                     	;# 
  3014     0416                     	;# 
  3015     0417                     	;# 
  3016     0418                     	;# 
  3017     041A                     	;# 
  3018     041A                     	;# 
  3019     041B                     	;# 
  3020     041B                     	;# 
  3021     041C                     	;# 
  3022     041D                     	;# 
  3023     041E                     	;# 
  3024     041F                     	;# 
  3025     0493                     	;# 
  3026     0494                     	;# 
  3027     0495                     	;# 
  3028     0496                     	;# 
  3029     049A                     	;# 
  3030     049B                     	;# 
  3031     049C                     	;# 
  3032     049D                     	;# 
  3033     058C                     	;# 
  3034     058C                     	;# 
  3035     058D                     	;# 
  3036     058E                     	;# 
  3037     058E                     	;# 
  3038     058F                     	;# 
  3039     0590                     	;# 
  3040     0590                     	;# 
  3041     0591                     	;# 
  3042     0592                     	;# 
  3043     0592                     	;# 
  3044     0593                     	;# 
  3045     0594                     	;# 
  3046     0594                     	;# 
  3047     0595                     	;# 
  3048     0596                     	;# 
  3049     0596                     	;# 
  3050     0597                     	;# 
  3051     0598                     	;# 
  3052     0599                     	;# 
  3053     059A                     	;# 
  3054     059B                     	;# 
  3055     059B                     	;# 
  3056     059C                     	;# 
  3057     059D                     	;# 
  3058     060C                     	;# 
  3059     060C                     	;# 
  3060     060D                     	;# 
  3061     060E                     	;# 
  3062     060F                     	;# 
  3063     060F                     	;# 
  3064     0610                     	;# 
  3065     0611                     	;# 
  3066     0612                     	;# 
  3067     0613                     	;# 
  3068     0614                     	;# 
  3069     0617                     	;# 
  3070     0617                     	;# 
  3071     0618                     	;# 
  3072     0619                     	;# 
  3073     061A                     	;# 
  3074     061A                     	;# 
  3075     061B                     	;# 
  3076     061C                     	;# 
  3077     0691                     	;# 
  3078     0692                     	;# 
  3079     0693                     	;# 
  3080     0694                     	;# 
  3081     0695                     	;# 
  3082     0696                     	;# 
  3083     0697                     	;# 
  3084     0699                     	;# 
  3085     069A                     	;# 
  3086     0711                     	;# 
  3087     0712                     	;# 
  3088     0713                     	;# 
  3089     0714                     	;# 
  3090     0715                     	;# 
  3091     0718                     	;# 
  3092     0718                     	;# 
  3093     0719                     	;# 
  3094     071A                     	;# 
  3095     071A                     	;# 
  3096     071B                     	;# 
  3097     071C                     	;# 
  3098     071D                     	;# 
  3099     0791                     	;# 
  3100     0791                     	;# 
  3101     0792                     	;# 
  3102     0793                     	;# 
  3103     0793                     	;# 
  3104     0794                     	;# 
  3105     0795                     	;# 
  3106     0795                     	;# 
  3107     0796                     	;# 
  3108     0797                     	;# 
  3109     0797                     	;# 
  3110     0798                     	;# 
  3111     0799                     	;# 
  3112     079A                     	;# 
  3113     080C                     	;# 
  3114     080C                     	;# 
  3115     080D                     	;# 
  3116     080E                     	;# 
  3117     080E                     	;# 
  3118     080F                     	;# 
  3119     0810                     	;# 
  3120     0810                     	;# 
  3121     0811                     	;# 
  3122     0812                     	;# 
  3123     0812                     	;# 
  3124     0813                     	;# 
  3125     0814                     	;# 
  3126     0815                     	;# 
  3127     0816                     	;# 
  3128     0817                     	;# 
  3129     0818                     	;# 
  3130     0819                     	;# 
  3131     081A                     	;# 
  3132     081A                     	;# 
  3133     081B                     	;# 
  3134     081C                     	;# 
  3135     081C                     	;# 
  3136     081D                     	;# 
  3137     088C                     	;# 
  3138     088D                     	;# 
  3139     088E                     	;# 
  3140     088F                     	;# 
  3141     088F                     	;# 
  3142     0890                     	;# 
  3143     0891                     	;# 
  3144     0892                     	;# 
  3145     0893                     	;# 
  3146     0893                     	;# 
  3147     0894                     	;# 
  3148     0895                     	;# 
  3149     0896                     	;# 
  3150     0897                     	;# 
  3151     0897                     	;# 
  3152     0898                     	;# 
  3153     0899                     	;# 
  3154     0D8C                     	;# 
  3155     0D8C                     	;# 
  3156     0D8D                     	;# 
  3157     0D8E                     	;# 
  3158     0D8F                     	;# 
  3159     0D8F                     	;# 
  3160     0D90                     	;# 
  3161     0D91                     	;# 
  3162     0D92                     	;# 
  3163     0D92                     	;# 
  3164     0D93                     	;# 
  3165     0D94                     	;# 
  3166     0D95                     	;# 
  3167     0D95                     	;# 
  3168     0D96                     	;# 
  3169     0D97                     	;# 
  3170     0D98                     	;# 
  3171     0D99                     	;# 
  3172     0D9A                     	;# 
  3173     0D9B                     	;# 
  3174     0D9C                     	;# 
  3175     0D9D                     	;# 
  3176     0D9E                     	;# 
  3177     0D9E                     	;# 
  3178     0D9F                     	;# 
  3179     0DA0                     	;# 
  3180     0DA1                     	;# 
  3181     0DA1                     	;# 
  3182     0DA2                     	;# 
  3183     0DA3                     	;# 
  3184     0DA4                     	;# 
  3185     0DA4                     	;# 
  3186     0DA5                     	;# 
  3187     0DA6                     	;# 
  3188     0DA7                     	;# 
  3189     0DA7                     	;# 
  3190     0DA8                     	;# 
  3191     0DA9                     	;# 
  3192     0DAA                     	;# 
  3193     0DAB                     	;# 
  3194     0DAC                     	;# 
  3195     0DAD                     	;# 
  3196     0DAE                     	;# 
  3197     0DAF                     	;# 
  3198     0E0F                     	;# 
  3199     0E10                     	;# 
  3200     0E11                     	;# 
  3201     0E12                     	;# 
  3202     0E13                     	;# 
  3203     0E14                     	;# 
  3204     0E15                     	;# 
  3205     0E16                     	;# 
  3206     0E17                     	;# 
  3207     0E17                     	;# 
  3208     0E18                     	;# 
  3209     0E18                     	;# 
  3210     0E19                     	;# 
  3211     0E1A                     	;# 
  3212     0E1B                     	;# 
  3213     0E1B                     	;# 
  3214     0E1C                     	;# 
  3215     0E1D                     	;# 
  3216     0E1E                     	;# 
  3217     0E1E                     	;# 
  3218     0E1F                     	;# 
  3219     0E20                     	;# 
  3220     0E21                     	;# 
  3221     0E22                     	;# 
  3222     0E23                     	;# 
  3223     0E24                     	;# 
  3224     0E25                     	;# 
  3225     0E26                     	;# 
  3226     0E27                     	;# 
  3227     0E28                     	;# 
  3228     0E29                     	;# 
  3229     0E2A                     	;# 
  3230     0E2B                     	;# 
  3231     0E2C                     	;# 
  3232     0E2D                     	;# 
  3233     0E2E                     	;# 
  3234     0E90                     	;# 
  3235     0E91                     	;# 
  3236     0E92                     	;# 
  3237     0E94                     	;# 
  3238     0E95                     	;# 
  3239     0E9C                     	;# 
  3240     0E9D                     	;# 
  3241     0E9E                     	;# 
  3242     0E9F                     	;# 
  3243     0EA0                     	;# 
  3244     0EA1                     	;# 
  3245     0EA2                     	;# 
  3246     0EA3                     	;# 
  3247     0EA4                     	;# 
  3248     0EA5                     	;# 
  3249     0EA6                     	;# 
  3250     0EA7                     	;# 
  3251     0F0F                     	;# 
  3252     0F10                     	;# 
  3253     0F11                     	;# 
  3254     0F12                     	;# 
  3255     0F13                     	;# 
  3256     0F14                     	;# 
  3257     0F15                     	;# 
  3258     0F16                     	;# 
  3259     0F17                     	;# 
  3260     0F18                     	;# 
  3261     0F19                     	;# 
  3262     0F1A                     	;# 
  3263     0F1B                     	;# 
  3264     0F1C                     	;# 
  3265     0F1D                     	;# 
  3266     0F1E                     	;# 
  3267     0F1F                     	;# 
  3268     0F20                     	;# 
  3269     0F21                     	;# 
  3270     0F22                     	;# 
  3271     0F23                     	;# 
  3272     0F24                     	;# 
  3273     0F25                     	;# 
  3274     0F26                     	;# 
  3275     0F27                     	;# 
  3276     0F28                     	;# 
  3277     0F29                     	;# 
  3278     0F2A                     	;# 
  3279     0F2B                     	;# 
  3280     0F2C                     	;# 
  3281     0F2D                     	;# 
  3282     0F2E                     	;# 
  3283     0F2F                     	;# 
  3284     0F30                     	;# 
  3285     0F31                     	;# 
  3286     0F32                     	;# 
  3287     0F33                     	;# 
  3288     0F34                     	;# 
  3289     0F35                     	;# 
  3290     0F36                     	;# 
  3291     0F37                     	;# 
  3292     0FE4                     	;# 
  3293     0FE5                     	;# 
  3294     0FE6                     	;# 
  3295     0FE7                     	;# 
  3296     0FE8                     	;# 
  3297     0FE9                     	;# 
  3298     0FEA                     	;# 
  3299     0FEB                     	;# 
  3300     0FED                     	;# 
  3301     0FEE                     	;# 
  3302     0FEF                     	;# 
  3303     0000                     	;# 
  3304     0001                     	;# 
  3305     0002                     	;# 
  3306     0003                     	;# 
  3307     0004                     	;# 
  3308     0005                     	;# 
  3309     0006                     	;# 
  3310     0007                     	;# 
  3311     0008                     	;# 
  3312     0009                     	;# 
  3313     000A                     	;# 
  3314     000B                     	;# 
  3315     000C                     	;# 
  3316     000D                     	;# 
  3317     000E                     	;# 
  3318     0010                     	;# 
  3319     0011                     	;# 
  3320     0012                     	;# 
  3321     0013                     	;# 
  3322     0014                     	;# 
  3323     0015                     	;# 
  3324     0016                     	;# 
  3325     0016                     	;# 
  3326     0017                     	;# 
  3327     0018                     	;# 
  3328     0019                     	;# 
  3329     001A                     	;# 
  3330     001A                     	;# 
  3331     001B                     	;# 
  3332     001B                     	;# 
  3333     001C                     	;# 
  3334     001D                     	;# 
  3335     001E                     	;# 
  3336     001F                     	;# 
  3337     008C                     	;# 
  3338     008D                     	;# 
  3339     008E                     	;# 
  3340     0090                     	;# 
  3341     0091                     	;# 
  3342     0092                     	;# 
  3343     0093                     	;# 
  3344     0094                     	;# 
  3345     0095                     	;# 
  3346     0096                     	;# 
  3347     0098                     	;# 
  3348     0099                     	;# 
  3349     009A                     	;# 
  3350     009B                     	;# 
  3351     009B                     	;# 
  3352     009C                     	;# 
  3353     009D                     	;# 
  3354     009E                     	;# 
  3355     009F                     	;# 
  3356     010C                     	;# 
  3357     010D                     	;# 
  3358     010E                     	;# 
  3359     0111                     	;# 
  3360     0112                     	;# 
  3361     0113                     	;# 
  3362     0114                     	;# 
  3363     0115                     	;# 
  3364     0116                     	;# 
  3365     0117                     	;# 
  3366     0118                     	;# 
  3367     0119                     	;# 
  3368     011C                     	;# 
  3369     018C                     	;# 
  3370     018D                     	;# 
  3371     018E                     	;# 
  3372     0191                     	;# 
  3373     0191                     	;# 
  3374     0192                     	;# 
  3375     0193                     	;# 
  3376     0193                     	;# 
  3377     0194                     	;# 
  3378     0195                     	;# 
  3379     0196                     	;# 
  3380     0197                     	;# 
  3381     0199                     	;# 
  3382     0199                     	;# 
  3383     0199                     	;# 
  3384     019A                     	;# 
  3385     019A                     	;# 
  3386     019A                     	;# 
  3387     019B                     	;# 
  3388     019B                     	;# 
  3389     019B                     	;# 
  3390     019B                     	;# 
  3391     019B                     	;# 
  3392     019C                     	;# 
  3393     019C                     	;# 
  3394     019C                     	;# 
  3395     019D                     	;# 
  3396     019D                     	;# 
  3397     019D                     	;# 
  3398     019E                     	;# 
  3399     019E                     	;# 
  3400     019E                     	;# 
  3401     019F                     	;# 
  3402     019F                     	;# 
  3403     019F                     	;# 
  3404     019F                     	;# 
  3405     019F                     	;# 
  3406     020C                     	;# 
  3407     020D                     	;# 
  3408     020E                     	;# 
  3409     0211                     	;# 
  3410     0211                     	;# 
  3411     0212                     	;# 
  3412     0212                     	;# 
  3413     0213                     	;# 
  3414     0213                     	;# 
  3415     0214                     	;# 
  3416     0214                     	;# 
  3417     0215                     	;# 
  3418     0215                     	;# 
  3419     0215                     	;# 
  3420     0215                     	;# 
  3421     0216                     	;# 
  3422     0216                     	;# 
  3423     0217                     	;# 
  3424     0217                     	;# 
  3425     028C                     	;# 
  3426     028D                     	;# 
  3427     028E                     	;# 
  3428     0291                     	;# 
  3429     0291                     	;# 
  3430     0292                     	;# 
  3431     0293                     	;# 
  3432     0294                     	;# 
  3433     0298                     	;# 
  3434     0298                     	;# 
  3435     0299                     	;# 
  3436     029A                     	;# 
  3437     029B                     	;# 
  3438     029E                     	;# 
  3439     030C                     	;# 
  3440     030D                     	;# 
  3441     030E                     	;# 
  3442     038C                     	;# 
  3443     038D                     	;# 
  3444     038E                     	;# 
  3445     0391                     	;# 
  3446     0392                     	;# 
  3447     0393                     	;# 
  3448     0394                     	;# 
  3449     0395                     	;# 
  3450     0396                     	;# 
  3451     0397                     	;# 
  3452     0398                     	;# 
  3453     0399                     	;# 
  3454     040E                     	;# 
  3455     0413                     	;# 
  3456     0413                     	;# 
  3457     0414                     	;# 
  3458     0414                     	;# 
  3459     0415                     	;# 
  3460     0416                     	;# 
  3461     0417                     	;# 
  3462     0418                     	;# 
  3463     041A                     	;# 
  3464     041A                     	;# 
  3465     041B                     	;# 
  3466     041B                     	;# 
  3467     041C                     	;# 
  3468     041D                     	;# 
  3469     041E                     	;# 
  3470     041F                     	;# 
  3471     0493                     	;# 
  3472     0494                     	;# 
  3473     0495                     	;# 
  3474     0496                     	;# 
  3475     049A                     	;# 
  3476     049B                     	;# 
  3477     049C                     	;# 
  3478     049D                     	;# 
  3479     058C                     	;# 
  3480     058C                     	;# 
  3481     058D                     	;# 
  3482     058E                     	;# 
  3483     058E                     	;# 
  3484     058F                     	;# 
  3485     0590                     	;# 
  3486     0590                     	;# 
  3487     0591                     	;# 
  3488     0592                     	;# 
  3489     0592                     	;# 
  3490     0593                     	;# 
  3491     0594                     	;# 
  3492     0594                     	;# 
  3493     0595                     	;# 
  3494     0596                     	;# 
  3495     0596                     	;# 
  3496     0597                     	;# 
  3497     0598                     	;# 
  3498     0599                     	;# 
  3499     059A                     	;# 
  3500     059B                     	;# 
  3501     059B                     	;# 
  3502     059C                     	;# 
  3503     059D                     	;# 
  3504     060C                     	;# 
  3505     060C                     	;# 
  3506     060D                     	;# 
  3507     060E                     	;# 
  3508     060F                     	;# 
  3509     060F                     	;# 
  3510     0610                     	;# 
  3511     0611                     	;# 
  3512     0612                     	;# 
  3513     0613                     	;# 
  3514     0614                     	;# 
  3515     0617                     	;# 
  3516     0617                     	;# 
  3517     0618                     	;# 
  3518     0619                     	;# 
  3519     061A                     	;# 
  3520     061A                     	;# 
  3521     061B                     	;# 
  3522     061C                     	;# 
  3523     0691                     	;# 
  3524     0692                     	;# 
  3525     0693                     	;# 
  3526     0694                     	;# 
  3527     0695                     	;# 
  3528     0696                     	;# 
  3529     0697                     	;# 
  3530     0699                     	;# 
  3531     069A                     	;# 
  3532     0711                     	;# 
  3533     0712                     	;# 
  3534     0713                     	;# 
  3535     0714                     	;# 
  3536     0715                     	;# 
  3537     0718                     	;# 
  3538     0718                     	;# 
  3539     0719                     	;# 
  3540     071A                     	;# 
  3541     071A                     	;# 
  3542     071B                     	;# 
  3543     071C                     	;# 
  3544     071D                     	;# 
  3545     0791                     	;# 
  3546     0791                     	;# 
  3547     0792                     	;# 
  3548     0793                     	;# 
  3549     0793                     	;# 
  3550     0794                     	;# 
  3551     0795                     	;# 
  3552     0795                     	;# 
  3553     0796                     	;# 
  3554     0797                     	;# 
  3555     0797                     	;# 
  3556     0798                     	;# 
  3557     0799                     	;# 
  3558     079A                     	;# 
  3559     080C                     	;# 
  3560     080C                     	;# 
  3561     080D                     	;# 
  3562     080E                     	;# 
  3563     080E                     	;# 
  3564     080F                     	;# 
  3565     0810                     	;# 
  3566     0810                     	;# 
  3567     0811                     	;# 
  3568     0812                     	;# 
  3569     0812                     	;# 
  3570     0813                     	;# 
  3571     0814                     	;# 
  3572     0815                     	;# 
  3573     0816                     	;# 
  3574     0817                     	;# 
  3575     0818                     	;# 
  3576     0819                     	;# 
  3577     081A                     	;# 
  3578     081A                     	;# 
  3579     081B                     	;# 
  3580     081C                     	;# 
  3581     081C                     	;# 
  3582     081D                     	;# 
  3583     088C                     	;# 
  3584     088D                     	;# 
  3585     088E                     	;# 
  3586     088F                     	;# 
  3587     088F                     	;# 
  3588     0890                     	;# 
  3589     0891                     	;# 
  3590     0892                     	;# 
  3591     0893                     	;# 
  3592     0893                     	;# 
  3593     0894                     	;# 
  3594     0895                     	;# 
  3595     0896                     	;# 
  3596     0897                     	;# 
  3597     0897                     	;# 
  3598     0898                     	;# 
  3599     0899                     	;# 
  3600     0D8C                     	;# 
  3601     0D8C                     	;# 
  3602     0D8D                     	;# 
  3603     0D8E                     	;# 
  3604     0D8F                     	;# 
  3605     0D8F                     	;# 
  3606     0D90                     	;# 
  3607     0D91                     	;# 
  3608     0D92                     	;# 
  3609     0D92                     	;# 
  3610     0D93                     	;# 
  3611     0D94                     	;# 
  3612     0D95                     	;# 
  3613     0D95                     	;# 
  3614     0D96                     	;# 
  3615     0D97                     	;# 
  3616     0D98                     	;# 
  3617     0D99                     	;# 
  3618     0D9A                     	;# 
  3619     0D9B                     	;# 
  3620     0D9C                     	;# 
  3621     0D9D                     	;# 
  3622     0D9E                     	;# 
  3623     0D9E                     	;# 
  3624     0D9F                     	;# 
  3625     0DA0                     	;# 
  3626     0DA1                     	;# 
  3627     0DA1                     	;# 
  3628     0DA2                     	;# 
  3629     0DA3                     	;# 
  3630     0DA4                     	;# 
  3631     0DA4                     	;# 
  3632     0DA5                     	;# 
  3633     0DA6                     	;# 
  3634     0DA7                     	;# 
  3635     0DA7                     	;# 
  3636     0DA8                     	;# 
  3637     0DA9                     	;# 
  3638     0DAA                     	;# 
  3639     0DAB                     	;# 
  3640     0DAC                     	;# 
  3641     0DAD                     	;# 
  3642     0DAE                     	;# 
  3643     0DAF                     	;# 
  3644     0E0F                     	;# 
  3645     0E10                     	;# 
  3646     0E11                     	;# 
  3647     0E12                     	;# 
  3648     0E13                     	;# 
  3649     0E14                     	;# 
  3650     0E15                     	;# 
  3651     0E16                     	;# 
  3652     0E17                     	;# 
  3653     0E17                     	;# 
  3654     0E18                     	;# 
  3655     0E18                     	;# 
  3656     0E19                     	;# 
  3657     0E1A                     	;# 
  3658     0E1B                     	;# 
  3659     0E1B                     	;# 
  3660     0E1C                     	;# 
  3661     0E1D                     	;# 
  3662     0E1E                     	;# 
  3663     0E1E                     	;# 
  3664     0E1F                     	;# 
  3665     0E20                     	;# 
  3666     0E21                     	;# 
  3667     0E22                     	;# 
  3668     0E23                     	;# 
  3669     0E24                     	;# 
  3670     0E25                     	;# 
  3671     0E26                     	;# 
  3672     0E27                     	;# 
  3673     0E28                     	;# 
  3674     0E29                     	;# 
  3675     0E2A                     	;# 
  3676     0E2B                     	;# 
  3677     0E2C                     	;# 
  3678     0E2D                     	;# 
  3679     0E2E                     	;# 
  3680     0E90                     	;# 
  3681     0E91                     	;# 
  3682     0E92                     	;# 
  3683     0E94                     	;# 
  3684     0E95                     	;# 
  3685     0E9C                     	;# 
  3686     0E9D                     	;# 
  3687     0E9E                     	;# 
  3688     0E9F                     	;# 
  3689     0EA0                     	;# 
  3690     0EA1                     	;# 
  3691     0EA2                     	;# 
  3692     0EA3                     	;# 
  3693     0EA4                     	;# 
  3694     0EA5                     	;# 
  3695     0EA6                     	;# 
  3696     0EA7                     	;# 
  3697     0F0F                     	;# 
  3698     0F10                     	;# 
  3699     0F11                     	;# 
  3700     0F12                     	;# 
  3701     0F13                     	;# 
  3702     0F14                     	;# 
  3703     0F15                     	;# 
  3704     0F16                     	;# 
  3705     0F17                     	;# 
  3706     0F18                     	;# 
  3707     0F19                     	;# 
  3708     0F1A                     	;# 
  3709     0F1B                     	;# 
  3710     0F1C                     	;# 
  3711     0F1D                     	;# 
  3712     0F1E                     	;# 
  3713     0F1F                     	;# 
  3714     0F20                     	;# 
  3715     0F21                     	;# 
  3716     0F22                     	;# 
  3717     0F23                     	;# 
  3718     0F24                     	;# 
  3719     0F25                     	;# 
  3720     0F26                     	;# 
  3721     0F27                     	;# 
  3722     0F28                     	;# 
  3723     0F29                     	;# 
  3724     0F2A                     	;# 
  3725     0F2B                     	;# 
  3726     0F2C                     	;# 
  3727     0F2D                     	;# 
  3728     0F2E                     	;# 
  3729     0F2F                     	;# 
  3730     0F30                     	;# 
  3731     0F31                     	;# 
  3732     0F32                     	;# 
  3733     0F33                     	;# 
  3734     0F34                     	;# 
  3735     0F35                     	;# 
  3736     0F36                     	;# 
  3737     0F37                     	;# 
  3738     0FE4                     	;# 
  3739     0FE5                     	;# 
  3740     0FE6                     	;# 
  3741     0FE7                     	;# 
  3742     0FE8                     	;# 
  3743     0FE9                     	;# 
  3744     0FEA                     	;# 
  3745     0FEB                     	;# 
  3746     0FED                     	;# 
  3747     0FEE                     	;# 
  3748     0FEF                     	;# 
  3749     0000                     	;# 
  3750     0001                     	;# 
  3751     0002                     	;# 
  3752     0003                     	;# 
  3753     0004                     	;# 
  3754     0005                     	;# 
  3755     0006                     	;# 
  3756     0007                     	;# 
  3757     0008                     	;# 
  3758     0009                     	;# 
  3759     000A                     	;# 
  3760     000B                     	;# 
  3761     000C                     	;# 
  3762     000D                     	;# 
  3763     000E                     	;# 
  3764     0010                     	;# 
  3765     0011                     	;# 
  3766     0012                     	;# 
  3767     0013                     	;# 
  3768     0014                     	;# 
  3769     0015                     	;# 
  3770     0016                     	;# 
  3771     0016                     	;# 
  3772     0017                     	;# 
  3773     0018                     	;# 
  3774     0019                     	;# 
  3775     001A                     	;# 
  3776     001A                     	;# 
  3777     001B                     	;# 
  3778     001B                     	;# 
  3779     001C                     	;# 
  3780     001D                     	;# 
  3781     001E                     	;# 
  3782     001F                     	;# 
  3783     008C                     	;# 
  3784     008D                     	;# 
  3785     008E                     	;# 
  3786     0090                     	;# 
  3787     0091                     	;# 
  3788     0092                     	;# 
  3789     0093                     	;# 
  3790     0094                     	;# 
  3791     0095                     	;# 
  3792     0096                     	;# 
  3793     0098                     	;# 
  3794     0099                     	;# 
  3795     009A                     	;# 
  3796     009B                     	;# 
  3797     009B                     	;# 
  3798     009C                     	;# 
  3799     009D                     	;# 
  3800     009E                     	;# 
  3801     009F                     	;# 
  3802     010C                     	;# 
  3803     010D                     	;# 
  3804     010E                     	;# 
  3805     0111                     	;# 
  3806     0112                     	;# 
  3807     0113                     	;# 
  3808     0114                     	;# 
  3809     0115                     	;# 
  3810     0116                     	;# 
  3811     0117                     	;# 
  3812     0118                     	;# 
  3813     0119                     	;# 
  3814     011C                     	;# 
  3815     018C                     	;# 
  3816     018D                     	;# 
  3817     018E                     	;# 
  3818     0191                     	;# 
  3819     0191                     	;# 
  3820     0192                     	;# 
  3821     0193                     	;# 
  3822     0193                     	;# 
  3823     0194                     	;# 
  3824     0195                     	;# 
  3825     0196                     	;# 
  3826     0197                     	;# 
  3827     0199                     	;# 
  3828     0199                     	;# 
  3829     0199                     	;# 
  3830     019A                     	;# 
  3831     019A                     	;# 
  3832     019A                     	;# 
  3833     019B                     	;# 
  3834     019B                     	;# 
  3835     019B                     	;# 
  3836     019B                     	;# 
  3837     019B                     	;# 
  3838     019C                     	;# 
  3839     019C                     	;# 
  3840     019C                     	;# 
  3841     019D                     	;# 
  3842     019D                     	;# 
  3843     019D                     	;# 
  3844     019E                     	;# 
  3845     019E                     	;# 
  3846     019E                     	;# 
  3847     019F                     	;# 
  3848     019F                     	;# 
  3849     019F                     	;# 
  3850     019F                     	;# 
  3851     019F                     	;# 
  3852     020C                     	;# 
  3853     020D                     	;# 
  3854     020E                     	;# 
  3855     0211                     	;# 
  3856     0211                     	;# 
  3857     0212                     	;# 
  3858     0212                     	;# 
  3859     0213                     	;# 
  3860     0213                     	;# 
  3861     0214                     	;# 
  3862     0214                     	;# 
  3863     0215                     	;# 
  3864     0215                     	;# 
  3865     0215                     	;# 
  3866     0215                     	;# 
  3867     0216                     	;# 
  3868     0216                     	;# 
  3869     0217                     	;# 
  3870     0217                     	;# 
  3871     028C                     	;# 
  3872     028D                     	;# 
  3873     028E                     	;# 
  3874     0291                     	;# 
  3875     0291                     	;# 
  3876     0292                     	;# 
  3877     0293                     	;# 
  3878     0294                     	;# 
  3879     0298                     	;# 
  3880     0298                     	;# 
  3881     0299                     	;# 
  3882     029A                     	;# 
  3883     029B                     	;# 
  3884     029E                     	;# 
  3885     030C                     	;# 
  3886     030D                     	;# 
  3887     030E                     	;# 
  3888     038C                     	;# 
  3889     038D                     	;# 
  3890     038E                     	;# 
  3891     0391                     	;# 
  3892     0392                     	;# 
  3893     0393                     	;# 
  3894     0394                     	;# 
  3895     0395                     	;# 
  3896     0396                     	;# 
  3897     0397                     	;# 
  3898     0398                     	;# 
  3899     0399                     	;# 
  3900     040E                     	;# 
  3901     0413                     	;# 
  3902     0413                     	;# 
  3903     0414                     	;# 
  3904     0414                     	;# 
  3905     0415                     	;# 
  3906     0416                     	;# 
  3907     0417                     	;# 
  3908     0418                     	;# 
  3909     041A                     	;# 
  3910     041A                     	;# 
  3911     041B                     	;# 
  3912     041B                     	;# 
  3913     041C                     	;# 
  3914     041D                     	;# 
  3915     041E                     	;# 
  3916     041F                     	;# 
  3917     0493                     	;# 
  3918     0494                     	;# 
  3919     0495                     	;# 
  3920     0496                     	;# 
  3921     049A                     	;# 
  3922     049B                     	;# 
  3923     049C                     	;# 
  3924     049D                     	;# 
  3925     058C                     	;# 
  3926     058C                     	;# 
  3927     058D                     	;# 
  3928     058E                     	;# 
  3929     058E                     	;# 
  3930     058F                     	;# 
  3931     0590                     	;# 
  3932     0590                     	;# 
  3933     0591                     	;# 
  3934     0592                     	;# 
  3935     0592                     	;# 
  3936     0593                     	;# 
  3937     0594                     	;# 
  3938     0594                     	;# 
  3939     0595                     	;# 
  3940     0596                     	;# 
  3941     0596                     	;# 
  3942     0597                     	;# 
  3943     0598                     	;# 
  3944     0599                     	;# 
  3945     059A                     	;# 
  3946     059B                     	;# 
  3947     059B                     	;# 
  3948     059C                     	;# 
  3949     059D                     	;# 
  3950     060C                     	;# 
  3951     060C                     	;# 
  3952     060D                     	;# 
  3953     060E                     	;# 
  3954     060F                     	;# 
  3955     060F                     	;# 
  3956     0610                     	;# 
  3957     0611                     	;# 
  3958     0612                     	;# 
  3959     0613                     	;# 
  3960     0614                     	;# 
  3961     0617                     	;# 
  3962     0617                     	;# 
  3963     0618                     	;# 
  3964     0619                     	;# 
  3965     061A                     	;# 
  3966     061A                     	;# 
  3967     061B                     	;# 
  3968     061C                     	;# 
  3969     0691                     	;# 
  3970     0692                     	;# 
  3971     0693                     	;# 
  3972     0694                     	;# 
  3973     0695                     	;# 
  3974     0696                     	;# 
  3975     0697                     	;# 
  3976     0699                     	;# 
  3977     069A                     	;# 
  3978     0711                     	;# 
  3979     0712                     	;# 
  3980     0713                     	;# 
  3981     0714                     	;# 
  3982     0715                     	;# 
  3983     0718                     	;# 
  3984     0718                     	;# 
  3985     0719                     	;# 
  3986     071A                     	;# 
  3987     071A                     	;# 
  3988     071B                     	;# 
  3989     071C                     	;# 
  3990     071D                     	;# 
  3991     0791                     	;# 
  3992     0791                     	;# 
  3993     0792                     	;# 
  3994     0793                     	;# 
  3995     0793                     	;# 
  3996     0794                     	;# 
  3997     0795                     	;# 
  3998     0795                     	;# 
  3999     0796                     	;# 
  4000     0797                     	;# 
  4001     0797                     	;# 
  4002     0798                     	;# 
  4003     0799                     	;# 
  4004     079A                     	;# 
  4005     080C                     	;# 
  4006     080C                     	;# 
  4007     080D                     	;# 
  4008     080E                     	;# 
  4009     080E                     	;# 
  4010     080F                     	;# 
  4011     0810                     	;# 
  4012     0810                     	;# 
  4013     0811                     	;# 
  4014     0812                     	;# 
  4015     0812                     	;# 
  4016     0813                     	;# 
  4017     0814                     	;# 
  4018     0815                     	;# 
  4019     0816                     	;# 
  4020     0817                     	;# 
  4021     0818                     	;# 
  4022     0819                     	;# 
  4023     081A                     	;# 
  4024     081A                     	;# 
  4025     081B                     	;# 
  4026     081C                     	;# 
  4027     081C                     	;# 
  4028     081D                     	;# 
  4029     088C                     	;# 
  4030     088D                     	;# 
  4031     088E                     	;# 
  4032     088F                     	;# 
  4033     088F                     	;# 
  4034     0890                     	;# 
  4035     0891                     	;# 
  4036     0892                     	;# 
  4037     0893                     	;# 
  4038     0893                     	;# 
  4039     0894                     	;# 
  4040     0895                     	;# 
  4041     0896                     	;# 
  4042     0897                     	;# 
  4043     0897                     	;# 
  4044     0898                     	;# 
  4045     0899                     	;# 
  4046     0D8C                     	;# 
  4047     0D8C                     	;# 
  4048     0D8D                     	;# 
  4049     0D8E                     	;# 
  4050     0D8F                     	;# 
  4051     0D8F                     	;# 
  4052     0D90                     	;# 
  4053     0D91                     	;# 
  4054     0D92                     	;# 
  4055     0D92                     	;# 
  4056     0D93                     	;# 
  4057     0D94                     	;# 
  4058     0D95                     	;# 
  4059     0D95                     	;# 
  4060     0D96                     	;# 
  4061     0D97                     	;# 
  4062     0D98                     	;# 
  4063     0D99                     	;# 
  4064     0D9A                     	;# 
  4065     0D9B                     	;# 
  4066     0D9C                     	;# 
  4067     0D9D                     	;# 
  4068     0D9E                     	;# 
  4069     0D9E                     	;# 
  4070     0D9F                     	;# 
  4071     0DA0                     	;# 
  4072     0DA1                     	;# 
  4073     0DA1                     	;# 
  4074     0DA2                     	;# 
  4075     0DA3                     	;# 
  4076     0DA4                     	;# 
  4077     0DA4                     	;# 
  4078     0DA5                     	;# 
  4079     0DA6                     	;# 
  4080     0DA7                     	;# 
  4081     0DA7                     	;# 
  4082     0DA8                     	;# 
  4083     0DA9                     	;# 
  4084     0DAA                     	;# 
  4085     0DAB                     	;# 
  4086     0DAC                     	;# 
  4087     0DAD                     	;# 
  4088     0DAE                     	;# 
  4089     0DAF                     	;# 
  4090     0E0F                     	;# 
  4091     0E10                     	;# 
  4092     0E11                     	;# 
  4093     0E12                     	;# 
  4094     0E13                     	;# 
  4095     0E14                     	;# 
  4096     0E15                     	;# 
  4097     0E16                     	;# 
  4098     0E17                     	;# 
  4099     0E17                     	;# 
  4100     0E18                     	;# 
  4101     0E18                     	;# 
  4102     0E19                     	;# 
  4103     0E1A                     	;# 
  4104     0E1B                     	;# 
  4105     0E1B                     	;# 
  4106     0E1C                     	;# 
  4107     0E1D                     	;# 
  4108     0E1E                     	;# 
  4109     0E1E                     	;# 
  4110     0E1F                     	;# 
  4111     0E20                     	;# 
  4112     0E21                     	;# 
  4113     0E22                     	;# 
  4114     0E23                     	;# 
  4115     0E24                     	;# 
  4116     0E25                     	;# 
  4117     0E26                     	;# 
  4118     0E27                     	;# 
  4119     0E28                     	;# 
  4120     0E29                     	;# 
  4121     0E2A                     	;# 
  4122     0E2B                     	;# 
  4123     0E2C                     	;# 
  4124     0E2D                     	;# 
  4125     0E2E                     	;# 
  4126     0E90                     	;# 
  4127     0E91                     	;# 
  4128     0E92                     	;# 
  4129     0E94                     	;# 
  4130     0E95                     	;# 
  4131     0E9C                     	;# 
  4132     0E9D                     	;# 
  4133     0E9E                     	;# 
  4134     0E9F                     	;# 
  4135     0EA0                     	;# 
  4136     0EA1                     	;# 
  4137     0EA2                     	;# 
  4138     0EA3                     	;# 
  4139     0EA4                     	;# 
  4140     0EA5                     	;# 
  4141     0EA6                     	;# 
  4142     0EA7                     	;# 
  4143     0F0F                     	;# 
  4144     0F10                     	;# 
  4145     0F11                     	;# 
  4146     0F12                     	;# 
  4147     0F13                     	;# 
  4148     0F14                     	;# 
  4149     0F15                     	;# 
  4150     0F16                     	;# 
  4151     0F17                     	;# 
  4152     0F18                     	;# 
  4153     0F19                     	;# 
  4154     0F1A                     	;# 
  4155     0F1B                     	;# 
  4156     0F1C                     	;# 
  4157     0F1D                     	;# 
  4158     0F1E                     	;# 
  4159     0F1F                     	;# 
  4160     0F20                     	;# 
  4161     0F21                     	;# 
  4162     0F22                     	;# 
  4163     0F23                     	;# 
  4164     0F24                     	;# 
  4165     0F25                     	;# 
  4166     0F26                     	;# 
  4167     0F27                     	;# 
  4168     0F28                     	;# 
  4169     0F29                     	;# 
  4170     0F2A                     	;# 
  4171     0F2B                     	;# 
  4172     0F2C                     	;# 
  4173     0F2D                     	;# 
  4174     0F2E                     	;# 
  4175     0F2F                     	;# 
  4176     0F30                     	;# 
  4177     0F31                     	;# 
  4178     0F32                     	;# 
  4179     0F33                     	;# 
  4180     0F34                     	;# 
  4181     0F35                     	;# 
  4182     0F36                     	;# 
  4183     0F37                     	;# 
  4184     0FE4                     	;# 
  4185     0FE5                     	;# 
  4186     0FE6                     	;# 
  4187     0FE7                     	;# 
  4188     0FE8                     	;# 
  4189     0FE9                     	;# 
  4190     0FEA                     	;# 
  4191     0FEB                     	;# 
  4192     0FED                     	;# 
  4193     0FEE                     	;# 
  4194     0FEF                     	;# 
  4195     0000                     	;# 
  4196     0001                     	;# 
  4197     0002                     	;# 
  4198     0003                     	;# 
  4199     0004                     	;# 
  4200     0005                     	;# 
  4201     0006                     	;# 
  4202     0007                     	;# 
  4203     0008                     	;# 
  4204     0009                     	;# 
  4205     000A                     	;# 
  4206     000B                     	;# 
  4207     000C                     	;# 
  4208     000D                     	;# 
  4209     000E                     	;# 
  4210     0010                     	;# 
  4211     0011                     	;# 
  4212     0012                     	;# 
  4213     0013                     	;# 
  4214     0014                     	;# 
  4215     0015                     	;# 
  4216     0016                     	;# 
  4217     0016                     	;# 
  4218     0017                     	;# 
  4219     0018                     	;# 
  4220     0019                     	;# 
  4221     001A                     	;# 
  4222     001A                     	;# 
  4223     001B                     	;# 
  4224     001B                     	;# 
  4225     001C                     	;# 
  4226     001D                     	;# 
  4227     001E                     	;# 
  4228     001F                     	;# 
  4229     008C                     	;# 
  4230     008D                     	;# 
  4231     008E                     	;# 
  4232     0090                     	;# 
  4233     0091                     	;# 
  4234     0092                     	;# 
  4235     0093                     	;# 
  4236     0094                     	;# 
  4237     0095                     	;# 
  4238     0096                     	;# 
  4239     0098                     	;# 
  4240     0099                     	;# 
  4241     009A                     	;# 
  4242     009B                     	;# 
  4243     009B                     	;# 
  4244     009C                     	;# 
  4245     009D                     	;# 
  4246     009E                     	;# 
  4247     009F                     	;# 
  4248     010C                     	;# 
  4249     010D                     	;# 
  4250     010E                     	;# 
  4251     0111                     	;# 
  4252     0112                     	;# 
  4253     0113                     	;# 
  4254     0114                     	;# 
  4255     0115                     	;# 
  4256     0116                     	;# 
  4257     0117                     	;# 
  4258     0118                     	;# 
  4259     0119                     	;# 
  4260     011C                     	;# 
  4261     018C                     	;# 
  4262     018D                     	;# 
  4263     018E                     	;# 
  4264     0191                     	;# 
  4265     0191                     	;# 
  4266     0192                     	;# 
  4267     0193                     	;# 
  4268     0193                     	;# 
  4269     0194                     	;# 
  4270     0195                     	;# 
  4271     0196                     	;# 
  4272     0197                     	;# 
  4273     0199                     	;# 
  4274     0199                     	;# 
  4275     0199                     	;# 
  4276     019A                     	;# 
  4277     019A                     	;# 
  4278     019A                     	;# 
  4279     019B                     	;# 
  4280     019B                     	;# 
  4281     019B                     	;# 
  4282     019B                     	;# 
  4283     019B                     	;# 
  4284     019C                     	;# 
  4285     019C                     	;# 
  4286     019C                     	;# 
  4287     019D                     	;# 
  4288     019D                     	;# 
  4289     019D                     	;# 
  4290     019E                     	;# 
  4291     019E                     	;# 
  4292     019E                     	;# 
  4293     019F                     	;# 
  4294     019F                     	;# 
  4295     019F                     	;# 
  4296     019F                     	;# 
  4297     019F                     	;# 
  4298     020C                     	;# 
  4299     020D                     	;# 
  4300     020E                     	;# 
  4301     0211                     	;# 
  4302     0211                     	;# 
  4303     0212                     	;# 
  4304     0212                     	;# 
  4305     0213                     	;# 
  4306     0213                     	;# 
  4307     0214                     	;# 
  4308     0214                     	;# 
  4309     0215                     	;# 
  4310     0215                     	;# 
  4311     0215                     	;# 
  4312     0215                     	;# 
  4313     0216                     	;# 
  4314     0216                     	;# 
  4315     0217                     	;# 
  4316     0217                     	;# 
  4317     028C                     	;# 
  4318     028D                     	;# 
  4319     028E                     	;# 
  4320     0291                     	;# 
  4321     0291                     	;# 
  4322     0292                     	;# 
  4323     0293                     	;# 
  4324     0294                     	;# 
  4325     0298                     	;# 
  4326     0298                     	;# 
  4327     0299                     	;# 
  4328     029A                     	;# 
  4329     029B                     	;# 
  4330     029E                     	;# 
  4331     030C                     	;# 
  4332     030D                     	;# 
  4333     030E                     	;# 
  4334     038C                     	;# 
  4335     038D                     	;# 
  4336     038E                     	;# 
  4337     0391                     	;# 
  4338     0392                     	;# 
  4339     0393                     	;# 
  4340     0394                     	;# 
  4341     0395                     	;# 
  4342     0396                     	;# 
  4343     0397                     	;# 
  4344     0398                     	;# 
  4345     0399                     	;# 
  4346     040E                     	;# 
  4347     0413                     	;# 
  4348     0413                     	;# 
  4349     0414                     	;# 
  4350     0414                     	;# 
  4351     0415                     	;# 
  4352     0416                     	;# 
  4353     0417                     	;# 
  4354     0418                     	;# 
  4355     041A                     	;# 
  4356     041A                     	;# 
  4357     041B                     	;# 
  4358     041B                     	;# 
  4359     041C                     	;# 
  4360     041D                     	;# 
  4361     041E                     	;# 
  4362     041F                     	;# 
  4363     0493                     	;# 
  4364     0494                     	;# 
  4365     0495                     	;# 
  4366     0496                     	;# 
  4367     049A                     	;# 
  4368     049B                     	;# 
  4369     049C                     	;# 
  4370     049D                     	;# 
  4371     058C                     	;# 
  4372     058C                     	;# 
  4373     058D                     	;# 
  4374     058E                     	;# 
  4375     058E                     	;# 
  4376     058F                     	;# 
  4377     0590                     	;# 
  4378     0590                     	;# 
  4379     0591                     	;# 
  4380     0592                     	;# 
  4381     0592                     	;# 
  4382     0593                     	;# 
  4383     0594                     	;# 
  4384     0594                     	;# 
  4385     0595                     	;# 
  4386     0596                     	;# 
  4387     0596                     	;# 
  4388     0597                     	;# 
  4389     0598                     	;# 
  4390     0599                     	;# 
  4391     059A                     	;# 
  4392     059B                     	;# 
  4393     059B                     	;# 
  4394     059C                     	;# 
  4395     059D                     	;# 
  4396     060C                     	;# 
  4397     060C                     	;# 
  4398     060D                     	;# 
  4399     060E                     	;# 
  4400     060F                     	;# 
  4401     060F                     	;# 
  4402     0610                     	;# 
  4403     0611                     	;# 
  4404     0612                     	;# 
  4405     0613                     	;# 
  4406     0614                     	;# 
  4407     0617                     	;# 
  4408     0617                     	;# 
  4409     0618                     	;# 
  4410     0619                     	;# 
  4411     061A                     	;# 
  4412     061A                     	;# 
  4413     061B                     	;# 
  4414     061C                     	;# 
  4415     0691                     	;# 
  4416     0692                     	;# 
  4417     0693                     	;# 
  4418     0694                     	;# 
  4419     0695                     	;# 
  4420     0696                     	;# 
  4421     0697                     	;# 
  4422     0699                     	;# 
  4423     069A                     	;# 
  4424     0711                     	;# 
  4425     0712                     	;# 
  4426     0713                     	;# 
  4427     0714                     	;# 
  4428     0715                     	;# 
  4429     0718                     	;# 
  4430     0718                     	;# 
  4431     0719                     	;# 
  4432     071A                     	;# 
  4433     071A                     	;# 
  4434     071B                     	;# 
  4435     071C                     	;# 
  4436     071D                     	;# 
  4437     0791                     	;# 
  4438     0791                     	;# 
  4439     0792                     	;# 
  4440     0793                     	;# 
  4441     0793                     	;# 
  4442     0794                     	;# 
  4443     0795                     	;# 
  4444     0795                     	;# 
  4445     0796                     	;# 
  4446     0797                     	;# 
  4447     0797                     	;# 
  4448     0798                     	;# 
  4449     0799                     	;# 
  4450     079A                     	;# 
  4451     080C                     	;# 
  4452     080C                     	;# 
  4453     080D                     	;# 
  4454     080E                     	;# 
  4455     080E                     	;# 
  4456     080F                     	;# 
  4457     0810                     	;# 
  4458     0810                     	;# 
  4459     0811                     	;# 
  4460     0812                     	;# 
  4461     0812                     	;# 
  4462     0813                     	;# 
  4463     0814                     	;# 
  4464     0815                     	;# 
  4465     0816                     	;# 
  4466     0817                     	;# 
  4467     0818                     	;# 
  4468     0819                     	;# 
  4469     081A                     	;# 
  4470     081A                     	;# 
  4471     081B                     	;# 
  4472     081C                     	;# 
  4473     081C                     	;# 
  4474     081D                     	;# 
  4475     088C                     	;# 
  4476     088D                     	;# 
  4477     088E                     	;# 
  4478     088F                     	;# 
  4479     088F                     	;# 
  4480     0890                     	;# 
  4481     0891                     	;# 
  4482     0892                     	;# 
  4483     0893                     	;# 
  4484     0893                     	;# 
  4485     0894                     	;# 
  4486     0895                     	;# 
  4487     0896                     	;# 
  4488     0897                     	;# 
  4489     0897                     	;# 
  4490     0898                     	;# 
  4491     0899                     	;# 
  4492     0D8C                     	;# 
  4493     0D8C                     	;# 
  4494     0D8D                     	;# 
  4495     0D8E                     	;# 
  4496     0D8F                     	;# 
  4497     0D8F                     	;# 
  4498     0D90                     	;# 
  4499     0D91                     	;# 
  4500     0D92                     	;# 
  4501     0D92                     	;# 
  4502     0D93                     	;# 
  4503     0D94                     	;# 
  4504     0D95                     	;# 
  4505     0D95                     	;# 
  4506     0D96                     	;# 
  4507     0D97                     	;# 
  4508     0D98                     	;# 
  4509     0D99                     	;# 
  4510     0D9A                     	;# 
  4511     0D9B                     	;# 
  4512     0D9C                     	;# 
  4513     0D9D                     	;# 
  4514     0D9E                     	;# 
  4515     0D9E                     	;# 
  4516     0D9F                     	;# 
  4517     0DA0                     	;# 
  4518     0DA1                     	;# 
  4519     0DA1                     	;# 
  4520     0DA2                     	;# 
  4521     0DA3                     	;# 
  4522     0DA4                     	;# 
  4523     0DA4                     	;# 
  4524     0DA5                     	;# 
  4525     0DA6                     	;# 
  4526     0DA7                     	;# 
  4527     0DA7                     	;# 
  4528     0DA8                     	;# 
  4529     0DA9                     	;# 
  4530     0DAA                     	;# 
  4531     0DAB                     	;# 
  4532     0DAC                     	;# 
  4533     0DAD                     	;# 
  4534     0DAE                     	;# 
  4535     0DAF                     	;# 
  4536     0E0F                     	;# 
  4537     0E10                     	;# 
  4538     0E11                     	;# 
  4539     0E12                     	;# 
  4540     0E13                     	;# 
  4541     0E14                     	;# 
  4542     0E15                     	;# 
  4543     0E16                     	;# 
  4544     0E17                     	;# 
  4545     0E17                     	;# 
  4546     0E18                     	;# 
  4547     0E18                     	;# 
  4548     0E19                     	;# 
  4549     0E1A                     	;# 
  4550     0E1B                     	;# 
  4551     0E1B                     	;# 
  4552     0E1C                     	;# 
  4553     0E1D                     	;# 
  4554     0E1E                     	;# 
  4555     0E1E                     	;# 
  4556     0E1F                     	;# 
  4557     0E20                     	;# 
  4558     0E21                     	;# 
  4559     0E22                     	;# 
  4560     0E23                     	;# 
  4561     0E24                     	;# 
  4562     0E25                     	;# 
  4563     0E26                     	;# 
  4564     0E27                     	;# 
  4565     0E28                     	;# 
  4566     0E29                     	;# 
  4567     0E2A                     	;# 
  4568     0E2B                     	;# 
  4569     0E2C                     	;# 
  4570     0E2D                     	;# 
  4571     0E2E                     	;# 
  4572     0E90                     	;# 
  4573     0E91                     	;# 
  4574     0E92                     	;# 
  4575     0E94                     	;# 
  4576     0E95                     	;# 
  4577     0E9C                     	;# 
  4578     0E9D                     	;# 
  4579     0E9E                     	;# 
  4580     0E9F                     	;# 
  4581     0EA0                     	;# 
  4582     0EA1                     	;# 
  4583     0EA2                     	;# 
  4584     0EA3                     	;# 
  4585     0EA4                     	;# 
  4586     0EA5                     	;# 
  4587     0EA6                     	;# 
  4588     0EA7                     	;# 
  4589     0F0F                     	;# 
  4590     0F10                     	;# 
  4591     0F11                     	;# 
  4592     0F12                     	;# 
  4593     0F13                     	;# 
  4594     0F14                     	;# 
  4595     0F15                     	;# 
  4596     0F16                     	;# 
  4597     0F17                     	;# 
  4598     0F18                     	;# 
  4599     0F19                     	;# 
  4600     0F1A                     	;# 
  4601     0F1B                     	;# 
  4602     0F1C                     	;# 
  4603     0F1D                     	;# 
  4604     0F1E                     	;# 
  4605     0F1F                     	;# 
  4606     0F20                     	;# 
  4607     0F21                     	;# 
  4608     0F22                     	;# 
  4609     0F23                     	;# 
  4610     0F24                     	;# 
  4611     0F25                     	;# 
  4612     0F26                     	;# 
  4613     0F27                     	;# 
  4614     0F28                     	;# 
  4615     0F29                     	;# 
  4616     0F2A                     	;# 
  4617     0F2B                     	;# 
  4618     0F2C                     	;# 
  4619     0F2D                     	;# 
  4620     0F2E                     	;# 
  4621     0F2F                     	;# 
  4622     0F30                     	;# 
  4623     0F31                     	;# 
  4624     0F32                     	;# 
  4625     0F33                     	;# 
  4626     0F34                     	;# 
  4627     0F35                     	;# 
  4628     0F36                     	;# 
  4629     0F37                     	;# 
  4630     0FE4                     	;# 
  4631     0FE5                     	;# 
  4632     0FE6                     	;# 
  4633     0FE7                     	;# 
  4634     0FE8                     	;# 
  4635     0FE9                     	;# 
  4636     0FEA                     	;# 
  4637     0FEB                     	;# 
  4638     0FED                     	;# 
  4639     0FEE                     	;# 
  4640     0FEF                     	;# 
  4641     0000                     	;# 
  4642     0001                     	;# 
  4643     0002                     	;# 
  4644     0003                     	;# 
  4645     0004                     	;# 
  4646     0005                     	;# 
  4647     0006                     	;# 
  4648     0007                     	;# 
  4649     0008                     	;# 
  4650     0009                     	;# 
  4651     000A                     	;# 
  4652     000B                     	;# 
  4653     000C                     	;# 
  4654     000D                     	;# 
  4655     000E                     	;# 
  4656     0010                     	;# 
  4657     0011                     	;# 
  4658     0012                     	;# 
  4659     0013                     	;# 
  4660     0014                     	;# 
  4661     0015                     	;# 
  4662     0016                     	;# 
  4663     0016                     	;# 
  4664     0017                     	;# 
  4665     0018                     	;# 
  4666     0019                     	;# 
  4667     001A                     	;# 
  4668     001A                     	;# 
  4669     001B                     	;# 
  4670     001B                     	;# 
  4671     001C                     	;# 
  4672     001D                     	;# 
  4673     001E                     	;# 
  4674     001F                     	;# 
  4675     008C                     	;# 
  4676     008D                     	;# 
  4677     008E                     	;# 
  4678     0090                     	;# 
  4679     0091                     	;# 
  4680     0092                     	;# 
  4681     0093                     	;# 
  4682     0094                     	;# 
  4683     0095                     	;# 
  4684     0096                     	;# 
  4685     0098                     	;# 
  4686     0099                     	;# 
  4687     009A                     	;# 
  4688     009B                     	;# 
  4689     009B                     	;# 
  4690     009C                     	;# 
  4691     009D                     	;# 
  4692     009E                     	;# 
  4693     009F                     	;# 
  4694     010C                     	;# 
  4695     010D                     	;# 
  4696     010E                     	;# 
  4697     0111                     	;# 
  4698     0112                     	;# 
  4699     0113                     	;# 
  4700     0114                     	;# 
  4701     0115                     	;# 
  4702     0116                     	;# 
  4703     0117                     	;# 
  4704     0118                     	;# 
  4705     0119                     	;# 
  4706     011C                     	;# 
  4707     018C                     	;# 
  4708     018D                     	;# 
  4709     018E                     	;# 
  4710     0191                     	;# 
  4711     0191                     	;# 
  4712     0192                     	;# 
  4713     0193                     	;# 
  4714     0193                     	;# 
  4715     0194                     	;# 
  4716     0195                     	;# 
  4717     0196                     	;# 
  4718     0197                     	;# 
  4719     0199                     	;# 
  4720     0199                     	;# 
  4721     0199                     	;# 
  4722     019A                     	;# 
  4723     019A                     	;# 
  4724     019A                     	;# 
  4725     019B                     	;# 
  4726     019B                     	;# 
  4727     019B                     	;# 
  4728     019B                     	;# 
  4729     019B                     	;# 
  4730     019C                     	;# 
  4731     019C                     	;# 
  4732     019C                     	;# 
  4733     019D                     	;# 
  4734     019D                     	;# 
  4735     019D                     	;# 
  4736     019E                     	;# 
  4737     019E                     	;# 
  4738     019E                     	;# 
  4739     019F                     	;# 
  4740     019F                     	;# 
  4741     019F                     	;# 
  4742     019F                     	;# 
  4743     019F                     	;# 
  4744     020C                     	;# 
  4745     020D                     	;# 
  4746     020E                     	;# 
  4747     0211                     	;# 
  4748     0211                     	;# 
  4749     0212                     	;# 
  4750     0212                     	;# 
  4751     0213                     	;# 
  4752     0213                     	;# 
  4753     0214                     	;# 
  4754     0214                     	;# 
  4755     0215                     	;# 
  4756     0215                     	;# 
  4757     0215                     	;# 
  4758     0215                     	;# 
  4759     0216                     	;# 
  4760     0216                     	;# 
  4761     0217                     	;# 
  4762     0217                     	;# 
  4763     028C                     	;# 
  4764     028D                     	;# 
  4765     028E                     	;# 
  4766     0291                     	;# 
  4767     0291                     	;# 
  4768     0292                     	;# 
  4769     0293                     	;# 
  4770     0294                     	;# 
  4771     0298                     	;# 
  4772     0298                     	;# 
  4773     0299                     	;# 
  4774     029A                     	;# 
  4775     029B                     	;# 
  4776     029E                     	;# 
  4777     030C                     	;# 
  4778     030D                     	;# 
  4779     030E                     	;# 
  4780     038C                     	;# 
  4781     038D                     	;# 
  4782     038E                     	;# 
  4783     0391                     	;# 
  4784     0392                     	;# 
  4785     0393                     	;# 
  4786     0394                     	;# 
  4787     0395                     	;# 
  4788     0396                     	;# 
  4789     0397                     	;# 
  4790     0398                     	;# 
  4791     0399                     	;# 
  4792     040E                     	;# 
  4793     0413                     	;# 
  4794     0413                     	;# 
  4795     0414                     	;# 
  4796     0414                     	;# 
  4797     0415                     	;# 
  4798     0416                     	;# 
  4799     0417                     	;# 
  4800     0418                     	;# 
  4801     041A                     	;# 
  4802     041A                     	;# 
  4803     041B                     	;# 
  4804     041B                     	;# 
  4805     041C                     	;# 
  4806     041D                     	;# 
  4807     041E                     	;# 
  4808     041F                     	;# 
  4809     0493                     	;# 
  4810     0494                     	;# 
  4811     0495                     	;# 
  4812     0496                     	;# 
  4813     049A                     	;# 
  4814     049B                     	;# 
  4815     049C                     	;# 
  4816     049D                     	;# 
  4817     058C                     	;# 
  4818     058C                     	;# 
  4819     058D                     	;# 
  4820     058E                     	;# 
  4821     058E                     	;# 
  4822     058F                     	;# 
  4823     0590                     	;# 
  4824     0590                     	;# 
  4825     0591                     	;# 
  4826     0592                     	;# 
  4827     0592                     	;# 
  4828     0593                     	;# 
  4829     0594                     	;# 
  4830     0594                     	;# 
  4831     0595                     	;# 
  4832     0596                     	;# 
  4833     0596                     	;# 
  4834     0597                     	;# 
  4835     0598                     	;# 
  4836     0599                     	;# 
  4837     059A                     	;# 
  4838     059B                     	;# 
  4839     059B                     	;# 
  4840     059C                     	;# 
  4841     059D                     	;# 
  4842     060C                     	;# 
  4843     060C                     	;# 
  4844     060D                     	;# 
  4845     060E                     	;# 
  4846     060F                     	;# 
  4847     060F                     	;# 
  4848     0610                     	;# 
  4849     0611                     	;# 
  4850     0612                     	;# 
  4851     0613                     	;# 
  4852     0614                     	;# 
  4853     0617                     	;# 
  4854     0617                     	;# 
  4855     0618                     	;# 
  4856     0619                     	;# 
  4857     061A                     	;# 
  4858     061A                     	;# 
  4859     061B                     	;# 
  4860     061C                     	;# 
  4861     0691                     	;# 
  4862     0692                     	;# 
  4863     0693                     	;# 
  4864     0694                     	;# 
  4865     0695                     	;# 
  4866     0696                     	;# 
  4867     0697                     	;# 
  4868     0699                     	;# 
  4869     069A                     	;# 
  4870     0711                     	;# 
  4871     0712                     	;# 
  4872     0713                     	;# 
  4873     0714                     	;# 
  4874     0715                     	;# 
  4875     0718                     	;# 
  4876     0718                     	;# 
  4877     0719                     	;# 
  4878     071A                     	;# 
  4879     071A                     	;# 
  4880     071B                     	;# 
  4881     071C                     	;# 
  4882     071D                     	;# 
  4883     0791                     	;# 
  4884     0791                     	;# 
  4885     0792                     	;# 
  4886     0793                     	;# 
  4887     0793                     	;# 
  4888     0794                     	;# 
  4889     0795                     	;# 
  4890     0795                     	;# 
  4891     0796                     	;# 
  4892     0797                     	;# 
  4893     0797                     	;# 
  4894     0798                     	;# 
  4895     0799                     	;# 
  4896     079A                     	;# 
  4897     080C                     	;# 
  4898     080C                     	;# 
  4899     080D                     	;# 
  4900     080E                     	;# 
  4901     080E                     	;# 
  4902     080F                     	;# 
  4903     0810                     	;# 
  4904     0810                     	;# 
  4905     0811                     	;# 
  4906     0812                     	;# 
  4907     0812                     	;# 
  4908     0813                     	;# 
  4909     0814                     	;# 
  4910     0815                     	;# 
  4911     0816                     	;# 
  4912     0817                     	;# 
  4913     0818                     	;# 
  4914     0819                     	;# 
  4915     081A                     	;# 
  4916     081A                     	;# 
  4917     081B                     	;# 
  4918     081C                     	;# 
  4919     081C                     	;# 
  4920     081D                     	;# 
  4921     088C                     	;# 
  4922     088D                     	;# 
  4923     088E                     	;# 
  4924     088F                     	;# 
  4925     088F                     	;# 
  4926     0890                     	;# 
  4927     0891                     	;# 
  4928     0892                     	;# 
  4929     0893                     	;# 
  4930     0893                     	;# 
  4931     0894                     	;# 
  4932     0895                     	;# 
  4933     0896                     	;# 
  4934     0897                     	;# 
  4935     0897                     	;# 
  4936     0898                     	;# 
  4937     0899                     	;# 
  4938     0D8C                     	;# 
  4939     0D8C                     	;# 
  4940     0D8D                     	;# 
  4941     0D8E                     	;# 
  4942     0D8F                     	;# 
  4943     0D8F                     	;# 
  4944     0D90                     	;# 
  4945     0D91                     	;# 
  4946     0D92                     	;# 
  4947     0D92                     	;# 
  4948     0D93                     	;# 
  4949     0D94                     	;# 
  4950     0D95                     	;# 
  4951     0D95                     	;# 
  4952     0D96                     	;# 
  4953     0D97                     	;# 
  4954     0D98                     	;# 
  4955     0D99                     	;# 
  4956     0D9A                     	;# 
  4957     0D9B                     	;# 
  4958     0D9C                     	;# 
  4959     0D9D                     	;# 
  4960     0D9E                     	;# 
  4961     0D9E                     	;# 
  4962     0D9F                     	;# 
  4963     0DA0                     	;# 
  4964     0DA1                     	;# 
  4965     0DA1                     	;# 
  4966     0DA2                     	;# 
  4967     0DA3                     	;# 
  4968     0DA4                     	;# 
  4969     0DA4                     	;# 
  4970     0DA5                     	;# 
  4971     0DA6                     	;# 
  4972     0DA7                     	;# 
  4973     0DA7                     	;# 
  4974     0DA8                     	;# 
  4975     0DA9                     	;# 
  4976     0DAA                     	;# 
  4977     0DAB                     	;# 
  4978     0DAC                     	;# 
  4979     0DAD                     	;# 
  4980     0DAE                     	;# 
  4981     0DAF                     	;# 
  4982     0E0F                     	;# 
  4983     0E10                     	;# 
  4984     0E11                     	;# 
  4985     0E12                     	;# 
  4986     0E13                     	;# 
  4987     0E14                     	;# 
  4988     0E15                     	;# 
  4989     0E16                     	;# 
  4990     0E17                     	;# 
  4991     0E17                     	;# 
  4992     0E18                     	;# 
  4993     0E18                     	;# 
  4994     0E19                     	;# 
  4995     0E1A                     	;# 
  4996     0E1B                     	;# 
  4997     0E1B                     	;# 
  4998     0E1C                     	;# 
  4999     0E1D                     	;# 
  5000     0E1E                     	;# 
  5001     0E1E                     	;# 
  5002     0E1F                     	;# 
  5003     0E20                     	;# 
  5004     0E21                     	;# 
  5005     0E22                     	;# 
  5006     0E23                     	;# 
  5007     0E24                     	;# 
  5008     0E25                     	;# 
  5009     0E26                     	;# 
  5010     0E27                     	;# 
  5011     0E28                     	;# 
  5012     0E29                     	;# 
  5013     0E2A                     	;# 
  5014     0E2B                     	;# 
  5015     0E2C                     	;# 
  5016     0E2D                     	;# 
  5017     0E2E                     	;# 
  5018     0E90                     	;# 
  5019     0E91                     	;# 
  5020     0E92                     	;# 
  5021     0E94                     	;# 
  5022     0E95                     	;# 
  5023     0E9C                     	;# 
  5024     0E9D                     	;# 
  5025     0E9E                     	;# 
  5026     0E9F                     	;# 
  5027     0EA0                     	;# 
  5028     0EA1                     	;# 
  5029     0EA2                     	;# 
  5030     0EA3                     	;# 
  5031     0EA4                     	;# 
  5032     0EA5                     	;# 
  5033     0EA6                     	;# 
  5034     0EA7                     	;# 
  5035     0F0F                     	;# 
  5036     0F10                     	;# 
  5037     0F11                     	;# 
  5038     0F12                     	;# 
  5039     0F13                     	;# 
  5040     0F14                     	;# 
  5041     0F15                     	;# 
  5042     0F16                     	;# 
  5043     0F17                     	;# 
  5044     0F18                     	;# 
  5045     0F19                     	;# 
  5046     0F1A                     	;# 
  5047     0F1B                     	;# 
  5048     0F1C                     	;# 
  5049     0F1D                     	;# 
  5050     0F1E                     	;# 
  5051     0F1F                     	;# 
  5052     0F20                     	;# 
  5053     0F21                     	;# 
  5054     0F22                     	;# 
  5055     0F23                     	;# 
  5056     0F24                     	;# 
  5057     0F25                     	;# 
  5058     0F26                     	;# 
  5059     0F27                     	;# 
  5060     0F28                     	;# 
  5061     0F29                     	;# 
  5062     0F2A                     	;# 
  5063     0F2B                     	;# 
  5064     0F2C                     	;# 
  5065     0F2D                     	;# 
  5066     0F2E                     	;# 
  5067     0F2F                     	;# 
  5068     0F30                     	;# 
  5069     0F31                     	;# 
  5070     0F32                     	;# 
  5071     0F33                     	;# 
  5072     0F34                     	;# 
  5073     0F35                     	;# 
  5074     0F36                     	;# 
  5075     0F37                     	;# 
  5076     0FE4                     	;# 
  5077     0FE5                     	;# 
  5078     0FE6                     	;# 
  5079     0FE7                     	;# 
  5080     0FE8                     	;# 
  5081     0FE9                     	;# 
  5082     0FEA                     	;# 
  5083     0FEB                     	;# 
  5084     0FED                     	;# 
  5085     0FEE                     	;# 
  5086     0FEF                     	;# 
  5087     0000                     	;# 
  5088     0001                     	;# 
  5089     0002                     	;# 
  5090     0003                     	;# 
  5091     0004                     	;# 
  5092     0005                     	;# 
  5093     0006                     	;# 
  5094     0007                     	;# 
  5095     0008                     	;# 
  5096     0009                     	;# 
  5097     000A                     	;# 
  5098     000B                     	;# 
  5099     000C                     	;# 
  5100     000D                     	;# 
  5101     000E                     	;# 
  5102     0010                     	;# 
  5103     0011                     	;# 
  5104     0012                     	;# 
  5105     0013                     	;# 
  5106     0014                     	;# 
  5107     0015                     	;# 
  5108     0016                     	;# 
  5109     0016                     	;# 
  5110     0017                     	;# 
  5111     0018                     	;# 
  5112     0019                     	;# 
  5113     001A                     	;# 
  5114     001A                     	;# 
  5115     001B                     	;# 
  5116     001B                     	;# 
  5117     001C                     	;# 
  5118     001D                     	;# 
  5119     001E                     	;# 
  5120     001F                     	;# 
  5121     008C                     	;# 
  5122     008D                     	;# 
  5123     008E                     	;# 
  5124     0090                     	;# 
  5125     0091                     	;# 
  5126     0092                     	;# 
  5127     0093                     	;# 
  5128     0094                     	;# 
  5129     0095                     	;# 
  5130     0096                     	;# 
  5131     0098                     	;# 
  5132     0099                     	;# 
  5133     009A                     	;# 
  5134     009B                     	;# 
  5135     009B                     	;# 
  5136     009C                     	;# 
  5137     009D                     	;# 
  5138     009E                     	;# 
  5139     009F                     	;# 
  5140     010C                     	;# 
  5141     010D                     	;# 
  5142     010E                     	;# 
  5143     0111                     	;# 
  5144     0112                     	;# 
  5145     0113                     	;# 
  5146     0114                     	;# 
  5147     0115                     	;# 
  5148     0116                     	;# 
  5149     0117                     	;# 
  5150     0118                     	;# 
  5151     0119                     	;# 
  5152     011C                     	;# 
  5153     018C                     	;# 
  5154     018D                     	;# 
  5155     018E                     	;# 
  5156     0191                     	;# 
  5157     0191                     	;# 
  5158     0192                     	;# 
  5159     0193                     	;# 
  5160     0193                     	;# 
  5161     0194                     	;# 
  5162     0195                     	;# 
  5163     0196                     	;# 
  5164     0197                     	;# 
  5165     0199                     	;# 
  5166     0199                     	;# 
  5167     0199                     	;# 
  5168     019A                     	;# 
  5169     019A                     	;# 
  5170     019A                     	;# 
  5171     019B                     	;# 
  5172     019B                     	;# 
  5173     019B                     	;# 
  5174     019B                     	;# 
  5175     019B                     	;# 
  5176     019C                     	;# 
  5177     019C                     	;# 
  5178     019C                     	;# 
  5179     019D                     	;# 
  5180     019D                     	;# 
  5181     019D                     	;# 
  5182     019E                     	;# 
  5183     019E                     	;# 
  5184     019E                     	;# 
  5185     019F                     	;# 
  5186     019F                     	;# 
  5187     019F                     	;# 
  5188     019F                     	;# 
  5189     019F                     	;# 
  5190     020C                     	;# 
  5191     020D                     	;# 
  5192     020E                     	;# 
  5193     0211                     	;# 
  5194     0211                     	;# 
  5195     0212                     	;# 
  5196     0212                     	;# 
  5197     0213                     	;# 
  5198     0213                     	;# 
  5199     0214                     	;# 
  5200     0214                     	;# 
  5201     0215                     	;# 
  5202     0215                     	;# 
  5203     0215                     	;# 
  5204     0215                     	;# 
  5205     0216                     	;# 
  5206     0216                     	;# 
  5207     0217                     	;# 
  5208     0217                     	;# 
  5209     028C                     	;# 
  5210     028D                     	;# 
  5211     028E                     	;# 
  5212     0291                     	;# 
  5213     0291                     	;# 
  5214     0292                     	;# 
  5215     0293                     	;# 
  5216     0294                     	;# 
  5217     0298                     	;# 
  5218     0298                     	;# 
  5219     0299                     	;# 
  5220     029A                     	;# 
  5221     029B                     	;# 
  5222     029E                     	;# 
  5223     030C                     	;# 
  5224     030D                     	;# 
  5225     030E                     	;# 
  5226     038C                     	;# 
  5227     038D                     	;# 
  5228     038E                     	;# 
  5229     0391                     	;# 
  5230     0392                     	;# 
  5231     0393                     	;# 
  5232     0394                     	;# 
  5233     0395                     	;# 
  5234     0396                     	;# 
  5235     0397                     	;# 
  5236     0398                     	;# 
  5237     0399                     	;# 
  5238     040E                     	;# 
  5239     0413                     	;# 
  5240     0413                     	;# 
  5241     0414                     	;# 
  5242     0414                     	;# 
  5243     0415                     	;# 
  5244     0416                     	;# 
  5245     0417                     	;# 
  5246     0418                     	;# 
  5247     041A                     	;# 
  5248     041A                     	;# 
  5249     041B                     	;# 
  5250     041B                     	;# 
  5251     041C                     	;# 
  5252     041D                     	;# 
  5253     041E                     	;# 
  5254     041F                     	;# 
  5255     0493                     	;# 
  5256     0494                     	;# 
  5257     0495                     	;# 
  5258     0496                     	;# 
  5259     049A                     	;# 
  5260     049B                     	;# 
  5261     049C                     	;# 
  5262     049D                     	;# 
  5263     058C                     	;# 
  5264     058C                     	;# 
  5265     058D                     	;# 
  5266     058E                     	;# 
  5267     058E                     	;# 
  5268     058F                     	;# 
  5269     0590                     	;# 
  5270     0590                     	;# 
  5271     0591                     	;# 
  5272     0592                     	;# 
  5273     0592                     	;# 
  5274     0593                     	;# 
  5275     0594                     	;# 
  5276     0594                     	;# 
  5277     0595                     	;# 
  5278     0596                     	;# 
  5279     0596                     	;# 
  5280     0597                     	;# 
  5281     0598                     	;# 
  5282     0599                     	;# 
  5283     059A                     	;# 
  5284     059B                     	;# 
  5285     059B                     	;# 
  5286     059C                     	;# 
  5287     059D                     	;# 
  5288     060C                     	;# 
  5289     060C                     	;# 
  5290     060D                     	;# 
  5291     060E                     	;# 
  5292     060F                     	;# 
  5293     060F                     	;# 
  5294     0610                     	;# 
  5295     0611                     	;# 
  5296     0612                     	;# 
  5297     0613                     	;# 
  5298     0614                     	;# 
  5299     0617                     	;# 
  5300     0617                     	;# 
  5301     0618                     	;# 
  5302     0619                     	;# 
  5303     061A                     	;# 
  5304     061A                     	;# 
  5305     061B                     	;# 
  5306     061C                     	;# 
  5307     0691                     	;# 
  5308     0692                     	;# 
  5309     0693                     	;# 
  5310     0694                     	;# 
  5311     0695                     	;# 
  5312     0696                     	;# 
  5313     0697                     	;# 
  5314     0699                     	;# 
  5315     069A                     	;# 
  5316     0711                     	;# 
  5317     0712                     	;# 
  5318     0713                     	;# 
  5319     0714                     	;# 
  5320     0715                     	;# 
  5321     0718                     	;# 
  5322     0718                     	;# 
  5323     0719                     	;# 
  5324     071A                     	;# 
  5325     071A                     	;# 
  5326     071B                     	;# 
  5327     071C                     	;# 
  5328     071D                     	;# 
  5329     0791                     	;# 
  5330     0791                     	;# 
  5331     0792                     	;# 
  5332     0793                     	;# 
  5333     0793                     	;# 
  5334     0794                     	;# 
  5335     0795                     	;# 
  5336     0795                     	;# 
  5337     0796                     	;# 
  5338     0797                     	;# 
  5339     0797                     	;# 
  5340     0798                     	;# 
  5341     0799                     	;# 
  5342     079A                     	;# 
  5343     080C                     	;# 
  5344     080C                     	;# 
  5345     080D                     	;# 
  5346     080E                     	;# 
  5347     080E                     	;# 
  5348     080F                     	;# 
  5349     0810                     	;# 
  5350     0810                     	;# 
  5351     0811                     	;# 
  5352     0812                     	;# 
  5353     0812                     	;# 
  5354     0813                     	;# 
  5355     0814                     	;# 
  5356     0815                     	;# 
  5357     0816                     	;# 
  5358     0817                     	;# 
  5359     0818                     	;# 
  5360     0819                     	;# 
  5361     081A                     	;# 
  5362     081A                     	;# 
  5363     081B                     	;# 
  5364     081C                     	;# 
  5365     081C                     	;# 
  5366     081D                     	;# 
  5367     088C                     	;# 
  5368     088D                     	;# 
  5369     088E                     	;# 
  5370     088F                     	;# 
  5371     088F                     	;# 
  5372     0890                     	;# 
  5373     0891                     	;# 
  5374     0892                     	;# 
  5375     0893                     	;# 
  5376     0893                     	;# 
  5377     0894                     	;# 
  5378     0895                     	;# 
  5379     0896                     	;# 
  5380     0897                     	;# 
  5381     0897                     	;# 
  5382     0898                     	;# 
  5383     0899                     	;# 
  5384     0D8C                     	;# 
  5385     0D8C                     	;# 
  5386     0D8D                     	;# 
  5387     0D8E                     	;# 
  5388     0D8F                     	;# 
  5389     0D8F                     	;# 
  5390     0D90                     	;# 
  5391     0D91                     	;# 
  5392     0D92                     	;# 
  5393     0D92                     	;# 
  5394     0D93                     	;# 
  5395     0D94                     	;# 
  5396     0D95                     	;# 
  5397     0D95                     	;# 
  5398     0D96                     	;# 
  5399     0D97                     	;# 
  5400     0D98                     	;# 
  5401     0D99                     	;# 
  5402     0D9A                     	;# 
  5403     0D9B                     	;# 
  5404     0D9C                     	;# 
  5405     0D9D                     	;# 
  5406     0D9E                     	;# 
  5407     0D9E                     	;# 
  5408     0D9F                     	;# 
  5409     0DA0                     	;# 
  5410     0DA1                     	;# 
  5411     0DA1                     	;# 
  5412     0DA2                     	;# 
  5413     0DA3                     	;# 
  5414     0DA4                     	;# 
  5415     0DA4                     	;# 
  5416     0DA5                     	;# 
  5417     0DA6                     	;# 
  5418     0DA7                     	;# 
  5419     0DA7                     	;# 
  5420     0DA8                     	;# 
  5421     0DA9                     	;# 
  5422     0DAA                     	;# 
  5423     0DAB                     	;# 
  5424     0DAC                     	;# 
  5425     0DAD                     	;# 
  5426     0DAE                     	;# 
  5427     0DAF                     	;# 
  5428     0E0F                     	;# 
  5429     0E10                     	;# 
  5430     0E11                     	;# 
  5431     0E12                     	;# 
  5432     0E13                     	;# 
  5433     0E14                     	;# 
  5434     0E15                     	;# 
  5435     0E16                     	;# 
  5436     0E17                     	;# 
  5437     0E17                     	;# 
  5438     0E18                     	;# 
  5439     0E18                     	;# 
  5440     0E19                     	;# 
  5441     0E1A                     	;# 
  5442     0E1B                     	;# 
  5443     0E1B                     	;# 
  5444     0E1C                     	;# 
  5445     0E1D                     	;# 
  5446     0E1E                     	;# 
  5447     0E1E                     	;# 
  5448     0E1F                     	;# 
  5449     0E20                     	;# 
  5450     0E21                     	;# 
  5451     0E22                     	;# 
  5452     0E23                     	;# 
  5453     0E24                     	;# 
  5454     0E25                     	;# 
  5455     0E26                     	;# 
  5456     0E27                     	;# 
  5457     0E28                     	;# 
  5458     0E29                     	;# 
  5459     0E2A                     	;# 
  5460     0E2B                     	;# 
  5461     0E2C                     	;# 
  5462     0E2D                     	;# 
  5463     0E2E                     	;# 
  5464     0E90                     	;# 
  5465     0E91                     	;# 
  5466     0E92                     	;# 
  5467     0E94                     	;# 
  5468     0E95                     	;# 
  5469     0E9C                     	;# 
  5470     0E9D                     	;# 
  5471     0E9E                     	;# 
  5472     0E9F                     	;# 
  5473     0EA0                     	;# 
  5474     0EA1                     	;# 
  5475     0EA2                     	;# 
  5476     0EA3                     	;# 
  5477     0EA4                     	;# 
  5478     0EA5                     	;# 
  5479     0EA6                     	;# 
  5480     0EA7                     	;# 
  5481     0F0F                     	;# 
  5482     0F10                     	;# 
  5483     0F11                     	;# 
  5484     0F12                     	;# 
  5485     0F13                     	;# 
  5486     0F14                     	;# 
  5487     0F15                     	;# 
  5488     0F16                     	;# 
  5489     0F17                     	;# 
  5490     0F18                     	;# 
  5491     0F19                     	;# 
  5492     0F1A                     	;# 
  5493     0F1B                     	;# 
  5494     0F1C                     	;# 
  5495     0F1D                     	;# 
  5496     0F1E                     	;# 
  5497     0F1F                     	;# 
  5498     0F20                     	;# 
  5499     0F21                     	;# 
  5500     0F22                     	;# 
  5501     0F23                     	;# 
  5502     0F24                     	;# 
  5503     0F25                     	;# 
  5504     0F26                     	;# 
  5505     0F27                     	;# 
  5506     0F28                     	;# 
  5507     0F29                     	;# 
  5508     0F2A                     	;# 
  5509     0F2B                     	;# 
  5510     0F2C                     	;# 
  5511     0F2D                     	;# 
  5512     0F2E                     	;# 
  5513     0F2F                     	;# 
  5514     0F30                     	;# 
  5515     0F31                     	;# 
  5516     0F32                     	;# 
  5517     0F33                     	;# 
  5518     0F34                     	;# 
  5519     0F35                     	;# 
  5520     0F36                     	;# 
  5521     0F37                     	;# 
  5522     0FE4                     	;# 
  5523     0FE5                     	;# 
  5524     0FE6                     	;# 
  5525     0FE7                     	;# 
  5526     0FE8                     	;# 
  5527     0FE9                     	;# 
  5528     0FEA                     	;# 
  5529     0FEB                     	;# 
  5530     0FED                     	;# 
  5531     0FEE                     	;# 
  5532     0FEF                     	;# 
  5533     0000                     	;# 
  5534     0001                     	;# 
  5535     0002                     	;# 
  5536     0003                     	;# 
  5537     0004                     	;# 
  5538     0005                     	;# 
  5539     0006                     	;# 
  5540     0007                     	;# 
  5541     0008                     	;# 
  5542     0009                     	;# 
  5543     000A                     	;# 
  5544     000B                     	;# 
  5545     000C                     	;# 
  5546     000D                     	;# 
  5547     000E                     	;# 
  5548     0010                     	;# 
  5549     0011                     	;# 
  5550     0012                     	;# 
  5551     0013                     	;# 
  5552     0014                     	;# 
  5553     0015                     	;# 
  5554     0016                     	;# 
  5555     0016                     	;# 
  5556     0017                     	;# 
  5557     0018                     	;# 
  5558     0019                     	;# 
  5559     001A                     	;# 
  5560     001A                     	;# 
  5561     001B                     	;# 
  5562     001B                     	;# 
  5563     001C                     	;# 
  5564     001D                     	;# 
  5565     001E                     	;# 
  5566     001F                     	;# 
  5567     008C                     	;# 
  5568     008D                     	;# 
  5569     008E                     	;# 
  5570     0090                     	;# 
  5571     0091                     	;# 
  5572     0092                     	;# 
  5573     0093                     	;# 
  5574     0094                     	;# 
  5575     0095                     	;# 
  5576     0096                     	;# 
  5577     0098                     	;# 
  5578     0099                     	;# 
  5579     009A                     	;# 
  5580     009B                     	;# 
  5581     009B                     	;# 
  5582     009C                     	;# 
  5583     009D                     	;# 
  5584     009E                     	;# 
  5585     009F                     	;# 
  5586     010C                     	;# 
  5587     010D                     	;# 
  5588     010E                     	;# 
  5589     0111                     	;# 
  5590     0112                     	;# 
  5591     0113                     	;# 
  5592     0114                     	;# 
  5593     0115                     	;# 
  5594     0116                     	;# 
  5595     0117                     	;# 
  5596     0118                     	;# 
  5597     0119                     	;# 
  5598     011C                     	;# 
  5599     018C                     	;# 
  5600     018D                     	;# 
  5601     018E                     	;# 
  5602     0191                     	;# 
  5603     0191                     	;# 
  5604     0192                     	;# 
  5605     0193                     	;# 
  5606     0193                     	;# 
  5607     0194                     	;# 
  5608     0195                     	;# 
  5609     0196                     	;# 
  5610     0197                     	;# 
  5611     0199                     	;# 
  5612     0199                     	;# 
  5613     0199                     	;# 
  5614     019A                     	;# 
  5615     019A                     	;# 
  5616     019A                     	;# 
  5617     019B                     	;# 
  5618     019B                     	;# 
  5619     019B                     	;# 
  5620     019B                     	;# 
  5621     019B                     	;# 
  5622     019C                     	;# 
  5623     019C                     	;# 
  5624     019C                     	;# 
  5625     019D                     	;# 
  5626     019D                     	;# 
  5627     019D                     	;# 
  5628     019E                     	;# 
  5629     019E                     	;# 
  5630     019E                     	;# 
  5631     019F                     	;# 
  5632     019F                     	;# 
  5633     019F                     	;# 
  5634     019F                     	;# 
  5635     019F                     	;# 
  5636     020C                     	;# 
  5637     020D                     	;# 
  5638     020E                     	;# 
  5639     0211                     	;# 
  5640     0211                     	;# 
  5641     0212                     	;# 
  5642     0212                     	;# 
  5643     0213                     	;# 
  5644     0213                     	;# 
  5645     0214                     	;# 
  5646     0214                     	;# 
  5647     0215                     	;# 
  5648     0215                     	;# 
  5649     0215                     	;# 
  5650     0215                     	;# 
  5651     0216                     	;# 
  5652     0216                     	;# 
  5653     0217                     	;# 
  5654     0217                     	;# 
  5655     028C                     	;# 
  5656     028D                     	;# 
  5657     028E                     	;# 
  5658     0291                     	;# 
  5659     0291                     	;# 
  5660     0292                     	;# 
  5661     0293                     	;# 
  5662     0294                     	;# 
  5663     0298                     	;# 
  5664     0298                     	;# 
  5665     0299                     	;# 
  5666     029A                     	;# 
  5667     029B                     	;# 
  5668     029E                     	;# 
  5669     030C                     	;# 
  5670     030D                     	;# 
  5671     030E                     	;# 
  5672     038C                     	;# 
  5673     038D                     	;# 
  5674     038E                     	;# 
  5675     0391                     	;# 
  5676     0392                     	;# 
  5677     0393                     	;# 
  5678     0394                     	;# 
  5679     0395                     	;# 
  5680     0396                     	;# 
  5681     0397                     	;# 
  5682     0398                     	;# 
  5683     0399                     	;# 
  5684     040E                     	;# 
  5685     0413                     	;# 
  5686     0413                     	;# 
  5687     0414                     	;# 
  5688     0414                     	;# 
  5689     0415                     	;# 
  5690     0416                     	;# 
  5691     0417                     	;# 
  5692     0418                     	;# 
  5693     041A                     	;# 
  5694     041A                     	;# 
  5695     041B                     	;# 
  5696     041B                     	;# 
  5697     041C                     	;# 
  5698     041D                     	;# 
  5699     041E                     	;# 
  5700     041F                     	;# 
  5701     0493                     	;# 
  5702     0494                     	;# 
  5703     0495                     	;# 
  5704     0496                     	;# 
  5705     049A                     	;# 
  5706     049B                     	;# 
  5707     049C                     	;# 
  5708     049D                     	;# 
  5709     058C                     	;# 
  5710     058C                     	;# 
  5711     058D                     	;# 
  5712     058E                     	;# 
  5713     058E                     	;# 
  5714     058F                     	;# 
  5715     0590                     	;# 
  5716     0590                     	;# 
  5717     0591                     	;# 
  5718     0592                     	;# 
  5719     0592                     	;# 
  5720     0593                     	;# 
  5721     0594                     	;# 
  5722     0594                     	;# 
  5723     0595                     	;# 
  5724     0596                     	;# 
  5725     0596                     	;# 
  5726     0597                     	;# 
  5727     0598                     	;# 
  5728     0599                     	;# 
  5729     059A                     	;# 
  5730     059B                     	;# 
  5731     059B                     	;# 
  5732     059C                     	;# 
  5733     059D                     	;# 
  5734     060C                     	;# 
  5735     060C                     	;# 
  5736     060D                     	;# 
  5737     060E                     	;# 
  5738     060F                     	;# 
  5739     060F                     	;# 
  5740     0610                     	;# 
  5741     0611                     	;# 
  5742     0612                     	;# 
  5743     0613                     	;# 
  5744     0614                     	;# 
  5745     0617                     	;# 
  5746     0617                     	;# 
  5747     0618                     	;# 
  5748     0619                     	;# 
  5749     061A                     	;# 
  5750     061A                     	;# 
  5751     061B                     	;# 
  5752     061C                     	;# 
  5753     0691                     	;# 
  5754     0692                     	;# 
  5755     0693                     	;# 
  5756     0694                     	;# 
  5757     0695                     	;# 
  5758     0696                     	;# 
  5759     0697                     	;# 
  5760     0699                     	;# 
  5761     069A                     	;# 
  5762     0711                     	;# 
  5763     0712                     	;# 
  5764     0713                     	;# 
  5765     0714                     	;# 
  5766     0715                     	;# 
  5767     0718                     	;# 
  5768     0718                     	;# 
  5769     0719                     	;# 
  5770     071A                     	;# 
  5771     071A                     	;# 
  5772     071B                     	;# 
  5773     071C                     	;# 
  5774     071D                     	;# 
  5775     0791                     	;# 
  5776     0791                     	;# 
  5777     0792                     	;# 
  5778     0793                     	;# 
  5779     0793                     	;# 
  5780     0794                     	;# 
  5781     0795                     	;# 
  5782     0795                     	;# 
  5783     0796                     	;# 
  5784     0797                     	;# 
  5785     0797                     	;# 
  5786     0798                     	;# 
  5787     0799                     	;# 
  5788     079A                     	;# 
  5789     080C                     	;# 
  5790     080C                     	;# 
  5791     080D                     	;# 
  5792     080E                     	;# 
  5793     080E                     	;# 
  5794     080F                     	;# 
  5795     0810                     	;# 
  5796     0810                     	;# 
  5797     0811                     	;# 
  5798     0812                     	;# 
  5799     0812                     	;# 
  5800     0813                     	;# 
  5801     0814                     	;# 
  5802     0815                     	;# 
  5803     0816                     	;# 
  5804     0817                     	;# 
  5805     0818                     	;# 
  5806     0819                     	;# 
  5807     081A                     	;# 
  5808     081A                     	;# 
  5809     081B                     	;# 
  5810     081C                     	;# 
  5811     081C                     	;# 
  5812     081D                     	;# 
  5813     088C                     	;# 
  5814     088D                     	;# 
  5815     088E                     	;# 
  5816     088F                     	;# 
  5817     088F                     	;# 
  5818     0890                     	;# 
  5819     0891                     	;# 
  5820     0892                     	;# 
  5821     0893                     	;# 
  5822     0893                     	;# 
  5823     0894                     	;# 
  5824     0895                     	;# 
  5825     0896                     	;# 
  5826     0897                     	;# 
  5827     0897                     	;# 
  5828     0898                     	;# 
  5829     0899                     	;# 
  5830     0D8C                     	;# 
  5831     0D8C                     	;# 
  5832     0D8D                     	;# 
  5833     0D8E                     	;# 
  5834     0D8F                     	;# 
  5835     0D8F                     	;# 
  5836     0D90                     	;# 
  5837     0D91                     	;# 
  5838     0D92                     	;# 
  5839     0D92                     	;# 
  5840     0D93                     	;# 
  5841     0D94                     	;# 
  5842     0D95                     	;# 
  5843     0D95                     	;# 
  5844     0D96                     	;# 
  5845     0D97                     	;# 
  5846     0D98                     	;# 
  5847     0D99                     	;# 
  5848     0D9A                     	;# 
  5849     0D9B                     	;# 
  5850     0D9C                     	;# 
  5851     0D9D                     	;# 
  5852     0D9E                     	;# 
  5853     0D9E                     	;# 
  5854     0D9F                     	;# 
  5855     0DA0                     	;# 
  5856     0DA1                     	;# 
  5857     0DA1                     	;# 
  5858     0DA2                     	;# 
  5859     0DA3                     	;# 
  5860     0DA4                     	;# 
  5861     0DA4                     	;# 
  5862     0DA5                     	;# 
  5863     0DA6                     	;# 
  5864     0DA7                     	;# 
  5865     0DA7                     	;# 
  5866     0DA8                     	;# 
  5867     0DA9                     	;# 
  5868     0DAA                     	;# 
  5869     0DAB                     	;# 
  5870     0DAC                     	;# 
  5871     0DAD                     	;# 
  5872     0DAE                     	;# 
  5873     0DAF                     	;# 
  5874     0E0F                     	;# 
  5875     0E10                     	;# 
  5876     0E11                     	;# 
  5877     0E12                     	;# 
  5878     0E13                     	;# 
  5879     0E14                     	;# 
  5880     0E15                     	;# 
  5881     0E16                     	;# 
  5882     0E17                     	;# 
  5883     0E17                     	;# 
  5884     0E18                     	;# 
  5885     0E18                     	;# 
  5886     0E19                     	;# 
  5887     0E1A                     	;# 
  5888     0E1B                     	;# 
  5889     0E1B                     	;# 
  5890     0E1C                     	;# 
  5891     0E1D                     	;# 
  5892     0E1E                     	;# 
  5893     0E1E                     	;# 
  5894     0E1F                     	;# 
  5895     0E20                     	;# 
  5896     0E21                     	;# 
  5897     0E22                     	;# 
  5898     0E23                     	;# 
  5899     0E24                     	;# 
  5900     0E25                     	;# 
  5901     0E26                     	;# 
  5902     0E27                     	;# 
  5903     0E28                     	;# 
  5904     0E29                     	;# 
  5905     0E2A                     	;# 
  5906     0E2B                     	;# 
  5907     0E2C                     	;# 
  5908     0E2D                     	;# 
  5909     0E2E                     	;# 
  5910     0E90                     	;# 
  5911     0E91                     	;# 
  5912     0E92                     	;# 
  5913     0E94                     	;# 
  5914     0E95                     	;# 
  5915     0E9C                     	;# 
  5916     0E9D                     	;# 
  5917     0E9E                     	;# 
  5918     0E9F                     	;# 
  5919     0EA0                     	;# 
  5920     0EA1                     	;# 
  5921     0EA2                     	;# 
  5922     0EA3                     	;# 
  5923     0EA4                     	;# 
  5924     0EA5                     	;# 
  5925     0EA6                     	;# 
  5926     0EA7                     	;# 
  5927     0F0F                     	;# 
  5928     0F10                     	;# 
  5929     0F11                     	;# 
  5930     0F12                     	;# 
  5931     0F13                     	;# 
  5932     0F14                     	;# 
  5933     0F15                     	;# 
  5934     0F16                     	;# 
  5935     0F17                     	;# 
  5936     0F18                     	;# 
  5937     0F19                     	;# 
  5938     0F1A                     	;# 
  5939     0F1B                     	;# 
  5940     0F1C                     	;# 
  5941     0F1D                     	;# 
  5942     0F1E                     	;# 
  5943     0F1F                     	;# 
  5944     0F20                     	;# 
  5945     0F21                     	;# 
  5946     0F22                     	;# 
  5947     0F23                     	;# 
  5948     0F24                     	;# 
  5949     0F25                     	;# 
  5950     0F26                     	;# 
  5951     0F27                     	;# 
  5952     0F28                     	;# 
  5953     0F29                     	;# 
  5954     0F2A                     	;# 
  5955     0F2B                     	;# 
  5956     0F2C                     	;# 
  5957     0F2D                     	;# 
  5958     0F2E                     	;# 
  5959     0F2F                     	;# 
  5960     0F30                     	;# 
  5961     0F31                     	;# 
  5962     0F32                     	;# 
  5963     0F33                     	;# 
  5964     0F34                     	;# 
  5965     0F35                     	;# 
  5966     0F36                     	;# 
  5967     0F37                     	;# 
  5968     0FE4                     	;# 
  5969     0FE5                     	;# 
  5970     0FE6                     	;# 
  5971     0FE7                     	;# 
  5972     0FE8                     	;# 
  5973     0FE9                     	;# 
  5974     0FEA                     	;# 
  5975     0FEB                     	;# 
  5976     0FED                     	;# 
  5977     0FEE                     	;# 
  5978     0FEF                     	;# 
  5979     0000                     	;# 
  5980     0001                     	;# 
  5981     0002                     	;# 
  5982     0003                     	;# 
  5983     0004                     	;# 
  5984     0005                     	;# 
  5985     0006                     	;# 
  5986     0007                     	;# 
  5987     0008                     	;# 
  5988     0009                     	;# 
  5989     000A                     	;# 
  5990     000B                     	;# 
  5991     000C                     	;# 
  5992     000D                     	;# 
  5993     000E                     	;# 
  5994     0010                     	;# 
  5995     0011                     	;# 
  5996     0012                     	;# 
  5997     0013                     	;# 
  5998     0014                     	;# 
  5999     0015                     	;# 
  6000     0016                     	;# 
  6001     0016                     	;# 
  6002     0017                     	;# 
  6003     0018                     	;# 
  6004     0019                     	;# 
  6005     001A                     	;# 
  6006     001A                     	;# 
  6007     001B                     	;# 
  6008     001B                     	;# 
  6009     001C                     	;# 
  6010     001D                     	;# 
  6011     001E                     	;# 
  6012     001F                     	;# 
  6013     008C                     	;# 
  6014     008D                     	;# 
  6015     008E                     	;# 
  6016     0090                     	;# 
  6017     0091                     	;# 
  6018     0092                     	;# 
  6019     0093                     	;# 
  6020     0094                     	;# 
  6021     0095                     	;# 
  6022     0096                     	;# 
  6023     0098                     	;# 
  6024     0099                     	;# 
  6025     009A                     	;# 
  6026     009B                     	;# 
  6027     009B                     	;# 
  6028     009C                     	;# 
  6029     009D                     	;# 
  6030     009E                     	;# 
  6031     009F                     	;# 
  6032     010C                     	;# 
  6033     010D                     	;# 
  6034     010E                     	;# 
  6035     0111                     	;# 
  6036     0112                     	;# 
  6037     0113                     	;# 
  6038     0114                     	;# 
  6039     0115                     	;# 
  6040     0116                     	;# 
  6041     0117                     	;# 
  6042     0118                     	;# 
  6043     0119                     	;# 
  6044     011C                     	;# 
  6045     018C                     	;# 
  6046     018D                     	;# 
  6047     018E                     	;# 
  6048     0191                     	;# 
  6049     0191                     	;# 
  6050     0192                     	;# 
  6051     0193                     	;# 
  6052     0193                     	;# 
  6053     0194                     	;# 
  6054     0195                     	;# 
  6055     0196                     	;# 
  6056     0197                     	;# 
  6057     0199                     	;# 
  6058     0199                     	;# 
  6059     0199                     	;# 
  6060     019A                     	;# 
  6061     019A                     	;# 
  6062     019A                     	;# 
  6063     019B                     	;# 
  6064     019B                     	;# 
  6065     019B                     	;# 
  6066     019B                     	;# 
  6067     019B                     	;# 
  6068     019C                     	;# 
  6069     019C                     	;# 
  6070     019C                     	;# 
  6071     019D                     	;# 
  6072     019D                     	;# 
  6073     019D                     	;# 
  6074     019E                     	;# 
  6075     019E                     	;# 
  6076     019E                     	;# 
  6077     019F                     	;# 
  6078     019F                     	;# 
  6079     019F                     	;# 
  6080     019F                     	;# 
  6081     019F                     	;# 
  6082     020C                     	;# 
  6083     020D                     	;# 
  6084     020E                     	;# 
  6085     0211                     	;# 
  6086     0211                     	;# 
  6087     0212                     	;# 
  6088     0212                     	;# 
  6089     0213                     	;# 
  6090     0213                     	;# 
  6091     0214                     	;# 
  6092     0214                     	;# 
  6093     0215                     	;# 
  6094     0215                     	;# 
  6095     0215                     	;# 
  6096     0215                     	;# 
  6097     0216                     	;# 
  6098     0216                     	;# 
  6099     0217                     	;# 
  6100     0217                     	;# 
  6101     028C                     	;# 
  6102     028D                     	;# 
  6103     028E                     	;# 
  6104     0291                     	;# 
  6105     0291                     	;# 
  6106     0292                     	;# 
  6107     0293                     	;# 
  6108     0294                     	;# 
  6109     0298                     	;# 
  6110     0298                     	;# 
  6111     0299                     	;# 
  6112     029A                     	;# 
  6113     029B                     	;# 
  6114     029E                     	;# 
  6115     030C                     	;# 
  6116     030D                     	;# 
  6117     030E                     	;# 
  6118     038C                     	;# 
  6119     038D                     	;# 
  6120     038E                     	;# 
  6121     0391                     	;# 
  6122     0392                     	;# 
  6123     0393                     	;# 
  6124     0394                     	;# 
  6125     0395                     	;# 
  6126     0396                     	;# 
  6127     0397                     	;# 
  6128     0398                     	;# 
  6129     0399                     	;# 
  6130     040E                     	;# 
  6131     0413                     	;# 
  6132     0413                     	;# 
  6133     0414                     	;# 
  6134     0414                     	;# 
  6135     0415                     	;# 
  6136     0416                     	;# 
  6137     0417                     	;# 
  6138     0418                     	;# 
  6139     041A                     	;# 
  6140     041A                     	;# 
  6141     041B                     	;# 
  6142     041B                     	;# 
  6143     041C                     	;# 
  6144     041D                     	;# 
  6145     041E                     	;# 
  6146     041F                     	;# 
  6147     0493                     	;# 
  6148     0494                     	;# 
  6149     0495                     	;# 
  6150     0496                     	;# 
  6151     049A                     	;# 
  6152     049B                     	;# 
  6153     049C                     	;# 
  6154     049D                     	;# 
  6155     058C                     	;# 
  6156     058C                     	;# 
  6157     058D                     	;# 
  6158     058E                     	;# 
  6159     058E                     	;# 
  6160     058F                     	;# 
  6161     0590                     	;# 
  6162     0590                     	;# 
  6163     0591                     	;# 
  6164     0592                     	;# 
  6165     0592                     	;# 
  6166     0593                     	;# 
  6167     0594                     	;# 
  6168     0594                     	;# 
  6169     0595                     	;# 
  6170     0596                     	;# 
  6171     0596                     	;# 
  6172     0597                     	;# 
  6173     0598                     	;# 
  6174     0599                     	;# 
  6175     059A                     	;# 
  6176     059B                     	;# 
  6177     059B                     	;# 
  6178     059C                     	;# 
  6179     059D                     	;# 
  6180     060C                     	;# 
  6181     060C                     	;# 
  6182     060D                     	;# 
  6183     060E                     	;# 
  6184     060F                     	;# 
  6185     060F                     	;# 
  6186     0610                     	;# 
  6187     0611                     	;# 
  6188     0612                     	;# 
  6189     0613                     	;# 
  6190     0614                     	;# 
  6191     0617                     	;# 
  6192     0617                     	;# 
  6193     0618                     	;# 
  6194     0619                     	;# 
  6195     061A                     	;# 
  6196     061A                     	;# 
  6197     061B                     	;# 
  6198     061C                     	;# 
  6199     0691                     	;# 
  6200     0692                     	;# 
  6201     0693                     	;# 
  6202     0694                     	;# 
  6203     0695                     	;# 
  6204     0696                     	;# 
  6205     0697                     	;# 
  6206     0699                     	;# 
  6207     069A                     	;# 
  6208     0711                     	;# 
  6209     0712                     	;# 
  6210     0713                     	;# 
  6211     0714                     	;# 
  6212     0715                     	;# 
  6213     0718                     	;# 
  6214     0718                     	;# 
  6215     0719                     	;# 
  6216     071A                     	;# 
  6217     071A                     	;# 
  6218     071B                     	;# 
  6219     071C                     	;# 
  6220     071D                     	;# 
  6221     0791                     	;# 
  6222     0791                     	;# 
  6223     0792                     	;# 
  6224     0793                     	;# 
  6225     0793                     	;# 
  6226     0794                     	;# 
  6227     0795                     	;# 
  6228     0795                     	;# 
  6229     0796                     	;# 
  6230     0797                     	;# 
  6231     0797                     	;# 
  6232     0798                     	;# 
  6233     0799                     	;# 
  6234     079A                     	;# 
  6235     080C                     	;# 
  6236     080C                     	;# 
  6237     080D                     	;# 
  6238     080E                     	;# 
  6239     080E                     	;# 
  6240     080F                     	;# 
  6241     0810                     	;# 
  6242     0810                     	;# 
  6243     0811                     	;# 
  6244     0812                     	;# 
  6245     0812                     	;# 
  6246     0813                     	;# 
  6247     0814                     	;# 
  6248     0815                     	;# 
  6249     0816                     	;# 
  6250     0817                     	;# 
  6251     0818                     	;# 
  6252     0819                     	;# 
  6253     081A                     	;# 
  6254     081A                     	;# 
  6255     081B                     	;# 
  6256     081C                     	;# 
  6257     081C                     	;# 
  6258     081D                     	;# 
  6259     088C                     	;# 
  6260     088D                     	;# 
  6261     088E                     	;# 
  6262     088F                     	;# 
  6263     088F                     	;# 
  6264     0890                     	;# 
  6265     0891                     	;# 
  6266     0892                     	;# 
  6267     0893                     	;# 
  6268     0893                     	;# 
  6269     0894                     	;# 
  6270     0895                     	;# 
  6271     0896                     	;# 
  6272     0897                     	;# 
  6273     0897                     	;# 
  6274     0898                     	;# 
  6275     0899                     	;# 
  6276     0D8C                     	;# 
  6277     0D8C                     	;# 
  6278     0D8D                     	;# 
  6279     0D8E                     	;# 
  6280     0D8F                     	;# 
  6281     0D8F                     	;# 
  6282     0D90                     	;# 
  6283     0D91                     	;# 
  6284     0D92                     	;# 
  6285     0D92                     	;# 
  6286     0D93                     	;# 
  6287     0D94                     	;# 
  6288     0D95                     	;# 
  6289     0D95                     	;# 
  6290     0D96                     	;# 
  6291     0D97                     	;# 
  6292     0D98                     	;# 
  6293     0D99                     	;# 
  6294     0D9A                     	;# 
  6295     0D9B                     	;# 
  6296     0D9C                     	;# 
  6297     0D9D                     	;# 
  6298     0D9E                     	;# 
  6299     0D9E                     	;# 
  6300     0D9F                     	;# 
  6301     0DA0                     	;# 
  6302     0DA1                     	;# 
  6303     0DA1                     	;# 
  6304     0DA2                     	;# 
  6305     0DA3                     	;# 
  6306     0DA4                     	;# 
  6307     0DA4                     	;# 
  6308     0DA5                     	;# 
  6309     0DA6                     	;# 
  6310     0DA7                     	;# 
  6311     0DA7                     	;# 
  6312     0DA8                     	;# 
  6313     0DA9                     	;# 
  6314     0DAA                     	;# 
  6315     0DAB                     	;# 
  6316     0DAC                     	;# 
  6317     0DAD                     	;# 
  6318     0DAE                     	;# 
  6319     0DAF                     	;# 
  6320     0E0F                     	;# 
  6321     0E10                     	;# 
  6322     0E11                     	;# 
  6323     0E12                     	;# 
  6324     0E13                     	;# 
  6325     0E14                     	;# 
  6326     0E15                     	;# 
  6327     0E16                     	;# 
  6328     0E17                     	;# 
  6329     0E17                     	;# 
  6330     0E18                     	;# 
  6331     0E18                     	;# 
  6332     0E19                     	;# 
  6333     0E1A                     	;# 
  6334     0E1B                     	;# 
  6335     0E1B                     	;# 
  6336     0E1C                     	;# 
  6337     0E1D                     	;# 
  6338     0E1E                     	;# 
  6339     0E1E                     	;# 
  6340     0E1F                     	;# 
  6341     0E20                     	;# 
  6342     0E21                     	;# 
  6343     0E22                     	;# 
  6344     0E23                     	;# 
  6345     0E24                     	;# 
  6346     0E25                     	;# 
  6347     0E26                     	;# 
  6348     0E27                     	;# 
  6349     0E28                     	;# 
  6350     0E29                     	;# 
  6351     0E2A                     	;# 
  6352     0E2B                     	;# 
  6353     0E2C                     	;# 
  6354     0E2D                     	;# 
  6355     0E2E                     	;# 
  6356     0E90                     	;# 
  6357     0E91                     	;# 
  6358     0E92                     	;# 
  6359     0E94                     	;# 
  6360     0E95                     	;# 
  6361     0E9C                     	;# 
  6362     0E9D                     	;# 
  6363     0E9E                     	;# 
  6364     0E9F                     	;# 
  6365     0EA0                     	;# 
  6366     0EA1                     	;# 
  6367     0EA2                     	;# 
  6368     0EA3                     	;# 
  6369     0EA4                     	;# 
  6370     0EA5                     	;# 
  6371     0EA6                     	;# 
  6372     0EA7                     	;# 
  6373     0F0F                     	;# 
  6374     0F10                     	;# 
  6375     0F11                     	;# 
  6376     0F12                     	;# 
  6377     0F13                     	;# 
  6378     0F14                     	;# 
  6379     0F15                     	;# 
  6380     0F16                     	;# 
  6381     0F17                     	;# 
  6382     0F18                     	;# 
  6383     0F19                     	;# 
  6384     0F1A                     	;# 
  6385     0F1B                     	;# 
  6386     0F1C                     	;# 
  6387     0F1D                     	;# 
  6388     0F1E                     	;# 
  6389     0F1F                     	;# 
  6390     0F20                     	;# 
  6391     0F21                     	;# 
  6392     0F22                     	;# 
  6393     0F23                     	;# 
  6394     0F24                     	;# 
  6395     0F25                     	;# 
  6396     0F26                     	;# 
  6397     0F27                     	;# 
  6398     0F28                     	;# 
  6399     0F29                     	;# 
  6400     0F2A                     	;# 
  6401     0F2B                     	;# 
  6402     0F2C                     	;# 
  6403     0F2D                     	;# 
  6404     0F2E                     	;# 
  6405     0F2F                     	;# 
  6406     0F30                     	;# 
  6407     0F31                     	;# 
  6408     0F32                     	;# 
  6409     0F33                     	;# 
  6410     0F34                     	;# 
  6411     0F35                     	;# 
  6412     0F36                     	;# 
  6413     0F37                     	;# 
  6414     0FE4                     	;# 
  6415     0FE5                     	;# 
  6416     0FE6                     	;# 
  6417     0FE7                     	;# 
  6418     0FE8                     	;# 
  6419     0FE9                     	;# 
  6420     0FEA                     	;# 
  6421     0FEB                     	;# 
  6422     0FED                     	;# 
  6423     0FEE                     	;# 
  6424     0FEF                     	;# 
  6425     0000                     	;# 
  6426     0001                     	;# 
  6427     0002                     	;# 
  6428     0003                     	;# 
  6429     0004                     	;# 
  6430     0005                     	;# 
  6431     0006                     	;# 
  6432     0007                     	;# 
  6433     0008                     	;# 
  6434     0009                     	;# 
  6435     000A                     	;# 
  6436     000B                     	;# 
  6437     000C                     	;# 
  6438     000D                     	;# 
  6439     000E                     	;# 
  6440     0010                     	;# 
  6441     0011                     	;# 
  6442     0012                     	;# 
  6443     0013                     	;# 
  6444     0014                     	;# 
  6445     0015                     	;# 
  6446     0016                     	;# 
  6447     0016                     	;# 
  6448     0017                     	;# 
  6449     0018                     	;# 
  6450     0019                     	;# 
  6451     001A                     	;# 
  6452     001A                     	;# 
  6453     001B                     	;# 
  6454     001B                     	;# 
  6455     001C                     	;# 
  6456     001D                     	;# 
  6457     001E                     	;# 
  6458     001F                     	;# 
  6459     008C                     	;# 
  6460     008D                     	;# 
  6461     008E                     	;# 
  6462     0090                     	;# 
  6463     0091                     	;# 
  6464     0092                     	;# 
  6465     0093                     	;# 
  6466     0094                     	;# 
  6467     0095                     	;# 
  6468     0096                     	;# 
  6469     0098                     	;# 
  6470     0099                     	;# 
  6471     009A                     	;# 
  6472     009B                     	;# 
  6473     009B                     	;# 
  6474     009C                     	;# 
  6475     009D                     	;# 
  6476     009E                     	;# 
  6477     009F                     	;# 
  6478     010C                     	;# 
  6479     010D                     	;# 
  6480     010E                     	;# 
  6481     0111                     	;# 
  6482     0112                     	;# 
  6483     0113                     	;# 
  6484     0114                     	;# 
  6485     0115                     	;# 
  6486     0116                     	;# 
  6487     0117                     	;# 
  6488     0118                     	;# 
  6489     0119                     	;# 
  6490     011C                     	;# 
  6491     018C                     	;# 
  6492     018D                     	;# 
  6493     018E                     	;# 
  6494     0191                     	;# 
  6495     0191                     	;# 
  6496     0192                     	;# 
  6497     0193                     	;# 
  6498     0193                     	;# 
  6499     0194                     	;# 
  6500     0195                     	;# 
  6501     0196                     	;# 
  6502     0197                     	;# 
  6503     0199                     	;# 
  6504     0199                     	;# 
  6505     0199                     	;# 
  6506     019A                     	;# 
  6507     019A                     	;# 
  6508     019A                     	;# 
  6509     019B                     	;# 
  6510     019B                     	;# 
  6511     019B                     	;# 
  6512     019B                     	;# 
  6513     019B                     	;# 
  6514     019C                     	;# 
  6515     019C                     	;# 
  6516     019C                     	;# 
  6517     019D                     	;# 
  6518     019D                     	;# 
  6519     019D                     	;# 
  6520     019E                     	;# 
  6521     019E                     	;# 
  6522     019E                     	;# 
  6523     019F                     	;# 
  6524     019F                     	;# 
  6525     019F                     	;# 
  6526     019F                     	;# 
  6527     019F                     	;# 
  6528     020C                     	;# 
  6529     020D                     	;# 
  6530     020E                     	;# 
  6531     0211                     	;# 
  6532     0211                     	;# 
  6533     0212                     	;# 
  6534     0212                     	;# 
  6535     0213                     	;# 
  6536     0213                     	;# 
  6537     0214                     	;# 
  6538     0214                     	;# 
  6539     0215                     	;# 
  6540     0215                     	;# 
  6541     0215                     	;# 
  6542     0215                     	;# 
  6543     0216                     	;# 
  6544     0216                     	;# 
  6545     0217                     	;# 
  6546     0217                     	;# 
  6547     028C                     	;# 
  6548     028D                     	;# 
  6549     028E                     	;# 
  6550     0291                     	;# 
  6551     0291                     	;# 
  6552     0292                     	;# 
  6553     0293                     	;# 
  6554     0294                     	;# 
  6555     0298                     	;# 
  6556     0298                     	;# 
  6557     0299                     	;# 
  6558     029A                     	;# 
  6559     029B                     	;# 
  6560     029E                     	;# 
  6561     030C                     	;# 
  6562     030D                     	;# 
  6563     030E                     	;# 
  6564     038C                     	;# 
  6565     038D                     	;# 
  6566     038E                     	;# 
  6567     0391                     	;# 
  6568     0392                     	;# 
  6569     0393                     	;# 
  6570     0394                     	;# 
  6571     0395                     	;# 
  6572     0396                     	;# 
  6573     0397                     	;# 
  6574     0398                     	;# 
  6575     0399                     	;# 
  6576     040E                     	;# 
  6577     0413                     	;# 
  6578     0413                     	;# 
  6579     0414                     	;# 
  6580     0414                     	;# 
  6581     0415                     	;# 
  6582     0416                     	;# 
  6583     0417                     	;# 
  6584     0418                     	;# 
  6585     041A                     	;# 
  6586     041A                     	;# 
  6587     041B                     	;# 
  6588     041B                     	;# 
  6589     041C                     	;# 
  6590     041D                     	;# 
  6591     041E                     	;# 
  6592     041F                     	;# 
  6593     0493                     	;# 
  6594     0494                     	;# 
  6595     0495                     	;# 
  6596     0496                     	;# 
  6597     049A                     	;# 
  6598     049B                     	;# 
  6599     049C                     	;# 
  6600     049D                     	;# 
  6601     058C                     	;# 
  6602     058C                     	;# 
  6603     058D                     	;# 
  6604     058E                     	;# 
  6605     058E                     	;# 
  6606     058F                     	;# 
  6607     0590                     	;# 
  6608     0590                     	;# 
  6609     0591                     	;# 
  6610     0592                     	;# 
  6611     0592                     	;# 
  6612     0593                     	;# 
  6613     0594                     	;# 
  6614     0594                     	;# 
  6615     0595                     	;# 
  6616     0596                     	;# 
  6617     0596                     	;# 
  6618     0597                     	;# 
  6619     0598                     	;# 
  6620     0599                     	;# 
  6621     059A                     	;# 
  6622     059B                     	;# 
  6623     059B                     	;# 
  6624     059C                     	;# 
  6625     059D                     	;# 
  6626     060C                     	;# 
  6627     060C                     	;# 
  6628     060D                     	;# 
  6629     060E                     	;# 
  6630     060F                     	;# 
  6631     060F                     	;# 
  6632     0610                     	;# 
  6633     0611                     	;# 
  6634     0612                     	;# 
  6635     0613                     	;# 
  6636     0614                     	;# 
  6637     0617                     	;# 
  6638     0617                     	;# 
  6639     0618                     	;# 
  6640     0619                     	;# 
  6641     061A                     	;# 
  6642     061A                     	;# 
  6643     061B                     	;# 
  6644     061C                     	;# 
  6645     0691                     	;# 
  6646     0692                     	;# 
  6647     0693                     	;# 
  6648     0694                     	;# 
  6649     0695                     	;# 
  6650     0696                     	;# 
  6651     0697                     	;# 
  6652     0699                     	;# 
  6653     069A                     	;# 
  6654     0711                     	;# 
  6655     0712                     	;# 
  6656     0713                     	;# 
  6657     0714                     	;# 
  6658     0715                     	;# 
  6659     0718                     	;# 
  6660     0718                     	;# 
  6661     0719                     	;# 
  6662     071A                     	;# 
  6663     071A                     	;# 
  6664     071B                     	;# 
  6665     071C                     	;# 
  6666     071D                     	;# 
  6667     0791                     	;# 
  6668     0791                     	;# 
  6669     0792                     	;# 
  6670     0793                     	;# 
  6671     0793                     	;# 
  6672     0794                     	;# 
  6673     0795                     	;# 
  6674     0795                     	;# 
  6675     0796                     	;# 
  6676     0797                     	;# 
  6677     0797                     	;# 
  6678     0798                     	;# 
  6679     0799                     	;# 
  6680     079A                     	;# 
  6681     080C                     	;# 
  6682     080C                     	;# 
  6683     080D                     	;# 
  6684     080E                     	;# 
  6685     080E                     	;# 
  6686     080F                     	;# 
  6687     0810                     	;# 
  6688     0810                     	;# 
  6689     0811                     	;# 
  6690     0812                     	;# 
  6691     0812                     	;# 
  6692     0813                     	;# 
  6693     0814                     	;# 
  6694     0815                     	;# 
  6695     0816                     	;# 
  6696     0817                     	;# 
  6697     0818                     	;# 
  6698     0819                     	;# 
  6699     081A                     	;# 
  6700     081A                     	;# 
  6701     081B                     	;# 
  6702     081C                     	;# 
  6703     081C                     	;# 
  6704     081D                     	;# 
  6705     088C                     	;# 
  6706     088D                     	;# 
  6707     088E                     	;# 
  6708     088F                     	;# 
  6709     088F                     	;# 
  6710     0890                     	;# 
  6711     0891                     	;# 
  6712     0892                     	;# 
  6713     0893                     	;# 
  6714     0893                     	;# 
  6715     0894                     	;# 
  6716     0895                     	;# 
  6717     0896                     	;# 
  6718     0897                     	;# 
  6719     0897                     	;# 
  6720     0898                     	;# 
  6721     0899                     	;# 
  6722     0D8C                     	;# 
  6723     0D8C                     	;# 
  6724     0D8D                     	;# 
  6725     0D8E                     	;# 
  6726     0D8F                     	;# 
  6727     0D8F                     	;# 
  6728     0D90                     	;# 
  6729     0D91                     	;# 
  6730     0D92                     	;# 
  6731     0D92                     	;# 
  6732     0D93                     	;# 
  6733     0D94                     	;# 
  6734     0D95                     	;# 
  6735     0D95                     	;# 
  6736     0D96                     	;# 
  6737     0D97                     	;# 
  6738     0D98                     	;# 
  6739     0D99                     	;# 
  6740     0D9A                     	;# 
  6741     0D9B                     	;# 
  6742     0D9C                     	;# 
  6743     0D9D                     	;# 
  6744     0D9E                     	;# 
  6745     0D9E                     	;# 
  6746     0D9F                     	;# 
  6747     0DA0                     	;# 
  6748     0DA1                     	;# 
  6749     0DA1                     	;# 
  6750     0DA2                     	;# 
  6751     0DA3                     	;# 
  6752     0DA4                     	;# 
  6753     0DA4                     	;# 
  6754     0DA5                     	;# 
  6755     0DA6                     	;# 
  6756     0DA7                     	;# 
  6757     0DA7                     	;# 
  6758     0DA8                     	;# 
  6759     0DA9                     	;# 
  6760     0DAA                     	;# 
  6761     0DAB                     	;# 
  6762     0DAC                     	;# 
  6763     0DAD                     	;# 
  6764     0DAE                     	;# 
  6765     0DAF                     	;# 
  6766     0E0F                     	;# 
  6767     0E10                     	;# 
  6768     0E11                     	;# 
  6769     0E12                     	;# 
  6770     0E13                     	;# 
  6771     0E14                     	;# 
  6772     0E15                     	;# 
  6773     0E16                     	;# 
  6774     0E17                     	;# 
  6775     0E17                     	;# 
  6776     0E18                     	;# 
  6777     0E18                     	;# 
  6778     0E19                     	;# 
  6779     0E1A                     	;# 
  6780     0E1B                     	;# 
  6781     0E1B                     	;# 
  6782     0E1C                     	;# 
  6783     0E1D                     	;# 
  6784     0E1E                     	;# 
  6785     0E1E                     	;# 
  6786     0E1F                     	;# 
  6787     0E20                     	;# 
  6788     0E21                     	;# 
  6789     0E22                     	;# 
  6790     0E23                     	;# 
  6791     0E24                     	;# 
  6792     0E25                     	;# 
  6793     0E26                     	;# 
  6794     0E27                     	;# 
  6795     0E28                     	;# 
  6796     0E29                     	;# 
  6797     0E2A                     	;# 
  6798     0E2B                     	;# 
  6799     0E2C                     	;# 
  6800     0E2D                     	;# 
  6801     0E2E                     	;# 
  6802     0E90                     	;# 
  6803     0E91                     	;# 
  6804     0E92                     	;# 
  6805     0E94                     	;# 
  6806     0E95                     	;# 
  6807     0E9C                     	;# 
  6808     0E9D                     	;# 
  6809     0E9E                     	;# 
  6810     0E9F                     	;# 
  6811     0EA0                     	;# 
  6812     0EA1                     	;# 
  6813     0EA2                     	;# 
  6814     0EA3                     	;# 
  6815     0EA4                     	;# 
  6816     0EA5                     	;# 
  6817     0EA6                     	;# 
  6818     0EA7                     	;# 
  6819     0F0F                     	;# 
  6820     0F10                     	;# 
  6821     0F11                     	;# 
  6822     0F12                     	;# 
  6823     0F13                     	;# 
  6824     0F14                     	;# 
  6825     0F15                     	;# 
  6826     0F16                     	;# 
  6827     0F17                     	;# 
  6828     0F18                     	;# 
  6829     0F19                     	;# 
  6830     0F1A                     	;# 
  6831     0F1B                     	;# 
  6832     0F1C                     	;# 
  6833     0F1D                     	;# 
  6834     0F1E                     	;# 
  6835     0F1F                     	;# 
  6836     0F20                     	;# 
  6837     0F21                     	;# 
  6838     0F22                     	;# 
  6839     0F23                     	;# 
  6840     0F24                     	;# 
  6841     0F25                     	;# 
  6842     0F26                     	;# 
  6843     0F27                     	;# 
  6844     0F28                     	;# 
  6845     0F29                     	;# 
  6846     0F2A                     	;# 
  6847     0F2B                     	;# 
  6848     0F2C                     	;# 
  6849     0F2D                     	;# 
  6850     0F2E                     	;# 
  6851     0F2F                     	;# 
  6852     0F30                     	;# 
  6853     0F31                     	;# 
  6854     0F32                     	;# 
  6855     0F33                     	;# 
  6856     0F34                     	;# 
  6857     0F35                     	;# 
  6858     0F36                     	;# 
  6859     0F37                     	;# 
  6860     0FE4                     	;# 
  6861     0FE5                     	;# 
  6862     0FE6                     	;# 
  6863     0FE7                     	;# 
  6864     0FE8                     	;# 
  6865     0FE9                     	;# 
  6866     0FEA                     	;# 
  6867     0FEB                     	;# 
  6868     0FED                     	;# 
  6869     0FEE                     	;# 
  6870     0FEF                     	;_eusartRxStatusBuffer
  6871                           
  6872 ;; Function _I2C1_Deinitialize is unused but had its address taken
  6873     0000                     
  6874 ;; Function _I2C1_Write is unused but had its address taken
  6875     0000                     
  6876 ;; Function _I2C1_Read is unused but had its address taken
  6877     0000                     
  6878 ;; Function _I2C1_WriteRead is unused but had its address taken
  6879     0000                     
  6880 ;; Function _I2C1_ErrorGet is unused but had its address taken
  6881     0000                     
  6882 ;; Function _I2C1_IsBusy is unused but had its address taken
  6883     0000                     
  6884 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  6885     0000                     
  6886 ;; Function _TMR2_Start is unused but had its address taken
  6887     0000                     
  6888 ;; Function _TMR2_Stop is unused but had its address taken
  6889     0000                     
  6890 ;; Function _TMR2_PeriodCountSet is unused but had its address taken
  6891     0000                     
  6892 ;; Function _TMR2_Tasks is unused but had its address taken
  6893     0000                     
  6894 ;; Function _Timer0_PeriodCountSet is unused but had its address taken
  6895     0000                     
  6896 ;; Function _TMR1_Write is unused but had its address taken
  6897     0000                     
  6898 ;; Function _TMR1_Tasks is unused but had its address taken
  6899     0000                     
  6900 ;; Function _TMR4_Start is unused but had its address taken
  6901     0000                     
  6902 ;; Function _TMR4_Stop is unused but had its address taken
  6903     0000                     
  6904 ;; Function _TMR4_PeriodCountSet is unused but had its address taken
  6905     0000                     
  6906 ;; Function _TMR4_Tasks is unused but had its address taken
  6907     0000                     
  6908 ;; Function _EUSART_Deinitialize is unused but had its address taken
  6909     0000                     
  6910 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  6911     0000                     
  6912 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  6913     0000                     
  6914 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  6915     0000                     
  6916 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  6917     0000                     
  6918 ;; Function _EUSART_IsRxReady is unused but had its address taken
  6919     0000                     
  6920 ;; Function _EUSART_IsTxReady is unused but had its address taken
  6921     0000                     
  6922 ;; Function _EUSART_IsTxDone is unused but had its address taken
  6923     0000                     
  6924 ;; Function _EUSART_ErrorGet is unused but had its address taken
  6925     0000                     
  6926 ;; Function _EUSART_Read is unused but had its address taken
  6927     0000                     
  6928 ;; Function _EUSART_Write is unused but had its address taken
  6929     0000                     
  6930                           	psect	idataBANK2
  6931     0003                     __pidataBANK2:
  6932                           
  6933                           ;initializer for _BackLight_State
  6934     0003  3408               	retlw	8
  6935                           
  6936                           	psect	stringtext1
  6937     1800                     __pstringtext1:
  6938     1800                     _UART1:
  6939     1800  3449               	retlw	low _EUSART_Initialize
  6940     1801  3410               	retlw	high _EUSART_Initialize
  6941     1802  3400               	retlw	0
  6942     1803  3400               	retlw	0
  6943     1804  3400               	retlw	0
  6944     1805  3400               	retlw	0
  6945     1806  3400               	retlw	0
  6946     1807  3400               	retlw	0
  6947     1808  3400               	retlw	0
  6948     1809  3400               	retlw	0
  6949     180A  3400               	retlw	0
  6950     180B  3400               	retlw	0
  6951     180C  3400               	retlw	0
  6952     180D  3400               	retlw	0
  6953     180E  3400               	retlw	0
  6954     180F  3400               	retlw	0
  6955     1810  3400               	retlw	0
  6956     1811  3400               	retlw	0
  6957     1812  3400               	retlw	0
  6958     1813  3400               	retlw	0
  6959     1814  3400               	retlw	0
  6960     1815  3400               	retlw	0
  6961     1816  3400               	retlw	0
  6962     1817  3400               	retlw	0
  6963     1818  3400               	retlw	0
  6964     1819  3400               	retlw	0
  6965     181A  3400               	retlw	0
  6966     181B  3400               	retlw	0
  6967     181C  3400               	retlw	0
  6968     181D  3400               	retlw	0
  6969     181E  3400               	retlw	0
  6970     181F  3400               	retlw	0
  6971     1820  3400               	retlw	0
  6972     1821  3400               	retlw	0
  6973     1822  3400               	retlw	0
  6974     1823  3400               	retlw	0
  6975     1824  3417               	retlw	low _EUSART_RxCompleteCallbackRegister
  6976     1825  341D               	retlw	high _EUSART_RxCompleteCallbackRegister
  6977     1826  3400               	retlw	0
  6978     1827  3400               	retlw	0
  6979     1828  3447               	retlw	low _EUSART_FramingErrorCallbackRegister
  6980     1829  341D               	retlw	high _EUSART_FramingErrorCallbackRegister
  6981     182A  3456               	retlw	low _EUSART_OverrunErrorCallbackRegister
  6982     182B  341D               	retlw	high _EUSART_OverrunErrorCallbackRegister
  6983     182C  3400               	retlw	0
  6984     182D  3400               	retlw	0
  6985     182E  3400               	retlw	0
  6986     182F  3400               	retlw	0
  6987     1830                     __end_of_UART1:
  6988                           
  6989                           	psect	stringtext2
  6990     184C                     __pstringtext2:
  6991     184C                     _I2C1_Host:
  6992     184C  3488               	retlw	low _I2C1_Initialize
  6993     184D  341D               	retlw	high _I2C1_Initialize
  6994     184E  3400               	retlw	0
  6995     184F  3400               	retlw	0
  6996     1850  3400               	retlw	0
  6997     1851  3400               	retlw	0
  6998     1852  3400               	retlw	0
  6999     1853  3400               	retlw	0
  7000     1854  3400               	retlw	0
  7001     1855  3400               	retlw	0
  7002     1856  3400               	retlw	0
  7003     1857  3400               	retlw	0
  7004     1858  3400               	retlw	0
  7005     1859  3400               	retlw	0
  7006     185A  3400               	retlw	0
  7007     185B  3400               	retlw	0
  7008     185C  3423               	retlw	low _I2C1_CallbackRegister
  7009     185D  341D               	retlw	high _I2C1_CallbackRegister
  7010     185E  3400               	retlw	0
  7011     185F  3400               	retlw	0
  7012     1860                     __end_of_I2C1_Host:
  7013                           
  7014                           	psect	stringtext3
  7015     1860                     __pstringtext3:
  7016     1860                     _i2c1_eventTable:
  7017     1860  3451               	retlw	low _I2C1_EVENT_IDLE
  7018     1861  341C               	retlw	high _I2C1_EVENT_IDLE
  7019     1862  34B8               	retlw	low _I2C1_EVENT_SEND_RD_ADDR
  7020     1863  341C               	retlw	high _I2C1_EVENT_SEND_RD_ADDR
  7021     1864  349B               	retlw	low _I2C1_EVENT_SEND_WR_ADDR
  7022     1865  341C               	retlw	high _I2C1_EVENT_SEND_WR_ADDR
  7023     1866  3476               	retlw	low _I2C1_EVENT_TX
  7024     1867  3410               	retlw	high _I2C1_EVENT_TX
  7025     1868  34D5               	retlw	low _I2C1_EVENT_RX
  7026     1869  3410               	retlw	high _I2C1_EVENT_RX
  7027     186A  3477               	retlw	low _I2C1_EVENT_NACK
  7028     186B  341C               	retlw	high _I2C1_EVENT_NACK
  7029     186C  347D               	retlw	low _I2C1_EVENT_ERROR
  7030     186D  341C               	retlw	high _I2C1_EVENT_ERROR
  7031     186E  34C0               	retlw	low _I2C1_EVENT_STOP
  7032     186F  341C               	retlw	high _I2C1_EVENT_STOP
  7033     1870  34A2               	retlw	low _I2C1_EVENT_RESET
  7034     1871  341C               	retlw	high _I2C1_EVENT_RESET
  7035     1872                     __end_of_i2c1_eventTable:
  7036                           
  7037                           	psect	stringtext4
  7038     18AA                     __pstringtext4:
  7039     18AA                     _Timer4:
  7040     18AA  3404               	retlw	low _TMR4_Initialize
  7041     18AB  341E               	retlw	high _TMR4_Initialize
  7042     18AC  3400               	retlw	0
  7043     18AD  3400               	retlw	0
  7044     18AE  3400               	retlw	0
  7045     18AF  3400               	retlw	0
  7046     18B0  3400               	retlw	0
  7047     18B1  3400               	retlw	0
  7048     18B2  3495               	retlw	low _TMR4_OverflowCallbackRegister
  7049     18B3  341C               	retlw	high _TMR4_OverflowCallbackRegister
  7050     18B4  3400               	retlw	0
  7051     18B5  3400               	retlw	0
  7052     18B6                     __end_of_Timer4:
  7053                           
  7054                           	psect	stringtext5
  7055     18B6                     __pstringtext5:
  7056     18B6                     _tmr1:
  7057     18B6  3493               	retlw	low _TMR1_Initialize
  7058     18B7  341E               	retlw	high _TMR1_Initialize
  7059     18B8  3433               	retlw	low _TMR1_Start
  7060     18B9  341C               	retlw	high _TMR1_Start
  7061     18BA  3436               	retlw	low _TMR1_Stop
  7062     18BB  341C               	retlw	high _TMR1_Stop
  7063     18BC  3400               	retlw	0
  7064     18BD  3400               	retlw	0
  7065     18BE  3489               	retlw	low _TMR1_OverflowCallbackRegister
  7066     18BF  341C               	retlw	high _TMR1_OverflowCallbackRegister
  7067     18C0  3400               	retlw	0
  7068     18C1  3400               	retlw	0
  7069     18C2                     __end_of_tmr1:
  7070                           
  7071                           	psect	stringtext6
  7072     18C2                     __pstringtext6:
  7073     18C2                     _Timer0:
  7074     18C2  342F               	retlw	low _Timer0_Initialize
  7075     18C3  341E               	retlw	high _Timer0_Initialize
  7076     18C4  3400               	retlw	0
  7077     18C5  3400               	retlw	0
  7078     18C6  3400               	retlw	0
  7079     18C7  3400               	retlw	0
  7080     18C8  3400               	retlw	0
  7081     18C9  3400               	retlw	0
  7082     18CA  34E2               	retlw	low _Timer0_OverflowCallbackRegister
  7083     18CB  341C               	retlw	high _Timer0_OverflowCallbackRegister
  7084     18CC  3400               	retlw	0
  7085     18CD  3400               	retlw	0
  7086     18CE                     __end_of_Timer0:
  7087                           
  7088                           	psect	stringtext7
  7089     1830                     __pstringtext7:
  7090     1830                     _Timer2:
  7091     1830  349C               	retlw	low _TMR2_Initialize
  7092     1831  341D               	retlw	high _TMR2_Initialize
  7093     1832  3400               	retlw	0
  7094     1833  3400               	retlw	0
  7095     1834  3400               	retlw	0
  7096     1835  3400               	retlw	0
  7097     1836  3400               	retlw	0
  7098     1837  3400               	retlw	0
  7099     1838  348F               	retlw	low _TMR2_OverflowCallbackRegister
  7100     1839  341C               	retlw	high _TMR2_OverflowCallbackRegister
  7101     183A  3400               	retlw	0
  7102     183B  3400               	retlw	0
  7103     183C                     __end_of_Timer2:
  7104     000E                     _PORTCbits	set	14
  7105     0019                     _T1GCONbits	set	25
  7106     0018                     _T1CONbits	set	24
  7107     0018                     _T1CON	set	24
  7108     0016                     _TMR1L	set	22
  7109     0017                     _TMR1H	set	23
  7110     0019                     _T1GCON	set	25
  7111     0015                     _TMR0	set	21
  7112     001B                     _PR2	set	27
  7113     001A                     _TMR2	set	26
  7114     001C                     _T2CONbits	set	28
  7115     001F                     _T2RSTbits	set	31
  7116     001D                     _T2HLTbits	set	29
  7117     001C                     _T2CON	set	28
  7118     001A                     _T2TMR	set	26
  7119     001B                     _T2PR	set	27
  7120     001F                     _T2RST	set	31
  7121     001D                     _T2HLT	set	29
  7122     001E                     _T2CLKCON	set	30
  7123     000B                     _INTCONbits	set	11
  7124     0011                     _PIR2bits	set	17
  7125     0010                     _PIR1bits	set	16
  7126     0095                     _OPTION_REG	set	149
  7127     0095                     _OPTION_REGbits	set	149
  7128     008E                     _TRISC	set	142
  7129     008D                     _TRISB	set	141
  7130     008C                     _TRISA	set	140
  7131     0098                     _OSCTUNE	set	152
  7132     0099                     _OSCCON	set	153
  7133     0091                     _PIE2bits	set	145
  7134     0090                     _PIE1bits	set	144
  7135     009D                     _ADCON0bits	set	157
  7136     009D                     _ADCON0	set	157
  7137     009F                     _ADCON2	set	159
  7138     009C                     _ADRESH	set	156
  7139     009B                     _ADRESL	set	155
  7140     009E                     _ADCON1	set	158
  7141     0473                     _TRISC3	set	1139
  7142     0474                     _TRISC4	set	1140
  7143     010E                     _LATCbits	set	270
  7144     010D                     _LATBbits	set	269
  7145     010E                     _LATC	set	270
  7146     010D                     _LATB	set	269
  7147     010C                     _LATA	set	268
  7148     0116                     _BORCON	set	278
  7149     019A                     _TX1REG	set	410
  7150     0199                     _RC1REG	set	409
  7151     019F                     _BAUD1CONbits	set	415
  7152     019E                     _TX1STAbits	set	414
  7153     019D                     _RC1STAbits	set	413
  7154     019C                     _SPBRGH	set	412
  7155     019B                     _SPBRGL	set	411
  7156     019E                     _TX1STA	set	414
  7157     019D                     _RC1STA	set	413
  7158     019F                     _BAUD1CON	set	415
  7159     018E                     _ANSELC	set	398
  7160     018D                     _ANSELB	set	397
  7161     018C                     _ANSELA	set	396
  7162     020E                     _WPUC	set	526
  7163     020D                     _WPUB	set	525
  7164     020C                     _WPUA	set	524
  7165     0216                     _SSP1CON2bits	set	534
  7166     0211                     _SSP1BUF	set	529
  7167     0214                     _SSP1STATbits	set	532
  7168     0215                     _SSP1CON1bits	set	533
  7169     0212                     _SSP1ADD	set	530
  7170     0217                     _SSP1CON3	set	535
  7171     0216                     _SSP1CON2	set	534
  7172     0215                     _SSP1CON1	set	533
  7173     0214                     _SSP1STAT	set	532
  7174     028E                     _ODCONC	set	654
  7175     028D                     _ODCONB	set	653
  7176     028C                     _ODCONA	set	652
  7177     029A                     _CCP2CONbits	set	666
  7178     0298                     _CCPR2L	set	664
  7179     0299                     _CCPR2H	set	665
  7180     029A                     _CCP2CON	set	666
  7181     0293                     _CCP1CONbits	set	659
  7182     029E                     _CCPTMRSbits	set	670
  7183     0291                     _CCPR1L	set	657
  7184     0292                     _CCPR1H	set	658
  7185     0293                     _CCP1CON	set	659
  7186     030E                     _SLRCONC	set	782
  7187     030D                     _SLRCONB	set	781
  7188     030C                     _SLRCONA	set	780
  7189     0399                     _IOCCF	set	921
  7190     0398                     _IOCCN	set	920
  7191     0397                     _IOCCP	set	919
  7192     0396                     _IOCBF	set	918
  7193     0395                     _IOCBN	set	917
  7194     0394                     _IOCBP	set	916
  7195     0393                     _IOCAF	set	915
  7196     0392                     _IOCAN	set	914
  7197     0391                     _IOCAP	set	913
  7198     038E                     _INLVLC	set	910
  7199     038D                     _INLVLB	set	909
  7200     038C                     _INLVLA	set	908
  7201     0414                     _PR4	set	1044
  7202     0413                     _TMR4	set	1043
  7203     0415                     _T4CONbits	set	1045
  7204     0418                     _T4RSTbits	set	1048
  7205     0416                     _T4HLTbits	set	1046
  7206     0415                     _T4CON	set	1045
  7207     0413                     _T4TMR	set	1043
  7208     0414                     _T4PR	set	1044
  7209     0418                     _T4RST	set	1048
  7210     0416                     _T4HLT	set	1046
  7211     0417                     _T4CLKCON	set	1047
  7212     0E14                     _CCP1PPS	set	3604
  7213     0E15                     _CCP2PPS	set	3605
  7214     0E21                     _SSPDATPPS	set	3617
  7215     0E20                     _SSPCLKPPS	set	3616
  7216     0E24                     _RXPPS	set	3620
  7217     0EA5                     _RC5PPS	set	3749
  7218     0E92                     _RA2PPS	set	3730
  7219     0EA3                     _RC3PPS	set	3747
  7220     0EA4                     _RC4PPS	set	3748
  7221     0EA6                     _RC6PPS	set	3750
  7222     183C                     STR_3:
  7223     183C  3453               	retlw	83	;'S'
  7224     183D  3465               	retlw	101	;'e'
  7225     183E  346E               	retlw	110	;'n'
  7226     183F  3474               	retlw	116	;'t'
  7227     1840  3420               	retlw	32	;' '
  7228     1841  3463               	retlw	99	;'c'
  7229     1842  346F               	retlw	111	;'o'
  7230     1843  3464               	retlw	100	;'d'
  7231     1844  3465               	retlw	101	;'e'
  7232     1845  343A               	retlw	58	;':'
  7233     1846  3420               	retlw	32	;' '
  7234     1847  3425               	retlw	37	;'%'
  7235     1848  3468               	retlw	104	;'h'
  7236     1849  3468               	retlw	104	;'h'
  7237     184A  3478               	retlw	120	;'x'
  7238     184B  3400               	retlw	0
  7239                           
  7240                           	psect	stringtext8
  7241     1872                     __pstringtext8:
  7242     1872                     STR_6:
  7243     1872  3444               	retlw	68	;'D'
  7244     1873  3469               	retlw	105	;'i'
  7245     1874  3473               	retlw	115	;'s'
  7246     1875  3474               	retlw	116	;'t'
  7247     1876  342E               	retlw	46	;'.'
  7248     1877  343A               	retlw	58	;':'
  7249     1878  3420               	retlw	32	;' '
  7250     1879  3425               	retlw	37	;'%'
  7251     187A  342E               	retlw	46	;'.'
  7252     187B  3432               	retlw	50	;'2'
  7253     187C  3466               	retlw	102	;'f'
  7254     187D  3420               	retlw	32	;' '
  7255     187E  3463               	retlw	99	;'c'
  7256     187F  346D               	retlw	109	;'m'
  7257     1880  3400               	retlw	0
  7258                           
  7259                           	psect	stringtext9
  7260     1881                     __pstringtext9:
  7261     1881                     STR_8:
  7262     1881  3454               	retlw	84	;'T'
  7263     1882  3465               	retlw	101	;'e'
  7264     1883  346D               	retlw	109	;'m'
  7265     1884  3470               	retlw	112	;'p'
  7266     1885  342E               	retlw	46	;'.'
  7267     1886  343A               	retlw	58	;':'
  7268     1887  3420               	retlw	32	;' '
  7269     1888  3425               	retlw	37	;'%'
  7270     1889  342E               	retlw	46	;'.'
  7271     188A  3432               	retlw	50	;'2'
  7272     188B  3466               	retlw	102	;'f'
  7273     188C  3420               	retlw	32	;' '
  7274     188D  3443               	retlw	67	;'C'
  7275     188E  3400               	retlw	0
  7276                           
  7277                           	psect	stringtext10
  7278     188F                     __pstringtext10:
  7279     188F                     STR_2:
  7280     188F  3420               	retlw	32	;' '
  7281     1890  342E               	retlw	46	;'.'
  7282     1891  342E               	retlw	46	;'.'
  7283     1892  3420               	retlw	32	;' '
  7284     1893  3449               	retlw	73	;'I'
  7285     1894  346E               	retlw	110	;'n'
  7286     1895  3474               	retlw	116	;'t'
  7287     1896  3465               	retlw	101	;'e'
  7288     1897  3472               	retlw	114	;'r'
  7289     1898  3472               	retlw	114	;'r'
  7290     1899  3475               	retlw	117	;'u'
  7291     189A  3470               	retlw	112	;'p'
  7292     189B  3474               	retlw	116	;'t'
  7293     189C  3400               	retlw	0
  7294                           
  7295                           	psect	stringtext11
  7296     189D                     __pstringtext11:
  7297     189D                     STR_7:
  7298     189D  344F               	retlw	79	;'O'
  7299     189E  3475               	retlw	117	;'u'
  7300     189F  3474               	retlw	116	;'t'
  7301     18A0  3420               	retlw	32	;' '
  7302     18A1  346F               	retlw	111	;'o'
  7303     18A2  3466               	retlw	102	;'f'
  7304     18A3  3420               	retlw	32	;' '
  7305     18A4  3452               	retlw	82	;'R'
  7306     18A5  3461               	retlw	97	;'a'
  7307     18A6  346E               	retlw	110	;'n'
  7308     18A7  3467               	retlw	103	;'g'
  7309     18A8  3465               	retlw	101	;'e'
  7310     18A9  3400               	retlw	0
  7311                           
  7312                           	psect	stringtext12
  7313     18CE                     __pstringtext12:
  7314     18CE                     STR_4:
  7315     18CE  3420               	retlw	32	;' '
  7316     18CF  3454               	retlw	84	;'T'
  7317     18D0  344D               	retlw	77	;'M'
  7318     18D1  3452               	retlw	82	;'R'
  7319     18D2  3430               	retlw	48	;'0'
  7320     18D3  3420               	retlw	32	;' '
  7321     18D4  342E               	retlw	46	;'.'
  7322     18D5  342E               	retlw	46	;'.'
  7323     18D6  3400               	retlw	0
  7324                           
  7325                           	psect	stringtext13
  7326     18D7                     __pstringtext13:
  7327     18D7                     STR_1:
  7328     18D7  3420               	retlw	32	;' '
  7329     18D8  3455               	retlw	85	;'U'
  7330     18D9  3441               	retlw	65	;'A'
  7331     18DA  3452               	retlw	82	;'R'
  7332     18DB  3454               	retlw	84	;'T'
  7333     18DC  3420               	retlw	32	;' '
  7334     18DD  342E               	retlw	46	;'.'
  7335     18DE  342E               	retlw	46	;'.'
  7336     18DF  3400               	retlw	0
  7337                           
  7338                           	psect	stringtext14
  7339     18E0                     __pstringtext14:
  7340     18E0                     STR_9:
  7341     18E0  3469               	retlw	105	;'i'
  7342     18E1  346E               	retlw	110	;'n'
  7343     18E2  3466               	retlw	102	;'f'
  7344     18E3  3400               	retlw	0
  7345                           
  7346                           	psect	stringtext15
  7347     18E4                     __pstringtext15:
  7348     18E4                     STR_12:
  7349     18E4  346E               	retlw	110	;'n'
  7350     18E5  3461               	retlw	97	;'a'
  7351     18E6  346E               	retlw	110	;'n'
  7352     18E7  3400               	retlw	0
  7353                           
  7354                           	psect	stringtext16
  7355     0000                     __pstringtext16:
  7356     18E0                     
  7357                           	psect	cinit
  7358     0043                     start_initialization:	
  7359                           ; #config settings
  7360                           
  7361     0043                     __initialization:	;BIGRAM
  7362                           
  7363                           ; Initialize objects allocated to BANK2
  7364     0043  0022               	movlb	2	; select bank2
  7365     0044  3180  2003  3180   	fcall	__pidataBANK2	;fetch initializer
  7366     0047  00EC               	movwf	__pdataBANK2& (0+127)
  7367                           
  7368                           ; Clear objects allocated to BIGRAM
  7369     0048  3070               	movlw	low (0+9072)
  7370     0049  0084               	movwf	4
  7371     004A  3023               	movlw	high (0+9072)
  7372     004B  0085               	movwf	5
  7373     004C  3080               	movlw	128
  7374     004D  00FE               	movwf	btemp
  7375     004E  3000               	movlw	0
  7376     004F  00FF               	movwf	btemp+1
  7377     0050  319D  253B  3180   	fcall	clear_ram0
  7378                           
  7379                           ; Clear objects allocated to BANK2
  7380     0053  3047               	movlw	low __pbssBANK2
  7381     0054  0084               	movwf	4
  7382     0055  3001               	movlw	high __pbssBANK2
  7383     0056  0085               	movwf	5
  7384     0057  3025               	movlw	37
  7385     0058  00FE               	movwf	btemp
  7386     0059  3000               	movlw	0
  7387     005A  00FF               	movwf	btemp+1
  7388     005B  319D  253B  3180   	fcall	clear_ram0
  7389                           
  7390                           ; Clear objects allocated to BANK3
  7391     005E  30A0               	movlw	low __pbssBANK3
  7392     005F  0084               	movwf	4
  7393     0060  3001               	movlw	high __pbssBANK3
  7394     0061  0085               	movwf	5
  7395     0062  301E               	movlw	30
  7396     0063  00FE               	movwf	btemp
  7397     0064  3000               	movlw	0
  7398     0065  00FF               	movwf	btemp+1
  7399     0066  319D  253B  3180   	fcall	clear_ram0
  7400                           
  7401                           ; Clear objects allocated to BANK4
  7402     0069  3020               	movlw	low __pbssBANK4
  7403     006A  0084               	movwf	4
  7404     006B  3002               	movlw	high __pbssBANK4
  7405     006C  0085               	movwf	5
  7406     006D  3050               	movlw	80
  7407     006E  00FE               	movwf	btemp
  7408     006F  3000               	movlw	0
  7409     0070  00FF               	movwf	btemp+1
  7410     0071  319D  253B  3180   	fcall	clear_ram0
  7411                           
  7412                           ; Clear objects allocated to BANK5
  7413     0074  30A0               	movlw	low __pbssBANK5
  7414     0075  0084               	movwf	4
  7415     0076  3002               	movlw	high __pbssBANK5
  7416     0077  0085               	movwf	5
  7417     0078  3040               	movlw	64
  7418     0079  00FE               	movwf	btemp
  7419     007A  3000               	movlw	0
  7420     007B  00FF               	movwf	btemp+1
  7421     007C  319D  253B  3180   	fcall	clear_ram0
  7422     007F                     end_of_initialization:	
  7423                           ;End of C runtime variable initialization code
  7424                           
  7425     007F                     __end_of__initialization:
  7426     007F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7427     0080  0020               	movlb	0
  7428     0081  3195  2DC2         	ljmp	_main	;jump to C main() function
  7429                           
  7430                           	psect	bssBANK2
  7431     0147                     __pbssBANK2:
  7432     0147                     _i2c1Status:
  7433     0147                     	ds	14
  7434     0155                     _width:
  7435     0155                     	ds	2
  7436     0157                     _prec:
  7437     0157                     	ds	2
  7438     0159                     _EUSART_OverrunErrorHandler:
  7439     0159                     	ds	2
  7440     015B                     _EUSART_FramingErrorHandler:
  7441     015B                     	ds	2
  7442     015D                     _timer1ReloadVal:
  7443     015D                     	ds	2
  7444     015F                     Timer0_OverflowISR@CountCallBack:
  7445     015F                     	ds	2
  7446     0161                     _Timer0_OverflowCallback:
  7447     0161                     	ds	2
  7448     0163                     _INT_InterruptHandler:
  7449     0163                     	ds	2
  7450     0165                     _flags:
  7451     0165                     	ds	1
  7452     0166                     _i2c_add:
  7453     0166                     	ds	1
  7454     0167                     _RS:
  7455     0167                     	ds	1
  7456     0168                     _eusartRxCount:
  7457     0168                     	ds	1
  7458     0169                     _eusartRxTail:
  7459     0169                     	ds	1
  7460     016A                     _eusartRxHead:
  7461     016A                     	ds	1
  7462     016B                     _timer0ReloadVal:
  7463     016B                     	ds	1
  7464                           
  7465                           	psect	dataBANK2
  7466     016C                     __pdataBANK2:
  7467     016C                     _BackLight_State:
  7468     016C                     	ds	1
  7469                           
  7470                           	psect	bssBANK3
  7471     01A0                     __pbssBANK3:
  7472     01A0                     floorf@F521:
  7473     01A0                     	ds	4
  7474     01A4                     ___fpclassifyf@F465:
  7475     01A4                     	ds	4
  7476     01A8                     _temperature:
  7477     01A8                     	ds	4
  7478     01AC                     _distance:
  7479     01AC                     	ds	4
  7480     01B0                     _eusartRxLastError:
  7481     01B0                     	ds	2
  7482     01B2                     _TMR4_OverflowCallback:
  7483     01B2                     	ds	2
  7484     01B4                     _TMR1_OverflowCallback:
  7485     01B4                     	ds	2
  7486     01B6                     _TMR1_InterruptHandler:
  7487     01B6                     	ds	2
  7488     01B8                     _TMR2_OverflowCallback:
  7489     01B8                     	ds	2
  7490     01BA                     _EUSART_RxInterruptHandler:
  7491     01BA                     	ds	2
  7492     01BC                     _I2C1_Callback:
  7493     01BC                     	ds	2
  7494                           
  7495                           	psect	bssBANK4
  7496     0220                     __pbssBANK4:
  7497     0220                     _dbuf:
  7498     0220                     	ds	80
  7499                           
  7500                           	psect	bssBANK5
  7501     02A0                     __pbssBANK5:
  7502     02A0                     _eusartRxBuffer:
  7503     02A0                     	ds	64
  7504                           
  7505                           	psect	clrtext
  7506     1D3B                     clear_ram0:	
  7507                           ;	Called with FSR0 containing the base address, and
  7508                           ;	btemp/btemp+1 has the size to clear
  7509                           
  7510     1D3B  0064               	clrwdt	;clear the watchdog before getting into this loop
  7511     1D3C                     clrloop0:
  7512     1D3C  0180               	clrf	0	;clear RAM location pointed to by FSR
  7513     1D3D  3101               	addfsr 0,1
  7514     1D3E  3001               	movlw	1
  7515     1D3F  02FE               	subwf	btemp,f
  7516     1D40  3000               	movlw	0
  7517     1D41  3BFF               	subwfb	btemp+1,f
  7518     1D42  087F               	movf	btemp+1,w
  7519     1D43  047E               	iorwf	btemp,w
  7520     1D44  1D03               	skipz
  7521     1D45  2D3C               	goto	clrloop0	;have we reached the end yet?
  7522     1D46  3400               	retlw	0	;all done for this memory range, return
  7523                           
  7524                           	psect	cstackBANK3
  7525     01BE                     __pcstackBANK3:
  7526     01BE                     ?_I2C1_CallbackRegister:
  7527     01BE                     ??_CLOCK_Initialize:	
  7528                           ; 1 bytes @ 0x0
  7529                           
  7530     01BE                     ??_PIN_MANAGER_Initialize:	
  7531                           ; 1 bytes @ 0x0
  7532                           
  7533     01BE                     ?_INT_SetInterruptHandler:	
  7534                           ; 1 bytes @ 0x0
  7535                           
  7536     01BE                     ?_TMR2_OverflowCallbackRegister:	
  7537                           ; 1 bytes @ 0x0
  7538                           
  7539     01BE                     ?_Timer0_OverflowCallbackRegister:	
  7540                           ; 1 bytes @ 0x0
  7541                           
  7542     01BE                     ?_TMR1_OverflowCallbackRegister:	
  7543                           ; 1 bytes @ 0x0
  7544                           
  7545     01BE                     ?_TMR4_OverflowCallbackRegister:	
  7546                           ; 1 bytes @ 0x0
  7547                           
  7548     01BE                     ?_EUSART_RxCompleteCallbackRegister:	
  7549                           ; 1 bytes @ 0x0
  7550                           
  7551     01BE                     ?_EUSART_FramingErrorCallbackRegister:	
  7552                           ; 1 bytes @ 0x0
  7553                           
  7554     01BE                     ?_EUSART_OverrunErrorCallbackRegister:	
  7555                           ; 1 bytes @ 0x0
  7556                           
  7557     01BE                     ??_shift_out_to_motors:	
  7558                           ; 1 bytes @ 0x0
  7559                           
  7560     01BE                     ??_ADC_Initialize:	
  7561                           ; 1 bytes @ 0x0
  7562                           
  7563     01BE                     ??_CCP1_Initialize:	
  7564                           ; 1 bytes @ 0x0
  7565                           
  7566     01BE                     ??_CCP2_Initialize:	
  7567                           ; 1 bytes @ 0x0
  7568                           
  7569     01BE                     ?_CCP2_LoadDutyValue:	
  7570                           ; 1 bytes @ 0x0
  7571                           
  7572     01BE                     I2C1_CallbackRegister@callbackHandler:	
  7573                           ; 1 bytes @ 0x0
  7574                           
  7575     01BE                     CCP2_LoadDutyValue@dutyValue:	
  7576                           ; 2 bytes @ 0x0
  7577                           
  7578     01BE                     INT_SetInterruptHandler@InterruptHandler:	
  7579                           ; 2 bytes @ 0x0
  7580                           
  7581     01BE                     TMR2_OverflowCallbackRegister@InterruptHandler:	
  7582                           ; 2 bytes @ 0x0
  7583                           
  7584     01BE                     Timer0_OverflowCallbackRegister@CallbackHandler:	
  7585                           ; 2 bytes @ 0x0
  7586                           
  7587     01BE                     TMR1_OverflowCallbackRegister@CallbackHandler:	
  7588                           ; 2 bytes @ 0x0
  7589                           
  7590     01BE                     TMR4_OverflowCallbackRegister@InterruptHandler:	
  7591                           ; 2 bytes @ 0x0
  7592                           
  7593     01BE                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  7594                           ; 2 bytes @ 0x0
  7595                           
  7596     01BE                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  7597                           ; 2 bytes @ 0x0
  7598                           
  7599     01BE                     EUSART_RxCompleteCallbackRegister@callbackHandler:	
  7600                           ; 2 bytes @ 0x0
  7601                           
  7602                           
  7603                           ; 2 bytes @ 0x0
  7604     01BE                     	ds	2
  7605     01C0                     ??_I2C1_Initialize:
  7606     01C0                     ??_I2C1_CallbackRegister:	
  7607                           ; 1 bytes @ 0x2
  7608                           
  7609     01C0                     ??_EUSART_Initialize:	
  7610                           ; 1 bytes @ 0x2
  7611                           
  7612     01C0                     ??_Timer0_Initialize:	
  7613                           ; 1 bytes @ 0x2
  7614                           
  7615     01C0                     ??_TMR1_Initialize:	
  7616                           ; 1 bytes @ 0x2
  7617                           
  7618     01C0                     ??_TMR2_Initialize:	
  7619                           ; 1 bytes @ 0x2
  7620                           
  7621     01C0                     ??_TMR4_Initialize:	
  7622                           ; 1 bytes @ 0x2
  7623                           
  7624     01C0                     ??_INTERRUPT_Initialize:	
  7625                           ; 1 bytes @ 0x2
  7626                           
  7627     01C0                     ??_INT_SetInterruptHandler:	
  7628                           ; 1 bytes @ 0x2
  7629                           
  7630     01C0                     ??_TMR2_OverflowCallbackRegister:	
  7631                           ; 1 bytes @ 0x2
  7632                           
  7633     01C0                     ??_Timer0_OverflowCallbackRegister:	
  7634                           ; 1 bytes @ 0x2
  7635                           
  7636     01C0                     ??_TMR1_OverflowCallbackRegister:	
  7637                           ; 1 bytes @ 0x2
  7638                           
  7639     01C0                     ??_TMR4_OverflowCallbackRegister:	
  7640                           ; 1 bytes @ 0x2
  7641                           
  7642     01C0                     ??_EUSART_RxCompleteCallbackRegister:	
  7643                           ; 1 bytes @ 0x2
  7644                           
  7645     01C0                     ??_EUSART_FramingErrorCallbackRegister:	
  7646                           ; 1 bytes @ 0x2
  7647                           
  7648     01C0                     ??_EUSART_OverrunErrorCallbackRegister:	
  7649                           ; 1 bytes @ 0x2
  7650                           
  7651     01C0                     ??_CCP2_LoadDutyValue:	
  7652                           ; 1 bytes @ 0x2
  7653                           
  7654     01C0                     ??_SYSTEM_Initialize:	
  7655                           ; 1 bytes @ 0x2
  7656                           
  7657                           
  7658                           ; 1 bytes @ 0x2
  7659     01C0                     	ds	1
  7660     01C1                     shift_out_to_motors@byte:
  7661                           
  7662                           ; 1 bytes @ 0x3
  7663     01C1                     	ds	1
  7664     01C2                     shift_out_to_motors@i:
  7665                           
  7666                           ; 1 bytes @ 0x4
  7667     01C2                     	ds	1
  7668     01C3                     ??_main:
  7669                           
  7670                           ; 1 bytes @ 0x5
  7671     01C3                     	ds	2
  7672                           
  7673                           	psect	cstackBANK2
  7674     0120                     __pcstackBANK2:
  7675     0120                     sprintf@s:
  7676                           
  7677                           ; 1 bytes @ 0x0
  7678     0120                     	ds	1
  7679     0121                     sprintf@ap:
  7680                           
  7681                           ; 1 bytes @ 0x1
  7682     0121                     	ds	1
  7683     0122                     sprintf@f:
  7684                           
  7685                           ; 11 bytes @ 0x2
  7686     0122                     	ds	11
  7687     012D                     ??_TMR0_Custom_ISR:
  7688     012D                     ??_UART_Custom_ISR:	
  7689                           ; 1 bytes @ 0xD
  7690                           
  7691                           
  7692                           ; 1 bytes @ 0xD
  7693     012D                     	ds	2
  7694     012F                     UART_Custom_ISR@buffer:
  7695                           
  7696                           ; 16 bytes @ 0xF
  7697     012F                     	ds	4
  7698     0133                     TMR0_Custom_ISR@buffer:
  7699                           
  7700                           ; 16 bytes @ 0x13
  7701     0133                     	ds	12
  7702     013F                     UART_Custom_ISR@Rx_Code:
  7703                           
  7704                           ; 1 bytes @ 0x1F
  7705     013F                     	ds	1
  7706     0140                     ??_EUSART_ReceiveISR:
  7707                           
  7708                           ; 1 bytes @ 0x20
  7709     0140                     	ds	3
  7710     0143                     _TMR0_Custom_ISR$3581:
  7711                           
  7712                           ; 4 bytes @ 0x23
  7713     0143                     	ds	1
  7714     0144                     EUSART_ReceiveISR@regValue:
  7715                           
  7716                           ; 1 bytes @ 0x24
  7717     0144                     	ds	1
  7718     0145                     EUSART_ReceiveISR@tempRxHead:
  7719                           
  7720                           ; 1 bytes @ 0x25
  7721     0145                     	ds	2
  7722                           
  7723                           	psect	cstackBANK1
  7724     00A0                     __pcstackBANK1:
  7725     00A0                     ?_efgtoa:
  7726     00A0                     efgtoa@f:	
  7727                           ; 1 bytes @ 0x0
  7728                           
  7729                           
  7730                           ; 4 bytes @ 0x0
  7731     00A0                     	ds	4
  7732     00A4                     efgtoa@c:
  7733                           
  7734                           ; 1 bytes @ 0x4
  7735     00A4                     	ds	1
  7736     00A5                     ??_efgtoa:
  7737                           
  7738                           ; 1 bytes @ 0x5
  7739     00A5                     	ds	4
  7740     00A9                     efgtoa@ne:
  7741                           
  7742                           ; 2 bytes @ 0x9
  7743     00A9                     	ds	2
  7744     00AB                     efgtoa@p:
  7745                           
  7746                           ; 2 bytes @ 0xB
  7747     00AB                     	ds	2
  7748     00AD                     efgtoa@t:
  7749                           
  7750                           ; 2 bytes @ 0xD
  7751     00AD                     	ds	2
  7752     00AF                     _efgtoa$3151:
  7753                           
  7754                           ; 2 bytes @ 0xF
  7755     00AF                     	ds	2
  7756     00B1                     efgtoa@pp:
  7757                           
  7758                           ; 1 bytes @ 0x11
  7759     00B1                     	ds	1
  7760     00B2                     efgtoa@mode:
  7761                           
  7762                           ; 1 bytes @ 0x12
  7763     00B2                     	ds	1
  7764     00B3                     efgtoa@nmode:
  7765                           
  7766                           ; 1 bytes @ 0x13
  7767     00B3                     	ds	1
  7768     00B4                     efgtoa@d:
  7769                           
  7770                           ; 2 bytes @ 0x14
  7771     00B4                     	ds	2
  7772     00B6                     efgtoa@m:
  7773                           
  7774                           ; 2 bytes @ 0x16
  7775     00B6                     	ds	2
  7776     00B8                     efgtoa@fp:
  7777                           
  7778                           ; 1 bytes @ 0x18
  7779     00B8                     	ds	1
  7780     00B9                     efgtoa@e:
  7781                           
  7782                           ; 2 bytes @ 0x19
  7783     00B9                     	ds	2
  7784     00BB                     efgtoa@w:
  7785                           
  7786                           ; 2 bytes @ 0x1B
  7787     00BB                     	ds	2
  7788     00BD                     efgtoa@ou:
  7789                           
  7790                           ; 4 bytes @ 0x1D
  7791     00BD                     	ds	4
  7792     00C1                     efgtoa@i:
  7793                           
  7794                           ; 2 bytes @ 0x21
  7795     00C1                     	ds	2
  7796     00C3                     efgtoa@h:
  7797                           
  7798                           ; 4 bytes @ 0x23
  7799     00C3                     	ds	4
  7800     00C7                     efgtoa@l:
  7801                           
  7802                           ; 4 bytes @ 0x27
  7803     00C7                     	ds	4
  7804     00CB                     efgtoa@sign:
  7805                           
  7806                           ; 1 bytes @ 0x2B
  7807     00CB                     	ds	1
  7808     00CC                     efgtoa@n:
  7809                           
  7810                           ; 2 bytes @ 0x2C
  7811     00CC                     	ds	2
  7812     00CE                     efgtoa@g:
  7813                           
  7814                           ; 4 bytes @ 0x2E
  7815     00CE                     	ds	4
  7816     00D2                     efgtoa@u:
  7817                           
  7818                           ; 4 bytes @ 0x32
  7819     00D2                     	ds	4
  7820     00D6                     ??_vfpfcnvrt:
  7821                           
  7822                           ; 1 bytes @ 0x36
  7823     00D6                     	ds	4
  7824     00DA                     vfpfcnvrt@convarg:
  7825                           
  7826                           ; 4 bytes @ 0x3A
  7827     00DA                     	ds	4
  7828     00DE                     vfpfcnvrt@fp:
  7829                           
  7830                           ; 1 bytes @ 0x3E
  7831     00DE                     	ds	1
  7832     00DF                     vfpfcnvrt@c:
  7833                           
  7834                           ; 1 bytes @ 0x3F
  7835     00DF                     	ds	1
  7836     00E0                     vfpfcnvrt@cp:
  7837                           
  7838                           ; 2 bytes @ 0x40
  7839     00E0                     	ds	2
  7840     00E2                     ?_vfprintf:
  7841     00E2                     vfprintf@fmt:	
  7842                           ; 2 bytes @ 0x42
  7843                           
  7844                           
  7845                           ; 2 bytes @ 0x42
  7846     00E2                     	ds	2
  7847     00E4                     vfprintf@ap:
  7848                           
  7849                           ; 1 bytes @ 0x44
  7850     00E4                     	ds	1
  7851     00E5                     ??_vfprintf:
  7852                           
  7853                           ; 1 bytes @ 0x45
  7854     00E5                     	ds	1
  7855     00E6                     vfprintf@fp:
  7856                           
  7857                           ; 1 bytes @ 0x46
  7858     00E6                     	ds	1
  7859     00E7                     vfprintf@cfmt:
  7860                           
  7861                           ; 2 bytes @ 0x47
  7862     00E7                     	ds	2
  7863     00E9                     ?_sprintf:
  7864     00E9                     sprintf@fmt:	
  7865                           ; 2 bytes @ 0x49
  7866                           
  7867                           
  7868                           ; 2 bytes @ 0x49
  7869     00E9                     	ds	6
  7870     00EF                     ??_sprintf:
  7871                           
  7872                           ; 1 bytes @ 0x4F
  7873     00EF                     	ds	1
  7874                           
  7875                           	psect	cstackCOMMON
  7876     0070                     __pcstackCOMMON:
  7877     0070                     ?___fleq:
  7878     0070                     ?_I2C1_Initialize:	
  7879                           ; 1 bit 
  7880                           
  7881     0070                     ?_I2C1_EVENT_IDLE:	
  7882                           ; 1 bytes @ 0x0
  7883                           
  7884     0070                     ??_I2C1_EVENT_IDLE:	
  7885                           ; 1 bytes @ 0x0
  7886                           
  7887     0070                     ?_I2C1_EVENT_SEND_RD_ADDR:	
  7888                           ; 1 bytes @ 0x0
  7889                           
  7890     0070                     ??_I2C1_EVENT_SEND_RD_ADDR:	
  7891                           ; 1 bytes @ 0x0
  7892                           
  7893     0070                     ?_I2C1_EVENT_SEND_WR_ADDR:	
  7894                           ; 1 bytes @ 0x0
  7895                           
  7896     0070                     ?_I2C1_EVENT_TX:	
  7897                           ; 1 bytes @ 0x0
  7898                           
  7899     0070                     ?_I2C1_EVENT_RX:	
  7900                           ; 1 bytes @ 0x0
  7901                           
  7902     0070                     ??_I2C1_EVENT_RX:	
  7903                           ; 1 bytes @ 0x0
  7904                           
  7905     0070                     ?_I2C1_EVENT_NACK:	
  7906                           ; 1 bytes @ 0x0
  7907                           
  7908     0070                     ??_I2C1_EVENT_NACK:	
  7909                           ; 1 bytes @ 0x0
  7910                           
  7911     0070                     ?_I2C1_EVENT_ERROR:	
  7912                           ; 1 bytes @ 0x0
  7913                           
  7914     0070                     ??_I2C1_EVENT_ERROR:	
  7915                           ; 1 bytes @ 0x0
  7916                           
  7917     0070                     ?_I2C1_EVENT_STOP:	
  7918                           ; 1 bytes @ 0x0
  7919                           
  7920     0070                     ??_I2C1_EVENT_STOP:	
  7921                           ; 1 bytes @ 0x0
  7922                           
  7923     0070                     ?_I2C1_EVENT_RESET:	
  7924                           ; 1 bytes @ 0x0
  7925                           
  7926     0070                     ??_I2C1_EVENT_RESET:	
  7927                           ; 1 bytes @ 0x0
  7928                           
  7929     0070                     ?_I2C1_DefaultCallback:	
  7930                           ; 1 bytes @ 0x0
  7931                           
  7932     0070                     ??_I2C1_DefaultCallback:	
  7933                           ; 1 bytes @ 0x0
  7934                           
  7935     0070                     ?_I2C1_EventHandler:	
  7936                           ; 1 bytes @ 0x0
  7937                           
  7938     0070                     ?_I2C1_ErrorEventHandler:	
  7939                           ; 1 bytes @ 0x0
  7940                           
  7941     0070                     ?_I2C1_InterruptClear:	
  7942                           ; 1 bytes @ 0x0
  7943                           
  7944     0070                     ??_I2C1_InterruptClear:	
  7945                           ; 1 bytes @ 0x0
  7946                           
  7947     0070                     ?_I2C1_ErrorInterruptClear:	
  7948                           ; 1 bytes @ 0x0
  7949                           
  7950     0070                     ??_I2C1_ErrorInterruptClear:	
  7951                           ; 1 bytes @ 0x0
  7952                           
  7953     0070                     ?_I2C1_StatusFlagsClear:	
  7954                           ; 1 bytes @ 0x0
  7955                           
  7956     0070                     ??_I2C1_StatusFlagsClear:	
  7957                           ; 1 bytes @ 0x0
  7958                           
  7959     0070                     ?_I2C1_IsAddr:	
  7960                           ; 1 bytes @ 0x0
  7961                           
  7962     0070                     ??_I2C1_IsAddr:	
  7963                           ; 1 bytes @ 0x0
  7964                           
  7965     0070                     ?_I2C1_IsNack:	
  7966                           ; 1 bytes @ 0x0
  7967                           
  7968     0070                     ??_I2C1_IsNack:	
  7969                           ; 1 bytes @ 0x0
  7970                           
  7971     0070                     ?_I2C1_IsData:	
  7972                           ; 1 bytes @ 0x0
  7973                           
  7974     0070                     ??_I2C1_IsData:	
  7975                           ; 1 bytes @ 0x0
  7976                           
  7977     0070                     ?_I2C1_DataTransmit:	
  7978                           ; 1 bytes @ 0x0
  7979                           
  7980     0070                     ??_I2C1_DataTransmit:	
  7981                           ; 1 bytes @ 0x0
  7982                           
  7983     0070                     ?_I2C1_RestartEnable:	
  7984                           ; 1 bytes @ 0x0
  7985                           
  7986     0070                     ??_I2C1_RestartEnable:	
  7987                           ; 1 bytes @ 0x0
  7988                           
  7989     0070                     ?_I2C1_IsRxBufFull:	
  7990                           ; 1 bytes @ 0x0
  7991                           
  7992     0070                     ??_I2C1_IsRxBufFull:	
  7993                           ; 1 bytes @ 0x0
  7994                           
  7995     0070                     ?_I2C1_DataReceive:	
  7996                           ; 1 bytes @ 0x0
  7997                           
  7998     0070                     ??_I2C1_DataReceive:	
  7999                           ; 1 bytes @ 0x0
  8000                           
  8001     0070                     ?_I2C1_AckSend:	
  8002                           ; 1 bytes @ 0x0
  8003                           
  8004     0070                     ??_I2C1_AckSend:	
  8005                           ; 1 bytes @ 0x0
  8006                           
  8007     0070                     ?_I2C1_RestartDisable:	
  8008                           ; 1 bytes @ 0x0
  8009                           
  8010     0070                     ??_I2C1_RestartDisable:	
  8011                           ; 1 bytes @ 0x0
  8012                           
  8013     0070                     ?_I2C1_NackSend:	
  8014                           ; 1 bytes @ 0x0
  8015                           
  8016     0070                     ??_I2C1_NackSend:	
  8017                           ; 1 bytes @ 0x0
  8018                           
  8019     0070                     ?_I2C1_ReceiveEnable:	
  8020                           ; 1 bytes @ 0x0
  8021                           
  8022     0070                     ??_I2C1_ReceiveEnable:	
  8023                           ; 1 bytes @ 0x0
  8024                           
  8025     0070                     ?_I2C1_StopSend:	
  8026                           ; 1 bytes @ 0x0
  8027                           
  8028     0070                     ??_I2C1_StopSend:	
  8029                           ; 1 bytes @ 0x0
  8030                           
  8031     0070                     ?_I2C1_BusReset:	
  8032                           ; 1 bytes @ 0x0
  8033                           
  8034     0070                     ??_I2C1_BusReset:	
  8035                           ; 1 bytes @ 0x0
  8036                           
  8037     0070                     ?_CLOCK_Initialize:	
  8038                           ; 1 bytes @ 0x0
  8039                           
  8040     0070                     ?_PIN_MANAGER_Initialize:	
  8041                           ; 1 bytes @ 0x0
  8042                           
  8043     0070                     ?_EUSART_Initialize:	
  8044                           ; 1 bytes @ 0x0
  8045                           
  8046     0070                     ?_Timer0_Initialize:	
  8047                           ; 1 bytes @ 0x0
  8048                           
  8049     0070                     ?_TMR1_Initialize:	
  8050                           ; 1 bytes @ 0x0
  8051                           
  8052     0070                     ?_TMR2_Initialize:	
  8053                           ; 1 bytes @ 0x0
  8054                           
  8055     0070                     ?_TMR4_Initialize:	
  8056                           ; 1 bytes @ 0x0
  8057                           
  8058     0070                     ?_INTERRUPT_Initialize:	
  8059                           ; 1 bytes @ 0x0
  8060                           
  8061     0070                     ?_Timer0_OverflowISR:	
  8062                           ; 1 bytes @ 0x0
  8063                           
  8064     0070                     ?_TMR2_DefaultOverflowCallback:	
  8065                           ; 1 bytes @ 0x0
  8066                           
  8067     0070                     ??_TMR2_DefaultOverflowCallback:	
  8068                           ; 1 bytes @ 0x0
  8069                           
  8070     0070                     ?_Timer0_DefaultOverflowCallback:	
  8071                           ; 1 bytes @ 0x0
  8072                           
  8073     0070                     ?_TMR0_Custom_ISR:	
  8074                           ; 1 bytes @ 0x0
  8075                           
  8076     0070                     ?_TMR1_Start:	
  8077                           ; 1 bytes @ 0x0
  8078                           
  8079     0070                     ??_TMR1_Start:	
  8080                           ; 1 bytes @ 0x0
  8081                           
  8082     0070                     ?_TMR1_Stop:	
  8083                           ; 1 bytes @ 0x0
  8084                           
  8085     0070                     ??_TMR1_Stop:	
  8086                           ; 1 bytes @ 0x0
  8087                           
  8088     0070                     ?_TMR1_DefaultOverflowCallback:	
  8089                           ; 1 bytes @ 0x0
  8090                           
  8091     0070                     ??_TMR1_DefaultOverflowCallback:	
  8092                           ; 1 bytes @ 0x0
  8093                           
  8094     0070                     ?_TMR4_DefaultOverflowCallback:	
  8095                           ; 1 bytes @ 0x0
  8096                           
  8097     0070                     ??_TMR4_DefaultOverflowCallback:	
  8098                           ; 1 bytes @ 0x0
  8099                           
  8100     0070                     ?_EUSART_ReceiveISR:	
  8101                           ; 1 bytes @ 0x0
  8102                           
  8103     0070                     ?_EUSART_DefaultFramingErrorCallback:	
  8104                           ; 1 bytes @ 0x0
  8105                           
  8106     0070                     ??_EUSART_DefaultFramingErrorCallback:	
  8107                           ; 1 bytes @ 0x0
  8108                           
  8109     0070                     ?_EUSART_DefaultOverrunErrorCallback:	
  8110                           ; 1 bytes @ 0x0
  8111                           
  8112     0070                     ??_EUSART_DefaultOverrunErrorCallback:	
  8113                           ; 1 bytes @ 0x0
  8114                           
  8115     0070                     ?_UART_Custom_ISR:	
  8116                           ; 1 bytes @ 0x0
  8117                           
  8118     0070                     ?_IO_Expander_Write:	
  8119                           ; 1 bytes @ 0x0
  8120                           
  8121     0070                     ?_LCD_CMD:	
  8122                           ; 1 bytes @ 0x0
  8123                           
  8124     0070                     ?_shift_out_to_motors:	
  8125                           ; 1 bytes @ 0x0
  8126                           
  8127     0070                     ?_strcpy:	
  8128                           ; 1 bytes @ 0x0
  8129                           
  8130     0070                     ?_memcpy:	
  8131                           ; 1 bytes @ 0x0
  8132                           
  8133     0070                     ?_putch:	
  8134                           ; 1 bytes @ 0x0
  8135                           
  8136     0070                     ??_putch:	
  8137                           ; 1 bytes @ 0x0
  8138                           
  8139     0070                     ?_ADC_Initialize:	
  8140                           ; 1 bytes @ 0x0
  8141                           
  8142     0070                     ?_I2C1_ISR:	
  8143                           ; 1 bytes @ 0x0
  8144                           
  8145     0070                     ?_I2C1_ERROR_ISR:	
  8146                           ; 1 bytes @ 0x0
  8147                           
  8148     0070                     ?_I2C1_Close:	
  8149                           ; 1 bytes @ 0x0
  8150                           
  8151     0070                     ??_I2C1_Close:	
  8152                           ; 1 bytes @ 0x0
  8153                           
  8154     0070                     ?_CCP1_Initialize:	
  8155                           ; 1 bytes @ 0x0
  8156                           
  8157     0070                     ?_CCP2_Initialize:	
  8158                           ; 1 bytes @ 0x0
  8159                           
  8160     0070                     ?_SYSTEM_Initialize:	
  8161                           ; 1 bytes @ 0x0
  8162                           
  8163     0070                     ?_INTERRUPT_InterruptManager:	
  8164                           ; 1 bytes @ 0x0
  8165                           
  8166     0070                     ?_I2C_Master_Wait:	
  8167                           ; 1 bytes @ 0x0
  8168                           
  8169     0070                     ??_I2C_Master_Wait:	
  8170                           ; 1 bytes @ 0x0
  8171                           
  8172     0070                     ?_I2C_Master_Start:	
  8173                           ; 1 bytes @ 0x0
  8174                           
  8175     0070                     ??_I2C_Master_Start:	
  8176                           ; 1 bytes @ 0x0
  8177                           
  8178     0070                     ?_I2C_Master_Stop:	
  8179                           ; 1 bytes @ 0x0
  8180                           
  8181     0070                     ??_I2C_Master_Stop:	
  8182                           ; 1 bytes @ 0x0
  8183                           
  8184     0070                     ?_I2C_Master_Write:	
  8185                           ; 1 bytes @ 0x0
  8186                           
  8187     0070                     ??_I2C_Master_Write:	
  8188                           ; 1 bytes @ 0x0
  8189                           
  8190     0070                     ?_LCD_Write_4Bit:	
  8191                           ; 1 bytes @ 0x0
  8192                           
  8193     0070                     ?_LCD_Write_Char:	
  8194                           ; 1 bytes @ 0x0
  8195                           
  8196     0070                     ?_Backlight:	
  8197                           ; 1 bytes @ 0x0
  8198                           
  8199     0070                     ?_LCD_Clear:	
  8200                           ; 1 bytes @ 0x0
  8201                           
  8202     0070                     ?__Umul8_16:	
  8203                           ; 1 bytes @ 0x0
  8204                           
  8205     0070                     ?_fputc:	
  8206                           ; 2 bytes @ 0x0
  8207                           
  8208     0070                     ?___fpclassifyf:	
  8209                           ; 2 bytes @ 0x0
  8210                           
  8211     0070                     ?_ADC_GetConversion:	
  8212                           ; 2 bytes @ 0x0
  8213                           
  8214     0070                     ?_main:	
  8215                           ; 2 bytes @ 0x0
  8216                           
  8217     0070                     ?___wmul:	
  8218                           ; 2 bytes @ 0x0
  8219                           
  8220     0070                     ?_labs:	
  8221                           ; 2 bytes @ 0x0
  8222                           
  8223     0070                     ?___flneg:	
  8224                           ; 4 bytes @ 0x0
  8225                           
  8226     0070                     ?___fltol:	
  8227                           ; 4 bytes @ 0x0
  8228                           
  8229     0070                     ?___fladd:	
  8230                           ; 4 bytes @ 0x0
  8231                           
  8232     0070                     I2C1_EVENT_NACK@retEventState:	
  8233                           ; 4 bytes @ 0x0
  8234                           
  8235     0070                     I2C1_EVENT_ERROR@retEventState:	
  8236                           ; 1 bytes @ 0x0
  8237                           
  8238     0070                     I2C1_DataTransmit@data:	
  8239                           ; 1 bytes @ 0x0
  8240                           
  8241     0070                     I2C_Master_Write@data:	
  8242                           ; 1 bytes @ 0x0
  8243                           
  8244     0070                     __Umul8_16@multiplicand:	
  8245                           ; 1 bytes @ 0x0
  8246                           
  8247     0070                     memcpy@s1:	
  8248                           ; 1 bytes @ 0x0
  8249                           
  8250     0070                     putch@c:	
  8251                           ; 1 bytes @ 0x0
  8252                           
  8253     0070                     ___wmul@multiplier:	
  8254                           ; 1 bytes @ 0x0
  8255                           
  8256     0070                     fputc@c:	
  8257                           ; 2 bytes @ 0x0
  8258                           
  8259     0070                     strcpy@src:	
  8260                           ; 2 bytes @ 0x0
  8261                           
  8262     0070                     ___fleq@ff1:	
  8263                           ; 2 bytes @ 0x0
  8264                           
  8265     0070                     ___flneg@f1:	
  8266                           ; 4 bytes @ 0x0
  8267                           
  8268     0070                     ___fltol@f1:	
  8269                           ; 4 bytes @ 0x0
  8270                           
  8271     0070                     ___fladd@b:	
  8272                           ; 4 bytes @ 0x0
  8273                           
  8274     0070                     ___fpclassifyf@x:	
  8275                           ; 4 bytes @ 0x0
  8276                           
  8277     0070                     labs@a:	
  8278                           ; 4 bytes @ 0x0
  8279                           
  8280                           
  8281                           ; 4 bytes @ 0x0
  8282     0070                     	ds	1
  8283     0071                     ??_I2C1_EVENT_SEND_WR_ADDR:
  8284     0071                     ??_I2C1_EVENT_TX:	
  8285                           ; 1 bytes @ 0x1
  8286                           
  8287     0071                     ??_IO_Expander_Write:	
  8288                           ; 1 bytes @ 0x1
  8289                           
  8290     0071                     I2C1_EVENT_RX@retEventState:	
  8291                           ; 1 bytes @ 0x1
  8292                           
  8293     0071                     IO_Expander_Write@Data:	
  8294                           ; 1 bytes @ 0x1
  8295                           
  8296     0071                     memcpy@n:	
  8297                           ; 1 bytes @ 0x1
  8298                           
  8299                           
  8300                           ; 2 bytes @ 0x1
  8301     0071                     	ds	1
  8302     0072                     ??__Umul8_16:
  8303     0072                     ??_strcpy:	
  8304                           ; 1 bytes @ 0x2
  8305                           
  8306     0072                     ??_ADC_GetConversion:	
  8307                           ; 1 bytes @ 0x2
  8308                           
  8309     0072                     ??_LCD_Write_4Bit:	
  8310                           ; 1 bytes @ 0x2
  8311                           
  8312     0072                     ??_Backlight:	
  8313                           ; 1 bytes @ 0x2
  8314                           
  8315     0072                     fputc@fp:	
  8316                           ; 1 bytes @ 0x2
  8317                           
  8318     0072                     ___wmul@multiplicand:	
  8319                           ; 1 bytes @ 0x2
  8320                           
  8321                           
  8322                           ; 2 bytes @ 0x2
  8323     0072                     	ds	1
  8324     0073                     ??_fputc:
  8325     0073                     ??_memcpy:	
  8326                           ; 1 bytes @ 0x3
  8327                           
  8328     0073                     ADC_GetConversion@channel:	
  8329                           ; 1 bytes @ 0x3
  8330                           
  8331     0073                     I2C1_EVENT_TX@retEventState:	
  8332                           ; 1 bytes @ 0x3
  8333                           
  8334     0073                     LCD_Write_4Bit@Nibble:	
  8335                           ; 1 bytes @ 0x3
  8336                           
  8337                           
  8338                           ; 1 bytes @ 0x3
  8339     0073                     	ds	1
  8340     0074                     ??_I2C1_EventHandler:
  8341     0074                     ??_I2C1_ErrorEventHandler:	
  8342                           ; 1 bytes @ 0x4
  8343                           
  8344     0074                     ??_LCD_CMD:	
  8345                           ; 1 bytes @ 0x4
  8346                           
  8347     0074                     ??___fpclassifyf:	
  8348                           ; 1 bytes @ 0x4
  8349                           
  8350     0074                     ??_labs:	
  8351                           ; 1 bytes @ 0x4
  8352                           
  8353     0074                     ??_LCD_Write_Char:	
  8354                           ; 1 bytes @ 0x4
  8355                           
  8356     0074                     ??___wmul:	
  8357                           ; 1 bytes @ 0x4
  8358                           
  8359     0074                     ??___flneg:	
  8360                           ; 1 bytes @ 0x4
  8361                           
  8362     0074                     ??___fltol:	
  8363                           ; 1 bytes @ 0x4
  8364                           
  8365     0074                     ?___xxtofl:	
  8366                           ; 1 bytes @ 0x4
  8367                           
  8368     0074                     memcpy@tmp:	
  8369                           ; 4 bytes @ 0x4
  8370                           
  8371     0074                     strcpy@d:	
  8372                           ; 1 bytes @ 0x4
  8373                           
  8374     0074                     ___wmul@product:	
  8375                           ; 1 bytes @ 0x4
  8376                           
  8377     0074                     __Umul8_16@product:	
  8378                           ; 2 bytes @ 0x4
  8379                           
  8380     0074                     ___fleq@ff2:	
  8381                           ; 2 bytes @ 0x4
  8382                           
  8383     0074                     ___fladd@a:	
  8384                           ; 4 bytes @ 0x4
  8385                           
  8386     0074                     ___xxtofl@val:	
  8387                           ; 4 bytes @ 0x4
  8388                           
  8389                           
  8390                           ; 4 bytes @ 0x4
  8391     0074                     	ds	1
  8392     0075                     LCD_CMD@CMD:
  8393     0075                     LCD_Write_Char@Data:	
  8394                           ; 1 bytes @ 0x5
  8395                           
  8396     0075                     memcpy@d1:	
  8397                           ; 1 bytes @ 0x5
  8398                           
  8399     0075                     strcpy@dest:	
  8400                           ; 1 bytes @ 0x5
  8401                           
  8402                           
  8403                           ; 1 bytes @ 0x5
  8404     0075                     	ds	1
  8405     0076                     ??_I2C1_ISR:
  8406     0076                     ??_I2C1_ERROR_ISR:	
  8407                           ; 1 bytes @ 0x6
  8408                           
  8409     0076                     ?_LCD_Write_String:	
  8410                           ; 1 bytes @ 0x6
  8411                           
  8412     0076                     ?_LCD_Set_Cursor:	
  8413                           ; 1 bytes @ 0x6
  8414                           
  8415     0076                     ??_LCD_Clear:	
  8416                           ; 1 bytes @ 0x6
  8417                           
  8418     0076                     ?_read_prec_or_width:	
  8419                           ; 1 bytes @ 0x6
  8420                           
  8421     0076                     LCD_Set_Cursor@COL:	
  8422                           ; 2 bytes @ 0x6
  8423                           
  8424     0076                     read_prec_or_width@ap:	
  8425                           ; 1 bytes @ 0x6
  8426                           
  8427     0076                     memcpy@d:	
  8428                           ; 1 bytes @ 0x6
  8429                           
  8430     0076                     LCD_Write_String@Str:	
  8431                           ; 1 bytes @ 0x6
  8432                           
  8433     0076                     __Umul8_16@word_mpld:	
  8434                           ; 2 bytes @ 0x6
  8435                           
  8436                           
  8437                           ; 2 bytes @ 0x6
  8438     0076                     	ds	1
  8439     0077                     ??_LCD_Set_Cursor:
  8440     0077                     LCD_Set_Cursor@ROW:	
  8441                           ; 1 bytes @ 0x7
  8442                           
  8443     0077                     memcpy@s:	
  8444                           ; 1 bytes @ 0x7
  8445                           
  8446                           
  8447                           ; 1 bytes @ 0x7
  8448     0077                     	ds	1
  8449     0078                     ??_LCD_Write_String:
  8450     0078                     ??___fleq:	
  8451                           ; 1 bytes @ 0x8
  8452                           
  8453     0078                     ??___xxtofl:	
  8454                           ; 1 bytes @ 0x8
  8455                           
  8456     0078                     ??_read_prec_or_width:	
  8457                           ; 1 bytes @ 0x8
  8458                           
  8459     0078                     ?_fputs:	
  8460                           ; 1 bytes @ 0x8
  8461                           
  8462     0078                     ___fltol@sign1:	
  8463                           ; 2 bytes @ 0x8
  8464                           
  8465     0078                     ___fladd@signs:	
  8466                           ; 1 bytes @ 0x8
  8467                           
  8468     0078                     __Umul8_16@multiplier:	
  8469                           ; 1 bytes @ 0x8
  8470                           
  8471     0078                     fputs@fp:	
  8472                           ; 1 bytes @ 0x8
  8473                           
  8474                           
  8475                           ; 1 bytes @ 0x8
  8476     0078                     	ds	1
  8477     0079                     ??_fputs:
  8478     0079                     ___fltol@exp1:	
  8479                           ; 1 bytes @ 0x9
  8480                           
  8481     0079                     ___fladd@aexp:	
  8482                           ; 1 bytes @ 0x9
  8483                           
  8484     0079                     LCD_Write_String@i:	
  8485                           ; 1 bytes @ 0x9
  8486                           
  8487                           
  8488                           ; 2 bytes @ 0x9
  8489     0079                     	ds	1
  8490     007A                     ___fladd@bexp:
  8491                           
  8492                           ; 1 bytes @ 0xA
  8493     007A                     	ds	1
  8494     007B                     ?_pad:
  8495     007B                     ___fladd@grs:	
  8496                           ; 1 bytes @ 0xB
  8497                           
  8498     007B                     pad@buf:	
  8499                           ; 1 bytes @ 0xB
  8500                           
  8501                           
  8502                           ; 1 bytes @ 0xB
  8503     007B                     	ds	1
  8504     007C                     ??___flsub:
  8505     007C                     pad@p:	
  8506                           ; 1 bytes @ 0xC
  8507                           
  8508                           
  8509                           ; 2 bytes @ 0xC
  8510     007C                     	ds	2
  8511     007E                     ??_Timer0_OverflowISR:
  8512     007E                     ??_Timer0_DefaultOverflowCallback:	
  8513                           ; 1 bytes @ 0xE
  8514                           
  8515     007E                     ??_INTERRUPT_InterruptManager:	
  8516                           ; 1 bytes @ 0xE
  8517                           
  8518                           
  8519                           	psect	cstackBANK0
  8520     0020                     __pcstackBANK0:	
  8521                           ; 1 bytes @ 0xE
  8522                           
  8523     0020                     ??___fladd:
  8524     0020                     ___xxtofl@sign:	
  8525                           ; 1 bytes @ 0x0
  8526                           
  8527     0020                     read_prec_or_width@c:	
  8528                           ; 1 bytes @ 0x0
  8529                           
  8530     0020                     fputs@c:	
  8531                           ; 1 bytes @ 0x0
  8532                           
  8533     0020                     ___fpclassifyf@e:	
  8534                           ; 1 bytes @ 0x0
  8535                           
  8536                           
  8537                           ; 2 bytes @ 0x0
  8538     0020                     	ds	1
  8539     0021                     ___xxtofl@exp:
  8540     0021                     read_prec_or_width@n:	
  8541                           ; 1 bytes @ 0x1
  8542                           
  8543     0021                     fputs@i:	
  8544                           ; 2 bytes @ 0x1
  8545                           
  8546                           
  8547                           ; 2 bytes @ 0x1
  8548     0021                     	ds	1
  8549     0022                     ___xxtofl@arg:
  8550     0022                     ___fpclassifyf@u:	
  8551                           ; 4 bytes @ 0x2
  8552                           
  8553                           
  8554                           ; 4 bytes @ 0x2
  8555     0022                     	ds	1
  8556     0023                     read_prec_or_width@fmt:
  8557     0023                     fputs@s:	
  8558                           ; 1 bytes @ 0x3
  8559                           
  8560                           
  8561                           ; 1 bytes @ 0x3
  8562     0023                     	ds	1
  8563     0024                     ??_pad:
  8564                           
  8565                           ; 1 bytes @ 0x4
  8566     0024                     	ds	1
  8567     0025                     pad@i:
  8568                           
  8569                           ; 2 bytes @ 0x5
  8570     0025                     	ds	1
  8571     0026                     ?___flmul:
  8572     0026                     ___flmul@b:	
  8573                           ; 4 bytes @ 0x6
  8574                           
  8575                           
  8576                           ; 4 bytes @ 0x6
  8577     0026                     	ds	1
  8578     0027                     pad@fp:
  8579                           
  8580                           ; 1 bytes @ 0x7
  8581     0027                     	ds	1
  8582     0028                     ?_xtoa:
  8583     0028                     xtoa@d:	
  8584                           ; 1 bytes @ 0x8
  8585                           
  8586                           
  8587                           ; 2 bytes @ 0x8
  8588     0028                     	ds	2
  8589     002A                     ??_xtoa:
  8590     002A                     ___flmul@a:	
  8591                           ; 1 bytes @ 0xA
  8592                           
  8593                           
  8594                           ; 4 bytes @ 0xA
  8595     002A                     	ds	1
  8596     002B                     xtoa@w:
  8597                           
  8598                           ; 2 bytes @ 0xB
  8599     002B                     	ds	2
  8600     002D                     xtoa@fp:
  8601                           
  8602                           ; 1 bytes @ 0xD
  8603     002D                     	ds	1
  8604     002E                     ??___flmul:
  8605     002E                     xtoa@p:	
  8606                           ; 1 bytes @ 0xE
  8607                           
  8608                           
  8609                           ; 2 bytes @ 0xE
  8610     002E                     	ds	2
  8611     0030                     xtoa@c:
  8612                           
  8613                           ; 1 bytes @ 0x10
  8614     0030                     	ds	1
  8615     0031                     xtoa@i:
  8616                           
  8617                           ; 2 bytes @ 0x11
  8618     0031                     	ds	2
  8619     0033                     ___flmul@sign:
  8620                           
  8621                           ; 1 bytes @ 0x13
  8622     0033                     	ds	1
  8623     0034                     ___flmul@grs:
  8624                           
  8625                           ; 4 bytes @ 0x14
  8626     0034                     	ds	4
  8627     0038                     ___flmul@aexp:
  8628                           
  8629                           ; 1 bytes @ 0x18
  8630     0038                     	ds	1
  8631     0039                     ___flmul@bexp:
  8632                           
  8633                           ; 1 bytes @ 0x19
  8634     0039                     	ds	1
  8635     003A                     ___flmul@prod:
  8636                           
  8637                           ; 4 bytes @ 0x1A
  8638     003A                     	ds	4
  8639     003E                     ___flmul@temp:
  8640                           
  8641                           ; 2 bytes @ 0x1E
  8642     003E                     	ds	2
  8643     0040                     ?___flge:
  8644     0040                     ?___flsub:	
  8645                           ; 1 bit 
  8646                           
  8647     0040                     ?___fldiv:	
  8648                           ; 4 bytes @ 0x20
  8649                           
  8650     0040                     ___flge@ff1:	
  8651                           ; 4 bytes @ 0x20
  8652                           
  8653     0040                     ___flsub@a:	
  8654                           ; 4 bytes @ 0x20
  8655                           
  8656     0040                     ___fldiv@a:	
  8657                           ; 4 bytes @ 0x20
  8658                           
  8659                           
  8660                           ; 4 bytes @ 0x20
  8661     0040                     	ds	4
  8662     0044                     ___flge@ff2:
  8663     0044                     ___flsub@b:	
  8664                           ; 4 bytes @ 0x24
  8665                           
  8666     0044                     ___fldiv@b:	
  8667                           ; 4 bytes @ 0x24
  8668                           
  8669                           
  8670                           ; 4 bytes @ 0x24
  8671     0044                     	ds	4
  8672     0048                     ??___flge:
  8673     0048                     ??___fldiv:	
  8674                           ; 1 bytes @ 0x28
  8675                           
  8676                           
  8677                           ; 1 bytes @ 0x28
  8678     0048                     	ds	5
  8679     004D                     ___fldiv@rem:
  8680                           
  8681                           ; 4 bytes @ 0x2D
  8682     004D                     	ds	4
  8683     0051                     ___fldiv@sign:
  8684                           
  8685                           ; 1 bytes @ 0x31
  8686     0051                     	ds	1
  8687     0052                     ___fldiv@new_exp:
  8688                           
  8689                           ; 2 bytes @ 0x32
  8690     0052                     	ds	2
  8691     0054                     ___fldiv@grs:
  8692                           
  8693                           ; 4 bytes @ 0x34
  8694     0054                     	ds	4
  8695     0058                     ___fldiv@bexp:
  8696                           
  8697                           ; 1 bytes @ 0x38
  8698     0058                     	ds	1
  8699     0059                     ___fldiv@aexp:
  8700                           
  8701                           ; 1 bytes @ 0x39
  8702     0059                     	ds	1
  8703     005A                     ?_floorf:
  8704     005A                     floorf@x:	
  8705                           ; 4 bytes @ 0x3A
  8706                           
  8707                           
  8708                           ; 4 bytes @ 0x3A
  8709     005A                     	ds	4
  8710     005E                     ??_floorf:
  8711                           
  8712                           ; 1 bytes @ 0x3E
  8713     005E                     	ds	6
  8714     0064                     floorf@m:
  8715                           
  8716                           ; 4 bytes @ 0x44
  8717     0064                     	ds	4
  8718     0068                     floorf@e:
  8719                           
  8720                           ; 2 bytes @ 0x48
  8721     0068                     	ds	2
  8722     006A                     floorf@u:
  8723                           
  8724                           ; 4 bytes @ 0x4A
  8725     006A                     	ds	4
  8726     006E                     ?_vfpfcnvrt:
  8727     006E                     vfpfcnvrt@fmt:	
  8728                           ; 1 bytes @ 0x4E
  8729                           
  8730                           
  8731                           ; 1 bytes @ 0x4E
  8732     006E                     	ds	1
  8733     006F                     vfpfcnvrt@ap:
  8734                           
  8735                           ; 1 bytes @ 0x4F
  8736     006F                     	ds	1
  8737                           
  8738                           	psect	maintext
  8739     15C2                     __pmaintext:	
  8740 ;;
  8741 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8742 ;;
  8743 ;; *************** function _main *****************
  8744 ;; Defined at:
  8745 ;;		line 98 in file "main.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;		None
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;		None
  8750 ;; Return value:  Size  Location     Type
  8751 ;;                  2  1139[None  ] int 
  8752 ;; Registers used:
  8753 ;;		wreg, status,2, status,0, pclath, cstack
  8754 ;; Tracked objects:
  8755 ;;		On entry : B1F/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  8762 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  8763 ;;Total ram usage:        2 bytes
  8764 ;; Hardware stack levels required when called: 15
  8765 ;; This function calls:
  8766 ;;		_CCP2_LoadDutyValue
  8767 ;;		_SYSTEM_Initialize
  8768 ;;		_shift_out_to_motors
  8769 ;; This function is called by:
  8770 ;;		Startup code after reset
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774     15C2                     _main:	
  8775                           ;psect for function _main
  8776                           
  8777     15C2                     l6475:	
  8778                           ;incstack = 0
  8779                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  8780                           
  8781                           
  8782                           ;main.c: 100:     SYSTEM_Initialize();
  8783     15C2  319F  27B5  3195   	fcall	_SYSTEM_Initialize
  8784     15C5                     l6477:
  8785                           
  8786                           ;main.c: 103:     PIE1bits.SSP1IE = 0;
  8787     15C5  0021               	movlb	1	; select bank1
  8788     15C6  1190               	bcf	16,3	;volatile
  8789     15C7                     l6479:
  8790                           
  8791                           ;main.c: 104:     PIE2bits.BCL1IE = 0;
  8792     15C7  1191               	bcf	17,3	;volatile
  8793     15C8                     l6481:
  8794                           
  8795                           ;main.c: 111:     (INTCONbits.GIE = 1);
  8796     15C8  178B               	bsf	11,7	;volatile
  8797     15C9                     l6483:
  8798                           
  8799                           ;main.c: 117:     (INTCONbits.PEIE = 1);
  8800     15C9  170B               	bsf	11,6	;volatile
  8801     15CA                     l6485:
  8802                           
  8803                           ;main.c: 133:     INTCONbits.TMR0IE = 0;
  8804     15CA  128B               	bcf	11,5	;volatile
  8805     15CB                     l6487:
  8806     15CB  0022               	movlb	2	; select bank2
  8807     15CC  120D               	bcf	13,4	;volatile
  8808     15CD                     l6489:
  8809     15CD  128D               	bcf	13,5	;volatile
  8810     15CE                     l6491:
  8811     15CE  130D               	bcf	13,6	;volatile
  8812     15CF                     l1145:
  8813                           
  8814                           ;main.c: 137:     CCP2_LoadDutyValue(500);
  8815     15CF  30F4               	movlw	244
  8816     15D0  0023               	movlb	3	; select bank3
  8817     15D1  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  8818     15D2  3001               	movlw	1
  8819     15D3  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  8820     15D4  319E  2645  3195   	fcall	_CCP2_LoadDutyValue
  8821     15D7                     l1147:	
  8822                           ;main.c: 140:     {;main.c: 150:         do { shift_out_to_motors(0b00010000 | 0b0000001
      +                          0 | 0b10000000 | 0b00000100); CCP2_LoadDutyValue(700);} while(0);
  8823                           
  8824     15D7  3096               	movlw	150
  8825     15D8  3191  2159  3195   	fcall	_shift_out_to_motors
  8826     15DB  30BC               	movlw	188
  8827     15DC  0023               	movlb	3	; select bank3
  8828     15DD  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  8829     15DE  3002               	movlw	2
  8830     15DF  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  8831     15E0  319E  2645  3195   	fcall	_CCP2_LoadDutyValue
  8832     15E3                     l6493:
  8833                           
  8834                           ;main.c: 151:         _delay((unsigned long)((700)*(4000000/4000.0)));
  8835     15E3  3004               	movlw	4
  8836     15E4  0023               	movlb	3	; select bank3
  8837     15E5  00C4               	movwf	(??_main^(0+384)+1)
  8838     15E6  308E               	movlw	142
  8839     15E7  00C3               	movwf	??_main^(0+384)
  8840     15E8  3012               	movlw	18
  8841     15E9                     u5557:
  8842     15E9  0B89               	decfsz	9,f
  8843     15EA  2DE9               	goto	u5557
  8844     15EB  0BC3               	decfsz	??_main^(0+384),f
  8845     15EC  2DE9               	goto	u5557
  8846     15ED  0BC4               	decfsz	(??_main^(0+384)+1),f
  8847     15EE  2DE9               	goto	u5557
  8848     15EF  0000               	nop
  8849     15F0                     l6495:
  8850     15F0  3069               	movlw	105
  8851     15F1  3191  2159  3195   	fcall	_shift_out_to_motors
  8852     15F4                     l6497:
  8853     15F4  30BC               	movlw	188
  8854     15F5  0023               	movlb	3	; select bank3
  8855     15F6  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  8856     15F7  3002               	movlw	2
  8857     15F8  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  8858     15F9  319E  2645  3195   	fcall	_CCP2_LoadDutyValue
  8859     15FC                     l6499:
  8860                           
  8861                           ;main.c: 153:         _delay((unsigned long)((700)*(4000000/4000.0)));
  8862     15FC  3004               	movlw	4
  8863     15FD  0023               	movlb	3	; select bank3
  8864     15FE  00C4               	movwf	(??_main^(0+384)+1)
  8865     15FF  308E               	movlw	142
  8866     1600  00C3               	movwf	??_main^(0+384)
  8867     1601  3012               	movlw	18
  8868     1602                     u5567:
  8869     1602  0B89               	decfsz	9,f
  8870     1603  2E02               	goto	u5567
  8871     1604  0BC3               	decfsz	??_main^(0+384),f
  8872     1605  2E02               	goto	u5567
  8873     1606  0BC4               	decfsz	(??_main^(0+384)+1),f
  8874     1607  2E02               	goto	u5567
  8875     1608  0000               	nop
  8876     1609                     l1151:	
  8877                           ;main.c: 154:         do { shift_out_to_motors(0b00010000 | 0b00000001 | 0b10000000 | 0b
      +                          00001000); CCP2_LoadDutyValue(700);} while(0);
  8878                           
  8879     1609  3099               	movlw	153
  8880     160A  3191  2159  3195   	fcall	_shift_out_to_motors
  8881     160D  30BC               	movlw	188
  8882     160E  0023               	movlb	3	; select bank3
  8883     160F  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  8884     1610  3002               	movlw	2
  8885     1611  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  8886     1612  319E  2645  3195   	fcall	_CCP2_LoadDutyValue
  8887     1615                     l6501:
  8888                           
  8889                           ;main.c: 155:         _delay((unsigned long)((700)*(4000000/4000.0)));
  8890     1615  3004               	movlw	4
  8891     1616  0023               	movlb	3	; select bank3
  8892     1617  00C4               	movwf	(??_main^(0+384)+1)
  8893     1618  308E               	movlw	142
  8894     1619  00C3               	movwf	??_main^(0+384)
  8895     161A  3012               	movlw	18
  8896     161B                     u5577:
  8897     161B  0B89               	decfsz	9,f
  8898     161C  2E1B               	goto	u5577
  8899     161D  0BC3               	decfsz	??_main^(0+384),f
  8900     161E  2E1B               	goto	u5577
  8901     161F  0BC4               	decfsz	(??_main^(0+384)+1),f
  8902     1620  2E1B               	goto	u5577
  8903     1621  0000               	nop
  8904     1622                     l6503:
  8905     1622  3066               	movlw	102
  8906     1623  3191  2159  3195   	fcall	_shift_out_to_motors
  8907     1626                     l6505:
  8908     1626  30BC               	movlw	188
  8909     1627  0023               	movlb	3	; select bank3
  8910     1628  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  8911     1629  3002               	movlw	2
  8912     162A  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  8913     162B  319E  2645  3195   	fcall	_CCP2_LoadDutyValue
  8914     162E                     l6507:
  8915                           
  8916                           ;main.c: 157:         _delay((unsigned long)((700)*(4000000/4000.0)));
  8917     162E  3004               	movlw	4
  8918     162F  0023               	movlb	3	; select bank3
  8919     1630  00C4               	movwf	(??_main^(0+384)+1)
  8920     1631  308E               	movlw	142
  8921     1632  00C3               	movwf	??_main^(0+384)
  8922     1633  3012               	movlw	18
  8923     1634                     u5587:
  8924     1634  0B89               	decfsz	9,f
  8925     1635  2E34               	goto	u5587
  8926     1636  0BC3               	decfsz	??_main^(0+384),f
  8927     1637  2E34               	goto	u5587
  8928     1638  0BC4               	decfsz	(??_main^(0+384)+1),f
  8929     1639  2E34               	goto	u5587
  8930     163A  0000               	nop
  8931     163B                     l1155:	
  8932                           ;main.c: 158:         do { shift_out_to_motors(0b00010000 | 0b00000001 | 0b01000000 | 0b
      +                          00000100); CCP2_LoadDutyValue(700);} while(0);
  8933                           
  8934     163B  3055               	movlw	85
  8935     163C  3191  2159  3195   	fcall	_shift_out_to_motors
  8936     163F  30BC               	movlw	188
  8937     1640  0023               	movlb	3	; select bank3
  8938     1641  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  8939     1642  3002               	movlw	2
  8940     1643  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  8941     1644  319E  2645  3195   	fcall	_CCP2_LoadDutyValue
  8942     1647                     l6509:
  8943                           
  8944                           ;main.c: 159:         _delay((unsigned long)((700)*(4000000/4000.0)));
  8945     1647  3004               	movlw	4
  8946     1648  0023               	movlb	3	; select bank3
  8947     1649  00C4               	movwf	(??_main^(0+384)+1)
  8948     164A  308E               	movlw	142
  8949     164B  00C3               	movwf	??_main^(0+384)
  8950     164C  3012               	movlw	18
  8951     164D                     u5597:
  8952     164D  0B89               	decfsz	9,f
  8953     164E  2E4D               	goto	u5597
  8954     164F  0BC3               	decfsz	??_main^(0+384),f
  8955     1650  2E4D               	goto	u5597
  8956     1651  0BC4               	decfsz	(??_main^(0+384)+1),f
  8957     1652  2E4D               	goto	u5597
  8958     1653  0000               	nop
  8959     1654                     l6511:
  8960     1654  30AA               	movlw	170
  8961     1655  3191  2159  3195   	fcall	_shift_out_to_motors
  8962     1658                     l6513:
  8963     1658  30BC               	movlw	188
  8964     1659  0023               	movlb	3	; select bank3
  8965     165A  00BE               	movwf	CCP2_LoadDutyValue@dutyValue^(0+384)
  8966     165B  3002               	movlw	2
  8967     165C  00BF               	movwf	(CCP2_LoadDutyValue@dutyValue^(0+384)+1)
  8968     165D  319E  2645  3195   	fcall	_CCP2_LoadDutyValue
  8969     1660                     l6515:
  8970                           
  8971                           ;main.c: 161:         _delay((unsigned long)((700)*(4000000/4000.0)));
  8972     1660  3004               	movlw	4
  8973     1661  0023               	movlb	3	; select bank3
  8974     1662  00C4               	movwf	(??_main^(0+384)+1)
  8975     1663  308E               	movlw	142
  8976     1664  00C3               	movwf	??_main^(0+384)
  8977     1665  3012               	movlw	18
  8978     1666                     u5607:
  8979     1666  0B89               	decfsz	9,f
  8980     1667  2E66               	goto	u5607
  8981     1668  0BC3               	decfsz	??_main^(0+384),f
  8982     1669  2E66               	goto	u5607
  8983     166A  0BC4               	decfsz	(??_main^(0+384)+1),f
  8984     166B  2E66               	goto	u5607
  8985     166C  0000               	nop
  8986     166D  2DD7               	goto	l1147
  8987     166E  3180  2841         	ljmp	start
  8988     1670                     __end_of_main:
  8989                           
  8990                           	psect	text1
  8991     1159                     __ptext1:	
  8992 ;; *************** function _shift_out_to_motors *****************
  8993 ;; Defined at:
  8994 ;;		line 242 in file "main.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;  byte            1    wreg     unsigned char 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;  byte            1    3[BANK3 ] unsigned char 
  8999 ;;  i               1    4[BANK3 ] unsigned char 
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  1    wreg      void 
  9002 ;; Registers used:
  9003 ;;		wreg, status,2, status,0
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9010 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9011 ;;      Temps:          0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  9012 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  9013 ;;Total ram usage:        5 bytes
  9014 ;; Hardware stack levels used: 1
  9015 ;; Hardware stack levels required when called: 12
  9016 ;; This function calls:
  9017 ;;		Nothing
  9018 ;; This function is called by:
  9019 ;;		_main
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023     1159                     _shift_out_to_motors:	
  9024                           ;psect for function _shift_out_to_motors
  9025                           
  9026                           
  9027                           ;incstack = 0
  9028                           ; Regs used in _shift_out_to_motors: [wreg+status,2+status,0]
  9029                           ;shift_out_to_motors@byte stored from wreg
  9030     1159  0023               	movlb	3	; select bank3
  9031     115A  00C1               	movwf	shift_out_to_motors@byte^(0+384)
  9032     115B                     l6443:
  9033                           
  9034                           ;main.c: 242: void shift_out_to_motors(uint8_t byte);main.c: 243: {;main.c: 244:     for
      +                           (uint8_t i=0; i < 8; i++){
  9035     115B  01C2               	clrf	shift_out_to_motors@i^(0+384)
  9036     115C                     l6449:
  9037                           
  9038                           ;main.c: 250:         LATBbits.LATB4 = (byte & (1 << i)) >> i;
  9039     115C  3001               	movlw	1
  9040     115D  00BE               	movwf	??_shift_out_to_motors^(0+384)
  9041     115E  0A42               	incf	shift_out_to_motors@i^(0+384),w
  9042     115F  2961               	goto	u5524
  9043     1160                     u5525:
  9044     1160  35BE               	lslf	??_shift_out_to_motors^(0+384),f
  9045     1161                     u5524:
  9046     1161  0B89               	decfsz	9,f
  9047     1162  2960               	goto	u5525
  9048     1163  083E               	movf	??_shift_out_to_motors^(0+384),w
  9049     1164  0541               	andwf	shift_out_to_motors@byte^(0+384),w
  9050     1165  00BF               	movwf	(??_shift_out_to_motors+1)^(0+384)
  9051     1166  0A42               	incf	shift_out_to_motors@i^(0+384),w
  9052     1167  2969               	goto	u5534
  9053     1168                     u5535:
  9054     1168  36BF               	lsrf	(??_shift_out_to_motors+1)^(0+384),f
  9055     1169                     u5534:
  9056     1169  0B89               	decfsz	9,f
  9057     116A  2968               	goto	u5535
  9058     116B  083F               	movf	(??_shift_out_to_motors+1)^(0+384),w
  9059     116C  00C0               	movwf	(??_shift_out_to_motors+2)^(0+384)
  9060     116D  0EC0               	swapf	(??_shift_out_to_motors+2)^(0+384),f
  9061     116E  0022               	movlb	2	; select bank2
  9062     116F  080D               	movf	13,w	;volatile
  9063     1170  0023               	movlb	3	; select bank3
  9064     1171  0640               	xorwf	(??_shift_out_to_motors+2)^(0+384),w
  9065     1172  39EF               	andlw	-17
  9066     1173  0640               	xorwf	(??_shift_out_to_motors+2)^(0+384),w
  9067     1174  0022               	movlb	2	; select bank2
  9068     1175  008D               	movwf	13	;volatile
  9069     1176                     l6451:
  9070                           
  9071                           ;main.c: 252:         _delay((unsigned long)((1)*(4000000/4000.0)));
  9072     1176  30C8               	movlw	200
  9073     1177                     u5617:
  9074     1177  3200               	nop2
  9075     1178  0B89               	decfsz	9,f
  9076     1179  2977               	goto	u5617
  9077     117A                     l6453:
  9078                           
  9079                           ;main.c: 254:         LATBbits.LATB6 = 1;
  9080     117A  0022               	movlb	2	; select bank2
  9081     117B  170D               	bsf	13,6	;volatile
  9082     117C                     l6455:
  9083                           
  9084                           ;main.c: 255:         _delay((unsigned long)((1)*(4000000/4000.0)));
  9085     117C  30C8               	movlw	200
  9086     117D                     u5627:
  9087     117D  3200               	nop2
  9088     117E  0B89               	decfsz	9,f
  9089     117F  297D               	goto	u5627
  9090     1180                     l6457:
  9091                           
  9092                           ;main.c: 257:         LATBbits.LATB4 = 1;
  9093     1180  0022               	movlb	2	; select bank2
  9094     1181  160D               	bsf	13,4	;volatile
  9095     1182                     l6459:
  9096                           
  9097                           ;main.c: 258:         LATBbits.LATB6 = 0;
  9098     1182  130D               	bcf	13,6	;volatile
  9099     1183                     l6461:
  9100                           
  9101                           ;main.c: 259:         _delay((unsigned long)((1)*(4000000/4000.0)));
  9102     1183  30C8               	movlw	200
  9103     1184                     u5637:
  9104     1184  3200               	nop2
  9105     1185  0B89               	decfsz	9,f
  9106     1186  2984               	goto	u5637
  9107     1187                     l6463:
  9108                           
  9109                           ;main.c: 260:     }
  9110     1187  3001               	movlw	1
  9111     1188  0023               	movlb	3	; select bank3
  9112     1189  00BE               	movwf	??_shift_out_to_motors^(0+384)
  9113     118A  083E               	movf	??_shift_out_to_motors^(0+384),w
  9114     118B  07C2               	addwf	shift_out_to_motors@i^(0+384),f
  9115     118C  3008               	movlw	8
  9116     118D  0242               	subwf	shift_out_to_motors@i^(0+384),w
  9117     118E  1C03               	skipc
  9118     118F  2991               	goto	u5541
  9119     1190  2992               	goto	u5540
  9120     1191                     u5541:
  9121     1191  295C               	goto	l6449
  9122     1192                     u5540:
  9123     1192                     l1165:
  9124                           
  9125                           ;main.c: 263:     LATBbits.LATB5 = 1;
  9126     1192  0022               	movlb	2	; select bank2
  9127     1193  168D               	bsf	13,5	;volatile
  9128     1194                     l6465:
  9129                           
  9130                           ;main.c: 264:     _delay((unsigned long)((1)*(4000000/4000.0)));
  9131     1194  30C8               	movlw	200
  9132     1195                     u5647:
  9133     1195  3200               	nop2
  9134     1196  0B89               	decfsz	9,f
  9135     1197  2995               	goto	u5647
  9136     1198                     l6467:
  9137                           
  9138                           ;main.c: 265:     LATBbits.LATB5 = 0;
  9139     1198  0022               	movlb	2	; select bank2
  9140     1199  128D               	bcf	13,5	;volatile
  9141                           
  9142                           ;main.c: 267:     _delay((unsigned long)((1)*(4000000/4000.0)));
  9143     119A  30C8               	movlw	200
  9144     119B                     u5657:
  9145     119B  3200               	nop2
  9146     119C  0B89               	decfsz	9,f
  9147     119D  299B               	goto	u5657
  9148     119E                     l1166:
  9149     119E  0008               	return
  9150     119F                     __end_of_shift_out_to_motors:
  9151                           
  9152                           	psect	text2
  9153     1FB5                     __ptext2:	
  9154 ;; *************** function _SYSTEM_Initialize *****************
  9155 ;; Defined at:
  9156 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;		None
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;		None
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  1    wreg      void 
  9163 ;; Registers used:
  9164 ;;		wreg, status,2, status,0, pclath, cstack
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;Total ram usage:        0 bytes
  9175 ;; Hardware stack levels used: 1
  9176 ;; Hardware stack levels required when called: 14
  9177 ;; This function calls:
  9178 ;;		_ADC_Initialize
  9179 ;;		_CCP1_Initialize
  9180 ;;		_CCP2_Initialize
  9181 ;;		_CLOCK_Initialize
  9182 ;;		_EUSART_Initialize
  9183 ;;		_I2C1_Initialize
  9184 ;;		_INTERRUPT_Initialize
  9185 ;;		_PIN_MANAGER_Initialize
  9186 ;;		_TMR1_Initialize
  9187 ;;		_TMR2_Initialize
  9188 ;;		_TMR4_Initialize
  9189 ;;		_Timer0_Initialize
  9190 ;; This function is called by:
  9191 ;;		_main
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195     1FB5                     _SYSTEM_Initialize:	
  9196                           ;psect for function _SYSTEM_Initialize
  9197                           
  9198     1FB5                     l6441:	
  9199                           ;incstack = 0
  9200                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9201                           
  9202                           
  9203                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  9204     1FB5  319C  24C8  319F   	fcall	_CLOCK_Initialize
  9205                           
  9206                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  9207     1FB8  3191  21ED  319F   	fcall	_PIN_MANAGER_Initialize
  9208                           
  9209                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
  9210     1FBB  319D  2500  319F   	fcall	_ADC_Initialize
  9211                           
  9212                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
  9213     1FBE  3190  2049  319F   	fcall	_EUSART_Initialize
  9214                           
  9215                           ;mcc_generated_files/system/src/system.c: 46:     I2C1_Initialize();
  9216     1FC1  319D  2588  319F   	fcall	_I2C1_Initialize
  9217                           
  9218                           ;mcc_generated_files/system/src/system.c: 47:     CCP1_Initialize();
  9219     1FC4  319C  24EB  319F   	fcall	_CCP1_Initialize
  9220                           
  9221                           ;mcc_generated_files/system/src/system.c: 48:     CCP2_Initialize();
  9222     1FC7  3187  27F5  319F   	fcall	_CCP2_Initialize
  9223                           
  9224                           ;mcc_generated_files/system/src/system.c: 49:     Timer0_Initialize();
  9225     1FCA  319E  262F  319F   	fcall	_Timer0_Initialize
  9226                           
  9227                           ;mcc_generated_files/system/src/system.c: 50:     TMR1_Initialize();
  9228     1FCD  319E  2693  319F   	fcall	_TMR1_Initialize
  9229                           
  9230                           ;mcc_generated_files/system/src/system.c: 51:     TMR2_Initialize();
  9231     1FD0  319D  259C  319F   	fcall	_TMR2_Initialize
  9232                           
  9233                           ;mcc_generated_files/system/src/system.c: 52:     TMR4_Initialize();
  9234     1FD3  319E  2604  319F   	fcall	_TMR4_Initialize
  9235                           
  9236                           ;mcc_generated_files/system/src/system.c: 53:     INTERRUPT_Initialize();
  9237     1FD6  319D  252F  319F   	fcall	_INTERRUPT_Initialize
  9238     1FD9                     l375:
  9239     1FD9  0008               	return
  9240     1FDA                     __end_of_SYSTEM_Initialize:
  9241                           
  9242                           	psect	text3
  9243     1E2F                     __ptext3:	
  9244 ;; *************** function _Timer0_Initialize *****************
  9245 ;; Defined at:
  9246 ;;		line 51 in file "mcc_generated_files/timer/src/tmr0.c"
  9247 ;; Parameters:    Size  Location     Type
  9248 ;;		None
  9249 ;; Auto vars:     Size  Location     Type
  9250 ;;		None
  9251 ;; Return value:  Size  Location     Type
  9252 ;;                  1    wreg      void 
  9253 ;; Registers used:
  9254 ;;		wreg, status,2, status,0, pclath, cstack
  9255 ;; Tracked objects:
  9256 ;;		On entry : 0/0
  9257 ;;		On exit  : 0/0
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;Total ram usage:        0 bytes
  9265 ;; Hardware stack levels used: 1
  9266 ;; Hardware stack levels required when called: 13
  9267 ;; This function calls:
  9268 ;;		_Timer0_OverflowCallbackRegister
  9269 ;; This function is called by:
  9270 ;;		_SYSTEM_Initialize
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274     1E2F                     _Timer0_Initialize:	
  9275                           ;psect for function _Timer0_Initialize
  9276                           
  9277     1E2F                     l6371:	
  9278                           ;incstack = 0
  9279                           ; Regs used in _Timer0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9280                           
  9281                           
  9282                           ;mcc_generated_files/timer/src/tmr0.c: 54:   OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) 
      +                          | (0xD7 & 0x3F));
  9283     1E2F  0021               	movlb	1	; select bank1
  9284     1E30  0815               	movf	21,w	;volatile
  9285     1E31  39C0               	andlw	192
  9286     1E32  3817               	iorlw	23
  9287     1E33  0095               	movwf	21	;volatile
  9288     1E34                     l6373:
  9289                           
  9290                           ;mcc_generated_files/timer/src/tmr0.c: 57:   TMR0 = 0x3D;
  9291     1E34  303D               	movlw	61
  9292     1E35  0020               	movlb	0	; select bank0
  9293     1E36  0095               	movwf	21	;volatile
  9294     1E37                     l6375:
  9295                           
  9296                           ;mcc_generated_files/timer/src/tmr0.c: 60:   timer0ReloadVal = 61;
  9297     1E37  303D               	movlw	61
  9298     1E38  0022               	movlb	2	; select bank2
  9299     1E39  00EB               	movwf	_timer0ReloadVal^(0+256)	;volatile
  9300     1E3A                     l6377:
  9301                           
  9302                           ;mcc_generated_files/timer/src/tmr0.c: 63:   Timer0_OverflowCallbackRegister(Timer0_Defa
      +                          ultOverflowCallback);
  9303     1E3A  305D               	movlw	low _Timer0_DefaultOverflowCallback
  9304     1E3B  0023               	movlb	3	; select bank3
  9305     1E3C  00BE               	movwf	Timer0_OverflowCallbackRegister@CallbackHandler^(0+384)
  9306     1E3D  301C               	movlw	high _Timer0_DefaultOverflowCallback
  9307     1E3E  00BF               	movwf	(Timer0_OverflowCallbackRegister@CallbackHandler^(0+384)+1)
  9308     1E3F  319C  24E2  319E   	fcall	_Timer0_OverflowCallbackRegister
  9309     1E42                     l6379:
  9310                           
  9311                           ;mcc_generated_files/timer/src/tmr0.c: 66:   INTCONbits.TMR0IF = 0;
  9312     1E42  110B               	bcf	11,2	;volatile
  9313     1E43                     l6381:
  9314                           
  9315                           ;mcc_generated_files/timer/src/tmr0.c: 69:   INTCONbits.TMR0IE = 1;
  9316     1E43  168B               	bsf	11,5	;volatile
  9317     1E44                     l627:
  9318     1E44  0008               	return
  9319     1E45                     __end_of_Timer0_Initialize:
  9320                           
  9321                           	psect	text4
  9322     1CE2                     __ptext4:	
  9323 ;; *************** function _Timer0_OverflowCallbackRegister *****************
  9324 ;; Defined at:
  9325 ;;		line 121 in file "mcc_generated_files/timer/src/tmr0.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;  CallbackHand    2    0[BANK3 ] PTR FTN()void 
  9328 ;;		 -> TMR4_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), Timer0_DefaultOverflowCallback(1), TMR2_Defaul
      +tOverflowCallback(1), 
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;		None
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  1    wreg      void 
  9333 ;; Registers used:
  9334 ;;		wreg
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9340 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9343 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9344 ;;Total ram usage:        2 bytes
  9345 ;; Hardware stack levels used: 1
  9346 ;; Hardware stack levels required when called: 12
  9347 ;; This function calls:
  9348 ;;		Nothing
  9349 ;; This function is called by:
  9350 ;;		_Timer0_Initialize
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354     1CE2                     _Timer0_OverflowCallbackRegister:	
  9355                           ;psect for function _Timer0_OverflowCallbackRegister
  9356                           
  9357     1CE2                     l6213:	
  9358                           ;incstack = 0
  9359                           ; Regs used in _Timer0_OverflowCallbackRegister: [wreg]
  9360                           
  9361                           
  9362                           ;mcc_generated_files/timer/src/tmr0.c: 121: void Timer0_OverflowCallbackRegister(void (*
      +                           CallbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 122: {;mcc_generated_file
      +                          s/timer/src/tmr0.c: 123:   Timer0_OverflowCallback = CallbackHandler;
  9363     1CE2  0023               	movlb	3	; select bank3
  9364     1CE3  083F               	movf	(Timer0_OverflowCallbackRegister@CallbackHandler+1)^(0+384),w
  9365     1CE4  0022               	movlb	2	; select bank2
  9366     1CE5  00E2               	movwf	(_Timer0_OverflowCallback+1)^(0+256)
  9367     1CE6  0023               	movlb	3	; select bank3
  9368     1CE7  083E               	movf	Timer0_OverflowCallbackRegister@CallbackHandler^(0+384),w
  9369     1CE8  0022               	movlb	2	; select bank2
  9370     1CE9  00E1               	movwf	_Timer0_OverflowCallback^(0+256)
  9371     1CEA                     l649:
  9372     1CEA  0008               	return
  9373     1CEB                     __end_of_Timer0_OverflowCallbackRegister:
  9374                           
  9375                           	psect	text5
  9376     1E04                     __ptext5:	
  9377 ;; *************** function _TMR4_Initialize *****************
  9378 ;; Defined at:
  9379 ;;		line 57 in file "mcc_generated_files/timer/src/tmr4.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;		None
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;		None
  9384 ;; Return value:  Size  Location     Type
  9385 ;;                  1    wreg      void 
  9386 ;; Registers used:
  9387 ;;		wreg, status,2, status,0, pclath, cstack
  9388 ;; Tracked objects:
  9389 ;;		On entry : 0/0
  9390 ;;		On exit  : 0/0
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9397 ;;Total ram usage:        0 bytes
  9398 ;; Hardware stack levels used: 1
  9399 ;; Hardware stack levels required when called: 13
  9400 ;; This function calls:
  9401 ;;		_TMR4_OverflowCallbackRegister
  9402 ;; This function is called by:
  9403 ;;		_SYSTEM_Initialize
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407     1E04                     _TMR4_Initialize:	
  9408                           ;psect for function _TMR4_Initialize
  9409                           
  9410     1E04                     l6411:	
  9411                           ;incstack = 0
  9412                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9413                           
  9414                           
  9415                           ;mcc_generated_files/timer/src/tmr4.c: 61:     T4CLKCON = 0x0;
  9416     1E04  0028               	movlb	8	; select bank8
  9417     1E05  0197               	clrf	23	;volatile
  9418                           
  9419                           ;mcc_generated_files/timer/src/tmr4.c: 63:     T4HLT = 0x0;
  9420     1E06  0196               	clrf	22	;volatile
  9421                           
  9422                           ;mcc_generated_files/timer/src/tmr4.c: 65:     T4RST = 0x0;
  9423     1E07  0198               	clrf	24	;volatile
  9424     1E08                     l6413:
  9425                           
  9426                           ;mcc_generated_files/timer/src/tmr4.c: 67:     T4PR = 0x9C;
  9427     1E08  309C               	movlw	156
  9428     1E09  0094               	movwf	20	;volatile
  9429     1E0A                     l6415:
  9430                           
  9431                           ;mcc_generated_files/timer/src/tmr4.c: 69:     T4TMR = 0x0;
  9432     1E0A  0193               	clrf	19	;volatile
  9433     1E0B                     l6417:
  9434                           
  9435                           ;mcc_generated_files/timer/src/tmr4.c: 72:     TMR4_OverflowCallbackRegister(TMR4_Defaul
      +                          tOverflowCallback);
  9436     1E0B  3002               	movlw	low _TMR4_DefaultOverflowCallback
  9437     1E0C  0023               	movlb	3	; select bank3
  9438     1E0D  00BE               	movwf	TMR4_OverflowCallbackRegister@InterruptHandler^(0+384)
  9439     1E0E  3000               	movlw	high _TMR4_DefaultOverflowCallback
  9440     1E0F  00BF               	movwf	(TMR4_OverflowCallbackRegister@InterruptHandler^(0+384)+1)
  9441     1E10  319C  2495  319E   	fcall	_TMR4_OverflowCallbackRegister
  9442     1E13                     l6419:
  9443                           
  9444                           ;mcc_generated_files/timer/src/tmr4.c: 75:     PIR2bits.TMR4IF = 0;
  9445     1E13  0020               	movlb	0	; select bank0
  9446     1E14  1091               	bcf	17,1	;volatile
  9447     1E15                     l6421:
  9448                           
  9449                           ;mcc_generated_files/timer/src/tmr4.c: 77:     T4CON = 0xF0;
  9450     1E15  30F0               	movlw	240
  9451     1E16  0028               	movlb	8	; select bank8
  9452     1E17  0095               	movwf	21	;volatile
  9453     1E18                     l778:
  9454     1E18  0008               	return
  9455     1E19                     __end_of_TMR4_Initialize:
  9456                           
  9457                           	psect	text6
  9458     1C95                     __ptext6:	
  9459 ;; *************** function _TMR4_OverflowCallbackRegister *****************
  9460 ;; Defined at:
  9461 ;;		line 122 in file "mcc_generated_files/timer/src/tmr4.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  InterruptHan    2    0[BANK3 ] PTR FTN()void 
  9464 ;;		 -> TMR4_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), Timer0_DefaultOverflowCallback(1), TMR2_Defaul
      +tOverflowCallback(1), 
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;		None
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  1    wreg      void 
  9469 ;; Registers used:
  9470 ;;		wreg
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9476 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9480 ;;Total ram usage:        2 bytes
  9481 ;; Hardware stack levels used: 1
  9482 ;; Hardware stack levels required when called: 12
  9483 ;; This function calls:
  9484 ;;		Nothing
  9485 ;; This function is called by:
  9486 ;;		_TMR4_Initialize
  9487 ;; This function uses a non-reentrant model
  9488 ;;
  9489                           
  9490     1C95                     _TMR4_OverflowCallbackRegister:	
  9491                           ;psect for function _TMR4_OverflowCallbackRegister
  9492                           
  9493     1C95                     l6217:	
  9494                           ;incstack = 0
  9495                           ; Regs used in _TMR4_OverflowCallbackRegister: [wreg]
  9496                           
  9497                           
  9498                           ;mcc_generated_files/timer/src/tmr4.c: 122: void TMR4_OverflowCallbackRegister(void (* I
      +                          nterruptHandler)(void));mcc_generated_files/timer/src/tmr4.c: 123: {;mcc_generated_files
      +                          /timer/src/tmr4.c: 124:    TMR4_OverflowCallback = InterruptHandler;
  9499     1C95  0023               	movlb	3	; select bank3
  9500     1C96  083F               	movf	(TMR4_OverflowCallbackRegister@InterruptHandler+1)^(0+384),w
  9501     1C97  00B3               	movwf	(_TMR4_OverflowCallback+1)^(0+384)
  9502     1C98  083E               	movf	TMR4_OverflowCallbackRegister@InterruptHandler^(0+384),w
  9503     1C99  00B2               	movwf	_TMR4_OverflowCallback^(0+384)
  9504     1C9A                     l802:
  9505     1C9A  0008               	return
  9506     1C9B                     __end_of_TMR4_OverflowCallbackRegister:
  9507                           
  9508                           	psect	text7
  9509     1D9C                     __ptext7:	
  9510 ;; *************** function _TMR2_Initialize *****************
  9511 ;; Defined at:
  9512 ;;		line 57 in file "mcc_generated_files/timer/src/tmr2.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;		None
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;		None
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  1    wreg      void 
  9519 ;; Registers used:
  9520 ;;		wreg, status,2, status,0, pclath, cstack
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9530 ;;Total ram usage:        0 bytes
  9531 ;; Hardware stack levels used: 1
  9532 ;; Hardware stack levels required when called: 13
  9533 ;; This function calls:
  9534 ;;		_TMR2_OverflowCallbackRegister
  9535 ;; This function is called by:
  9536 ;;		_SYSTEM_Initialize
  9537 ;; This function uses a non-reentrant model
  9538 ;;
  9539                           
  9540     1D9C                     _TMR2_Initialize:	
  9541                           ;psect for function _TMR2_Initialize
  9542                           
  9543     1D9C                     l6399:	
  9544                           ;incstack = 0
  9545                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9546                           
  9547                           
  9548                           ;mcc_generated_files/timer/src/tmr2.c: 61:     T2CLKCON = 0x0;
  9549     1D9C  0020               	movlb	0	; select bank0
  9550     1D9D  019E               	clrf	30	;volatile
  9551                           
  9552                           ;mcc_generated_files/timer/src/tmr2.c: 63:     T2HLT = 0x0;
  9553     1D9E  019D               	clrf	29	;volatile
  9554                           
  9555                           ;mcc_generated_files/timer/src/tmr2.c: 65:     T2RST = 0x0;
  9556     1D9F  019F               	clrf	31	;volatile
  9557     1DA0                     l6401:
  9558                           
  9559                           ;mcc_generated_files/timer/src/tmr2.c: 67:     T2PR = 0xFF;
  9560     1DA0  30FF               	movlw	255
  9561     1DA1  009B               	movwf	27	;volatile
  9562     1DA2                     l6403:
  9563                           
  9564                           ;mcc_generated_files/timer/src/tmr2.c: 69:     T2TMR = 0x0;
  9565     1DA2  019A               	clrf	26	;volatile
  9566     1DA3                     l6405:
  9567                           
  9568                           ;mcc_generated_files/timer/src/tmr2.c: 72:     TMR2_OverflowCallbackRegister(TMR2_Defaul
      +                          tOverflowCallback);
  9569     1DA3  301C               	movlw	low _TMR2_DefaultOverflowCallback
  9570     1DA4  0023               	movlb	3	; select bank3
  9571     1DA5  00BE               	movwf	TMR2_OverflowCallbackRegister@InterruptHandler^(0+384)
  9572     1DA6  301C               	movlw	high _TMR2_DefaultOverflowCallback
  9573     1DA7  00BF               	movwf	(TMR2_OverflowCallbackRegister@InterruptHandler^(0+384)+1)
  9574     1DA8  319C  248F  319D   	fcall	_TMR2_OverflowCallbackRegister
  9575     1DAB                     l6407:
  9576                           
  9577                           ;mcc_generated_files/timer/src/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  9578     1DAB  0020               	movlb	0	; select bank0
  9579     1DAC  1090               	bcf	16,1	;volatile
  9580     1DAD                     l6409:
  9581                           
  9582                           ;mcc_generated_files/timer/src/tmr2.c: 77:     T2CON = 0xF0;
  9583     1DAD  30F0               	movlw	240
  9584     1DAE  009C               	movwf	28	;volatile
  9585     1DAF                     l571:
  9586     1DAF  0008               	return
  9587     1DB0                     __end_of_TMR2_Initialize:
  9588                           
  9589                           	psect	text8
  9590     1C8F                     __ptext8:	
  9591 ;; *************** function _TMR2_OverflowCallbackRegister *****************
  9592 ;; Defined at:
  9593 ;;		line 122 in file "mcc_generated_files/timer/src/tmr2.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  InterruptHan    2    0[BANK3 ] PTR FTN()void 
  9596 ;;		 -> TMR4_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), Timer0_DefaultOverflowCallback(1), TMR2_Defaul
      +tOverflowCallback(1), 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;		None
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  1    wreg      void 
  9601 ;; Registers used:
  9602 ;;		wreg
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9608 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9612 ;;Total ram usage:        2 bytes
  9613 ;; Hardware stack levels used: 1
  9614 ;; Hardware stack levels required when called: 12
  9615 ;; This function calls:
  9616 ;;		Nothing
  9617 ;; This function is called by:
  9618 ;;		_TMR2_Initialize
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622     1C8F                     _TMR2_OverflowCallbackRegister:	
  9623                           ;psect for function _TMR2_OverflowCallbackRegister
  9624                           
  9625     1C8F                     l6211:	
  9626                           ;incstack = 0
  9627                           ; Regs used in _TMR2_OverflowCallbackRegister: [wreg]
  9628                           
  9629                           
  9630                           ;mcc_generated_files/timer/src/tmr2.c: 122: void TMR2_OverflowCallbackRegister(void (* I
      +                          nterruptHandler)(void));mcc_generated_files/timer/src/tmr2.c: 123: {;mcc_generated_files
      +                          /timer/src/tmr2.c: 124:    TMR2_OverflowCallback = InterruptHandler;
  9631     1C8F  0023               	movlb	3	; select bank3
  9632     1C90  083F               	movf	(TMR2_OverflowCallbackRegister@InterruptHandler+1)^(0+384),w
  9633     1C91  00B9               	movwf	(_TMR2_OverflowCallback+1)^(0+384)
  9634     1C92  083E               	movf	TMR2_OverflowCallbackRegister@InterruptHandler^(0+384),w
  9635     1C93  00B8               	movwf	_TMR2_OverflowCallback^(0+384)
  9636     1C94                     l595:
  9637     1C94  0008               	return
  9638     1C95                     __end_of_TMR2_OverflowCallbackRegister:
  9639                           
  9640                           	psect	text9
  9641     1E93                     __ptext9:	
  9642 ;; *************** function _TMR1_Initialize *****************
  9643 ;; Defined at:
  9644 ;;		line 57 in file "mcc_generated_files/timer/src/tmr1.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;		None
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  1    wreg      void 
  9651 ;; Registers used:
  9652 ;;		wreg, status,2, status,0, pclath, cstack
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9662 ;;Total ram usage:        0 bytes
  9663 ;; Hardware stack levels used: 1
  9664 ;; Hardware stack levels required when called: 13
  9665 ;; This function calls:
  9666 ;;		_TMR1_OverflowCallbackRegister
  9667 ;; This function is called by:
  9668 ;;		_SYSTEM_Initialize
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672     1E93                     _TMR1_Initialize:	
  9673                           ;psect for function _TMR1_Initialize
  9674                           
  9675     1E93                     l6383:	
  9676                           ;incstack = 0
  9677                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9678                           
  9679                           
  9680                           ;mcc_generated_files/timer/src/tmr1.c: 60:     T1GCON = 0x0;
  9681     1E93  0020               	movlb	0	; select bank0
  9682     1E94  0199               	clrf	25	;volatile
  9683     1E95                     l6385:
  9684                           
  9685                           ;mcc_generated_files/timer/src/tmr1.c: 62:     TMR1H = 0xFF;
  9686     1E95  30FF               	movlw	255
  9687     1E96  0097               	movwf	23	;volatile
  9688     1E97                     l6387:
  9689                           
  9690                           ;mcc_generated_files/timer/src/tmr1.c: 64:     TMR1L = 0xFF;
  9691     1E97  30FF               	movlw	255
  9692     1E98  0096               	movwf	22	;volatile
  9693     1E99                     l6389:
  9694                           
  9695                           ;mcc_generated_files/timer/src/tmr1.c: 67:     timer1ReloadVal=((uint16_t)TMR1H << 8) | 
      +                          TMR1L;
  9696     1E99  0817               	movf	23,w	;volatile
  9697     1E9A  0022               	movlb	2	; select bank2
  9698     1E9B  00DE               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  9699     1E9C  0020               	movlb	0	; select bank0
  9700     1E9D  0816               	movf	22,w	;volatile
  9701     1E9E  0022               	movlb	2	; select bank2
  9702     1E9F  00DD               	movwf	_timer1ReloadVal^(0+256)	;volatile
  9703     1EA0                     l6391:
  9704                           
  9705                           ;mcc_generated_files/timer/src/tmr1.c: 70:     TMR1_OverflowCallbackRegister(TMR1_Defaul
      +                          tOverflowCallback);
  9706     1EA0  301D               	movlw	low _TMR1_DefaultOverflowCallback
  9707     1EA1  0023               	movlb	3	; select bank3
  9708     1EA2  00BE               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler^(0+384)
  9709     1EA3  301C               	movlw	high _TMR1_DefaultOverflowCallback
  9710     1EA4  00BF               	movwf	(TMR1_OverflowCallbackRegister@CallbackHandler^(0+384)+1)
  9711     1EA5  319C  2489  319E   	fcall	_TMR1_OverflowCallbackRegister
  9712     1EA8                     l6393:
  9713                           
  9714                           ;mcc_generated_files/timer/src/tmr1.c: 73:     PIR1bits.TMR1IF = 0;
  9715     1EA8  0020               	movlb	0	; select bank0
  9716     1EA9  1010               	bcf	16,0	;volatile
  9717     1EAA                     l6395:
  9718                           
  9719                           ;mcc_generated_files/timer/src/tmr1.c: 74:     PIR1bits.TMR1GIF = 0;
  9720     1EAA  1390               	bcf	16,7	;volatile
  9721     1EAB                     l6397:
  9722                           
  9723                           ;mcc_generated_files/timer/src/tmr1.c: 77:     T1CON = 0x1;
  9724     1EAB  3001               	movlw	1
  9725     1EAC  0098               	movwf	24	;volatile
  9726     1EAD                     l691:
  9727     1EAD  0008               	return
  9728     1EAE                     __end_of_TMR1_Initialize:
  9729                           
  9730                           	psect	text10
  9731     1C89                     __ptext10:	
  9732 ;; *************** function _TMR1_OverflowCallbackRegister *****************
  9733 ;; Defined at:
  9734 ;;		line 150 in file "mcc_generated_files/timer/src/tmr1.c"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;  CallbackHand    2    0[BANK3 ] PTR FTN()void 
  9737 ;;		 -> TMR4_DefaultOverflowCallback(1), TMR1_DefaultOverflowCallback(1), Timer0_DefaultOverflowCallback(1), TMR2_Defaul
      +tOverflowCallback(1), 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;		None
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  1    wreg      void 
  9742 ;; Registers used:
  9743 ;;		wreg
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9749 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9752 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  9753 ;;Total ram usage:        2 bytes
  9754 ;; Hardware stack levels used: 1
  9755 ;; Hardware stack levels required when called: 12
  9756 ;; This function calls:
  9757 ;;		Nothing
  9758 ;; This function is called by:
  9759 ;;		_TMR1_Initialize
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763     1C89                     _TMR1_OverflowCallbackRegister:	
  9764                           ;psect for function _TMR1_OverflowCallbackRegister
  9765                           
  9766     1C89                     l6215:	
  9767                           ;incstack = 0
  9768                           ; Regs used in _TMR1_OverflowCallbackRegister: [wreg]
  9769                           
  9770                           
  9771                           ;mcc_generated_files/timer/src/tmr1.c: 150: void TMR1_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr1.c: 151: {;mcc_generated_files/
      +                          timer/src/tmr1.c: 152:     TMR1_OverflowCallback = CallbackHandler;
  9772     1C89  0023               	movlb	3	; select bank3
  9773     1C8A  083F               	movf	(TMR1_OverflowCallbackRegister@CallbackHandler+1)^(0+384),w
  9774     1C8B  00B5               	movwf	(_TMR1_OverflowCallback+1)^(0+384)
  9775     1C8C  083E               	movf	TMR1_OverflowCallbackRegister@CallbackHandler^(0+384),w
  9776     1C8D  00B4               	movwf	_TMR1_OverflowCallback^(0+384)
  9777     1C8E                     l720:
  9778     1C8E  0008               	return
  9779     1C8F                     __end_of_TMR1_OverflowCallbackRegister:
  9780                           
  9781                           	psect	text11
  9782     11ED                     __ptext11:	
  9783 ;; *************** function _PIN_MANAGER_Initialize *****************
  9784 ;; Defined at:
  9785 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;		None
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;		None
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  1    wreg      void 
  9792 ;; Registers used:
  9793 ;;		wreg, status,2
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;Total ram usage:        0 bytes
  9804 ;; Hardware stack levels used: 1
  9805 ;; Hardware stack levels required when called: 12
  9806 ;; This function calls:
  9807 ;;		Nothing
  9808 ;; This function is called by:
  9809 ;;		_SYSTEM_Initialize
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813     11ED                     _PIN_MANAGER_Initialize:	
  9814                           ;psect for function _PIN_MANAGER_Initialize
  9815                           
  9816     11ED                     l6271:	
  9817                           ;incstack = 0
  9818                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9819                           
  9820                           
  9821                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  9822     11ED  0022               	movlb	2	; select bank2
  9823     11EE  018C               	clrf	12	;volatile
  9824                           
  9825                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  9826     11EF  018D               	clrf	13	;volatile
  9827     11F0                     l6273:
  9828                           
  9829                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x18;
  9830     11F0  3018               	movlw	24
  9831     11F1  008E               	movwf	14	;volatile
  9832     11F2                     l6275:
  9833                           
  9834                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
  9835     11F2  3019               	movlw	25
  9836     11F3  0021               	movlb	1	; select bank1
  9837     11F4  008C               	movwf	12	;volatile
  9838     11F5                     l6277:
  9839                           
  9840                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x80;
  9841     11F5  3080               	movlw	128
  9842     11F6  008D               	movwf	13	;volatile
  9843     11F7                     l6279:
  9844                           
  9845                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x9B;
  9846     11F7  309B               	movlw	155
  9847     11F8  008E               	movwf	14	;volatile
  9848     11F9                     l6281:
  9849                           
  9850                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x15;
  9851     11F9  3015               	movlw	21
  9852     11FA  0023               	movlb	3	; select bank3
  9853     11FB  008C               	movwf	12	;volatile
  9854     11FC                     l6283:
  9855                           
  9856                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x0;
  9857     11FC  018D               	clrf	13	;volatile
  9858                           
  9859                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0x1;
  9860     11FD  3001               	movlw	1
  9861     11FE  008E               	movwf	14	;volatile
  9862                           
  9863                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x3A;
  9864     11FF  303A               	movlw	58
  9865     1200  0024               	movlb	4	; select bank4
  9866     1201  008C               	movwf	12	;volatile
  9867                           
  9868                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xF0;
  9869     1202  30F0               	movlw	240
  9870     1203  008D               	movwf	13	;volatile
  9871                           
  9872                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0xDF;
  9873     1204  30DF               	movlw	223
  9874     1205  008E               	movwf	14	;volatile
  9875     1206                     l6285:
  9876                           
  9877                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  9878     1206  0021               	movlb	1	; select bank1
  9879     1207  1395               	bcf	21,7	;volatile
  9880     1208                     l6287:
  9881                           
  9882                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  9883     1208  0025               	movlb	5	; select bank5
  9884     1209  018C               	clrf	12	;volatile
  9885     120A                     l6289:
  9886                           
  9887                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  9888     120A  018D               	clrf	13	;volatile
  9889     120B                     l6291:
  9890                           
  9891                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  9892     120B  018E               	clrf	14	;volatile
  9893     120C                     l6293:
  9894                           
  9895                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x36;
  9896     120C  3036               	movlw	54
  9897     120D  0026               	movlb	6	; select bank6
  9898     120E  008C               	movwf	12	;volatile
  9899     120F                     l6295:
  9900                           
  9901                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  9902     120F  30F0               	movlw	240
  9903     1210  008D               	movwf	13	;volatile
  9904     1211                     l6297:
  9905                           
  9906                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  9907     1211  30FF               	movlw	255
  9908     1212  008E               	movwf	14	;volatile
  9909     1213                     l6299:
  9910                           
  9911                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x18;
  9912     1213  3018               	movlw	24
  9913     1214  0027               	movlb	7	; select bank7
  9914     1215  008C               	movwf	12	;volatile
  9915     1216                     l6301:
  9916                           
  9917                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  9918     1216  30F0               	movlw	240
  9919     1217  008D               	movwf	13	;volatile
  9920     1218                     l6303:
  9921                           
  9922                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0x7;
  9923     1218  3007               	movlw	7
  9924     1219  008E               	movwf	14	;volatile
  9925     121A                     l6305:
  9926                           
  9927                           ;mcc_generated_files/system/src/pins.c: 92:     RXPPS = 0x17;
  9928     121A  3017               	movlw	23
  9929     121B  003C               	movlb	28	; select bank28
  9930     121C  00A4               	movwf	36	;volatile
  9931     121D                     l6307:
  9932                           
  9933                           ;mcc_generated_files/system/src/pins.c: 93:     RC6PPS = 18;
  9934     121D  3012               	movlw	18
  9935     121E  003D               	movlb	29	; select bank29
  9936     121F  00A6               	movwf	38	;volatile
  9937     1220                     l6309:
  9938                           
  9939                           ;mcc_generated_files/system/src/pins.c: 94:     SSPCLKPPS = 0x14;
  9940     1220  3014               	movlw	20
  9941     1221  003C               	movlb	28	; select bank28
  9942     1222  00A0               	movwf	32	;volatile
  9943     1223                     l6311:
  9944                           
  9945                           ;mcc_generated_files/system/src/pins.c: 95:     RC4PPS = 16;
  9946     1223  3010               	movlw	16
  9947     1224  003D               	movlb	29	; select bank29
  9948     1225  00A4               	movwf	36	;volatile
  9949     1226                     l6313:
  9950                           
  9951                           ;mcc_generated_files/system/src/pins.c: 96:     SSPDATPPS = 0x13;
  9952     1226  3013               	movlw	19
  9953     1227  003C               	movlb	28	; select bank28
  9954     1228  00A1               	movwf	33	;volatile
  9955     1229                     l6315:
  9956                           
  9957                           ;mcc_generated_files/system/src/pins.c: 97:     RC3PPS = 17;
  9958     1229  3011               	movlw	17
  9959     122A  003D               	movlb	29	; select bank29
  9960     122B  00A3               	movwf	35	;volatile
  9961     122C                     l6317:
  9962                           
  9963                           ;mcc_generated_files/system/src/pins.c: 98:     CCP2PPS = 0x2;
  9964     122C  3002               	movlw	2
  9965     122D  003C               	movlb	28	; select bank28
  9966     122E  0095               	movwf	21	;volatile
  9967     122F                     l6319:
  9968                           
  9969                           ;mcc_generated_files/system/src/pins.c: 99:     RA2PPS = 13;
  9970     122F  300D               	movlw	13
  9971     1230  003D               	movlb	29	; select bank29
  9972     1231  0092               	movwf	18	;volatile
  9973     1232                     l6321:
  9974                           
  9975                           ;mcc_generated_files/system/src/pins.c: 100:     CCP1PPS = 0x15;
  9976     1232  3015               	movlw	21
  9977     1233  003C               	movlb	28	; select bank28
  9978     1234  0094               	movwf	20	;volatile
  9979     1235                     l6323:
  9980                           
  9981                           ;mcc_generated_files/system/src/pins.c: 101:     RC5PPS = 12;
  9982     1235  300C               	movlw	12
  9983     1236  003D               	movlb	29	; select bank29
  9984     1237  00A5               	movwf	37	;volatile
  9985     1238                     l6325:
  9986                           
  9987                           ;mcc_generated_files/system/src/pins.c: 110:     IOCAP = 0x0;
  9988     1238  0027               	movlb	7	; select bank7
  9989     1239  0191               	clrf	17	;volatile
  9990     123A                     l6327:
  9991                           
  9992                           ;mcc_generated_files/system/src/pins.c: 111:     IOCAN = 0x0;
  9993     123A  0192               	clrf	18	;volatile
  9994     123B                     l6329:
  9995                           
  9996                           ;mcc_generated_files/system/src/pins.c: 112:     IOCAF = 0x0;
  9997     123B  0193               	clrf	19	;volatile
  9998     123C                     l6331:
  9999                           
 10000                           ;mcc_generated_files/system/src/pins.c: 113:     IOCBP = 0x0;
 10001     123C  0194               	clrf	20	;volatile
 10002     123D                     l6333:
 10003                           
 10004                           ;mcc_generated_files/system/src/pins.c: 114:     IOCBN = 0x0;
 10005     123D  0195               	clrf	21	;volatile
 10006     123E                     l6335:
 10007                           
 10008                           ;mcc_generated_files/system/src/pins.c: 115:     IOCBF = 0x0;
 10009     123E  0196               	clrf	22	;volatile
 10010     123F                     l6337:
 10011                           
 10012                           ;mcc_generated_files/system/src/pins.c: 116:     IOCCP = 0x0;
 10013     123F  0197               	clrf	23	;volatile
 10014     1240                     l6339:
 10015                           
 10016                           ;mcc_generated_files/system/src/pins.c: 117:     IOCCN = 0x0;
 10017     1240  0198               	clrf	24	;volatile
 10018     1241                     l6341:
 10019                           
 10020                           ;mcc_generated_files/system/src/pins.c: 118:     IOCCF = 0x0;
 10021     1241  0199               	clrf	25	;volatile
 10022     1242                     l469:
 10023     1242  0008               	return
 10024     1243                     __end_of_PIN_MANAGER_Initialize:
 10025                           
 10026                           	psect	text12
 10027     1D2F                     __ptext12:	
 10028 ;; *************** function _INTERRUPT_Initialize *****************
 10029 ;; Defined at:
 10030 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;		None
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;		None
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  1    wreg      void 
 10037 ;; Registers used:
 10038 ;;		wreg, status,2, status,0, pclath, cstack
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10048 ;;Total ram usage:        0 bytes
 10049 ;; Hardware stack levels used: 1
 10050 ;; Hardware stack levels required when called: 13
 10051 ;; This function calls:
 10052 ;;		_INT_SetInterruptHandler
 10053 ;; This function is called by:
 10054 ;;		_SYSTEM_Initialize
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058     1D2F                     _INTERRUPT_Initialize:	
 10059                           ;psect for function _INTERRUPT_Initialize
 10060                           
 10061     1D2F                     l6423:	
 10062                           ;incstack = 0
 10063                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10064                           
 10065                           
 10066                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
 10067     1D2F  108B               	bcf	11,1	;volatile
 10068                           
 10069                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
 10070     1D30  0021               	movlb	1	; select bank1
 10071     1D31  1715               	bsf	21,6	;volatile
 10072     1D32                     l6425:
 10073                           
 10074                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 10075     1D32  3000               	movlw	0
 10076     1D33  0023               	movlb	3	; select bank3
 10077     1D34  00BE               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+384)
 10078     1D35  3000               	movlw	0
 10079     1D36  00BF               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+384)+1)
 10080     1D37  319C  24D9  319D   	fcall	_INT_SetInterruptHandler
 10081     1D3A                     l503:
 10082     1D3A  0008               	return
 10083     1D3B                     __end_of_INTERRUPT_Initialize:
 10084                           
 10085                           	psect	text13
 10086     1CD9                     __ptext13:	
 10087 ;; *************** function _INT_SetInterruptHandler *****************
 10088 ;; Defined at:
 10089 ;;		line 101 in file "mcc_generated_files/system/src/interrupt.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  InterruptHan    2    0[BANK3 ] PTR FTN()void 
 10092 ;;		 -> INT_DefaultInterruptHandler(1), 
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;		None
 10095 ;; Return value:  Size  Location     Type
 10096 ;;                  1    wreg      void 
 10097 ;; Registers used:
 10098 ;;		wreg
 10099 ;; Tracked objects:
 10100 ;;		On entry : 0/0
 10101 ;;		On exit  : 0/0
 10102 ;;		Unchanged: 0/0
 10103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10104 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10107 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10108 ;;Total ram usage:        2 bytes
 10109 ;; Hardware stack levels used: 1
 10110 ;; Hardware stack levels required when called: 12
 10111 ;; This function calls:
 10112 ;;		Nothing
 10113 ;; This function is called by:
 10114 ;;		_INTERRUPT_Initialize
 10115 ;; This function uses a non-reentrant model
 10116 ;;
 10117                           
 10118     1CD9                     _INT_SetInterruptHandler:	
 10119                           ;psect for function _INT_SetInterruptHandler
 10120                           
 10121     1CD9                     l6209:	
 10122                           ;incstack = 0
 10123                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 10124                           
 10125                           
 10126                           ;mcc_generated_files/system/src/interrupt.c: 102:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 10127     1CD9  0023               	movlb	3	; select bank3
 10128     1CDA  083F               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+384),w
 10129     1CDB  0022               	movlb	2	; select bank2
 10130     1CDC  00E4               	movwf	(_INT_InterruptHandler+1)^(0+256)
 10131     1CDD  0023               	movlb	3	; select bank3
 10132     1CDE  083E               	movf	INT_SetInterruptHandler@InterruptHandler^(0+384),w
 10133     1CDF  0022               	movlb	2	; select bank2
 10134     1CE0  00E3               	movwf	_INT_InterruptHandler^(0+256)
 10135     1CE1                     l523:
 10136     1CE1  0008               	return
 10137     1CE2                     __end_of_INT_SetInterruptHandler:
 10138                           
 10139                           	psect	text14
 10140     1D88                     __ptext14:	
 10141 ;; *************** function _I2C1_Initialize *****************
 10142 ;; Defined at:
 10143 ;;		line 114 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10144 ;; Parameters:    Size  Location     Type
 10145 ;;		None
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;		None
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  1    wreg      void 
 10150 ;; Registers used:
 10151 ;;		wreg, status,2, status,0, pclath, cstack
 10152 ;; Tracked objects:
 10153 ;;		On entry : 0/0
 10154 ;;		On exit  : 0/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10161 ;;Total ram usage:        0 bytes
 10162 ;; Hardware stack levels used: 1
 10163 ;; Hardware stack levels required when called: 13
 10164 ;; This function calls:
 10165 ;;		_I2C1_CallbackRegister
 10166 ;; This function is called by:
 10167 ;;		_SYSTEM_Initialize
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171     1D88                     _I2C1_Initialize:	
 10172                           ;psect for function _I2C1_Initialize
 10173                           
 10174     1D88                     l6243:	
 10175                           ;incstack = 0
 10176                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10177                           
 10178                           
 10179                           ;mcc_generated_files/i2c_host/src/mssp.c: 117:     SSP1STAT = 0x80;
 10180     1D88  3080               	movlw	128
 10181     1D89  0024               	movlb	4	; select bank4
 10182     1D8A  0094               	movwf	20	;volatile
 10183                           
 10184                           ;mcc_generated_files/i2c_host/src/mssp.c: 119:     SSP1CON1 = 0x8;
 10185     1D8B  3008               	movlw	8
 10186     1D8C  0095               	movwf	21	;volatile
 10187     1D8D                     l6245:
 10188                           
 10189                           ;mcc_generated_files/i2c_host/src/mssp.c: 121:     SSP1CON2 = 0x0;
 10190     1D8D  0196               	clrf	22	;volatile
 10191     1D8E                     l6247:
 10192                           
 10193                           ;mcc_generated_files/i2c_host/src/mssp.c: 123:     SSP1CON3 = 0x0;
 10194     1D8E  0197               	clrf	23	;volatile
 10195                           
 10196                           ;mcc_generated_files/i2c_host/src/mssp.c: 125:     SSP1ADD = 0x9;
 10197     1D8F  3009               	movlw	9
 10198     1D90  0092               	movwf	18	;volatile
 10199     1D91                     l6249:
 10200                           
 10201                           ;mcc_generated_files/i2c_host/src/mssp.c: 127:     I2C1_CallbackRegister(I2C1_DefaultCal
      +                          lback);
 10202     1D91  301B               	movlw	low _I2C1_DefaultCallback
 10203     1D92  0023               	movlb	3	; select bank3
 10204     1D93  00BE               	movwf	I2C1_CallbackRegister@callbackHandler^(0+384)
 10205     1D94  301C               	movlw	high _I2C1_DefaultCallback
 10206     1D95  00BF               	movwf	(I2C1_CallbackRegister@callbackHandler^(0+384)+1)
 10207     1D96  319D  2523  319D   	fcall	_I2C1_CallbackRegister
 10208     1D99                     l6251:
 10209                           
 10210                           ;mcc_generated_files/i2c_host/src/mssp.c: 128:     SSP1CON1bits.SSPEN = 1;
 10211     1D99  0024               	movlb	4	; select bank4
 10212     1D9A  1695               	bsf	21,5	;volatile
 10213     1D9B                     l157:
 10214     1D9B  0008               	return
 10215     1D9C                     __end_of_I2C1_Initialize:
 10216                           
 10217                           	psect	text15
 10218     1D23                     __ptext15:	
 10219 ;; *************** function _I2C1_CallbackRegister *****************
 10220 ;; Defined at:
 10221 ;;		line 211 in file "mcc_generated_files/i2c_host/src/mssp.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;  callbackHand    2    0[BANK3 ] PTR FTN()void 
 10224 ;;		 -> I2C1_DefaultCallback(1), 
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;		None
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  1    wreg      void 
 10229 ;; Registers used:
 10230 ;;		wreg, status,2, status,0
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10236 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10240 ;;Total ram usage:        2 bytes
 10241 ;; Hardware stack levels used: 1
 10242 ;; Hardware stack levels required when called: 12
 10243 ;; This function calls:
 10244 ;;		Nothing
 10245 ;; This function is called by:
 10246 ;;		_I2C1_Initialize
 10247 ;;		_I2C1_Deinitialize
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251     1D23                     _I2C1_CallbackRegister:	
 10252                           ;psect for function _I2C1_CallbackRegister
 10253                           
 10254     1D23                     l6205:	
 10255                           ;incstack = 0
 10256                           ; Regs used in _I2C1_CallbackRegister: [wreg+status,2+status,0]
 10257                           
 10258                           
 10259                           ;mcc_generated_files/i2c_host/src/mssp.c: 211: void I2C1_CallbackRegister(void (*callbac
      +                          kHandler)(void));mcc_generated_files/i2c_host/src/mssp.c: 212: {;mcc_generated_files/i2c
      +                          _host/src/mssp.c: 213:     if (callbackHandler != ((void*)0))
 10260     1D23  0023               	movlb	3	; select bank3
 10261     1D24  083E               	movf	I2C1_CallbackRegister@callbackHandler^(0+384),w
 10262     1D25  043F               	iorwf	(I2C1_CallbackRegister@callbackHandler+1)^(0+384),w
 10263     1D26  1903               	btfsc	3,2
 10264     1D27  2D29               	goto	u5461
 10265     1D28  2D2A               	goto	u5460
 10266     1D29                     u5461:
 10267     1D29  2D2E               	goto	l184
 10268     1D2A                     u5460:
 10269     1D2A                     l6207:
 10270                           
 10271                           ;mcc_generated_files/i2c_host/src/mssp.c: 214:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 215:         I2C1_Callback = callbackHandler;
 10272     1D2A  083F               	movf	(I2C1_CallbackRegister@callbackHandler+1)^(0+384),w
 10273     1D2B  00BD               	movwf	(_I2C1_Callback+1)^(0+384)
 10274     1D2C  083E               	movf	I2C1_CallbackRegister@callbackHandler^(0+384),w
 10275     1D2D  00BC               	movwf	_I2C1_Callback^(0+384)
 10276     1D2E                     l184:
 10277     1D2E  0008               	return
 10278     1D2F                     __end_of_I2C1_CallbackRegister:
 10279                           
 10280                           	psect	text16
 10281     1049                     __ptext16:	
 10282 ;; *************** function _EUSART_Initialize *****************
 10283 ;; Defined at:
 10284 ;;		line 108 in file "mcc_generated_files/uart/src/eusart.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;		None
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;		None
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  1    wreg      void 
 10291 ;; Registers used:
 10292 ;;		wreg, status,2, status,0, pclath, cstack
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10302 ;;Total ram usage:        0 bytes
 10303 ;; Hardware stack levels used: 1
 10304 ;; Hardware stack levels required when called: 13
 10305 ;; This function calls:
 10306 ;;		_EUSART_FramingErrorCallbackRegister
 10307 ;;		_EUSART_OverrunErrorCallbackRegister
 10308 ;;		_EUSART_RxCompleteCallbackRegister
 10309 ;; This function is called by:
 10310 ;;		_SYSTEM_Initialize
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314     1049                     _EUSART_Initialize:	
 10315                           ;psect for function _EUSART_Initialize
 10316                           
 10317     1049                     l6343:	
 10318                           ;incstack = 0
 10319                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10320                           
 10321                           
 10322                           ;mcc_generated_files/uart/src/eusart.c: 110:     PIE1bits.RCIE = 0;
 10323     1049  0021               	movlb	1	; select bank1
 10324     104A  1290               	bcf	16,5	;volatile
 10325     104B                     l6345:
 10326                           
 10327                           ;mcc_generated_files/uart/src/eusart.c: 111:     EUSART_RxCompleteCallbackRegister(EUSAR
      +                          T_ReceiveISR);
 10328     104B  3014               	movlw	low _EUSART_ReceiveISR
 10329     104C  0023               	movlb	3	; select bank3
 10330     104D  00BE               	movwf	EUSART_RxCompleteCallbackRegister@callbackHandler^(0+384)
 10331     104E  3013               	movlw	high _EUSART_ReceiveISR
 10332     104F  00BF               	movwf	(EUSART_RxCompleteCallbackRegister@callbackHandler^(0+384)+1)
 10333     1050  319D  2517  3190   	fcall	_EUSART_RxCompleteCallbackRegister
 10334     1053                     l6347:
 10335                           
 10336                           ;mcc_generated_files/uart/src/eusart.c: 116:     BAUD1CON = 0x48;
 10337     1053  3048               	movlw	72
 10338     1054  0023               	movlb	3	; select bank3
 10339     1055  009F               	movwf	31	;volatile
 10340     1056                     l6349:
 10341                           
 10342                           ;mcc_generated_files/uart/src/eusart.c: 118:     RC1STA = 0x90;
 10343     1056  3090               	movlw	144
 10344     1057  009D               	movwf	29	;volatile
 10345     1058                     l6351:
 10346                           
 10347                           ;mcc_generated_files/uart/src/eusart.c: 120:     TX1STA = 0x26;
 10348     1058  3026               	movlw	38
 10349     1059  009E               	movwf	30	;volatile
 10350     105A                     l6353:
 10351                           
 10352                           ;mcc_generated_files/uart/src/eusart.c: 122:     SPBRGL = 0x67;
 10353     105A  3067               	movlw	103
 10354     105B  009B               	movwf	27	;volatile
 10355     105C                     l6355:
 10356                           
 10357                           ;mcc_generated_files/uart/src/eusart.c: 124:     SPBRGH = 0x0;
 10358     105C  019C               	clrf	28	;volatile
 10359     105D                     l6357:
 10360                           
 10361                           ;mcc_generated_files/uart/src/eusart.c: 126:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 10362     105D  3019               	movlw	low _EUSART_DefaultFramingErrorCallback
 10363     105E  00BE               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+384)
 10364     105F  301C               	movlw	high _EUSART_DefaultFramingErrorCallback
 10365     1060  00BF               	movwf	(EUSART_FramingErrorCallbackRegister@callbackHandler^(0+384)+1)
 10366     1061  319D  2547  3190   	fcall	_EUSART_FramingErrorCallbackRegister
 10367     1064                     l6359:
 10368                           
 10369                           ;mcc_generated_files/uart/src/eusart.c: 127:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 10370     1064  3039               	movlw	low _EUSART_DefaultOverrunErrorCallback
 10371     1065  0023               	movlb	3	; select bank3
 10372     1066  00BE               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+384)
 10373     1067  301C               	movlw	high _EUSART_DefaultOverrunErrorCallback
 10374     1068  00BF               	movwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+384)+1)
 10375     1069  319D  2556  3190   	fcall	_EUSART_OverrunErrorCallbackRegister
 10376     106C                     l6361:
 10377                           
 10378                           ;mcc_generated_files/uart/src/eusart.c: 128:     eusartRxLastError.status = 0;
 10379     106C  0023               	movlb	3	; select bank3
 10380     106D  01B0               	clrf	_eusartRxLastError^(0+384)	;volatile
 10381     106E  01B1               	clrf	(_eusartRxLastError+1)^(0+384)	;volatile
 10382     106F                     l6363:
 10383                           
 10384                           ;mcc_generated_files/uart/src/eusart.c: 130:     eusartRxHead = 0;
 10385     106F  0022               	movlb	2	; select bank2
 10386     1070  01EA               	clrf	_eusartRxHead^(0+256)	;volatile
 10387     1071                     l6365:
 10388                           
 10389                           ;mcc_generated_files/uart/src/eusart.c: 131:     eusartRxTail = 0;
 10390     1071  01E9               	clrf	_eusartRxTail^(0+256)	;volatile
 10391     1072                     l6367:
 10392                           
 10393                           ;mcc_generated_files/uart/src/eusart.c: 132:     eusartRxCount = 0;
 10394     1072  01E8               	clrf	_eusartRxCount^(0+256)	;volatile
 10395     1073                     l6369:
 10396                           
 10397                           ;mcc_generated_files/uart/src/eusart.c: 134:     PIE1bits.RCIE = 1;
 10398     1073  0021               	movlb	1	; select bank1
 10399     1074  1690               	bsf	16,5	;volatile
 10400     1075                     l896:
 10401     1075  0008               	return
 10402     1076                     __end_of_EUSART_Initialize:
 10403                           
 10404                           	psect	text17
 10405     1D17                     __ptext17:	
 10406 ;; *************** function _EUSART_RxCompleteCallbackRegister *****************
 10407 ;; Defined at:
 10408 ;;		line 346 in file "mcc_generated_files/uart/src/eusart.c"
 10409 ;; Parameters:    Size  Location     Type
 10410 ;;  callbackHand    2    0[BANK3 ] PTR FTN()void 
 10411 ;;		 -> EUSART_ReceiveISR(1), 
 10412 ;; Auto vars:     Size  Location     Type
 10413 ;;		None
 10414 ;; Return value:  Size  Location     Type
 10415 ;;                  1    wreg      void 
 10416 ;; Registers used:
 10417 ;;		wreg, status,2, status,0
 10418 ;; Tracked objects:
 10419 ;;		On entry : 0/0
 10420 ;;		On exit  : 0/0
 10421 ;;		Unchanged: 0/0
 10422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10423 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10426 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10427 ;;Total ram usage:        2 bytes
 10428 ;; Hardware stack levels used: 1
 10429 ;; Hardware stack levels required when called: 12
 10430 ;; This function calls:
 10431 ;;		Nothing
 10432 ;; This function is called by:
 10433 ;;		_EUSART_Initialize
 10434 ;; This function uses a non-reentrant model
 10435 ;;
 10436                           
 10437     1D17                     _EUSART_RxCompleteCallbackRegister:	
 10438                           ;psect for function _EUSART_RxCompleteCallbackRegister
 10439                           
 10440     1D17                     l6219:	
 10441                           ;incstack = 0
 10442                           ; Regs used in _EUSART_RxCompleteCallbackRegister: [wreg+status,2+status,0]
 10443                           
 10444                           
 10445                           ;mcc_generated_files/uart/src/eusart.c: 346: void EUSART_RxCompleteCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 347: {;mcc_generated_
      +                          files/uart/src/eusart.c: 348:     if(((void*)0) != callbackHandler)
 10446     1D17  0023               	movlb	3	; select bank3
 10447     1D18  083E               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler^(0+384),w
 10448     1D19  043F               	iorwf	(EUSART_RxCompleteCallbackRegister@callbackHandler+1)^(0+384),w
 10449     1D1A  1903               	btfsc	3,2
 10450     1D1B  2D1D               	goto	u5471
 10451     1D1C  2D1E               	goto	u5470
 10452     1D1D                     u5471:
 10453     1D1D  2D22               	goto	l991
 10454     1D1E                     u5470:
 10455     1D1E                     l6221:
 10456                           
 10457                           ;mcc_generated_files/uart/src/eusart.c: 349:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 350:        EUSART_RxInterruptHandler = callbackHandler;
 10458     1D1E  083F               	movf	(EUSART_RxCompleteCallbackRegister@callbackHandler+1)^(0+384),w
 10459     1D1F  00BB               	movwf	(_EUSART_RxInterruptHandler+1)^(0+384)
 10460     1D20  083E               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler^(0+384),w
 10461     1D21  00BA               	movwf	_EUSART_RxInterruptHandler^(0+384)
 10462     1D22                     l991:
 10463     1D22  0008               	return
 10464     1D23                     __end_of_EUSART_RxCompleteCallbackRegister:
 10465                           
 10466                           	psect	text18
 10467     1D56                     __ptext18:	
 10468 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 10469 ;; Defined at:
 10470 ;;		line 338 in file "mcc_generated_files/uart/src/eusart.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;  callbackHand    2    0[BANK3 ] PTR FTN()void 
 10473 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;		None
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      void 
 10478 ;; Registers used:
 10479 ;;		wreg, status,2, status,0
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10485 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10489 ;;Total ram usage:        2 bytes
 10490 ;; Hardware stack levels used: 1
 10491 ;; Hardware stack levels required when called: 12
 10492 ;; This function calls:
 10493 ;;		Nothing
 10494 ;; This function is called by:
 10495 ;;		_EUSART_Initialize
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499     1D56                     _EUSART_OverrunErrorCallbackRegister:	
 10500                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 10501                           
 10502     1D56                     l6227:	
 10503                           ;incstack = 0
 10504                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 10505                           
 10506                           
 10507                           ;mcc_generated_files/uart/src/eusart.c: 338: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 339: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 340:     if(((void*)0) != callbackHandler)
 10508     1D56  0023               	movlb	3	; select bank3
 10509     1D57  083E               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+384),w
 10510     1D58  043F               	iorwf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+384),w
 10511     1D59  1903               	btfsc	3,2
 10512     1D5A  2D5C               	goto	u5491
 10513     1D5B  2D5D               	goto	u5490
 10514     1D5C                     u5491:
 10515     1D5C  2D64               	goto	l987
 10516     1D5D                     u5490:
 10517     1D5D                     l6229:
 10518                           
 10519                           ;mcc_generated_files/uart/src/eusart.c: 341:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 342:         EUSART_OverrunErrorHandler = callbackHandler;
 10520     1D5D  083F               	movf	(EUSART_OverrunErrorCallbackRegister@callbackHandler+1)^(0+384),w
 10521     1D5E  0022               	movlb	2	; select bank2
 10522     1D5F  00DA               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 10523     1D60  0023               	movlb	3	; select bank3
 10524     1D61  083E               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler^(0+384),w
 10525     1D62  0022               	movlb	2	; select bank2
 10526     1D63  00D9               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 10527     1D64                     l987:
 10528     1D64  0008               	return
 10529     1D65                     __end_of_EUSART_OverrunErrorCallbackRegister:
 10530                           
 10531                           	psect	text19
 10532     1D47                     __ptext19:	
 10533 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 10534 ;; Defined at:
 10535 ;;		line 330 in file "mcc_generated_files/uart/src/eusart.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;  callbackHand    2    0[BANK3 ] PTR FTN()void 
 10538 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;		None
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1    wreg      void 
 10543 ;; Registers used:
 10544 ;;		wreg, status,2, status,0
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10550 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10554 ;;Total ram usage:        2 bytes
 10555 ;; Hardware stack levels used: 1
 10556 ;; Hardware stack levels required when called: 12
 10557 ;; This function calls:
 10558 ;;		Nothing
 10559 ;; This function is called by:
 10560 ;;		_EUSART_Initialize
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564     1D47                     _EUSART_FramingErrorCallbackRegister:	
 10565                           ;psect for function _EUSART_FramingErrorCallbackRegister
 10566                           
 10567     1D47                     l6223:	
 10568                           ;incstack = 0
 10569                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 10570                           
 10571                           
 10572                           ;mcc_generated_files/uart/src/eusart.c: 330: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 331: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 332:     if(((void*)0) != callbackHandler)
 10573     1D47  0023               	movlb	3	; select bank3
 10574     1D48  083E               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+384),w
 10575     1D49  043F               	iorwf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+384),w
 10576     1D4A  1903               	btfsc	3,2
 10577     1D4B  2D4D               	goto	u5481
 10578     1D4C  2D4E               	goto	u5480
 10579     1D4D                     u5481:
 10580     1D4D  2D55               	goto	l983
 10581     1D4E                     u5480:
 10582     1D4E                     l6225:
 10583                           
 10584                           ;mcc_generated_files/uart/src/eusart.c: 333:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 334:         EUSART_FramingErrorHandler = callbackHandler;
 10585     1D4E  083F               	movf	(EUSART_FramingErrorCallbackRegister@callbackHandler+1)^(0+384),w
 10586     1D4F  0022               	movlb	2	; select bank2
 10587     1D50  00DC               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
 10588     1D51  0023               	movlb	3	; select bank3
 10589     1D52  083E               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler^(0+384),w
 10590     1D53  0022               	movlb	2	; select bank2
 10591     1D54  00DB               	movwf	_EUSART_FramingErrorHandler^(0+256)
 10592     1D55                     l983:
 10593     1D55  0008               	return
 10594     1D56                     __end_of_EUSART_FramingErrorCallbackRegister:
 10595                           
 10596                           	psect	text20
 10597     1CC8                     __ptext20:	
 10598 ;; *************** function _CLOCK_Initialize *****************
 10599 ;; Defined at:
 10600 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;		None
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;		None
 10605 ;; Return value:  Size  Location     Type
 10606 ;;                  1    wreg      void 
 10607 ;; Registers used:
 10608 ;;		wreg, status,2
 10609 ;; Tracked objects:
 10610 ;;		On entry : 0/0
 10611 ;;		On exit  : 0/0
 10612 ;;		Unchanged: 0/0
 10613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;Total ram usage:        0 bytes
 10619 ;; Hardware stack levels used: 1
 10620 ;; Hardware stack levels required when called: 12
 10621 ;; This function calls:
 10622 ;;		Nothing
 10623 ;; This function is called by:
 10624 ;;		_SYSTEM_Initialize
 10625 ;; This function uses a non-reentrant model
 10626 ;;
 10627                           
 10628     1CC8                     _CLOCK_Initialize:	
 10629                           ;psect for function _CLOCK_Initialize
 10630                           
 10631     1CC8                     l6265:	
 10632                           ;incstack = 0
 10633                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
 10634                           
 10635                           
 10636                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (13 << 0x3)
 10637     1CC8  306A               	movlw	106
 10638     1CC9  0021               	movlb	1	; select bank1
 10639     1CCA  0099               	movwf	25	;volatile
 10640     1CCB                     l6267:
 10641                           
 10642                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7)
 10643     1CCB  0022               	movlb	2	; select bank2
 10644     1CCC  0196               	clrf	22	;volatile
 10645     1CCD                     l6269:
 10646                           
 10647                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
 10648     1CCD  0021               	movlb	1	; select bank1
 10649     1CCE  0198               	clrf	24	;volatile
 10650     1CCF                     l384:
 10651     1CCF  0008               	return
 10652     1CD0                     __end_of_CLOCK_Initialize:
 10653                           
 10654                           	psect	text21
 10655     07F5                     __ptext21:	
 10656 ;; *************** function _CCP2_Initialize *****************
 10657 ;; Defined at:
 10658 ;;		line 50 in file "mcc_generated_files/pwm/src/ccp2.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;		None
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;		None
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1    wreg      void 
 10665 ;; Registers used:
 10666 ;;		wreg, status,2, status,0
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;Total ram usage:        0 bytes
 10677 ;; Hardware stack levels used: 1
 10678 ;; Hardware stack levels required when called: 12
 10679 ;; This function calls:
 10680 ;;		Nothing
 10681 ;; This function is called by:
 10682 ;;		_SYSTEM_Initialize
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686     07F5                     _CCP2_Initialize:	
 10687                           ;psect for function _CCP2_Initialize
 10688                           
 10689     07F5                     l6257:	
 10690                           ;incstack = 0
 10691                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0]
 10692                           
 10693                           
 10694                           ;mcc_generated_files/pwm/src/ccp2.c: 55:     CCP2CON = 0x8F;
 10695     07F5  308F               	movlw	143
 10696     07F6  0025               	movlb	5	; select bank5
 10697     07F7  009A               	movwf	26	;volatile
 10698     07F8                     l6259:
 10699                           
 10700                           ;mcc_generated_files/pwm/src/ccp2.c: 58:     CCPR2H = 0x0;
 10701     07F8  0199               	clrf	25	;volatile
 10702     07F9                     l6261:
 10703                           
 10704                           ;mcc_generated_files/pwm/src/ccp2.c: 61:     CCPR2L = 0x18;
 10705     07F9  3018               	movlw	24
 10706     07FA  0098               	movwf	24	;volatile
 10707     07FB                     l6263:
 10708                           
 10709                           ;mcc_generated_files/pwm/src/ccp2.c: 64:     CCPTMRSbits.CCP2TSEL = 0x1;
 10710     07FB  081E               	movf	30,w	;volatile
 10711     07FC  39F3               	andlw	-13
 10712     07FD  3804               	iorlw	4
 10713     07FE  009E               	movwf	30	;volatile
 10714     07FF                     l338:
 10715     07FF  0008               	return
 10716     0800                     __end_of_CCP2_Initialize:
 10717                           
 10718                           	psect	text22
 10719     1CEB                     __ptext22:	
 10720 ;; *************** function _CCP1_Initialize *****************
 10721 ;; Defined at:
 10722 ;;		line 50 in file "mcc_generated_files/pwm/src/ccp1.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;		None
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;		None
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  1    wreg      void 
 10729 ;; Registers used:
 10730 ;;		wreg, status,2, status,0
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/0
 10733 ;;		On exit  : 0/0
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;Total ram usage:        0 bytes
 10741 ;; Hardware stack levels used: 1
 10742 ;; Hardware stack levels required when called: 12
 10743 ;; This function calls:
 10744 ;;		Nothing
 10745 ;; This function is called by:
 10746 ;;		_SYSTEM_Initialize
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750     1CEB                     _CCP1_Initialize:	
 10751                           ;psect for function _CCP1_Initialize
 10752                           
 10753     1CEB                     l6253:	
 10754                           ;incstack = 0
 10755                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0]
 10756                           
 10757                           
 10758                           ;mcc_generated_files/pwm/src/ccp1.c: 55:     CCP1CON = 0x8F;
 10759     1CEB  308F               	movlw	143
 10760     1CEC  0025               	movlb	5	; select bank5
 10761     1CED  0093               	movwf	19	;volatile
 10762                           
 10763                           ;mcc_generated_files/pwm/src/ccp1.c: 58:     CCPR1H = 0x1;
 10764     1CEE  3001               	movlw	1
 10765     1CEF  0092               	movwf	18	;volatile
 10766                           
 10767                           ;mcc_generated_files/pwm/src/ccp1.c: 61:     CCPR1L = 0xFF;
 10768     1CF0  30FF               	movlw	255
 10769     1CF1  0091               	movwf	17	;volatile
 10770     1CF2                     l6255:
 10771                           
 10772                           ;mcc_generated_files/pwm/src/ccp1.c: 64:     CCPTMRSbits.CCP1TSEL = 0x0;
 10773     1CF2  30FC               	movlw	-4
 10774     1CF3  059E               	andwf	30,f	;volatile
 10775     1CF4                     l317:
 10776     1CF4  0008               	return
 10777     1CF5                     __end_of_CCP1_Initialize:
 10778                           
 10779                           	psect	text23
 10780     1D00                     __ptext23:	
 10781 ;; *************** function _ADC_Initialize *****************
 10782 ;; Defined at:
 10783 ;;		line 53 in file "mcc_generated_files/adc/src/adc.c"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;		None
 10786 ;; Auto vars:     Size  Location     Type
 10787 ;;		None
 10788 ;; Return value:  Size  Location     Type
 10789 ;;                  1    wreg      void 
 10790 ;; Registers used:
 10791 ;;		wreg, status,2
 10792 ;; Tracked objects:
 10793 ;;		On entry : 0/0
 10794 ;;		On exit  : 0/0
 10795 ;;		Unchanged: 0/0
 10796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;Total ram usage:        0 bytes
 10802 ;; Hardware stack levels used: 1
 10803 ;; Hardware stack levels required when called: 12
 10804 ;; This function calls:
 10805 ;;		Nothing
 10806 ;; This function is called by:
 10807 ;;		_SYSTEM_Initialize
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811     1D00                     _ADC_Initialize:	
 10812                           ;psect for function _ADC_Initialize
 10813                           
 10814     1D00                     l6231:	
 10815                           ;incstack = 0
 10816                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 10817                           
 10818                           
 10819                           ;mcc_generated_files/adc/src/adc.c: 56:     ADCON1 = 0x90;
 10820     1D00  3090               	movlw	144
 10821     1D01  0021               	movlb	1	; select bank1
 10822     1D02  009E               	movwf	30	;volatile
 10823     1D03                     l6233:
 10824                           
 10825                           ;mcc_generated_files/adc/src/adc.c: 59:     ADRESL = 0x0;
 10826     1D03  019B               	clrf	27	;volatile
 10827     1D04                     l6235:
 10828                           
 10829                           ;mcc_generated_files/adc/src/adc.c: 62:     ADRESH = 0x0;
 10830     1D04  019C               	clrf	28	;volatile
 10831     1D05                     l6237:
 10832                           
 10833                           ;mcc_generated_files/adc/src/adc.c: 65:     ADCON2 = 0x0;
 10834     1D05  019F               	clrf	31	;volatile
 10835     1D06                     l6239:
 10836                           
 10837                           ;mcc_generated_files/adc/src/adc.c: 68:     ADCON0 = 0x1;
 10838     1D06  3001               	movlw	1
 10839     1D07  009D               	movwf	29	;volatile
 10840     1D08                     l6241:
 10841                           
 10842                           ;mcc_generated_files/adc/src/adc.c: 71:     PIR1bits.ADIF = 0;
 10843     1D08  0020               	movlb	0	; select bank0
 10844     1D09  1310               	bcf	16,6	;volatile
 10845     1D0A                     l19:
 10846     1D0A  0008               	return
 10847     1D0B                     __end_of_ADC_Initialize:
 10848                           
 10849                           	psect	text24
 10850     1E45                     __ptext24:	
 10851 ;; *************** function _CCP2_LoadDutyValue *****************
 10852 ;; Defined at:
 10853 ;;		line 67 in file "mcc_generated_files/pwm/src/ccp2.c"
 10854 ;; Parameters:    Size  Location     Type
 10855 ;;  dutyValue       2    0[BANK3 ] unsigned short 
 10856 ;; Auto vars:     Size  Location     Type
 10857 ;;		None
 10858 ;; Return value:  Size  Location     Type
 10859 ;;                  1    wreg      void 
 10860 ;; Registers used:
 10861 ;;		wreg, status,2
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10867 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10870 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
 10871 ;;Total ram usage:        2 bytes
 10872 ;; Hardware stack levels used: 1
 10873 ;; Hardware stack levels required when called: 12
 10874 ;; This function calls:
 10875 ;;		Nothing
 10876 ;; This function is called by:
 10877 ;;		_main
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881     1E45                     _CCP2_LoadDutyValue:	
 10882                           ;psect for function _CCP2_LoadDutyValue
 10883                           
 10884     1E45                     l6427:	
 10885                           ;incstack = 0
 10886                           ; Regs used in _CCP2_LoadDutyValue: [wreg+status,2]
 10887                           
 10888                           
 10889                           ;mcc_generated_files/pwm/src/ccp2.c: 67: void CCP2_LoadDutyValue(uint16_t dutyValue);mcc
      +                          _generated_files/pwm/src/ccp2.c: 68: {;mcc_generated_files/pwm/src/ccp2.c: 69:    dutyVa
      +                          lue &= 0x03FF;
 10890     1E45  30FF               	movlw	255
 10891     1E46  0023               	movlb	3	; select bank3
 10892     1E47  05BE               	andwf	CCP2_LoadDutyValue@dutyValue^(0+384),f
 10893     1E48  3003               	movlw	3
 10894     1E49  05BF               	andwf	(CCP2_LoadDutyValue@dutyValue+1)^(0+384),f
 10895     1E4A                     l6429:
 10896                           
 10897                           ;mcc_generated_files/pwm/src/ccp2.c: 72:     if(CCP2CONbits.FMT)
 10898     1E4A  0025               	movlb	5	; select bank5
 10899     1E4B  1E1A               	btfss	26,4	;volatile
 10900     1E4C  2E4E               	goto	u5501
 10901     1E4D  2E4F               	goto	u5500
 10902     1E4E                     u5501:
 10903     1E4E  2E55               	goto	l6433
 10904     1E4F                     u5500:
 10905     1E4F                     l6431:
 10906                           
 10907                           ;mcc_generated_files/pwm/src/ccp2.c: 73:     {;mcc_generated_files/pwm/src/ccp2.c: 74:  
      +                                 dutyValue <<= 6;
 10908     1E4F  3006               	movlw	6
 10909     1E50  0023               	movlb	3	; select bank3
 10910     1E51                     u5515:
 10911     1E51  35BE               	lslf	CCP2_LoadDutyValue@dutyValue^(0+384),f
 10912     1E52  0DBF               	rlf	(CCP2_LoadDutyValue@dutyValue+1)^(0+384),f
 10913     1E53  0B89               	decfsz	9,f
 10914     1E54  2E51               	goto	u5515
 10915     1E55                     l6433:
 10916                           
 10917                           ;mcc_generated_files/pwm/src/ccp2.c: 75:         CCPR2H = (uint8_t)(dutyValue >> 8);
 10918     1E55  0023               	movlb	3	; select bank3
 10919     1E56  083F               	movf	(CCP2_LoadDutyValue@dutyValue+1)^(0+384),w
 10920     1E57  0025               	movlb	5	; select bank5
 10921     1E58  0099               	movwf	25	;volatile
 10922     1E59                     l6435:
 10923                           
 10924                           ;mcc_generated_files/pwm/src/ccp2.c: 76:         CCPR2L = (uint8_t)dutyValue;
 10925     1E59  0023               	movlb	3	; select bank3
 10926     1E5A  083E               	movf	CCP2_LoadDutyValue@dutyValue^(0+384),w
 10927     1E5B  0025               	movlb	5	; select bank5
 10928     1E5C  0098               	movwf	24	;volatile
 10929     1E5D                     l343:	
 10930                           ;mcc_generated_files/pwm/src/ccp2.c: 77:     }
 10931                           
 10932     1E5D  0008               	return
 10933     1E5E                     __end_of_CCP2_LoadDutyValue:
 10934                           
 10935                           	psect	intentry
 10936     0004                     __pintentry:	
 10937 ;; *************** function _INTERRUPT_InterruptManager *****************
 10938 ;; Defined at:
 10939 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;		None
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;		None
 10944 ;; Return value:  Size  Location     Type
 10945 ;;                  1    wreg      void 
 10946 ;; Registers used:
 10947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10948 ;; Tracked objects:
 10949 ;;		On entry : 0/0
 10950 ;;		On exit  : 0/0
 10951 ;;		Unchanged: 0/0
 10952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;Total ram usage:        0 bytes
 10958 ;; Hardware stack levels used: 1
 10959 ;; Hardware stack levels required when called: 11
 10960 ;; This function calls:
 10961 ;;		NULL
 10962 ;;		_EUSART_ReceiveISR
 10963 ;;		_I2C1_ERROR_ISR
 10964 ;;		_I2C1_ISR
 10965 ;;		_Timer0_OverflowISR
 10966 ;; This function is called by:
 10967 ;;		Interrupt level 1
 10968 ;; This function uses a non-reentrant model
 10969 ;;
 10970                           
 10971     0004                     _INTERRUPT_InterruptManager:
 10972                           
 10973                           ;incstack = 0
 10974     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 10975                           
 10976                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10977     0005  3180               	pagesel	$
 10978     0006                     i1l6021:
 10979                           
 10980                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 10981     0006  1F0B               	btfss	11,6	;volatile
 10982     0007  2809               	goto	u530_21
 10983     0008  280A               	goto	u530_20
 10984     0009                     u530_21:
 10985     0009  283F               	goto	i1l513
 10986     000A                     u530_20:
 10987     000A                     i1l6023:
 10988                           
 10989                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 10990     000A  0021               	movlb	1	; select bank1
 10991     000B  1D90               	btfss	16,3	;volatile
 10992     000C  280E               	goto	u531_21
 10993     000D  280F               	goto	u531_20
 10994     000E                     u531_21:
 10995     000E  2817               	goto	i1l6029
 10996     000F                     u531_20:
 10997     000F                     i1l6025:
 10998     000F  0020               	movlb	0	; select bank0
 10999     0010  1D90               	btfss	16,3	;volatile
 11000     0011  2813               	goto	u532_21
 11001     0012  2814               	goto	u532_20
 11002     0013                     u532_21:
 11003     0013  2817               	goto	i1l6029
 11004     0014                     u532_20:
 11005     0014                     i1l6027:
 11006                           
 11007                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             I2C1_ISR();
 11008     0014  319C  2459  3180   	fcall	_I2C1_ISR
 11009     0017                     i1l6029:
 11010                           
 11011                           ;mcc_generated_files/system/src/interrupt.c: 68:         if(PIE1bits.RCIE == 1 && PIR1bi
      +                          ts.RCIF == 1)
 11012     0017  0021               	movlb	1	; select bank1
 11013     0018  1E90               	btfss	16,5	;volatile
 11014     0019  281B               	goto	u533_21
 11015     001A  281C               	goto	u533_20
 11016     001B                     u533_21:
 11017     001B  2827               	goto	i1l6035
 11018     001C                     u533_20:
 11019     001C                     i1l6031:
 11020     001C  0020               	movlb	0	; select bank0
 11021     001D  1E90               	btfss	16,5	;volatile
 11022     001E  2820               	goto	u534_21
 11023     001F  2821               	goto	u534_20
 11024     0020                     u534_21:
 11025     0020  2827               	goto	i1l6035
 11026     0021                     u534_20:
 11027     0021                     i1l6033:
 11028                           
 11029                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_RxInterruptHandler();
 11030     0021  0023               	movlb	3	; select bank3
 11031     0022  083B               	movf	(_EUSART_RxInterruptHandler+1)^(0+384),w
 11032     0023  008A               	movwf	10
 11033     0024  083A               	movf	_EUSART_RxInterruptHandler^(0+384),w
 11034     0025  000A               	callw
 11035     0026  3180               	pagesel	$
 11036     0027                     i1l6035:
 11037                           
 11038                           ;mcc_generated_files/system/src/interrupt.c: 72:         if(PIE2bits.BCL1IE == 1 && PIR2
      +                          bits.BCL1IF == 1)
 11039     0027  0021               	movlb	1	; select bank1
 11040     0028  1D91               	btfss	17,3	;volatile
 11041     0029  282B               	goto	u535_21
 11042     002A  282C               	goto	u535_20
 11043     002B                     u535_21:
 11044     002B  2834               	goto	i1l6041
 11045     002C                     u535_20:
 11046     002C                     i1l6037:
 11047     002C  0020               	movlb	0	; select bank0
 11048     002D  1D91               	btfss	17,3	;volatile
 11049     002E  2830               	goto	u536_21
 11050     002F  2831               	goto	u536_20
 11051     0030                     u536_21:
 11052     0030  2834               	goto	i1l6041
 11053     0031                     u536_20:
 11054     0031                     i1l6039:
 11055                           
 11056                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             I2C1_ERROR_ISR();
 11057     0031  319C  2455  3180   	fcall	_I2C1_ERROR_ISR
 11058     0034                     i1l6041:
 11059                           
 11060                           ;mcc_generated_files/system/src/interrupt.c: 76:         if(INTCONbits.TMR0IE == 1 && IN
      +                          TCONbits.TMR0IF == 1)
 11061     0034  1E8B               	btfss	11,5	;volatile
 11062     0035  2837               	goto	u537_21
 11063     0036  2838               	goto	u537_20
 11064     0037                     u537_21:
 11065     0037  283F               	goto	i1l513
 11066     0038                     u537_20:
 11067     0038                     i1l6043:
 11068     0038  1D0B               	btfss	11,2	;volatile
 11069     0039  283B               	goto	u538_21
 11070     003A  283C               	goto	u538_20
 11071     003B                     u538_21:
 11072     003B  283F               	goto	i1l513
 11073     003C                     u538_20:
 11074     003C                     i1l6045:
 11075                           
 11076                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             Timer0_OverflowISR();
 11077     003C  3190  2000  3180   	fcall	_Timer0_OverflowISR
 11078     003F                     i1l513:
 11079     003F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11080     0040  0009               	retfie
 11081     0041                     __end_of_INTERRUPT_InterruptManager:
 11082                           
 11083                           	psect	text26
 11084     1000                     __ptext26:	
 11085 ;; *************** function _Timer0_OverflowISR *****************
 11086 ;; Defined at:
 11087 ;;		line 99 in file "mcc_generated_files/timer/src/tmr0.c"
 11088 ;; Parameters:    Size  Location     Type
 11089 ;;		None
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;		None
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  1    wreg      void 
 11094 ;; Registers used:
 11095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11105 ;;Total ram usage:        0 bytes
 11106 ;; Hardware stack levels used: 1
 11107 ;; Hardware stack levels required when called: 10
 11108 ;; This function calls:
 11109 ;;		NULL
 11110 ;;		_TMR1_DefaultOverflowCallback
 11111 ;;		_TMR2_DefaultOverflowCallback
 11112 ;;		_TMR4_DefaultOverflowCallback
 11113 ;;		_Timer0_DefaultOverflowCallback
 11114 ;; This function is called by:
 11115 ;;		_INTERRUPT_InterruptManager
 11116 ;; This function uses a non-reentrant model
 11117 ;;
 11118                           
 11119     1000                     _Timer0_OverflowISR:	
 11120                           ;psect for function _Timer0_OverflowISR
 11121                           
 11122     1000                     i1l5839:	
 11123                           ;incstack = 0
 11124                           ; Regs used in _Timer0_OverflowISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11125                           
 11126                           
 11127                           ;mcc_generated_files/timer/src/tmr0.c: 101:   static volatile uint16_t CountCallBack = 0
      +                          ;;mcc_generated_files/timer/src/tmr0.c: 104:   INTCONbits.TMR0IF = 0;
 11128     1000  110B               	bcf	11,2	;volatile
 11129     1001                     i1l5841:
 11130                           
 11131                           ;mcc_generated_files/timer/src/tmr0.c: 106:   TMR0 = timer0ReloadVal;
 11132     1001  0022               	movlb	2	; select bank2
 11133     1002  086B               	movf	_timer0ReloadVal^(0+256),w	;volatile
 11134     1003  0020               	movlb	0	; select bank0
 11135     1004  0095               	movwf	21	;volatile
 11136                           
 11137                           ;mcc_generated_files/timer/src/tmr0.c: 109:   if (++CountCallBack >= 100)
 11138     1005  3001               	movlw	1
 11139     1006  0022               	movlb	2	; select bank2
 11140     1007  07DF               	addwf	Timer0_OverflowISR@CountCallBack^(0+256),f	;volatile
 11141     1008  3000               	movlw	0
 11142     1009  3DE0               	addwfc	(Timer0_OverflowISR@CountCallBack+1)^(0+256),f	;volatile
 11143     100A  3000               	movlw	0
 11144     100B  0260               	subwf	(Timer0_OverflowISR@CountCallBack+1)^(0+256),w	;volatile
 11145     100C  3064               	movlw	100
 11146     100D  1903               	skipnz
 11147     100E  025F               	subwf	Timer0_OverflowISR@CountCallBack^(0+256),w	;volatile
 11148     100F  1C03               	skipc
 11149     1010  2812               	goto	u514_21
 11150     1011  2813               	goto	u514_20
 11151     1012                     u514_21:
 11152     1012  2821               	goto	i1l646
 11153     1013                     u514_20:
 11154     1013                     i1l5843:
 11155                           
 11156                           ;mcc_generated_files/timer/src/tmr0.c: 110:   {;mcc_generated_files/timer/src/tmr0.c: 11
      +                          2:     if(Timer0_OverflowCallback)
 11157     1013  0861               	movf	_Timer0_OverflowCallback^(0+256),w
 11158     1014  0462               	iorwf	(_Timer0_OverflowCallback+1)^(0+256),w
 11159     1015  1903               	btfsc	3,2
 11160     1016  2818               	goto	u515_21
 11161     1017  2819               	goto	u515_20
 11162     1018                     u515_21:
 11163     1018  281E               	goto	i1l5847
 11164     1019                     u515_20:
 11165     1019                     i1l5845:
 11166                           
 11167                           ;mcc_generated_files/timer/src/tmr0.c: 113:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          114:       Timer0_OverflowCallback();
 11168     1019  0862               	movf	(_Timer0_OverflowCallback+1)^(0+256),w
 11169     101A  008A               	movwf	10
 11170     101B  0861               	movf	_Timer0_OverflowCallback^(0+256),w
 11171     101C  000A               	callw
 11172     101D  3190               	pagesel	$
 11173     101E                     i1l5847:
 11174                           
 11175                           ;mcc_generated_files/timer/src/tmr0.c: 117:       CountCallBack = 0;
 11176     101E  0022               	movlb	2	; select bank2
 11177     101F  01DF               	clrf	Timer0_OverflowISR@CountCallBack^(0+256)	;volatile
 11178     1020  01E0               	clrf	(Timer0_OverflowISR@CountCallBack+1)^(0+256)	;volatile
 11179     1021                     i1l646:
 11180     1021  0008               	return
 11181     1022                     __end_of_Timer0_OverflowISR:
 11182                           
 11183                           	psect	text27
 11184     0002                     __ptext27:	
 11185 ;; *************** function _TMR4_DefaultOverflowCallback *****************
 11186 ;; Defined at:
 11187 ;;		line 127 in file "mcc_generated_files/timer/src/tmr4.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;		None
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;		None
 11192 ;; Return value:  Size  Location     Type
 11193 ;;                  1    wreg      void 
 11194 ;; Registers used:
 11195 ;;		None
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11205 ;;Total ram usage:        0 bytes
 11206 ;; Hardware stack levels used: 1
 11207 ;; This function calls:
 11208 ;;		Nothing
 11209 ;; This function is called by:
 11210 ;;		_TMR4_Initialize
 11211 ;;		_Timer0_OverflowISR
 11212 ;;		_TMR2_Tasks
 11213 ;;		_TMR1_Tasks
 11214 ;;		_TMR4_Tasks
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218     0002                     _TMR4_DefaultOverflowCallback:	
 11219                           ;psect for function _TMR4_DefaultOverflowCallback
 11220                           
 11221     0002                     i1l805:	
 11222                           ;incstack = 0
 11223                           ; Regs used in _TMR4_DefaultOverflowCallback: []
 11224                           
 11225     0002  0008               	return
 11226     0003                     __end_of_TMR4_DefaultOverflowCallback:
 11227                           
 11228                           	psect	text28
 11229     1C1D                     __ptext28:	
 11230 ;; *************** function _TMR1_DefaultOverflowCallback *****************
 11231 ;; Defined at:
 11232 ;;		line 155 in file "mcc_generated_files/timer/src/tmr1.c"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;		None
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;		None
 11237 ;; Return value:  Size  Location     Type
 11238 ;;                  1    wreg      void 
 11239 ;; Registers used:
 11240 ;;		None
 11241 ;; Tracked objects:
 11242 ;;		On entry : 0/0
 11243 ;;		On exit  : 0/0
 11244 ;;		Unchanged: 0/0
 11245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;Total ram usage:        0 bytes
 11251 ;; Hardware stack levels used: 1
 11252 ;; This function calls:
 11253 ;;		Nothing
 11254 ;; This function is called by:
 11255 ;;		_TMR1_Initialize
 11256 ;;		_Timer0_OverflowISR
 11257 ;;		_TMR2_Tasks
 11258 ;;		_TMR1_Tasks
 11259 ;;		_TMR4_Tasks
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           
 11263     1C1D                     _TMR1_DefaultOverflowCallback:	
 11264                           ;psect for function _TMR1_DefaultOverflowCallback
 11265                           
 11266     1C1D                     i1l723:	
 11267                           ;incstack = 0
 11268                           ; Regs used in _TMR1_DefaultOverflowCallback: []
 11269                           
 11270     1C1D  0008               	return
 11271     1C1E                     __end_of_TMR1_DefaultOverflowCallback:
 11272                           
 11273                           	psect	text29
 11274     1C1C                     __ptext29:	
 11275 ;; *************** function _TMR2_DefaultOverflowCallback *****************
 11276 ;; Defined at:
 11277 ;;		line 127 in file "mcc_generated_files/timer/src/tmr2.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;		None
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;		None
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  1    wreg      void 
 11284 ;; Registers used:
 11285 ;;		None
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11295 ;;Total ram usage:        0 bytes
 11296 ;; Hardware stack levels used: 1
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_TMR2_Initialize
 11301 ;;		_Timer0_OverflowISR
 11302 ;;		_TMR2_Tasks
 11303 ;;		_TMR1_Tasks
 11304 ;;		_TMR4_Tasks
 11305 ;; This function uses a non-reentrant model
 11306 ;;
 11307                           
 11308     1C1C                     _TMR2_DefaultOverflowCallback:	
 11309                           ;psect for function _TMR2_DefaultOverflowCallback
 11310                           
 11311     1C1C                     i1l598:	
 11312                           ;incstack = 0
 11313                           ; Regs used in _TMR2_DefaultOverflowCallback: []
 11314                           
 11315     1C1C  0008               	return
 11316     1C1D                     __end_of_TMR2_DefaultOverflowCallback:
 11317                           
 11318                           	psect	text30
 11319     1C5D                     __ptext30:	
 11320 ;; *************** function _Timer0_DefaultOverflowCallback *****************
 11321 ;; Defined at:
 11322 ;;		line 126 in file "mcc_generated_files/timer/src/tmr0.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;		None
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;		None
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      void 
 11329 ;; Registers used:
 11330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;Total ram usage:        0 bytes
 11341 ;; Hardware stack levels used: 1
 11342 ;; Hardware stack levels required when called: 9
 11343 ;; This function calls:
 11344 ;;		_TMR0_Custom_ISR
 11345 ;; This function is called by:
 11346 ;;		_Timer0_Initialize
 11347 ;;		_Timer0_OverflowISR
 11348 ;;		_TMR2_Tasks
 11349 ;;		_TMR1_Tasks
 11350 ;;		_TMR4_Tasks
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354     1C5D                     _Timer0_DefaultOverflowCallback:	
 11355                           ;psect for function _Timer0_DefaultOverflowCallback
 11356                           
 11357     1C5D                     i1l5797:	
 11358                           ;incstack = 0
 11359                           ; Regs used in _Timer0_DefaultOverflowCallback: [wreg-fsr1h+status,2+status,0+pclath+cst
      +                          ack]
 11360                           
 11361                           
 11362                           ;mcc_generated_files/timer/src/tmr0.c: 130:     TMR0_Custom_ISR();
 11363     1C5D  318A  2201  319C   	fcall	_TMR0_Custom_ISR
 11364     1C60                     i1l652:
 11365     1C60  0008               	return
 11366     1C61                     __end_of_Timer0_DefaultOverflowCallback:
 11367                           
 11368                           	psect	text31
 11369     0A01                     __ptext31:	
 11370 ;; *************** function _TMR0_Custom_ISR *****************
 11371 ;; Defined at:
 11372 ;;		line 319 in file "main.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;		None
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;  buffer         16   19[BANK2 ] unsigned char [16]
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  1    wreg      void 
 11379 ;; Registers used:
 11380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11387 ;;      Locals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0
 11388 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 11389 ;;      Totals:         0       0       0      26       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;Total ram usage:       26 bytes
 11391 ;; Hardware stack levels used: 1
 11392 ;; Hardware stack levels required when called: 8
 11393 ;; This function calls:
 11394 ;;		_ADC_GetConversion
 11395 ;;		_Backlight
 11396 ;;		_LCD_Clear
 11397 ;;		_LCD_Set_Cursor
 11398 ;;		_LCD_Write_String
 11399 ;;		_TMR1_Start
 11400 ;;		_TMR1_Stop
 11401 ;;		___fldiv
 11402 ;;		___flge
 11403 ;;		___flmul
 11404 ;;		___xxtofl
 11405 ;;		_sprintf
 11406 ;; This function is called by:
 11407 ;;		_Timer0_DefaultOverflowCallback
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411     0A01                     _TMR0_Custom_ISR:	
 11412                           ;psect for function _TMR0_Custom_ISR
 11413                           
 11414     0A01                     i1l5509:	
 11415                           ;incstack = 0
 11416                           ; Regs used in _TMR0_Custom_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11417                           
 11418                           
 11419                           ;main.c: 321:     char buffer[16];;main.c: 323:     LCD_Clear();
 11420     0A01  319C  24D0  318A   	fcall	_LCD_Clear
 11421     0A04                     i1l5511:
 11422                           
 11423                           ;main.c: 324:     LCD_Set_Cursor(1, 1);
 11424     0A04  01F6               	clrf	LCD_Set_Cursor@COL
 11425     0A05  0AF6               	incf	LCD_Set_Cursor@COL,f
 11426     0A06  3001               	movlw	1
 11427     0A07  319F  27DA  318A   	fcall	_LCD_Set_Cursor
 11428     0A0A                     i1l5513:
 11429                           
 11430                           ;main.c: 325:     Backlight();
 11431     0A0A  319C  24B0  318A   	fcall	_Backlight
 11432                           
 11433                           ;main.c: 326:     LCD_Write_String(" TMR0 ..");
 11434     0A0D  30CE               	movlw	low (STR_4| (0+32768))
 11435     0A0E  00F6               	movwf	LCD_Write_String@Str
 11436     0A0F  3098               	movlw	high (STR_4| (0+32768))
 11437     0A10  00F7               	movwf	LCD_Write_String@Str+1
 11438     0A11  319E  26AE  318A   	fcall	_LCD_Write_String
 11439                           
 11440                           ;main.c: 327:     LCD_Set_Cursor(2, 1);
 11441     0A14  01F6               	clrf	LCD_Set_Cursor@COL
 11442     0A15  0AF6               	incf	LCD_Set_Cursor@COL,f
 11443     0A16  3002               	movlw	2
 11444     0A17  319F  27DA  318A   	fcall	_LCD_Set_Cursor
 11445                           
 11446                           ;main.c: 328:     LCD_Write_String(" .. Interrupt");
 11447     0A1A  308F               	movlw	low (STR_2| (0+32768))
 11448     0A1B  00F6               	movwf	LCD_Write_String@Str
 11449     0A1C  3098               	movlw	high (STR_2| (0+32768))
 11450     0A1D  00F7               	movwf	LCD_Write_String@Str+1
 11451     0A1E  319E  26AE  318A   	fcall	_LCD_Write_String
 11452     0A21                     i1l5515:
 11453                           
 11454                           ;main.c: 329:     _delay((unsigned long)((1000)*(4000000/4000.0)));
 11455     0A21  3006               	movlw	6
 11456     0A22  0022               	movlb	2	; select bank2
 11457     0A23  00AE               	movwf	(??_TMR0_Custom_ISR^(0+256)+1)
 11458     0A24  3013               	movlw	19
 11459     0A25  00AD               	movwf	??_TMR0_Custom_ISR^(0+256)
 11460     0A26  30AD               	movlw	173
 11461     0A27                     u566_27:
 11462     0A27  0B89               	decfsz	9,f
 11463     0A28  2A27               	goto	u566_27
 11464     0A29  0BAD               	decfsz	??_TMR0_Custom_ISR^(0+256),f
 11465     0A2A  2A27               	goto	u566_27
 11466     0A2B  0BAE               	decfsz	(??_TMR0_Custom_ISR^(0+256)+1),f
 11467     0A2C  2A27               	goto	u566_27
 11468     0A2D  3200               	nop2
 11469     0A2E                     i1l5517:
 11470                           
 11471                           ;main.c: 331:     TMR1H = 0x00;
 11472     0A2E  0020               	movlb	0	; select bank0
 11473     0A2F  0197               	clrf	23	;volatile
 11474     0A30                     i1l5519:
 11475                           
 11476                           ;main.c: 332:     TMR1L = 0x00;
 11477     0A30  0196               	clrf	22	;volatile
 11478     0A31                     i1l5521:
 11479     0A31  0022               	movlb	2	; select bank2
 11480     0A32  150E               	bsf	14,2	;volatile
 11481     0A33                     i1l5523:
 11482                           
 11483                           ;main.c: 335:     _delay((unsigned long)((10)*(4000000/4000000.0)));
 11484     0A33  3003               	movlw	3
 11485     0A34                     u567_27:
 11486     0A34  0B89               	decfsz	9,f
 11487     0A35  2A34               	goto	u567_27
 11488     0A36  0000               	nop
 11489     0A37                     i1l5525:
 11490     0A37  0022               	movlb	2	; select bank2
 11491     0A38  110E               	bcf	14,2	;volatile
 11492     0A39                     i1l1192:
 11493     0A39  0020               	movlb	0	; select bank0
 11494     0A3A  1C8E               	btfss	14,1	;volatile
 11495     0A3B  2A3D               	goto	u501_21
 11496     0A3C  2A3E               	goto	u501_20
 11497     0A3D                     u501_21:
 11498     0A3D  2A39               	goto	i1l1192
 11499     0A3E                     u501_20:
 11500     0A3E                     i1l5527:
 11501                           
 11502                           ;main.c: 340:     TMR1_Start();
 11503     0A3E  319C  2433  318A   	fcall	_TMR1_Start
 11504     0A41                     i1l1195:	
 11505                           ;main.c: 342:     while(PORTCbits.RC1 == 1);
 11506                           
 11507     0A41  0020               	movlb	0	; select bank0
 11508     0A42  188E               	btfsc	14,1	;volatile
 11509     0A43  2A45               	goto	u502_21
 11510     0A44  2A46               	goto	u502_20
 11511     0A45                     u502_21:
 11512     0A45  2A41               	goto	i1l1195
 11513     0A46                     u502_20:
 11514     0A46                     i1l5529:
 11515                           
 11516                           ;main.c: 344:     TMR1_Stop();
 11517     0A46  319C  2436  318A   	fcall	_TMR1_Stop
 11518     0A49                     i1l5531:
 11519                           
 11520                           ;main.c: 346:     distance = ((double)((TMR1H<<8) + TMR1L))/58.82;
 11521     0A49  3042               	movlw	66
 11522     0A4A  0020               	movlb	0	; select bank0
 11523     0A4B  00C3               	movwf	___fldiv@a+3
 11524     0A4C  306B               	movlw	107
 11525     0A4D  00C2               	movwf	___fldiv@a+2
 11526     0A4E  3047               	movlw	71
 11527     0A4F  00C1               	movwf	___fldiv@a+1
 11528     0A50  30AE               	movlw	174
 11529     0A51  00C0               	movwf	___fldiv@a
 11530     0A52  0816               	movf	22,w	;volatile
 11531     0A53  0022               	movlb	2	; select bank2
 11532     0A54  00AD               	movwf	??_TMR0_Custom_ISR^(0+256)
 11533     0A55  01AE               	clrf	(??_TMR0_Custom_ISR^(0+256)+1)
 11534     0A56  0020               	movlb	0	; select bank0
 11535     0A57  0817               	movf	23,w	;volatile
 11536     0A58  0022               	movlb	2	; select bank2
 11537     0A59  00AF               	movwf	(??_TMR0_Custom_ISR+2)^(0+256)
 11538     0A5A  01B0               	clrf	((??_TMR0_Custom_ISR+2)^(0+256)+1)
 11539     0A5B  082F               	movf	(??_TMR0_Custom_ISR+2)^(0+256),w
 11540     0A5C  00B0               	movwf	((??_TMR0_Custom_ISR+2)^(0+256)+1)
 11541     0A5D  01AF               	clrf	(??_TMR0_Custom_ISR+2)^(0+256)
 11542     0A5E  082D               	movf	??_TMR0_Custom_ISR^(0+256),w
 11543     0A5F  072F               	addwf	(??_TMR0_Custom_ISR+2)^(0+256),w
 11544     0A60  00F4               	movwf	___xxtofl@val
 11545     0A61  082E               	movf	(??_TMR0_Custom_ISR+1)^(0+256),w
 11546     0A62  3D30               	addwfc	(??_TMR0_Custom_ISR+3)^(0+256),w
 11547     0A63  00F5               	movwf	___xxtofl@val+1
 11548     0A64  01F6               	clrf	___xxtofl@val+2
 11549     0A65  1BF5               	btfsc	___xxtofl@val+1,7
 11550     0A66  03F6               	decf	___xxtofl@val+2,f
 11551     0A67  0876               	movf	___xxtofl@val+2,w
 11552     0A68  00F7               	movwf	___xxtofl@val+3
 11553     0A69  3001               	movlw	1
 11554     0A6A  3195  2517  318A   	fcall	___xxtofl
 11555     0A6D  0877               	movf	?___xxtofl+3,w
 11556     0A6E  0020               	movlb	0	; select bank0
 11557     0A6F  00C7               	movwf	___fldiv@b+3
 11558     0A70  0876               	movf	?___xxtofl+2,w
 11559     0A71  00C6               	movwf	___fldiv@b+2
 11560     0A72  0875               	movf	?___xxtofl+1,w
 11561     0A73  00C5               	movwf	___fldiv@b+1
 11562     0A74  0874               	movf	?___xxtofl,w
 11563     0A75  00C4               	movwf	___fldiv@b
 11564     0A76  3188  2057  318A   	fcall	___fldiv
 11565     0A79  0020               	movlb	0	; select bank0
 11566     0A7A  0843               	movf	?___fldiv+3,w
 11567     0A7B  0023               	movlb	3	; select bank3
 11568     0A7C  00AF               	movwf	(_distance+3)^(0+384)
 11569     0A7D  0020               	movlb	0	; select bank0
 11570     0A7E  0842               	movf	?___fldiv+2,w
 11571     0A7F  0023               	movlb	3	; select bank3
 11572     0A80  00AE               	movwf	(_distance+2)^(0+384)
 11573     0A81  0020               	movlb	0	; select bank0
 11574     0A82  0841               	movf	?___fldiv+1,w
 11575     0A83  0023               	movlb	3	; select bank3
 11576     0A84  00AD               	movwf	(_distance+1)^(0+384)
 11577     0A85  0020               	movlb	0	; select bank0
 11578     0A86  0840               	movf	?___fldiv,w
 11579     0A87  0023               	movlb	3	; select bank3
 11580     0A88  00AC               	movwf	_distance^(0+384)
 11581     0A89                     i1l5533:
 11582                           
 11583                           ;main.c: 347:     if(distance >= 2 && distance <= 400)
 11584     0A89  082F               	movf	(_distance+3)^(0+384),w
 11585     0A8A  0020               	movlb	0	; select bank0
 11586     0A8B  00C3               	movwf	___flge@ff1+3
 11587     0A8C  0023               	movlb	3	; select bank3
 11588     0A8D  082E               	movf	(_distance+2)^(0+384),w
 11589     0A8E  0020               	movlb	0	; select bank0
 11590     0A8F  00C2               	movwf	___flge@ff1+2
 11591     0A90  0023               	movlb	3	; select bank3
 11592     0A91  082D               	movf	(_distance+1)^(0+384),w
 11593     0A92  0020               	movlb	0	; select bank0
 11594     0A93  00C1               	movwf	___flge@ff1+1
 11595     0A94  0023               	movlb	3	; select bank3
 11596     0A95  082C               	movf	_distance^(0+384),w
 11597     0A96  0020               	movlb	0	; select bank0
 11598     0A97  00C0               	movwf	___flge@ff1
 11599     0A98  3040               	movlw	64
 11600     0A99  00C7               	movwf	___flge@ff2+3
 11601     0A9A  3000               	movlw	0
 11602     0A9B  00C6               	movwf	___flge@ff2+2
 11603     0A9C  3000               	movlw	0
 11604     0A9D  00C5               	movwf	___flge@ff2+1
 11605     0A9E  3000               	movlw	0
 11606     0A9F  00C4               	movwf	___flge@ff2
 11607     0AA0  3194  248C  318A   	fcall	___flge
 11608     0AA3  1C03               	btfss	3,0
 11609     0AA4  2AA6               	goto	u503_21
 11610     0AA5  2AA7               	goto	u503_20
 11611     0AA6                     u503_21:
 11612     0AA6  2AF1               	goto	i1l5545
 11613     0AA7                     u503_20:
 11614     0AA7                     i1l5535:
 11615     0AA7  3043               	movlw	67
 11616     0AA8  0020               	movlb	0	; select bank0
 11617     0AA9  00C3               	movwf	___flge@ff1+3
 11618     0AAA  30C8               	movlw	200
 11619     0AAB  00C2               	movwf	___flge@ff1+2
 11620     0AAC  3000               	movlw	0
 11621     0AAD  00C1               	movwf	___flge@ff1+1
 11622     0AAE  3000               	movlw	0
 11623     0AAF  00C0               	movwf	___flge@ff1
 11624     0AB0  0023               	movlb	3	; select bank3
 11625     0AB1  082F               	movf	(_distance+3)^(0+384),w
 11626     0AB2  0020               	movlb	0	; select bank0
 11627     0AB3  00C7               	movwf	___flge@ff2+3
 11628     0AB4  0023               	movlb	3	; select bank3
 11629     0AB5  082E               	movf	(_distance+2)^(0+384),w
 11630     0AB6  0020               	movlb	0	; select bank0
 11631     0AB7  00C6               	movwf	___flge@ff2+2
 11632     0AB8  0023               	movlb	3	; select bank3
 11633     0AB9  082D               	movf	(_distance+1)^(0+384),w
 11634     0ABA  0020               	movlb	0	; select bank0
 11635     0ABB  00C5               	movwf	___flge@ff2+1
 11636     0ABC  0023               	movlb	3	; select bank3
 11637     0ABD  082C               	movf	_distance^(0+384),w
 11638     0ABE  0020               	movlb	0	; select bank0
 11639     0ABF  00C4               	movwf	___flge@ff2
 11640     0AC0  3194  248C  318A   	fcall	___flge
 11641     0AC3  1C03               	btfss	3,0
 11642     0AC4  2AC6               	goto	u504_21
 11643     0AC5  2AC7               	goto	u504_20
 11644     0AC6                     u504_21:
 11645     0AC6  2AF1               	goto	i1l5545
 11646     0AC7                     u504_20:
 11647     0AC7                     i1l5537:
 11648                           
 11649                           ;main.c: 348:     {;main.c: 349:         LCD_Clear();
 11650     0AC7  319C  24D0  318A   	fcall	_LCD_Clear
 11651     0ACA                     i1l5539:
 11652                           
 11653                           ;main.c: 350:         LCD_Set_Cursor(1, 1);
 11654     0ACA  01F6               	clrf	LCD_Set_Cursor@COL
 11655     0ACB  0AF6               	incf	LCD_Set_Cursor@COL,f
 11656     0ACC  3001               	movlw	1
 11657     0ACD  319F  27DA  318A   	fcall	_LCD_Set_Cursor
 11658     0AD0                     i1l5541:
 11659                           
 11660                           ;main.c: 351:         sprintf(buffer, "Dist.: %.2f cm", distance);
 11661     0AD0  3072               	movlw	low (STR_6| (0+32768))
 11662     0AD1  0021               	movlb	1	; select bank1
 11663     0AD2  00E9               	movwf	sprintf@fmt^(0+128)
 11664     0AD3  3098               	movlw	high (STR_6| (0+32768))
 11665     0AD4  00EA               	movwf	(sprintf@fmt^(0+128)+1)
 11666     0AD5  0023               	movlb	3	; select bank3
 11667     0AD6  082F               	movf	(_distance+3)^(0+384),w
 11668     0AD7  0021               	movlb	1	; select bank1
 11669     0AD8  00EE               	movwf	((?_sprintf+3)^(0+128)+2)
 11670     0AD9  0023               	movlb	3	; select bank3
 11671     0ADA  082E               	movf	(_distance+2)^(0+384),w
 11672     0ADB  0021               	movlb	1	; select bank1
 11673     0ADC  00ED               	movwf	((?_sprintf+2)^(0+128)+2)
 11674     0ADD  0023               	movlb	3	; select bank3
 11675     0ADE  082D               	movf	(_distance+1)^(0+384),w
 11676     0ADF  0021               	movlb	1	; select bank1
 11677     0AE0  00EC               	movwf	((?_sprintf+1)^(0+128)+2)
 11678     0AE1  0023               	movlb	3	; select bank3
 11679     0AE2  082C               	movf	_distance^(0+384),w
 11680     0AE3  0021               	movlb	1	; select bank1
 11681     0AE4  00EB               	movwf	(?_sprintf^(0+128)+2)
 11682     0AE5  3033               	movlw	(low (TMR0_Custom_ISR@buffer| (0+256)))& (0+255)
 11683     0AE6  319F  272A  318A   	fcall	_sprintf
 11684     0AE9                     i1l5543:
 11685                           
 11686                           ;main.c: 352:         LCD_Write_String(buffer);
 11687     0AE9  3033               	movlw	low TMR0_Custom_ISR@buffer
 11688     0AEA  00F6               	movwf	LCD_Write_String@Str
 11689     0AEB  3001               	movlw	high TMR0_Custom_ISR@buffer
 11690     0AEC  00F7               	movwf	LCD_Write_String@Str+1
 11691     0AED  319E  26AE  318A   	fcall	_LCD_Write_String
 11692                           
 11693                           ;main.c: 353:     }
 11694     0AF0  2B01               	goto	i1l1199
 11695     0AF1                     i1l5545:
 11696                           
 11697                           ;main.c: 355:     {;main.c: 356:         LCD_Clear();
 11698     0AF1  319C  24D0  318A   	fcall	_LCD_Clear
 11699     0AF4                     i1l5547:
 11700                           
 11701                           ;main.c: 357:         LCD_Set_Cursor(1, 1);
 11702     0AF4  01F6               	clrf	LCD_Set_Cursor@COL
 11703     0AF5  0AF6               	incf	LCD_Set_Cursor@COL,f
 11704     0AF6  3001               	movlw	1
 11705     0AF7  319F  27DA  318A   	fcall	_LCD_Set_Cursor
 11706     0AFA                     i1l5549:
 11707                           
 11708                           ;main.c: 358:         LCD_Write_String("Out of Range");
 11709     0AFA  309D               	movlw	low (STR_7| (0+32768))
 11710     0AFB  00F6               	movwf	LCD_Write_String@Str
 11711     0AFC  3098               	movlw	high (STR_7| (0+32768))
 11712     0AFD  00F7               	movwf	LCD_Write_String@Str+1
 11713     0AFE  319E  26AE  318A   	fcall	_LCD_Write_String
 11714     0B01                     i1l1199:	
 11715                           ;main.c: 359:     }
 11716                           
 11717                           
 11718                           ;main.c: 361:     temperature = ((double)(ADC_GetConversion(0) & 0x3FF) * 3.3/1023)*100;
 11719     0B01  3044               	movlw	68
 11720     0B02  0020               	movlb	0	; select bank0
 11721     0B03  00C3               	movwf	___fldiv@a+3
 11722     0B04  307F               	movlw	127
 11723     0B05  00C2               	movwf	___fldiv@a+2
 11724     0B06  30C0               	movlw	192
 11725     0B07  00C1               	movwf	___fldiv@a+1
 11726     0B08  3000               	movlw	0
 11727     0B09  00C0               	movwf	___fldiv@a
 11728     0B0A  3040               	movlw	64
 11729     0B0B  00A9               	movwf	___flmul@b+3
 11730     0B0C  3053               	movlw	83
 11731     0B0D  00A8               	movwf	___flmul@b+2
 11732     0B0E  3033               	movlw	51
 11733     0B0F  00A7               	movwf	___flmul@b+1
 11734     0B10  3033               	movlw	51
 11735     0B11  00A6               	movwf	___flmul@b
 11736     0B12  3000               	movlw	0
 11737     0B13  319E  265E  318A   	fcall	_ADC_GetConversion
 11738     0B16  30FF               	movlw	255
 11739     0B17  0570               	andwf	?_ADC_GetConversion,w
 11740     0B18  0022               	movlb	2	; select bank2
 11741     0B19  00AD               	movwf	??_TMR0_Custom_ISR^(0+256)
 11742     0B1A  3003               	movlw	3
 11743     0B1B  0571               	andwf	?_ADC_GetConversion+1,w
 11744     0B1C  00AE               	movwf	(??_TMR0_Custom_ISR+1)^(0+256)
 11745     0B1D  082D               	movf	??_TMR0_Custom_ISR^(0+256),w
 11746     0B1E  00AF               	movwf	(??_TMR0_Custom_ISR+2)^(0+256)
 11747     0B1F  082E               	movf	(??_TMR0_Custom_ISR+1)^(0+256),w
 11748     0B20  00B0               	movwf	((??_TMR0_Custom_ISR+2)^(0+256)+1)
 11749     0B21  01B1               	clrf	((??_TMR0_Custom_ISR+2)^(0+256)+2)
 11750     0B22  01B2               	clrf	((??_TMR0_Custom_ISR+2)^(0+256)+3)
 11751     0B23  0832               	movf	(??_TMR0_Custom_ISR+5)^(0+256),w
 11752     0B24  00F7               	movwf	___xxtofl@val+3
 11753     0B25  0831               	movf	(??_TMR0_Custom_ISR+4)^(0+256),w
 11754     0B26  00F6               	movwf	___xxtofl@val+2
 11755     0B27  0830               	movf	(??_TMR0_Custom_ISR+3)^(0+256),w
 11756     0B28  00F5               	movwf	___xxtofl@val+1
 11757     0B29  082F               	movf	(??_TMR0_Custom_ISR+2)^(0+256),w
 11758     0B2A  00F4               	movwf	___xxtofl@val
 11759     0B2B  3000               	movlw	0
 11760     0B2C  3195  2517  318A   	fcall	___xxtofl
 11761     0B2F  0877               	movf	?___xxtofl+3,w
 11762     0B30  0020               	movlb	0	; select bank0
 11763     0B31  00AD               	movwf	___flmul@a+3
 11764     0B32  0876               	movf	?___xxtofl+2,w
 11765     0B33  00AC               	movwf	___flmul@a+2
 11766     0B34  0875               	movf	?___xxtofl+1,w
 11767     0B35  00AB               	movwf	___flmul@a+1
 11768     0B36  0874               	movf	?___xxtofl,w
 11769     0B37  00AA               	movwf	___flmul@a
 11770     0B38  318D  25C5  318A   	fcall	___flmul
 11771     0B3B  0020               	movlb	0	; select bank0
 11772     0B3C  0829               	movf	?___flmul+3,w
 11773     0B3D  00C7               	movwf	___fldiv@b+3
 11774     0B3E  0828               	movf	?___flmul+2,w
 11775     0B3F  00C6               	movwf	___fldiv@b+2
 11776     0B40  0827               	movf	?___flmul+1,w
 11777     0B41  00C5               	movwf	___fldiv@b+1
 11778     0B42  0826               	movf	?___flmul,w
 11779     0B43  00C4               	movwf	___fldiv@b
 11780     0B44  3188  2057  318A   	fcall	___fldiv
 11781     0B47  0020               	movlb	0	; select bank0
 11782     0B48  0843               	movf	?___fldiv+3,w
 11783     0B49  0022               	movlb	2	; select bank2
 11784     0B4A  00C6               	movwf	(_TMR0_Custom_ISR$3581+3)^(0+256)
 11785     0B4B  0020               	movlb	0	; select bank0
 11786     0B4C  0842               	movf	?___fldiv+2,w
 11787     0B4D  0022               	movlb	2	; select bank2
 11788     0B4E  00C5               	movwf	(_TMR0_Custom_ISR$3581+2)^(0+256)
 11789     0B4F  0020               	movlb	0	; select bank0
 11790     0B50  0841               	movf	?___fldiv+1,w
 11791     0B51  0022               	movlb	2	; select bank2
 11792     0B52  00C4               	movwf	(_TMR0_Custom_ISR$3581+1)^(0+256)
 11793     0B53  0020               	movlb	0	; select bank0
 11794     0B54  0840               	movf	?___fldiv,w
 11795     0B55  0022               	movlb	2	; select bank2
 11796     0B56  00C3               	movwf	_TMR0_Custom_ISR$3581^(0+256)
 11797                           
 11798                           ;main.c: 361:     temperature = ((double)(ADC_GetConversion(0) & 0x3FF) * 3.3/1023)*100;
 11799     0B57  3042               	movlw	66
 11800     0B58  0020               	movlb	0	; select bank0
 11801     0B59  00A9               	movwf	___flmul@b+3
 11802     0B5A  30C8               	movlw	200
 11803     0B5B  00A8               	movwf	___flmul@b+2
 11804     0B5C  3000               	movlw	0
 11805     0B5D  00A7               	movwf	___flmul@b+1
 11806     0B5E  3000               	movlw	0
 11807     0B5F  00A6               	movwf	___flmul@b
 11808     0B60  0022               	movlb	2	; select bank2
 11809     0B61  0846               	movf	(_TMR0_Custom_ISR$3581+3)^(0+256),w
 11810     0B62  0020               	movlb	0	; select bank0
 11811     0B63  00AD               	movwf	___flmul@a+3
 11812     0B64  0022               	movlb	2	; select bank2
 11813     0B65  0845               	movf	(_TMR0_Custom_ISR$3581+2)^(0+256),w
 11814     0B66  0020               	movlb	0	; select bank0
 11815     0B67  00AC               	movwf	___flmul@a+2
 11816     0B68  0022               	movlb	2	; select bank2
 11817     0B69  0844               	movf	(_TMR0_Custom_ISR$3581+1)^(0+256),w
 11818     0B6A  0020               	movlb	0	; select bank0
 11819     0B6B  00AB               	movwf	___flmul@a+1
 11820     0B6C  0022               	movlb	2	; select bank2
 11821     0B6D  0843               	movf	_TMR0_Custom_ISR$3581^(0+256),w
 11822     0B6E  0020               	movlb	0	; select bank0
 11823     0B6F  00AA               	movwf	___flmul@a
 11824     0B70  318D  25C5  318A   	fcall	___flmul
 11825     0B73  0020               	movlb	0	; select bank0
 11826     0B74  0829               	movf	?___flmul+3,w
 11827     0B75  0023               	movlb	3	; select bank3
 11828     0B76  00AB               	movwf	(_temperature+3)^(0+384)
 11829     0B77  0020               	movlb	0	; select bank0
 11830     0B78  0828               	movf	?___flmul+2,w
 11831     0B79  0023               	movlb	3	; select bank3
 11832     0B7A  00AA               	movwf	(_temperature+2)^(0+384)
 11833     0B7B  0020               	movlb	0	; select bank0
 11834     0B7C  0827               	movf	?___flmul+1,w
 11835     0B7D  0023               	movlb	3	; select bank3
 11836     0B7E  00A9               	movwf	(_temperature+1)^(0+384)
 11837     0B7F  0020               	movlb	0	; select bank0
 11838     0B80  0826               	movf	?___flmul,w
 11839     0B81  0023               	movlb	3	; select bank3
 11840     0B82  00A8               	movwf	_temperature^(0+384)
 11841     0B83                     i1l5551:
 11842                           
 11843                           ;main.c: 362:     ADCON0bits.ADON = 0;
 11844     0B83  0021               	movlb	1	; select bank1
 11845     0B84  101D               	bcf	29,0	;volatile
 11846     0B85                     i1l5553:
 11847                           
 11848                           ;main.c: 364:     LCD_Set_Cursor(2, 1);
 11849     0B85  01F6               	clrf	LCD_Set_Cursor@COL
 11850     0B86  0AF6               	incf	LCD_Set_Cursor@COL,f
 11851     0B87  3002               	movlw	2
 11852     0B88  319F  27DA  318A   	fcall	_LCD_Set_Cursor
 11853     0B8B                     i1l5555:
 11854                           
 11855                           ;main.c: 365:     sprintf(buffer, "Temp.: %.2f C", temperature);
 11856     0B8B  3081               	movlw	low (STR_8| (0+32768))
 11857     0B8C  0021               	movlb	1	; select bank1
 11858     0B8D  00E9               	movwf	sprintf@fmt^(0+128)
 11859     0B8E  3098               	movlw	high (STR_8| (0+32768))
 11860     0B8F  00EA               	movwf	(sprintf@fmt^(0+128)+1)
 11861     0B90  0023               	movlb	3	; select bank3
 11862     0B91  082B               	movf	(_temperature+3)^(0+384),w
 11863     0B92  0021               	movlb	1	; select bank1
 11864     0B93  00EE               	movwf	((?_sprintf+3)^(0+128)+2)
 11865     0B94  0023               	movlb	3	; select bank3
 11866     0B95  082A               	movf	(_temperature+2)^(0+384),w
 11867     0B96  0021               	movlb	1	; select bank1
 11868     0B97  00ED               	movwf	((?_sprintf+2)^(0+128)+2)
 11869     0B98  0023               	movlb	3	; select bank3
 11870     0B99  0829               	movf	(_temperature+1)^(0+384),w
 11871     0B9A  0021               	movlb	1	; select bank1
 11872     0B9B  00EC               	movwf	((?_sprintf+1)^(0+128)+2)
 11873     0B9C  0023               	movlb	3	; select bank3
 11874     0B9D  0828               	movf	_temperature^(0+384),w
 11875     0B9E  0021               	movlb	1	; select bank1
 11876     0B9F  00EB               	movwf	(?_sprintf^(0+128)+2)
 11877     0BA0  3033               	movlw	(low (TMR0_Custom_ISR@buffer| (0+256)))& (0+255)
 11878     0BA1  319F  272A  318A   	fcall	_sprintf
 11879     0BA4                     i1l5557:
 11880                           
 11881                           ;main.c: 366:     LCD_Write_String(buffer);
 11882     0BA4  3033               	movlw	low TMR0_Custom_ISR@buffer
 11883     0BA5  00F6               	movwf	LCD_Write_String@Str
 11884     0BA6  3001               	movlw	high TMR0_Custom_ISR@buffer
 11885     0BA7  00F7               	movwf	LCD_Write_String@Str+1
 11886     0BA8  319E  26AE  318A   	fcall	_LCD_Write_String
 11887     0BAB                     i1l5559:
 11888                           
 11889                           ;main.c: 368:     _delay((unsigned long)((1000)*(4000000/4000.0)));
 11890     0BAB  3006               	movlw	6
 11891     0BAC  0022               	movlb	2	; select bank2
 11892     0BAD  00AE               	movwf	(??_TMR0_Custom_ISR^(0+256)+1)
 11893     0BAE  3013               	movlw	19
 11894     0BAF  00AD               	movwf	??_TMR0_Custom_ISR^(0+256)
 11895     0BB0  30AD               	movlw	173
 11896     0BB1                     u568_27:
 11897     0BB1  0B89               	decfsz	9,f
 11898     0BB2  2BB1               	goto	u568_27
 11899     0BB3  0BAD               	decfsz	??_TMR0_Custom_ISR^(0+256),f
 11900     0BB4  2BB1               	goto	u568_27
 11901     0BB5  0BAE               	decfsz	(??_TMR0_Custom_ISR^(0+256)+1),f
 11902     0BB6  2BB1               	goto	u568_27
 11903     0BB7  3200               	nop2
 11904     0BB8                     i1l1200:
 11905     0BB8  0008               	return
 11906     0BB9                     __end_of_TMR0_Custom_ISR:
 11907                           
 11908                           	psect	text32
 11909     1517                     __ptext32:	
 11910 ;; *************** function ___xxtofl *****************
 11911 ;; Defined at:
 11912 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;  sign            1    wreg     unsigned char 
 11915 ;;  val             4    4[COMMON] long 
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;  sign            1    0[BANK0 ] unsigned char 
 11918 ;;  arg             4    2[BANK0 ] unsigned long 
 11919 ;;  exp             1    1[BANK0 ] unsigned char 
 11920 ;; Return value:  Size  Location     Type
 11921 ;;                  4    4[COMMON] unsigned char 
 11922 ;; Registers used:
 11923 ;;		wreg, status,2, status,0
 11924 ;; Tracked objects:
 11925 ;;		On entry : 0/0
 11926 ;;		On exit  : 0/0
 11927 ;;		Unchanged: 0/0
 11928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11930 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11931 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11932 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11933 ;;Total ram usage:       14 bytes
 11934 ;; Hardware stack levels used: 1
 11935 ;; This function calls:
 11936 ;;		Nothing
 11937 ;; This function is called by:
 11938 ;;		_TMR0_Custom_ISR
 11939 ;;		_get_distance_from_supersonic
 11940 ;;		_get_temperature
 11941 ;; This function uses a non-reentrant model
 11942 ;;
 11943                           
 11944     1517                     ___xxtofl:	
 11945                           ;psect for function ___xxtofl
 11946                           
 11947                           
 11948                           ;incstack = 0
 11949                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11950                           ;___xxtofl@sign stored from wreg
 11951     1517  0020               	movlb	0	; select bank0
 11952     1518  00A0               	movwf	___xxtofl@sign
 11953     1519                     i1l5359:
 11954     1519  0820               	movf	___xxtofl@sign,w
 11955     151A  1903               	btfsc	3,2
 11956     151B  2D1D               	goto	u481_21
 11957     151C  2D1E               	goto	u481_20
 11958     151D                     u481_21:
 11959     151D  2D32               	goto	i1l5365
 11960     151E                     u481_20:
 11961     151E                     i1l5361:
 11962     151E  1FF7               	btfss	___xxtofl@val+3,7
 11963     151F  2D21               	goto	u482_21
 11964     1520  2D22               	goto	u482_20
 11965     1521                     u482_21:
 11966     1521  2D32               	goto	i1l5365
 11967     1522                     u482_20:
 11968     1522                     i1l5363:
 11969     1522  0974               	comf	___xxtofl@val,w
 11970     1523  00A2               	movwf	___xxtofl@arg
 11971     1524  0975               	comf	___xxtofl@val+1,w
 11972     1525  00A3               	movwf	___xxtofl@arg+1
 11973     1526  0976               	comf	___xxtofl@val+2,w
 11974     1527  00A4               	movwf	___xxtofl@arg+2
 11975     1528  0977               	comf	___xxtofl@val+3,w
 11976     1529  00A5               	movwf	___xxtofl@arg+3
 11977     152A  0AA2               	incf	___xxtofl@arg,f
 11978     152B  1903               	skipnz
 11979     152C  0AA3               	incf	___xxtofl@arg+1,f
 11980     152D  1903               	skipnz
 11981     152E  0AA4               	incf	___xxtofl@arg+2,f
 11982     152F  1903               	skipnz
 11983     1530  0AA5               	incf	___xxtofl@arg+3,f
 11984     1531  2D3A               	goto	i1l1709
 11985     1532                     i1l5365:
 11986     1532  0877               	movf	___xxtofl@val+3,w
 11987     1533  00A5               	movwf	___xxtofl@arg+3
 11988     1534  0876               	movf	___xxtofl@val+2,w
 11989     1535  00A4               	movwf	___xxtofl@arg+2
 11990     1536  0875               	movf	___xxtofl@val+1,w
 11991     1537  00A3               	movwf	___xxtofl@arg+1
 11992     1538  0874               	movf	___xxtofl@val,w
 11993     1539  00A2               	movwf	___xxtofl@arg
 11994     153A                     i1l1709:
 11995     153A  0877               	movf	___xxtofl@val+3,w
 11996     153B  0476               	iorwf	___xxtofl@val+2,w
 11997     153C  0475               	iorwf	___xxtofl@val+1,w
 11998     153D  0474               	iorwf	___xxtofl@val,w
 11999     153E  1D03               	skipz
 12000     153F  2D41               	goto	u483_21
 12001     1540  2D42               	goto	u483_20
 12002     1541                     u483_21:
 12003     1541  2D4B               	goto	i1l5371
 12004     1542                     u483_20:
 12005     1542                     i1l5367:
 12006     1542  3000               	movlw	0
 12007     1543  00F7               	movwf	?___xxtofl+3
 12008     1544  3000               	movlw	0
 12009     1545  00F6               	movwf	?___xxtofl+2
 12010     1546  3000               	movlw	0
 12011     1547  00F5               	movwf	?___xxtofl+1
 12012     1548  3000               	movlw	0
 12013     1549  00F4               	movwf	?___xxtofl
 12014     154A  2DC1               	goto	i1l1711
 12015     154B                     i1l5371:
 12016     154B  3096               	movlw	150
 12017     154C  00A1               	movwf	___xxtofl@exp
 12018     154D  2D59               	goto	i1l5375
 12019     154E                     i1l5373:
 12020     154E  3001               	movlw	1
 12021     154F  00F8               	movwf	??___xxtofl
 12022     1550  0878               	movf	??___xxtofl,w
 12023     1551  07A1               	addwf	___xxtofl@exp,f
 12024     1552  3001               	movlw	1
 12025     1553                     u484_25:
 12026     1553  36A5               	lsrf	___xxtofl@arg+3,f
 12027     1554  0CA4               	rrf	___xxtofl@arg+2,f
 12028     1555  0CA3               	rrf	___xxtofl@arg+1,f
 12029     1556  0CA2               	rrf	___xxtofl@arg,f
 12030     1557  0B89               	decfsz	9,f
 12031     1558  2D53               	goto	u484_25
 12032     1559                     i1l5375:
 12033     1559  30FE               	movlw	254
 12034     155A  0525               	andwf	___xxtofl@arg+3,w
 12035     155B  1D03               	btfss	3,2
 12036     155C  2D5E               	goto	u485_21
 12037     155D  2D5F               	goto	u485_20
 12038     155E                     u485_21:
 12039     155E  2D4E               	goto	i1l5373
 12040     155F                     u485_20:
 12041     155F  2D73               	goto	i1l1715
 12042     1560                     i1l5377:
 12043     1560  3001               	movlw	1
 12044     1561  00F8               	movwf	??___xxtofl
 12045     1562  0878               	movf	??___xxtofl,w
 12046     1563  07A1               	addwf	___xxtofl@exp,f
 12047     1564                     i1l5379:
 12048     1564  3001               	movlw	1
 12049     1565  07A2               	addwf	___xxtofl@arg,f
 12050     1566  3000               	movlw	0
 12051     1567  3DA3               	addwfc	___xxtofl@arg+1,f
 12052     1568  3000               	movlw	0
 12053     1569  3DA4               	addwfc	___xxtofl@arg+2,f
 12054     156A  3000               	movlw	0
 12055     156B  3DA5               	addwfc	___xxtofl@arg+3,f
 12056     156C                     i1l5381:
 12057     156C  3001               	movlw	1
 12058     156D                     u486_25:
 12059     156D  36A5               	lsrf	___xxtofl@arg+3,f
 12060     156E  0CA4               	rrf	___xxtofl@arg+2,f
 12061     156F  0CA3               	rrf	___xxtofl@arg+1,f
 12062     1570  0CA2               	rrf	___xxtofl@arg,f
 12063     1571  0B89               	decfsz	9,f
 12064     1572  2D6D               	goto	u486_25
 12065     1573                     i1l1715:
 12066     1573  30FF               	movlw	255
 12067     1574  0525               	andwf	___xxtofl@arg+3,w
 12068     1575  1D03               	btfss	3,2
 12069     1576  2D78               	goto	u487_21
 12070     1577  2D79               	goto	u487_20
 12071     1578                     u487_21:
 12072     1578  2D60               	goto	i1l5377
 12073     1579                     u487_20:
 12074     1579  2D83               	goto	i1l5385
 12075     157A                     i1l5383:
 12076     157A  3001               	movlw	1
 12077     157B  02A1               	subwf	___xxtofl@exp,f
 12078     157C  3001               	movlw	1
 12079     157D                     u488_25:
 12080     157D  35A2               	lslf	___xxtofl@arg,f
 12081     157E  0DA3               	rlf	___xxtofl@arg+1,f
 12082     157F  0DA4               	rlf	___xxtofl@arg+2,f
 12083     1580  0DA5               	rlf	___xxtofl@arg+3,f
 12084     1581  0B89               	decfsz	9,f
 12085     1582  2D7D               	goto	u488_25
 12086     1583                     i1l5385:
 12087     1583  1BA4               	btfsc	___xxtofl@arg+2,7
 12088     1584  2D86               	goto	u489_21
 12089     1585  2D87               	goto	u489_20
 12090     1586                     u489_21:
 12091     1586  2D8D               	goto	i1l1722
 12092     1587                     u489_20:
 12093     1587                     i1l5387:
 12094     1587  3002               	movlw	2
 12095     1588  0221               	subwf	___xxtofl@exp,w
 12096     1589  1803               	skipnc
 12097     158A  2D8C               	goto	u490_21
 12098     158B  2D8D               	goto	u490_20
 12099     158C                     u490_21:
 12100     158C  2D7A               	goto	i1l5383
 12101     158D                     u490_20:
 12102     158D                     i1l1722:
 12103     158D  1821               	btfsc	___xxtofl@exp,0
 12104     158E  2D90               	goto	u491_21
 12105     158F  2D91               	goto	u491_20
 12106     1590                     u491_21:
 12107     1590  2D99               	goto	i1l1723
 12108     1591                     u491_20:
 12109     1591                     i1l5389:
 12110     1591  30FF               	movlw	255
 12111     1592  05A2               	andwf	___xxtofl@arg,f
 12112     1593  30FF               	movlw	255
 12113     1594  05A3               	andwf	___xxtofl@arg+1,f
 12114     1595  307F               	movlw	127
 12115     1596  05A4               	andwf	___xxtofl@arg+2,f
 12116     1597  30FF               	movlw	255
 12117     1598  05A5               	andwf	___xxtofl@arg+3,f
 12118     1599                     i1l1723:
 12119     1599  1003               	clrc
 12120     159A  0CA1               	rrf	___xxtofl@exp,f
 12121     159B                     i1l5391:
 12122     159B  0821               	movf	___xxtofl@exp,w
 12123     159C  00F8               	movwf	??___xxtofl
 12124     159D  01F9               	clrf	??___xxtofl+1
 12125     159E  01FA               	clrf	??___xxtofl+2
 12126     159F  01FB               	clrf	??___xxtofl+3
 12127     15A0  3018               	movlw	24
 12128     15A1                     u492_25:
 12129     15A1  35F8               	lslf	??___xxtofl,f
 12130     15A2  0DF9               	rlf	??___xxtofl+1,f
 12131     15A3  0DFA               	rlf	??___xxtofl+2,f
 12132     15A4  0DFB               	rlf	??___xxtofl+3,f
 12133     15A5                     u492_20:
 12134     15A5  0B89               	decfsz	9,f
 12135     15A6  2DA1               	goto	u492_25
 12136     15A7  0878               	movf	??___xxtofl,w
 12137     15A8  04A2               	iorwf	___xxtofl@arg,f
 12138     15A9  0879               	movf	??___xxtofl+1,w
 12139     15AA  04A3               	iorwf	___xxtofl@arg+1,f
 12140     15AB  087A               	movf	??___xxtofl+2,w
 12141     15AC  04A4               	iorwf	___xxtofl@arg+2,f
 12142     15AD  087B               	movf	??___xxtofl+3,w
 12143     15AE  04A5               	iorwf	___xxtofl@arg+3,f
 12144     15AF                     i1l5393:
 12145     15AF  0820               	movf	___xxtofl@sign,w
 12146     15B0  1903               	btfsc	3,2
 12147     15B1  2DB3               	goto	u493_21
 12148     15B2  2DB4               	goto	u493_20
 12149     15B3                     u493_21:
 12150     15B3  2DB9               	goto	i1l5399
 12151     15B4                     u493_20:
 12152     15B4                     i1l5395:
 12153     15B4  1FF7               	btfss	___xxtofl@val+3,7
 12154     15B5  2DB7               	goto	u494_21
 12155     15B6  2DB8               	goto	u494_20
 12156     15B7                     u494_21:
 12157     15B7  2DB9               	goto	i1l5399
 12158     15B8                     u494_20:
 12159     15B8                     i1l5397:
 12160     15B8  17A5               	bsf	___xxtofl@arg+3,7
 12161     15B9                     i1l5399:
 12162     15B9  0825               	movf	___xxtofl@arg+3,w
 12163     15BA  00F7               	movwf	?___xxtofl+3
 12164     15BB  0824               	movf	___xxtofl@arg+2,w
 12165     15BC  00F6               	movwf	?___xxtofl+2
 12166     15BD  0823               	movf	___xxtofl@arg+1,w
 12167     15BE  00F5               	movwf	?___xxtofl+1
 12168     15BF  0822               	movf	___xxtofl@arg,w
 12169     15C0  00F4               	movwf	?___xxtofl
 12170     15C1                     i1l1711:
 12171     15C1  0008               	return
 12172     15C2                     __end_of___xxtofl:
 12173                           
 12174                           	psect	text33
 12175     1C36                     __ptext33:	
 12176 ;; *************** function _TMR1_Stop *****************
 12177 ;; Defined at:
 12178 ;;		line 86 in file "mcc_generated_files/timer/src/tmr1.c"
 12179 ;; Parameters:    Size  Location     Type
 12180 ;;		None
 12181 ;; Auto vars:     Size  Location     Type
 12182 ;;		None
 12183 ;; Return value:  Size  Location     Type
 12184 ;;                  1    wreg      void 
 12185 ;; Registers used:
 12186 ;;		None
 12187 ;; Tracked objects:
 12188 ;;		On entry : 0/0
 12189 ;;		On exit  : 0/0
 12190 ;;		Unchanged: 0/0
 12191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;Total ram usage:        0 bytes
 12197 ;; Hardware stack levels used: 1
 12198 ;; This function calls:
 12199 ;;		Nothing
 12200 ;; This function is called by:
 12201 ;;		_TMR0_Custom_ISR
 12202 ;;		_get_distance_from_supersonic
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206     1C36                     _TMR1_Stop:	
 12207                           ;psect for function _TMR1_Stop
 12208                           
 12209     1C36                     i1l5317:	
 12210                           ;incstack = 0
 12211                           ; Regs used in _TMR1_Stop: []
 12212                           
 12213                           
 12214                           ;mcc_generated_files/timer/src/tmr1.c: 89:     T1CONbits.TMR1ON = 0;
 12215     1C36  0020               	movlb	0	; select bank0
 12216     1C37  1018               	bcf	24,0	;volatile
 12217     1C38                     i1l697:
 12218     1C38  0008               	return
 12219     1C39                     __end_of_TMR1_Stop:
 12220                           
 12221                           	psect	text34
 12222     1C33                     __ptext34:	
 12223 ;; *************** function _TMR1_Start *****************
 12224 ;; Defined at:
 12225 ;;		line 80 in file "mcc_generated_files/timer/src/tmr1.c"
 12226 ;; Parameters:    Size  Location     Type
 12227 ;;		None
 12228 ;; Auto vars:     Size  Location     Type
 12229 ;;		None
 12230 ;; Return value:  Size  Location     Type
 12231 ;;                  1    wreg      void 
 12232 ;; Registers used:
 12233 ;;		None
 12234 ;; Tracked objects:
 12235 ;;		On entry : 0/0
 12236 ;;		On exit  : 0/0
 12237 ;;		Unchanged: 0/0
 12238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12243 ;;Total ram usage:        0 bytes
 12244 ;; Hardware stack levels used: 1
 12245 ;; This function calls:
 12246 ;;		Nothing
 12247 ;; This function is called by:
 12248 ;;		_TMR0_Custom_ISR
 12249 ;;		_get_distance_from_supersonic
 12250 ;; This function uses a non-reentrant model
 12251 ;;
 12252                           
 12253     1C33                     _TMR1_Start:	
 12254                           ;psect for function _TMR1_Start
 12255                           
 12256     1C33                     i1l5315:	
 12257                           ;incstack = 0
 12258                           ; Regs used in _TMR1_Start: []
 12259                           
 12260                           
 12261                           ;mcc_generated_files/timer/src/tmr1.c: 83:     T1CONbits.TMR1ON = 1;
 12262     1C33  0020               	movlb	0	; select bank0
 12263     1C34  1418               	bsf	24,0	;volatile
 12264     1C35                     i1l694:
 12265     1C35  0008               	return
 12266     1C36                     __end_of_TMR1_Start:
 12267                           
 12268                           	psect	text35
 12269     1E5E                     __ptext35:	
 12270 ;; *************** function _ADC_GetConversion *****************
 12271 ;; Defined at:
 12272 ;;		line 98 in file "mcc_generated_files/adc/src/adc.c"
 12273 ;; Parameters:    Size  Location     Type
 12274 ;;  channel         1    wreg     enum E9885
 12275 ;; Auto vars:     Size  Location     Type
 12276 ;;  channel         1    3[COMMON] enum E9885
 12277 ;; Return value:  Size  Location     Type
 12278 ;;                  2    0[COMMON] unsigned short 
 12279 ;; Registers used:
 12280 ;;		wreg, status,2, status,0
 12281 ;; Tracked objects:
 12282 ;;		On entry : 0/0
 12283 ;;		On exit  : 0/0
 12284 ;;		Unchanged: 0/0
 12285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12290 ;;Total ram usage:        4 bytes
 12291 ;; Hardware stack levels used: 1
 12292 ;; This function calls:
 12293 ;;		Nothing
 12294 ;; This function is called by:
 12295 ;;		_TMR0_Custom_ISR
 12296 ;;		_get_temperature
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300     1E5E                     _ADC_GetConversion:	
 12301                           ;psect for function _ADC_GetConversion
 12302                           
 12303                           
 12304                           ;incstack = 0
 12305                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 12306                           ;ADC_GetConversion@channel stored from wreg
 12307     1E5E  00F3               	movwf	ADC_GetConversion@channel
 12308     1E5F                     i1l5269:
 12309                           
 12310                           ;mcc_generated_files/adc/src/adc.c: 98: adc_result_t ADC_GetConversion(adc_channel_t cha
      +                          nnel);mcc_generated_files/adc/src/adc.c: 99: {;mcc_generated_files/adc/src/adc.c: 101:  
      +                             ADCON0bits.CHS = channel;
 12311     1E5F  0873               	movf	ADC_GetConversion@channel,w
 12312     1E60  00F2               	movwf	??_ADC_GetConversion
 12313     1E61  0DF2               	rlf	??_ADC_GetConversion,f
 12314     1E62  0DF2               	rlf	??_ADC_GetConversion,f
 12315     1E63  0021               	movlb	1	; select bank1
 12316     1E64  081D               	movf	29,w	;volatile
 12317     1E65  0672               	xorwf	??_ADC_GetConversion,w
 12318     1E66  3983               	andlw	-125
 12319     1E67  0672               	xorwf	??_ADC_GetConversion,w
 12320     1E68  009D               	movwf	29	;volatile
 12321     1E69                     i1l5271:
 12322                           
 12323                           ;mcc_generated_files/adc/src/adc.c: 104:     ADCON0bits.ADON = 1;
 12324     1E69  141D               	bsf	29,0	;volatile
 12325     1E6A                     i1l5273:
 12326                           
 12327                           ;mcc_generated_files/adc/src/adc.c: 107:     _delay((unsigned long)((5)*(4000000/4000000
      +                          .0)));
 12328     1E6A  3200               	nop2	;2 cycle nop
 12329     1E6B  3200               	nop2	;2 cycle nop
 12330     1E6C  0000               	nop
 12331     1E6D                     i1l5275:
 12332                           
 12333                           ;mcc_generated_files/adc/src/adc.c: 110:     ADCON0bits.GO_nDONE = 1;
 12334     1E6D  0021               	movlb	1	; select bank1
 12335     1E6E  149D               	bsf	29,1	;volatile
 12336     1E6F                     i1l34:	
 12337                           ;mcc_generated_files/adc/src/adc.c: 114:     {;mcc_generated_files/adc/src/adc.c: 115:  
      +                             }
 12338                           
 12339                           
 12340                           ;mcc_generated_files/adc/src/adc.c: 113:     while (ADCON0bits.GO_nDONE)
 12341     1E6F  189D               	btfsc	29,1	;volatile
 12342     1E70  2E72               	goto	u479_21
 12343     1E71  2E73               	goto	u479_20
 12344     1E72                     u479_21:
 12345     1E72  2E6F               	goto	i1l34
 12346     1E73                     u479_20:
 12347     1E73                     i1l5277:
 12348                           
 12349                           ;mcc_generated_files/adc/src/adc.c: 118:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 12350     1E73  081C               	movf	28,w	;volatile
 12351     1E74  00F1               	movwf	?_ADC_GetConversion+1
 12352     1E75  081B               	movf	27,w	;volatile
 12353     1E76  00F0               	movwf	?_ADC_GetConversion
 12354     1E77                     i1l37:
 12355     1E77  0008               	return
 12356     1E78                     __end_of_ADC_GetConversion:
 12357                           
 12358                           	psect	text36
 12359     1C59                     __ptext36:	
 12360 ;; *************** function _I2C1_ISR *****************
 12361 ;; Defined at:
 12362 ;;		line 219 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;		None
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;		None
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  1    wreg      void 
 12369 ;; Registers used:
 12370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;Total ram usage:        0 bytes
 12381 ;; Hardware stack levels used: 1
 12382 ;; Hardware stack levels required when called: 5
 12383 ;; This function calls:
 12384 ;;		_I2C1_EventHandler
 12385 ;; This function is called by:
 12386 ;;		_INTERRUPT_InterruptManager
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390     1C59                     _I2C1_ISR:	
 12391                           ;psect for function _I2C1_ISR
 12392                           
 12393     1C59                     i1l5819:	
 12394                           ;incstack = 0
 12395                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12396                           
 12397                           
 12398                           ;mcc_generated_files/i2c_host/src/mssp.c: 221:     I2C1_EventHandler();
 12399     1C59  3191  2116  319C   	fcall	_I2C1_EventHandler
 12400     1C5C                     i1l187:
 12401     1C5C  0008               	return
 12402     1C5D                     __end_of_I2C1_ISR:
 12403                           
 12404                           	psect	text37
 12405     1116                     __ptext37:	
 12406 ;; *************** function _I2C1_EventHandler *****************
 12407 ;; Defined at:
 12408 ;;		line 256 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12409 ;; Parameters:    Size  Location     Type
 12410 ;;		None
 12411 ;; Auto vars:     Size  Location     Type
 12412 ;;		None
 12413 ;; Return value:  Size  Location     Type
 12414 ;;                  1    wreg      void 
 12415 ;; Registers used:
 12416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12417 ;; Tracked objects:
 12418 ;;		On entry : 0/0
 12419 ;;		On exit  : 0/0
 12420 ;;		Unchanged: 0/0
 12421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12426 ;;Total ram usage:        2 bytes
 12427 ;; Hardware stack levels used: 1
 12428 ;; Hardware stack levels required when called: 4
 12429 ;; This function calls:
 12430 ;;		_I2C1_EVENT_ERROR
 12431 ;;		_I2C1_EVENT_IDLE
 12432 ;;		_I2C1_EVENT_NACK
 12433 ;;		_I2C1_EVENT_RESET
 12434 ;;		_I2C1_EVENT_RX
 12435 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12436 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12437 ;;		_I2C1_EVENT_STOP
 12438 ;;		_I2C1_EVENT_TX
 12439 ;;		_I2C1_InterruptClear
 12440 ;;		_I2C1_IsAddr
 12441 ;;		_I2C1_IsData
 12442 ;;		_I2C1_IsNack
 12443 ;; This function is called by:
 12444 ;;		_I2C1_ISR
 12445 ;; This function uses a non-reentrant model
 12446 ;;
 12447                           
 12448     1116                     _I2C1_EventHandler:	
 12449                           ;psect for function _I2C1_EventHandler
 12450                           
 12451     1116                     i1l5599:	
 12452                           ;incstack = 0
 12453                           ; Regs used in _I2C1_EventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12454                           
 12455                           
 12456                           ;mcc_generated_files/i2c_host/src/mssp.c: 258:     I2C1_InterruptClear();
 12457     1116  319C  2421  3191   	fcall	_I2C1_InterruptClear
 12458     1119                     i1l5601:
 12459                           
 12460                           ;mcc_generated_files/i2c_host/src/mssp.c: 259:     if (I2C1_IsAddr() && I2C1_IsNack())
 12461     1119  319C  24A9  3191   	fcall	_I2C1_IsAddr
 12462     111C  3A00               	xorlw	0
 12463     111D  1903               	skipnz
 12464     111E  2920               	goto	u508_21
 12465     111F  2921               	goto	u508_20
 12466     1120                     u508_21:
 12467     1120  292F               	goto	i1l5607
 12468     1121                     u508_20:
 12469     1121                     i1l5603:
 12470     1121  319C  2483  3191   	fcall	_I2C1_IsNack
 12471     1124  3A00               	xorlw	0
 12472     1125  1903               	skipnz
 12473     1126  2928               	goto	u509_21
 12474     1127  2929               	goto	u509_20
 12475     1128                     u509_21:
 12476     1128  292F               	goto	i1l5607
 12477     1129                     u509_20:
 12478     1129                     i1l5605:
 12479                           
 12480                           ;mcc_generated_files/i2c_host/src/mssp.c: 260:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 261:         i2c1Status.state = I2C_STATE_NACK;
 12481     1129  3005               	movlw	5
 12482     112A  0022               	movlb	2	; select bank2
 12483     112B  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 12484                           
 12485                           ;mcc_generated_files/i2c_host/src/mssp.c: 262:         i2c1Status.errorState = I2C_ERROR
      +                          _ADDR_NACK;
 12486     112C  3001               	movlw	1
 12487     112D  00D3               	movwf	(_i2c1Status^(0+256)+12)	;volatile
 12488                           
 12489                           ;mcc_generated_files/i2c_host/src/mssp.c: 263:     }
 12490     112E  2944               	goto	i1l5613
 12491     112F                     i1l5607:
 12492     112F  319C  2466  3191   	fcall	_I2C1_IsData
 12493     1132  3A00               	xorlw	0
 12494     1133  1903               	skipnz
 12495     1134  2936               	goto	u510_21
 12496     1135  2937               	goto	u510_20
 12497     1136                     u510_21:
 12498     1136  2944               	goto	i1l5613
 12499     1137                     u510_20:
 12500     1137                     i1l5609:
 12501     1137  319C  2483  3191   	fcall	_I2C1_IsNack
 12502     113A  3A00               	xorlw	0
 12503     113B  1903               	skipnz
 12504     113C  293E               	goto	u511_21
 12505     113D  293F               	goto	u511_20
 12506     113E                     u511_21:
 12507     113E  2944               	goto	i1l5613
 12508     113F                     u511_20:
 12509     113F                     i1l5611:
 12510                           
 12511                           ;mcc_generated_files/i2c_host/src/mssp.c: 265:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 266:         i2c1Status.state = I2C_STATE_NACK;
 12512     113F  3005               	movlw	5
 12513     1140  0022               	movlb	2	; select bank2
 12514     1141  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 12515                           
 12516                           ;mcc_generated_files/i2c_host/src/mssp.c: 267:         i2c1Status.errorState = I2C_ERROR
      +                          _DATA_NACK;
 12517     1142  3002               	movlw	2
 12518     1143  00D3               	movwf	(_i2c1Status^(0+256)+12)	;volatile
 12519     1144                     i1l5613:
 12520                           
 12521                           ;mcc_generated_files/i2c_host/src/mssp.c: 269:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 12522     1144  0022               	movlb	2	; select bank2
 12523     1145  0854               	movf	(_i2c1Status^(0+256)+13),w	;volatile
 12524     1146  00F4               	movwf	??_I2C1_EventHandler
 12525     1147  01F5               	clrf	??_I2C1_EventHandler+1
 12526     1148  35F4               	lslf	??_I2C1_EventHandler,f
 12527     1149  0DF5               	rlf	??_I2C1_EventHandler+1,f
 12528     114A  3060               	movlw	low _i2c1_eventTable
 12529     114B  0774               	addwf	??_I2C1_EventHandler,w
 12530     114C  0084               	movwf	4
 12531     114D  3018               	movlw	high _i2c1_eventTable
 12532     114E  3D75               	addwfc	??_I2C1_EventHandler+1,w
 12533     114F  3880               	iorlw	128
 12534     1150  0085               	movwf	5
 12535     1151  3F01               	moviw [1]fsr0
 12536     1152  008A               	movwf	10
 12537     1153  3F00               	moviw [0]fsr0
 12538     1154  000A               	callw
 12539     1155  3191               	pagesel	$
 12540     1156  0022               	movlb	2	; select bank2
 12541     1157  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 12542     1158                     i1l205:
 12543     1158  0008               	return
 12544     1159                     __end_of_I2C1_EventHandler:
 12545                           
 12546                           	psect	text38
 12547     1C83                     __ptext38:	
 12548 ;; *************** function _I2C1_IsNack *****************
 12549 ;; Defined at:
 12550 ;;		line 447 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12551 ;; Parameters:    Size  Location     Type
 12552 ;;		None
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;		None
 12555 ;; Return value:  Size  Location     Type
 12556 ;;                  1    wreg      _Bool 
 12557 ;; Registers used:
 12558 ;;		wreg, status,2, status,0
 12559 ;; Tracked objects:
 12560 ;;		On entry : 0/0
 12561 ;;		On exit  : 0/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;Total ram usage:        0 bytes
 12569 ;; Hardware stack levels used: 1
 12570 ;; This function calls:
 12571 ;;		Nothing
 12572 ;; This function is called by:
 12573 ;;		_I2C1_EventHandler
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577     1C83                     _I2C1_IsNack:	
 12578                           ;psect for function _I2C1_IsNack
 12579                           
 12580     1C83                     i1l5411:	
 12581                           ;incstack = 0
 12582                           ; Regs used in _I2C1_IsNack: [wreg+status,2+status,0]
 12583                           
 12584                           
 12585                           ;mcc_generated_files/i2c_host/src/mssp.c: 449:     return SSP1CON2bits.ACKSTAT;
 12586     1C83  0024               	movlb	4	; select bank4
 12587     1C84  0E16               	swapf	22,w	;volatile
 12588     1C85  0C89               	rrf	9,f
 12589     1C86  0C89               	rrf	9,f
 12590     1C87  3901               	andlw	1
 12591     1C88                     i1l280:
 12592     1C88  0008               	return
 12593     1C89                     __end_of_I2C1_IsNack:
 12594                           
 12595                           	psect	text39
 12596     1C66                     __ptext39:	
 12597 ;; *************** function _I2C1_IsData *****************
 12598 ;; Defined at:
 12599 ;;		line 452 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12600 ;; Parameters:    Size  Location     Type
 12601 ;;		None
 12602 ;; Auto vars:     Size  Location     Type
 12603 ;;		None
 12604 ;; Return value:  Size  Location     Type
 12605 ;;                  1    wreg      _Bool 
 12606 ;; Registers used:
 12607 ;;		wreg, status,2, status,0
 12608 ;; Tracked objects:
 12609 ;;		On entry : 0/0
 12610 ;;		On exit  : 0/0
 12611 ;;		Unchanged: 0/0
 12612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12617 ;;Total ram usage:        0 bytes
 12618 ;; Hardware stack levels used: 1
 12619 ;; This function calls:
 12620 ;;		Nothing
 12621 ;; This function is called by:
 12622 ;;		_I2C1_EventHandler
 12623 ;; This function uses a non-reentrant model
 12624 ;;
 12625                           
 12626     1C66                     _I2C1_IsData:	
 12627                           ;psect for function _I2C1_IsData
 12628                           
 12629     1C66                     i1l5415:	
 12630                           ;incstack = 0
 12631                           ; Regs used in _I2C1_IsData: [wreg+status,2+status,0]
 12632                           
 12633                           
 12634                           ;mcc_generated_files/i2c_host/src/mssp.c: 454:     return (SSP1STATbits.D_nA);
 12635     1C66  0024               	movlb	4	; select bank4
 12636     1C67  0E14               	swapf	20,w	;volatile
 12637     1C68  0C89               	rrf	9,f
 12638     1C69  3901               	andlw	1
 12639     1C6A                     i1l283:
 12640     1C6A  0008               	return
 12641     1C6B                     __end_of_I2C1_IsData:
 12642                           
 12643                           	psect	text40
 12644     1CA9                     __ptext40:	
 12645 ;; *************** function _I2C1_IsAddr *****************
 12646 ;; Defined at:
 12647 ;;		line 457 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;		None
 12650 ;; Auto vars:     Size  Location     Type
 12651 ;;		None
 12652 ;; Return value:  Size  Location     Type
 12653 ;;                  1    wreg      _Bool 
 12654 ;; Registers used:
 12655 ;;		wreg, status,0
 12656 ;; Tracked objects:
 12657 ;;		On entry : 0/0
 12658 ;;		On exit  : 0/0
 12659 ;;		Unchanged: 0/0
 12660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12665 ;;Total ram usage:        0 bytes
 12666 ;; Hardware stack levels used: 1
 12667 ;; This function calls:
 12668 ;;		Nothing
 12669 ;; This function is called by:
 12670 ;;		_I2C1_EventHandler
 12671 ;; This function uses a non-reentrant model
 12672 ;;
 12673                           
 12674     1CA9                     _I2C1_IsAddr:	
 12675                           ;psect for function _I2C1_IsAddr
 12676                           
 12677     1CA9                     i1l5407:	
 12678                           ;incstack = 0
 12679                           ; Regs used in _I2C1_IsAddr: [wreg+status,0]
 12680                           
 12681                           
 12682                           ;mcc_generated_files/i2c_host/src/mssp.c: 459:     return !(SSP1STATbits.D_nA);
 12683     1CA9  1003               	clrc
 12684     1CAA  0024               	movlb	4	; select bank4
 12685     1CAB  1E94               	btfss	20,5	;volatile
 12686     1CAC  1403               	setc
 12687     1CAD  3000               	movlw	0
 12688     1CAE  3D09               	addwfc	9,w
 12689     1CAF                     i1l286:
 12690     1CAF  0008               	return
 12691     1CB0                     __end_of_I2C1_IsAddr:
 12692                           
 12693                           	psect	text41
 12694     1C55                     __ptext41:	
 12695 ;; *************** function _I2C1_ERROR_ISR *****************
 12696 ;; Defined at:
 12697 ;;		line 224 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12698 ;; Parameters:    Size  Location     Type
 12699 ;;		None
 12700 ;; Auto vars:     Size  Location     Type
 12701 ;;		None
 12702 ;; Return value:  Size  Location     Type
 12703 ;;                  1    wreg      void 
 12704 ;; Registers used:
 12705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12706 ;; Tracked objects:
 12707 ;;		On entry : 0/0
 12708 ;;		On exit  : 0/0
 12709 ;;		Unchanged: 0/0
 12710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12715 ;;Total ram usage:        0 bytes
 12716 ;; Hardware stack levels used: 1
 12717 ;; Hardware stack levels required when called: 5
 12718 ;; This function calls:
 12719 ;;		_I2C1_ErrorEventHandler
 12720 ;; This function is called by:
 12721 ;;		_INTERRUPT_InterruptManager
 12722 ;; This function uses a non-reentrant model
 12723 ;;
 12724                           
 12725     1C55                     _I2C1_ERROR_ISR:	
 12726                           ;psect for function _I2C1_ERROR_ISR
 12727                           
 12728     1C55                     i1l5821:	
 12729                           ;incstack = 0
 12730                           ; Regs used in _I2C1_ERROR_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12731                           
 12732                           
 12733                           ;mcc_generated_files/i2c_host/src/mssp.c: 226:     I2C1_ErrorEventHandler();
 12734     1C55  319F  276D  319C   	fcall	_I2C1_ErrorEventHandler
 12735     1C58                     i1l190:
 12736     1C58  0008               	return
 12737     1C59                     __end_of_I2C1_ERROR_ISR:
 12738                           
 12739                           	psect	text42
 12740     1F6D                     __ptext42:	
 12741 ;; *************** function _I2C1_ErrorEventHandler *****************
 12742 ;; Defined at:
 12743 ;;		line 272 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;		None
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;		None
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  1    wreg      void 
 12750 ;; Registers used:
 12751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;Total ram usage:        2 bytes
 12762 ;; Hardware stack levels used: 1
 12763 ;; Hardware stack levels required when called: 4
 12764 ;; This function calls:
 12765 ;;		NULL
 12766 ;;		_I2C1_DefaultCallback
 12767 ;;		_I2C1_EVENT_ERROR
 12768 ;;		_I2C1_EVENT_IDLE
 12769 ;;		_I2C1_EVENT_NACK
 12770 ;;		_I2C1_EVENT_RESET
 12771 ;;		_I2C1_EVENT_RX
 12772 ;;		_I2C1_EVENT_SEND_RD_ADDR
 12773 ;;		_I2C1_EVENT_SEND_WR_ADDR
 12774 ;;		_I2C1_EVENT_STOP
 12775 ;;		_I2C1_EVENT_TX
 12776 ;;		_I2C1_ErrorInterruptClear
 12777 ;; This function is called by:
 12778 ;;		_I2C1_ERROR_ISR
 12779 ;; This function uses a non-reentrant model
 12780 ;;
 12781                           
 12782     1F6D                     _I2C1_ErrorEventHandler:	
 12783                           ;psect for function _I2C1_ErrorEventHandler
 12784                           
 12785     1F6D                     i1l5615:	
 12786                           ;incstack = 0
 12787                           ; Regs used in _I2C1_ErrorEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12788                           
 12789                           
 12790                           ;mcc_generated_files/i2c_host/src/mssp.c: 274:     i2c1Status.state = I2C_STATE_ERROR;
 12791     1F6D  3006               	movlw	6
 12792     1F6E  0022               	movlb	2	; select bank2
 12793     1F6F  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 12794                           
 12795                           ;mcc_generated_files/i2c_host/src/mssp.c: 275:     i2c1Status.errorState = I2C_ERROR_BUS
      +                          _COLLISION;
 12796     1F70  3003               	movlw	3
 12797     1F71  00D3               	movwf	(_i2c1Status^(0+256)+12)	;volatile
 12798     1F72                     i1l5617:
 12799                           
 12800                           ;mcc_generated_files/i2c_host/src/mssp.c: 276:     I2C1_ErrorInterruptClear();
 12801     1F72  319C  241E  319F   	fcall	_I2C1_ErrorInterruptClear
 12802     1F75                     i1l5619:
 12803                           
 12804                           ;mcc_generated_files/i2c_host/src/mssp.c: 277:     i2c1Status.state = i2c1_eventTable[i2
      +                          c1Status.state]();
 12805     1F75  0022               	movlb	2	; select bank2
 12806     1F76  0854               	movf	(_i2c1Status^(0+256)+13),w	;volatile
 12807     1F77  00F4               	movwf	??_I2C1_ErrorEventHandler
 12808     1F78  01F5               	clrf	??_I2C1_ErrorEventHandler+1
 12809     1F79  35F4               	lslf	??_I2C1_ErrorEventHandler,f
 12810     1F7A  0DF5               	rlf	??_I2C1_ErrorEventHandler+1,f
 12811     1F7B  3060               	movlw	low _i2c1_eventTable
 12812     1F7C  0774               	addwf	??_I2C1_ErrorEventHandler,w
 12813     1F7D  0084               	movwf	4
 12814     1F7E  3018               	movlw	high _i2c1_eventTable
 12815     1F7F  3D75               	addwfc	??_I2C1_ErrorEventHandler+1,w
 12816     1F80  3880               	iorlw	128
 12817     1F81  0085               	movwf	5
 12818     1F82  3F01               	moviw [1]fsr0
 12819     1F83  008A               	movwf	10
 12820     1F84  3F00               	moviw [0]fsr0
 12821     1F85  000A               	callw
 12822     1F86  319F               	pagesel	$
 12823     1F87  0022               	movlb	2	; select bank2
 12824     1F88  00D4               	movwf	(_i2c1Status^(0+256)+13)	;volatile
 12825     1F89                     i1l5621:
 12826                           
 12827                           ;mcc_generated_files/i2c_host/src/mssp.c: 278:     I2C1_Callback();
 12828     1F89  0023               	movlb	3	; select bank3
 12829     1F8A  083D               	movf	(_I2C1_Callback+1)^(0+384),w
 12830     1F8B  008A               	movwf	10
 12831     1F8C  083C               	movf	_I2C1_Callback^(0+384),w
 12832     1F8D  000A               	callw
 12833     1F8E  319F               	pagesel	$
 12834     1F8F                     i1l208:
 12835     1F8F  0008               	return
 12836     1F90                     __end_of_I2C1_ErrorEventHandler:
 12837                           
 12838                           	psect	text43
 12839     1CA2                     __ptext43:	
 12840 ;; *************** function _I2C1_EVENT_RESET *****************
 12841 ;; Defined at:
 12842 ;;		line 384 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12843 ;; Parameters:    Size  Location     Type
 12844 ;;		None
 12845 ;; Auto vars:     Size  Location     Type
 12846 ;;		None
 12847 ;; Return value:  Size  Location     Type
 12848 ;;                  1    wreg      enum E10210
 12849 ;; Registers used:
 12850 ;;		wreg, status,2, status,0, pclath, cstack
 12851 ;; Tracked objects:
 12852 ;;		On entry : 0/0
 12853 ;;		On exit  : 0/0
 12854 ;;		Unchanged: 0/0
 12855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;Total ram usage:        0 bytes
 12861 ;; Hardware stack levels used: 1
 12862 ;; Hardware stack levels required when called: 1
 12863 ;; This function calls:
 12864 ;;		_I2C1_BusReset
 12865 ;; This function is called by:
 12866 ;;		_I2C1_EVENT_ERROR
 12867 ;;		_I2C1_EventHandler
 12868 ;;		_I2C1_ErrorEventHandler
 12869 ;; This function uses a non-reentrant model
 12870 ;;
 12871                           
 12872     1CA2                     _I2C1_EVENT_RESET:	
 12873                           ;psect for function _I2C1_EVENT_RESET
 12874                           
 12875     1CA2                     i1l5307:	
 12876                           ;incstack = 0
 12877                           ; Regs used in _I2C1_EVENT_RESET: [wreg+status,2+status,0+pclath+cstack]
 12878                           
 12879                           
 12880                           ;mcc_generated_files/i2c_host/src/mssp.c: 386:     I2C1_BusReset();
 12881     1CA2  319C  243D  319C   	fcall	_I2C1_BusReset
 12882     1CA5                     i1l5309:
 12883                           
 12884                           ;mcc_generated_files/i2c_host/src/mssp.c: 387:     i2c1Status.busy = 0;
 12885     1CA5  0022               	movlb	2	; select bank2
 12886     1CA6  01C7               	clrf	_i2c1Status^(0+256)	;volatile
 12887     1CA7                     i1l5311:
 12888                           
 12889                           ;mcc_generated_files/i2c_host/src/mssp.c: 388:     return I2C_STATE_IDLE;
 12890     1CA7  3000               	movlw	0
 12891     1CA8                     i1l247:
 12892     1CA8  0008               	return
 12893     1CA9                     __end_of_I2C1_EVENT_RESET:
 12894                           
 12895                           	psect	text44
 12896     1CC0                     __ptext44:	
 12897 ;; *************** function _I2C1_EVENT_STOP *****************
 12898 ;; Defined at:
 12899 ;;		line 377 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12900 ;; Parameters:    Size  Location     Type
 12901 ;;		None
 12902 ;; Auto vars:     Size  Location     Type
 12903 ;;		None
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      enum E10210
 12906 ;; Registers used:
 12907 ;;		wreg, status,2, status,0, pclath, cstack
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12917 ;;Total ram usage:        0 bytes
 12918 ;; Hardware stack levels used: 1
 12919 ;; Hardware stack levels required when called: 2
 12920 ;; This function calls:
 12921 ;;		_I2C1_Close
 12922 ;;		_I2C1_StopSend
 12923 ;; This function is called by:
 12924 ;;		_I2C1_EVENT_TX
 12925 ;;		_I2C1_EVENT_NACK
 12926 ;;		_I2C1_EventHandler
 12927 ;;		_I2C1_ErrorEventHandler
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931     1CC0                     _I2C1_EVENT_STOP:	
 12932                           ;psect for function _I2C1_EVENT_STOP
 12933                           
 12934     1CC0                     i1l5285:	
 12935                           ;incstack = 0
 12936                           ; Regs used in _I2C1_EVENT_STOP: [wreg+status,2+status,0+pclath+cstack]
 12937                           
 12938                           
 12939                           ;mcc_generated_files/i2c_host/src/mssp.c: 379:     I2C1_StopSend();
 12940     1CC0  319C  2424  319C   	fcall	_I2C1_StopSend
 12941                           
 12942                           ;mcc_generated_files/i2c_host/src/mssp.c: 380:     I2C1_Close();
 12943     1CC3  319D  25EF  319C   	fcall	_I2C1_Close
 12944     1CC6                     i1l5287:
 12945                           
 12946                           ;mcc_generated_files/i2c_host/src/mssp.c: 381:     return I2C_STATE_IDLE;
 12947     1CC6  3000               	movlw	0
 12948     1CC7                     i1l244:
 12949     1CC7  0008               	return
 12950     1CC8                     __end_of_I2C1_EVENT_STOP:
 12951                           
 12952                           	psect	text45
 12953     1C7D                     __ptext45:	
 12954 ;; *************** function _I2C1_EVENT_ERROR *****************
 12955 ;; Defined at:
 12956 ;;		line 370 in file "mcc_generated_files/i2c_host/src/mssp.c"
 12957 ;; Parameters:    Size  Location     Type
 12958 ;;		None
 12959 ;; Auto vars:     Size  Location     Type
 12960 ;;  retEventStat    1    0[COMMON] enum E10210
 12961 ;; Return value:  Size  Location     Type
 12962 ;;                  1    wreg      enum E10210
 12963 ;; Registers used:
 12964 ;;		wreg, status,2, status,0, pclath, cstack
 12965 ;; Tracked objects:
 12966 ;;		On entry : 0/0
 12967 ;;		On exit  : 0/0
 12968 ;;		Unchanged: 0/0
 12969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12974 ;;Total ram usage:        1 bytes
 12975 ;; Hardware stack levels used: 1
 12976 ;; Hardware stack levels required when called: 2
 12977 ;; This function calls:
 12978 ;;		_I2C1_EVENT_RESET
 12979 ;; This function is called by:
 12980 ;;		_I2C1_EventHandler
 12981 ;;		_I2C1_ErrorEventHandler
 12982 ;; This function uses a non-reentrant model
 12983 ;;
 12984                           
 12985     1C7D                     _I2C1_EVENT_ERROR:	
 12986                           ;psect for function _I2C1_EVENT_ERROR
 12987                           
 12988     1C7D                     i1l5495:	
 12989                           ;incstack = 0
 12990                           ; Regs used in _I2C1_EVENT_ERROR: [wreg+status,2+status,0+pclath+cstack]
 12991                           
 12992     1C7D                     i1l5497:
 12993                           
 12994                           ;mcc_generated_files/i2c_host/src/mssp.c: 373:     retEventState = I2C1_EVENT_RESET();
 12995     1C7D  319C  24A2  319C   	fcall	_I2C1_EVENT_RESET
 12996     1C80  00F0               	movwf	I2C1_EVENT_ERROR@retEventState
 12997     1C81                     i1l5499:
 12998                           
 12999                           ;mcc_generated_files/i2c_host/src/mssp.c: 374:     return retEventState;
 13000     1C81  0870               	movf	I2C1_EVENT_ERROR@retEventState,w
 13001     1C82                     i1l241:
 13002     1C82  0008               	return
 13003     1C83                     __end_of_I2C1_EVENT_ERROR:
 13004                           
 13005                           	psect	text46
 13006     1C77                     __ptext46:	
 13007 ;; *************** function _I2C1_EVENT_NACK *****************
 13008 ;; Defined at:
 13009 ;;		line 363 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13010 ;; Parameters:    Size  Location     Type
 13011 ;;		None
 13012 ;; Auto vars:     Size  Location     Type
 13013 ;;  retEventStat    1    0[COMMON] enum E10210
 13014 ;; Return value:  Size  Location     Type
 13015 ;;                  1    wreg      enum E10210
 13016 ;; Registers used:
 13017 ;;		wreg, status,2, status,0, pclath, cstack
 13018 ;; Tracked objects:
 13019 ;;		On entry : 0/0
 13020 ;;		On exit  : 0/0
 13021 ;;		Unchanged: 0/0
 13022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13026 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13027 ;;Total ram usage:        1 bytes
 13028 ;; Hardware stack levels used: 1
 13029 ;; Hardware stack levels required when called: 3
 13030 ;; This function calls:
 13031 ;;		_I2C1_EVENT_STOP
 13032 ;; This function is called by:
 13033 ;;		_I2C1_EventHandler
 13034 ;;		_I2C1_ErrorEventHandler
 13035 ;; This function uses a non-reentrant model
 13036 ;;
 13037                           
 13038     1C77                     _I2C1_EVENT_NACK:	
 13039                           ;psect for function _I2C1_EVENT_NACK
 13040                           
 13041     1C77                     i1l5487:	
 13042                           ;incstack = 0
 13043                           ; Regs used in _I2C1_EVENT_NACK: [wreg+status,2+status,0+pclath+cstack]
 13044                           
 13045     1C77                     i1l5489:
 13046                           
 13047                           ;mcc_generated_files/i2c_host/src/mssp.c: 366:     retEventState = I2C1_EVENT_STOP();
 13048     1C77  319C  24C0  319C   	fcall	_I2C1_EVENT_STOP
 13049     1C7A  00F0               	movwf	I2C1_EVENT_NACK@retEventState
 13050     1C7B                     i1l5491:
 13051                           
 13052                           ;mcc_generated_files/i2c_host/src/mssp.c: 367:     return retEventState;
 13053     1C7B  0870               	movf	I2C1_EVENT_NACK@retEventState,w
 13054     1C7C                     i1l238:
 13055     1C7C  0008               	return
 13056     1C7D                     __end_of_I2C1_EVENT_NACK:
 13057                           
 13058                           	psect	text47
 13059     10D5                     __ptext47:	
 13060 ;; *************** function _I2C1_EVENT_RX *****************
 13061 ;; Defined at:
 13062 ;;		line 331 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13063 ;; Parameters:    Size  Location     Type
 13064 ;;		None
 13065 ;; Auto vars:     Size  Location     Type
 13066 ;;  retEventStat    1    1[COMMON] enum E10210
 13067 ;; Return value:  Size  Location     Type
 13068 ;;                  1    wreg      enum E10210
 13069 ;; Registers used:
 13070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13071 ;; Tracked objects:
 13072 ;;		On entry : 0/0
 13073 ;;		On exit  : 0/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13080 ;;Total ram usage:        2 bytes
 13081 ;; Hardware stack levels used: 1
 13082 ;; Hardware stack levels required when called: 1
 13083 ;; This function calls:
 13084 ;;		_I2C1_AckSend
 13085 ;;		_I2C1_DataReceive
 13086 ;;		_I2C1_IsRxBufFull
 13087 ;;		_I2C1_NackSend
 13088 ;;		_I2C1_ReceiveEnable
 13089 ;;		_I2C1_RestartDisable
 13090 ;; This function is called by:
 13091 ;;		_I2C1_EventHandler
 13092 ;;		_I2C1_ErrorEventHandler
 13093 ;; This function uses a non-reentrant model
 13094 ;;
 13095                           
 13096     10D5                     _I2C1_EVENT_RX:	
 13097                           ;psect for function _I2C1_EVENT_RX
 13098                           
 13099     10D5                     i1l5461:	
 13100                           ;incstack = 0
 13101                           ; Regs used in _I2C1_EVENT_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13102                           
 13103                           
 13104                           ;mcc_generated_files/i2c_host/src/mssp.c: 333:     i2c_host_event_states_t retEventState
      +                           = I2C_STATE_RX;
 13105     10D5  3004               	movlw	4
 13106     10D6  00F1               	movwf	I2C1_EVENT_RX@retEventState
 13107     10D7                     i1l5463:
 13108                           
 13109                           ;mcc_generated_files/i2c_host/src/mssp.c: 335:     if (I2C1_IsRxBufFull())
 13110     10D7  319C  2449  3190   	fcall	_I2C1_IsRxBufFull
 13111     10DA  3A00               	xorlw	0
 13112     10DB  1903               	skipnz
 13113     10DC  28DE               	goto	u498_21
 13114     10DD  28DF               	goto	u498_20
 13115     10DE                     u498_21:
 13116     10DE  2911               	goto	i1l5481
 13117     10DF                     u498_20:
 13118     10DF                     i1l5465:
 13119                           
 13120                           ;mcc_generated_files/i2c_host/src/mssp.c: 336:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 337:         if (i2c1Status.readLength > 0)
 13121     10DF  0022               	movlb	2	; select bank2
 13122     10E0  0850               	movf	(_i2c1Status^(0+256)+9),w	;volatile
 13123     10E1  0451               	iorwf	((_i2c1Status+1)^(0+256)+9),w	;volatile
 13124     10E2  1903               	btfsc	3,2
 13125     10E3  28E5               	goto	u499_21
 13126     10E4  28E6               	goto	u499_20
 13127     10E5                     u499_21:
 13128     10E5  28FE               	goto	i1l5473
 13129     10E6                     u499_20:
 13130     10E6                     i1l5467:
 13131                           
 13132                           ;mcc_generated_files/i2c_host/src/mssp.c: 338:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 339:             *i2c1Status.readPtr++ = I2C1_DataReceive();
 13133     10E6  319C  2427  3190   	fcall	_I2C1_DataReceive
 13134     10E9  00F0               	movwf	??_I2C1_EVENT_RX
 13135     10EA  3007               	movlw	7
 13136     10EB  3E47               	addlw	(low (_i2c1Status| (0+256)))& (0+255)
 13137     10EC  0086               	movwf	6
 13138     10ED  3001               	movlw	1	; select bank2/3
 13139     10EE  0087               	movwf	7
 13140     10EF  3F40               	moviw [0]fsr1
 13141     10F0  0084               	movwf	4
 13142     10F1  3F41               	moviw [1]fsr1
 13143     10F2  0085               	movwf	5
 13144     10F3  0870               	movf	??_I2C1_EVENT_RX,w
 13145     10F4  0080               	movwf	0
 13146     10F5                     i1l5469:
 13147     10F5  3001               	movlw	1
 13148     10F6  0022               	movlb	2	; select bank2
 13149     10F7  07CE               	addwf	(low ((_i2c1Status| (0+256)+7)))^0,f	;volatile
 13150     10F8  3000               	movlw	0
 13151     10F9  3DCF               	addwfc	((low ((_i2c1Status| (0+256)+7))+1))^0,f	;volatile
 13152     10FA                     i1l5471:
 13153                           
 13154                           ;mcc_generated_files/i2c_host/src/mssp.c: 340:             i2c1Status.readLength--;
 13155     10FA  3001               	movlw	1
 13156     10FB  02D0               	subwf	(_i2c1Status^(0+256)+9),f	;volatile
 13157     10FC  3000               	movlw	0
 13158     10FD  3BD1               	subwfb	((_i2c1Status+1)^(0+256)+9),f	;volatile
 13159     10FE                     i1l5473:
 13160                           
 13161                           ;mcc_generated_files/i2c_host/src/mssp.c: 344:         if (i2c1Status.readLength > 0)
 13162     10FE  0850               	movf	(_i2c1Status^(0+256)+9),w	;volatile
 13163     10FF  0451               	iorwf	((_i2c1Status+1)^(0+256)+9),w	;volatile
 13164     1100  1903               	btfsc	3,2
 13165     1101  2903               	goto	u500_21
 13166     1102  2904               	goto	u500_20
 13167     1103                     u500_21:
 13168     1103  2908               	goto	i1l5477
 13169     1104                     u500_20:
 13170     1104                     i1l5475:
 13171                           
 13172                           ;mcc_generated_files/i2c_host/src/mssp.c: 345:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 346:             I2C1_AckSend();
 13173     1104  319C  2445  3190   	fcall	_I2C1_AckSend
 13174                           
 13175                           ;mcc_generated_files/i2c_host/src/mssp.c: 347:         }
 13176     1107  2914               	goto	i1l5483
 13177     1108                     i1l5477:
 13178                           
 13179                           ;mcc_generated_files/i2c_host/src/mssp.c: 349:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 350:             I2C1_RestartDisable();
 13180     1108  319C  242D  3190   	fcall	_I2C1_RestartDisable
 13181                           
 13182                           ;mcc_generated_files/i2c_host/src/mssp.c: 351:             I2C1_NackSend();
 13183     110B  319C  244D  3190   	fcall	_I2C1_NackSend
 13184     110E                     i1l5479:
 13185                           
 13186                           ;mcc_generated_files/i2c_host/src/mssp.c: 352:             retEventState = I2C_STATE_STO
      +                          P;
 13187     110E  3007               	movlw	7
 13188     110F  00F1               	movwf	I2C1_EVENT_RX@retEventState
 13189     1110  2914               	goto	i1l5483
 13190     1111                     i1l5481:
 13191                           
 13192                           ;mcc_generated_files/i2c_host/src/mssp.c: 357:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 358:         I2C1_ReceiveEnable();
 13193     1111  319C  242A  3190   	fcall	_I2C1_ReceiveEnable
 13194     1114                     i1l5483:
 13195                           
 13196                           ;mcc_generated_files/i2c_host/src/mssp.c: 360:     return retEventState;
 13197     1114  0871               	movf	I2C1_EVENT_RX@retEventState,w
 13198     1115                     i1l235:
 13199     1115  0008               	return
 13200     1116                     __end_of_I2C1_EVENT_RX:
 13201                           
 13202                           	psect	text48
 13203     1C9B                     __ptext48:	
 13204 ;; *************** function _I2C1_EVENT_SEND_WR_ADDR *****************
 13205 ;; Defined at:
 13206 ;;		line 299 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13207 ;; Parameters:    Size  Location     Type
 13208 ;;		None
 13209 ;; Auto vars:     Size  Location     Type
 13210 ;;		None
 13211 ;; Return value:  Size  Location     Type
 13212 ;;                  1    wreg      enum E10210
 13213 ;; Registers used:
 13214 ;;		wreg, status,2, status,0, pclath, cstack
 13215 ;; Tracked objects:
 13216 ;;		On entry : 0/0
 13217 ;;		On exit  : 0/0
 13218 ;;		Unchanged: 0/0
 13219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13224 ;;Total ram usage:        0 bytes
 13225 ;; Hardware stack levels used: 1
 13226 ;; Hardware stack levels required when called: 1
 13227 ;; This function calls:
 13228 ;;		_I2C1_DataTransmit
 13229 ;; This function is called by:
 13230 ;;		_I2C1_EventHandler
 13231 ;;		_I2C1_ErrorEventHandler
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235     1C9B                     _I2C1_EVENT_SEND_WR_ADDR:	
 13236                           ;psect for function _I2C1_EVENT_SEND_WR_ADDR
 13237                           
 13238     1C9B                     i1l5431:	
 13239                           ;incstack = 0
 13240                           ; Regs used in _I2C1_EVENT_SEND_WR_ADDR: [wreg+status,2+status,0+pclath+cstack]
 13241                           
 13242                           
 13243                           ;mcc_generated_files/i2c_host/src/mssp.c: 301:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
 13244     1C9B  0022               	movlb	2	; select bank2
 13245     1C9C  3548               	lslf	(_i2c1Status^(0+256)+1),w	;volatile
 13246     1C9D  319C  2461  319C   	fcall	_I2C1_DataTransmit
 13247     1CA0                     i1l5433:
 13248                           
 13249                           ;mcc_generated_files/i2c_host/src/mssp.c: 302:     return I2C_STATE_TX;
 13250     1CA0  3003               	movlw	3
 13251     1CA1                     i1l220:
 13252     1CA1  0008               	return
 13253     1CA2                     __end_of_I2C1_EVENT_SEND_WR_ADDR:
 13254                           
 13255                           	psect	text49
 13256     1CB8                     __ptext49:	
 13257 ;; *************** function _I2C1_EVENT_SEND_RD_ADDR *****************
 13258 ;; Defined at:
 13259 ;;		line 293 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13260 ;; Parameters:    Size  Location     Type
 13261 ;;		None
 13262 ;; Auto vars:     Size  Location     Type
 13263 ;;		None
 13264 ;; Return value:  Size  Location     Type
 13265 ;;                  1    wreg      enum E10210
 13266 ;; Registers used:
 13267 ;;		wreg, status,2, status,0, pclath, cstack
 13268 ;; Tracked objects:
 13269 ;;		On entry : 0/0
 13270 ;;		On exit  : 0/0
 13271 ;;		Unchanged: 0/0
 13272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13277 ;;Total ram usage:        0 bytes
 13278 ;; Hardware stack levels used: 1
 13279 ;; Hardware stack levels required when called: 1
 13280 ;; This function calls:
 13281 ;;		_I2C1_DataTransmit
 13282 ;; This function is called by:
 13283 ;;		_I2C1_EventHandler
 13284 ;;		_I2C1_ErrorEventHandler
 13285 ;; This function uses a non-reentrant model
 13286 ;;
 13287                           
 13288     1CB8                     _I2C1_EVENT_SEND_RD_ADDR:	
 13289                           ;psect for function _I2C1_EVENT_SEND_RD_ADDR
 13290                           
 13291     1CB8                     i1l5425:	
 13292                           ;incstack = 0
 13293                           ; Regs used in _I2C1_EVENT_SEND_RD_ADDR: [wreg+status,2+status,0+pclath+cstack]
 13294                           
 13295                           
 13296                           ;mcc_generated_files/i2c_host/src/mssp.c: 295:     I2C1_DataTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1 | 1));
 13297     1CB8  1403               	setc
 13298     1CB9  0022               	movlb	2	; select bank2
 13299     1CBA  0D48               	rlf	(_i2c1Status^(0+256)+1),w	;volatile
 13300     1CBB  319C  2461  319C   	fcall	_I2C1_DataTransmit
 13301     1CBE                     i1l5427:
 13302                           
 13303                           ;mcc_generated_files/i2c_host/src/mssp.c: 296:     return I2C_STATE_RX;
 13304     1CBE  3004               	movlw	4
 13305     1CBF                     i1l217:
 13306     1CBF  0008               	return
 13307     1CC0                     __end_of_I2C1_EVENT_SEND_RD_ADDR:
 13308                           
 13309                           	psect	text50
 13310     1C51                     __ptext50:	
 13311 ;; *************** function _I2C1_EVENT_IDLE *****************
 13312 ;; Defined at:
 13313 ;;		line 287 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;		None
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;		None
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  1    wreg      enum E10210
 13320 ;; Registers used:
 13321 ;;		wreg, status,2
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/0
 13324 ;;		On exit  : 0/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13331 ;;Total ram usage:        0 bytes
 13332 ;; Hardware stack levels used: 1
 13333 ;; This function calls:
 13334 ;;		Nothing
 13335 ;; This function is called by:
 13336 ;;		_I2C1_EventHandler
 13337 ;;		_I2C1_ErrorEventHandler
 13338 ;; This function uses a non-reentrant model
 13339 ;;
 13340                           
 13341     1C51                     _I2C1_EVENT_IDLE:	
 13342                           ;psect for function _I2C1_EVENT_IDLE
 13343                           
 13344     1C51                     i1l5419:	
 13345                           ;incstack = 0
 13346                           ; Regs used in _I2C1_EVENT_IDLE: [wreg+status,2]
 13347                           
 13348                           
 13349                           ;mcc_generated_files/i2c_host/src/mssp.c: 289:     i2c1Status.busy = 0;
 13350     1C51  0022               	movlb	2	; select bank2
 13351     1C52  01C7               	clrf	_i2c1Status^(0+256)	;volatile
 13352     1C53                     i1l5421:
 13353                           
 13354                           ;mcc_generated_files/i2c_host/src/mssp.c: 290:     return I2C_STATE_RESET;
 13355     1C53  3008               	movlw	8
 13356     1C54                     i1l214:
 13357     1C54  0008               	return
 13358     1C55                     __end_of_I2C1_EVENT_IDLE:
 13359                           
 13360                           	psect	text51
 13361     1076                     __ptext51:	
 13362 ;; *************** function _I2C1_EVENT_TX *****************
 13363 ;; Defined at:
 13364 ;;		line 305 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13365 ;; Parameters:    Size  Location     Type
 13366 ;;		None
 13367 ;; Auto vars:     Size  Location     Type
 13368 ;;  retEventStat    1    3[COMMON] enum E10210
 13369 ;; Return value:  Size  Location     Type
 13370 ;;                  1    wreg      enum E10210
 13371 ;; Registers used:
 13372 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13373 ;; Tracked objects:
 13374 ;;		On entry : 0/0
 13375 ;;		On exit  : 0/0
 13376 ;;		Unchanged: 0/0
 13377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13381 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13382 ;;Total ram usage:        3 bytes
 13383 ;; Hardware stack levels used: 1
 13384 ;; Hardware stack levels required when called: 3
 13385 ;; This function calls:
 13386 ;;		_I2C1_DataTransmit
 13387 ;;		_I2C1_EVENT_STOP
 13388 ;;		_I2C1_RestartEnable
 13389 ;; This function is called by:
 13390 ;;		_I2C1_EventHandler
 13391 ;;		_I2C1_ErrorEventHandler
 13392 ;; This function uses a non-reentrant model
 13393 ;;
 13394                           
 13395     1076                     _I2C1_EVENT_TX:	
 13396                           ;psect for function _I2C1_EVENT_TX
 13397                           
 13398     1076                     i1l5437:	
 13399                           ;incstack = 0
 13400                           ; Regs used in _I2C1_EVENT_TX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13401                           
 13402     1076                     i1l5439:
 13403                           
 13404                           ;mcc_generated_files/i2c_host/src/mssp.c: 308:     if (i2c1Status.writeLength)
 13405     1076  0022               	movlb	2	; select bank2
 13406     1077  084C               	movf	(_i2c1Status^(0+256)+5),w	;volatile
 13407     1078  044D               	iorwf	((_i2c1Status+1)^(0+256)+5),w	;volatile
 13408     1079  1903               	btfsc	3,2
 13409     107A  287C               	goto	u496_21
 13410     107B  287D               	goto	u496_20
 13411     107C                     u496_21:
 13412     107C  2893               	goto	i1l5447
 13413     107D                     u496_20:
 13414     107D                     i1l5441:
 13415                           
 13416                           ;mcc_generated_files/i2c_host/src/mssp.c: 309:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 310:         i2c1Status.writeLength--;
 13417     107D  3001               	movlw	1
 13418     107E  02CC               	subwf	(_i2c1Status^(0+256)+5),f	;volatile
 13419     107F  3000               	movlw	0
 13420     1080  3BCD               	subwfb	((_i2c1Status+1)^(0+256)+5),f	;volatile
 13421     1081                     i1l5443:
 13422                           
 13423                           ;mcc_generated_files/i2c_host/src/mssp.c: 311:         I2C1_DataTransmit(*i2c1Status.wri
      +                          tePtr++);
 13424     1081  084B               	movf	((low ((_i2c1Status| (0+256)+3))+1))^0,w	;volatile
 13425     1082  00F2               	movwf	??_I2C1_EVENT_TX+1
 13426     1083  084A               	movf	(low ((_i2c1Status| (0+256)+3)))^0,w	;volatile
 13427     1084  00F1               	movwf	??_I2C1_EVENT_TX
 13428     1085  0ACA               	incf	(low ((_i2c1Status| (0+256)+3)))^0,f	;volatile
 13429     1086  1903               	skipnz
 13430     1087  0ACB               	incf	((low ((_i2c1Status| (0+256)+3))+1))^0,f	;volatile
 13431     1088  0871               	movf	??_I2C1_EVENT_TX,w
 13432     1089  0086               	movwf	6
 13433     108A  0872               	movf	??_I2C1_EVENT_TX+1,w
 13434     108B  0087               	movwf	7
 13435     108C  0801               	movf	1,w
 13436     108D  319C  2461  3190   	fcall	_I2C1_DataTransmit
 13437     1090                     i1l5445:
 13438                           
 13439                           ;mcc_generated_files/i2c_host/src/mssp.c: 312:         retEventState = I2C_STATE_TX;
 13440     1090  3003               	movlw	3
 13441     1091  00F3               	movwf	I2C1_EVENT_TX@retEventState
 13442                           
 13443                           ;mcc_generated_files/i2c_host/src/mssp.c: 313:     }
 13444     1092  28A3               	goto	i1l5457
 13445     1093                     i1l5447:
 13446                           
 13447                           ;mcc_generated_files/i2c_host/src/mssp.c: 315:     {;mcc_generated_files/i2c_host/src/ms
      +                          sp.c: 316:         if (i2c1Status.switchToRead)
 13448     1093  0852               	movf	(_i2c1Status^(0+256)+11),w	;volatile
 13449     1094  1903               	btfsc	3,2
 13450     1095  2897               	goto	u497_21
 13451     1096  2898               	goto	u497_20
 13452     1097                     u497_21:
 13453     1097  289F               	goto	i1l5455
 13454     1098                     u497_20:
 13455     1098                     i1l5449:
 13456                           
 13457                           ;mcc_generated_files/i2c_host/src/mssp.c: 317:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 318:             i2c1Status.switchToRead = 0;
 13458     1098  01D2               	clrf	(_i2c1Status^(0+256)+11)	;volatile
 13459     1099                     i1l5451:
 13460                           
 13461                           ;mcc_generated_files/i2c_host/src/mssp.c: 319:             I2C1_RestartEnable();
 13462     1099  319C  2430  3190   	fcall	_I2C1_RestartEnable
 13463     109C                     i1l5453:
 13464                           
 13465                           ;mcc_generated_files/i2c_host/src/mssp.c: 320:             retEventState = I2C_STATE_SEN
      +                          D_RD_ADDR;
 13466     109C  01F3               	clrf	I2C1_EVENT_TX@retEventState
 13467     109D  0AF3               	incf	I2C1_EVENT_TX@retEventState,f
 13468                           
 13469                           ;mcc_generated_files/i2c_host/src/mssp.c: 321:         }
 13470     109E  28A3               	goto	i1l5457
 13471     109F                     i1l5455:
 13472                           
 13473                           ;mcc_generated_files/i2c_host/src/mssp.c: 323:         {;mcc_generated_files/i2c_host/sr
      +                          c/mssp.c: 324:             retEventState = I2C1_EVENT_STOP();
 13474     109F  319C  24C0  3190   	fcall	_I2C1_EVENT_STOP
 13475     10A2  00F3               	movwf	I2C1_EVENT_TX@retEventState
 13476     10A3                     i1l5457:
 13477                           
 13478                           ;mcc_generated_files/i2c_host/src/mssp.c: 328:     return retEventState;
 13479     10A3  0873               	movf	I2C1_EVENT_TX@retEventState,w
 13480     10A4                     i1l227:
 13481     10A4  0008               	return
 13482     10A5                     __end_of_I2C1_EVENT_TX:
 13483                           
 13484                           	psect	text52
 13485     1C30                     __ptext52:	
 13486 ;; *************** function _I2C1_RestartEnable *****************
 13487 ;; Defined at:
 13488 ;;		line 415 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;		None
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;		None
 13493 ;; Return value:  Size  Location     Type
 13494 ;;                  1    wreg      void 
 13495 ;; Registers used:
 13496 ;;		None
 13497 ;; Tracked objects:
 13498 ;;		On entry : 0/0
 13499 ;;		On exit  : 0/0
 13500 ;;		Unchanged: 0/0
 13501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13506 ;;Total ram usage:        0 bytes
 13507 ;; Hardware stack levels used: 1
 13508 ;; This function calls:
 13509 ;;		Nothing
 13510 ;; This function is called by:
 13511 ;;		_I2C1_EVENT_TX
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515     1C30                     _I2C1_RestartEnable:	
 13516                           ;psect for function _I2C1_RestartEnable
 13517                           
 13518     1C30                     i1l5283:	
 13519                           ;incstack = 0
 13520                           ; Regs used in _I2C1_RestartEnable: []
 13521                           
 13522                           
 13523                           ;mcc_generated_files/i2c_host/src/mssp.c: 417:     SSP1CON2bits.RSEN = 1;
 13524     1C30  0024               	movlb	4	; select bank4
 13525     1C31  1496               	bsf	22,1	;volatile
 13526     1C32                     i1l262:
 13527     1C32  0008               	return
 13528     1C33                     __end_of_I2C1_RestartEnable:
 13529                           
 13530                           	psect	text53
 13531     1C61                     __ptext53:	
 13532 ;; *************** function _I2C1_DataTransmit *****************
 13533 ;; Defined at:
 13534 ;;		line 399 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13535 ;; Parameters:    Size  Location     Type
 13536 ;;  data            1    wreg     unsigned char 
 13537 ;; Auto vars:     Size  Location     Type
 13538 ;;  data            1    0[COMMON] unsigned char 
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  1    wreg      void 
 13541 ;; Registers used:
 13542 ;;		wreg
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/0
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13552 ;;Total ram usage:        1 bytes
 13553 ;; Hardware stack levels used: 1
 13554 ;; This function calls:
 13555 ;;		Nothing
 13556 ;; This function is called by:
 13557 ;;		_I2C1_EVENT_SEND_RD_ADDR
 13558 ;;		_I2C1_EVENT_SEND_WR_ADDR
 13559 ;;		_I2C1_EVENT_TX
 13560 ;; This function uses a non-reentrant model
 13561 ;;
 13562                           
 13563     1C61                     _I2C1_DataTransmit:	
 13564                           ;psect for function _I2C1_DataTransmit
 13565                           
 13566                           
 13567                           ;incstack = 0
 13568                           ; Regs used in _I2C1_DataTransmit: [wreg]
 13569                           ;I2C1_DataTransmit@data stored from wreg
 13570     1C61  00F0               	movwf	I2C1_DataTransmit@data
 13571     1C62                     i1l5281:
 13572                           
 13573                           ;mcc_generated_files/i2c_host/src/mssp.c: 399: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/mssp.c: 400: {;mcc_generated_files/i2c_host/src/mssp
      +                          .c: 401:     SSP1BUF = data;
 13574     1C62  0870               	movf	I2C1_DataTransmit@data,w
 13575     1C63  0024               	movlb	4	; select bank4
 13576     1C64  0091               	movwf	17	;volatile
 13577     1C65                     i1l253:
 13578     1C65  0008               	return
 13579     1C66                     __end_of_I2C1_DataTransmit:
 13580                           
 13581                           	psect	text54
 13582     1C2D                     __ptext54:	
 13583 ;; *************** function _I2C1_RestartDisable *****************
 13584 ;; Defined at:
 13585 ;;		line 420 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13586 ;; Parameters:    Size  Location     Type
 13587 ;;		None
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;		None
 13590 ;; Return value:  Size  Location     Type
 13591 ;;                  1    wreg      void 
 13592 ;; Registers used:
 13593 ;;		None
 13594 ;; Tracked objects:
 13595 ;;		On entry : 0/0
 13596 ;;		On exit  : 0/0
 13597 ;;		Unchanged: 0/0
 13598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13603 ;;Total ram usage:        0 bytes
 13604 ;; Hardware stack levels used: 1
 13605 ;; This function calls:
 13606 ;;		Nothing
 13607 ;; This function is called by:
 13608 ;;		_I2C1_EVENT_RX
 13609 ;; This function uses a non-reentrant model
 13610 ;;
 13611                           
 13612     1C2D                     _I2C1_RestartDisable:	
 13613                           ;psect for function _I2C1_RestartDisable
 13614                           
 13615     1C2D                     i1l5301:	
 13616                           ;incstack = 0
 13617                           ; Regs used in _I2C1_RestartDisable: []
 13618                           
 13619                           
 13620                           ;mcc_generated_files/i2c_host/src/mssp.c: 422:     SSP1CON2bits.RSEN = 0;
 13621     1C2D  0024               	movlb	4	; select bank4
 13622     1C2E  1096               	bcf	22,1	;volatile
 13623     1C2F                     i1l265:
 13624     1C2F  0008               	return
 13625     1C30                     __end_of_I2C1_RestartDisable:
 13626                           
 13627                           	psect	text55
 13628     1C2A                     __ptext55:	
 13629 ;; *************** function _I2C1_ReceiveEnable *****************
 13630 ;; Defined at:
 13631 ;;		line 410 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13632 ;; Parameters:    Size  Location     Type
 13633 ;;		None
 13634 ;; Auto vars:     Size  Location     Type
 13635 ;;		None
 13636 ;; Return value:  Size  Location     Type
 13637 ;;                  1    wreg      void 
 13638 ;; Registers used:
 13639 ;;		None
 13640 ;; Tracked objects:
 13641 ;;		On entry : 0/0
 13642 ;;		On exit  : 0/0
 13643 ;;		Unchanged: 0/0
 13644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13649 ;;Total ram usage:        0 bytes
 13650 ;; Hardware stack levels used: 1
 13651 ;; This function calls:
 13652 ;;		Nothing
 13653 ;; This function is called by:
 13654 ;;		_I2C1_EVENT_RX
 13655 ;; This function uses a non-reentrant model
 13656 ;;
 13657                           
 13658     1C2A                     _I2C1_ReceiveEnable:	
 13659                           ;psect for function _I2C1_ReceiveEnable
 13660                           
 13661     1C2A                     i1l5305:	
 13662                           ;incstack = 0
 13663                           ; Regs used in _I2C1_ReceiveEnable: []
 13664                           
 13665                           
 13666                           ;mcc_generated_files/i2c_host/src/mssp.c: 412:     SSP1CON2bits.RCEN = 1;
 13667     1C2A  0024               	movlb	4	; select bank4
 13668     1C2B  1596               	bsf	22,3	;volatile
 13669     1C2C                     i1l259:
 13670     1C2C  0008               	return
 13671     1C2D                     __end_of_I2C1_ReceiveEnable:
 13672                           
 13673                           	psect	text56
 13674     1C4D                     __ptext56:	
 13675 ;; *************** function _I2C1_NackSend *****************
 13676 ;; Defined at:
 13677 ;;		line 441 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13678 ;; Parameters:    Size  Location     Type
 13679 ;;		None
 13680 ;; Auto vars:     Size  Location     Type
 13681 ;;		None
 13682 ;; Return value:  Size  Location     Type
 13683 ;;                  1    wreg      void 
 13684 ;; Registers used:
 13685 ;;		None
 13686 ;; Tracked objects:
 13687 ;;		On entry : 0/0
 13688 ;;		On exit  : 0/0
 13689 ;;		Unchanged: 0/0
 13690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13695 ;;Total ram usage:        0 bytes
 13696 ;; Hardware stack levels used: 1
 13697 ;; This function calls:
 13698 ;;		Nothing
 13699 ;; This function is called by:
 13700 ;;		_I2C1_EVENT_RX
 13701 ;; This function uses a non-reentrant model
 13702 ;;
 13703                           
 13704     1C4D                     _I2C1_NackSend:	
 13705                           ;psect for function _I2C1_NackSend
 13706                           
 13707     1C4D                     i1l5303:	
 13708                           ;incstack = 0
 13709                           ; Regs used in _I2C1_NackSend: []
 13710                           
 13711                           
 13712                           ;mcc_generated_files/i2c_host/src/mssp.c: 443:     SSP1CON2bits.ACKDT = 1;
 13713     1C4D  0024               	movlb	4	; select bank4
 13714     1C4E  1696               	bsf	22,5	;volatile
 13715                           
 13716                           ;mcc_generated_files/i2c_host/src/mssp.c: 444:     SSP1CON2bits.ACKEN = 1;
 13717     1C4F  1616               	bsf	22,4	;volatile
 13718     1C50                     i1l277:
 13719     1C50  0008               	return
 13720     1C51                     __end_of_I2C1_NackSend:
 13721                           
 13722                           	psect	text57
 13723     1C49                     __ptext57:	
 13724 ;; *************** function _I2C1_IsRxBufFull *****************
 13725 ;; Defined at:
 13726 ;;		line 462 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13727 ;; Parameters:    Size  Location     Type
 13728 ;;		None
 13729 ;; Auto vars:     Size  Location     Type
 13730 ;;		None
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  1    wreg      _Bool 
 13733 ;; Registers used:
 13734 ;;		wreg, status,2, status,0
 13735 ;; Tracked objects:
 13736 ;;		On entry : 0/0
 13737 ;;		On exit  : 0/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13744 ;;Total ram usage:        0 bytes
 13745 ;; Hardware stack levels used: 1
 13746 ;; This function calls:
 13747 ;;		Nothing
 13748 ;; This function is called by:
 13749 ;;		_I2C1_EVENT_RX
 13750 ;; This function uses a non-reentrant model
 13751 ;;
 13752                           
 13753     1C49                     _I2C1_IsRxBufFull:	
 13754                           ;psect for function _I2C1_IsRxBufFull
 13755                           
 13756     1C49                     i1l5291:	
 13757                           ;incstack = 0
 13758                           ; Regs used in _I2C1_IsRxBufFull: [wreg+status,2+status,0]
 13759                           
 13760                           
 13761                           ;mcc_generated_files/i2c_host/src/mssp.c: 464:     return SSP1STATbits.BF;
 13762     1C49  0024               	movlb	4	; select bank4
 13763     1C4A  0814               	movf	20,w	;volatile
 13764     1C4B  3901               	andlw	1
 13765     1C4C                     i1l289:
 13766     1C4C  0008               	return
 13767     1C4D                     __end_of_I2C1_IsRxBufFull:
 13768                           
 13769                           	psect	text58
 13770     1C27                     __ptext58:	
 13771 ;; *************** function _I2C1_DataReceive *****************
 13772 ;; Defined at:
 13773 ;;		line 394 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;		None
 13776 ;; Auto vars:     Size  Location     Type
 13777 ;;		None
 13778 ;; Return value:  Size  Location     Type
 13779 ;;                  1    wreg      unsigned char 
 13780 ;; Registers used:
 13781 ;;		wreg
 13782 ;; Tracked objects:
 13783 ;;		On entry : 0/0
 13784 ;;		On exit  : 0/0
 13785 ;;		Unchanged: 0/0
 13786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13791 ;;Total ram usage:        0 bytes
 13792 ;; Hardware stack levels used: 1
 13793 ;; This function calls:
 13794 ;;		Nothing
 13795 ;; This function is called by:
 13796 ;;		_I2C1_EVENT_RX
 13797 ;; This function uses a non-reentrant model
 13798 ;;
 13799                           
 13800     1C27                     _I2C1_DataReceive:	
 13801                           ;psect for function _I2C1_DataReceive
 13802                           
 13803     1C27                     i1l5295:	
 13804                           ;incstack = 0
 13805                           ; Regs used in _I2C1_DataReceive: [wreg]
 13806                           
 13807                           
 13808                           ;mcc_generated_files/i2c_host/src/mssp.c: 396:     return SSP1BUF;
 13809     1C27  0024               	movlb	4	; select bank4
 13810     1C28  0811               	movf	17,w	;volatile
 13811     1C29                     i1l250:
 13812     1C29  0008               	return
 13813     1C2A                     __end_of_I2C1_DataReceive:
 13814                           
 13815                           	psect	text59
 13816     1C45                     __ptext59:	
 13817 ;; *************** function _I2C1_AckSend *****************
 13818 ;; Defined at:
 13819 ;;		line 435 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13820 ;; Parameters:    Size  Location     Type
 13821 ;;		None
 13822 ;; Auto vars:     Size  Location     Type
 13823 ;;		None
 13824 ;; Return value:  Size  Location     Type
 13825 ;;                  1    wreg      void 
 13826 ;; Registers used:
 13827 ;;		None
 13828 ;; Tracked objects:
 13829 ;;		On entry : 0/0
 13830 ;;		On exit  : 0/0
 13831 ;;		Unchanged: 0/0
 13832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13837 ;;Total ram usage:        0 bytes
 13838 ;; Hardware stack levels used: 1
 13839 ;; This function calls:
 13840 ;;		Nothing
 13841 ;; This function is called by:
 13842 ;;		_I2C1_EVENT_RX
 13843 ;; This function uses a non-reentrant model
 13844 ;;
 13845                           
 13846     1C45                     _I2C1_AckSend:	
 13847                           ;psect for function _I2C1_AckSend
 13848                           
 13849     1C45                     i1l5299:	
 13850                           ;incstack = 0
 13851                           ; Regs used in _I2C1_AckSend: []
 13852                           
 13853                           
 13854                           ;mcc_generated_files/i2c_host/src/mssp.c: 437:     SSP1CON2bits.ACKDT = 0;
 13855     1C45  0024               	movlb	4	; select bank4
 13856     1C46  1296               	bcf	22,5	;volatile
 13857                           
 13858                           ;mcc_generated_files/i2c_host/src/mssp.c: 438:     SSP1CON2bits.ACKEN = 1;
 13859     1C47  1616               	bsf	22,4	;volatile
 13860     1C48                     i1l274:
 13861     1C48  0008               	return
 13862     1C49                     __end_of_I2C1_AckSend:
 13863                           
 13864                           	psect	text60
 13865     1C24                     __ptext60:	
 13866 ;; *************** function _I2C1_StopSend *****************
 13867 ;; Defined at:
 13868 ;;		line 430 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13869 ;; Parameters:    Size  Location     Type
 13870 ;;		None
 13871 ;; Auto vars:     Size  Location     Type
 13872 ;;		None
 13873 ;; Return value:  Size  Location     Type
 13874 ;;                  1    wreg      void 
 13875 ;; Registers used:
 13876 ;;		None
 13877 ;; Tracked objects:
 13878 ;;		On entry : 0/0
 13879 ;;		On exit  : 0/0
 13880 ;;		Unchanged: 0/0
 13881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13886 ;;Total ram usage:        0 bytes
 13887 ;; Hardware stack levels used: 1
 13888 ;; This function calls:
 13889 ;;		Nothing
 13890 ;; This function is called by:
 13891 ;;		_I2C1_EVENT_STOP
 13892 ;; This function uses a non-reentrant model
 13893 ;;
 13894                           
 13895     1C24                     _I2C1_StopSend:	
 13896                           ;psect for function _I2C1_StopSend
 13897                           
 13898     1C24                     i1l5245:	
 13899                           ;incstack = 0
 13900                           ; Regs used in _I2C1_StopSend: []
 13901                           
 13902                           
 13903                           ;mcc_generated_files/i2c_host/src/mssp.c: 432:     SSP1CON2bits.PEN = 1;
 13904     1C24  0024               	movlb	4	; select bank4
 13905     1C25  1516               	bsf	22,2	;volatile
 13906     1C26                     i1l271:
 13907     1C26  0008               	return
 13908     1C27                     __end_of_I2C1_StopSend:
 13909                           
 13910                           	psect	text61
 13911     1DEF                     __ptext61:	
 13912 ;; *************** function _I2C1_Close *****************
 13913 ;; Defined at:
 13914 ;;		line 244 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13915 ;; Parameters:    Size  Location     Type
 13916 ;;		None
 13917 ;; Auto vars:     Size  Location     Type
 13918 ;;		None
 13919 ;; Return value:  Size  Location     Type
 13920 ;;                  1    wreg      void 
 13921 ;; Registers used:
 13922 ;;		status,2, status,0, pclath, cstack
 13923 ;; Tracked objects:
 13924 ;;		On entry : 0/0
 13925 ;;		On exit  : 0/0
 13926 ;;		Unchanged: 0/0
 13927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13932 ;;Total ram usage:        0 bytes
 13933 ;; Hardware stack levels used: 1
 13934 ;; Hardware stack levels required when called: 1
 13935 ;; This function calls:
 13936 ;;		_I2C1_ErrorInterruptClear
 13937 ;;		_I2C1_InterruptClear
 13938 ;;		_I2C1_StatusFlagsClear
 13939 ;; This function is called by:
 13940 ;;		_I2C1_EVENT_STOP
 13941 ;; This function uses a non-reentrant model
 13942 ;;
 13943                           
 13944     1DEF                     _I2C1_Close:	
 13945                           ;psect for function _I2C1_Close
 13946                           
 13947     1DEF                     i1l5235:	
 13948                           ;incstack = 0
 13949                           ; Regs used in _I2C1_Close: [status,2+status,0+pclath+cstack]
 13950                           
 13951                           
 13952                           ;mcc_generated_files/i2c_host/src/mssp.c: 246:     i2c1Status.busy = 0;
 13953     1DEF  0022               	movlb	2	; select bank2
 13954     1DF0  01C7               	clrf	_i2c1Status^(0+256)	;volatile
 13955     1DF1                     i1l5237:
 13956                           
 13957                           ;mcc_generated_files/i2c_host/src/mssp.c: 247:     i2c1Status.address = 0xFF;
 13958     1DF1  3000               	movlw	0
 13959     1DF2  00C9               	movwf	((_i2c1Status+1)^(0+256)+1)	;volatile
 13960     1DF3  30FF               	movlw	255
 13961     1DF4  00C8               	movwf	(_i2c1Status^(0+256)+1)	;volatile
 13962                           
 13963                           ;mcc_generated_files/i2c_host/src/mssp.c: 248:     i2c1Status.writePtr = ((void*)0);
 13964     1DF5  01CA               	clrf	(low ((_i2c1Status| (0+256)+3)))^0	;volatile
 13965     1DF6  01CB               	clrf	((low ((_i2c1Status| (0+256)+3))+1))^0	;volatile
 13966                           
 13967                           ;mcc_generated_files/i2c_host/src/mssp.c: 249:     i2c1Status.readPtr = ((void*)0);
 13968     1DF7  01CE               	clrf	(low ((_i2c1Status| (0+256)+7)))^0	;volatile
 13969     1DF8  01CF               	clrf	((low ((_i2c1Status| (0+256)+7))+1))^0	;volatile
 13970                           
 13971                           ;mcc_generated_files/i2c_host/src/mssp.c: 250:     i2c1Status.state = I2C_STATE_IDLE;
 13972     1DF9  01D4               	clrf	(_i2c1Status^(0+256)+13)	;volatile
 13973     1DFA                     i1l5239:
 13974                           
 13975                           ;mcc_generated_files/i2c_host/src/mssp.c: 251:     I2C1_InterruptClear();
 13976     1DFA  319C  2421  319D   	fcall	_I2C1_InterruptClear
 13977     1DFD                     i1l5241:
 13978                           
 13979                           ;mcc_generated_files/i2c_host/src/mssp.c: 252:     I2C1_ErrorInterruptClear();
 13980     1DFD  319C  241E  319D   	fcall	_I2C1_ErrorInterruptClear
 13981     1E00                     i1l5243:
 13982                           
 13983                           ;mcc_generated_files/i2c_host/src/mssp.c: 253:     I2C1_StatusFlagsClear();
 13984     1E00  319C  2441  319D   	fcall	_I2C1_StatusFlagsClear
 13985     1E03                     i1l199:
 13986     1E03  0008               	return
 13987     1E04                     __end_of_I2C1_Close:
 13988                           
 13989                           	psect	text62
 13990     1C41                     __ptext62:	
 13991 ;; *************** function _I2C1_StatusFlagsClear *****************
 13992 ;; Defined at:
 13993 ;;		line 489 in file "mcc_generated_files/i2c_host/src/mssp.c"
 13994 ;; Parameters:    Size  Location     Type
 13995 ;;		None
 13996 ;; Auto vars:     Size  Location     Type
 13997 ;;		None
 13998 ;; Return value:  Size  Location     Type
 13999 ;;                  1    wreg      void 
 14000 ;; Registers used:
 14001 ;;		None
 14002 ;; Tracked objects:
 14003 ;;		On entry : 0/0
 14004 ;;		On exit  : 0/0
 14005 ;;		Unchanged: 0/0
 14006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14011 ;;Total ram usage:        0 bytes
 14012 ;; Hardware stack levels used: 1
 14013 ;; This function calls:
 14014 ;;		Nothing
 14015 ;; This function is called by:
 14016 ;;		_I2C1_Close
 14017 ;; This function uses a non-reentrant model
 14018 ;;
 14019                           
 14020     1C41                     _I2C1_StatusFlagsClear:	
 14021                           ;psect for function _I2C1_StatusFlagsClear
 14022                           
 14023     1C41                     i1l5131:	
 14024                           ;incstack = 0
 14025                           ; Regs used in _I2C1_StatusFlagsClear: []
 14026                           
 14027                           
 14028                           ;mcc_generated_files/i2c_host/src/mssp.c: 491:     SSP1CON1bits.WCOL = 0;
 14029     1C41  0024               	movlb	4	; select bank4
 14030     1C42  1395               	bcf	21,7	;volatile
 14031                           
 14032                           ;mcc_generated_files/i2c_host/src/mssp.c: 492:     SSP1CON1bits.SSPOV = 0;
 14033     1C43  1315               	bcf	21,6	;volatile
 14034     1C44                     i1l304:
 14035     1C44  0008               	return
 14036     1C45                     __end_of_I2C1_StatusFlagsClear:
 14037                           
 14038                           	psect	text63
 14039     1C21                     __ptext63:	
 14040 ;; *************** function _I2C1_InterruptClear *****************
 14041 ;; Defined at:
 14042 ;;		line 479 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14043 ;; Parameters:    Size  Location     Type
 14044 ;;		None
 14045 ;; Auto vars:     Size  Location     Type
 14046 ;;		None
 14047 ;; Return value:  Size  Location     Type
 14048 ;;                  1    wreg      void 
 14049 ;; Registers used:
 14050 ;;		None
 14051 ;; Tracked objects:
 14052 ;;		On entry : 0/0
 14053 ;;		On exit  : 0/0
 14054 ;;		Unchanged: 0/0
 14055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14060 ;;Total ram usage:        0 bytes
 14061 ;; Hardware stack levels used: 1
 14062 ;; This function calls:
 14063 ;;		Nothing
 14064 ;; This function is called by:
 14065 ;;		_I2C1_Close
 14066 ;;		_I2C1_EventHandler
 14067 ;; This function uses a non-reentrant model
 14068 ;;
 14069                           
 14070     1C21                     _I2C1_InterruptClear:	
 14071                           ;psect for function _I2C1_InterruptClear
 14072                           
 14073     1C21                     i1l5127:	
 14074                           ;incstack = 0
 14075                           ; Regs used in _I2C1_InterruptClear: []
 14076                           
 14077                           
 14078                           ;mcc_generated_files/i2c_host/src/mssp.c: 481:     PIR1bits.SSP1IF = 0;
 14079     1C21  0020               	movlb	0	; select bank0
 14080     1C22  1190               	bcf	16,3	;volatile
 14081     1C23                     i1l298:
 14082     1C23  0008               	return
 14083     1C24                     __end_of_I2C1_InterruptClear:
 14084                           
 14085                           	psect	text64
 14086     1C1E                     __ptext64:	
 14087 ;; *************** function _I2C1_ErrorInterruptClear *****************
 14088 ;; Defined at:
 14089 ;;		line 484 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14090 ;; Parameters:    Size  Location     Type
 14091 ;;		None
 14092 ;; Auto vars:     Size  Location     Type
 14093 ;;		None
 14094 ;; Return value:  Size  Location     Type
 14095 ;;                  1    wreg      void 
 14096 ;; Registers used:
 14097 ;;		None
 14098 ;; Tracked objects:
 14099 ;;		On entry : 0/0
 14100 ;;		On exit  : 0/0
 14101 ;;		Unchanged: 0/0
 14102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14107 ;;Total ram usage:        0 bytes
 14108 ;; Hardware stack levels used: 1
 14109 ;; This function calls:
 14110 ;;		Nothing
 14111 ;; This function is called by:
 14112 ;;		_I2C1_Close
 14113 ;;		_I2C1_ErrorEventHandler
 14114 ;; This function uses a non-reentrant model
 14115 ;;
 14116                           
 14117     1C1E                     _I2C1_ErrorInterruptClear:	
 14118                           ;psect for function _I2C1_ErrorInterruptClear
 14119                           
 14120     1C1E                     i1l5129:	
 14121                           ;incstack = 0
 14122                           ; Regs used in _I2C1_ErrorInterruptClear: []
 14123                           
 14124                           
 14125                           ;mcc_generated_files/i2c_host/src/mssp.c: 486:     PIR2bits.BCL1IF = 0;
 14126     1C1E  0020               	movlb	0	; select bank0
 14127     1C1F  1191               	bcf	17,3	;volatile
 14128     1C20                     i1l301:
 14129     1C20  0008               	return
 14130     1C21                     __end_of_I2C1_ErrorInterruptClear:
 14131                           
 14132                           	psect	text65
 14133     1C3D                     __ptext65:	
 14134 ;; *************** function _I2C1_BusReset *****************
 14135 ;; Defined at:
 14136 ;;		line 404 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14137 ;; Parameters:    Size  Location     Type
 14138 ;;		None
 14139 ;; Auto vars:     Size  Location     Type
 14140 ;;		None
 14141 ;; Return value:  Size  Location     Type
 14142 ;;                  1    wreg      void 
 14143 ;; Registers used:
 14144 ;;		None
 14145 ;; Tracked objects:
 14146 ;;		On entry : 0/0
 14147 ;;		On exit  : 0/0
 14148 ;;		Unchanged: 0/0
 14149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14154 ;;Total ram usage:        0 bytes
 14155 ;; Hardware stack levels used: 1
 14156 ;; This function calls:
 14157 ;;		Nothing
 14158 ;; This function is called by:
 14159 ;;		_I2C1_EVENT_RESET
 14160 ;; This function uses a non-reentrant model
 14161 ;;
 14162                           
 14163     1C3D                     _I2C1_BusReset:	
 14164                           ;psect for function _I2C1_BusReset
 14165                           
 14166     1C3D                     i1l5247:	
 14167                           ;incstack = 0
 14168                           ; Regs used in _I2C1_BusReset: []
 14169                           
 14170                           
 14171                           ;mcc_generated_files/i2c_host/src/mssp.c: 406:     SSP1CON1bits.SSPEN = 0;
 14172     1C3D  0024               	movlb	4	; select bank4
 14173     1C3E  1295               	bcf	21,5	;volatile
 14174                           
 14175                           ;mcc_generated_files/i2c_host/src/mssp.c: 407:     SSP1CON1bits.SSPEN = 1;
 14176     1C3F  1695               	bsf	21,5	;volatile
 14177     1C40                     i1l256:
 14178     1C40  0008               	return
 14179     1C41                     __end_of_I2C1_BusReset:
 14180                           
 14181                           	psect	text66
 14182     1C1B                     __ptext66:	
 14183 ;; *************** function _I2C1_DefaultCallback *****************
 14184 ;; Defined at:
 14185 ;;		line 281 in file "mcc_generated_files/i2c_host/src/mssp.c"
 14186 ;; Parameters:    Size  Location     Type
 14187 ;;		None
 14188 ;; Auto vars:     Size  Location     Type
 14189 ;;		None
 14190 ;; Return value:  Size  Location     Type
 14191 ;;                  1    wreg      void 
 14192 ;; Registers used:
 14193 ;;		None
 14194 ;; Tracked objects:
 14195 ;;		On entry : 0/0
 14196 ;;		On exit  : 0/0
 14197 ;;		Unchanged: 0/0
 14198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14203 ;;Total ram usage:        0 bytes
 14204 ;; Hardware stack levels used: 1
 14205 ;; This function calls:
 14206 ;;		Nothing
 14207 ;; This function is called by:
 14208 ;;		_I2C1_Initialize
 14209 ;;		_I2C1_Deinitialize
 14210 ;;		_I2C1_ErrorEventHandler
 14211 ;; This function uses a non-reentrant model
 14212 ;;
 14213                           
 14214     1C1B                     _I2C1_DefaultCallback:	
 14215                           ;psect for function _I2C1_DefaultCallback
 14216                           
 14217     1C1B                     i1l211:	
 14218                           ;incstack = 0
 14219                           ; Regs used in _I2C1_DefaultCallback: []
 14220                           
 14221     1C1B  0008               	return
 14222     1C1C                     __end_of_I2C1_DefaultCallback:
 14223                           
 14224                           	psect	text67
 14225     1314                     __ptext67:	
 14226 ;; *************** function _EUSART_ReceiveISR *****************
 14227 ;; Defined at:
 14228 ;;		line 269 in file "mcc_generated_files/uart/src/eusart.c"
 14229 ;; Parameters:    Size  Location     Type
 14230 ;;		None
 14231 ;; Auto vars:     Size  Location     Type
 14232 ;;  tempRxHead      1   37[BANK2 ] unsigned char 
 14233 ;;  regValue        1   36[BANK2 ] unsigned char 
 14234 ;; Return value:  Size  Location     Type
 14235 ;;                  1    wreg      void 
 14236 ;; Registers used:
 14237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14238 ;; Tracked objects:
 14239 ;;		On entry : 0/0
 14240 ;;		On exit  : 0/0
 14241 ;;		Unchanged: 0/0
 14242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14244 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 14245 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 14246 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 14247 ;;Total ram usage:        6 bytes
 14248 ;; Hardware stack levels used: 1
 14249 ;; Hardware stack levels required when called: 9
 14250 ;; This function calls:
 14251 ;;		NULL
 14252 ;;		_EUSART_DefaultFramingErrorCallback
 14253 ;;		_EUSART_DefaultOverrunErrorCallback
 14254 ;;		_UART_Custom_ISR
 14255 ;; This function is called by:
 14256 ;;		_EUSART_Initialize
 14257 ;;		_INTERRUPT_InterruptManager
 14258 ;; This function uses a non-reentrant model
 14259 ;;
 14260                           
 14261     1314                     _EUSART_ReceiveISR:	
 14262                           ;psect for function _EUSART_ReceiveISR
 14263                           
 14264     1314                     i1l5863:	
 14265                           ;incstack = 0
 14266                           ; Regs used in _EUSART_ReceiveISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14267                           
 14268                           
 14269                           ;mcc_generated_files/uart/src/eusart.c: 271:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 272:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 274: 
      +                              PIR1bits.RCIF = 0;
 14270     1314  0020               	movlb	0	; select bank0
 14271     1315  1290               	bcf	16,5	;volatile
 14272     1316                     i1l5865:
 14273                           
 14274                           ;mcc_generated_files/uart/src/eusart.c: 277:     eusartRxStatusBuffer[eusartRxHead].stat
      +                          us = 0;
 14275     1316  0022               	movlb	2	; select bank2
 14276     1317  086A               	movf	_eusartRxHead^(0+256),w	;volatile
 14277     1318  00C0               	movwf	??_EUSART_ReceiveISR^(0+256)
 14278     1319  01C1               	clrf	(??_EUSART_ReceiveISR^(0+256)+1)
 14279     131A  35C0               	lslf	??_EUSART_ReceiveISR^(0+256),f
 14280     131B  0DC1               	rlf	(??_EUSART_ReceiveISR^(0+256)+1),f
 14281     131C  3070               	movlw	112
 14282     131D  00C2               	movwf	(??_EUSART_ReceiveISR+2)^(0+256)
 14283     131E  3023               	movlw	35
 14284     131F  00C3               	movwf	((??_EUSART_ReceiveISR+2)^(0+256)+1)
 14285     1320  0840               	movf	??_EUSART_ReceiveISR^(0+256),w
 14286     1321  0742               	addwf	(??_EUSART_ReceiveISR+2)^(0+256),w
 14287     1322  0086               	movwf	6
 14288     1323  0841               	movf	(??_EUSART_ReceiveISR+1)^(0+256),w
 14289     1324  3D43               	addwfc	(??_EUSART_ReceiveISR+3)^(0+256),w
 14290     1325  0087               	movwf	7
 14291     1326  3000               	movlw	0
 14292     1327  3FC0               	movwi [0]fsr1
 14293     1328  3FC1               	movwi [1]fsr1
 14294     1329                     i1l5867:
 14295                           
 14296                           ;mcc_generated_files/uart/src/eusart.c: 279:     if(RC1STAbits.OERR)
 14297     1329  0023               	movlb	3	; select bank3
 14298     132A  1C9D               	btfss	29,1	;volatile
 14299     132B  2B2D               	goto	u517_21
 14300     132C  2B2E               	goto	u517_20
 14301     132D                     u517_21:
 14302     132D  2B4A               	goto	i1l5875
 14303     132E                     u517_20:
 14304     132E                     i1l5869:
 14305                           
 14306                           ;mcc_generated_files/uart/src/eusart.c: 280:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 281:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 14307     132E  0022               	movlb	2	; select bank2
 14308     132F  086A               	movf	_eusartRxHead^(0+256),w	;volatile
 14309     1330  00C0               	movwf	??_EUSART_ReceiveISR^(0+256)
 14310     1331  01C1               	clrf	(??_EUSART_ReceiveISR^(0+256)+1)
 14311     1332  35C0               	lslf	??_EUSART_ReceiveISR^(0+256),f
 14312     1333  0DC1               	rlf	(??_EUSART_ReceiveISR^(0+256)+1),f
 14313     1334  3070               	movlw	112
 14314     1335  00C2               	movwf	(??_EUSART_ReceiveISR+2)^(0+256)
 14315     1336  3023               	movlw	35
 14316     1337  00C3               	movwf	((??_EUSART_ReceiveISR+2)^(0+256)+1)
 14317     1338  0840               	movf	??_EUSART_ReceiveISR^(0+256),w
 14318     1339  0742               	addwf	(??_EUSART_ReceiveISR+2)^(0+256),w
 14319     133A  0086               	movwf	6
 14320     133B  0841               	movf	(??_EUSART_ReceiveISR+1)^(0+256),w
 14321     133C  3D43               	addwfc	(??_EUSART_ReceiveISR+3)^(0+256),w
 14322     133D  0087               	movwf	7
 14323     133E  1501               	bsf	1,2
 14324     133F                     i1l5871:
 14325                           
 14326                           ;mcc_generated_files/uart/src/eusart.c: 282:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 14327     133F  0859               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 14328     1340  045A               	iorwf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 14329     1341  1903               	btfsc	3,2
 14330     1342  2B44               	goto	u518_21
 14331     1343  2B45               	goto	u518_20
 14332     1344                     u518_21:
 14333     1344  2B4A               	goto	i1l5875
 14334     1345                     u518_20:
 14335     1345                     i1l5873:
 14336                           
 14337                           ;mcc_generated_files/uart/src/eusart.c: 283:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 284:             EUSART_OverrunErrorHandler();
 14338     1345  085A               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 14339     1346  008A               	movwf	10
 14340     1347  0859               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 14341     1348  000A               	callw
 14342     1349  3193               	pagesel	$
 14343     134A                     i1l5875:
 14344                           
 14345                           ;mcc_generated_files/uart/src/eusart.c: 287:     if(RC1STAbits.FERR)
 14346     134A  0023               	movlb	3	; select bank3
 14347     134B  1D1D               	btfss	29,2	;volatile
 14348     134C  2B4E               	goto	u519_21
 14349     134D  2B4F               	goto	u519_20
 14350     134E                     u519_21:
 14351     134E  2B6B               	goto	i1l5883
 14352     134F                     u519_20:
 14353     134F                     i1l5877:
 14354                           
 14355                           ;mcc_generated_files/uart/src/eusart.c: 288:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 289:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 14356     134F  0022               	movlb	2	; select bank2
 14357     1350  086A               	movf	_eusartRxHead^(0+256),w	;volatile
 14358     1351  00C0               	movwf	??_EUSART_ReceiveISR^(0+256)
 14359     1352  01C1               	clrf	(??_EUSART_ReceiveISR^(0+256)+1)
 14360     1353  35C0               	lslf	??_EUSART_ReceiveISR^(0+256),f
 14361     1354  0DC1               	rlf	(??_EUSART_ReceiveISR^(0+256)+1),f
 14362     1355  3070               	movlw	112
 14363     1356  00C2               	movwf	(??_EUSART_ReceiveISR+2)^(0+256)
 14364     1357  3023               	movlw	35
 14365     1358  00C3               	movwf	((??_EUSART_ReceiveISR+2)^(0+256)+1)
 14366     1359  0840               	movf	??_EUSART_ReceiveISR^(0+256),w
 14367     135A  0742               	addwf	(??_EUSART_ReceiveISR+2)^(0+256),w
 14368     135B  0086               	movwf	6
 14369     135C  0841               	movf	(??_EUSART_ReceiveISR+1)^(0+256),w
 14370     135D  3D43               	addwfc	(??_EUSART_ReceiveISR+3)^(0+256),w
 14371     135E  0087               	movwf	7
 14372     135F  1481               	bsf	1,1
 14373     1360                     i1l5879:
 14374                           
 14375                           ;mcc_generated_files/uart/src/eusart.c: 290:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 14376     1360  085B               	movf	_EUSART_FramingErrorHandler^(0+256),w
 14377     1361  045C               	iorwf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 14378     1362  1903               	btfsc	3,2
 14379     1363  2B65               	goto	u520_21
 14380     1364  2B66               	goto	u520_20
 14381     1365                     u520_21:
 14382     1365  2B6B               	goto	i1l5883
 14383     1366                     u520_20:
 14384     1366                     i1l5881:
 14385                           
 14386                           ;mcc_generated_files/uart/src/eusart.c: 291:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 292:             EUSART_FramingErrorHandler();
 14387     1366  085C               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 14388     1367  008A               	movwf	10
 14389     1368  085B               	movf	_EUSART_FramingErrorHandler^(0+256),w
 14390     1369  000A               	callw
 14391     136A  3193               	pagesel	$
 14392     136B                     i1l5883:
 14393                           
 14394                           ;mcc_generated_files/uart/src/eusart.c: 296:     regValue = RC1REG;
 14395     136B  0023               	movlb	3	; select bank3
 14396     136C  0819               	movf	25,w	;volatile
 14397     136D  0022               	movlb	2	; select bank2
 14398     136E  00C4               	movwf	EUSART_ReceiveISR@regValue^(0+256)
 14399     136F                     i1l5885:
 14400                           
 14401                           ;mcc_generated_files/uart/src/eusart.c: 298:     tempRxHead = (eusartRxHead + 1) & ((64)
      +                          -1);
 14402     136F  086A               	movf	_eusartRxHead^(0+256),w	;volatile
 14403     1370  3E01               	addlw	1
 14404     1371  393F               	andlw	63
 14405     1372  00C5               	movwf	EUSART_ReceiveISR@tempRxHead^(0+256)
 14406     1373                     i1l5887:
 14407                           
 14408                           ;mcc_generated_files/uart/src/eusart.c: 299:     if (tempRxHead == eusartRxTail)
 14409     1373  0845               	movf	EUSART_ReceiveISR@tempRxHead^(0+256),w
 14410     1374  0669               	xorwf	_eusartRxTail^(0+256),w	;volatile
 14411     1375  1D03               	skipz
 14412     1376  2B78               	goto	u521_21
 14413     1377  2B79               	goto	u521_20
 14414     1378                     u521_21:
 14415     1378  2B7A               	goto	i1l5891
 14416     1379                     u521_20:
 14417     1379  2B87               	goto	i1l5897
 14418     137A                     i1l5891:
 14419                           
 14420                           ;mcc_generated_files/uart/src/eusart.c: 304:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 305:         eusartRxBuffer[eusartRxHead] = regValue;
 14421     137A  086A               	movf	_eusartRxHead^(0+256),w
 14422     137B  3EA0               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 14423     137C  0086               	movwf	6
 14424     137D  3002               	movlw	2	; select bank5/6
 14425     137E  0087               	movwf	7
 14426     137F  0844               	movf	EUSART_ReceiveISR@regValue^(0+256),w
 14427     1380  0081               	movwf	1
 14428     1381                     i1l5893:
 14429                           
 14430                           ;mcc_generated_files/uart/src/eusart.c: 306:   eusartRxHead = tempRxHead;
 14431     1381  0845               	movf	EUSART_ReceiveISR@tempRxHead^(0+256),w
 14432     1382  00EA               	movwf	_eusartRxHead^(0+256)	;volatile
 14433     1383                     i1l5895:
 14434                           
 14435                           ;mcc_generated_files/uart/src/eusart.c: 307:   eusartRxCount++;
 14436     1383  3001               	movlw	1
 14437     1384  00C0               	movwf	??_EUSART_ReceiveISR^(0+256)
 14438     1385  0840               	movf	??_EUSART_ReceiveISR^(0+256),w
 14439     1386  07E8               	addwf	_eusartRxCount^(0+256),f	;volatile
 14440     1387                     i1l5897:
 14441                           
 14442                           ;mcc_generated_files/uart/src/eusart.c: 310:     UART_Custom_ISR(regValue);
 14443     1387  0844               	movf	EUSART_ReceiveISR@regValue^(0+256),w
 14444     1388  3187  2794  3193   	fcall	_UART_Custom_ISR
 14445     138B                     i1l970:
 14446     138B  0008               	return
 14447     138C                     __end_of_EUSART_ReceiveISR:
 14448                           
 14449                           	psect	text68
 14450     0794                     __ptext68:	
 14451 ;; *************** function _UART_Custom_ISR *****************
 14452 ;; Defined at:
 14453 ;;		line 299 in file "main.c"
 14454 ;; Parameters:    Size  Location     Type
 14455 ;;  Rx_Code         1    wreg     unsigned char 
 14456 ;; Auto vars:     Size  Location     Type
 14457 ;;  Rx_Code         1   31[BANK2 ] unsigned char 
 14458 ;;  buffer         16   15[BANK2 ] unsigned char [16]
 14459 ;; Return value:  Size  Location     Type
 14460 ;;                  1    wreg      void 
 14461 ;; Registers used:
 14462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14463 ;; Tracked objects:
 14464 ;;		On entry : 0/0
 14465 ;;		On exit  : 0/0
 14466 ;;		Unchanged: 0/0
 14467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14469 ;;      Locals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0
 14470 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 14471 ;;      Totals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0
 14472 ;;Total ram usage:       19 bytes
 14473 ;; Hardware stack levels used: 1
 14474 ;; Hardware stack levels required when called: 8
 14475 ;; This function calls:
 14476 ;;		_Backlight
 14477 ;;		_LCD_Clear
 14478 ;;		_LCD_Set_Cursor
 14479 ;;		_LCD_Write_String
 14480 ;;		_sprintf
 14481 ;; This function is called by:
 14482 ;;		_EUSART_ReceiveISR
 14483 ;; This function uses a non-reentrant model
 14484 ;;
 14485                           
 14486     0794                     _UART_Custom_ISR:	
 14487                           ;psect for function _UART_Custom_ISR
 14488                           
 14489                           
 14490                           ;incstack = 0
 14491                           ; Regs used in _UART_Custom_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14492                           ;UART_Custom_ISR@Rx_Code stored from wreg
 14493     0794  0022               	movlb	2	; select bank2
 14494     0795  00BF               	movwf	UART_Custom_ISR@Rx_Code^(0+256)
 14495     0796                     i1l5799:
 14496                           
 14497                           ;main.c: 299: void UART_Custom_ISR(uint8_t Rx_Code);main.c: 300: {;main.c: 301:     char
      +                           buffer[16];;main.c: 303:     LCD_Clear();
 14498     0796  319C  24D0  3187   	fcall	_LCD_Clear
 14499     0799                     i1l5801:
 14500                           
 14501                           ;main.c: 304:     LCD_Set_Cursor(1, 1);
 14502     0799  01F6               	clrf	LCD_Set_Cursor@COL
 14503     079A  0AF6               	incf	LCD_Set_Cursor@COL,f
 14504     079B  3001               	movlw	1
 14505     079C  319F  27DA  3187   	fcall	_LCD_Set_Cursor
 14506     079F                     i1l5803:
 14507                           
 14508                           ;main.c: 305:     Backlight();
 14509     079F  319C  24B0  3187   	fcall	_Backlight
 14510                           
 14511                           ;main.c: 306:     LCD_Write_String(" UART ..");
 14512     07A2  30D7               	movlw	low (STR_1| (0+32768))
 14513     07A3  00F6               	movwf	LCD_Write_String@Str
 14514     07A4  3098               	movlw	high (STR_1| (0+32768))
 14515     07A5  00F7               	movwf	LCD_Write_String@Str+1
 14516     07A6  319E  26AE  3187   	fcall	_LCD_Write_String
 14517                           
 14518                           ;main.c: 307:     LCD_Set_Cursor(2, 1);
 14519     07A9  01F6               	clrf	LCD_Set_Cursor@COL
 14520     07AA  0AF6               	incf	LCD_Set_Cursor@COL,f
 14521     07AB  3002               	movlw	2
 14522     07AC  319F  27DA  3187   	fcall	_LCD_Set_Cursor
 14523                           
 14524                           ;main.c: 308:     LCD_Write_String(" .. Interrupt");
 14525     07AF  308F               	movlw	low (STR_2| (0+32768))
 14526     07B0  00F6               	movwf	LCD_Write_String@Str
 14527     07B1  3098               	movlw	high (STR_2| (0+32768))
 14528     07B2  00F7               	movwf	LCD_Write_String@Str+1
 14529     07B3  319E  26AE  3187   	fcall	_LCD_Write_String
 14530     07B6                     i1l5805:
 14531                           
 14532                           ;main.c: 309:     _delay((unsigned long)((350)*(4000000/4000.0)));
 14533     07B6  3002               	movlw	2
 14534     07B7  0022               	movlb	2	; select bank2
 14535     07B8  00AE               	movwf	(??_UART_Custom_ISR^(0+256)+1)
 14536     07B9  30C7               	movlw	199
 14537     07BA  00AD               	movwf	??_UART_Custom_ISR^(0+256)
 14538     07BB  3088               	movlw	136
 14539     07BC                     u569_27:
 14540     07BC  0B89               	decfsz	9,f
 14541     07BD  2FBC               	goto	u569_27
 14542     07BE  0BAD               	decfsz	??_UART_Custom_ISR^(0+256),f
 14543     07BF  2FBC               	goto	u569_27
 14544     07C0  0BAE               	decfsz	(??_UART_Custom_ISR^(0+256)+1),f
 14545     07C1  2FBC               	goto	u569_27
 14546     07C2  0000               	nop
 14547     07C3                     i1l5807:
 14548                           
 14549                           ;main.c: 311:     LCD_Clear();
 14550     07C3  319C  24D0  3187   	fcall	_LCD_Clear
 14551     07C6                     i1l5809:
 14552                           
 14553                           ;main.c: 312:     LCD_Set_Cursor(1, 1);
 14554     07C6  01F6               	clrf	LCD_Set_Cursor@COL
 14555     07C7  0AF6               	incf	LCD_Set_Cursor@COL,f
 14556     07C8  3001               	movlw	1
 14557     07C9  319F  27DA  3187   	fcall	_LCD_Set_Cursor
 14558     07CC                     i1l5811:
 14559                           
 14560                           ;main.c: 313:     sprintf(buffer, "Sent code: %hhx", Rx_Code);
 14561     07CC  303C               	movlw	low (STR_3| (0+32768))
 14562     07CD  0021               	movlb	1	; select bank1
 14563     07CE  00E9               	movwf	sprintf@fmt^(0+128)
 14564     07CF  3098               	movlw	high (STR_3| (0+32768))
 14565     07D0  00EA               	movwf	(sprintf@fmt^(0+128)+1)
 14566     07D1  0022               	movlb	2	; select bank2
 14567     07D2  083F               	movf	UART_Custom_ISR@Rx_Code^(0+256),w
 14568     07D3  00AD               	movwf	??_UART_Custom_ISR^(0+256)
 14569     07D4  01AE               	clrf	(??_UART_Custom_ISR^(0+256)+1)
 14570     07D5  082D               	movf	??_UART_Custom_ISR^(0+256),w
 14571     07D6  0021               	movlb	1	; select bank1
 14572     07D7  00EB               	movwf	(?_sprintf^(0+128)+2)
 14573     07D8  0022               	movlb	2	; select bank2
 14574     07D9  082E               	movf	(??_UART_Custom_ISR+1)^(0+256),w
 14575     07DA  0021               	movlb	1	; select bank1
 14576     07DB  00EC               	movwf	((?_sprintf+1)^(0+128)+2)
 14577     07DC  302F               	movlw	(low (UART_Custom_ISR@buffer| (0+256)))& (0+255)
 14578     07DD  319F  272A  3187   	fcall	_sprintf
 14579     07E0                     i1l5813:
 14580                           
 14581                           ;main.c: 314:     LCD_Write_String(buffer);
 14582     07E0  302F               	movlw	low UART_Custom_ISR@buffer
 14583     07E1  00F6               	movwf	LCD_Write_String@Str
 14584     07E2  3001               	movlw	high UART_Custom_ISR@buffer
 14585     07E3  00F7               	movwf	LCD_Write_String@Str+1
 14586     07E4  319E  26AE  3187   	fcall	_LCD_Write_String
 14587     07E7                     i1l5815:
 14588                           
 14589                           ;main.c: 315:     _delay((unsigned long)((350)*(4000000/4000.0)));
 14590     07E7  3002               	movlw	2
 14591     07E8  0022               	movlb	2	; select bank2
 14592     07E9  00AE               	movwf	(??_UART_Custom_ISR^(0+256)+1)
 14593     07EA  30C7               	movlw	199
 14594     07EB  00AD               	movwf	??_UART_Custom_ISR^(0+256)
 14595     07EC  3088               	movlw	136
 14596     07ED                     u570_27:
 14597     07ED  0B89               	decfsz	9,f
 14598     07EE  2FED               	goto	u570_27
 14599     07EF  0BAD               	decfsz	??_UART_Custom_ISR^(0+256),f
 14600     07F0  2FED               	goto	u570_27
 14601     07F1  0BAE               	decfsz	(??_UART_Custom_ISR^(0+256)+1),f
 14602     07F2  2FED               	goto	u570_27
 14603     07F3  0000               	nop
 14604     07F4                     i1l1185:
 14605     07F4  0008               	return
 14606     07F5                     __end_of_UART_Custom_ISR:
 14607                           
 14608                           	psect	text69
 14609     1F2A                     __ptext69:	
 14610 ;; *************** function _sprintf *****************
 14611 ;; Defined at:
 14612 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
 14613 ;; Parameters:    Size  Location     Type
 14614 ;;  s               1    wreg     PTR unsigned char 
 14615 ;;		 -> TMR0_Custom_ISR@buffer(16), UART_Custom_ISR@buffer(16), 
 14616 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
 14617 ;;		 -> STR_8(14), STR_6(15), STR_3(16), 
 14618 ;; Auto vars:     Size  Location     Type
 14619 ;;  s               1    0[BANK2 ] PTR unsigned char 
 14620 ;;		 -> TMR0_Custom_ISR@buffer(16), UART_Custom_ISR@buffer(16), 
 14621 ;;  f              11    2[BANK2 ] struct _IO_FILE
 14622 ;;  ret             2    0        int 
 14623 ;;  ap              1    1[BANK2 ] PTR void [1]
 14624 ;;		 -> ?_sprintf(2), 
 14625 ;; Return value:  Size  Location     Type
 14626 ;;                  2   73[BANK1 ] int 
 14627 ;; Registers used:
 14628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14629 ;; Tracked objects:
 14630 ;;		On entry : 0/0
 14631 ;;		On exit  : 0/0
 14632 ;;		Unchanged: 0/0
 14633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14634 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14635 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
 14636 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14637 ;;      Totals:         0       0       7      13       0       0       0       0       0       0       0       0       
      +0       0
 14638 ;;Total ram usage:       20 bytes
 14639 ;; Hardware stack levels used: 1
 14640 ;; Hardware stack levels required when called: 7
 14641 ;; This function calls:
 14642 ;;		_vfprintf
 14643 ;; This function is called by:
 14644 ;;		_UART_Custom_ISR
 14645 ;;		_TMR0_Custom_ISR
 14646 ;; This function uses a non-reentrant model
 14647 ;;
 14648                           
 14649     1F2A                     _sprintf:	
 14650                           ;psect for function _sprintf
 14651                           
 14652                           
 14653                           ;incstack = 0
 14654                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14655                           ;sprintf@s stored from wreg
 14656     1F2A  0022               	movlb	2	; select bank2
 14657     1F2B  00A0               	movwf	sprintf@s^(0+256)
 14658     1F2C                     i1l5347:
 14659     1F2C  30EB               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 14660     1F2D  00A1               	movwf	sprintf@ap^(0+256)
 14661     1F2E  0820               	movf	sprintf@s^(0+256),w
 14662     1F2F  00A2               	movwf	sprintf@f^(0+256)
 14663     1F30                     i1l5349:
 14664     1F30  01A4               	clrf	(sprintf@f^(0+256)+2)
 14665     1F31  01A5               	clrf	((sprintf@f+1)^(0+256)+2)
 14666     1F32                     i1l5351:
 14667     1F32  01AB               	clrf	(sprintf@f^(0+256)+9)
 14668     1F33  01AC               	clrf	((sprintf@f+1)^(0+256)+9)
 14669     1F34                     i1l5353:
 14670     1F34  0021               	movlb	1	; select bank1
 14671     1F35  086A               	movf	(sprintf@fmt+1)^(0+128),w
 14672     1F36  00E3               	movwf	(vfprintf@fmt+1)^(0+128)
 14673     1F37  0869               	movf	sprintf@fmt^(0+128),w
 14674     1F38  00E2               	movwf	vfprintf@fmt^(0+128)
 14675     1F39  3021               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
 14676     1F3A  00E4               	movwf	vfprintf@ap^(0+128)
 14677     1F3B  3022               	movlw	(low (sprintf@f| (0+256)))& (0+255)
 14678     1F3C  319F  270A  319F   	fcall	_vfprintf
 14679     1F3F                     i1l5355:
 14680     1F3F  0022               	movlb	2	; select bank2
 14681     1F40  0824               	movf	(sprintf@f^(0+256)+2),w
 14682     1F41  0720               	addwf	sprintf@s^(0+256),w
 14683     1F42  0021               	movlb	1	; select bank1
 14684     1F43  00EF               	movwf	??_sprintf^(0+128)
 14685     1F44  086F               	movf	??_sprintf^(0+128),w
 14686     1F45  0086               	movwf	6
 14687     1F46  3001               	movlw	1	; select bank2/3
 14688     1F47  0087               	movwf	7
 14689     1F48  0181               	clrf	1
 14690     1F49                     i1l1731:
 14691     1F49  0008               	return
 14692     1F4A                     __end_of_sprintf:
 14693                           
 14694                           	psect	text70
 14695     1F0A                     __ptext70:	
 14696 ;; *************** function _vfprintf *****************
 14697 ;; Defined at:
 14698 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 14699 ;; Parameters:    Size  Location     Type
 14700 ;;  fp              1    wreg     PTR struct _IO_FILE
 14701 ;;		 -> sprintf@f(11), 
 14702 ;;  fmt             2   66[BANK1 ] PTR const unsigned char 
 14703 ;;		 -> STR_8(14), STR_6(15), STR_3(16), 
 14704 ;;  ap              1   68[BANK1 ] PTR PTR void 
 14705 ;;		 -> sprintf@ap(1), 
 14706 ;; Auto vars:     Size  Location     Type
 14707 ;;  fp              1   70[BANK1 ] PTR struct _IO_FILE
 14708 ;;		 -> sprintf@f(11), 
 14709 ;;  cfmt            2   71[BANK1 ] PTR unsigned char 
 14710 ;;		 -> STR_8(14), STR_6(15), STR_3(16), 
 14711 ;; Return value:  Size  Location     Type
 14712 ;;                  2   66[BANK1 ] int 
 14713 ;; Registers used:
 14714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14715 ;; Tracked objects:
 14716 ;;		On entry : 0/0
 14717 ;;		On exit  : 0/0
 14718 ;;		Unchanged: 0/0
 14719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14720 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14721 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14722 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14723 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 14724 ;;Total ram usage:        7 bytes
 14725 ;; Hardware stack levels used: 1
 14726 ;; Hardware stack levels required when called: 6
 14727 ;; This function calls:
 14728 ;;		_vfpfcnvrt
 14729 ;; This function is called by:
 14730 ;;		_sprintf
 14731 ;; This function uses a non-reentrant model
 14732 ;;
 14733                           
 14734     1F0A                     _vfprintf:	
 14735                           ;psect for function _vfprintf
 14736                           
 14737                           
 14738                           ;incstack = 0
 14739                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14740                           ;vfprintf@fp stored from wreg
 14741     1F0A  0021               	movlb	1	; select bank1
 14742     1F0B  00E6               	movwf	vfprintf@fp^(0+128)
 14743     1F0C                     i1l5259:
 14744                           
 14745                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 14746     1F0C  0863               	movf	(vfprintf@fmt+1)^(0+128),w
 14747     1F0D  00E8               	movwf	(vfprintf@cfmt+1)^(0+128)
 14748     1F0E  0862               	movf	vfprintf@fmt^(0+128),w
 14749     1F0F  00E7               	movwf	vfprintf@cfmt^(0+128)
 14750                           
 14751                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 14752     1F10  2F1D               	goto	i1l5263
 14753     1F11                     i1l5261:
 14754                           
 14755                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 14756     1F11  30E7               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 14757     1F12  0020               	movlb	0	; select bank0
 14758     1F13  00EE               	movwf	vfpfcnvrt@fmt
 14759     1F14  0021               	movlb	1	; select bank1
 14760     1F15  0864               	movf	vfprintf@ap^(0+128),w
 14761     1F16  0020               	movlb	0	; select bank0
 14762     1F17  00EF               	movwf	vfpfcnvrt@ap
 14763     1F18  0021               	movlb	1	; select bank1
 14764     1F19  0866               	movf	vfprintf@fp^(0+128),w
 14765     1F1A  3196  2670  319F   	fcall	_vfpfcnvrt
 14766     1F1D                     i1l5263:
 14767                           
 14768                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 14769     1F1D  0021               	movlb	1	; select bank1
 14770     1F1E  0867               	movf	vfprintf@cfmt^(0+128),w
 14771     1F1F  0084               	movwf	4
 14772     1F20  0868               	movf	(vfprintf@cfmt+1)^(0+128),w
 14773     1F21  0085               	movwf	5
 14774     1F22  0012               	moviw fsr0++
 14775     1F23  1D03               	btfss	3,2
 14776     1F24  2F26               	goto	u478_21
 14777     1F25  2F27               	goto	u478_20
 14778     1F26                     u478_21:
 14779     1F26  2F11               	goto	i1l5261
 14780     1F27                     u478_20:
 14781     1F27                     i1l5265:
 14782                           
 14783                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 14784     1F27  01E2               	clrf	?_vfprintf^(0+128)
 14785     1F28  01E3               	clrf	(?_vfprintf+1)^(0+128)
 14786     1F29                     i1l1879:
 14787     1F29  0008               	return
 14788     1F2A                     __end_of_vfprintf:
 14789                           
 14790                           	psect	text71
 14791     1670                     __ptext71:	
 14792 ;; *************** function _vfpfcnvrt *****************
 14793 ;; Defined at:
 14794 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 14795 ;; Parameters:    Size  Location     Type
 14796 ;;  fp              1    wreg     PTR struct _IO_FILE
 14797 ;;		 -> sprintf@f(11), 
 14798 ;;  fmt             1   78[BANK0 ] PTR PTR unsigned char 
 14799 ;;		 -> vfprintf@cfmt(2), 
 14800 ;;  ap              1   79[BANK0 ] PTR PTR void 
 14801 ;;		 -> sprintf@ap(1), 
 14802 ;; Auto vars:     Size  Location     Type
 14803 ;;  fp              1   62[BANK1 ] PTR struct _IO_FILE
 14804 ;;		 -> sprintf@f(11), 
 14805 ;;  convarg         4   58[BANK1 ] struct .
 14806 ;;  cp              2   64[BANK1 ] PTR unsigned char 
 14807 ;;		 -> STR_8(14), STR_6(15), STR_3(16), 
 14808 ;;  c               1   63[BANK1 ] unsigned char 
 14809 ;;  done            1    0        _Bool 
 14810 ;; Return value:  Size  Location     Type
 14811 ;;                  1    wreg      void 
 14812 ;; Registers used:
 14813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14814 ;; Tracked objects:
 14815 ;;		On entry : 0/0
 14816 ;;		On exit  : 0/0
 14817 ;;		Unchanged: 0/0
 14818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14819 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14820 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14821 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14822 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0
 14823 ;;Total ram usage:       14 bytes
 14824 ;; Hardware stack levels used: 1
 14825 ;; Hardware stack levels required when called: 5
 14826 ;; This function calls:
 14827 ;;		_efgtoa
 14828 ;;		_fputc
 14829 ;;		_read_prec_or_width
 14830 ;;		_xtoa
 14831 ;; This function is called by:
 14832 ;;		_vfprintf
 14833 ;; This function uses a non-reentrant model
 14834 ;;
 14835                           
 14836     1670                     _vfpfcnvrt:	
 14837                           ;psect for function _vfpfcnvrt
 14838                           
 14839                           
 14840                           ;incstack = 0
 14841                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14842                           ;vfpfcnvrt@fp stored from wreg
 14843     1670  0021               	movlb	1	; select bank1
 14844     1671  00DE               	movwf	vfpfcnvrt@fp^(0+128)
 14845     1672                     i1l5139:
 14846                           
 14847                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 14848     1672  0020               	movlb	0	; select bank0
 14849     1673  086E               	movf	vfpfcnvrt@fmt,w
 14850     1674  0086               	movwf	6
 14851     1675  0187               	clrf	7
 14852     1676  3F40               	moviw [0]fsr1
 14853     1677  0021               	movlb	1	; select bank1
 14854     1678  00D6               	movwf	??_vfpfcnvrt^(0+128)
 14855     1679  3F41               	moviw [1]fsr1
 14856     167A  00D7               	movwf	(??_vfpfcnvrt^(0+128)+1)
 14857     167B  0856               	movf	??_vfpfcnvrt^(0+128),w
 14858     167C  0084               	movwf	4
 14859     167D  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 14860     167E  0085               	movwf	5
 14861     167F  0012               	moviw fsr0++
 14862     1680  3A25               	xorlw	37
 14863     1681  1D03               	btfss	3,2
 14864     1682  2E84               	goto	u471_21
 14865     1683  2E85               	goto	u471_20
 14866     1684                     u471_21:
 14867     1684  2FE5               	goto	i1l5229
 14868     1685                     u471_20:
 14869     1685                     i1l5141:
 14870                           
 14871                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 14872     1685  0020               	movlb	0	; select bank0
 14873     1686  086E               	movf	vfpfcnvrt@fmt,w
 14874     1687  0086               	movwf	6
 14875     1688  0187               	clrf	7
 14876     1689  3001               	movlw	1
 14877     168A  0781               	addwf	1,f
 14878     168B  3141               	addfsr 1,1
 14879     168C  1803               	skipnc
 14880     168D  0A81               	incf	1,f
 14881     168E                     i1l5143:
 14882                           
 14883                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 14884     168E  0022               	movlb	2	; select bank2
 14885     168F  01D5               	clrf	_width^(0+256)
 14886     1690  01D6               	clrf	(_width+1)^(0+256)
 14887     1691  1003               	clrc
 14888     1692  3000               	movlw	0
 14889     1693  1803               	btfsc	3,0
 14890     1694  3001               	movlw	1
 14891     1695  00E5               	movwf	_flags^(0+256)
 14892     1696                     i1l5145:
 14893                           
 14894                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 14895     1696  30FF               	movlw	255
 14896     1697  00D7               	movwf	_prec^(0+256)
 14897     1698  30FF               	movlw	255
 14898     1699  00D8               	movwf	(_prec^(0+256)+1)
 14899     169A                     i1l5147:
 14900                           
 14901                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
 14902     169A  0020               	movlb	0	; select bank0
 14903     169B  086E               	movf	vfpfcnvrt@fmt,w
 14904     169C  0086               	movwf	6
 14905     169D  0187               	clrf	7
 14906     169E  3F40               	moviw [0]fsr1
 14907     169F  0021               	movlb	1	; select bank1
 14908     16A0  00D6               	movwf	??_vfpfcnvrt^(0+128)
 14909     16A1  3F41               	moviw [1]fsr1
 14910     16A2  00D7               	movwf	(??_vfpfcnvrt^(0+128)+1)
 14911     16A3  0856               	movf	??_vfpfcnvrt^(0+128),w
 14912     16A4  0084               	movwf	4
 14913     16A5  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 14914     16A6  0085               	movwf	5
 14915     16A7  0012               	moviw fsr0++
 14916     16A8  3A2E               	xorlw	46
 14917     16A9  1D03               	btfss	3,2
 14918     16AA  2EAC               	goto	u472_21
 14919     16AB  2EAD               	goto	u472_20
 14920     16AC                     u472_21:
 14921     16AC  2EC1               	goto	i1l5153
 14922     16AD                     u472_20:
 14923     16AD                     i1l5149:
 14924                           
 14925                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
 14926     16AD  0020               	movlb	0	; select bank0
 14927     16AE  086E               	movf	vfpfcnvrt@fmt,w
 14928     16AF  0086               	movwf	6
 14929     16B0  0187               	clrf	7
 14930     16B1  3001               	movlw	1
 14931     16B2  0781               	addwf	1,f
 14932     16B3  3141               	addfsr 1,1
 14933     16B4  1803               	skipnc
 14934     16B5  0A81               	incf	1,f
 14935     16B6                     i1l5151:
 14936                           
 14937                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
 14938     16B6  086F               	movf	vfpfcnvrt@ap,w
 14939     16B7  00F6               	movwf	read_prec_or_width@ap
 14940     16B8  086E               	movf	vfpfcnvrt@fmt,w
 14941     16B9  3192  2243  3196   	fcall	_read_prec_or_width
 14942     16BC  0877               	movf	?_read_prec_or_width+1,w
 14943     16BD  0022               	movlb	2	; select bank2
 14944     16BE  00D8               	movwf	(_prec+1)^(0+256)
 14945     16BF  0876               	movf	?_read_prec_or_width,w
 14946     16C0  00D7               	movwf	_prec^(0+256)
 14947     16C1                     i1l5153:
 14948                           
 14949                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 14950     16C1  0020               	movlb	0	; select bank0
 14951     16C2  086E               	movf	vfpfcnvrt@fmt,w
 14952     16C3  0086               	movwf	6
 14953     16C4  0187               	clrf	7
 14954     16C5  3F40               	moviw [0]fsr1
 14955     16C6  0021               	movlb	1	; select bank1
 14956     16C7  00E0               	movwf	vfpfcnvrt@cp^(0+128)
 14957     16C8  3F41               	moviw [1]fsr1
 14958     16C9  00E1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 14959     16CA                     i1l5155:
 14960                           
 14961                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
 14962     16CA  0860               	movf	vfpfcnvrt@cp^(0+128),w
 14963     16CB  0084               	movwf	4
 14964     16CC  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 14965     16CD  0085               	movwf	5
 14966     16CE  0800               	movf	0,w	;code access
 14967     16CF  00DF               	movwf	vfpfcnvrt@c^(0+128)
 14968                           
 14969                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
 14970     16D0  2EEB               	goto	i1l5169
 14971     16D1                     i1l5157:
 14972                           
 14973                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1298:     cp++;
 14974     16D1  3001               	movlw	1
 14975     16D2  07E0               	addwf	vfpfcnvrt@cp^(0+128),f
 14976     16D3  3000               	movlw	0
 14977     16D4  3DE1               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
 14978     16D5                     i1l5159:
 14979                           
 14980                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1300:     if (*cp
      +                           == 'h') {
 14981     16D5  0860               	movf	vfpfcnvrt@cp^(0+128),w
 14982     16D6  0084               	movwf	4
 14983     16D7  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 14984     16D8  0085               	movwf	5
 14985     16D9  0012               	moviw fsr0++
 14986     16DA  3A68               	xorlw	104
 14987     16DB  1D03               	btfss	3,2
 14988     16DC  2EDE               	goto	u473_21
 14989     16DD  2EDF               	goto	u473_20
 14990     16DE                     u473_21:
 14991     16DE  2EF3               	goto	i1l5171
 14992     16DF                     u473_20:
 14993     16DF                     i1l5161:
 14994                           
 14995                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1301:      c = 'H
      +                          ';
 14996     16DF  3048               	movlw	72
 14997     16E0  00DF               	movwf	vfpfcnvrt@c^(0+128)
 14998                           
 14999                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1302:      cp++;
 15000     16E1  3001               	movlw	1
 15001     16E2  07E0               	addwf	vfpfcnvrt@cp^(0+128),f
 15002     16E3  3000               	movlw	0
 15003     16E4  3DE1               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
 15004     16E5  2EF3               	goto	i1l5171
 15005     16E6                     i1l5163:
 15006                           
 15007                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
 15008     16E6  3069               	movlw	105
 15009     16E7  00DF               	movwf	vfpfcnvrt@c^(0+128)
 15010                           
 15011                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1351:     break;
 15012     16E8  2EF3               	goto	i1l5171
 15013     16E9                     i1l5165:
 15014                           
 15015                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
 15016     16E9  01DF               	clrf	vfpfcnvrt@c^(0+128)
 15017                           
 15018                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
 15019     16EA  2EF3               	goto	i1l5171
 15020     16EB                     i1l5169:
 15021     16EB  085F               	movf	vfpfcnvrt@c^(0+128),w
 15022                           
 15023                           ; Switch size 1, requested type "simple"
 15024                           ; Number of cases is 2, Range of values is 104 to 120
 15025                           ; switch strategies available:
 15026                           ; Name         Instructions Cycles
 15027                           ; simple_byte            7     4 (average)
 15028                           ; direct_byte           43     9 (fixed)
 15029                           ; jumptable            263     9 (fixed)
 15030                           ;	Chosen strategy is simple_byte
 15031     16EC  3A68               	xorlw	104	; case 104
 15032     16ED  1903               	skipnz
 15033     16EE  2ED1               	goto	i1l5157
 15034     16EF  3A10               	xorlw	16	; case 120
 15035     16F0  1903               	skipnz
 15036     16F1  2EE6               	goto	i1l5163
 15037     16F2  2EE9               	goto	i1l5165
 15038     16F3                     i1l5171:
 15039     16F3  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15040     16F4  0084               	movwf	4
 15041     16F5  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 15042     16F6  0085               	movwf	5
 15043     16F7  0012               	moviw fsr0++
 15044     16F8  3A78               	xorlw	120
 15045     16F9  1D03               	btfss	3,2
 15046     16FA  2EFC               	goto	u474_21
 15047     16FB  2EFD               	goto	u474_20
 15048     16FC                     u474_21:
 15049     16FC  2F4F               	goto	i1l5191
 15050     16FD                     u474_20:
 15051     16FD  2F21               	goto	i1l5179
 15052     16FE                     i1l5173:
 15053                           
 15054                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 15055     16FE  0020               	movlb	0	; select bank0
 15056     16FF  086F               	movf	vfpfcnvrt@ap,w
 15057     1700  0086               	movwf	6
 15058     1701  3001               	movlw	1	; select bank2/3
 15059     1702  0087               	movwf	7
 15060     1703  0801               	movf	1,w
 15061     1704  0084               	movwf	4
 15062     1705  0185               	clrf	5
 15063     1706  3002               	movlw	2
 15064     1707  0781               	addwf	1,f
 15065     1708  3F00               	moviw [0]fsr0
 15066     1709  0021               	movlb	1	; select bank1
 15067     170A  00DA               	movwf	vfpfcnvrt@convarg^(0+128)
 15068     170B  3F01               	moviw [1]fsr0
 15069     170C  00DB               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 15070                           
 15071                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1457:      break;
 15072     170D  2F29               	goto	i1l5181
 15073     170E                     i1l5175:
 15074                           
 15075                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1465:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned char)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (u
      +                          nsigned int)0));
 15076     170E  0020               	movlb	0	; select bank0
 15077     170F  086F               	movf	vfpfcnvrt@ap,w
 15078     1710  0086               	movwf	6
 15079     1711  3001               	movlw	1	; select bank2/3
 15080     1712  0087               	movwf	7
 15081     1713  0801               	movf	1,w
 15082     1714  0084               	movwf	4
 15083     1715  0185               	clrf	5
 15084     1716  3002               	movlw	2
 15085     1717  0781               	addwf	1,f
 15086     1718  0800               	movf	0,w
 15087     1719  0021               	movlb	1	; select bank1
 15088     171A  00D6               	movwf	??_vfpfcnvrt^(0+128)
 15089     171B  01D7               	clrf	(??_vfpfcnvrt^(0+128)+1)
 15090     171C  0856               	movf	??_vfpfcnvrt^(0+128),w
 15091     171D  00DA               	movwf	vfpfcnvrt@convarg^(0+128)
 15092     171E  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 15093     171F  00DB               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 15094                           
 15095                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1466:      break;
 15096     1720  2F29               	goto	i1l5181
 15097     1721                     i1l5179:
 15098     1721  085F               	movf	vfpfcnvrt@c^(0+128),w
 15099                           
 15100                           ; Switch size 1, requested type "simple"
 15101                           ; Number of cases is 2, Range of values is 72 to 105
 15102                           ; switch strategies available:
 15103                           ; Name         Instructions Cycles
 15104                           ; simple_byte            7     4 (average)
 15105                           ; direct_byte           77     9 (fixed)
 15106                           ; jumptable            263     9 (fixed)
 15107                           ;	Chosen strategy is simple_byte
 15108     1722  3A48               	xorlw	72	; case 72
 15109     1723  1903               	skipnz
 15110     1724  2F0E               	goto	i1l5175
 15111     1725  3A21               	xorlw	33	; case 105
 15112     1726  1903               	skipnz
 15113     1727  2EFE               	goto	i1l5173
 15114     1728  2F29               	goto	i1l5181
 15115     1729                     i1l5181:
 15116                           
 15117                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 15118     1729  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15119     172A  3E01               	addlw	1
 15120     172B  00D6               	movwf	??_vfpfcnvrt^(0+128)
 15121     172C  3000               	movlw	0
 15122     172D  3D61               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 15123     172E  00D7               	movwf	(??_vfpfcnvrt+1)^(0+128)
 15124     172F  0020               	movlb	0	; select bank0
 15125     1730  086E               	movf	vfpfcnvrt@fmt,w
 15126     1731  0086               	movwf	6
 15127     1732  0187               	clrf	7
 15128     1733  0021               	movlb	1	; select bank1
 15129     1734  0856               	movf	??_vfpfcnvrt^(0+128),w
 15130     1735  3FC0               	movwi [0]fsr1
 15131     1736  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 15132     1737  3FC1               	movwi [1]fsr1
 15133                           
 15134                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 15135     1738  2F46               	goto	i1l5189
 15136     1739                     i1l5183:
 15137                           
 15138                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
 15139     1739  085B               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 15140     173A  0020               	movlb	0	; select bank0
 15141     173B  00A9               	movwf	xtoa@d+1
 15142     173C  0021               	movlb	1	; select bank1
 15143     173D  085A               	movf	vfpfcnvrt@convarg^(0+128),w
 15144     173E  0020               	movlb	0	; select bank0
 15145     173F  00A8               	movwf	xtoa@d
 15146     1740  0021               	movlb	1	; select bank1
 15147     1741  085E               	movf	vfpfcnvrt@fp^(0+128),w
 15148     1742  3194  240B  3196   	fcall	_xtoa
 15149     1745  2FFF               	goto	i1l1856
 15150     1746                     i1l5189:
 15151     1746  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15152     1747  0084               	movwf	4
 15153     1748  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 15154     1749  0085               	movwf	5
 15155     174A  0800               	movf	0,w	;code access
 15156                           
 15157                           ; Switch size 1, requested type "simple"
 15158                           ; Number of cases is 1, Range of values is 120 to 120
 15159                           ; switch strategies available:
 15160                           ; Name         Instructions Cycles
 15161                           ; simple_byte            4     3 (average)
 15162                           ; direct_byte           11     9 (fixed)
 15163                           ; jumptable            263     9 (fixed)
 15164                           ;	Chosen strategy is simple_byte
 15165     174B  3A78               	xorlw	120	; case 120
 15166     174C  1903               	skipnz
 15167     174D  2F39               	goto	i1l5183
 15168     174E  2F4F               	goto	i1l5191
 15169     174F                     i1l5191:
 15170                           
 15171                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
 15172     174F  0020               	movlb	0	; select bank0
 15173     1750  086E               	movf	vfpfcnvrt@fmt,w
 15174     1751  0086               	movwf	6
 15175     1752  0187               	clrf	7
 15176     1753  3F40               	moviw [0]fsr1
 15177     1754  0021               	movlb	1	; select bank1
 15178     1755  00E0               	movwf	vfpfcnvrt@cp^(0+128)
 15179     1756  3F41               	moviw [1]fsr1
 15180     1757  00E1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 15181     1758                     i1l5193:
 15182                           
 15183                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
 15184     1758  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15185     1759  0084               	movwf	4
 15186     175A  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 15187     175B  0085               	movwf	5
 15188     175C  0800               	movf	0,w	;code access
 15189     175D  00DF               	movwf	vfpfcnvrt@c^(0+128)
 15190                           
 15191                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
 15192     175E  2F69               	goto	i1l5203
 15193     175F                     i1l5195:
 15194                           
 15195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
 15196     175F  3001               	movlw	1
 15197     1760  07E0               	addwf	vfpfcnvrt@cp^(0+128),f
 15198     1761  3000               	movlw	0
 15199     1762  3DE1               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
 15200                           
 15201                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
 15202     1763  2F74               	goto	i1l5205
 15203     1764                     i1l5197:
 15204                           
 15205                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
 15206     1764  306C               	movlw	108
 15207     1765  00DF               	movwf	vfpfcnvrt@c^(0+128)
 15208                           
 15209                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
 15210     1766  2F74               	goto	i1l5205
 15211     1767                     i1l5199:
 15212                           
 15213                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
 15214     1767  01DF               	clrf	vfpfcnvrt@c^(0+128)
 15215                           
 15216                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
 15217     1768  2F74               	goto	i1l5205
 15218     1769                     i1l5203:
 15219     1769  085F               	movf	vfpfcnvrt@c^(0+128),w
 15220                           
 15221                           ; Switch size 1, requested type "simple"
 15222                           ; Number of cases is 3, Range of values is 76 to 108
 15223                           ; switch strategies available:
 15224                           ; Name         Instructions Cycles
 15225                           ; simple_byte           10     6 (average)
 15226                           ; direct_byte           75     9 (fixed)
 15227                           ; jumptable            263     9 (fixed)
 15228                           ;	Chosen strategy is simple_byte
 15229     176A  3A4C               	xorlw	76	; case 76
 15230     176B  1903               	skipnz
 15231     176C  2F5F               	goto	i1l5195
 15232     176D  3A2A               	xorlw	42	; case 102
 15233     176E  1903               	skipnz
 15234     176F  2F64               	goto	i1l5197
 15235     1770  3A0A               	xorlw	10	; case 108
 15236     1771  1903               	skipnz
 15237     1772  2F5F               	goto	i1l5195
 15238     1773  2F67               	goto	i1l5199
 15239     1774                     i1l5205:
 15240     1774  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15241     1775  0084               	movwf	4
 15242     1776  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 15243     1777  0085               	movwf	5
 15244     1778  0012               	moviw fsr0++
 15245     1779  3A66               	xorlw	102
 15246     177A  1D03               	btfss	3,2
 15247     177B  2F7D               	goto	u475_21
 15248     177C  2F7E               	goto	u475_20
 15249     177D                     u475_21:
 15250     177D  2FDB               	goto	i1l5225
 15251     177E                     u475_20:
 15252     177E  2FA7               	goto	i1l5213
 15253     177F                     i1l5207:
 15254                           
 15255                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 15256     177F  0020               	movlb	0	; select bank0
 15257     1780  086F               	movf	vfpfcnvrt@ap,w
 15258     1781  0086               	movwf	6
 15259     1782  3001               	movlw	1	; select bank2/3
 15260     1783  0087               	movwf	7
 15261     1784  0801               	movf	1,w
 15262     1785  0084               	movwf	4
 15263     1786  0185               	clrf	5
 15264     1787  3004               	movlw	4
 15265     1788  0781               	addwf	1,f
 15266     1789  3F00               	moviw [0]fsr0
 15267     178A  0021               	movlb	1	; select bank1
 15268     178B  00DA               	movwf	vfpfcnvrt@convarg^(0+128)
 15269     178C  3F01               	moviw [1]fsr0
 15270     178D  00DB               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 15271     178E  3F02               	moviw [2]fsr0
 15272     178F  00DC               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
 15273     1790  3F03               	moviw [3]fsr0
 15274     1791  00DD               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
 15275                           
 15276                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
 15277     1792  2FAF               	goto	i1l5215
 15278     1793                     i1l5209:
 15279                           
 15280                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 15281     1793  0020               	movlb	0	; select bank0
 15282     1794  086F               	movf	vfpfcnvrt@ap,w
 15283     1795  0086               	movwf	6
 15284     1796  3001               	movlw	1	; select bank2/3
 15285     1797  0087               	movwf	7
 15286     1798  0801               	movf	1,w
 15287     1799  0084               	movwf	4
 15288     179A  0185               	clrf	5
 15289     179B  3004               	movlw	4
 15290     179C  0781               	addwf	1,f
 15291     179D  3F00               	moviw [0]fsr0
 15292     179E  0021               	movlb	1	; select bank1
 15293     179F  00DA               	movwf	vfpfcnvrt@convarg^(0+128)
 15294     17A0  3F01               	moviw [1]fsr0
 15295     17A1  00DB               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
 15296     17A2  3F02               	moviw [2]fsr0
 15297     17A3  00DC               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
 15298     17A4  3F03               	moviw [3]fsr0
 15299     17A5  00DD               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
 15300                           
 15301                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
 15302     17A6  2FAF               	goto	i1l5215
 15303     17A7                     i1l5213:
 15304     17A7  085F               	movf	vfpfcnvrt@c^(0+128),w
 15305                           
 15306                           ; Switch size 1, requested type "simple"
 15307                           ; Number of cases is 2, Range of values is 76 to 108
 15308                           ; switch strategies available:
 15309                           ; Name         Instructions Cycles
 15310                           ; simple_byte            7     4 (average)
 15311                           ; direct_byte           75     9 (fixed)
 15312                           ; jumptable            263     9 (fixed)
 15313                           ;	Chosen strategy is simple_byte
 15314     17A8  3A4C               	xorlw	76	; case 76
 15315     17A9  1903               	skipnz
 15316     17AA  2F93               	goto	i1l5209
 15317     17AB  3A20               	xorlw	32	; case 108
 15318     17AC  1903               	skipnz
 15319     17AD  2F7F               	goto	i1l5207
 15320     17AE  2FAF               	goto	i1l5215
 15321     17AF                     i1l5215:
 15322                           
 15323                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
 15324     17AF  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15325     17B0  3E01               	addlw	1
 15326     17B1  00D6               	movwf	??_vfpfcnvrt^(0+128)
 15327     17B2  3000               	movlw	0
 15328     17B3  3D61               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
 15329     17B4  00D7               	movwf	(??_vfpfcnvrt+1)^(0+128)
 15330     17B5  0020               	movlb	0	; select bank0
 15331     17B6  086E               	movf	vfpfcnvrt@fmt,w
 15332     17B7  0086               	movwf	6
 15333     17B8  0187               	clrf	7
 15334     17B9  0021               	movlb	1	; select bank1
 15335     17BA  0856               	movf	??_vfpfcnvrt^(0+128),w
 15336     17BB  3FC0               	movwi [0]fsr1
 15337     17BC  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 15338     17BD  3FC1               	movwi [1]fsr1
 15339                           
 15340                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
 15341     17BE  2FD2               	goto	i1l5223
 15342     17BF                     i1l5217:
 15343                           
 15344                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 15345     17BF  085D               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
 15346     17C0  00A3               	movwf	(efgtoa@f+3)^(0+128)
 15347     17C1  085C               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
 15348     17C2  00A2               	movwf	(efgtoa@f+2)^(0+128)
 15349     17C3  085B               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
 15350     17C4  00A1               	movwf	(efgtoa@f+1)^(0+128)
 15351     17C5  085A               	movf	vfpfcnvrt@convarg^(0+128),w
 15352     17C6  00A0               	movwf	efgtoa@f^(0+128)
 15353     17C7  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15354     17C8  0084               	movwf	4
 15355     17C9  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 15356     17CA  0085               	movwf	5
 15357     17CB  0800               	movf	0,w	;code access
 15358     17CC  00A4               	movwf	efgtoa@c^(0+128)
 15359     17CD  085E               	movf	vfpfcnvrt@fp^(0+128),w
 15360     17CE  3180  2083  3196   	fcall	_efgtoa
 15361     17D1  2FFF               	goto	i1l1856
 15362     17D2                     i1l5223:
 15363     17D2  0860               	movf	vfpfcnvrt@cp^(0+128),w
 15364     17D3  0084               	movwf	4
 15365     17D4  0861               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 15366     17D5  0085               	movwf	5
 15367     17D6  0800               	movf	0,w	;code access
 15368                           
 15369                           ; Switch size 1, requested type "simple"
 15370                           ; Number of cases is 1, Range of values is 102 to 102
 15371                           ; switch strategies available:
 15372                           ; Name         Instructions Cycles
 15373                           ; simple_byte            4     3 (average)
 15374                           ; direct_byte           11     9 (fixed)
 15375                           ; jumptable            263     9 (fixed)
 15376                           ;	Chosen strategy is simple_byte
 15377     17D7  3A66               	xorlw	102	; case 102
 15378     17D8  1903               	skipnz
 15379     17D9  2FBF               	goto	i1l5217
 15380     17DA  2FDB               	goto	i1l5225
 15381     17DB                     i1l5225:
 15382                           
 15383                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 15384     17DB  0020               	movlb	0	; select bank0
 15385     17DC  086E               	movf	vfpfcnvrt@fmt,w
 15386     17DD  0086               	movwf	6
 15387     17DE  0187               	clrf	7
 15388     17DF  3001               	movlw	1
 15389     17E0  0781               	addwf	1,f
 15390     17E1  3141               	addfsr 1,1
 15391     17E2  1803               	skipnc
 15392     17E3  0A81               	incf	1,f
 15393     17E4  2FFF               	goto	i1l1856
 15394     17E5                     i1l5229:
 15395                           
 15396                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 15397     17E5  0020               	movlb	0	; select bank0
 15398     17E6  086E               	movf	vfpfcnvrt@fmt,w
 15399     17E7  0086               	movwf	6
 15400     17E8  0187               	clrf	7
 15401     17E9  3F40               	moviw [0]fsr1
 15402     17EA  0021               	movlb	1	; select bank1
 15403     17EB  00D6               	movwf	??_vfpfcnvrt^(0+128)
 15404     17EC  3F41               	moviw [1]fsr1
 15405     17ED  00D7               	movwf	(??_vfpfcnvrt^(0+128)+1)
 15406     17EE  0856               	movf	??_vfpfcnvrt^(0+128),w
 15407     17EF  0084               	movwf	4
 15408     17F0  0857               	movf	(??_vfpfcnvrt+1)^(0+128),w
 15409     17F1  0085               	movwf	5
 15410     17F2  0800               	movf	0,w	;code access
 15411     17F3  00D8               	movwf	(??_vfpfcnvrt+2)^(0+128)
 15412     17F4  01D9               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
 15413     17F5  0858               	movf	(??_vfpfcnvrt+2)^(0+128),w
 15414     17F6  00F0               	movwf	fputc@c
 15415     17F7  0859               	movf	(??_vfpfcnvrt+3)^(0+128),w
 15416     17F8  00F1               	movwf	fputc@c+1
 15417     17F9  085E               	movf	vfpfcnvrt@fp^(0+128),w
 15418     17FA  00F2               	movwf	fputc@fp
 15419     17FB  3188  2000  3196   	fcall	_fputc
 15420     17FE  2FDB               	goto	i1l5225
 15421     17FF                     i1l1856:
 15422     17FF  0008               	return
 15423     1800                     __end_of_vfpfcnvrt:
 15424                           
 15425                           	psect	text72
 15426     140B                     __ptext72:	
 15427 ;; *************** function _xtoa *****************
 15428 ;; Defined at:
 15429 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 15430 ;; Parameters:    Size  Location     Type
 15431 ;;  fp              1    wreg     PTR struct _IO_FILE
 15432 ;;		 -> sprintf@f(11), 
 15433 ;;  d               2    8[BANK0 ] unsigned int 
 15434 ;; Auto vars:     Size  Location     Type
 15435 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
 15436 ;;		 -> sprintf@f(11), 
 15437 ;;  i               2   17[BANK0 ] int 
 15438 ;;  p               2   14[BANK0 ] int 
 15439 ;;  w               2   11[BANK0 ] int 
 15440 ;;  c               1   16[BANK0 ] unsigned char 
 15441 ;; Return value:  Size  Location     Type
 15442 ;;                  1    wreg      void 
 15443 ;; Registers used:
 15444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15445 ;; Tracked objects:
 15446 ;;		On entry : 0/0
 15447 ;;		On exit  : 0/0
 15448 ;;		Unchanged: 0/0
 15449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15450 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15451 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15452 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15453 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15454 ;;Total ram usage:       11 bytes
 15455 ;; Hardware stack levels used: 1
 15456 ;; Hardware stack levels required when called: 4
 15457 ;; This function calls:
 15458 ;;		_pad
 15459 ;; This function is called by:
 15460 ;;		_vfpfcnvrt
 15461 ;; This function uses a non-reentrant model
 15462 ;;
 15463                           
 15464     140B                     _xtoa:	
 15465                           ;psect for function _xtoa
 15466                           
 15467                           
 15468                           ;incstack = 0
 15469                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15470                           ;xtoa@fp stored from wreg
 15471     140B  0020               	movlb	0	; select bank0
 15472     140C  00AD               	movwf	xtoa@fp
 15473     140D                     i1l5073:
 15474                           
 15475                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c
      +                          : 1065:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 10
      +                          80:     p = (0 <= prec) ? prec : 1;
 15476     140D  0022               	movlb	2	; select bank2
 15477     140E  1FD8               	btfss	(_prec+1)^(0+256),7
 15478     140F  2C11               	goto	u464_21
 15479     1410  2C12               	goto	u464_20
 15480     1411                     u464_21:
 15481     1411  2C18               	goto	i1l5077
 15482     1412                     u464_20:
 15483     1412                     i1l5075:
 15484     1412  3001               	movlw	1
 15485     1413  0020               	movlb	0	; select bank0
 15486     1414  00AE               	movwf	xtoa@p
 15487     1415  3000               	movlw	0
 15488     1416  00AF               	movwf	xtoa@p+1
 15489     1417  2C1F               	goto	i1l1820
 15490     1418                     i1l5077:
 15491     1418  0858               	movf	(_prec+1)^(0+256),w
 15492     1419  0020               	movlb	0	; select bank0
 15493     141A  00AF               	movwf	xtoa@p+1
 15494     141B  0022               	movlb	2	; select bank2
 15495     141C  0857               	movf	_prec^(0+256),w
 15496     141D  0020               	movlb	0	; select bank0
 15497     141E  00AE               	movwf	xtoa@p
 15498     141F                     i1l1820:
 15499                           
 15500                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 15501     141F  0022               	movlb	2	; select bank2
 15502     1420  0856               	movf	(_width+1)^(0+256),w
 15503     1421  0020               	movlb	0	; select bank0
 15504     1422  00AC               	movwf	xtoa@w+1
 15505     1423  0022               	movlb	2	; select bank2
 15506     1424  0855               	movf	_width^(0+256),w
 15507     1425  0020               	movlb	0	; select bank0
 15508     1426  00AB               	movwf	xtoa@w
 15509                           
 15510                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 15511     1427  304F               	movlw	79
 15512     1428  00B1               	movwf	xtoa@i
 15513     1429  3000               	movlw	0
 15514     142A  00B2               	movwf	xtoa@i+1
 15515     142B                     i1l5079:
 15516                           
 15517                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 15518     142B  0024               	movlb	4	; select bank4
 15519     142C  01EF               	clrf	(_dbuf^(0+512)+79)
 15520                           
 15521                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 15522     142D  2C5D               	goto	i1l5099
 15523     142E                     i1l5081:
 15524                           
 15525                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1107:         --i;
 15526     142E  30FF               	movlw	255
 15527     142F  0020               	movlb	0	; select bank0
 15528     1430  07B1               	addwf	xtoa@i,f
 15529     1431  30FF               	movlw	255
 15530     1432  3DB2               	addwfc	xtoa@i+1,f
 15531     1433                     i1l5083:
 15532                           
 15533                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 15534     1433  0828               	movf	xtoa@d,w
 15535     1434  390F               	andlw	15
 15536     1435  00B0               	movwf	xtoa@c
 15537     1436                     i1l5085:
 15538                           
 15539                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 15540     1436  300A               	movlw	10
 15541     1437  0230               	subwf	xtoa@c,w
 15542     1438  1803               	skipnc
 15543     1439  2C3B               	goto	u465_21
 15544     143A  2C3C               	goto	u465_20
 15545     143B                     u465_21:
 15546     143B  2C41               	goto	i1l5089
 15547     143C                     u465_20:
 15548     143C                     i1l5087:
 15549                           
 15550                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 15551     143C  3030               	movlw	48
 15552     143D  00AA               	movwf	??_xtoa
 15553     143E  082A               	movf	??_xtoa,w
 15554     143F  07B0               	addwf	xtoa@c,f
 15555                           
 15556                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1111:   }
 15557     1440  2C45               	goto	i1l5091
 15558     1441                     i1l5089:
 15559                           
 15560                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1116:    c += 'a'
      +                           - 10;
 15561     1441  3057               	movlw	87
 15562     1442  00AA               	movwf	??_xtoa
 15563     1443  082A               	movf	??_xtoa,w
 15564     1444  07B0               	addwf	xtoa@c,f
 15565     1445                     i1l5091:
 15566                           
 15567                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 15568     1445  0831               	movf	xtoa@i,w
 15569     1446  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 15570     1447  0086               	movwf	6
 15571     1448  3002               	movlw	2	; select bank4/5
 15572     1449  0087               	movwf	7
 15573     144A  0830               	movf	xtoa@c,w
 15574     144B  0081               	movwf	1
 15575     144C                     i1l5093:
 15576                           
 15577                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
 15578     144C  30FF               	movlw	255
 15579     144D  07AE               	addwf	xtoa@p,f
 15580     144E  30FF               	movlw	255
 15581     144F  3DAF               	addwfc	xtoa@p+1,f
 15582     1450                     i1l5095:
 15583                           
 15584                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 15585     1450  30FF               	movlw	255
 15586     1451  07AB               	addwf	xtoa@w,f
 15587     1452  30FF               	movlw	255
 15588     1453  3DAC               	addwfc	xtoa@w+1,f
 15589     1454                     i1l5097:
 15590                           
 15591                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 15592     1454  0E28               	swapf	xtoa@d,w
 15593     1455  390F               	andlw	15
 15594     1456  00A8               	movwf	xtoa@d
 15595     1457  0E29               	swapf	xtoa@d+1,w
 15596     1458  39F0               	andlw	240
 15597     1459  04A8               	iorwf	xtoa@d,f
 15598     145A  0E29               	swapf	xtoa@d+1,w
 15599     145B  390F               	andlw	15
 15600     145C  00A9               	movwf	xtoa@d+1
 15601     145D                     i1l5099:
 15602                           
 15603                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 15604     145D  0020               	movlb	0	; select bank0
 15605     145E  0832               	movf	xtoa@i+1,w
 15606     145F  3A80               	xorlw	128
 15607     1460  00AA               	movwf	??_xtoa
 15608     1461  3080               	movlw	128
 15609     1462  022A               	subwf	??_xtoa,w
 15610     1463  1D03               	skipz
 15611     1464  2C67               	goto	u466_25
 15612     1465  3002               	movlw	2
 15613     1466  0231               	subwf	xtoa@i,w
 15614     1467                     u466_25:
 15615     1467  1C03               	skipc
 15616     1468  2C6A               	goto	u466_21
 15617     1469  2C6B               	goto	u466_20
 15618     146A                     u466_21:
 15619     146A  2C7F               	goto	i1l5105
 15620     146B                     u466_20:
 15621     146B                     i1l5101:
 15622     146B  0020               	movlb	0	; select bank0
 15623     146C  0828               	movf	xtoa@d,w
 15624     146D  0429               	iorwf	xtoa@d+1,w
 15625     146E  1D03               	btfss	3,2
 15626     146F  2C71               	goto	u467_21
 15627     1470  2C72               	goto	u467_20
 15628     1471                     u467_21:
 15629     1471  2C2E               	goto	i1l5081
 15630     1472                     u467_20:
 15631     1472                     i1l5103:
 15632     1472  082F               	movf	xtoa@p+1,w
 15633     1473  3A80               	xorlw	128
 15634     1474  00AA               	movwf	??_xtoa
 15635     1475  3080               	movlw	128
 15636     1476  022A               	subwf	??_xtoa,w
 15637     1477  1D03               	skipz
 15638     1478  2C7B               	goto	u468_25
 15639     1479  3001               	movlw	1
 15640     147A  022E               	subwf	xtoa@p,w
 15641     147B                     u468_25:
 15642     147B  1803               	skipnc
 15643     147C  2C7E               	goto	u468_21
 15644     147D  2C7F               	goto	u468_20
 15645     147E                     u468_21:
 15646     147E  2C2E               	goto	i1l5081
 15647     147F                     u468_20:
 15648     147F                     i1l5105:
 15649                           
 15650                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 15651     147F  0020               	movlb	0	; select bank0
 15652     1480  0831               	movf	xtoa@i,w
 15653     1481  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 15654     1482  00FB               	movwf	pad@buf
 15655     1483  082C               	movf	xtoa@w+1,w
 15656     1484  00FD               	movwf	pad@p+1
 15657     1485  082B               	movf	xtoa@w,w
 15658     1486  00FC               	movwf	pad@p
 15659     1487  082D               	movf	xtoa@fp,w
 15660     1488  3190  20A5  3194   	fcall	_pad
 15661     148B                     i1l1828:
 15662     148B  0008               	return
 15663     148C                     __end_of_xtoa:
 15664                           
 15665                           	psect	text73
 15666     1243                     __ptext73:	
 15667 ;; *************** function _read_prec_or_width *****************
 15668 ;; Defined at:
 15669 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 15670 ;; Parameters:    Size  Location     Type
 15671 ;;  fmt             1    wreg     PTR PTR const unsigned c
 15672 ;;		 -> vfprintf@cfmt(2), 
 15673 ;;  ap              1    6[COMMON] PTR PTR void [1]
 15674 ;;		 -> sprintf@ap(1), 
 15675 ;; Auto vars:     Size  Location     Type
 15676 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
 15677 ;;		 -> vfprintf@cfmt(2), 
 15678 ;;  c               1    0[BANK0 ] unsigned char 
 15679 ;;  n               2    1[BANK0 ] int 
 15680 ;; Return value:  Size  Location     Type
 15681 ;;                  2    6[COMMON] int 
 15682 ;; Registers used:
 15683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15684 ;; Tracked objects:
 15685 ;;		On entry : 0/0
 15686 ;;		On exit  : 0/0
 15687 ;;		Unchanged: 0/0
 15688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15690 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15691 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15692 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15693 ;;Total ram usage:        9 bytes
 15694 ;; Hardware stack levels used: 1
 15695 ;; Hardware stack levels required when called: 1
 15696 ;; This function calls:
 15697 ;;		___wmul
 15698 ;; This function is called by:
 15699 ;;		_vfpfcnvrt
 15700 ;; This function uses a non-reentrant model
 15701 ;;
 15702                           
 15703     1243                     _read_prec_or_width:	
 15704                           ;psect for function _read_prec_or_width
 15705                           
 15706                           
 15707                           ;incstack = 0
 15708                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15709                           ;read_prec_or_width@fmt stored from wreg
 15710     1243  0020               	movlb	0	; select bank0
 15711     1244  00A3               	movwf	read_prec_or_width@fmt
 15712     1245                     i1l5109:
 15713                           
 15714                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 15715     1245  01A1               	clrf	read_prec_or_width@n
 15716     1246  01A2               	clrf	read_prec_or_width@n+1
 15717     1247                     i1l5111:
 15718                           
 15719                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 15720     1247  0823               	movf	read_prec_or_width@fmt,w
 15721     1248  0086               	movwf	6
 15722     1249  0187               	clrf	7
 15723     124A  3F40               	moviw [0]fsr1
 15724     124B  00F8               	movwf	??_read_prec_or_width
 15725     124C  3F41               	moviw [1]fsr1
 15726     124D  00F9               	movwf	??_read_prec_or_width+1
 15727     124E  0878               	movf	??_read_prec_or_width,w
 15728     124F  0084               	movwf	4
 15729     1250  0879               	movf	??_read_prec_or_width+1,w
 15730     1251  0085               	movwf	5
 15731     1252  0012               	moviw fsr0++
 15732     1253  3A2A               	xorlw	42
 15733     1254  1D03               	btfss	3,2
 15734     1255  2A57               	goto	u469_21
 15735     1256  2A58               	goto	u469_20
 15736     1257                     u469_21:
 15737     1257  2A8B               	goto	i1l5121
 15738     1258                     u469_20:
 15739     1258                     i1l5113:
 15740                           
 15741                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 15742     1258  0823               	movf	read_prec_or_width@fmt,w
 15743     1259  0086               	movwf	6
 15744     125A  0187               	clrf	7
 15745     125B  3001               	movlw	1
 15746     125C  0781               	addwf	1,f
 15747     125D  3141               	addfsr 1,1
 15748     125E  1803               	skipnc
 15749     125F  0A81               	incf	1,f
 15750     1260                     i1l5115:
 15751                           
 15752                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 15753     1260  0876               	movf	read_prec_or_width@ap,w
 15754     1261  0086               	movwf	6
 15755     1262  3001               	movlw	1	; select bank2/3
 15756     1263  0087               	movwf	7
 15757     1264  0801               	movf	1,w
 15758     1265  0084               	movwf	4
 15759     1266  0185               	clrf	5
 15760     1267  3002               	movlw	2
 15761     1268  0781               	addwf	1,f
 15762     1269  3F00               	moviw [0]fsr0
 15763     126A  00A1               	movwf	read_prec_or_width@n
 15764     126B  3F01               	moviw [1]fsr0
 15765     126C  00A2               	movwf	read_prec_or_width@n+1
 15766                           
 15767                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 15768     126D  2A9F               	goto	i1l5123
 15769     126E                     i1l5117:
 15770                           
 15771                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 15772     126E  0820               	movf	read_prec_or_width@c,w
 15773     126F  00F8               	movwf	??_read_prec_or_width
 15774     1270  01F9               	clrf	??_read_prec_or_width+1
 15775     1271  0822               	movf	read_prec_or_width@n+1,w
 15776     1272  00F1               	movwf	___wmul@multiplier+1
 15777     1273  0821               	movf	read_prec_or_width@n,w
 15778     1274  00F0               	movwf	___wmul@multiplier
 15779     1275  300A               	movlw	10
 15780     1276  00F2               	movwf	___wmul@multiplicand
 15781     1277  3000               	movlw	0
 15782     1278  00F3               	movwf	___wmul@multiplicand+1
 15783     1279  319E  26CB  3192   	fcall	___wmul
 15784     127C  0878               	movf	??_read_prec_or_width,w
 15785     127D  0770               	addwf	?___wmul,w
 15786     127E  0020               	movlb	0	; select bank0
 15787     127F  00A1               	movwf	read_prec_or_width@n
 15788     1280  0879               	movf	??_read_prec_or_width+1,w
 15789     1281  3D71               	addwfc	?___wmul+1,w
 15790     1282  00A2               	movwf	read_prec_or_width@n+1
 15791     1283                     i1l5119:
 15792                           
 15793                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 15794     1283  0823               	movf	read_prec_or_width@fmt,w
 15795     1284  0086               	movwf	6
 15796     1285  0187               	clrf	7
 15797     1286  3001               	movlw	1
 15798     1287  0781               	addwf	1,f
 15799     1288  3141               	addfsr 1,1
 15800     1289  1803               	skipnc
 15801     128A  0A81               	incf	1,f
 15802     128B                     i1l5121:
 15803                           
 15804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 15805     128B  0823               	movf	read_prec_or_width@fmt,w
 15806     128C  0086               	movwf	6
 15807     128D  0187               	clrf	7
 15808     128E  3F40               	moviw [0]fsr1
 15809     128F  00F8               	movwf	??_read_prec_or_width
 15810     1290  3F41               	moviw [1]fsr1
 15811     1291  00F9               	movwf	??_read_prec_or_width+1
 15812     1292  0878               	movf	??_read_prec_or_width,w
 15813     1293  0084               	movwf	4
 15814     1294  0879               	movf	??_read_prec_or_width+1,w
 15815     1295  0085               	movwf	5
 15816     1296  0800               	movf	0,w	;code access
 15817     1297  3ED0               	addlw	208
 15818     1298  00A0               	movwf	read_prec_or_width@c
 15819     1299  300A               	movlw	10
 15820     129A  0220               	subwf	read_prec_or_width@c,w
 15821     129B  1C03               	skipc
 15822     129C  2A9E               	goto	u470_21
 15823     129D  2A9F               	goto	u470_20
 15824     129E                     u470_21:
 15825     129E  2A6E               	goto	i1l5117
 15826     129F                     u470_20:
 15827     129F                     i1l5123:
 15828                           
 15829                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 15830     129F  0822               	movf	read_prec_or_width@n+1,w
 15831     12A0  00F7               	movwf	?_read_prec_or_width+1
 15832     12A1  0821               	movf	read_prec_or_width@n,w
 15833     12A2  00F6               	movwf	?_read_prec_or_width
 15834     12A3                     i1l1836:
 15835     12A3  0008               	return
 15836     12A4                     __end_of_read_prec_or_width:
 15837                           
 15838                           	psect	text74
 15839     1ECB                     __ptext74:	
 15840 ;; *************** function ___wmul *****************
 15841 ;; Defined at:
 15842 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 15843 ;; Parameters:    Size  Location     Type
 15844 ;;  multiplier      2    0[COMMON] unsigned int 
 15845 ;;  multiplicand    2    2[COMMON] unsigned int 
 15846 ;; Auto vars:     Size  Location     Type
 15847 ;;  product         2    4[COMMON] unsigned int 
 15848 ;; Return value:  Size  Location     Type
 15849 ;;                  2    0[COMMON] unsigned int 
 15850 ;; Registers used:
 15851 ;;		wreg, status,2, status,0
 15852 ;; Tracked objects:
 15853 ;;		On entry : 0/0
 15854 ;;		On exit  : 0/0
 15855 ;;		Unchanged: 0/0
 15856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15857 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15860 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15861 ;;Total ram usage:        6 bytes
 15862 ;; Hardware stack levels used: 1
 15863 ;; This function calls:
 15864 ;;		Nothing
 15865 ;; This function is called by:
 15866 ;;		_read_prec_or_width
 15867 ;; This function uses a non-reentrant model
 15868 ;;
 15869                           
 15870     1ECB                     ___wmul:	
 15871                           ;psect for function ___wmul
 15872                           
 15873     1ECB                     i1l4407:	
 15874                           ;incstack = 0
 15875                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15876                           
 15877     1ECB  01F4               	clrf	___wmul@product
 15878     1ECC  01F5               	clrf	___wmul@product+1
 15879     1ECD                     i1l4409:
 15880     1ECD  1C70               	btfss	___wmul@multiplier,0
 15881     1ECE  2ED0               	goto	u330_21
 15882     1ECF  2ED1               	goto	u330_20
 15883     1ED0                     u330_21:
 15884     1ED0  2ED5               	goto	i1l1268
 15885     1ED1                     u330_20:
 15886     1ED1                     i1l4411:
 15887     1ED1  0872               	movf	___wmul@multiplicand,w
 15888     1ED2  07F4               	addwf	___wmul@product,f
 15889     1ED3  0873               	movf	___wmul@multiplicand+1,w
 15890     1ED4  3DF5               	addwfc	___wmul@product+1,f
 15891     1ED5                     i1l1268:
 15892     1ED5  3001               	movlw	1
 15893     1ED6                     u331_25:
 15894     1ED6  35F2               	lslf	___wmul@multiplicand,f
 15895     1ED7  0DF3               	rlf	___wmul@multiplicand+1,f
 15896     1ED8  0B89               	decfsz	9,f
 15897     1ED9  2ED6               	goto	u331_25
 15898     1EDA                     i1l4413:
 15899     1EDA  3001               	movlw	1
 15900     1EDB                     u332_25:
 15901     1EDB  36F1               	lsrf	___wmul@multiplier+1,f
 15902     1EDC  0CF0               	rrf	___wmul@multiplier,f
 15903     1EDD  0B89               	decfsz	9,f
 15904     1EDE  2EDB               	goto	u332_25
 15905     1EDF                     i1l4415:
 15906     1EDF  0870               	movf	___wmul@multiplier,w
 15907     1EE0  0471               	iorwf	___wmul@multiplier+1,w
 15908     1EE1  1D03               	btfss	3,2
 15909     1EE2  2EE4               	goto	u333_21
 15910     1EE3  2EE5               	goto	u333_20
 15911     1EE4                     u333_21:
 15912     1EE4  2ECD               	goto	i1l4409
 15913     1EE5                     u333_20:
 15914     1EE5                     i1l4417:
 15915     1EE5  0875               	movf	___wmul@product+1,w
 15916     1EE6  00F1               	movwf	?___wmul+1
 15917     1EE7  0874               	movf	___wmul@product,w
 15918     1EE8  00F0               	movwf	?___wmul
 15919     1EE9                     i1l1270:
 15920     1EE9  0008               	return
 15921     1EEA                     __end_of___wmul:
 15922                           
 15923                           	psect	text75
 15924     0083                     __ptext75:	
 15925 ;; *************** function _efgtoa *****************
 15926 ;; Defined at:
 15927 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 15928 ;; Parameters:    Size  Location     Type
 15929 ;;  fp              1    wreg     PTR struct _IO_FILE
 15930 ;;		 -> sprintf@f(11), 
 15931 ;;  f               4    0[BANK1 ] PTR struct _IO_FILE
 15932 ;;  c               1    4[BANK1 ] unsigned char 
 15933 ;; Auto vars:     Size  Location     Type
 15934 ;;  fp              1   24[BANK1 ] PTR struct _IO_FILE
 15935 ;;		 -> sprintf@f(11), 
 15936 ;;  u               4   50[BANK1 ] struct flui
 15937 ;;  g               4   46[BANK1 ] struct flui
 15938 ;;  l               4   39[BANK1 ] struct flui
 15939 ;;  h               4   35[BANK1 ] struct flui
 15940 ;;  ou              4   29[BANK1 ] struct flui
 15941 ;;  n               2   44[BANK1 ] int 
 15942 ;;  i               2   33[BANK1 ] int 
 15943 ;;  w               2   27[BANK1 ] int 
 15944 ;;  e               2   25[BANK1 ] int 
 15945 ;;  m               2   22[BANK1 ] int 
 15946 ;;  d               2   20[BANK1 ] int 
 15947 ;;  t               2   13[BANK1 ] int 
 15948 ;;  p               2   11[BANK1 ] int 
 15949 ;;  ne              2    9[BANK1 ] int 
 15950 ;;  sign            1   43[BANK1 ] unsigned char 
 15951 ;;  nmode           1   19[BANK1 ] unsigned char 
 15952 ;;  mode            1   18[BANK1 ] unsigned char 
 15953 ;;  pp              1   17[BANK1 ] unsigned char 
 15954 ;;  esign           1    0        unsigned char 
 15955 ;; Return value:  Size  Location     Type
 15956 ;;                  1    wreg      void 
 15957 ;; Registers used:
 15958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15959 ;; Tracked objects:
 15960 ;;		On entry : 0/0
 15961 ;;		On exit  : 0/0
 15962 ;;		Unchanged: 0/0
 15963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15964 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 15965 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0
 15966 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15967 ;;      Totals:         0       0      54       0       0       0       0       0       0       0       0       0       
      +0       0
 15968 ;;Total ram usage:       54 bytes
 15969 ;; Hardware stack levels used: 1
 15970 ;; Hardware stack levels required when called: 4
 15971 ;; This function calls:
 15972 ;;		___fladd
 15973 ;;		___fldiv
 15974 ;;		___fleq
 15975 ;;		___flge
 15976 ;;		___flmul
 15977 ;;		___flneg
 15978 ;;		___flsub
 15979 ;;		___fltol
 15980 ;;		___fpclassifyf
 15981 ;;		_floorf
 15982 ;;		_labs
 15983 ;;		_memcpy
 15984 ;;		_pad
 15985 ;;		_strcpy
 15986 ;; This function is called by:
 15987 ;;		_vfpfcnvrt
 15988 ;; This function uses a non-reentrant model
 15989 ;;
 15990                           
 15991     0083                     _efgtoa:	
 15992                           ;psect for function _efgtoa
 15993                           
 15994                           
 15995                           ;incstack = 0
 15996                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15997                           ;efgtoa@fp stored from wreg
 15998     0083  0021               	movlb	1	; select bank1
 15999     0084  00B8               	movwf	efgtoa@fp^(0+128)
 16000     0085                     i1l4871:
 16001                           
 16002                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 16003     0085  01CB               	clrf	efgtoa@sign^(0+128)
 16004     0086                     i1l4873:
 16005                           
 16006                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 16007     0086  0823               	movf	(efgtoa@f+3)^(0+128),w
 16008     0087  00D1               	movwf	(efgtoa@g+3)^(0+128)
 16009     0088  0822               	movf	(efgtoa@f+2)^(0+128),w
 16010     0089  00D0               	movwf	(efgtoa@g+2)^(0+128)
 16011     008A  0821               	movf	(efgtoa@f+1)^(0+128),w
 16012     008B  00CF               	movwf	(efgtoa@g+1)^(0+128)
 16013     008C  0820               	movf	efgtoa@f^(0+128),w
 16014     008D  00CE               	movwf	efgtoa@g^(0+128)
 16015     008E                     i1l4875:
 16016                           
 16017                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 16018     008E  0851               	movf	(efgtoa@g+3)^(0+128),w
 16019     008F  0020               	movlb	0	; select bank0
 16020     0090  00C3               	movwf	___flge@ff1+3
 16021     0091  0021               	movlb	1	; select bank1
 16022     0092  0850               	movf	(efgtoa@g+2)^(0+128),w
 16023     0093  0020               	movlb	0	; select bank0
 16024     0094  00C2               	movwf	___flge@ff1+2
 16025     0095  0021               	movlb	1	; select bank1
 16026     0096  084F               	movf	(efgtoa@g+1)^(0+128),w
 16027     0097  0020               	movlb	0	; select bank0
 16028     0098  00C1               	movwf	___flge@ff1+1
 16029     0099  0021               	movlb	1	; select bank1
 16030     009A  084E               	movf	efgtoa@g^(0+128),w
 16031     009B  0020               	movlb	0	; select bank0
 16032     009C  00C0               	movwf	___flge@ff1
 16033     009D  3000               	movlw	0
 16034     009E  00C7               	movwf	___flge@ff2+3
 16035     009F  3000               	movlw	0
 16036     00A0  00C6               	movwf	___flge@ff2+2
 16037     00A1  3000               	movlw	0
 16038     00A2  00C5               	movwf	___flge@ff2+1
 16039     00A3  3000               	movlw	0
 16040     00A4  00C4               	movwf	___flge@ff2
 16041     00A5  3194  248C  3180   	fcall	___flge
 16042     00A8  1803               	btfsc	3,0
 16043     00A9  28AB               	goto	u432_21
 16044     00AA  28AC               	goto	u432_20
 16045     00AB                     u432_21:
 16046     00AB  28C3               	goto	i1l4881
 16047     00AC                     u432_20:
 16048     00AC                     i1l4877:
 16049                           
 16050                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 16051     00AC  0021               	movlb	1	; select bank1
 16052     00AD  01CB               	clrf	efgtoa@sign^(0+128)
 16053     00AE  0ACB               	incf	efgtoa@sign^(0+128),f
 16054     00AF                     i1l4879:
 16055                           
 16056                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 16057     00AF  0851               	movf	(efgtoa@g+3)^(0+128),w
 16058     00B0  00F3               	movwf	___flneg@f1+3
 16059     00B1  0850               	movf	(efgtoa@g+2)^(0+128),w
 16060     00B2  00F2               	movwf	___flneg@f1+2
 16061     00B3  084F               	movf	(efgtoa@g+1)^(0+128),w
 16062     00B4  00F1               	movwf	___flneg@f1+1
 16063     00B5  084E               	movf	efgtoa@g^(0+128),w
 16064     00B6  00F0               	movwf	___flneg@f1
 16065     00B7  319C  24F5  3180   	fcall	___flneg
 16066     00BA  0873               	movf	?___flneg+3,w
 16067     00BB  0021               	movlb	1	; select bank1
 16068     00BC  00D1               	movwf	(efgtoa@g+3)^(0+128)
 16069     00BD  0872               	movf	?___flneg+2,w
 16070     00BE  00D0               	movwf	(efgtoa@g+2)^(0+128)
 16071     00BF  0871               	movf	?___flneg+1,w
 16072     00C0  00CF               	movwf	(efgtoa@g+1)^(0+128)
 16073     00C1  0870               	movf	?___flneg,w
 16074     00C2  00CE               	movwf	efgtoa@g^(0+128)
 16075     00C3                     i1l4881:
 16076                           
 16077                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 16078     00C3  0021               	movlb	1	; select bank1
 16079     00C4  01CC               	clrf	efgtoa@n^(0+128)
 16080     00C5  01CD               	clrf	(efgtoa@n+1)^(0+128)
 16081     00C6                     i1l4883:
 16082                           
 16083                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 16084     00C6  0022               	movlb	2	; select bank2
 16085     00C7  0856               	movf	(_width+1)^(0+256),w
 16086     00C8  0021               	movlb	1	; select bank1
 16087     00C9  00BC               	movwf	(efgtoa@w+1)^(0+128)
 16088     00CA  0022               	movlb	2	; select bank2
 16089     00CB  0855               	movf	_width^(0+256),w
 16090     00CC  0021               	movlb	1	; select bank1
 16091     00CD  00BB               	movwf	efgtoa@w^(0+128)
 16092     00CE                     i1l4885:
 16093                           
 16094                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
 16095     00CE  084B               	movf	efgtoa@sign^(0+128),w
 16096     00CF  1903               	btfsc	3,2
 16097     00D0  28D2               	goto	u433_21
 16098     00D1  28D3               	goto	u433_20
 16099     00D2                     u433_21:
 16100     00D2  28E3               	goto	i1l4893
 16101     00D3                     u433_20:
 16102     00D3                     i1l4887:
 16103                           
 16104                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 16105     00D3  084B               	movf	efgtoa@sign^(0+128),w
 16106     00D4  1D03               	btfss	3,2
 16107     00D5  28D7               	goto	u434_21
 16108     00D6  28D8               	goto	u434_20
 16109     00D7                     u434_21:
 16110     00D7  28DD               	goto	i1l4891
 16111     00D8                     u434_20:
 16112     00D8                     i1l4889:
 16113     00D8  302B               	movlw	43
 16114     00D9  00AF               	movwf	_efgtoa$3151^(0+128)
 16115     00DA  3000               	movlw	0
 16116     00DB  00B0               	movwf	(_efgtoa$3151^(0+128)+1)
 16117     00DC  28E1               	goto	i1l1770
 16118     00DD                     i1l4891:
 16119     00DD  302D               	movlw	45
 16120     00DE  00AF               	movwf	_efgtoa$3151^(0+128)
 16121     00DF  3000               	movlw	0
 16122     00E0  00B0               	movwf	(_efgtoa$3151^(0+128)+1)
 16123     00E1                     i1l1770:
 16124     00E1  082F               	movf	_efgtoa$3151^(0+128),w
 16125     00E2  00CB               	movwf	efgtoa@sign^(0+128)
 16126     00E3                     i1l4893:
 16127                           
 16128                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 16129     00E3  0851               	movf	(efgtoa@g+3)^(0+128),w
 16130     00E4  00F3               	movwf	___fpclassifyf@x+3
 16131     00E5  0850               	movf	(efgtoa@g+2)^(0+128),w
 16132     00E6  00F2               	movwf	___fpclassifyf@x+2
 16133     00E7  084F               	movf	(efgtoa@g+1)^(0+128),w
 16134     00E8  00F1               	movwf	___fpclassifyf@x+1
 16135     00E9  084E               	movf	efgtoa@g^(0+128),w
 16136     00EA  00F0               	movwf	___fpclassifyf@x
 16137     00EB  3193  238C  3180   	fcall	___fpclassifyf
 16138     00EE  0370               	decf	?___fpclassifyf,w
 16139     00EF  0471               	iorwf	?___fpclassifyf+1,w
 16140     00F0  1D03               	btfss	3,2
 16141     00F1  28F3               	goto	u435_21
 16142     00F2  28F4               	goto	u435_20
 16143     00F3                     u435_21:
 16144     00F3  291F               	goto	i1l4905
 16145     00F4                     u435_20:
 16146     00F4                     i1l4895:
 16147                           
 16148                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 16149     00F4  0021               	movlb	1	; select bank1
 16150     00F5  084B               	movf	efgtoa@sign^(0+128),w
 16151     00F6  1903               	btfsc	3,2
 16152     00F7  28F9               	goto	u436_21
 16153     00F8  28FA               	goto	u436_20
 16154     00F9                     u436_21:
 16155     00F9  2906               	goto	i1l4899
 16156     00FA                     u436_20:
 16157     00FA                     i1l4897:
 16158                           
 16159                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 16160     00FA  084B               	movf	efgtoa@sign^(0+128),w
 16161     00FB  0024               	movlb	4	; select bank4
 16162     00FC  00A0               	movwf	_dbuf^(0+512)
 16163                           
 16164                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
 16165     00FD  30FF               	movlw	255
 16166     00FE  0021               	movlb	1	; select bank1
 16167     00FF  07BB               	addwf	efgtoa@w^(0+128),f
 16168     0100  30FF               	movlw	255
 16169     0101  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 16170                           
 16171                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 16172     0102  3001               	movlw	1
 16173     0103  00CC               	movwf	efgtoa@n^(0+128)
 16174     0104  3000               	movlw	0
 16175     0105  00CD               	movwf	(efgtoa@n^(0+128)+1)
 16176     0106                     i1l4899:
 16177                           
 16178                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 16179     0106  30E0               	movlw	low (STR_9| (0+32768))
 16180     0107  00F0               	movwf	strcpy@src
 16181     0108  3098               	movlw	high (STR_9| (0+32768))
 16182     0109  00F1               	movwf	strcpy@src+1
 16183     010A  084C               	movf	efgtoa@n^(0+128),w
 16184     010B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 16185     010C  319E  2678  3180   	fcall	_strcpy
 16186     010F                     i1l4901:
 16187                           
 16188                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 16189     010F  30FD               	movlw	253
 16190     0110  0021               	movlb	1	; select bank1
 16191     0111  07BB               	addwf	efgtoa@w^(0+128),f
 16192     0112  30FF               	movlw	255
 16193     0113  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 16194                           
 16195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 16196     0114  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 16197     0115  00FB               	movwf	pad@buf
 16198     0116  083C               	movf	(efgtoa@w+1)^(0+128),w
 16199     0117  00FD               	movwf	pad@p+1
 16200     0118  083B               	movf	efgtoa@w^(0+128),w
 16201     0119  00FC               	movwf	pad@p
 16202     011A  0838               	movf	efgtoa@fp^(0+128),w
 16203     011B  3190  20A5  3180   	fcall	_pad
 16204     011E  2EA8               	goto	i1l1773
 16205     011F                     i1l4905:
 16206                           
 16207                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 16208     011F  0021               	movlb	1	; select bank1
 16209     0120  0851               	movf	(efgtoa@g+3)^(0+128),w
 16210     0121  00F3               	movwf	___fpclassifyf@x+3
 16211     0122  0850               	movf	(efgtoa@g+2)^(0+128),w
 16212     0123  00F2               	movwf	___fpclassifyf@x+2
 16213     0124  084F               	movf	(efgtoa@g+1)^(0+128),w
 16214     0125  00F1               	movwf	___fpclassifyf@x+1
 16215     0126  084E               	movf	efgtoa@g^(0+128),w
 16216     0127  00F0               	movwf	___fpclassifyf@x
 16217     0128  3193  238C  3180   	fcall	___fpclassifyf
 16218     012B  0870               	movf	?___fpclassifyf,w
 16219     012C  0471               	iorwf	?___fpclassifyf+1,w
 16220     012D  1D03               	btfss	3,2
 16221     012E  2930               	goto	u437_21
 16222     012F  2931               	goto	u437_20
 16223     0130                     u437_21:
 16224     0130  295C               	goto	i1l4917
 16225     0131                     u437_20:
 16226     0131                     i1l4907:
 16227                           
 16228                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 16229     0131  0021               	movlb	1	; select bank1
 16230     0132  084B               	movf	efgtoa@sign^(0+128),w
 16231     0133  1903               	btfsc	3,2
 16232     0134  2936               	goto	u438_21
 16233     0135  2937               	goto	u438_20
 16234     0136                     u438_21:
 16235     0136  2943               	goto	i1l4911
 16236     0137                     u438_20:
 16237     0137                     i1l4909:
 16238                           
 16239                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 16240     0137  084B               	movf	efgtoa@sign^(0+128),w
 16241     0138  0024               	movlb	4	; select bank4
 16242     0139  00A0               	movwf	_dbuf^(0+512)
 16243                           
 16244                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
 16245     013A  30FF               	movlw	255
 16246     013B  0021               	movlb	1	; select bank1
 16247     013C  07BB               	addwf	efgtoa@w^(0+128),f
 16248     013D  30FF               	movlw	255
 16249     013E  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 16250                           
 16251                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 16252     013F  3001               	movlw	1
 16253     0140  00CC               	movwf	efgtoa@n^(0+128)
 16254     0141  3000               	movlw	0
 16255     0142  00CD               	movwf	(efgtoa@n^(0+128)+1)
 16256     0143                     i1l4911:
 16257                           
 16258                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 16259     0143  30E4               	movlw	low (STR_12| (0+32768))
 16260     0144  00F0               	movwf	strcpy@src
 16261     0145  3098               	movlw	high (STR_12| (0+32768))
 16262     0146  00F1               	movwf	strcpy@src+1
 16263     0147  084C               	movf	efgtoa@n^(0+128),w
 16264     0148  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 16265     0149  319E  2678  3180   	fcall	_strcpy
 16266     014C                     i1l4913:
 16267                           
 16268                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 651:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 652:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
 16269     014C  30FD               	movlw	253
 16270     014D  0021               	movlb	1	; select bank1
 16271     014E  07BB               	addwf	efgtoa@w^(0+128),f
 16272     014F  30FF               	movlw	255
 16273     0150  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 16274                           
 16275                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 653:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 16276     0151  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 16277     0152  00FB               	movwf	pad@buf
 16278     0153  083C               	movf	(efgtoa@w+1)^(0+128),w
 16279     0154  00FD               	movwf	pad@p+1
 16280     0155  083B               	movf	efgtoa@w^(0+128),w
 16281     0156  00FC               	movwf	pad@p
 16282     0157  0838               	movf	efgtoa@fp^(0+128),w
 16283     0158  3190  20A5  3180   	fcall	_pad
 16284     015B  2EA8               	goto	i1l1773
 16285     015C                     i1l4917:
 16286                           
 16287                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 16288     015C  303F               	movlw	63
 16289     015D  0021               	movlb	1	; select bank1
 16290     015E  00D5               	movwf	(efgtoa@u+3)^(0+128)
 16291     015F  3080               	movlw	128
 16292     0160  00D4               	movwf	(efgtoa@u+2)^(0+128)
 16293     0161  3000               	movlw	0
 16294     0162  00D3               	movwf	(efgtoa@u+1)^(0+128)
 16295     0163  3000               	movlw	0
 16296     0164  00D2               	movwf	efgtoa@u^(0+128)
 16297     0165                     i1l4919:
 16298                           
 16299                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 16300     0165  01B9               	clrf	efgtoa@e^(0+128)
 16301     0166  01BA               	clrf	(efgtoa@e+1)^(0+128)
 16302     0167                     i1l4921:
 16303                           
 16304                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 16305     0167  0851               	movf	(efgtoa@g+3)^(0+128),w
 16306     0168  00F3               	movwf	___fleq@ff1+3
 16307     0169  0850               	movf	(efgtoa@g+2)^(0+128),w
 16308     016A  00F2               	movwf	___fleq@ff1+2
 16309     016B  084F               	movf	(efgtoa@g+1)^(0+128),w
 16310     016C  00F1               	movwf	___fleq@ff1+1
 16311     016D  084E               	movf	efgtoa@g^(0+128),w
 16312     016E  00F0               	movwf	___fleq@ff1
 16313     016F  3000               	movlw	0
 16314     0170  00F7               	movwf	___fleq@ff2+3
 16315     0171  3000               	movlw	0
 16316     0172  00F6               	movwf	___fleq@ff2+2
 16317     0173  3000               	movlw	0
 16318     0174  00F5               	movwf	___fleq@ff2+1
 16319     0175  3000               	movlw	0
 16320     0176  00F4               	movwf	___fleq@ff2
 16321     0177  3191  219F  3180   	fcall	___fleq
 16322     017A  1803               	btfsc	3,0
 16323     017B  297D               	goto	u439_21
 16324     017C  297E               	goto	u439_20
 16325     017D                     u439_21:
 16326     017D  2ABA               	goto	i1l4947
 16327     017E                     u439_20:
 16328     017E  298C               	goto	i1l4927
 16329     017F                     i1l4925:
 16330                           
 16331                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 16332     017F  0021               	movlb	1	; select bank1
 16333     0180  0840               	movf	(efgtoa@ou+3)^(0+128),w
 16334     0181  00D5               	movwf	(efgtoa@u+3)^(0+128)
 16335     0182  083F               	movf	(efgtoa@ou+2)^(0+128),w
 16336     0183  00D4               	movwf	(efgtoa@u+2)^(0+128)
 16337     0184  083E               	movf	(efgtoa@ou+1)^(0+128),w
 16338     0185  00D3               	movwf	(efgtoa@u+1)^(0+128)
 16339     0186  083D               	movf	efgtoa@ou^(0+128),w
 16340     0187  00D2               	movwf	efgtoa@u^(0+128)
 16341                           
 16342                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
 16343     0188  3001               	movlw	1
 16344     0189  07B9               	addwf	efgtoa@e^(0+128),f
 16345     018A  3000               	movlw	0
 16346     018B  3DBA               	addwfc	(efgtoa@e+1)^(0+128),f
 16347     018C                     i1l4927:
 16348                           
 16349                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 16350     018C  3041               	movlw	65
 16351     018D  0020               	movlb	0	; select bank0
 16352     018E  00A9               	movwf	___flmul@b+3
 16353     018F  3020               	movlw	32
 16354     0190  00A8               	movwf	___flmul@b+2
 16355     0191  3000               	movlw	0
 16356     0192  00A7               	movwf	___flmul@b+1
 16357     0193  3000               	movlw	0
 16358     0194  00A6               	movwf	___flmul@b
 16359     0195  0021               	movlb	1	; select bank1
 16360     0196  0855               	movf	(efgtoa@u+3)^(0+128),w
 16361     0197  0020               	movlb	0	; select bank0
 16362     0198  00AD               	movwf	___flmul@a+3
 16363     0199  0021               	movlb	1	; select bank1
 16364     019A  0854               	movf	(efgtoa@u+2)^(0+128),w
 16365     019B  0020               	movlb	0	; select bank0
 16366     019C  00AC               	movwf	___flmul@a+2
 16367     019D  0021               	movlb	1	; select bank1
 16368     019E  0853               	movf	(efgtoa@u+1)^(0+128),w
 16369     019F  0020               	movlb	0	; select bank0
 16370     01A0  00AB               	movwf	___flmul@a+1
 16371     01A1  0021               	movlb	1	; select bank1
 16372     01A2  0852               	movf	efgtoa@u^(0+128),w
 16373     01A3  0020               	movlb	0	; select bank0
 16374     01A4  00AA               	movwf	___flmul@a
 16375     01A5  318D  25C5  3180   	fcall	___flmul
 16376     01A8  0020               	movlb	0	; select bank0
 16377     01A9  0829               	movf	?___flmul+3,w
 16378     01AA  0021               	movlb	1	; select bank1
 16379     01AB  00C0               	movwf	(efgtoa@ou+3)^(0+128)
 16380     01AC  0020               	movlb	0	; select bank0
 16381     01AD  0828               	movf	?___flmul+2,w
 16382     01AE  0021               	movlb	1	; select bank1
 16383     01AF  00BF               	movwf	(efgtoa@ou+2)^(0+128)
 16384     01B0  0020               	movlb	0	; select bank0
 16385     01B1  0827               	movf	?___flmul+1,w
 16386     01B2  0021               	movlb	1	; select bank1
 16387     01B3  00BE               	movwf	(efgtoa@ou+1)^(0+128)
 16388     01B4  0020               	movlb	0	; select bank0
 16389     01B5  0826               	movf	?___flmul,w
 16390     01B6  0021               	movlb	1	; select bank1
 16391     01B7  00BD               	movwf	efgtoa@ou^(0+128)
 16392     01B8                     i1l4929:
 16393     01B8  083D               	movf	efgtoa@ou^(0+128),w
 16394     01B9  024E               	subwf	efgtoa@g^(0+128),w
 16395     01BA  00A5               	movwf	??_efgtoa^(0+128)
 16396     01BB  083E               	movf	(efgtoa@ou+1)^(0+128),w
 16397     01BC  3B4F               	subwfb	(efgtoa@g+1)^(0+128),w
 16398     01BD  00A6               	movwf	(??_efgtoa^(0+128)+1)
 16399     01BE  083F               	movf	(efgtoa@ou+2)^(0+128),w
 16400     01BF  3B50               	subwfb	(efgtoa@g+2)^(0+128),w
 16401     01C0  00A7               	movwf	(??_efgtoa^(0+128)+2)
 16402     01C1  0840               	movf	(efgtoa@ou+3)^(0+128),w
 16403     01C2  3B51               	subwfb	(efgtoa@g+3)^(0+128),w
 16404     01C3  00A8               	movwf	(??_efgtoa^(0+128)+3)
 16405     01C4  0828               	movf	(??_efgtoa+3)^(0+128),w
 16406     01C5  00F3               	movwf	labs@a+3
 16407     01C6  0827               	movf	(??_efgtoa+2)^(0+128),w
 16408     01C7  00F2               	movwf	labs@a+2
 16409     01C8  0826               	movf	(??_efgtoa+1)^(0+128),w
 16410     01C9  00F1               	movwf	labs@a+1
 16411     01CA  0825               	movf	??_efgtoa^(0+128),w
 16412     01CB  00F0               	movwf	labs@a
 16413     01CC  319D  25DA  3180   	fcall	_labs
 16414     01CF  1BF3               	btfsc	?_labs+3,7
 16415     01D0  29DF               	goto	u440_21
 16416     01D1  0873               	movf	?_labs+3,w
 16417     01D2  1D03               	btfss	3,2
 16418     01D3  29E0               	goto	u440_20
 16419     01D4  0872               	movf	?_labs+2,w
 16420     01D5  1D03               	btfss	3,2
 16421     01D6  29E0               	goto	u440_20
 16422     01D7  0871               	movf	?_labs+1,w
 16423     01D8  1D03               	btfss	3,2
 16424     01D9  29E0               	goto	u440_20
 16425     01DA  3002               	movlw	2
 16426     01DB  0270               	subwf	?_labs,w
 16427     01DC  1C03               	btfss	3,0
 16428     01DD  29DF               	goto	u440_21
 16429     01DE  29E0               	goto	u440_20
 16430     01DF                     u440_21:
 16431     01DF  297F               	goto	i1l4925
 16432     01E0                     u440_20:
 16433     01E0                     i1l4931:
 16434     01E0  0021               	movlb	1	; select bank1
 16435     01E1  0840               	movf	(efgtoa@ou+3)^(0+128),w
 16436     01E2  0020               	movlb	0	; select bank0
 16437     01E3  00C3               	movwf	___flge@ff1+3
 16438     01E4  0021               	movlb	1	; select bank1
 16439     01E5  083F               	movf	(efgtoa@ou+2)^(0+128),w
 16440     01E6  0020               	movlb	0	; select bank0
 16441     01E7  00C2               	movwf	___flge@ff1+2
 16442     01E8  0021               	movlb	1	; select bank1
 16443     01E9  083E               	movf	(efgtoa@ou+1)^(0+128),w
 16444     01EA  0020               	movlb	0	; select bank0
 16445     01EB  00C1               	movwf	___flge@ff1+1
 16446     01EC  0021               	movlb	1	; select bank1
 16447     01ED  083D               	movf	efgtoa@ou^(0+128),w
 16448     01EE  0020               	movlb	0	; select bank0
 16449     01EF  00C0               	movwf	___flge@ff1
 16450     01F0  0021               	movlb	1	; select bank1
 16451     01F1  0851               	movf	(efgtoa@g+3)^(0+128),w
 16452     01F2  0020               	movlb	0	; select bank0
 16453     01F3  00C7               	movwf	___flge@ff2+3
 16454     01F4  0021               	movlb	1	; select bank1
 16455     01F5  0850               	movf	(efgtoa@g+2)^(0+128),w
 16456     01F6  0020               	movlb	0	; select bank0
 16457     01F7  00C6               	movwf	___flge@ff2+2
 16458     01F8  0021               	movlb	1	; select bank1
 16459     01F9  084F               	movf	(efgtoa@g+1)^(0+128),w
 16460     01FA  0020               	movlb	0	; select bank0
 16461     01FB  00C5               	movwf	___flge@ff2+1
 16462     01FC  0021               	movlb	1	; select bank1
 16463     01FD  084E               	movf	efgtoa@g^(0+128),w
 16464     01FE  0020               	movlb	0	; select bank0
 16465     01FF  00C4               	movwf	___flge@ff2
 16466     0200  3194  248C  3180   	fcall	___flge
 16467     0203  1C03               	btfss	3,0
 16468     0204  2A06               	goto	u441_21
 16469     0205  2A07               	goto	u441_20
 16470     0206                     u441_21:
 16471     0206  297F               	goto	i1l4925
 16472     0207                     u441_20:
 16473     0207                     i1l4933:
 16474                           
 16475                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 16476     0207  0021               	movlb	1	; select bank1
 16477     0208  0852               	movf	efgtoa@u^(0+128),w
 16478     0209  024E               	subwf	efgtoa@g^(0+128),w
 16479     020A  00A5               	movwf	??_efgtoa^(0+128)
 16480     020B  0853               	movf	(efgtoa@u+1)^(0+128),w
 16481     020C  3B4F               	subwfb	(efgtoa@g+1)^(0+128),w
 16482     020D  00A6               	movwf	(??_efgtoa^(0+128)+1)
 16483     020E  0854               	movf	(efgtoa@u+2)^(0+128),w
 16484     020F  3B50               	subwfb	(efgtoa@g+2)^(0+128),w
 16485     0210  00A7               	movwf	(??_efgtoa^(0+128)+2)
 16486     0211  0855               	movf	(efgtoa@u+3)^(0+128),w
 16487     0212  3B51               	subwfb	(efgtoa@g+3)^(0+128),w
 16488     0213  00A8               	movwf	(??_efgtoa^(0+128)+3)
 16489     0214  0828               	movf	(??_efgtoa+3)^(0+128),w
 16490     0215  00F3               	movwf	labs@a+3
 16491     0216  0827               	movf	(??_efgtoa+2)^(0+128),w
 16492     0217  00F2               	movwf	labs@a+2
 16493     0218  0826               	movf	(??_efgtoa+1)^(0+128),w
 16494     0219  00F1               	movwf	labs@a+1
 16495     021A  0825               	movf	??_efgtoa^(0+128),w
 16496     021B  00F0               	movwf	labs@a
 16497     021C  319D  25DA  3180   	fcall	_labs
 16498     021F  1BF3               	btfsc	?_labs+3,7
 16499     0220  2A30               	goto	u442_20
 16500     0221  0873               	movf	?_labs+3,w
 16501     0222  1D03               	btfss	3,2
 16502     0223  2A2F               	goto	u442_21
 16503     0224  0872               	movf	?_labs+2,w
 16504     0225  1D03               	btfss	3,2
 16505     0226  2A2F               	goto	u442_21
 16506     0227  0871               	movf	?_labs+1,w
 16507     0228  1D03               	btfss	3,2
 16508     0229  2A2F               	goto	u442_21
 16509     022A  3002               	movlw	2
 16510     022B  0270               	subwf	?_labs,w
 16511     022C  1803               	btfsc	3,0
 16512     022D  2A2F               	goto	u442_21
 16513     022E  2A30               	goto	u442_20
 16514     022F                     u442_21:
 16515     022F  2A93               	goto	i1l4945
 16516     0230                     u442_20:
 16517     0230                     i1l4935:
 16518                           
 16519                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
 16520     0230  0021               	movlb	1	; select bank1
 16521     0231  0855               	movf	(efgtoa@u+3)^(0+128),w
 16522     0232  00D1               	movwf	(efgtoa@g+3)^(0+128)
 16523     0233  0854               	movf	(efgtoa@u+2)^(0+128),w
 16524     0234  00D0               	movwf	(efgtoa@g+2)^(0+128)
 16525     0235  0853               	movf	(efgtoa@u+1)^(0+128),w
 16526     0236  00CF               	movwf	(efgtoa@g+1)^(0+128)
 16527     0237  0852               	movf	efgtoa@u^(0+128),w
 16528     0238  00CE               	movwf	efgtoa@g^(0+128)
 16529                           
 16530                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
 16531     0239  2ABA               	goto	i1l4947
 16532     023A                     i1l4937:
 16533                           
 16534                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 16535     023A  3041               	movlw	65
 16536     023B  0020               	movlb	0	; select bank0
 16537     023C  00C3               	movwf	___fldiv@a+3
 16538     023D  3020               	movlw	32
 16539     023E  00C2               	movwf	___fldiv@a+2
 16540     023F  3000               	movlw	0
 16541     0240  00C1               	movwf	___fldiv@a+1
 16542     0241  3000               	movlw	0
 16543     0242  00C0               	movwf	___fldiv@a
 16544     0243  0021               	movlb	1	; select bank1
 16545     0244  0855               	movf	(efgtoa@u+3)^(0+128),w
 16546     0245  0020               	movlb	0	; select bank0
 16547     0246  00C7               	movwf	___fldiv@b+3
 16548     0247  0021               	movlb	1	; select bank1
 16549     0248  0854               	movf	(efgtoa@u+2)^(0+128),w
 16550     0249  0020               	movlb	0	; select bank0
 16551     024A  00C6               	movwf	___fldiv@b+2
 16552     024B  0021               	movlb	1	; select bank1
 16553     024C  0853               	movf	(efgtoa@u+1)^(0+128),w
 16554     024D  0020               	movlb	0	; select bank0
 16555     024E  00C5               	movwf	___fldiv@b+1
 16556     024F  0021               	movlb	1	; select bank1
 16557     0250  0852               	movf	efgtoa@u^(0+128),w
 16558     0251  0020               	movlb	0	; select bank0
 16559     0252  00C4               	movwf	___fldiv@b
 16560     0253  3188  2057  3180   	fcall	___fldiv
 16561     0256  0020               	movlb	0	; select bank0
 16562     0257  0843               	movf	?___fldiv+3,w
 16563     0258  0021               	movlb	1	; select bank1
 16564     0259  00D5               	movwf	(efgtoa@u+3)^(0+128)
 16565     025A  0020               	movlb	0	; select bank0
 16566     025B  0842               	movf	?___fldiv+2,w
 16567     025C  0021               	movlb	1	; select bank1
 16568     025D  00D4               	movwf	(efgtoa@u+2)^(0+128)
 16569     025E  0020               	movlb	0	; select bank0
 16570     025F  0841               	movf	?___fldiv+1,w
 16571     0260  0021               	movlb	1	; select bank1
 16572     0261  00D3               	movwf	(efgtoa@u+1)^(0+128)
 16573     0262  0020               	movlb	0	; select bank0
 16574     0263  0840               	movf	?___fldiv,w
 16575     0264  0021               	movlb	1	; select bank1
 16576     0265  00D2               	movwf	efgtoa@u^(0+128)
 16577     0266                     i1l4939:
 16578                           
 16579                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
 16580     0266  30FF               	movlw	255
 16581     0267  07B9               	addwf	efgtoa@e^(0+128),f
 16582     0268  30FF               	movlw	255
 16583     0269  3DBA               	addwfc	(efgtoa@e+1)^(0+128),f
 16584     026A                     i1l4941:
 16585                           
 16586                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 16587     026A  0852               	movf	efgtoa@u^(0+128),w
 16588     026B  024E               	subwf	efgtoa@g^(0+128),w
 16589     026C  00A5               	movwf	??_efgtoa^(0+128)
 16590     026D  0853               	movf	(efgtoa@u+1)^(0+128),w
 16591     026E  3B4F               	subwfb	(efgtoa@g+1)^(0+128),w
 16592     026F  00A6               	movwf	(??_efgtoa^(0+128)+1)
 16593     0270  0854               	movf	(efgtoa@u+2)^(0+128),w
 16594     0271  3B50               	subwfb	(efgtoa@g+2)^(0+128),w
 16595     0272  00A7               	movwf	(??_efgtoa^(0+128)+2)
 16596     0273  0855               	movf	(efgtoa@u+3)^(0+128),w
 16597     0274  3B51               	subwfb	(efgtoa@g+3)^(0+128),w
 16598     0275  00A8               	movwf	(??_efgtoa^(0+128)+3)
 16599     0276  0828               	movf	(??_efgtoa+3)^(0+128),w
 16600     0277  00F3               	movwf	labs@a+3
 16601     0278  0827               	movf	(??_efgtoa+2)^(0+128),w
 16602     0279  00F2               	movwf	labs@a+2
 16603     027A  0826               	movf	(??_efgtoa+1)^(0+128),w
 16604     027B  00F1               	movwf	labs@a+1
 16605     027C  0825               	movf	??_efgtoa^(0+128),w
 16606     027D  00F0               	movwf	labs@a
 16607     027E  319D  25DA  3180   	fcall	_labs
 16608     0281  1BF3               	btfsc	?_labs+3,7
 16609     0282  2A92               	goto	u443_20
 16610     0283  0873               	movf	?_labs+3,w
 16611     0284  1D03               	btfss	3,2
 16612     0285  2A91               	goto	u443_21
 16613     0286  0872               	movf	?_labs+2,w
 16614     0287  1D03               	btfss	3,2
 16615     0288  2A91               	goto	u443_21
 16616     0289  0871               	movf	?_labs+1,w
 16617     028A  1D03               	btfss	3,2
 16618     028B  2A91               	goto	u443_21
 16619     028C  3002               	movlw	2
 16620     028D  0270               	subwf	?_labs,w
 16621     028E  1803               	btfsc	3,0
 16622     028F  2A91               	goto	u443_21
 16623     0290  2A92               	goto	u443_20
 16624     0291                     u443_21:
 16625     0291  2A93               	goto	i1l4945
 16626     0292                     u443_20:
 16627     0292  2A30               	goto	i1l4935
 16628     0293                     i1l4945:
 16629                           
 16630                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 16631     0293  0021               	movlb	1	; select bank1
 16632     0294  0851               	movf	(efgtoa@g+3)^(0+128),w
 16633     0295  0020               	movlb	0	; select bank0
 16634     0296  00C3               	movwf	___flge@ff1+3
 16635     0297  0021               	movlb	1	; select bank1
 16636     0298  0850               	movf	(efgtoa@g+2)^(0+128),w
 16637     0299  0020               	movlb	0	; select bank0
 16638     029A  00C2               	movwf	___flge@ff1+2
 16639     029B  0021               	movlb	1	; select bank1
 16640     029C  084F               	movf	(efgtoa@g+1)^(0+128),w
 16641     029D  0020               	movlb	0	; select bank0
 16642     029E  00C1               	movwf	___flge@ff1+1
 16643     029F  0021               	movlb	1	; select bank1
 16644     02A0  084E               	movf	efgtoa@g^(0+128),w
 16645     02A1  0020               	movlb	0	; select bank0
 16646     02A2  00C0               	movwf	___flge@ff1
 16647     02A3  0021               	movlb	1	; select bank1
 16648     02A4  0855               	movf	(efgtoa@u+3)^(0+128),w
 16649     02A5  0020               	movlb	0	; select bank0
 16650     02A6  00C7               	movwf	___flge@ff2+3
 16651     02A7  0021               	movlb	1	; select bank1
 16652     02A8  0854               	movf	(efgtoa@u+2)^(0+128),w
 16653     02A9  0020               	movlb	0	; select bank0
 16654     02AA  00C6               	movwf	___flge@ff2+2
 16655     02AB  0021               	movlb	1	; select bank1
 16656     02AC  0853               	movf	(efgtoa@u+1)^(0+128),w
 16657     02AD  0020               	movlb	0	; select bank0
 16658     02AE  00C5               	movwf	___flge@ff2+1
 16659     02AF  0021               	movlb	1	; select bank1
 16660     02B0  0852               	movf	efgtoa@u^(0+128),w
 16661     02B1  0020               	movlb	0	; select bank0
 16662     02B2  00C4               	movwf	___flge@ff2
 16663     02B3  3194  248C  3180   	fcall	___flge
 16664     02B6  1C03               	btfss	3,0
 16665     02B7  2AB9               	goto	u444_21
 16666     02B8  2ABA               	goto	u444_20
 16667     02B9                     u444_21:
 16668     02B9  2A3A               	goto	i1l4937
 16669     02BA                     u444_20:
 16670     02BA                     i1l4947:
 16671                           
 16672                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 16673     02BA  0021               	movlb	1	; select bank1
 16674     02BB  0824               	movf	efgtoa@c^(0+128),w
 16675     02BC  00B2               	movwf	efgtoa@mode^(0+128)
 16676                           
 16677                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 16678     02BD  0832               	movf	efgtoa@mode^(0+128),w
 16679     02BE  00B3               	movwf	efgtoa@nmode^(0+128)
 16680     02BF                     i1l4949:
 16681                           
 16682                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 16683     02BF  0022               	movlb	2	; select bank2
 16684     02C0  1BD8               	btfsc	(_prec+1)^(0+256),7
 16685     02C1  2AC3               	goto	u445_21
 16686     02C2  2AC4               	goto	u445_20
 16687     02C3                     u445_21:
 16688     02C3  2ACC               	goto	i1l4953
 16689     02C4                     u445_20:
 16690     02C4                     i1l4951:
 16691     02C4  0858               	movf	(_prec+1)^(0+256),w
 16692     02C5  0021               	movlb	1	; select bank1
 16693     02C6  00AC               	movwf	(efgtoa@p+1)^(0+128)
 16694     02C7  0022               	movlb	2	; select bank2
 16695     02C8  0857               	movf	_prec^(0+256),w
 16696     02C9  0021               	movlb	1	; select bank1
 16697     02CA  00AB               	movwf	efgtoa@p^(0+128)
 16698     02CB  2AD1               	goto	i1l1789
 16699     02CC                     i1l4953:
 16700     02CC  3006               	movlw	6
 16701     02CD  0021               	movlb	1	; select bank1
 16702     02CE  00AB               	movwf	efgtoa@p^(0+128)
 16703     02CF  3000               	movlw	0
 16704     02D0  00AC               	movwf	(efgtoa@p^(0+128)+1)
 16705     02D1                     i1l1789:
 16706                           
 16707                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
 16708     02D1  082C               	movf	(efgtoa@p+1)^(0+128),w
 16709     02D2  00B7               	movwf	(efgtoa@m+1)^(0+128)
 16710     02D3  082B               	movf	efgtoa@p^(0+128),w
 16711     02D4  00B6               	movwf	efgtoa@m^(0+128)
 16712                           
 16713                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
 16714     02D5  3001               	movlw	1
 16715     02D6  07B6               	addwf	efgtoa@m^(0+128),f
 16716     02D7  3000               	movlw	0
 16717     02D8  3DB7               	addwfc	(efgtoa@m+1)^(0+128),f
 16718     02D9                     i1l4955:
 16719                           
 16720                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
 16721     02D9  3066               	movlw	102
 16722     02DA  0633               	xorwf	efgtoa@nmode^(0+128),w
 16723     02DB  1D03               	btfss	3,2
 16724     02DC  2ADE               	goto	u446_21
 16725     02DD  2ADF               	goto	u446_20
 16726     02DE                     u446_21:
 16727     02DE  2AF7               	goto	i1l4967
 16728     02DF                     u446_20:
 16729     02DF                     i1l4957:
 16730                           
 16731                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 16732     02DF  1FBA               	btfss	(efgtoa@e+1)^(0+128),7
 16733     02E0  2AE2               	goto	u447_21
 16734     02E1  2AE3               	goto	u447_20
 16735     02E2                     u447_21:
 16736     02E2  2AED               	goto	i1l4963
 16737     02E3                     u447_20:
 16738     02E3                     i1l4959:
 16739                           
 16740                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 16741     02E3  303F               	movlw	63
 16742     02E4  00D5               	movwf	(efgtoa@u+3)^(0+128)
 16743     02E5  3080               	movlw	128
 16744     02E6  00D4               	movwf	(efgtoa@u+2)^(0+128)
 16745     02E7  3000               	movlw	0
 16746     02E8  00D3               	movwf	(efgtoa@u+1)^(0+128)
 16747     02E9  3000               	movlw	0
 16748     02EA  00D2               	movwf	efgtoa@u^(0+128)
 16749     02EB                     i1l4961:
 16750                           
 16751                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 16752     02EB  01B9               	clrf	efgtoa@e^(0+128)
 16753     02EC  01BA               	clrf	(efgtoa@e+1)^(0+128)
 16754     02ED                     i1l4963:
 16755                           
 16756                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 16757     02ED  3067               	movlw	103
 16758     02EE  0632               	xorwf	efgtoa@mode^(0+128),w
 16759     02EF  1903               	btfsc	3,2
 16760     02F0  2AF2               	goto	u448_21
 16761     02F1  2AF3               	goto	u448_20
 16762     02F2                     u448_21:
 16763     02F2  2AF7               	goto	i1l4967
 16764     02F3                     u448_20:
 16765     02F3                     i1l4965:
 16766                           
 16767                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 16768     02F3  0839               	movf	efgtoa@e^(0+128),w
 16769     02F4  07B6               	addwf	efgtoa@m^(0+128),f
 16770     02F5  083A               	movf	(efgtoa@e+1)^(0+128),w
 16771     02F6  3DB7               	addwfc	(efgtoa@m+1)^(0+128),f
 16772     02F7                     i1l4967:
 16773                           
 16774                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 16775     02F7  01C1               	clrf	efgtoa@i^(0+128)
 16776     02F8  01C2               	clrf	(efgtoa@i+1)^(0+128)
 16777     02F9                     i1l4969:
 16778                           
 16779                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 16780     02F9  0851               	movf	(efgtoa@g+3)^(0+128),w
 16781     02FA  00C6               	movwf	(efgtoa@h+3)^(0+128)
 16782     02FB  0850               	movf	(efgtoa@g+2)^(0+128),w
 16783     02FC  00C5               	movwf	(efgtoa@h+2)^(0+128)
 16784     02FD  084F               	movf	(efgtoa@g+1)^(0+128),w
 16785     02FE  00C4               	movwf	(efgtoa@h+1)^(0+128)
 16786     02FF  084E               	movf	efgtoa@g^(0+128),w
 16787     0300  00C3               	movwf	efgtoa@h^(0+128)
 16788     0301                     i1l4971:
 16789                           
 16790                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 16791     0301  0855               	movf	(efgtoa@u+3)^(0+128),w
 16792     0302  00C0               	movwf	(efgtoa@ou+3)^(0+128)
 16793     0303  0854               	movf	(efgtoa@u+2)^(0+128),w
 16794     0304  00BF               	movwf	(efgtoa@ou+2)^(0+128)
 16795     0305  0853               	movf	(efgtoa@u+1)^(0+128),w
 16796     0306  00BE               	movwf	(efgtoa@ou+1)^(0+128)
 16797     0307  0852               	movf	efgtoa@u^(0+128),w
 16798     0308  00BD               	movwf	efgtoa@ou^(0+128)
 16799                           
 16800                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 16801     0309  2BD7               	goto	i1l4977
 16802     030A                     i1l4973:
 16803                           
 16804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 16805     030A  0021               	movlb	1	; select bank1
 16806     030B  0855               	movf	(efgtoa@u+3)^(0+128),w
 16807     030C  0020               	movlb	0	; select bank0
 16808     030D  00C3               	movwf	___fldiv@a+3
 16809     030E  0021               	movlb	1	; select bank1
 16810     030F  0854               	movf	(efgtoa@u+2)^(0+128),w
 16811     0310  0020               	movlb	0	; select bank0
 16812     0311  00C2               	movwf	___fldiv@a+2
 16813     0312  0021               	movlb	1	; select bank1
 16814     0313  0853               	movf	(efgtoa@u+1)^(0+128),w
 16815     0314  0020               	movlb	0	; select bank0
 16816     0315  00C1               	movwf	___fldiv@a+1
 16817     0316  0021               	movlb	1	; select bank1
 16818     0317  0852               	movf	efgtoa@u^(0+128),w
 16819     0318  0020               	movlb	0	; select bank0
 16820     0319  00C0               	movwf	___fldiv@a
 16821     031A  0021               	movlb	1	; select bank1
 16822     031B  0846               	movf	(efgtoa@h+3)^(0+128),w
 16823     031C  0020               	movlb	0	; select bank0
 16824     031D  00C7               	movwf	___fldiv@b+3
 16825     031E  0021               	movlb	1	; select bank1
 16826     031F  0845               	movf	(efgtoa@h+2)^(0+128),w
 16827     0320  0020               	movlb	0	; select bank0
 16828     0321  00C6               	movwf	___fldiv@b+2
 16829     0322  0021               	movlb	1	; select bank1
 16830     0323  0844               	movf	(efgtoa@h+1)^(0+128),w
 16831     0324  0020               	movlb	0	; select bank0
 16832     0325  00C5               	movwf	___fldiv@b+1
 16833     0326  0021               	movlb	1	; select bank1
 16834     0327  0843               	movf	efgtoa@h^(0+128),w
 16835     0328  0020               	movlb	0	; select bank0
 16836     0329  00C4               	movwf	___fldiv@b
 16837     032A  3188  2057  3180   	fcall	___fldiv
 16838     032D  0020               	movlb	0	; select bank0
 16839     032E  0843               	movf	?___fldiv+3,w
 16840     032F  00DD               	movwf	floorf@x+3
 16841     0330  0842               	movf	?___fldiv+2,w
 16842     0331  00DC               	movwf	floorf@x+2
 16843     0332  0841               	movf	?___fldiv+1,w
 16844     0333  00DB               	movwf	floorf@x+1
 16845     0334  0840               	movf	?___fldiv,w
 16846     0335  00DA               	movwf	floorf@x
 16847     0336  3186  26A9  3180   	fcall	_floorf
 16848     0339  0020               	movlb	0	; select bank0
 16849     033A  085D               	movf	?_floorf+3,w
 16850     033B  0021               	movlb	1	; select bank1
 16851     033C  00CA               	movwf	(efgtoa@l+3)^(0+128)
 16852     033D  0020               	movlb	0	; select bank0
 16853     033E  085C               	movf	?_floorf+2,w
 16854     033F  0021               	movlb	1	; select bank1
 16855     0340  00C9               	movwf	(efgtoa@l+2)^(0+128)
 16856     0341  0020               	movlb	0	; select bank0
 16857     0342  085B               	movf	?_floorf+1,w
 16858     0343  0021               	movlb	1	; select bank1
 16859     0344  00C8               	movwf	(efgtoa@l+1)^(0+128)
 16860     0345  0020               	movlb	0	; select bank0
 16861     0346  085A               	movf	?_floorf,w
 16862     0347  0021               	movlb	1	; select bank1
 16863     0348  00C7               	movwf	efgtoa@l^(0+128)
 16864                           
 16865                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 16866     0349  084A               	movf	(efgtoa@l+3)^(0+128),w
 16867     034A  00F3               	movwf	___fltol@f1+3
 16868     034B  0849               	movf	(efgtoa@l+2)^(0+128),w
 16869     034C  00F2               	movwf	___fltol@f1+2
 16870     034D  0848               	movf	(efgtoa@l+1)^(0+128),w
 16871     034E  00F1               	movwf	___fltol@f1+1
 16872     034F  0847               	movf	efgtoa@l^(0+128),w
 16873     0350  00F0               	movwf	___fltol@f1
 16874     0351  3192  22A4  3180   	fcall	___fltol
 16875     0354  0871               	movf	?___fltol+1,w
 16876     0355  0021               	movlb	1	; select bank1
 16877     0356  00B5               	movwf	(efgtoa@d+1)^(0+128)
 16878     0357  0870               	movf	?___fltol,w
 16879     0358  00B4               	movwf	efgtoa@d^(0+128)
 16880                           
 16881                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 16882     0359  0855               	movf	(efgtoa@u+3)^(0+128),w
 16883     035A  0020               	movlb	0	; select bank0
 16884     035B  00AD               	movwf	___flmul@a+3
 16885     035C  0021               	movlb	1	; select bank1
 16886     035D  0854               	movf	(efgtoa@u+2)^(0+128),w
 16887     035E  0020               	movlb	0	; select bank0
 16888     035F  00AC               	movwf	___flmul@a+2
 16889     0360  0021               	movlb	1	; select bank1
 16890     0361  0853               	movf	(efgtoa@u+1)^(0+128),w
 16891     0362  0020               	movlb	0	; select bank0
 16892     0363  00AB               	movwf	___flmul@a+1
 16893     0364  0021               	movlb	1	; select bank1
 16894     0365  0852               	movf	efgtoa@u^(0+128),w
 16895     0366  0020               	movlb	0	; select bank0
 16896     0367  00AA               	movwf	___flmul@a
 16897     0368  0021               	movlb	1	; select bank1
 16898     0369  084A               	movf	(efgtoa@l+3)^(0+128),w
 16899     036A  0020               	movlb	0	; select bank0
 16900     036B  00A9               	movwf	___flmul@b+3
 16901     036C  0021               	movlb	1	; select bank1
 16902     036D  0849               	movf	(efgtoa@l+2)^(0+128),w
 16903     036E  0020               	movlb	0	; select bank0
 16904     036F  00A8               	movwf	___flmul@b+2
 16905     0370  0021               	movlb	1	; select bank1
 16906     0371  0848               	movf	(efgtoa@l+1)^(0+128),w
 16907     0372  0020               	movlb	0	; select bank0
 16908     0373  00A7               	movwf	___flmul@b+1
 16909     0374  0021               	movlb	1	; select bank1
 16910     0375  0847               	movf	efgtoa@l^(0+128),w
 16911     0376  0020               	movlb	0	; select bank0
 16912     0377  00A6               	movwf	___flmul@b
 16913     0378  318D  25C5  3180   	fcall	___flmul
 16914     037B  0020               	movlb	0	; select bank0
 16915     037C  0829               	movf	?___flmul+3,w
 16916     037D  00C3               	movwf	___flsub@a+3
 16917     037E  0828               	movf	?___flmul+2,w
 16918     037F  00C2               	movwf	___flsub@a+2
 16919     0380  0827               	movf	?___flmul+1,w
 16920     0381  00C1               	movwf	___flsub@a+1
 16921     0382  0826               	movf	?___flmul,w
 16922     0383  00C0               	movwf	___flsub@a
 16923     0384  0021               	movlb	1	; select bank1
 16924     0385  0846               	movf	(efgtoa@h+3)^(0+128),w
 16925     0386  0020               	movlb	0	; select bank0
 16926     0387  00C7               	movwf	___flsub@b+3
 16927     0388  0021               	movlb	1	; select bank1
 16928     0389  0845               	movf	(efgtoa@h+2)^(0+128),w
 16929     038A  0020               	movlb	0	; select bank0
 16930     038B  00C6               	movwf	___flsub@b+2
 16931     038C  0021               	movlb	1	; select bank1
 16932     038D  0844               	movf	(efgtoa@h+1)^(0+128),w
 16933     038E  0020               	movlb	0	; select bank0
 16934     038F  00C5               	movwf	___flsub@b+1
 16935     0390  0021               	movlb	1	; select bank1
 16936     0391  0843               	movf	efgtoa@h^(0+128),w
 16937     0392  0020               	movlb	0	; select bank0
 16938     0393  00C4               	movwf	___flsub@b
 16939     0394  319E  26EA  3180   	fcall	___flsub
 16940     0397  0020               	movlb	0	; select bank0
 16941     0398  0843               	movf	?___flsub+3,w
 16942     0399  0021               	movlb	1	; select bank1
 16943     039A  00C6               	movwf	(efgtoa@h+3)^(0+128)
 16944     039B  0020               	movlb	0	; select bank0
 16945     039C  0842               	movf	?___flsub+2,w
 16946     039D  0021               	movlb	1	; select bank1
 16947     039E  00C5               	movwf	(efgtoa@h+2)^(0+128)
 16948     039F  0020               	movlb	0	; select bank0
 16949     03A0  0841               	movf	?___flsub+1,w
 16950     03A1  0021               	movlb	1	; select bank1
 16951     03A2  00C4               	movwf	(efgtoa@h+1)^(0+128)
 16952     03A3  0020               	movlb	0	; select bank0
 16953     03A4  0840               	movf	?___flsub,w
 16954     03A5  0021               	movlb	1	; select bank1
 16955     03A6  00C3               	movwf	efgtoa@h^(0+128)
 16956                           
 16957                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 16958     03A7  3041               	movlw	65
 16959     03A8  0020               	movlb	0	; select bank0
 16960     03A9  00C3               	movwf	___fldiv@a+3
 16961     03AA  3020               	movlw	32
 16962     03AB  00C2               	movwf	___fldiv@a+2
 16963     03AC  3000               	movlw	0
 16964     03AD  00C1               	movwf	___fldiv@a+1
 16965     03AE  3000               	movlw	0
 16966     03AF  00C0               	movwf	___fldiv@a
 16967     03B0  0021               	movlb	1	; select bank1
 16968     03B1  0855               	movf	(efgtoa@u+3)^(0+128),w
 16969     03B2  0020               	movlb	0	; select bank0
 16970     03B3  00C7               	movwf	___fldiv@b+3
 16971     03B4  0021               	movlb	1	; select bank1
 16972     03B5  0854               	movf	(efgtoa@u+2)^(0+128),w
 16973     03B6  0020               	movlb	0	; select bank0
 16974     03B7  00C6               	movwf	___fldiv@b+2
 16975     03B8  0021               	movlb	1	; select bank1
 16976     03B9  0853               	movf	(efgtoa@u+1)^(0+128),w
 16977     03BA  0020               	movlb	0	; select bank0
 16978     03BB  00C5               	movwf	___fldiv@b+1
 16979     03BC  0021               	movlb	1	; select bank1
 16980     03BD  0852               	movf	efgtoa@u^(0+128),w
 16981     03BE  0020               	movlb	0	; select bank0
 16982     03BF  00C4               	movwf	___fldiv@b
 16983     03C0  3188  2057  3180   	fcall	___fldiv
 16984     03C3  0020               	movlb	0	; select bank0
 16985     03C4  0843               	movf	?___fldiv+3,w
 16986     03C5  0021               	movlb	1	; select bank1
 16987     03C6  00D5               	movwf	(efgtoa@u+3)^(0+128)
 16988     03C7  0020               	movlb	0	; select bank0
 16989     03C8  0842               	movf	?___fldiv+2,w
 16990     03C9  0021               	movlb	1	; select bank1
 16991     03CA  00D4               	movwf	(efgtoa@u+2)^(0+128)
 16992     03CB  0020               	movlb	0	; select bank0
 16993     03CC  0841               	movf	?___fldiv+1,w
 16994     03CD  0021               	movlb	1	; select bank1
 16995     03CE  00D3               	movwf	(efgtoa@u+1)^(0+128)
 16996     03CF  0020               	movlb	0	; select bank0
 16997     03D0  0840               	movf	?___fldiv,w
 16998     03D1  0021               	movlb	1	; select bank1
 16999     03D2  00D2               	movwf	efgtoa@u^(0+128)
 17000     03D3                     i1l4975:
 17001                           
 17002                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
 17003     03D3  3001               	movlw	1
 17004     03D4  07C1               	addwf	efgtoa@i^(0+128),f
 17005     03D5  3000               	movlw	0
 17006     03D6  3DC2               	addwfc	(efgtoa@i+1)^(0+128),f
 17007     03D7                     i1l4977:
 17008                           
 17009                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 17010     03D7  0842               	movf	(efgtoa@i+1)^(0+128),w
 17011     03D8  3A80               	xorlw	128
 17012     03D9  00A5               	movwf	??_efgtoa^(0+128)
 17013     03DA  0837               	movf	(efgtoa@m+1)^(0+128),w
 17014     03DB  3A80               	xorlw	128
 17015     03DC  0225               	subwf	??_efgtoa^(0+128),w
 17016     03DD  1D03               	skipz
 17017     03DE  2BE1               	goto	u449_25
 17018     03DF  0836               	movf	efgtoa@m^(0+128),w
 17019     03E0  0241               	subwf	efgtoa@i^(0+128),w
 17020     03E1                     u449_25:
 17021     03E1  1C03               	skipc
 17022     03E2  2BE4               	goto	u449_21
 17023     03E3  2BE5               	goto	u449_20
 17024     03E4                     u449_21:
 17025     03E4  2B0A               	goto	i1l4973
 17026     03E5                     u449_20:
 17027     03E5                     i1l4979:
 17028                           
 17029                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 17030     03E5  3040               	movlw	64
 17031     03E6  0020               	movlb	0	; select bank0
 17032     03E7  00A9               	movwf	___flmul@b+3
 17033     03E8  30A0               	movlw	160
 17034     03E9  00A8               	movwf	___flmul@b+2
 17035     03EA  3000               	movlw	0
 17036     03EB  00A7               	movwf	___flmul@b+1
 17037     03EC  3000               	movlw	0
 17038     03ED  00A6               	movwf	___flmul@b
 17039     03EE  0021               	movlb	1	; select bank1
 17040     03EF  0855               	movf	(efgtoa@u+3)^(0+128),w
 17041     03F0  0020               	movlb	0	; select bank0
 17042     03F1  00AD               	movwf	___flmul@a+3
 17043     03F2  0021               	movlb	1	; select bank1
 17044     03F3  0854               	movf	(efgtoa@u+2)^(0+128),w
 17045     03F4  0020               	movlb	0	; select bank0
 17046     03F5  00AC               	movwf	___flmul@a+2
 17047     03F6  0021               	movlb	1	; select bank1
 17048     03F7  0853               	movf	(efgtoa@u+1)^(0+128),w
 17049     03F8  0020               	movlb	0	; select bank0
 17050     03F9  00AB               	movwf	___flmul@a+1
 17051     03FA  0021               	movlb	1	; select bank1
 17052     03FB  0852               	movf	efgtoa@u^(0+128),w
 17053     03FC  0020               	movlb	0	; select bank0
 17054     03FD  00AA               	movwf	___flmul@a
 17055     03FE  318D  25C5  3180   	fcall	___flmul
 17056     0401  0020               	movlb	0	; select bank0
 17057     0402  0829               	movf	?___flmul+3,w
 17058     0403  0021               	movlb	1	; select bank1
 17059     0404  00CA               	movwf	(efgtoa@l+3)^(0+128)
 17060     0405  0020               	movlb	0	; select bank0
 17061     0406  0828               	movf	?___flmul+2,w
 17062     0407  0021               	movlb	1	; select bank1
 17063     0408  00C9               	movwf	(efgtoa@l+2)^(0+128)
 17064     0409  0020               	movlb	0	; select bank0
 17065     040A  0827               	movf	?___flmul+1,w
 17066     040B  0021               	movlb	1	; select bank1
 17067     040C  00C8               	movwf	(efgtoa@l+1)^(0+128)
 17068     040D  0020               	movlb	0	; select bank0
 17069     040E  0826               	movf	?___flmul,w
 17070     040F  0021               	movlb	1	; select bank1
 17071     0410  00C7               	movwf	efgtoa@l^(0+128)
 17072                           
 17073                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 17074     0411  0846               	movf	(efgtoa@h+3)^(0+128),w
 17075     0412  0020               	movlb	0	; select bank0
 17076     0413  00C3               	movwf	___flge@ff1+3
 17077     0414  0021               	movlb	1	; select bank1
 17078     0415  0845               	movf	(efgtoa@h+2)^(0+128),w
 17079     0416  0020               	movlb	0	; select bank0
 17080     0417  00C2               	movwf	___flge@ff1+2
 17081     0418  0021               	movlb	1	; select bank1
 17082     0419  0844               	movf	(efgtoa@h+1)^(0+128),w
 17083     041A  0020               	movlb	0	; select bank0
 17084     041B  00C1               	movwf	___flge@ff1+1
 17085     041C  0021               	movlb	1	; select bank1
 17086     041D  0843               	movf	efgtoa@h^(0+128),w
 17087     041E  0020               	movlb	0	; select bank0
 17088     041F  00C0               	movwf	___flge@ff1
 17089     0420  0021               	movlb	1	; select bank1
 17090     0421  084A               	movf	(efgtoa@l+3)^(0+128),w
 17091     0422  0020               	movlb	0	; select bank0
 17092     0423  00C7               	movwf	___flge@ff2+3
 17093     0424  0021               	movlb	1	; select bank1
 17094     0425  0849               	movf	(efgtoa@l+2)^(0+128),w
 17095     0426  0020               	movlb	0	; select bank0
 17096     0427  00C6               	movwf	___flge@ff2+2
 17097     0428  0021               	movlb	1	; select bank1
 17098     0429  0848               	movf	(efgtoa@l+1)^(0+128),w
 17099     042A  0020               	movlb	0	; select bank0
 17100     042B  00C5               	movwf	___flge@ff2+1
 17101     042C  0021               	movlb	1	; select bank1
 17102     042D  0847               	movf	efgtoa@l^(0+128),w
 17103     042E  0020               	movlb	0	; select bank0
 17104     042F  00C4               	movwf	___flge@ff2
 17105     0430  3194  248C  3180   	fcall	___flge
 17106     0433  1803               	btfsc	3,0
 17107     0434  2C36               	goto	u450_21
 17108     0435  2C37               	goto	u450_20
 17109     0436                     u450_21:
 17110     0436  2C41               	goto	i1l4983
 17111     0437                     u450_20:
 17112     0437                     i1l4981:
 17113                           
 17114                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 17115     0437  3000               	movlw	0
 17116     0438  0021               	movlb	1	; select bank1
 17117     0439  00CA               	movwf	(efgtoa@l+3)^(0+128)
 17118     043A  3000               	movlw	0
 17119     043B  00C9               	movwf	(efgtoa@l+2)^(0+128)
 17120     043C  3000               	movlw	0
 17121     043D  00C8               	movwf	(efgtoa@l+1)^(0+128)
 17122     043E  3000               	movlw	0
 17123     043F  00C7               	movwf	efgtoa@l^(0+128)
 17124                           
 17125                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
 17126     0440  2C66               	goto	i1l4989
 17127     0441                     i1l4983:
 17128                           
 17129                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 17130     0441  0021               	movlb	1	; select bank1
 17131     0442  0846               	movf	(efgtoa@h+3)^(0+128),w
 17132     0443  00F3               	movwf	___fleq@ff1+3
 17133     0444  0845               	movf	(efgtoa@h+2)^(0+128),w
 17134     0445  00F2               	movwf	___fleq@ff1+2
 17135     0446  0844               	movf	(efgtoa@h+1)^(0+128),w
 17136     0447  00F1               	movwf	___fleq@ff1+1
 17137     0448  0843               	movf	efgtoa@h^(0+128),w
 17138     0449  00F0               	movwf	___fleq@ff1
 17139     044A  084A               	movf	(efgtoa@l+3)^(0+128),w
 17140     044B  00F7               	movwf	___fleq@ff2+3
 17141     044C  0849               	movf	(efgtoa@l+2)^(0+128),w
 17142     044D  00F6               	movwf	___fleq@ff2+2
 17143     044E  0848               	movf	(efgtoa@l+1)^(0+128),w
 17144     044F  00F5               	movwf	___fleq@ff2+1
 17145     0450  0847               	movf	efgtoa@l^(0+128),w
 17146     0451  00F4               	movwf	___fleq@ff2
 17147     0452  3191  219F  3180   	fcall	___fleq
 17148     0455  1C03               	btfss	3,0
 17149     0456  2C58               	goto	u451_21
 17150     0457  2C59               	goto	u451_20
 17151     0458                     u451_21:
 17152     0458  2C66               	goto	i1l4989
 17153     0459                     u451_20:
 17154     0459                     i1l4985:
 17155     0459  0021               	movlb	1	; select bank1
 17156     045A  1834               	btfsc	efgtoa@d^(0+128),0
 17157     045B  2C5D               	goto	u452_21
 17158     045C  2C5E               	goto	u452_20
 17159     045D                     u452_21:
 17160     045D  2C66               	goto	i1l4989
 17161     045E                     u452_20:
 17162     045E                     i1l4987:
 17163                           
 17164                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 17165     045E  3000               	movlw	0
 17166     045F  00CA               	movwf	(efgtoa@l+3)^(0+128)
 17167     0460  3000               	movlw	0
 17168     0461  00C9               	movwf	(efgtoa@l+2)^(0+128)
 17169     0462  3000               	movlw	0
 17170     0463  00C8               	movwf	(efgtoa@l+1)^(0+128)
 17171     0464  3000               	movlw	0
 17172     0465  00C7               	movwf	efgtoa@l^(0+128)
 17173     0466                     i1l4989:
 17174                           
 17175                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 17176     0466  0021               	movlb	1	; select bank1
 17177     0467  084A               	movf	(efgtoa@l+3)^(0+128),w
 17178     0468  00F3               	movwf	___fladd@b+3
 17179     0469  0849               	movf	(efgtoa@l+2)^(0+128),w
 17180     046A  00F2               	movwf	___fladd@b+2
 17181     046B  0848               	movf	(efgtoa@l+1)^(0+128),w
 17182     046C  00F1               	movwf	___fladd@b+1
 17183     046D  0847               	movf	efgtoa@l^(0+128),w
 17184     046E  00F0               	movwf	___fladd@b
 17185     046F  0851               	movf	(efgtoa@g+3)^(0+128),w
 17186     0470  00F7               	movwf	___fladd@a+3
 17187     0471  0850               	movf	(efgtoa@g+2)^(0+128),w
 17188     0472  00F6               	movwf	___fladd@a+2
 17189     0473  084F               	movf	(efgtoa@g+1)^(0+128),w
 17190     0474  00F5               	movwf	___fladd@a+1
 17191     0475  084E               	movf	efgtoa@g^(0+128),w
 17192     0476  00F4               	movwf	___fladd@a
 17193     0477  318B  23B9  3180   	fcall	___fladd
 17194     047A  0873               	movf	?___fladd+3,w
 17195     047B  0021               	movlb	1	; select bank1
 17196     047C  00C6               	movwf	(efgtoa@h+3)^(0+128)
 17197     047D  0872               	movf	?___fladd+2,w
 17198     047E  00C5               	movwf	(efgtoa@h+2)^(0+128)
 17199     047F  0871               	movf	?___fladd+1,w
 17200     0480  00C4               	movwf	(efgtoa@h+1)^(0+128)
 17201     0481  0870               	movf	?___fladd,w
 17202     0482  00C3               	movwf	efgtoa@h^(0+128)
 17203     0483                     i1l4991:
 17204                           
 17205                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 17206     0483  0846               	movf	(efgtoa@h+3)^(0+128),w
 17207     0484  0020               	movlb	0	; select bank0
 17208     0485  00C3               	movwf	___flge@ff1+3
 17209     0486  0021               	movlb	1	; select bank1
 17210     0487  0845               	movf	(efgtoa@h+2)^(0+128),w
 17211     0488  0020               	movlb	0	; select bank0
 17212     0489  00C2               	movwf	___flge@ff1+2
 17213     048A  0021               	movlb	1	; select bank1
 17214     048B  0844               	movf	(efgtoa@h+1)^(0+128),w
 17215     048C  0020               	movlb	0	; select bank0
 17216     048D  00C1               	movwf	___flge@ff1+1
 17217     048E  0021               	movlb	1	; select bank1
 17218     048F  0843               	movf	efgtoa@h^(0+128),w
 17219     0490  0020               	movlb	0	; select bank0
 17220     0491  00C0               	movwf	___flge@ff1
 17221     0492  3041               	movlw	65
 17222     0493  00A9               	movwf	___flmul@b+3
 17223     0494  3020               	movlw	32
 17224     0495  00A8               	movwf	___flmul@b+2
 17225     0496  3000               	movlw	0
 17226     0497  00A7               	movwf	___flmul@b+1
 17227     0498  3000               	movlw	0
 17228     0499  00A6               	movwf	___flmul@b
 17229     049A  0021               	movlb	1	; select bank1
 17230     049B  0840               	movf	(efgtoa@ou+3)^(0+128),w
 17231     049C  0020               	movlb	0	; select bank0
 17232     049D  00AD               	movwf	___flmul@a+3
 17233     049E  0021               	movlb	1	; select bank1
 17234     049F  083F               	movf	(efgtoa@ou+2)^(0+128),w
 17235     04A0  0020               	movlb	0	; select bank0
 17236     04A1  00AC               	movwf	___flmul@a+2
 17237     04A2  0021               	movlb	1	; select bank1
 17238     04A3  083E               	movf	(efgtoa@ou+1)^(0+128),w
 17239     04A4  0020               	movlb	0	; select bank0
 17240     04A5  00AB               	movwf	___flmul@a+1
 17241     04A6  0021               	movlb	1	; select bank1
 17242     04A7  083D               	movf	efgtoa@ou^(0+128),w
 17243     04A8  0020               	movlb	0	; select bank0
 17244     04A9  00AA               	movwf	___flmul@a
 17245     04AA  318D  25C5  3180   	fcall	___flmul
 17246     04AD  0020               	movlb	0	; select bank0
 17247     04AE  0829               	movf	?___flmul+3,w
 17248     04AF  00C7               	movwf	___flge@ff2+3
 17249     04B0  0828               	movf	?___flmul+2,w
 17250     04B1  00C6               	movwf	___flge@ff2+2
 17251     04B2  0827               	movf	?___flmul+1,w
 17252     04B3  00C5               	movwf	___flge@ff2+1
 17253     04B4  0826               	movf	?___flmul,w
 17254     04B5  00C4               	movwf	___flge@ff2
 17255     04B6  3194  248C  3180   	fcall	___flge
 17256     04B9  1C03               	btfss	3,0
 17257     04BA  2CBC               	goto	u453_21
 17258     04BB  2CBD               	goto	u453_20
 17259     04BC                     u453_21:
 17260     04BC  2CF8               	goto	i1l1799
 17261     04BD                     u453_20:
 17262     04BD                     i1l4993:
 17263                           
 17264                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
 17265     04BD  3001               	movlw	1
 17266     04BE  0021               	movlb	1	; select bank1
 17267     04BF  07B9               	addwf	efgtoa@e^(0+128),f
 17268     04C0  3000               	movlw	0
 17269     04C1  3DBA               	addwfc	(efgtoa@e+1)^(0+128),f
 17270     04C2                     i1l4995:
 17271                           
 17272                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 17273     04C2  3041               	movlw	65
 17274     04C3  0020               	movlb	0	; select bank0
 17275     04C4  00A9               	movwf	___flmul@b+3
 17276     04C5  3020               	movlw	32
 17277     04C6  00A8               	movwf	___flmul@b+2
 17278     04C7  3000               	movlw	0
 17279     04C8  00A7               	movwf	___flmul@b+1
 17280     04C9  3000               	movlw	0
 17281     04CA  00A6               	movwf	___flmul@b
 17282     04CB  0021               	movlb	1	; select bank1
 17283     04CC  0840               	movf	(efgtoa@ou+3)^(0+128),w
 17284     04CD  0020               	movlb	0	; select bank0
 17285     04CE  00AD               	movwf	___flmul@a+3
 17286     04CF  0021               	movlb	1	; select bank1
 17287     04D0  083F               	movf	(efgtoa@ou+2)^(0+128),w
 17288     04D1  0020               	movlb	0	; select bank0
 17289     04D2  00AC               	movwf	___flmul@a+2
 17290     04D3  0021               	movlb	1	; select bank1
 17291     04D4  083E               	movf	(efgtoa@ou+1)^(0+128),w
 17292     04D5  0020               	movlb	0	; select bank0
 17293     04D6  00AB               	movwf	___flmul@a+1
 17294     04D7  0021               	movlb	1	; select bank1
 17295     04D8  083D               	movf	efgtoa@ou^(0+128),w
 17296     04D9  0020               	movlb	0	; select bank0
 17297     04DA  00AA               	movwf	___flmul@a
 17298     04DB  318D  25C5  3180   	fcall	___flmul
 17299     04DE  0020               	movlb	0	; select bank0
 17300     04DF  0829               	movf	?___flmul+3,w
 17301     04E0  0021               	movlb	1	; select bank1
 17302     04E1  00C0               	movwf	(efgtoa@ou+3)^(0+128)
 17303     04E2  0020               	movlb	0	; select bank0
 17304     04E3  0828               	movf	?___flmul+2,w
 17305     04E4  0021               	movlb	1	; select bank1
 17306     04E5  00BF               	movwf	(efgtoa@ou+2)^(0+128)
 17307     04E6  0020               	movlb	0	; select bank0
 17308     04E7  0827               	movf	?___flmul+1,w
 17309     04E8  0021               	movlb	1	; select bank1
 17310     04E9  00BE               	movwf	(efgtoa@ou+1)^(0+128)
 17311     04EA  0020               	movlb	0	; select bank0
 17312     04EB  0826               	movf	?___flmul,w
 17313     04EC  0021               	movlb	1	; select bank1
 17314     04ED  00BD               	movwf	efgtoa@ou^(0+128)
 17315     04EE                     i1l4997:
 17316                           
 17317                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 17318     04EE  3066               	movlw	102
 17319     04EF  0633               	xorwf	efgtoa@nmode^(0+128),w
 17320     04F0  1D03               	btfss	3,2
 17321     04F1  2CF3               	goto	u454_21
 17322     04F2  2CF4               	goto	u454_20
 17323     04F3                     u454_21:
 17324     04F3  2CF8               	goto	i1l1799
 17325     04F4                     u454_20:
 17326     04F4                     i1l4999:
 17327                           
 17328                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
 17329     04F4  3001               	movlw	1
 17330     04F5  07B6               	addwf	efgtoa@m^(0+128),f
 17331     04F6  3000               	movlw	0
 17332     04F7  3DB7               	addwfc	(efgtoa@m+1)^(0+128),f
 17333     04F8                     i1l1799:	
 17334                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 767:  }
 17335                           
 17336                           
 17337                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 17338     04F8  0021               	movlb	1	; select bank1
 17339     04F9  0840               	movf	(efgtoa@ou+3)^(0+128),w
 17340     04FA  00D5               	movwf	(efgtoa@u+3)^(0+128)
 17341     04FB  083F               	movf	(efgtoa@ou+2)^(0+128),w
 17342     04FC  00D4               	movwf	(efgtoa@u+2)^(0+128)
 17343     04FD  083E               	movf	(efgtoa@ou+1)^(0+128),w
 17344     04FE  00D3               	movwf	(efgtoa@u+1)^(0+128)
 17345     04FF  083D               	movf	efgtoa@ou^(0+128),w
 17346     0500  00D2               	movwf	efgtoa@u^(0+128)
 17347                           
 17348                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 17349     0501  083A               	movf	(efgtoa@e+1)^(0+128),w
 17350     0502  00AA               	movwf	(efgtoa@ne+1)^(0+128)
 17351     0503  0839               	movf	efgtoa@e^(0+128),w
 17352     0504  00A9               	movwf	efgtoa@ne^(0+128)
 17353     0505                     i1l5001:
 17354                           
 17355                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 17356     0505  01B1               	clrf	efgtoa@pp^(0+128)
 17357     0506                     i1l5003:
 17358                           
 17359                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 17360     0506  01AD               	clrf	efgtoa@t^(0+128)
 17361     0507  01AE               	clrf	(efgtoa@t+1)^(0+128)
 17362     0508                     i1l5005:
 17363                           
 17364                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 17365     0508  01C1               	clrf	efgtoa@i^(0+128)
 17366     0509  01C2               	clrf	(efgtoa@i+1)^(0+128)
 17367                           
 17368                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 17369     050A  2E40               	goto	i1l5049
 17370     050B                     i1l5007:
 17371                           
 17372                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 17373     050B  0021               	movlb	1	; select bank1
 17374     050C  0855               	movf	(efgtoa@u+3)^(0+128),w
 17375     050D  0020               	movlb	0	; select bank0
 17376     050E  00C3               	movwf	___fldiv@a+3
 17377     050F  0021               	movlb	1	; select bank1
 17378     0510  0854               	movf	(efgtoa@u+2)^(0+128),w
 17379     0511  0020               	movlb	0	; select bank0
 17380     0512  00C2               	movwf	___fldiv@a+2
 17381     0513  0021               	movlb	1	; select bank1
 17382     0514  0853               	movf	(efgtoa@u+1)^(0+128),w
 17383     0515  0020               	movlb	0	; select bank0
 17384     0516  00C1               	movwf	___fldiv@a+1
 17385     0517  0021               	movlb	1	; select bank1
 17386     0518  0852               	movf	efgtoa@u^(0+128),w
 17387     0519  0020               	movlb	0	; select bank0
 17388     051A  00C0               	movwf	___fldiv@a
 17389     051B  0021               	movlb	1	; select bank1
 17390     051C  0846               	movf	(efgtoa@h+3)^(0+128),w
 17391     051D  0020               	movlb	0	; select bank0
 17392     051E  00C7               	movwf	___fldiv@b+3
 17393     051F  0021               	movlb	1	; select bank1
 17394     0520  0845               	movf	(efgtoa@h+2)^(0+128),w
 17395     0521  0020               	movlb	0	; select bank0
 17396     0522  00C6               	movwf	___fldiv@b+2
 17397     0523  0021               	movlb	1	; select bank1
 17398     0524  0844               	movf	(efgtoa@h+1)^(0+128),w
 17399     0525  0020               	movlb	0	; select bank0
 17400     0526  00C5               	movwf	___fldiv@b+1
 17401     0527  0021               	movlb	1	; select bank1
 17402     0528  0843               	movf	efgtoa@h^(0+128),w
 17403     0529  0020               	movlb	0	; select bank0
 17404     052A  00C4               	movwf	___fldiv@b
 17405     052B  3188  2057  3180   	fcall	___fldiv
 17406     052E  0020               	movlb	0	; select bank0
 17407     052F  0843               	movf	?___fldiv+3,w
 17408     0530  00DD               	movwf	floorf@x+3
 17409     0531  0842               	movf	?___fldiv+2,w
 17410     0532  00DC               	movwf	floorf@x+2
 17411     0533  0841               	movf	?___fldiv+1,w
 17412     0534  00DB               	movwf	floorf@x+1
 17413     0535  0840               	movf	?___fldiv,w
 17414     0536  00DA               	movwf	floorf@x
 17415     0537  3186  26A9  3180   	fcall	_floorf
 17416     053A  0020               	movlb	0	; select bank0
 17417     053B  085D               	movf	?_floorf+3,w
 17418     053C  0021               	movlb	1	; select bank1
 17419     053D  00CA               	movwf	(efgtoa@l+3)^(0+128)
 17420     053E  0020               	movlb	0	; select bank0
 17421     053F  085C               	movf	?_floorf+2,w
 17422     0540  0021               	movlb	1	; select bank1
 17423     0541  00C9               	movwf	(efgtoa@l+2)^(0+128)
 17424     0542  0020               	movlb	0	; select bank0
 17425     0543  085B               	movf	?_floorf+1,w
 17426     0544  0021               	movlb	1	; select bank1
 17427     0545  00C8               	movwf	(efgtoa@l+1)^(0+128)
 17428     0546  0020               	movlb	0	; select bank0
 17429     0547  085A               	movf	?_floorf,w
 17430     0548  0021               	movlb	1	; select bank1
 17431     0549  00C7               	movwf	efgtoa@l^(0+128)
 17432                           
 17433                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 17434     054A  084A               	movf	(efgtoa@l+3)^(0+128),w
 17435     054B  00F3               	movwf	___fltol@f1+3
 17436     054C  0849               	movf	(efgtoa@l+2)^(0+128),w
 17437     054D  00F2               	movwf	___fltol@f1+2
 17438     054E  0848               	movf	(efgtoa@l+1)^(0+128),w
 17439     054F  00F1               	movwf	___fltol@f1+1
 17440     0550  0847               	movf	efgtoa@l^(0+128),w
 17441     0551  00F0               	movwf	___fltol@f1
 17442     0552  3192  22A4  3180   	fcall	___fltol
 17443     0555  0871               	movf	?___fltol+1,w
 17444     0556  3A80               	xorlw	128
 17445     0557  0021               	movlb	1	; select bank1
 17446     0558  00A5               	movwf	??_efgtoa^(0+128)
 17447     0559  3080               	movlw	128
 17448     055A  0225               	subwf	??_efgtoa^(0+128),w
 17449     055B  1D03               	skipz
 17450     055C  2D5F               	goto	u455_25
 17451     055D  300A               	movlw	10
 17452     055E  0270               	subwf	?___fltol,w
 17453     055F                     u455_25:
 17454     055F  1803               	skipnc
 17455     0560  2D62               	goto	u455_21
 17456     0561  2D63               	goto	u455_20
 17457     0562                     u455_21:
 17458     0562  2D75               	goto	i1l5011
 17459     0563                     u455_20:
 17460     0563                     i1l5009:
 17461     0563  0021               	movlb	1	; select bank1
 17462     0564  084A               	movf	(efgtoa@l+3)^(0+128),w
 17463     0565  00F3               	movwf	___fltol@f1+3
 17464     0566  0849               	movf	(efgtoa@l+2)^(0+128),w
 17465     0567  00F2               	movwf	___fltol@f1+2
 17466     0568  0848               	movf	(efgtoa@l+1)^(0+128),w
 17467     0569  00F1               	movwf	___fltol@f1+1
 17468     056A  0847               	movf	efgtoa@l^(0+128),w
 17469     056B  00F0               	movwf	___fltol@f1
 17470     056C  3192  22A4  3180   	fcall	___fltol
 17471     056F  0871               	movf	?___fltol+1,w
 17472     0570  0021               	movlb	1	; select bank1
 17473     0571  00B5               	movwf	(efgtoa@d+1)^(0+128)
 17474     0572  0870               	movf	?___fltol,w
 17475     0573  00B4               	movwf	efgtoa@d^(0+128)
 17476     0574  2D7A               	goto	i1l5013
 17477     0575                     i1l5011:
 17478     0575  3009               	movlw	9
 17479     0576  0021               	movlb	1	; select bank1
 17480     0577  00B4               	movwf	efgtoa@d^(0+128)
 17481     0578  3000               	movlw	0
 17482     0579  00B5               	movwf	(efgtoa@d^(0+128)+1)
 17483     057A                     i1l5013:
 17484                           
 17485                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 17486     057A  0831               	movf	efgtoa@pp^(0+128),w
 17487     057B  1D03               	btfss	3,2
 17488     057C  2D7E               	goto	u456_21
 17489     057D  2D7F               	goto	u456_20
 17490     057E                     u456_21:
 17491     057E  2DA8               	goto	i1l5033
 17492     057F                     u456_20:
 17493     057F                     i1l5015:
 17494     057F  1FAA               	btfss	(efgtoa@ne+1)^(0+128),7
 17495     0580  2D82               	goto	u457_21
 17496     0581  2D83               	goto	u457_20
 17497     0582                     u457_21:
 17498     0582  2DA8               	goto	i1l5033
 17499     0583                     u457_20:
 17500     0583                     i1l5017:
 17501                           
 17502                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 17503     0583  084C               	movf	efgtoa@n^(0+128),w
 17504     0584  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17505     0585  0086               	movwf	6
 17506     0586  3002               	movlw	2	; select bank4/5
 17507     0587  0087               	movwf	7
 17508     0588  302E               	movlw	46
 17509     0589  0081               	movwf	1
 17510     058A                     i1l5019:
 17511     058A  3001               	movlw	1
 17512     058B  07CC               	addwf	efgtoa@n^(0+128),f
 17513     058C  3000               	movlw	0
 17514     058D  3DCD               	addwfc	(efgtoa@n+1)^(0+128),f
 17515     058E                     i1l5021:
 17516                           
 17517                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 17518     058E  30FF               	movlw	255
 17519     058F  07BB               	addwf	efgtoa@w^(0+128),f
 17520     0590  30FF               	movlw	255
 17521     0591  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 17522     0592                     i1l5023:
 17523                           
 17524                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 17525     0592  01B1               	clrf	efgtoa@pp^(0+128)
 17526     0593  0AB1               	incf	efgtoa@pp^(0+128),f
 17527     0594  2DA8               	goto	i1l5033
 17528     0595                     i1l5025:
 17529                           
 17530                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 17531     0595  084C               	movf	efgtoa@n^(0+128),w
 17532     0596  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17533     0597  0086               	movwf	6
 17534     0598  3002               	movlw	2	; select bank4/5
 17535     0599  0087               	movwf	7
 17536     059A  3030               	movlw	48
 17537     059B  0081               	movwf	1
 17538     059C                     i1l5027:
 17539     059C  3001               	movlw	1
 17540     059D  07CC               	addwf	efgtoa@n^(0+128),f
 17541     059E  3000               	movlw	0
 17542     059F  3DCD               	addwfc	(efgtoa@n+1)^(0+128),f
 17543     05A0                     i1l5029:
 17544                           
 17545                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 17546     05A0  30FF               	movlw	255
 17547     05A1  07BB               	addwf	efgtoa@w^(0+128),f
 17548     05A2  30FF               	movlw	255
 17549     05A3  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 17550     05A4                     i1l5031:
 17551                           
 17552                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 17553     05A4  30FF               	movlw	255
 17554     05A5  07AD               	addwf	efgtoa@t^(0+128),f
 17555     05A6  30FF               	movlw	255
 17556     05A7  3DAE               	addwfc	(efgtoa@t+1)^(0+128),f
 17557     05A8                     i1l5033:
 17558                           
 17559                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 17560     05A8  082D               	movf	efgtoa@t^(0+128),w
 17561     05A9  042E               	iorwf	(efgtoa@t+1)^(0+128),w
 17562     05AA  1D03               	btfss	3,2
 17563     05AB  2DAD               	goto	u458_21
 17564     05AC  2DAE               	goto	u458_20
 17565     05AD                     u458_21:
 17566     05AD  2D95               	goto	i1l5025
 17567     05AE                     u458_20:
 17568     05AE                     i1l5035:
 17569                           
 17570                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 17571     05AE  084C               	movf	efgtoa@n^(0+128),w
 17572     05AF  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17573     05B0  0086               	movwf	6
 17574     05B1  3002               	movlw	2	; select bank4/5
 17575     05B2  0087               	movwf	7
 17576     05B3  0834               	movf	efgtoa@d^(0+128),w
 17577     05B4  3E30               	addlw	48
 17578     05B5  0081               	movwf	1
 17579     05B6                     i1l5037:
 17580     05B6  3001               	movlw	1
 17581     05B7  07CC               	addwf	efgtoa@n^(0+128),f
 17582     05B8  3000               	movlw	0
 17583     05B9  3DCD               	addwfc	(efgtoa@n+1)^(0+128),f
 17584     05BA                     i1l5039:
 17585                           
 17586                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 17587     05BA  30FF               	movlw	255
 17588     05BB  07BB               	addwf	efgtoa@w^(0+128),f
 17589     05BC  30FF               	movlw	255
 17590     05BD  3DBC               	addwfc	(efgtoa@w+1)^(0+128),f
 17591     05BE                     i1l5041:
 17592                           
 17593                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
 17594     05BE  0855               	movf	(efgtoa@u+3)^(0+128),w
 17595     05BF  0020               	movlb	0	; select bank0
 17596     05C0  00AD               	movwf	___flmul@a+3
 17597     05C1  0021               	movlb	1	; select bank1
 17598     05C2  0854               	movf	(efgtoa@u+2)^(0+128),w
 17599     05C3  0020               	movlb	0	; select bank0
 17600     05C4  00AC               	movwf	___flmul@a+2
 17601     05C5  0021               	movlb	1	; select bank1
 17602     05C6  0853               	movf	(efgtoa@u+1)^(0+128),w
 17603     05C7  0020               	movlb	0	; select bank0
 17604     05C8  00AB               	movwf	___flmul@a+1
 17605     05C9  0021               	movlb	1	; select bank1
 17606     05CA  0852               	movf	efgtoa@u^(0+128),w
 17607     05CB  0020               	movlb	0	; select bank0
 17608     05CC  00AA               	movwf	___flmul@a
 17609     05CD  0021               	movlb	1	; select bank1
 17610     05CE  084A               	movf	(efgtoa@l+3)^(0+128),w
 17611     05CF  0020               	movlb	0	; select bank0
 17612     05D0  00A9               	movwf	___flmul@b+3
 17613     05D1  0021               	movlb	1	; select bank1
 17614     05D2  0849               	movf	(efgtoa@l+2)^(0+128),w
 17615     05D3  0020               	movlb	0	; select bank0
 17616     05D4  00A8               	movwf	___flmul@b+2
 17617     05D5  0021               	movlb	1	; select bank1
 17618     05D6  0848               	movf	(efgtoa@l+1)^(0+128),w
 17619     05D7  0020               	movlb	0	; select bank0
 17620     05D8  00A7               	movwf	___flmul@b+1
 17621     05D9  0021               	movlb	1	; select bank1
 17622     05DA  0847               	movf	efgtoa@l^(0+128),w
 17623     05DB  0020               	movlb	0	; select bank0
 17624     05DC  00A6               	movwf	___flmul@b
 17625     05DD  318D  25C5  3180   	fcall	___flmul
 17626     05E0  0020               	movlb	0	; select bank0
 17627     05E1  0829               	movf	?___flmul+3,w
 17628     05E2  00C3               	movwf	___flsub@a+3
 17629     05E3  0828               	movf	?___flmul+2,w
 17630     05E4  00C2               	movwf	___flsub@a+2
 17631     05E5  0827               	movf	?___flmul+1,w
 17632     05E6  00C1               	movwf	___flsub@a+1
 17633     05E7  0826               	movf	?___flmul,w
 17634     05E8  00C0               	movwf	___flsub@a
 17635     05E9  0021               	movlb	1	; select bank1
 17636     05EA  0846               	movf	(efgtoa@h+3)^(0+128),w
 17637     05EB  0020               	movlb	0	; select bank0
 17638     05EC  00C7               	movwf	___flsub@b+3
 17639     05ED  0021               	movlb	1	; select bank1
 17640     05EE  0845               	movf	(efgtoa@h+2)^(0+128),w
 17641     05EF  0020               	movlb	0	; select bank0
 17642     05F0  00C6               	movwf	___flsub@b+2
 17643     05F1  0021               	movlb	1	; select bank1
 17644     05F2  0844               	movf	(efgtoa@h+1)^(0+128),w
 17645     05F3  0020               	movlb	0	; select bank0
 17646     05F4  00C5               	movwf	___flsub@b+1
 17647     05F5  0021               	movlb	1	; select bank1
 17648     05F6  0843               	movf	efgtoa@h^(0+128),w
 17649     05F7  0020               	movlb	0	; select bank0
 17650     05F8  00C4               	movwf	___flsub@b
 17651     05F9  319E  26EA  3180   	fcall	___flsub
 17652     05FC  0020               	movlb	0	; select bank0
 17653     05FD  0843               	movf	?___flsub+3,w
 17654     05FE  0021               	movlb	1	; select bank1
 17655     05FF  00C6               	movwf	(efgtoa@h+3)^(0+128)
 17656     0600  0020               	movlb	0	; select bank0
 17657     0601  0842               	movf	?___flsub+2,w
 17658     0602  0021               	movlb	1	; select bank1
 17659     0603  00C5               	movwf	(efgtoa@h+2)^(0+128)
 17660     0604  0020               	movlb	0	; select bank0
 17661     0605  0841               	movf	?___flsub+1,w
 17662     0606  0021               	movlb	1	; select bank1
 17663     0607  00C4               	movwf	(efgtoa@h+1)^(0+128)
 17664     0608  0020               	movlb	0	; select bank0
 17665     0609  0840               	movf	?___flsub,w
 17666     060A  0021               	movlb	1	; select bank1
 17667     060B  00C3               	movwf	efgtoa@h^(0+128)
 17668     060C                     i1l5043:
 17669                           
 17670                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 17671     060C  3041               	movlw	65
 17672     060D  0020               	movlb	0	; select bank0
 17673     060E  00C3               	movwf	___fldiv@a+3
 17674     060F  3020               	movlw	32
 17675     0610  00C2               	movwf	___fldiv@a+2
 17676     0611  3000               	movlw	0
 17677     0612  00C1               	movwf	___fldiv@a+1
 17678     0613  3000               	movlw	0
 17679     0614  00C0               	movwf	___fldiv@a
 17680     0615  0021               	movlb	1	; select bank1
 17681     0616  0855               	movf	(efgtoa@u+3)^(0+128),w
 17682     0617  0020               	movlb	0	; select bank0
 17683     0618  00C7               	movwf	___fldiv@b+3
 17684     0619  0021               	movlb	1	; select bank1
 17685     061A  0854               	movf	(efgtoa@u+2)^(0+128),w
 17686     061B  0020               	movlb	0	; select bank0
 17687     061C  00C6               	movwf	___fldiv@b+2
 17688     061D  0021               	movlb	1	; select bank1
 17689     061E  0853               	movf	(efgtoa@u+1)^(0+128),w
 17690     061F  0020               	movlb	0	; select bank0
 17691     0620  00C5               	movwf	___fldiv@b+1
 17692     0621  0021               	movlb	1	; select bank1
 17693     0622  0852               	movf	efgtoa@u^(0+128),w
 17694     0623  0020               	movlb	0	; select bank0
 17695     0624  00C4               	movwf	___fldiv@b
 17696     0625  3188  2057  3180   	fcall	___fldiv
 17697     0628  0020               	movlb	0	; select bank0
 17698     0629  0843               	movf	?___fldiv+3,w
 17699     062A  0021               	movlb	1	; select bank1
 17700     062B  00D5               	movwf	(efgtoa@u+3)^(0+128)
 17701     062C  0020               	movlb	0	; select bank0
 17702     062D  0842               	movf	?___fldiv+2,w
 17703     062E  0021               	movlb	1	; select bank1
 17704     062F  00D4               	movwf	(efgtoa@u+2)^(0+128)
 17705     0630  0020               	movlb	0	; select bank0
 17706     0631  0841               	movf	?___fldiv+1,w
 17707     0632  0021               	movlb	1	; select bank1
 17708     0633  00D3               	movwf	(efgtoa@u+1)^(0+128)
 17709     0634  0020               	movlb	0	; select bank0
 17710     0635  0840               	movf	?___fldiv,w
 17711     0636  0021               	movlb	1	; select bank1
 17712     0637  00D2               	movwf	efgtoa@u^(0+128)
 17713     0638                     i1l5045:
 17714                           
 17715                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 17716     0638  30FF               	movlw	255
 17717     0639  07A9               	addwf	efgtoa@ne^(0+128),f
 17718     063A  30FF               	movlw	255
 17719     063B  3DAA               	addwfc	(efgtoa@ne+1)^(0+128),f
 17720     063C                     i1l5047:
 17721                           
 17722                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
 17723     063C  3001               	movlw	1
 17724     063D  07C1               	addwf	efgtoa@i^(0+128),f
 17725     063E  3000               	movlw	0
 17726     063F  3DC2               	addwfc	(efgtoa@i+1)^(0+128),f
 17727     0640                     i1l5049:
 17728                           
 17729                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 17730     0640  0842               	movf	(efgtoa@i+1)^(0+128),w
 17731     0641  3A80               	xorlw	128
 17732     0642  00A5               	movwf	??_efgtoa^(0+128)
 17733     0643  0837               	movf	(efgtoa@m+1)^(0+128),w
 17734     0644  3A80               	xorlw	128
 17735     0645  0225               	subwf	??_efgtoa^(0+128),w
 17736     0646  1D03               	skipz
 17737     0647  2E4A               	goto	u459_25
 17738     0648  0836               	movf	efgtoa@m^(0+128),w
 17739     0649  0241               	subwf	efgtoa@i^(0+128),w
 17740     064A                     u459_25:
 17741     064A  1803               	skipnc
 17742     064B  2E4D               	goto	u459_21
 17743     064C  2E4E               	goto	u459_20
 17744     064D                     u459_21:
 17745     064D  2E5C               	goto	i1l5053
 17746     064E                     u459_20:
 17747     064E                     i1l5051:
 17748     064E  0021               	movlb	1	; select bank1
 17749     064F  084D               	movf	(efgtoa@n+1)^(0+128),w
 17750     0650  3A80               	xorlw	128
 17751     0651  00A5               	movwf	??_efgtoa^(0+128)
 17752     0652  3080               	movlw	128
 17753     0653  0225               	subwf	??_efgtoa^(0+128),w
 17754     0654  1D03               	skipz
 17755     0655  2E58               	goto	u460_25
 17756     0656  304B               	movlw	75
 17757     0657  024C               	subwf	efgtoa@n^(0+128),w
 17758     0658                     u460_25:
 17759     0658  1C03               	skipc
 17760     0659  2E5B               	goto	u460_21
 17761     065A  2E5C               	goto	u460_20
 17762     065B                     u460_21:
 17763     065B  2D0B               	goto	i1l5007
 17764     065C                     u460_20:
 17765     065C                     i1l5053:
 17766                           
 17767                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 17768     065C  304F               	movlw	79
 17769     065D  0021               	movlb	1	; select bank1
 17770     065E  00C1               	movwf	efgtoa@i^(0+128)
 17771     065F  3000               	movlw	0
 17772     0660  00C2               	movwf	(efgtoa@i^(0+128)+1)
 17773     0661                     i1l5055:
 17774                           
 17775                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 17776     0661  0841               	movf	efgtoa@i^(0+128),w
 17777     0662  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17778     0663  0086               	movwf	6
 17779     0664  3002               	movlw	2	; select bank4/5
 17780     0665  0087               	movwf	7
 17781     0666  0181               	clrf	1
 17782     0667                     i1l5057:
 17783                           
 17784                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 17785     0667  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 17786     0668  00F0               	movwf	memcpy@s1
 17787     0669  084D               	movf	(efgtoa@n+1)^(0+128),w
 17788     066A  00F2               	movwf	memcpy@n+1
 17789     066B  084C               	movf	efgtoa@n^(0+128),w
 17790     066C  00F1               	movwf	memcpy@n
 17791     066D  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 17792     066E  00A5               	movwf	??_efgtoa^(0+128)
 17793     066F  084C               	movf	efgtoa@n^(0+128),w
 17794     0670  0225               	subwf	??_efgtoa^(0+128),w
 17795     0671  0741               	addwf	efgtoa@i^(0+128),w
 17796     0672  3190  2022  3180   	fcall	_memcpy
 17797     0675                     i1l5059:
 17798                           
 17799                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 17800     0675  0021               	movlb	1	; select bank1
 17801     0676  084C               	movf	efgtoa@n^(0+128),w
 17802     0677  0241               	subwf	efgtoa@i^(0+128),w
 17803     0678  00CC               	movwf	efgtoa@n^(0+128)
 17804     0679  084D               	movf	(efgtoa@n+1)^(0+128),w
 17805     067A  3B42               	subwfb	(efgtoa@i+1)^(0+128),w
 17806     067B  00CD               	movwf	(efgtoa@n+1)^(0+128)
 17807     067C                     i1l5061:
 17808                           
 17809                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 17810     067C  084B               	movf	efgtoa@sign^(0+128),w
 17811     067D  1D03               	btfss	3,2
 17812     067E  2E80               	goto	u461_21
 17813     067F  2E82               	goto	u461_20
 17814     0680                     u461_21:
 17815     0680  3001               	movlw	1
 17816     0681  2E83               	goto	u462_20
 17817     0682                     u461_20:
 17818     0682  3000               	movlw	0
 17819     0683                     u462_20:
 17820     0683  00A5               	movwf	??_efgtoa^(0+128)
 17821     0684  01A6               	clrf	(??_efgtoa^(0+128)+1)
 17822     0685  0825               	movf	??_efgtoa^(0+128),w
 17823     0686  00C1               	movwf	efgtoa@i^(0+128)
 17824     0687  0826               	movf	(??_efgtoa+1)^(0+128),w
 17825     0688  00C2               	movwf	(efgtoa@i+1)^(0+128)
 17826     0689                     i1l5063:
 17827                           
 17828                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 17829     0689  084B               	movf	efgtoa@sign^(0+128),w
 17830     068A  1903               	btfsc	3,2
 17831     068B  2E8D               	goto	u463_21
 17832     068C  2E8E               	goto	u463_20
 17833     068D                     u463_21:
 17834     068D  2E99               	goto	i1l5067
 17835     068E                     u463_20:
 17836     068E                     i1l5065:
 17837                           
 17838                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 17839     068E  30FF               	movlw	255
 17840     068F  07CC               	addwf	efgtoa@n^(0+128),f
 17841     0690  30FF               	movlw	255
 17842     0691  3DCD               	addwfc	(efgtoa@n+1)^(0+128),f
 17843     0692  084C               	movf	efgtoa@n^(0+128),w
 17844     0693  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17845     0694  0086               	movwf	6
 17846     0695  3002               	movlw	2	; select bank4/5
 17847     0696  0087               	movwf	7
 17848     0697  084B               	movf	efgtoa@sign^(0+128),w
 17849     0698  0081               	movwf	1
 17850     0699                     i1l5067:
 17851                           
 17852                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 17853     0699  0841               	movf	efgtoa@i^(0+128),w
 17854     069A  02BB               	subwf	efgtoa@w^(0+128),f
 17855     069B  0842               	movf	(efgtoa@i+1)^(0+128),w
 17856     069C  3BBC               	subwfb	(efgtoa@w+1)^(0+128),f
 17857     069D                     i1l5069:
 17858                           
 17859                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 17860     069D  084C               	movf	efgtoa@n^(0+128),w
 17861     069E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 17862     069F  00FB               	movwf	pad@buf
 17863     06A0  083C               	movf	(efgtoa@w+1)^(0+128),w
 17864     06A1  00FD               	movwf	pad@p+1
 17865     06A2  083B               	movf	efgtoa@w^(0+128),w
 17866     06A3  00FC               	movwf	pad@p
 17867     06A4  0838               	movf	efgtoa@fp^(0+128),w
 17868     06A5  3190  20A5  3180   	fcall	_pad
 17869     06A8                     i1l1773:
 17870     06A8  0008               	return
 17871     06A9                     __end_of_efgtoa:
 17872                           
 17873                           	psect	text76
 17874     1E78                     __ptext76:	
 17875 ;; *************** function _strcpy *****************
 17876 ;; Defined at:
 17877 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
 17878 ;; Parameters:    Size  Location     Type
 17879 ;;  dest            1    wreg     PTR unsigned char 
 17880 ;;		 -> dbuf(80), 
 17881 ;;  src             2    0[COMMON] PTR const unsigned char 
 17882 ;;		 -> STR_12(4), STR_9(4), 
 17883 ;; Auto vars:     Size  Location     Type
 17884 ;;  dest            1    5[COMMON] PTR unsigned char 
 17885 ;;		 -> dbuf(80), 
 17886 ;;  d               1    4[COMMON] PTR unsigned char 
 17887 ;;		 -> dbuf(80), 
 17888 ;; Return value:  Size  Location     Type
 17889 ;;                  1    wreg      PTR unsigned char 
 17890 ;; Registers used:
 17891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 17892 ;; Tracked objects:
 17893 ;;		On entry : 0/0
 17894 ;;		On exit  : 0/0
 17895 ;;		Unchanged: 0/0
 17896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17899 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17900 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17901 ;;Total ram usage:        6 bytes
 17902 ;; Hardware stack levels used: 1
 17903 ;; This function calls:
 17904 ;;		Nothing
 17905 ;; This function is called by:
 17906 ;;		_efgtoa
 17907 ;; This function uses a non-reentrant model
 17908 ;;
 17909                           
 17910     1E78                     _strcpy:	
 17911                           ;psect for function _strcpy
 17912                           
 17913                           
 17914                           ;incstack = 0
 17915                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 17916                           ;strcpy@dest stored from wreg
 17917     1E78  00F5               	movwf	strcpy@dest
 17918     1E79                     i1l4819:
 17919     1E79  0875               	movf	strcpy@dest,w
 17920     1E7A  00F4               	movwf	strcpy@d
 17921     1E7B                     i1l4821:
 17922     1E7B  0874               	movf	strcpy@d,w
 17923     1E7C  0086               	movwf	6
 17924     1E7D  3002               	movlw	2	; select bank4/5
 17925     1E7E  0087               	movwf	7
 17926     1E7F  0AF4               	incf	strcpy@d,f
 17927     1E80  0871               	movf	strcpy@src+1,w
 17928     1E81  00F3               	movwf	??_strcpy+1
 17929     1E82  0870               	movf	strcpy@src,w
 17930     1E83  00F2               	movwf	??_strcpy
 17931     1E84  0AF0               	incf	strcpy@src,f
 17932     1E85  1903               	skipnz
 17933     1E86  0AF1               	incf	strcpy@src+1,f
 17934     1E87  0872               	movf	??_strcpy,w
 17935     1E88  0084               	movwf	4
 17936     1E89  0873               	movf	??_strcpy+1,w
 17937     1E8A  0085               	movwf	5
 17938     1E8B  0800               	movf	0,w	;code access
 17939     1E8C  3FC0               	movwi [0]fsr1
 17940     1E8D  0889               	movf	9,f
 17941     1E8E  1D03               	btfss	3,2
 17942     1E8F  2E91               	goto	u418_21
 17943     1E90  2E92               	goto	u418_20
 17944     1E91                     u418_21:
 17945     1E91  2E7B               	goto	i1l4821
 17946     1E92                     u418_20:
 17947     1E92                     i1l1945:
 17948     1E92  0008               	return
 17949     1E93                     __end_of_strcpy:
 17950                           
 17951                           	psect	text77
 17952     10A5                     __ptext77:	
 17953 ;; *************** function _pad *****************
 17954 ;; Defined at:
 17955 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 17956 ;; Parameters:    Size  Location     Type
 17957 ;;  fp              1    wreg     PTR struct _IO_FILE
 17958 ;;		 -> sprintf@f(11), 
 17959 ;;  buf             1   11[COMMON] PTR unsigned char 
 17960 ;;		 -> dbuf(80), 
 17961 ;;  p               2   12[COMMON] int 
 17962 ;; Auto vars:     Size  Location     Type
 17963 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
 17964 ;;		 -> sprintf@f(11), 
 17965 ;;  i               2    5[BANK0 ] int 
 17966 ;; Return value:  Size  Location     Type
 17967 ;;                  1    wreg      void 
 17968 ;; Registers used:
 17969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17970 ;; Tracked objects:
 17971 ;;		On entry : 0/0
 17972 ;;		On exit  : 0/0
 17973 ;;		Unchanged: 0/0
 17974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17975 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17976 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17978 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17979 ;;Total ram usage:        7 bytes
 17980 ;; Hardware stack levels used: 1
 17981 ;; Hardware stack levels required when called: 3
 17982 ;; This function calls:
 17983 ;;		_fputc
 17984 ;;		_fputs
 17985 ;; This function is called by:
 17986 ;;		_efgtoa
 17987 ;;		_xtoa
 17988 ;; This function uses a non-reentrant model
 17989 ;;
 17990                           
 17991     10A5                     _pad:	
 17992                           ;psect for function _pad
 17993                           
 17994                           
 17995                           ;incstack = 0
 17996                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17997                           ;pad@fp stored from wreg
 17998     10A5  0020               	movlb	0	; select bank0
 17999     10A6  00A7               	movwf	pad@fp
 18000     10A7                     i1l4783:
 18001                           
 18002                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
 18003     10A7  1FFD               	btfss	pad@p+1,7
 18004     10A8  28AA               	goto	u408_21
 18005     10A9  28AB               	goto	u408_20
 18006     10AA                     u408_21:
 18007     10AA  28AD               	goto	i1l1758
 18008     10AB                     u408_20:
 18009     10AB                     i1l4785:
 18010                           
 18011                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 18012     10AB  01FC               	clrf	pad@p
 18013     10AC  01FD               	clrf	pad@p+1
 18014     10AD                     i1l1758:	
 18015                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 207:  }
 18016                           
 18017                           
 18018                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 18019     10AD  01A5               	clrf	pad@i
 18020     10AE  01A6               	clrf	pad@i+1
 18021                           
 18022                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 18023     10AF  28BF               	goto	i1l4791
 18024     10B0                     i1l4787:
 18025                           
 18026                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 18027     10B0  3020               	movlw	32
 18028     10B1  00F0               	movwf	fputc@c
 18029     10B2  3000               	movlw	0
 18030     10B3  00F1               	movwf	fputc@c+1
 18031     10B4  0020               	movlb	0	; select bank0
 18032     10B5  0827               	movf	pad@fp,w
 18033     10B6  00F2               	movwf	fputc@fp
 18034     10B7  3188  2000  3190   	fcall	_fputc
 18035     10BA                     i1l4789:
 18036                           
 18037                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
 18038     10BA  3001               	movlw	1
 18039     10BB  0020               	movlb	0	; select bank0
 18040     10BC  07A5               	addwf	pad@i,f
 18041     10BD  3000               	movlw	0
 18042     10BE  3DA6               	addwfc	pad@i+1,f
 18043     10BF                     i1l4791:
 18044                           
 18045                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 18046     10BF  0826               	movf	pad@i+1,w
 18047     10C0  3A80               	xorlw	128
 18048     10C1  00A4               	movwf	??_pad
 18049     10C2  087D               	movf	pad@p+1,w
 18050     10C3  3A80               	xorlw	128
 18051     10C4  0224               	subwf	??_pad,w
 18052     10C5  1D03               	skipz
 18053     10C6  28C9               	goto	u409_25
 18054     10C7  087C               	movf	pad@p,w
 18055     10C8  0225               	subwf	pad@i,w
 18056     10C9                     u409_25:
 18057     10C9  1C03               	skipc
 18058     10CA  28CC               	goto	u409_21
 18059     10CB  28CD               	goto	u409_20
 18060     10CC                     u409_21:
 18061     10CC  28B0               	goto	i1l4787
 18062     10CD                     u409_20:
 18063     10CD                     i1l4793:
 18064                           
 18065                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 18066     10CD  0020               	movlb	0	; select bank0
 18067     10CE  0827               	movf	pad@fp,w
 18068     10CF  00F8               	movwf	fputs@fp
 18069     10D0  087B               	movf	pad@buf,w
 18070     10D1  319F  2790  3190   	fcall	_fputs
 18071     10D4                     i1l1762:
 18072     10D4  0008               	return
 18073     10D5                     __end_of_pad:
 18074                           
 18075                           	psect	text78
 18076     1F90                     __ptext78:	
 18077 ;; *************** function _fputs *****************
 18078 ;; Defined at:
 18079 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
 18080 ;; Parameters:    Size  Location     Type
 18081 ;;  s               1    wreg     PTR const unsigned char 
 18082 ;;		 -> dbuf(80), 
 18083 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
 18084 ;;		 -> sprintf@f(11), 
 18085 ;; Auto vars:     Size  Location     Type
 18086 ;;  s               1    3[BANK0 ] PTR const unsigned char 
 18087 ;;		 -> dbuf(80), 
 18088 ;;  i               2    1[BANK0 ] int 
 18089 ;;  c               1    0[BANK0 ] unsigned char 
 18090 ;; Return value:  Size  Location     Type
 18091 ;;                  2    8[COMMON] int 
 18092 ;; Registers used:
 18093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18094 ;; Tracked objects:
 18095 ;;		On entry : 0/0
 18096 ;;		On exit  : 0/0
 18097 ;;		Unchanged: 0/0
 18098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18099 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18100 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18101 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18102 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18103 ;;Total ram usage:        7 bytes
 18104 ;; Hardware stack levels used: 1
 18105 ;; Hardware stack levels required when called: 2
 18106 ;; This function calls:
 18107 ;;		_fputc
 18108 ;; This function is called by:
 18109 ;;		_pad
 18110 ;; This function uses a non-reentrant model
 18111 ;;
 18112                           
 18113     1F90                     _fputs:	
 18114                           ;psect for function _fputs
 18115                           
 18116                           
 18117                           ;incstack = 0
 18118                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18119                           ;fputs@s stored from wreg
 18120     1F90  0020               	movlb	0	; select bank0
 18121     1F91  00A3               	movwf	fputs@s
 18122     1F92                     i1l4383:
 18123     1F92  01A1               	clrf	fputs@i
 18124     1F93  01A2               	clrf	fputs@i+1
 18125     1F94  2FA6               	goto	i1l4389
 18126     1F95                     i1l4385:
 18127     1F95  0820               	movf	fputs@c,w
 18128     1F96  00F9               	movwf	??_fputs
 18129     1F97  01FA               	clrf	??_fputs+1
 18130     1F98  0879               	movf	??_fputs,w
 18131     1F99  00F0               	movwf	fputc@c
 18132     1F9A  087A               	movf	??_fputs+1,w
 18133     1F9B  00F1               	movwf	fputc@c+1
 18134     1F9C  0878               	movf	fputs@fp,w
 18135     1F9D  00F2               	movwf	fputc@fp
 18136     1F9E  3188  2000  319F   	fcall	_fputc
 18137     1FA1                     i1l4387:
 18138     1FA1  3001               	movlw	1
 18139     1FA2  0020               	movlb	0	; select bank0
 18140     1FA3  07A1               	addwf	fputs@i,f
 18141     1FA4  3000               	movlw	0
 18142     1FA5  3DA2               	addwfc	fputs@i+1,f
 18143     1FA6                     i1l4389:
 18144     1FA6  0821               	movf	fputs@i,w
 18145     1FA7  0723               	addwf	fputs@s,w
 18146     1FA8  00F9               	movwf	??_fputs
 18147     1FA9  0879               	movf	??_fputs,w
 18148     1FAA  0086               	movwf	6
 18149     1FAB  3002               	movlw	2	; select bank4/5
 18150     1FAC  0087               	movwf	7
 18151     1FAD  0801               	movf	1,w
 18152     1FAE  00A0               	movwf	fputs@c
 18153     1FAF  0820               	movf	fputs@c,w
 18154     1FB0  1D03               	btfss	3,2
 18155     1FB1  2FB3               	goto	u328_21
 18156     1FB2  2FB4               	goto	u328_20
 18157     1FB3                     u328_21:
 18158     1FB3  2F95               	goto	i1l4385
 18159     1FB4                     u328_20:
 18160     1FB4                     i1l1936:
 18161     1FB4  0008               	return
 18162     1FB5                     __end_of_fputs:
 18163                           
 18164                           	psect	text79
 18165     0800                     __ptext79:	
 18166 ;; *************** function _fputc *****************
 18167 ;; Defined at:
 18168 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
 18169 ;; Parameters:    Size  Location     Type
 18170 ;;  c               2    0[COMMON] int 
 18171 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
 18172 ;;		 -> sprintf@f(11), 
 18173 ;; Auto vars:     Size  Location     Type
 18174 ;;		None
 18175 ;; Return value:  Size  Location     Type
 18176 ;;                  2    0[COMMON] int 
 18177 ;; Registers used:
 18178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18179 ;; Tracked objects:
 18180 ;;		On entry : 0/0
 18181 ;;		On exit  : 0/0
 18182 ;;		Unchanged: 0/0
 18183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18184 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18186 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18187 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18188 ;;Total ram usage:        8 bytes
 18189 ;; Hardware stack levels used: 1
 18190 ;; Hardware stack levels required when called: 1
 18191 ;; This function calls:
 18192 ;;		_putch
 18193 ;; This function is called by:
 18194 ;;		_pad
 18195 ;;		_vfpfcnvrt
 18196 ;;		_fputs
 18197 ;; This function uses a non-reentrant model
 18198 ;;
 18199                           
 18200     0800                     _fputc:	
 18201                           ;psect for function _fputc
 18202                           
 18203     0800                     i1l4155:	
 18204                           ;incstack = 0
 18205                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18206                           
 18207     0800  0872               	movf	fputc@fp,w
 18208     0801  1903               	btfsc	3,2
 18209     0802  2804               	goto	u276_21
 18210     0803  2805               	goto	u276_20
 18211     0804                     u276_21:
 18212     0804  280A               	goto	i1l4159
 18213     0805                     u276_20:
 18214     0805                     i1l4157:
 18215     0805  0872               	movf	fputc@fp,w
 18216     0806  1D03               	btfss	3,2
 18217     0807  2809               	goto	u277_21
 18218     0808  280A               	goto	u277_20
 18219     0809                     u277_21:
 18220     0809  280F               	goto	i1l4161
 18221     080A                     u277_20:
 18222     080A                     i1l4159:
 18223     080A  0870               	movf	fputc@c,w
 18224     080B  319C  241A  3188   	fcall	_putch
 18225     080E  2856               	goto	i1l1928
 18226     080F                     i1l4161:
 18227     080F  0872               	movf	fputc@fp,w
 18228     0810  3E09               	addlw	9
 18229     0811  0086               	movwf	6
 18230     0812  3001               	movlw	1	; select bank2/3
 18231     0813  0087               	movwf	7
 18232     0814  0016               	moviw fsr1++
 18233     0815  0401               	iorwf	1,w
 18234     0816  1903               	btfsc	3,2
 18235     0817  2819               	goto	u278_21
 18236     0818  281A               	goto	u278_20
 18237     0819                     u278_21:
 18238     0819  283A               	goto	i1l4165
 18239     081A                     u278_20:
 18240     081A                     i1l4163:
 18241     081A  0872               	movf	fputc@fp,w
 18242     081B  3E09               	addlw	9
 18243     081C  0086               	movwf	6
 18244     081D  3001               	movlw	1	; select bank2/3
 18245     081E  0087               	movwf	7
 18246     081F  3F40               	moviw [0]fsr1
 18247     0820  00F3               	movwf	??_fputc
 18248     0821  3F41               	moviw [1]fsr1
 18249     0822  00F4               	movwf	??_fputc+1
 18250     0823  0872               	movf	fputc@fp,w
 18251     0824  3E02               	addlw	2
 18252     0825  0086               	movwf	6
 18253     0826  3001               	movlw	1	; select bank2/3
 18254     0827  0087               	movwf	7
 18255     0828  3F40               	moviw [0]fsr1
 18256     0829  00F5               	movwf	??_fputc+2
 18257     082A  3F41               	moviw [1]fsr1
 18258     082B  00F6               	movwf	??_fputc+3
 18259     082C  0876               	movf	??_fputc+3,w
 18260     082D  3A80               	xorlw	128
 18261     082E  00F7               	movwf	??_fputc+4
 18262     082F  0874               	movf	??_fputc+1,w
 18263     0830  3A80               	xorlw	128
 18264     0831  0277               	subwf	??_fputc+4,w
 18265     0832  1D03               	skipz
 18266     0833  2836               	goto	u279_25
 18267     0834  0873               	movf	??_fputc,w
 18268     0835  0275               	subwf	??_fputc+2,w
 18269     0836                     u279_25:
 18270     0836  1803               	skipnc
 18271     0837  2839               	goto	u279_21
 18272     0838  283A               	goto	u279_20
 18273     0839                     u279_21:
 18274     0839  2856               	goto	i1l1928
 18275     083A                     u279_20:
 18276     083A                     i1l4165:
 18277     083A  0872               	movf	fputc@fp,w
 18278     083B  0086               	movwf	6
 18279     083C  3001               	movlw	1	; select bank2/3
 18280     083D  0087               	movwf	7
 18281     083E  0872               	movf	fputc@fp,w
 18282     083F  3E02               	addlw	2
 18283     0840  0084               	movwf	4
 18284     0841  3001               	movlw	1	; select bank2/3
 18285     0842  0085               	movwf	5
 18286     0843  0800               	movf	0,w
 18287     0844  0701               	addwf	1,w
 18288     0845  00F3               	movwf	??_fputc
 18289     0846  0873               	movf	??_fputc,w
 18290     0847  0086               	movwf	6
 18291     0848  3001               	movlw	1	; select bank2/3
 18292     0849  0087               	movwf	7
 18293     084A  0870               	movf	fputc@c,w
 18294     084B  0081               	movwf	1
 18295     084C                     i1l4167:
 18296     084C  0872               	movf	fputc@fp,w
 18297     084D  3E02               	addlw	2
 18298     084E  0086               	movwf	6
 18299     084F  3001               	movlw	1	; select bank2/3
 18300     0850  0087               	movwf	7
 18301     0851  3001               	movlw	1
 18302     0852  0781               	addwf	1,f
 18303     0853  3141               	addfsr 1,1
 18304     0854  1803               	skipnc
 18305     0855  0A81               	incf	1,f
 18306     0856                     i1l1928:
 18307     0856  0008               	return
 18308     0857                     __end_of_fputc:
 18309                           
 18310                           	psect	text80
 18311     1C1A                     __ptext80:	
 18312 ;; *************** function _putch *****************
 18313 ;; Defined at:
 18314 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
 18315 ;; Parameters:    Size  Location     Type
 18316 ;;  c               1    wreg     unsigned char 
 18317 ;; Auto vars:     Size  Location     Type
 18318 ;;  c               1    0[COMMON] unsigned char 
 18319 ;; Return value:  Size  Location     Type
 18320 ;;                  1    wreg      void 
 18321 ;; Registers used:
 18322 ;;		wreg
 18323 ;; Tracked objects:
 18324 ;;		On entry : 0/0
 18325 ;;		On exit  : 0/0
 18326 ;;		Unchanged: 0/0
 18327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18332 ;;Total ram usage:        0 bytes
 18333 ;; Hardware stack levels used: 1
 18334 ;; This function calls:
 18335 ;;		Nothing
 18336 ;; This function is called by:
 18337 ;;		_fputc
 18338 ;; This function uses a non-reentrant model
 18339 ;;
 18340                           
 18341     1C1A                     _putch:	
 18342                           ;psect for function _putch
 18343                           
 18344     1C1A                     i1l1939:	
 18345                           ;incstack = 0
 18346                           ; Regs used in _putch: [wreg]
 18347                           
 18348     1C1A  0008               	return
 18349     1C1B                     __end_of_putch:
 18350                           
 18351                           	psect	text81
 18352     1022                     __ptext81:	
 18353 ;; *************** function _memcpy *****************
 18354 ;; Defined at:
 18355 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 18356 ;; Parameters:    Size  Location     Type
 18357 ;;  d1              1    wreg     PTR void 
 18358 ;;		 -> dbuf(80), 
 18359 ;;  s1              1    0[COMMON] PTR const void 
 18360 ;;		 -> dbuf(80), 
 18361 ;;  n               2    1[COMMON] unsigned int 
 18362 ;; Auto vars:     Size  Location     Type
 18363 ;;  d1              1    5[COMMON] PTR void 
 18364 ;;		 -> dbuf(80), 
 18365 ;;  s               1    7[COMMON] PTR const unsigned char 
 18366 ;;		 -> dbuf(80), 
 18367 ;;  d               1    6[COMMON] PTR unsigned char 
 18368 ;;		 -> dbuf(80), 
 18369 ;;  tmp             1    4[COMMON] unsigned char 
 18370 ;; Return value:  Size  Location     Type
 18371 ;;                  1    wreg      PTR void 
 18372 ;; Registers used:
 18373 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18374 ;; Tracked objects:
 18375 ;;		On entry : 0/0
 18376 ;;		On exit  : 0/0
 18377 ;;		Unchanged: 0/0
 18378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18379 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18380 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18381 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18382 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18383 ;;Total ram usage:        8 bytes
 18384 ;; Hardware stack levels used: 1
 18385 ;; This function calls:
 18386 ;;		Nothing
 18387 ;; This function is called by:
 18388 ;;		_efgtoa
 18389 ;; This function uses a non-reentrant model
 18390 ;;
 18391                           
 18392     1022                     _memcpy:	
 18393                           ;psect for function _memcpy
 18394                           
 18395                           
 18396                           ;incstack = 0
 18397                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
 18398                           ;memcpy@d1 stored from wreg
 18399     1022  00F5               	movwf	memcpy@d1
 18400     1023                     i1l4861:
 18401     1023  0870               	movf	memcpy@s1,w
 18402     1024  00F7               	movwf	memcpy@s
 18403     1025  0875               	movf	memcpy@d1,w
 18404     1026  00F6               	movwf	memcpy@d
 18405     1027  283C               	goto	i1l1913
 18406     1028                     i1l4863:
 18407     1028  0877               	movf	memcpy@s,w
 18408     1029  0086               	movwf	6
 18409     102A  3002               	movlw	2	; select bank4/5
 18410     102B  0087               	movwf	7
 18411     102C  0801               	movf	1,w
 18412     102D  00F4               	movwf	memcpy@tmp
 18413     102E                     i1l4865:
 18414     102E  3001               	movlw	1
 18415     102F  00F3               	movwf	??_memcpy
 18416     1030  0873               	movf	??_memcpy,w
 18417     1031  07F7               	addwf	memcpy@s,f
 18418     1032                     i1l4867:
 18419     1032  0876               	movf	memcpy@d,w
 18420     1033  0086               	movwf	6
 18421     1034  3002               	movlw	2	; select bank4/5
 18422     1035  0087               	movwf	7
 18423     1036  0874               	movf	memcpy@tmp,w
 18424     1037  0081               	movwf	1
 18425     1038  3001               	movlw	1
 18426     1039  00F3               	movwf	??_memcpy
 18427     103A  0873               	movf	??_memcpy,w
 18428     103B  07F6               	addwf	memcpy@d,f
 18429     103C                     i1l1913:
 18430     103C  3001               	movlw	1
 18431     103D  02F1               	subwf	memcpy@n,f
 18432     103E  3000               	movlw	0
 18433     103F  3BF2               	subwfb	memcpy@n+1,f
 18434     1040  0A71               	incf	memcpy@n,w
 18435     1041  1D03               	skipz
 18436     1042  2847               	goto	u431_21
 18437     1043  0A72               	incf	memcpy@n+1,w
 18438     1044  1D03               	btfss	3,2
 18439     1045  2847               	goto	u431_21
 18440     1046  2848               	goto	u431_20
 18441     1047                     u431_21:
 18442     1047  2828               	goto	i1l4863
 18443     1048                     u431_20:
 18444     1048                     i1l1916:
 18445     1048  0008               	return
 18446     1049                     __end_of_memcpy:
 18447                           
 18448                           	psect	text82
 18449     1DDA                     __ptext82:	
 18450 ;; *************** function _labs *****************
 18451 ;; Defined at:
 18452 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
 18453 ;; Parameters:    Size  Location     Type
 18454 ;;  a               4    0[COMMON] long 
 18455 ;; Auto vars:     Size  Location     Type
 18456 ;;		None
 18457 ;; Return value:  Size  Location     Type
 18458 ;;                  4    0[COMMON] long 
 18459 ;; Registers used:
 18460 ;;		wreg, status,2, status,0
 18461 ;; Tracked objects:
 18462 ;;		On entry : 0/0
 18463 ;;		On exit  : 0/0
 18464 ;;		Unchanged: 0/0
 18465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18469 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18470 ;;Total ram usage:        4 bytes
 18471 ;; Hardware stack levels used: 1
 18472 ;; This function calls:
 18473 ;;		Nothing
 18474 ;; This function is called by:
 18475 ;;		_efgtoa
 18476 ;; This function uses a non-reentrant model
 18477 ;;
 18478                           
 18479     1DDA                     _labs:	
 18480                           ;psect for function _labs
 18481                           
 18482     1DDA                     i1l4823:	
 18483                           ;incstack = 0
 18484                           ; Regs used in _labs: [wreg+status,2+status,0]
 18485                           
 18486     1DDA  1BF3               	btfsc	labs@a+3,7
 18487     1DDB  2DDD               	goto	u419_21
 18488     1DDC  2DDE               	goto	u419_20
 18489     1DDD                     u419_21:
 18490     1DDD  2DDF               	goto	i1l4827
 18491     1DDE                     u419_20:
 18492     1DDE                     i1l4825:
 18493     1DDE  2DEE               	goto	i1l1910
 18494     1DDF                     i1l4827:
 18495     1DDF  0970               	comf	labs@a,w
 18496     1DE0  00F0               	movwf	?_labs
 18497     1DE1  0971               	comf	labs@a+1,w
 18498     1DE2  00F1               	movwf	?_labs+1
 18499     1DE3  0972               	comf	labs@a+2,w
 18500     1DE4  00F2               	movwf	?_labs+2
 18501     1DE5  0973               	comf	labs@a+3,w
 18502     1DE6  00F3               	movwf	?_labs+3
 18503     1DE7  0AF0               	incf	?_labs,f
 18504     1DE8  1903               	skipnz
 18505     1DE9  0AF1               	incf	?_labs+1,f
 18506     1DEA  1903               	skipnz
 18507     1DEB  0AF2               	incf	?_labs+2,f
 18508     1DEC  1903               	skipnz
 18509     1DED  0AF3               	incf	?_labs+3,f
 18510     1DEE                     i1l1910:
 18511     1DEE  0008               	return
 18512     1DEF                     __end_of_labs:
 18513                           
 18514                           	psect	text83
 18515     06A9                     __ptext83:	
 18516 ;; *************** function _floorf *****************
 18517 ;; Defined at:
 18518 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
 18519 ;; Parameters:    Size  Location     Type
 18520 ;;  x               4   58[BANK0 ] float 
 18521 ;; Auto vars:     Size  Location     Type
 18522 ;;  u               4   74[BANK0 ] struct .
 18523 ;;  m               4   68[BANK0 ] unsigned long 
 18524 ;;  e               2   72[BANK0 ] int 
 18525 ;; Return value:  Size  Location     Type
 18526 ;;                  4   58[BANK0 ] float 
 18527 ;; Registers used:
 18528 ;;		wreg, status,2, status,0
 18529 ;; Tracked objects:
 18530 ;;		On entry : 0/0
 18531 ;;		On exit  : 0/0
 18532 ;;		Unchanged: 0/0
 18533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18534 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18535 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18536 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18537 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18538 ;;Total ram usage:       20 bytes
 18539 ;; Hardware stack levels used: 1
 18540 ;; This function calls:
 18541 ;;		Nothing
 18542 ;; This function is called by:
 18543 ;;		_efgtoa
 18544 ;; This function uses a non-reentrant model
 18545 ;;
 18546                           
 18547     06A9                     _floorf:	
 18548                           ;psect for function _floorf
 18549                           
 18550     06A9                     i1l4831:	
 18551                           ;incstack = 0
 18552                           ; Regs used in _floorf: [wreg+status,2+status,0]
 18553                           
 18554     06A9  0023               	movlb	3	; select bank3
 18555     06AA  0823               	movf	(floorf@F521+3)^(0+384),w
 18556     06AB  0020               	movlb	0	; select bank0
 18557     06AC  00ED               	movwf	floorf@u+3
 18558     06AD  0023               	movlb	3	; select bank3
 18559     06AE  0822               	movf	(floorf@F521+2)^(0+384),w
 18560     06AF  0020               	movlb	0	; select bank0
 18561     06B0  00EC               	movwf	floorf@u+2
 18562     06B1  0023               	movlb	3	; select bank3
 18563     06B2  0821               	movf	(floorf@F521+1)^(0+384),w
 18564     06B3  0020               	movlb	0	; select bank0
 18565     06B4  00EB               	movwf	floorf@u+1
 18566     06B5  0023               	movlb	3	; select bank3
 18567     06B6  0820               	movf	floorf@F521^(0+384),w
 18568     06B7  0020               	movlb	0	; select bank0
 18569     06B8  00EA               	movwf	floorf@u
 18570     06B9  085D               	movf	floorf@x+3,w
 18571     06BA  00ED               	movwf	floorf@u+3
 18572     06BB  085C               	movf	floorf@x+2,w
 18573     06BC  00EC               	movwf	floorf@u+2
 18574     06BD  085B               	movf	floorf@x+1,w
 18575     06BE  00EB               	movwf	floorf@u+1
 18576     06BF  085A               	movf	floorf@x,w
 18577     06C0  00EA               	movwf	floorf@u
 18578     06C1                     i1l4833:
 18579     06C1  086A               	movf	floorf@u,w
 18580     06C2  00DE               	movwf	??_floorf
 18581     06C3  086B               	movf	floorf@u+1,w
 18582     06C4  00DF               	movwf	??_floorf+1
 18583     06C5  086C               	movf	floorf@u+2,w
 18584     06C6  00E0               	movwf	??_floorf+2
 18585     06C7  086D               	movf	floorf@u+3,w
 18586     06C8  00E1               	movwf	??_floorf+3
 18587     06C9  3017               	movlw	23
 18588     06CA                     u420_25:
 18589     06CA  36E1               	lsrf	??_floorf+3,f
 18590     06CB  0CE0               	rrf	??_floorf+2,f
 18591     06CC  0CDF               	rrf	??_floorf+1,f
 18592     06CD  0CDE               	rrf	??_floorf,f
 18593     06CE                     u420_20:
 18594     06CE  0B89               	decfsz	9,f
 18595     06CF  2ECA               	goto	u420_25
 18596     06D0  30FF               	movlw	255
 18597     06D1  055E               	andwf	??_floorf,w
 18598     06D2  00E2               	movwf	??_floorf+4
 18599     06D3  3000               	movlw	0
 18600     06D4  055F               	andwf	??_floorf+1,w
 18601     06D5  00E3               	movwf	??_floorf+5
 18602     06D6  0862               	movf	??_floorf+4,w
 18603     06D7  3E81               	addlw	129
 18604     06D8  00E8               	movwf	floorf@e
 18605     06D9  30FF               	movlw	255
 18606     06DA  3D63               	addwfc	??_floorf+5,w
 18607     06DB  00E9               	movwf	floorf@e+1
 18608     06DC                     i1l4835:
 18609     06DC  0869               	movf	floorf@e+1,w
 18610     06DD  3A80               	xorlw	128
 18611     06DE  00DE               	movwf	??_floorf
 18612     06DF  3080               	movlw	128
 18613     06E0  025E               	subwf	??_floorf,w
 18614     06E1  1D03               	skipz
 18615     06E2  2EE5               	goto	u421_25
 18616     06E3  3017               	movlw	23
 18617     06E4  0268               	subwf	floorf@e,w
 18618     06E5                     u421_25:
 18619     06E5  1C03               	skipc
 18620     06E6  2EE8               	goto	u421_21
 18621     06E7  2EE9               	goto	u421_20
 18622     06E8                     u421_21:
 18623     06E8  2EEA               	goto	i1l1895
 18624     06E9                     u421_20:
 18625     06E9                     i1l4837:
 18626     06E9  2F93               	goto	i1l1896
 18627     06EA                     i1l1895:
 18628     06EA  0020               	movlb	0	; select bank0
 18629     06EB  1BE9               	btfsc	floorf@e+1,7
 18630     06EC  2EEE               	goto	u422_21
 18631     06ED  2EEF               	goto	u422_20
 18632     06EE                     u422_21:
 18633     06EE  2F4C               	goto	i1l4851
 18634     06EF                     u422_20:
 18635     06EF                     i1l4839:
 18636     06EF  30FF               	movlw	255
 18637     06F0  00DE               	movwf	??_floorf
 18638     06F1  30FF               	movlw	255
 18639     06F2  00DF               	movwf	??_floorf+1
 18640     06F3  307F               	movlw	127
 18641     06F4  00E0               	movwf	??_floorf+2
 18642     06F5  3000               	movlw	0
 18643     06F6  00E1               	movwf	??_floorf+3
 18644     06F7  0A68               	incf	floorf@e,w
 18645     06F8  2EFD               	goto	u423_20
 18646     06F9                     u423_25:
 18647     06F9  37E1               	asrf	??_floorf+3,f
 18648     06FA  0CE0               	rrf	??_floorf+2,f
 18649     06FB  0CDF               	rrf	??_floorf+1,f
 18650     06FC  0CDE               	rrf	??_floorf,f
 18651     06FD                     u423_20:
 18652     06FD  0B89               	decfsz	9,f
 18653     06FE  2EF9               	goto	u423_25
 18654     06FF  0861               	movf	??_floorf+3,w
 18655     0700  00E7               	movwf	floorf@m+3
 18656     0701  0860               	movf	??_floorf+2,w
 18657     0702  00E6               	movwf	floorf@m+2
 18658     0703  085F               	movf	??_floorf+1,w
 18659     0704  00E5               	movwf	floorf@m+1
 18660     0705  085E               	movf	??_floorf,w
 18661     0706  00E4               	movwf	floorf@m
 18662     0707                     i1l4841:
 18663     0707  086A               	movf	floorf@u,w
 18664     0708  0564               	andwf	floorf@m,w
 18665     0709  00DE               	movwf	??_floorf
 18666     070A  086B               	movf	floorf@u+1,w
 18667     070B  0565               	andwf	floorf@m+1,w
 18668     070C  00DF               	movwf	??_floorf+1
 18669     070D  086C               	movf	floorf@u+2,w
 18670     070E  0566               	andwf	floorf@m+2,w
 18671     070F  00E0               	movwf	??_floorf+2
 18672     0710  086D               	movf	floorf@u+3,w
 18673     0711  0567               	andwf	floorf@m+3,w
 18674     0712  00E1               	movwf	??_floorf+3
 18675     0713  0861               	movf	??_floorf+3,w
 18676     0714  0460               	iorwf	??_floorf+2,w
 18677     0715  045F               	iorwf	??_floorf+1,w
 18678     0716  045E               	iorwf	??_floorf,w
 18679     0717  1D03               	skipz
 18680     0718  2F1A               	goto	u424_21
 18681     0719  2F1B               	goto	u424_20
 18682     071A                     u424_21:
 18683     071A  2F1C               	goto	i1l4845
 18684     071B                     u424_20:
 18685     071B  2EE9               	goto	i1l4837
 18686     071C                     i1l4845:
 18687     071C  086A               	movf	floorf@u,w
 18688     071D  00DE               	movwf	??_floorf
 18689     071E  086B               	movf	floorf@u+1,w
 18690     071F  00DF               	movwf	??_floorf+1
 18691     0720  086C               	movf	floorf@u+2,w
 18692     0721  00E0               	movwf	??_floorf+2
 18693     0722  086D               	movf	floorf@u+3,w
 18694     0723  00E1               	movwf	??_floorf+3
 18695     0724  301F               	movlw	31
 18696     0725                     u425_25:
 18697     0725  36E1               	lsrf	??_floorf+3,f
 18698     0726  0CE0               	rrf	??_floorf+2,f
 18699     0727  0CDF               	rrf	??_floorf+1,f
 18700     0728  0CDE               	rrf	??_floorf,f
 18701     0729                     u425_20:
 18702     0729  0B89               	decfsz	9,f
 18703     072A  2F25               	goto	u425_25
 18704     072B  0861               	movf	??_floorf+3,w
 18705     072C  0460               	iorwf	??_floorf+2,w
 18706     072D  045F               	iorwf	??_floorf+1,w
 18707     072E  045E               	iorwf	??_floorf,w
 18708     072F  1903               	skipnz
 18709     0730  2F32               	goto	u426_21
 18710     0731  2F33               	goto	u426_20
 18711     0732                     u426_21:
 18712     0732  2F3B               	goto	i1l4849
 18713     0733                     u426_20:
 18714     0733                     i1l4847:
 18715     0733  0864               	movf	floorf@m,w
 18716     0734  07EA               	addwf	floorf@u,f
 18717     0735  0865               	movf	floorf@m+1,w
 18718     0736  3DEB               	addwfc	floorf@u+1,f
 18719     0737  0866               	movf	floorf@m+2,w
 18720     0738  3DEC               	addwfc	floorf@u+2,f
 18721     0739  0867               	movf	floorf@m+3,w
 18722     073A  3DED               	addwfc	floorf@u+3,f
 18723     073B                     i1l4849:
 18724     073B  0964               	comf	floorf@m,w
 18725     073C  00DE               	movwf	??_floorf
 18726     073D  0965               	comf	floorf@m+1,w
 18727     073E  00DF               	movwf	??_floorf+1
 18728     073F  0966               	comf	floorf@m+2,w
 18729     0740  00E0               	movwf	??_floorf+2
 18730     0741  0967               	comf	floorf@m+3,w
 18731     0742  00E1               	movwf	??_floorf+3
 18732     0743  085E               	movf	??_floorf,w
 18733     0744  05EA               	andwf	floorf@u,f
 18734     0745  085F               	movf	??_floorf+1,w
 18735     0746  05EB               	andwf	floorf@u+1,f
 18736     0747  0860               	movf	??_floorf+2,w
 18737     0748  05EC               	andwf	floorf@u+2,f
 18738     0749  0861               	movf	??_floorf+3,w
 18739     074A  05ED               	andwf	floorf@u+3,f
 18740     074B  2F8B               	goto	i1l1900
 18741     074C                     i1l4851:
 18742     074C  086A               	movf	floorf@u,w
 18743     074D  00DE               	movwf	??_floorf
 18744     074E  086B               	movf	floorf@u+1,w
 18745     074F  00DF               	movwf	??_floorf+1
 18746     0750  086C               	movf	floorf@u+2,w
 18747     0751  00E0               	movwf	??_floorf+2
 18748     0752  086D               	movf	floorf@u+3,w
 18749     0753  00E1               	movwf	??_floorf+3
 18750     0754  301F               	movlw	31
 18751     0755                     u427_25:
 18752     0755  36E1               	lsrf	??_floorf+3,f
 18753     0756  0CE0               	rrf	??_floorf+2,f
 18754     0757  0CDF               	rrf	??_floorf+1,f
 18755     0758  0CDE               	rrf	??_floorf,f
 18756     0759                     u427_20:
 18757     0759  0B89               	decfsz	9,f
 18758     075A  2F55               	goto	u427_25
 18759     075B  0861               	movf	??_floorf+3,w
 18760     075C  0460               	iorwf	??_floorf+2,w
 18761     075D  045F               	iorwf	??_floorf+1,w
 18762     075E  045E               	iorwf	??_floorf,w
 18763     075F  1D03               	skipz
 18764     0760  2F62               	goto	u428_21
 18765     0761  2F63               	goto	u428_20
 18766     0762                     u428_21:
 18767     0762  2F6C               	goto	i1l4855
 18768     0763                     u428_20:
 18769     0763                     i1l4853:
 18770     0763  3000               	movlw	0
 18771     0764  00ED               	movwf	floorf@u+3
 18772     0765  3000               	movlw	0
 18773     0766  00EC               	movwf	floorf@u+2
 18774     0767  3000               	movlw	0
 18775     0768  00EB               	movwf	floorf@u+1
 18776     0769  3000               	movlw	0
 18777     076A  00EA               	movwf	floorf@u
 18778     076B  2F8B               	goto	i1l1900
 18779     076C                     i1l4855:
 18780     076C  086A               	movf	floorf@u,w
 18781     076D  00DE               	movwf	??_floorf
 18782     076E  086B               	movf	floorf@u+1,w
 18783     076F  00DF               	movwf	??_floorf+1
 18784     0770  086C               	movf	floorf@u+2,w
 18785     0771  00E0               	movwf	??_floorf+2
 18786     0772  086D               	movf	floorf@u+3,w
 18787     0773  00E1               	movwf	??_floorf+3
 18788     0774  3001               	movlw	1
 18789     0775                     u429_25:
 18790     0775  35DE               	lslf	??_floorf,f
 18791     0776  0DDF               	rlf	??_floorf+1,f
 18792     0777  0DE0               	rlf	??_floorf+2,f
 18793     0778  0DE1               	rlf	??_floorf+3,f
 18794     0779                     u429_20:
 18795     0779  0B89               	decfsz	9,f
 18796     077A  2F75               	goto	u429_25
 18797     077B  0861               	movf	??_floorf+3,w
 18798     077C  0460               	iorwf	??_floorf+2,w
 18799     077D  045F               	iorwf	??_floorf+1,w
 18800     077E  045E               	iorwf	??_floorf,w
 18801     077F  1903               	skipnz
 18802     0780  2F82               	goto	u430_21
 18803     0781  2F83               	goto	u430_20
 18804     0782                     u430_21:
 18805     0782  2F8B               	goto	i1l1900
 18806     0783                     u430_20:
 18807     0783                     i1l4857:
 18808     0783  30BF               	movlw	191
 18809     0784  00ED               	movwf	floorf@u+3
 18810     0785  3080               	movlw	128
 18811     0786  00EC               	movwf	floorf@u+2
 18812     0787  3000               	movlw	0
 18813     0788  00EB               	movwf	floorf@u+1
 18814     0789  3000               	movlw	0
 18815     078A  00EA               	movwf	floorf@u
 18816     078B                     i1l1900:
 18817     078B  086D               	movf	floorf@u+3,w
 18818     078C  00DD               	movwf	?_floorf+3
 18819     078D  086C               	movf	floorf@u+2,w
 18820     078E  00DC               	movwf	?_floorf+2
 18821     078F  086B               	movf	floorf@u+1,w
 18822     0790  00DB               	movwf	?_floorf+1
 18823     0791  086A               	movf	floorf@u,w
 18824     0792  00DA               	movwf	?_floorf
 18825     0793                     i1l1896:
 18826     0793  0008               	return
 18827     0794                     __end_of_floorf:
 18828                           
 18829                           	psect	text84
 18830     138C                     __ptext84:	
 18831 ;; *************** function ___fpclassifyf *****************
 18832 ;; Defined at:
 18833 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
 18834 ;; Parameters:    Size  Location     Type
 18835 ;;  x               4    0[COMMON] float 
 18836 ;; Auto vars:     Size  Location     Type
 18837 ;;  u               4    2[BANK0 ] struct .
 18838 ;;  e               2    0[BANK0 ] int 
 18839 ;; Return value:  Size  Location     Type
 18840 ;;                  2    0[COMMON] int 
 18841 ;; Registers used:
 18842 ;;		wreg, status,2, status,0
 18843 ;; Tracked objects:
 18844 ;;		On entry : 0/0
 18845 ;;		On exit  : 0/0
 18846 ;;		Unchanged: 0/0
 18847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18849 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18850 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18851 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18852 ;;Total ram usage:       16 bytes
 18853 ;; Hardware stack levels used: 1
 18854 ;; This function calls:
 18855 ;;		Nothing
 18856 ;; This function is called by:
 18857 ;;		_efgtoa
 18858 ;; This function uses a non-reentrant model
 18859 ;;
 18860                           
 18861     138C                     ___fpclassifyf:	
 18862                           ;psect for function ___fpclassifyf
 18863                           
 18864     138C                     i1l4795:	
 18865                           ;incstack = 0
 18866                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 18867                           
 18868     138C  0023               	movlb	3	; select bank3
 18869     138D  0827               	movf	(___fpclassifyf@F465+3)^(0+384),w
 18870     138E  0020               	movlb	0	; select bank0
 18871     138F  00A5               	movwf	___fpclassifyf@u+3
 18872     1390  0023               	movlb	3	; select bank3
 18873     1391  0826               	movf	(___fpclassifyf@F465+2)^(0+384),w
 18874     1392  0020               	movlb	0	; select bank0
 18875     1393  00A4               	movwf	___fpclassifyf@u+2
 18876     1394  0023               	movlb	3	; select bank3
 18877     1395  0825               	movf	(___fpclassifyf@F465+1)^(0+384),w
 18878     1396  0020               	movlb	0	; select bank0
 18879     1397  00A3               	movwf	___fpclassifyf@u+1
 18880     1398  0023               	movlb	3	; select bank3
 18881     1399  0824               	movf	___fpclassifyf@F465^(0+384),w
 18882     139A  0020               	movlb	0	; select bank0
 18883     139B  00A2               	movwf	___fpclassifyf@u
 18884     139C  0873               	movf	___fpclassifyf@x+3,w
 18885     139D  00A5               	movwf	___fpclassifyf@u+3
 18886     139E  0872               	movf	___fpclassifyf@x+2,w
 18887     139F  00A4               	movwf	___fpclassifyf@u+2
 18888     13A0  0871               	movf	___fpclassifyf@x+1,w
 18889     13A1  00A3               	movwf	___fpclassifyf@u+1
 18890     13A2  0870               	movf	___fpclassifyf@x,w
 18891     13A3  00A2               	movwf	___fpclassifyf@u
 18892     13A4                     i1l4797:
 18893     13A4  0822               	movf	___fpclassifyf@u,w
 18894     13A5  00F4               	movwf	??___fpclassifyf
 18895     13A6  0823               	movf	___fpclassifyf@u+1,w
 18896     13A7  00F5               	movwf	??___fpclassifyf+1
 18897     13A8  0824               	movf	___fpclassifyf@u+2,w
 18898     13A9  00F6               	movwf	??___fpclassifyf+2
 18899     13AA  0825               	movf	___fpclassifyf@u+3,w
 18900     13AB  00F7               	movwf	??___fpclassifyf+3
 18901     13AC  3017               	movlw	23
 18902     13AD                     u410_25:
 18903     13AD  36F7               	lsrf	??___fpclassifyf+3,f
 18904     13AE  0CF6               	rrf	??___fpclassifyf+2,f
 18905     13AF  0CF5               	rrf	??___fpclassifyf+1,f
 18906     13B0  0CF4               	rrf	??___fpclassifyf,f
 18907     13B1                     u410_20:
 18908     13B1  0B89               	decfsz	9,f
 18909     13B2  2BAD               	goto	u410_25
 18910     13B3  30FF               	movlw	255
 18911     13B4  0574               	andwf	??___fpclassifyf,w
 18912     13B5  00A0               	movwf	___fpclassifyf@e
 18913     13B6  3000               	movlw	0
 18914     13B7  0575               	andwf	??___fpclassifyf+1,w
 18915     13B8  00A1               	movwf	___fpclassifyf@e+1
 18916     13B9                     i1l4799:
 18917     13B9  0820               	movf	___fpclassifyf@e,w
 18918     13BA  0421               	iorwf	___fpclassifyf@e+1,w
 18919     13BB  1D03               	btfss	3,2
 18920     13BC  2BBE               	goto	u411_21
 18921     13BD  2BBF               	goto	u411_20
 18922     13BE                     u411_21:
 18923     13BE  2BE0               	goto	i1l4809
 18924     13BF                     u411_20:
 18925     13BF                     i1l4801:
 18926     13BF  0822               	movf	___fpclassifyf@u,w
 18927     13C0  00F4               	movwf	??___fpclassifyf
 18928     13C1  0823               	movf	___fpclassifyf@u+1,w
 18929     13C2  00F5               	movwf	??___fpclassifyf+1
 18930     13C3  0824               	movf	___fpclassifyf@u+2,w
 18931     13C4  00F6               	movwf	??___fpclassifyf+2
 18932     13C5  0825               	movf	___fpclassifyf@u+3,w
 18933     13C6  00F7               	movwf	??___fpclassifyf+3
 18934     13C7  3001               	movlw	1
 18935     13C8                     u412_25:
 18936     13C8  35F4               	lslf	??___fpclassifyf,f
 18937     13C9  0DF5               	rlf	??___fpclassifyf+1,f
 18938     13CA  0DF6               	rlf	??___fpclassifyf+2,f
 18939     13CB  0DF7               	rlf	??___fpclassifyf+3,f
 18940     13CC                     u412_20:
 18941     13CC  0B89               	decfsz	9,f
 18942     13CD  2BC8               	goto	u412_25
 18943     13CE  0877               	movf	??___fpclassifyf+3,w
 18944     13CF  0476               	iorwf	??___fpclassifyf+2,w
 18945     13D0  0475               	iorwf	??___fpclassifyf+1,w
 18946     13D1  0474               	iorwf	??___fpclassifyf,w
 18947     13D2  1D03               	skipz
 18948     13D3  2BD5               	goto	u413_21
 18949     13D4  2BD6               	goto	u413_20
 18950     13D5                     u413_21:
 18951     13D5  2BDB               	goto	i1l4805
 18952     13D6                     u413_20:
 18953     13D6                     i1l4803:
 18954     13D6  3002               	movlw	2
 18955     13D7  00F0               	movwf	?___fpclassifyf
 18956     13D8  3000               	movlw	0
 18957     13D9  00F1               	movwf	?___fpclassifyf+1
 18958     13DA  2C0A               	goto	i1l1889
 18959     13DB                     i1l4805:
 18960     13DB  3003               	movlw	3
 18961     13DC  00F0               	movwf	?___fpclassifyf
 18962     13DD  3000               	movlw	0
 18963     13DE  00F1               	movwf	?___fpclassifyf+1
 18964     13DF  2C0A               	goto	i1l1889
 18965     13E0                     i1l4809:
 18966     13E0  0A20               	incf	___fpclassifyf@e,w
 18967     13E1  0421               	iorwf	___fpclassifyf@e+1,w
 18968     13E2  1D03               	btfss	3,2
 18969     13E3  2BE5               	goto	u414_21
 18970     13E4  2BE6               	goto	u414_20
 18971     13E5                     u414_21:
 18972     13E5  2C06               	goto	i1l4815
 18973     13E6                     u414_20:
 18974     13E6                     i1l4811:
 18975     13E6  0822               	movf	___fpclassifyf@u,w
 18976     13E7  00F4               	movwf	??___fpclassifyf
 18977     13E8  0823               	movf	___fpclassifyf@u+1,w
 18978     13E9  00F5               	movwf	??___fpclassifyf+1
 18979     13EA  0824               	movf	___fpclassifyf@u+2,w
 18980     13EB  00F6               	movwf	??___fpclassifyf+2
 18981     13EC  0825               	movf	___fpclassifyf@u+3,w
 18982     13ED  00F7               	movwf	??___fpclassifyf+3
 18983     13EE  3009               	movlw	9
 18984     13EF                     u415_25:
 18985     13EF  35F4               	lslf	??___fpclassifyf,f
 18986     13F0  0DF5               	rlf	??___fpclassifyf+1,f
 18987     13F1  0DF6               	rlf	??___fpclassifyf+2,f
 18988     13F2  0DF7               	rlf	??___fpclassifyf+3,f
 18989     13F3                     u415_20:
 18990     13F3  0B89               	decfsz	9,f
 18991     13F4  2BEF               	goto	u415_25
 18992     13F5  0877               	movf	??___fpclassifyf+3,w
 18993     13F6  0476               	iorwf	??___fpclassifyf+2,w
 18994     13F7  0475               	iorwf	??___fpclassifyf+1,w
 18995     13F8  0474               	iorwf	??___fpclassifyf,w
 18996     13F9  1903               	skipnz
 18997     13FA  2BFC               	goto	u416_21
 18998     13FB  2BFE               	goto	u416_20
 18999     13FC                     u416_21:
 19000     13FC  3001               	movlw	1
 19001     13FD  2BFF               	goto	u417_20
 19002     13FE                     u416_20:
 19003     13FE  3000               	movlw	0
 19004     13FF                     u417_20:
 19005     13FF  00F8               	movwf	??___fpclassifyf+4
 19006     1400  01F9               	clrf	??___fpclassifyf+5
 19007     1401  0878               	movf	??___fpclassifyf+4,w
 19008     1402  00F0               	movwf	?___fpclassifyf
 19009     1403  0879               	movf	??___fpclassifyf+5,w
 19010     1404  00F1               	movwf	?___fpclassifyf+1
 19011     1405  2C0A               	goto	i1l1889
 19012     1406                     i1l4815:
 19013     1406  3004               	movlw	4
 19014     1407  00F0               	movwf	?___fpclassifyf
 19015     1408  3000               	movlw	0
 19016     1409  00F1               	movwf	?___fpclassifyf+1
 19017     140A                     i1l1889:
 19018     140A  0008               	return
 19019     140B                     __end_of___fpclassifyf:
 19020                           
 19021                           	psect	text85
 19022     12A4                     __ptext85:	
 19023 ;; *************** function ___fltol *****************
 19024 ;; Defined at:
 19025 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
 19026 ;; Parameters:    Size  Location     Type
 19027 ;;  f1              4    0[COMMON] int 
 19028 ;; Auto vars:     Size  Location     Type
 19029 ;;  exp1            1    9[COMMON] unsigned char 
 19030 ;;  sign1           1    8[COMMON] unsigned char 
 19031 ;; Return value:  Size  Location     Type
 19032 ;;                  4    0[COMMON] long 
 19033 ;; Registers used:
 19034 ;;		wreg, status,2, status,0
 19035 ;; Tracked objects:
 19036 ;;		On entry : 0/0
 19037 ;;		On exit  : 0/0
 19038 ;;		Unchanged: 0/0
 19039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19040 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19042 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19043 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19044 ;;Total ram usage:       10 bytes
 19045 ;; Hardware stack levels used: 1
 19046 ;; This function calls:
 19047 ;;		Nothing
 19048 ;; This function is called by:
 19049 ;;		_efgtoa
 19050 ;;		_get_distance_from_supersonic
 19051 ;; This function uses a non-reentrant model
 19052 ;;
 19053                           
 19054     12A4                     ___fltol:	
 19055                           ;psect for function ___fltol
 19056                           
 19057     12A4                     i1l4461:	
 19058                           ;incstack = 0
 19059                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 19060                           
 19061     12A4  1003               	clrc
 19062     12A5  0D72               	rlf	___fltol@f1+2,w
 19063     12A6  0D73               	rlf	___fltol@f1+3,w
 19064     12A7  00F9               	movwf	___fltol@exp1
 19065     12A8  0879               	movf	___fltol@exp1,w
 19066     12A9  1D03               	btfss	3,2
 19067     12AA  2AAC               	goto	u343_21
 19068     12AB  2AAD               	goto	u343_20
 19069     12AC                     u343_21:
 19070     12AC  2AB6               	goto	i1l4467
 19071     12AD                     u343_20:
 19072     12AD                     i1l4463:
 19073     12AD  3000               	movlw	0
 19074     12AE  00F3               	movwf	?___fltol+3
 19075     12AF  3000               	movlw	0
 19076     12B0  00F2               	movwf	?___fltol+2
 19077     12B1  3000               	movlw	0
 19078     12B2  00F1               	movwf	?___fltol+1
 19079     12B3  3000               	movlw	0
 19080     12B4  00F0               	movwf	?___fltol
 19081     12B5  2B13               	goto	i1l1462
 19082     12B6                     i1l4467:
 19083     12B6  0870               	movf	___fltol@f1,w
 19084     12B7  00F4               	movwf	??___fltol
 19085     12B8  0871               	movf	___fltol@f1+1,w
 19086     12B9  00F5               	movwf	??___fltol+1
 19087     12BA  0872               	movf	___fltol@f1+2,w
 19088     12BB  00F6               	movwf	??___fltol+2
 19089     12BC  0873               	movf	___fltol@f1+3,w
 19090     12BD  00F7               	movwf	??___fltol+3
 19091     12BE  301F               	movlw	31
 19092     12BF                     u344_25:
 19093     12BF  36F7               	lsrf	??___fltol+3,f
 19094     12C0  0CF6               	rrf	??___fltol+2,f
 19095     12C1  0CF5               	rrf	??___fltol+1,f
 19096     12C2  0CF4               	rrf	??___fltol,f
 19097     12C3                     u344_20:
 19098     12C3  0B89               	decfsz	9,f
 19099     12C4  2ABF               	goto	u344_25
 19100     12C5  0874               	movf	??___fltol,w
 19101     12C6  00F8               	movwf	___fltol@sign1
 19102     12C7                     i1l4469:
 19103     12C7  17F2               	bsf	___fltol@f1+2,7
 19104     12C8                     i1l4471:
 19105     12C8  30FF               	movlw	255
 19106     12C9  05F0               	andwf	___fltol@f1,f
 19107     12CA  30FF               	movlw	255
 19108     12CB  05F1               	andwf	___fltol@f1+1,f
 19109     12CC  30FF               	movlw	255
 19110     12CD  05F2               	andwf	___fltol@f1+2,f
 19111     12CE  3000               	movlw	0
 19112     12CF  05F3               	andwf	___fltol@f1+3,f
 19113     12D0                     i1l4473:
 19114     12D0  3096               	movlw	150
 19115     12D1  02F9               	subwf	___fltol@exp1,f
 19116     12D2                     i1l4475:
 19117     12D2  1FF9               	btfss	___fltol@exp1,7
 19118     12D3  2AD5               	goto	u345_21
 19119     12D4  2AD6               	goto	u345_20
 19120     12D5                     u345_21:
 19121     12D5  2AEE               	goto	i1l4485
 19122     12D6                     u345_20:
 19123     12D6                     i1l4477:
 19124     12D6  0879               	movf	___fltol@exp1,w
 19125     12D7  3A80               	xorlw	128
 19126     12D8  3E97               	addlw	151
 19127     12D9  1803               	skipnc
 19128     12DA  2ADC               	goto	u346_21
 19129     12DB  2ADD               	goto	u346_20
 19130     12DC                     u346_21:
 19131     12DC  2ADE               	goto	i1l4483
 19132     12DD                     u346_20:
 19133     12DD  2AAD               	goto	i1l4463
 19134     12DE                     i1l4483:
 19135     12DE  3001               	movlw	1
 19136     12DF                     u347_25:
 19137     12DF  36F3               	lsrf	___fltol@f1+3,f
 19138     12E0  0CF2               	rrf	___fltol@f1+2,f
 19139     12E1  0CF1               	rrf	___fltol@f1+1,f
 19140     12E2  0CF0               	rrf	___fltol@f1,f
 19141     12E3  0B89               	decfsz	9,f
 19142     12E4  2ADF               	goto	u347_25
 19143     12E5  3001               	movlw	1
 19144     12E6  00F4               	movwf	??___fltol
 19145     12E7  0874               	movf	??___fltol,w
 19146     12E8  07F9               	addwf	___fltol@exp1,f
 19147     12E9  1D03               	btfss	3,2
 19148     12EA  2AEC               	goto	u348_21
 19149     12EB  2AED               	goto	u348_20
 19150     12EC                     u348_21:
 19151     12EC  2ADE               	goto	i1l4483
 19152     12ED                     u348_20:
 19153     12ED  2B03               	goto	i1l4493
 19154     12EE                     i1l4485:
 19155     12EE  3020               	movlw	32
 19156     12EF  0279               	subwf	___fltol@exp1,w
 19157     12F0  1C03               	skipc
 19158     12F1  2AF3               	goto	u349_21
 19159     12F2  2AF4               	goto	u349_20
 19160     12F3                     u349_21:
 19161     12F3  2AFE               	goto	i1l1469
 19162     12F4                     u349_20:
 19163     12F4  2AAD               	goto	i1l4463
 19164     12F5                     i1l4491:
 19165     12F5  3001               	movlw	1
 19166     12F6                     u350_25:
 19167     12F6  35F0               	lslf	___fltol@f1,f
 19168     12F7  0DF1               	rlf	___fltol@f1+1,f
 19169     12F8  0DF2               	rlf	___fltol@f1+2,f
 19170     12F9  0DF3               	rlf	___fltol@f1+3,f
 19171     12FA  0B89               	decfsz	9,f
 19172     12FB  2AF6               	goto	u350_25
 19173     12FC  3001               	movlw	1
 19174     12FD  02F9               	subwf	___fltol@exp1,f
 19175     12FE                     i1l1469:
 19176     12FE  0879               	movf	___fltol@exp1,w
 19177     12FF  1D03               	btfss	3,2
 19178     1300  2B02               	goto	u351_21
 19179     1301  2B03               	goto	u351_20
 19180     1302                     u351_21:
 19181     1302  2AF5               	goto	i1l4491
 19182     1303                     u351_20:
 19183     1303                     i1l4493:
 19184     1303  0878               	movf	___fltol@sign1,w
 19185     1304  1903               	btfsc	3,2
 19186     1305  2B07               	goto	u352_21
 19187     1306  2B08               	goto	u352_20
 19188     1307                     u352_21:
 19189     1307  2B13               	goto	i1l1472
 19190     1308                     u352_20:
 19191     1308                     i1l4495:
 19192     1308  09F0               	comf	___fltol@f1,f
 19193     1309  09F1               	comf	___fltol@f1+1,f
 19194     130A  09F2               	comf	___fltol@f1+2,f
 19195     130B  09F3               	comf	___fltol@f1+3,f
 19196     130C  0AF0               	incf	___fltol@f1,f
 19197     130D  1903               	skipnz
 19198     130E  0AF1               	incf	___fltol@f1+1,f
 19199     130F  1903               	skipnz
 19200     1310  0AF2               	incf	___fltol@f1+2,f
 19201     1311  1903               	skipnz
 19202     1312  0AF3               	incf	___fltol@f1+3,f
 19203     1313                     i1l1472:
 19204     1313                     i1l1462:
 19205     1313  0008               	return
 19206     1314                     __end_of___fltol:
 19207                           
 19208                           	psect	text86
 19209     1EEA                     __ptext86:	
 19210 ;; *************** function ___flsub *****************
 19211 ;; Defined at:
 19212 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 19213 ;; Parameters:    Size  Location     Type
 19214 ;;  a               4   32[BANK0 ] long 
 19215 ;;  b               4   36[BANK0 ] long 
 19216 ;; Auto vars:     Size  Location     Type
 19217 ;;		None
 19218 ;; Return value:  Size  Location     Type
 19219 ;;                  4   32[BANK0 ] long 
 19220 ;; Registers used:
 19221 ;;		wreg, status,2, status,0, pclath, cstack
 19222 ;; Tracked objects:
 19223 ;;		On entry : 0/0
 19224 ;;		On exit  : 0/0
 19225 ;;		Unchanged: 0/0
 19226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19227 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19230 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19231 ;;Total ram usage:        8 bytes
 19232 ;; Hardware stack levels used: 1
 19233 ;; Hardware stack levels required when called: 1
 19234 ;; This function calls:
 19235 ;;		___fladd
 19236 ;; This function is called by:
 19237 ;;		_efgtoa
 19238 ;; This function uses a non-reentrant model
 19239 ;;
 19240                           
 19241     1EEA                     ___flsub:	
 19242                           ;psect for function ___flsub
 19243                           
 19244     1EEA                     i1l4497:	
 19245                           ;incstack = 0
 19246                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 19247                           
 19248     1EEA  3080               	movlw	128
 19249     1EEB  0020               	movlb	0	; select bank0
 19250     1EEC  06C3               	xorwf	___flsub@a+3,f
 19251     1EED                     i1l4499:
 19252     1EED  0847               	movf	___flsub@b+3,w
 19253     1EEE  00F3               	movwf	___fladd@b+3
 19254     1EEF  0846               	movf	___flsub@b+2,w
 19255     1EF0  00F2               	movwf	___fladd@b+2
 19256     1EF1  0845               	movf	___flsub@b+1,w
 19257     1EF2  00F1               	movwf	___fladd@b+1
 19258     1EF3  0844               	movf	___flsub@b,w
 19259     1EF4  00F0               	movwf	___fladd@b
 19260     1EF5  0843               	movf	___flsub@a+3,w
 19261     1EF6  00F7               	movwf	___fladd@a+3
 19262     1EF7  0842               	movf	___flsub@a+2,w
 19263     1EF8  00F6               	movwf	___fladd@a+2
 19264     1EF9  0841               	movf	___flsub@a+1,w
 19265     1EFA  00F5               	movwf	___fladd@a+1
 19266     1EFB  0840               	movf	___flsub@a,w
 19267     1EFC  00F4               	movwf	___fladd@a
 19268     1EFD  318B  23B9  319E   	fcall	___fladd
 19269     1F00  0873               	movf	?___fladd+3,w
 19270     1F01  0020               	movlb	0	; select bank0
 19271     1F02  00C3               	movwf	?___flsub+3
 19272     1F03  0872               	movf	?___fladd+2,w
 19273     1F04  00C2               	movwf	?___flsub+2
 19274     1F05  0871               	movf	?___fladd+1,w
 19275     1F06  00C1               	movwf	?___flsub+1
 19276     1F07  0870               	movf	?___fladd,w
 19277     1F08  00C0               	movwf	?___flsub
 19278     1F09                     i1l1615:
 19279     1F09  0008               	return
 19280     1F0A                     __end_of___flsub:
 19281                           
 19282                           	psect	text87
 19283     0BB9                     __ptext87:	
 19284 ;; *************** function ___fladd *****************
 19285 ;; Defined at:
 19286 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
 19287 ;; Parameters:    Size  Location     Type
 19288 ;;  b               4    0[COMMON] long 
 19289 ;;  a               4    4[COMMON] long 
 19290 ;; Auto vars:     Size  Location     Type
 19291 ;;  grs             1   11[COMMON] unsigned char 
 19292 ;;  bexp            1   10[COMMON] unsigned char 
 19293 ;;  aexp            1    9[COMMON] unsigned char 
 19294 ;;  signs           1    8[COMMON] unsigned char 
 19295 ;; Return value:  Size  Location     Type
 19296 ;;                  4    0[COMMON] unsigned char 
 19297 ;; Registers used:
 19298 ;;		wreg, status,2, status,0
 19299 ;; Tracked objects:
 19300 ;;		On entry : 0/0
 19301 ;;		On exit  : 0/0
 19302 ;;		Unchanged: 0/0
 19303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19304 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19305 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19306 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19307 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19308 ;;Total ram usage:       20 bytes
 19309 ;; Hardware stack levels used: 1
 19310 ;; This function calls:
 19311 ;;		Nothing
 19312 ;; This function is called by:
 19313 ;;		___flsub
 19314 ;;		_efgtoa
 19315 ;; This function uses a non-reentrant model
 19316 ;;
 19317                           
 19318     0BB9                     ___fladd:	
 19319                           ;psect for function ___fladd
 19320                           
 19321     0BB9                     i1l4175:	
 19322                           ;incstack = 0
 19323                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 19324                           
 19325     0BB9  0873               	movf	___fladd@b+3,w
 19326     0BBA  3980               	andlw	128
 19327     0BBB  00F8               	movwf	___fladd@signs
 19328     0BBC                     i1l4177:
 19329     0BBC  3573               	lslf	___fladd@b+3,w
 19330     0BBD  00FA               	movwf	___fladd@bexp
 19331     0BBE                     i1l4179:
 19332     0BBE  1FF2               	btfss	___fladd@b+2,7
 19333     0BBF  2BC1               	goto	u282_21
 19334     0BC0  2BC2               	goto	u282_20
 19335     0BC1                     u282_21:
 19336     0BC1  2BC3               	goto	i1l4183
 19337     0BC2                     u282_20:
 19338     0BC2                     i1l4181:
 19339     0BC2  147A               	bsf	___fladd@bexp,0
 19340     0BC3                     i1l4183:
 19341     0BC3  087A               	movf	___fladd@bexp,w
 19342     0BC4  1903               	btfsc	3,2
 19343     0BC5  2BC7               	goto	u283_21
 19344     0BC6  2BC8               	goto	u283_20
 19345     0BC7                     u283_21:
 19346     0BC7  2BD8               	goto	i1l4193
 19347     0BC8                     u283_20:
 19348     0BC8                     i1l4185:
 19349     0BC8  0A7A               	incf	___fladd@bexp,w
 19350     0BC9  1D03               	btfss	3,2
 19351     0BCA  2BCC               	goto	u284_21
 19352     0BCB  2BCD               	goto	u284_20
 19353     0BCC                     u284_21:
 19354     0BCC  2BD5               	goto	i1l4189
 19355     0BCD                     u284_20:
 19356     0BCD                     i1l4187:
 19357     0BCD  3000               	movlw	0
 19358     0BCE  00F3               	movwf	___fladd@b+3
 19359     0BCF  3000               	movlw	0
 19360     0BD0  00F2               	movwf	___fladd@b+2
 19361     0BD1  3000               	movlw	0
 19362     0BD2  00F1               	movwf	___fladd@b+1
 19363     0BD3  3000               	movlw	0
 19364     0BD4  00F0               	movwf	___fladd@b
 19365     0BD5                     i1l4189:
 19366     0BD5  17F2               	bsf	___fladd@b+2,7
 19367     0BD6                     i1l4191:
 19368     0BD6  01F3               	clrf	___fladd@b+3
 19369     0BD7  2BE0               	goto	i1l4195
 19370     0BD8                     i1l4193:
 19371     0BD8  3000               	movlw	0
 19372     0BD9  00F3               	movwf	___fladd@b+3
 19373     0BDA  3000               	movlw	0
 19374     0BDB  00F2               	movwf	___fladd@b+2
 19375     0BDC  3000               	movlw	0
 19376     0BDD  00F1               	movwf	___fladd@b+1
 19377     0BDE  3000               	movlw	0
 19378     0BDF  00F0               	movwf	___fladd@b
 19379     0BE0                     i1l4195:
 19380     0BE0  0877               	movf	___fladd@a+3,w
 19381     0BE1  3980               	andlw	128
 19382     0BE2  00F9               	movwf	___fladd@aexp
 19383     0BE3                     i1l4197:
 19384     0BE3  0879               	movf	___fladd@aexp,w
 19385     0BE4  0678               	xorwf	___fladd@signs,w
 19386     0BE5  1903               	skipnz
 19387     0BE6  2BE8               	goto	u285_21
 19388     0BE7  2BE9               	goto	u285_20
 19389     0BE8                     u285_21:
 19390     0BE8  2BEA               	goto	i1l4201
 19391     0BE9                     u285_20:
 19392     0BE9                     i1l4199:
 19393     0BE9  1778               	bsf	___fladd@signs,6
 19394     0BEA                     i1l4201:
 19395     0BEA  3577               	lslf	___fladd@a+3,w
 19396     0BEB  00F9               	movwf	___fladd@aexp
 19397     0BEC                     i1l4203:
 19398     0BEC  1FF6               	btfss	___fladd@a+2,7
 19399     0BED  2BEF               	goto	u286_21
 19400     0BEE  2BF0               	goto	u286_20
 19401     0BEF                     u286_21:
 19402     0BEF  2BF1               	goto	i1l4207
 19403     0BF0                     u286_20:
 19404     0BF0                     i1l4205:
 19405     0BF0  1479               	bsf	___fladd@aexp,0
 19406     0BF1                     i1l4207:
 19407     0BF1  0879               	movf	___fladd@aexp,w
 19408     0BF2  1903               	btfsc	3,2
 19409     0BF3  2BF5               	goto	u287_21
 19410     0BF4  2BF6               	goto	u287_20
 19411     0BF5                     u287_21:
 19412     0BF5  2C06               	goto	i1l4217
 19413     0BF6                     u287_20:
 19414     0BF6                     i1l4209:
 19415     0BF6  0A79               	incf	___fladd@aexp,w
 19416     0BF7  1D03               	btfss	3,2
 19417     0BF8  2BFA               	goto	u288_21
 19418     0BF9  2BFB               	goto	u288_20
 19419     0BFA                     u288_21:
 19420     0BFA  2C03               	goto	i1l4213
 19421     0BFB                     u288_20:
 19422     0BFB                     i1l4211:
 19423     0BFB  3000               	movlw	0
 19424     0BFC  00F7               	movwf	___fladd@a+3
 19425     0BFD  3000               	movlw	0
 19426     0BFE  00F6               	movwf	___fladd@a+2
 19427     0BFF  3000               	movlw	0
 19428     0C00  00F5               	movwf	___fladd@a+1
 19429     0C01  3000               	movlw	0
 19430     0C02  00F4               	movwf	___fladd@a
 19431     0C03                     i1l4213:
 19432     0C03  17F6               	bsf	___fladd@a+2,7
 19433     0C04                     i1l4215:
 19434     0C04  01F7               	clrf	___fladd@a+3
 19435     0C05  2C0E               	goto	i1l1569
 19436     0C06                     i1l4217:
 19437     0C06  3000               	movlw	0
 19438     0C07  00F7               	movwf	___fladd@a+3
 19439     0C08  3000               	movlw	0
 19440     0C09  00F6               	movwf	___fladd@a+2
 19441     0C0A  3000               	movlw	0
 19442     0C0B  00F5               	movwf	___fladd@a+1
 19443     0C0C  3000               	movlw	0
 19444     0C0D  00F4               	movwf	___fladd@a
 19445     0C0E                     i1l1569:
 19446     0C0E  087A               	movf	___fladd@bexp,w
 19447     0C0F  0279               	subwf	___fladd@aexp,w
 19448     0C10  1803               	skipnc
 19449     0C11  2C13               	goto	u289_21
 19450     0C12  2C14               	goto	u289_20
 19451     0C13                     u289_21:
 19452     0C13  2C3B               	goto	i1l4253
 19453     0C14                     u289_20:
 19454     0C14                     i1l4219:
 19455     0C14  1F78               	btfss	___fladd@signs,6
 19456     0C15  2C17               	goto	u290_21
 19457     0C16  2C18               	goto	u290_20
 19458     0C17                     u290_21:
 19459     0C17  2C1D               	goto	i1l4223
 19460     0C18                     u290_20:
 19461     0C18                     i1l4221:
 19462     0C18  3080               	movlw	128
 19463     0C19  0020               	movlb	0	; select bank0
 19464     0C1A  00A0               	movwf	??___fladd
 19465     0C1B  0820               	movf	??___fladd,w
 19466     0C1C  06F8               	xorwf	___fladd@signs,f
 19467     0C1D                     i1l4223:
 19468     0C1D  087A               	movf	___fladd@bexp,w
 19469     0C1E  00FB               	movwf	___fladd@grs
 19470     0C1F                     i1l4225:
 19471     0C1F  0879               	movf	___fladd@aexp,w
 19472     0C20  00FA               	movwf	___fladd@bexp
 19473     0C21                     i1l4227:
 19474     0C21  087B               	movf	___fladd@grs,w
 19475     0C22  00F9               	movwf	___fladd@aexp
 19476     0C23                     i1l4229:
 19477     0C23  0870               	movf	___fladd@b,w
 19478     0C24  00FB               	movwf	___fladd@grs
 19479     0C25                     i1l4231:
 19480     0C25  0874               	movf	___fladd@a,w
 19481     0C26  00F0               	movwf	___fladd@b
 19482     0C27                     i1l4233:
 19483     0C27  087B               	movf	___fladd@grs,w
 19484     0C28  00F4               	movwf	___fladd@a
 19485     0C29                     i1l4235:
 19486     0C29  0871               	movf	___fladd@b+1,w
 19487     0C2A  00FB               	movwf	___fladd@grs
 19488     0C2B                     i1l4237:
 19489     0C2B  0875               	movf	___fladd@a+1,w
 19490     0C2C  00F1               	movwf	___fladd@b+1
 19491     0C2D                     i1l4239:
 19492     0C2D  087B               	movf	___fladd@grs,w
 19493     0C2E  00F5               	movwf	___fladd@a+1
 19494     0C2F                     i1l4241:
 19495     0C2F  0872               	movf	___fladd@b+2,w
 19496     0C30  00FB               	movwf	___fladd@grs
 19497     0C31                     i1l4243:
 19498     0C31  0876               	movf	___fladd@a+2,w
 19499     0C32  00F2               	movwf	___fladd@b+2
 19500     0C33                     i1l4245:
 19501     0C33  087B               	movf	___fladd@grs,w
 19502     0C34  00F6               	movwf	___fladd@a+2
 19503     0C35                     i1l4247:
 19504     0C35  0873               	movf	___fladd@b+3,w
 19505     0C36  00FB               	movwf	___fladd@grs
 19506     0C37                     i1l4249:
 19507     0C37  0877               	movf	___fladd@a+3,w
 19508     0C38  00F3               	movwf	___fladd@b+3
 19509     0C39                     i1l4251:
 19510     0C39  087B               	movf	___fladd@grs,w
 19511     0C3A  00F7               	movwf	___fladd@a+3
 19512     0C3B                     i1l4253:
 19513     0C3B  01FB               	clrf	___fladd@grs
 19514     0C3C                     i1l4255:
 19515     0C3C  0879               	movf	___fladd@aexp,w
 19516     0C3D  0020               	movlb	0	; select bank0
 19517     0C3E  00A0               	movwf	??___fladd
 19518     0C3F  01A1               	clrf	??___fladd+1
 19519     0C40  0821               	movf	??___fladd+1,w
 19520     0C41  00A3               	movwf	??___fladd+3
 19521     0C42  087A               	movf	___fladd@bexp,w
 19522     0C43  0220               	subwf	??___fladd,w
 19523     0C44  00A2               	movwf	??___fladd+2
 19524     0C45  1C03               	skipc
 19525     0C46  03A3               	decf	??___fladd+3,f
 19526     0C47  0823               	movf	??___fladd+3,w
 19527     0C48  3A80               	xorlw	128
 19528     0C49  00A4               	movwf	??___fladd+4
 19529     0C4A  3080               	movlw	128
 19530     0C4B  0224               	subwf	??___fladd+4,w
 19531     0C4C  1D03               	skipz
 19532     0C4D  2C50               	goto	u291_25
 19533     0C4E  301A               	movlw	26
 19534     0C4F  0222               	subwf	??___fladd+2,w
 19535     0C50                     u291_25:
 19536     0C50  1C03               	skipc
 19537     0C51  2C53               	goto	u291_21
 19538     0C52  2C54               	goto	u291_20
 19539     0C53                     u291_21:
 19540     0C53  2C86               	goto	i1l4271
 19541     0C54                     u291_20:
 19542     0C54                     i1l4257:
 19543     0C54  0873               	movf	___fladd@b+3,w
 19544     0C55  0472               	iorwf	___fladd@b+2,w
 19545     0C56  0471               	iorwf	___fladd@b+1,w
 19546     0C57  0470               	iorwf	___fladd@b,w
 19547     0C58  1D03               	skipz
 19548     0C59  2C5B               	goto	u292_21
 19549     0C5A  2C5D               	goto	u292_20
 19550     0C5B                     u292_21:
 19551     0C5B  3001               	movlw	1
 19552     0C5C  2C5E               	goto	u293_20
 19553     0C5D                     u292_20:
 19554     0C5D  3000               	movlw	0
 19555     0C5E                     u293_20:
 19556     0C5E  00FB               	movwf	___fladd@grs
 19557     0C5F  3000               	movlw	0
 19558     0C60  00F3               	movwf	___fladd@b+3
 19559     0C61  3000               	movlw	0
 19560     0C62  00F2               	movwf	___fladd@b+2
 19561     0C63  3000               	movlw	0
 19562     0C64  00F1               	movwf	___fladd@b+1
 19563     0C65  3000               	movlw	0
 19564     0C66  00F0               	movwf	___fladd@b
 19565     0C67  0879               	movf	___fladd@aexp,w
 19566     0C68  00FA               	movwf	___fladd@bexp
 19567     0C69  2C8C               	goto	i1l1573
 19568     0C6A                     i1l1575:
 19569     0C6A  1C7B               	btfss	___fladd@grs,0
 19570     0C6B  2C6D               	goto	u294_21
 19571     0C6C  2C6E               	goto	u294_20
 19572     0C6D                     u294_21:
 19573     0C6D  2C72               	goto	i1l4261
 19574     0C6E                     u294_20:
 19575     0C6E                     i1l4259:
 19576     0C6E  367B               	lsrf	___fladd@grs,w
 19577     0C6F  3801               	iorlw	1
 19578     0C70  00FB               	movwf	___fladd@grs
 19579     0C71  2C74               	goto	i1l4263
 19580     0C72                     i1l4261:
 19581     0C72  1003               	clrc
 19582     0C73  0CFB               	rrf	___fladd@grs,f
 19583     0C74                     i1l4263:
 19584     0C74  1C70               	btfss	___fladd@b,0
 19585     0C75  2C77               	goto	u295_21
 19586     0C76  2C78               	goto	u295_20
 19587     0C77                     u295_21:
 19588     0C77  2C79               	goto	i1l4267
 19589     0C78                     u295_20:
 19590     0C78                     i1l4265:
 19591     0C78  17FB               	bsf	___fladd@grs,7
 19592     0C79                     i1l4267:
 19593     0C79  3001               	movlw	1
 19594     0C7A  0020               	movlb	0	; select bank0
 19595     0C7B  00A0               	movwf	??___fladd
 19596     0C7C                     u296_25:
 19597     0C7C  37F3               	asrf	___fladd@b+3,f
 19598     0C7D  0CF2               	rrf	___fladd@b+2,f
 19599     0C7E  0CF1               	rrf	___fladd@b+1,f
 19600     0C7F  0CF0               	rrf	___fladd@b,f
 19601     0C80  0BA0               	decfsz	??___fladd& (0+127),f
 19602     0C81  2C7C               	goto	u296_25
 19603     0C82                     i1l4269:
 19604     0C82  3001               	movlw	1
 19605     0C83  00A0               	movwf	??___fladd
 19606     0C84  0820               	movf	??___fladd,w
 19607     0C85  07FA               	addwf	___fladd@bexp,f
 19608     0C86                     i1l4271:
 19609     0C86  0879               	movf	___fladd@aexp,w
 19610     0C87  027A               	subwf	___fladd@bexp,w
 19611     0C88  1C03               	skipc
 19612     0C89  2C8B               	goto	u297_21
 19613     0C8A  2C8C               	goto	u297_20
 19614     0C8B                     u297_21:
 19615     0C8B  2C6A               	goto	i1l1575
 19616     0C8C                     u297_20:
 19617     0C8C                     i1l1573:
 19618     0C8C  1B78               	btfsc	___fladd@signs,6
 19619     0C8D  2C8F               	goto	u298_21
 19620     0C8E  2C90               	goto	u298_20
 19621     0C8F                     u298_21:
 19622     0C8F  2CC7               	goto	i1l4297
 19623     0C90                     u298_20:
 19624     0C90                     i1l4273:
 19625     0C90  087A               	movf	___fladd@bexp,w
 19626     0C91  1D03               	btfss	3,2
 19627     0C92  2C94               	goto	u299_21
 19628     0C93  2C95               	goto	u299_20
 19629     0C94                     u299_21:
 19630     0C94  2C9E               	goto	i1l4279
 19631     0C95                     u299_20:
 19632     0C95                     i1l4275:
 19633     0C95  3000               	movlw	0
 19634     0C96  00F3               	movwf	?___fladd+3
 19635     0C97  3000               	movlw	0
 19636     0C98  00F2               	movwf	?___fladd+2
 19637     0C99  3000               	movlw	0
 19638     0C9A  00F1               	movwf	?___fladd+1
 19639     0C9B  3000               	movlw	0
 19640     0C9C  00F0               	movwf	?___fladd
 19641     0C9D  2DC4               	goto	i1l1582
 19642     0C9E                     i1l4279:
 19643     0C9E  0874               	movf	___fladd@a,w
 19644     0C9F  07F0               	addwf	___fladd@b,f
 19645     0CA0  0875               	movf	___fladd@a+1,w
 19646     0CA1  3DF1               	addwfc	___fladd@b+1,f
 19647     0CA2  0876               	movf	___fladd@a+2,w
 19648     0CA3  3DF2               	addwfc	___fladd@b+2,f
 19649     0CA4  0877               	movf	___fladd@a+3,w
 19650     0CA5  3DF3               	addwfc	___fladd@b+3,f
 19651     0CA6                     i1l4281:
 19652     0CA6  1C73               	btfss	___fladd@b+3,0
 19653     0CA7  2CA9               	goto	u300_21
 19654     0CA8  2CAA               	goto	u300_20
 19655     0CA9                     u300_21:
 19656     0CA9  2D54               	goto	i1l4331
 19657     0CAA                     u300_20:
 19658     0CAA                     i1l4283:
 19659     0CAA  1C7B               	btfss	___fladd@grs,0
 19660     0CAB  2CAD               	goto	u301_21
 19661     0CAC  2CAE               	goto	u301_20
 19662     0CAD                     u301_21:
 19663     0CAD  2CB2               	goto	i1l4287
 19664     0CAE                     u301_20:
 19665     0CAE                     i1l4285:
 19666     0CAE  367B               	lsrf	___fladd@grs,w
 19667     0CAF  3801               	iorlw	1
 19668     0CB0  00FB               	movwf	___fladd@grs
 19669     0CB1  2CB4               	goto	i1l4289
 19670     0CB2                     i1l4287:
 19671     0CB2  1003               	clrc
 19672     0CB3  0CFB               	rrf	___fladd@grs,f
 19673     0CB4                     i1l4289:
 19674     0CB4  1C70               	btfss	___fladd@b,0
 19675     0CB5  2CB7               	goto	u302_21
 19676     0CB6  2CB8               	goto	u302_20
 19677     0CB7                     u302_21:
 19678     0CB7  2CB9               	goto	i1l4293
 19679     0CB8                     u302_20:
 19680     0CB8                     i1l4291:
 19681     0CB8  17FB               	bsf	___fladd@grs,7
 19682     0CB9                     i1l4293:
 19683     0CB9  3001               	movlw	1
 19684     0CBA  0020               	movlb	0	; select bank0
 19685     0CBB  00A0               	movwf	??___fladd
 19686     0CBC                     u303_25:
 19687     0CBC  37F3               	asrf	___fladd@b+3,f
 19688     0CBD  0CF2               	rrf	___fladd@b+2,f
 19689     0CBE  0CF1               	rrf	___fladd@b+1,f
 19690     0CBF  0CF0               	rrf	___fladd@b,f
 19691     0CC0  0BA0               	decfsz	??___fladd& (0+127),f
 19692     0CC1  2CBC               	goto	u303_25
 19693     0CC2                     i1l4295:
 19694     0CC2  3001               	movlw	1
 19695     0CC3  00A0               	movwf	??___fladd
 19696     0CC4  0820               	movf	??___fladd,w
 19697     0CC5  07FA               	addwf	___fladd@bexp,f
 19698     0CC6  2D54               	goto	i1l4331
 19699     0CC7                     i1l4297:
 19700     0CC7  0873               	movf	___fladd@b+3,w
 19701     0CC8  3A80               	xorlw	128
 19702     0CC9  0020               	movlb	0	; select bank0
 19703     0CCA  00A0               	movwf	??___fladd
 19704     0CCB  0877               	movf	___fladd@a+3,w
 19705     0CCC  3A80               	xorlw	128
 19706     0CCD  0220               	subwf	??___fladd,w
 19707     0CCE  1D03               	skipz
 19708     0CCF  2CDA               	goto	u304_23
 19709     0CD0  0876               	movf	___fladd@a+2,w
 19710     0CD1  0272               	subwf	___fladd@b+2,w
 19711     0CD2  1D03               	skipz
 19712     0CD3  2CDA               	goto	u304_23
 19713     0CD4  0875               	movf	___fladd@a+1,w
 19714     0CD5  0271               	subwf	___fladd@b+1,w
 19715     0CD6  1D03               	skipz
 19716     0CD7  2CDA               	goto	u304_23
 19717     0CD8  0874               	movf	___fladd@a,w
 19718     0CD9  0270               	subwf	___fladd@b,w
 19719     0CDA                     u304_23:
 19720     0CDA  1803               	skipnc
 19721     0CDB  2CDD               	goto	u304_21
 19722     0CDC  2CDE               	goto	u304_20
 19723     0CDD                     u304_21:
 19724     0CDD  2D16               	goto	i1l4307
 19725     0CDE                     u304_20:
 19726     0CDE                     i1l4299:
 19727     0CDE  30FF               	movlw	255
 19728     0CDF  00A0               	movwf	??___fladd
 19729     0CE0  30FF               	movlw	255
 19730     0CE1  00A1               	movwf	??___fladd+1
 19731     0CE2  30FF               	movlw	255
 19732     0CE3  00A2               	movwf	??___fladd+2
 19733     0CE4  30FF               	movlw	255
 19734     0CE5  00A3               	movwf	??___fladd+3
 19735     0CE6  0870               	movf	___fladd@b,w
 19736     0CE7  0274               	subwf	___fladd@a,w
 19737     0CE8  00A4               	movwf	??___fladd+4
 19738     0CE9  0871               	movf	___fladd@b+1,w
 19739     0CEA  3B75               	subwfb	___fladd@a+1,w
 19740     0CEB  00A5               	movwf	??___fladd+5
 19741     0CEC  0872               	movf	___fladd@b+2,w
 19742     0CED  3B76               	subwfb	___fladd@a+2,w
 19743     0CEE  00A6               	movwf	??___fladd+6
 19744     0CEF  0873               	movf	___fladd@b+3,w
 19745     0CF0  3B77               	subwfb	___fladd@a+3,w
 19746     0CF1  00A7               	movwf	??___fladd+7
 19747     0CF2  0824               	movf	??___fladd+4,w
 19748     0CF3  07A0               	addwf	??___fladd,f
 19749     0CF4  0825               	movf	??___fladd+5,w
 19750     0CF5  3DA1               	addwfc	??___fladd+1,f
 19751     0CF6  0826               	movf	??___fladd+6,w
 19752     0CF7  3DA2               	addwfc	??___fladd+2,f
 19753     0CF8  0827               	movf	??___fladd+7,w
 19754     0CF9  3DA3               	addwfc	??___fladd+3,f
 19755     0CFA  0823               	movf	??___fladd+3,w
 19756     0CFB  00F3               	movwf	___fladd@b+3
 19757     0CFC  0822               	movf	??___fladd+2,w
 19758     0CFD  00F2               	movwf	___fladd@b+2
 19759     0CFE  0821               	movf	??___fladd+1,w
 19760     0CFF  00F1               	movwf	___fladd@b+1
 19761     0D00  0820               	movf	??___fladd,w
 19762     0D01  00F0               	movwf	___fladd@b
 19763     0D02                     i1l4301:
 19764     0D02  3080               	movlw	128
 19765     0D03  00A0               	movwf	??___fladd
 19766     0D04  0820               	movf	??___fladd,w
 19767     0D05  06F8               	xorwf	___fladd@signs,f
 19768     0D06  09FB               	comf	___fladd@grs,f
 19769     0D07  0AFB               	incf	___fladd@grs,f
 19770     0D08                     i1l4303:
 19771     0D08  087B               	movf	___fladd@grs,w
 19772     0D09  1D03               	btfss	3,2
 19773     0D0A  2D0C               	goto	u305_21
 19774     0D0B  2D0D               	goto	u305_20
 19775     0D0C                     u305_21:
 19776     0D0C  2D1E               	goto	i1l1590
 19777     0D0D                     u305_20:
 19778     0D0D                     i1l4305:
 19779     0D0D  3001               	movlw	1
 19780     0D0E  07F0               	addwf	___fladd@b,f
 19781     0D0F  3000               	movlw	0
 19782     0D10  3DF1               	addwfc	___fladd@b+1,f
 19783     0D11  3000               	movlw	0
 19784     0D12  3DF2               	addwfc	___fladd@b+2,f
 19785     0D13  3000               	movlw	0
 19786     0D14  3DF3               	addwfc	___fladd@b+3,f
 19787     0D15  2D1E               	goto	i1l1590
 19788     0D16                     i1l4307:
 19789     0D16  0874               	movf	___fladd@a,w
 19790     0D17  02F0               	subwf	___fladd@b,f
 19791     0D18  0875               	movf	___fladd@a+1,w
 19792     0D19  3BF1               	subwfb	___fladd@b+1,f
 19793     0D1A  0876               	movf	___fladd@a+2,w
 19794     0D1B  3BF2               	subwfb	___fladd@b+2,f
 19795     0D1C  0877               	movf	___fladd@a+3,w
 19796     0D1D  3BF3               	subwfb	___fladd@b+3,f
 19797     0D1E                     i1l1590:
 19798     0D1E  0873               	movf	___fladd@b+3,w
 19799     0D1F  0472               	iorwf	___fladd@b+2,w
 19800     0D20  0471               	iorwf	___fladd@b+1,w
 19801     0D21  0470               	iorwf	___fladd@b,w
 19802     0D22  1D03               	skipz
 19803     0D23  2D25               	goto	u306_21
 19804     0D24  2D26               	goto	u306_20
 19805     0D25                     u306_21:
 19806     0D25  2D50               	goto	i1l4329
 19807     0D26                     u306_20:
 19808     0D26                     i1l4309:
 19809     0D26  087B               	movf	___fladd@grs,w
 19810     0D27  1D03               	btfss	3,2
 19811     0D28  2D2A               	goto	u307_21
 19812     0D29  2D2B               	goto	u307_20
 19813     0D2A                     u307_21:
 19814     0D2A  2D50               	goto	i1l4329
 19815     0D2B                     u307_20:
 19816     0D2B                     i1l4311:
 19817     0D2B  3000               	movlw	0
 19818     0D2C  00F3               	movwf	?___fladd+3
 19819     0D2D  3000               	movlw	0
 19820     0D2E  00F2               	movwf	?___fladd+2
 19821     0D2F  3000               	movlw	0
 19822     0D30  00F1               	movwf	?___fladd+1
 19823     0D31  3000               	movlw	0
 19824     0D32  00F0               	movwf	?___fladd
 19825     0D33  2DC4               	goto	i1l1582
 19826     0D34                     i1l4315:
 19827     0D34  3001               	movlw	1
 19828     0D35                     u308_25:
 19829     0D35  35F0               	lslf	___fladd@b,f
 19830     0D36  0DF1               	rlf	___fladd@b+1,f
 19831     0D37  0DF2               	rlf	___fladd@b+2,f
 19832     0D38  0DF3               	rlf	___fladd@b+3,f
 19833     0D39  0B89               	decfsz	9,f
 19834     0D3A  2D35               	goto	u308_25
 19835     0D3B                     i1l4317:
 19836     0D3B  1FFB               	btfss	___fladd@grs,7
 19837     0D3C  2D3E               	goto	u309_21
 19838     0D3D  2D3F               	goto	u309_20
 19839     0D3E                     u309_21:
 19840     0D3E  2D40               	goto	i1l1594
 19841     0D3F                     u309_20:
 19842     0D3F                     i1l4319:
 19843     0D3F  1470               	bsf	___fladd@b,0
 19844     0D40                     i1l1594:
 19845     0D40  1C7B               	btfss	___fladd@grs,0
 19846     0D41  2D43               	goto	u310_21
 19847     0D42  2D44               	goto	u310_20
 19848     0D43                     u310_21:
 19849     0D43  2D47               	goto	i1l4323
 19850     0D44                     u310_20:
 19851     0D44                     i1l4321:
 19852     0D44  1403               	setc
 19853     0D45  0DFB               	rlf	___fladd@grs,f
 19854     0D46  2D49               	goto	i1l4325
 19855     0D47                     i1l4323:
 19856     0D47  1003               	clrc
 19857     0D48  0DFB               	rlf	___fladd@grs,f
 19858     0D49                     i1l4325:
 19859     0D49  087A               	movf	___fladd@bexp,w
 19860     0D4A  1903               	btfsc	3,2
 19861     0D4B  2D4D               	goto	u311_21
 19862     0D4C  2D4E               	goto	u311_20
 19863     0D4D                     u311_21:
 19864     0D4D  2D50               	goto	i1l4329
 19865     0D4E                     u311_20:
 19866     0D4E                     i1l4327:
 19867     0D4E  3001               	movlw	1
 19868     0D4F  02FA               	subwf	___fladd@bexp,f
 19869     0D50                     i1l4329:
 19870     0D50  1FF2               	btfss	___fladd@b+2,7
 19871     0D51  2D53               	goto	u312_21
 19872     0D52  2D54               	goto	u312_20
 19873     0D53                     u312_21:
 19874     0D53  2D34               	goto	i1l4315
 19875     0D54                     u312_20:
 19876     0D54                     i1l4331:
 19877     0D54  01F9               	clrf	___fladd@aexp
 19878     0D55                     i1l4333:
 19879     0D55  1FFB               	btfss	___fladd@grs,7
 19880     0D56  2D58               	goto	u313_21
 19881     0D57  2D59               	goto	u313_20
 19882     0D58                     u313_21:
 19883     0D58  2D67               	goto	i1l4341
 19884     0D59                     u313_20:
 19885     0D59                     i1l4335:
 19886     0D59  087B               	movf	___fladd@grs,w
 19887     0D5A  397F               	andlw	127
 19888     0D5B  1903               	btfsc	3,2
 19889     0D5C  2D5E               	goto	u314_21
 19890     0D5D  2D5F               	goto	u314_20
 19891     0D5E                     u314_21:
 19892     0D5E  2D62               	goto	i1l1600
 19893     0D5F                     u314_20:
 19894     0D5F                     i1l4337:
 19895     0D5F  01F9               	clrf	___fladd@aexp
 19896     0D60  0AF9               	incf	___fladd@aexp,f
 19897     0D61  2D67               	goto	i1l4341
 19898     0D62                     i1l1600:
 19899     0D62  1C70               	btfss	___fladd@b,0
 19900     0D63  2D65               	goto	u315_21
 19901     0D64  2D66               	goto	u315_20
 19902     0D65                     u315_21:
 19903     0D65  2D67               	goto	i1l4341
 19904     0D66                     u315_20:
 19905     0D66  2D5F               	goto	i1l4337
 19906     0D67                     i1l4341:
 19907     0D67  0879               	movf	___fladd@aexp,w
 19908     0D68  1903               	btfsc	3,2
 19909     0D69  2D6B               	goto	u316_21
 19910     0D6A  2D6C               	goto	u316_20
 19911     0D6B                     u316_21:
 19912     0D6B  2D9A               	goto	i1l1603
 19913     0D6C                     u316_20:
 19914     0D6C                     i1l4343:
 19915     0D6C  3001               	movlw	1
 19916     0D6D  07F0               	addwf	___fladd@b,f
 19917     0D6E  3000               	movlw	0
 19918     0D6F  3DF1               	addwfc	___fladd@b+1,f
 19919     0D70  3000               	movlw	0
 19920     0D71  3DF2               	addwfc	___fladd@b+2,f
 19921     0D72  3000               	movlw	0
 19922     0D73  3DF3               	addwfc	___fladd@b+3,f
 19923     0D74                     i1l4345:
 19924     0D74  1C73               	btfss	___fladd@b+3,0
 19925     0D75  2D77               	goto	u317_21
 19926     0D76  2D78               	goto	u317_20
 19927     0D77                     u317_21:
 19928     0D77  2D9A               	goto	i1l1603
 19929     0D78                     u317_20:
 19930     0D78                     i1l4347:
 19931     0D78  0870               	movf	___fladd@b,w
 19932     0D79  0020               	movlb	0	; select bank0
 19933     0D7A  00A0               	movwf	??___fladd
 19934     0D7B  0871               	movf	___fladd@b+1,w
 19935     0D7C  00A1               	movwf	??___fladd+1
 19936     0D7D  0872               	movf	___fladd@b+2,w
 19937     0D7E  00A2               	movwf	??___fladd+2
 19938     0D7F  0873               	movf	___fladd@b+3,w
 19939     0D80  00A3               	movwf	??___fladd+3
 19940     0D81  3001               	movlw	1
 19941     0D82  00A4               	movwf	??___fladd+4
 19942     0D83                     u318_25:
 19943     0D83  37A3               	asrf	??___fladd+3,f
 19944     0D84  0CA2               	rrf	??___fladd+2,f
 19945     0D85  0CA1               	rrf	??___fladd+1,f
 19946     0D86  0CA0               	rrf	??___fladd,f
 19947     0D87                     u318_20:
 19948     0D87  0BA4               	decfsz	??___fladd+4,f
 19949     0D88  2D83               	goto	u318_25
 19950     0D89  0823               	movf	??___fladd+3,w
 19951     0D8A  00F3               	movwf	___fladd@b+3
 19952     0D8B  0822               	movf	??___fladd+2,w
 19953     0D8C  00F2               	movwf	___fladd@b+2
 19954     0D8D  0821               	movf	??___fladd+1,w
 19955     0D8E  00F1               	movwf	___fladd@b+1
 19956     0D8F  0820               	movf	??___fladd,w
 19957     0D90  00F0               	movwf	___fladd@b
 19958     0D91  0A7A               	incf	___fladd@bexp,w
 19959     0D92  1903               	btfsc	3,2
 19960     0D93  2D95               	goto	u319_21
 19961     0D94  2D96               	goto	u319_20
 19962     0D95                     u319_21:
 19963     0D95  2D9A               	goto	i1l1603
 19964     0D96                     u319_20:
 19965     0D96                     i1l4349:
 19966     0D96  3001               	movlw	1
 19967     0D97  00A0               	movwf	??___fladd
 19968     0D98  0820               	movf	??___fladd,w
 19969     0D99  07FA               	addwf	___fladd@bexp,f
 19970     0D9A                     i1l1603:
 19971     0D9A  0A7A               	incf	___fladd@bexp,w
 19972     0D9B  1903               	btfsc	3,2
 19973     0D9C  2D9E               	goto	u320_21
 19974     0D9D  2D9F               	goto	u320_20
 19975     0D9E                     u320_21:
 19976     0D9E  2DA4               	goto	i1l4353
 19977     0D9F                     u320_20:
 19978     0D9F                     i1l4351:
 19979     0D9F  087A               	movf	___fladd@bexp,w
 19980     0DA0  1D03               	btfss	3,2
 19981     0DA1  2DA3               	goto	u321_21
 19982     0DA2  2DA4               	goto	u321_20
 19983     0DA3                     u321_21:
 19984     0DA3  2DB2               	goto	i1l4359
 19985     0DA4                     u321_20:
 19986     0DA4                     i1l4353:
 19987     0DA4  3000               	movlw	0
 19988     0DA5  00F3               	movwf	___fladd@b+3
 19989     0DA6  3000               	movlw	0
 19990     0DA7  00F2               	movwf	___fladd@b+2
 19991     0DA8  3000               	movlw	0
 19992     0DA9  00F1               	movwf	___fladd@b+1
 19993     0DAA  3000               	movlw	0
 19994     0DAB  00F0               	movwf	___fladd@b
 19995     0DAC                     i1l4355:
 19996     0DAC  087A               	movf	___fladd@bexp,w
 19997     0DAD  1D03               	btfss	3,2
 19998     0DAE  2DB0               	goto	u322_21
 19999     0DAF  2DB1               	goto	u322_20
 20000     0DB0                     u322_21:
 20001     0DB0  2DB2               	goto	i1l4359
 20002     0DB1                     u322_20:
 20003     0DB1                     i1l4357:
 20004     0DB1  01F8               	clrf	___fladd@signs
 20005     0DB2                     i1l4359:
 20006     0DB2  1C7A               	btfss	___fladd@bexp,0
 20007     0DB3  2DB5               	goto	u323_21
 20008     0DB4  2DB6               	goto	u323_20
 20009     0DB5                     u323_21:
 20010     0DB5  2DB8               	goto	i1l4363
 20011     0DB6                     u323_20:
 20012     0DB6                     i1l4361:
 20013     0DB6  17F2               	bsf	___fladd@b+2,7
 20014     0DB7  2DBD               	goto	i1l1611
 20015     0DB8                     i1l4363:
 20016     0DB8  307F               	movlw	127
 20017     0DB9  0020               	movlb	0	; select bank0
 20018     0DBA  00A0               	movwf	??___fladd
 20019     0DBB  0820               	movf	??___fladd,w
 20020     0DBC  05F2               	andwf	___fladd@b+2,f
 20021     0DBD                     i1l1611:
 20022     0DBD  367A               	lsrf	___fladd@bexp,w
 20023     0DBE  00F3               	movwf	___fladd@b+3
 20024     0DBF                     i1l4365:
 20025     0DBF  1FF8               	btfss	___fladd@signs,7
 20026     0DC0  2DC2               	goto	u324_21
 20027     0DC1  2DC3               	goto	u324_20
 20028     0DC2                     u324_21:
 20029     0DC2  2DC4               	goto	i1l1612
 20030     0DC3                     u324_20:
 20031     0DC3                     i1l4367:
 20032     0DC3  17F3               	bsf	___fladd@b+3,7
 20033     0DC4                     i1l1612:
 20034     0DC4                     i1l1582:
 20035     0DC4  0008               	return
 20036     0DC5                     __end_of___fladd:
 20037                           
 20038                           	psect	text88
 20039     1CF5                     __ptext88:	
 20040 ;; *************** function ___flneg *****************
 20041 ;; Defined at:
 20042 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
 20043 ;; Parameters:    Size  Location     Type
 20044 ;;  f1              4    0[COMMON] unsigned char 
 20045 ;; Auto vars:     Size  Location     Type
 20046 ;;		None
 20047 ;; Return value:  Size  Location     Type
 20048 ;;                  4    0[COMMON] unsigned char 
 20049 ;; Registers used:
 20050 ;;		wreg
 20051 ;; Tracked objects:
 20052 ;;		On entry : 0/0
 20053 ;;		On exit  : 0/0
 20054 ;;		Unchanged: 0/0
 20055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20059 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20060 ;;Total ram usage:        4 bytes
 20061 ;; Hardware stack levels used: 1
 20062 ;; This function calls:
 20063 ;;		Nothing
 20064 ;; This function is called by:
 20065 ;;		_efgtoa
 20066 ;; This function uses a non-reentrant model
 20067 ;;
 20068                           
 20069     1CF5                     ___flneg:	
 20070                           ;psect for function ___flneg
 20071                           
 20072     1CF5                     i1l4453:	
 20073                           ;incstack = 0
 20074                           ; Regs used in ___flneg: [wreg]
 20075                           
 20076     1CF5  0873               	movf	___flneg@f1+3,w
 20077     1CF6  0472               	iorwf	___flneg@f1+2,w
 20078     1CF7  0471               	iorwf	___flneg@f1+1,w
 20079     1CF8  0470               	iorwf	___flneg@f1,w
 20080     1CF9  1903               	skipnz
 20081     1CFA  2CFC               	goto	u342_21
 20082     1CFB  2CFD               	goto	u342_20
 20083     1CFC                     u342_21:
 20084     1CFC  2CFF               	goto	i1l4457
 20085     1CFD                     u342_20:
 20086     1CFD                     i1l4455:
 20087     1CFD  3080               	movlw	128
 20088     1CFE  06F3               	xorwf	___flneg@f1+3,f
 20089     1CFF                     i1l4457:
 20090     1CFF                     i1l1458:
 20091     1CFF  0008               	return
 20092     1D00                     __end_of___flneg:
 20093                           
 20094                           	psect	text89
 20095     0DC5                     __ptext89:	
 20096 ;; *************** function ___flmul *****************
 20097 ;; Defined at:
 20098 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
 20099 ;; Parameters:    Size  Location     Type
 20100 ;;  b               4    6[BANK0 ] unsigned char 
 20101 ;;  a               4   10[BANK0 ] unsigned char 
 20102 ;; Auto vars:     Size  Location     Type
 20103 ;;  prod            4   26[BANK0 ] struct .
 20104 ;;  grs             4   20[BANK0 ] unsigned long 
 20105 ;;  temp            2   30[BANK0 ] struct .
 20106 ;;  bexp            1   25[BANK0 ] unsigned char 
 20107 ;;  aexp            1   24[BANK0 ] unsigned char 
 20108 ;;  sign            1   19[BANK0 ] unsigned char 
 20109 ;; Return value:  Size  Location     Type
 20110 ;;                  4    6[BANK0 ] unsigned char 
 20111 ;; Registers used:
 20112 ;;		wreg, status,2, status,0, pclath, cstack
 20113 ;; Tracked objects:
 20114 ;;		On entry : 0/0
 20115 ;;		On exit  : 0/0
 20116 ;;		Unchanged: 0/0
 20117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20118 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20119 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20120 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20121 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20122 ;;Total ram usage:       26 bytes
 20123 ;; Hardware stack levels used: 1
 20124 ;; Hardware stack levels required when called: 1
 20125 ;; This function calls:
 20126 ;;		__Umul8_16
 20127 ;; This function is called by:
 20128 ;;		_TMR0_Custom_ISR
 20129 ;;		_efgtoa
 20130 ;;		_get_temperature
 20131 ;; This function uses a non-reentrant model
 20132 ;;
 20133                           
 20134     0DC5                     ___flmul:	
 20135                           ;psect for function ___flmul
 20136                           
 20137     0DC5                     i1l4643:	
 20138                           ;incstack = 0
 20139                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 20140                           
 20141     0DC5  0020               	movlb	0	; select bank0
 20142     0DC6  0829               	movf	___flmul@b+3,w
 20143     0DC7  3980               	andlw	128
 20144     0DC8  00B3               	movwf	___flmul@sign
 20145     0DC9                     i1l4645:
 20146     0DC9  3529               	lslf	___flmul@b+3,w
 20147     0DCA  00B9               	movwf	___flmul@bexp
 20148     0DCB                     i1l4647:
 20149     0DCB  1FA8               	btfss	___flmul@b+2,7
 20150     0DCC  2DCE               	goto	u382_21
 20151     0DCD  2DCF               	goto	u382_20
 20152     0DCE                     u382_21:
 20153     0DCE  2DD0               	goto	i1l4651
 20154     0DCF                     u382_20:
 20155     0DCF                     i1l4649:
 20156     0DCF  1439               	bsf	___flmul@bexp,0
 20157     0DD0                     i1l4651:
 20158     0DD0  0839               	movf	___flmul@bexp,w
 20159     0DD1  1903               	btfsc	3,2
 20160     0DD2  2DD4               	goto	u383_21
 20161     0DD3  2DD5               	goto	u383_20
 20162     0DD4                     u383_21:
 20163     0DD4  2DE4               	goto	i1l4659
 20164     0DD5                     u383_20:
 20165     0DD5                     i1l4653:
 20166     0DD5  0A39               	incf	___flmul@bexp,w
 20167     0DD6  1D03               	btfss	3,2
 20168     0DD7  2DD9               	goto	u384_21
 20169     0DD8  2DDA               	goto	u384_20
 20170     0DD9                     u384_21:
 20171     0DD9  2DE2               	goto	i1l4657
 20172     0DDA                     u384_20:
 20173     0DDA                     i1l4655:
 20174     0DDA  3000               	movlw	0
 20175     0DDB  00A9               	movwf	___flmul@b+3
 20176     0DDC  3000               	movlw	0
 20177     0DDD  00A8               	movwf	___flmul@b+2
 20178     0DDE  3000               	movlw	0
 20179     0DDF  00A7               	movwf	___flmul@b+1
 20180     0DE0  3000               	movlw	0
 20181     0DE1  00A6               	movwf	___flmul@b
 20182     0DE2                     i1l4657:
 20183     0DE2  17A8               	bsf	___flmul@b+2,7
 20184     0DE3  2DEC               	goto	i1l4661
 20185     0DE4                     i1l4659:
 20186     0DE4  3000               	movlw	0
 20187     0DE5  00A9               	movwf	___flmul@b+3
 20188     0DE6  3000               	movlw	0
 20189     0DE7  00A8               	movwf	___flmul@b+2
 20190     0DE8  3000               	movlw	0
 20191     0DE9  00A7               	movwf	___flmul@b+1
 20192     0DEA  3000               	movlw	0
 20193     0DEB  00A6               	movwf	___flmul@b
 20194     0DEC                     i1l4661:
 20195     0DEC  082D               	movf	___flmul@a+3,w
 20196     0DED  3980               	andlw	128
 20197     0DEE  00AE               	movwf	??___flmul
 20198     0DEF  082E               	movf	??___flmul,w
 20199     0DF0  06B3               	xorwf	___flmul@sign,f
 20200     0DF1                     i1l4663:
 20201     0DF1  352D               	lslf	___flmul@a+3,w
 20202     0DF2  00B8               	movwf	___flmul@aexp
 20203     0DF3                     i1l4665:
 20204     0DF3  1FAC               	btfss	___flmul@a+2,7
 20205     0DF4  2DF6               	goto	u385_21
 20206     0DF5  2DF7               	goto	u385_20
 20207     0DF6                     u385_21:
 20208     0DF6  2DF8               	goto	i1l4669
 20209     0DF7                     u385_20:
 20210     0DF7                     i1l4667:
 20211     0DF7  1438               	bsf	___flmul@aexp,0
 20212     0DF8                     i1l4669:
 20213     0DF8  0838               	movf	___flmul@aexp,w
 20214     0DF9  1903               	btfsc	3,2
 20215     0DFA  2DFC               	goto	u386_21
 20216     0DFB  2DFD               	goto	u386_20
 20217     0DFC                     u386_21:
 20218     0DFC  2E0C               	goto	i1l4677
 20219     0DFD                     u386_20:
 20220     0DFD                     i1l4671:
 20221     0DFD  0A38               	incf	___flmul@aexp,w
 20222     0DFE  1D03               	btfss	3,2
 20223     0DFF  2E01               	goto	u387_21
 20224     0E00  2E02               	goto	u387_20
 20225     0E01                     u387_21:
 20226     0E01  2E0A               	goto	i1l4675
 20227     0E02                     u387_20:
 20228     0E02                     i1l4673:
 20229     0E02  3000               	movlw	0
 20230     0E03  00AD               	movwf	___flmul@a+3
 20231     0E04  3000               	movlw	0
 20232     0E05  00AC               	movwf	___flmul@a+2
 20233     0E06  3000               	movlw	0
 20234     0E07  00AB               	movwf	___flmul@a+1
 20235     0E08  3000               	movlw	0
 20236     0E09  00AA               	movwf	___flmul@a
 20237     0E0A                     i1l4675:
 20238     0E0A  17AC               	bsf	___flmul@a+2,7
 20239     0E0B  2E14               	goto	i1l4679
 20240     0E0C                     i1l4677:
 20241     0E0C  3000               	movlw	0
 20242     0E0D  00AD               	movwf	___flmul@a+3
 20243     0E0E  3000               	movlw	0
 20244     0E0F  00AC               	movwf	___flmul@a+2
 20245     0E10  3000               	movlw	0
 20246     0E11  00AB               	movwf	___flmul@a+1
 20247     0E12  3000               	movlw	0
 20248     0E13  00AA               	movwf	___flmul@a
 20249     0E14                     i1l4679:
 20250     0E14  0838               	movf	___flmul@aexp,w
 20251     0E15  1903               	btfsc	3,2
 20252     0E16  2E18               	goto	u388_21
 20253     0E17  2E19               	goto	u388_20
 20254     0E18                     u388_21:
 20255     0E18  2E1E               	goto	i1l4683
 20256     0E19                     u388_20:
 20257     0E19                     i1l4681:
 20258     0E19  0839               	movf	___flmul@bexp,w
 20259     0E1A  1D03               	btfss	3,2
 20260     0E1B  2E1D               	goto	u389_21
 20261     0E1C  2E1E               	goto	u389_20
 20262     0E1D                     u389_21:
 20263     0E1D  2E27               	goto	i1l4687
 20264     0E1E                     u389_20:
 20265     0E1E                     i1l4683:
 20266     0E1E  3000               	movlw	0
 20267     0E1F  00A9               	movwf	?___flmul+3
 20268     0E20  3000               	movlw	0
 20269     0E21  00A8               	movwf	?___flmul+2
 20270     0E22  3000               	movlw	0
 20271     0E23  00A7               	movwf	?___flmul+1
 20272     0E24  3000               	movlw	0
 20273     0E25  00A6               	movwf	?___flmul
 20274     0E26  2FFF               	goto	i1l1665
 20275     0E27                     i1l4687:
 20276     0E27  0826               	movf	___flmul@b,w
 20277     0E28  00F0               	movwf	__Umul8_16@multiplicand
 20278     0E29  082C               	movf	___flmul@a+2,w
 20279     0E2A  319F  274A  318D   	fcall	__Umul8_16
 20280     0E2D  0871               	movf	?__Umul8_16+1,w
 20281     0E2E  0020               	movlb	0	; select bank0
 20282     0E2F  00BF               	movwf	___flmul@temp+1
 20283     0E30  0870               	movf	?__Umul8_16,w
 20284     0E31  00BE               	movwf	___flmul@temp
 20285     0E32                     i1l4689:
 20286     0E32  083E               	movf	___flmul@temp,w
 20287     0E33  00AE               	movwf	??___flmul
 20288     0E34  01AF               	clrf	??___flmul+1
 20289     0E35  01B0               	clrf	??___flmul+2
 20290     0E36  01B1               	clrf	??___flmul+3
 20291     0E37  0831               	movf	??___flmul+3,w
 20292     0E38  00B7               	movwf	___flmul@grs+3
 20293     0E39  0830               	movf	??___flmul+2,w
 20294     0E3A  00B6               	movwf	___flmul@grs+2
 20295     0E3B  082F               	movf	??___flmul+1,w
 20296     0E3C  00B5               	movwf	___flmul@grs+1
 20297     0E3D  082E               	movf	??___flmul,w
 20298     0E3E  00B4               	movwf	___flmul@grs
 20299     0E3F                     i1l4691:
 20300     0E3F  083F               	movf	___flmul@temp+1,w
 20301     0E40  00AE               	movwf	??___flmul
 20302     0E41  01AF               	clrf	??___flmul+1
 20303     0E42  01B0               	clrf	??___flmul+2
 20304     0E43  01B1               	clrf	??___flmul+3
 20305     0E44  0831               	movf	??___flmul+3,w
 20306     0E45  00BD               	movwf	___flmul@prod+3
 20307     0E46  0830               	movf	??___flmul+2,w
 20308     0E47  00BC               	movwf	___flmul@prod+2
 20309     0E48  082F               	movf	??___flmul+1,w
 20310     0E49  00BB               	movwf	___flmul@prod+1
 20311     0E4A  082E               	movf	??___flmul,w
 20312     0E4B  00BA               	movwf	___flmul@prod
 20313     0E4C  0827               	movf	___flmul@b+1,w
 20314     0E4D  00F0               	movwf	__Umul8_16@multiplicand
 20315     0E4E  082B               	movf	___flmul@a+1,w
 20316     0E4F  319F  274A  318D   	fcall	__Umul8_16
 20317     0E52  0871               	movf	?__Umul8_16+1,w
 20318     0E53  0020               	movlb	0	; select bank0
 20319     0E54  00BF               	movwf	___flmul@temp+1
 20320     0E55  0870               	movf	?__Umul8_16,w
 20321     0E56  00BE               	movwf	___flmul@temp
 20322     0E57                     i1l4693:
 20323     0E57  083E               	movf	___flmul@temp,w
 20324     0E58  00AE               	movwf	??___flmul
 20325     0E59  01AF               	clrf	??___flmul+1
 20326     0E5A  01B0               	clrf	??___flmul+2
 20327     0E5B  01B1               	clrf	??___flmul+3
 20328     0E5C  082E               	movf	??___flmul,w
 20329     0E5D  07B4               	addwf	___flmul@grs,f
 20330     0E5E  082F               	movf	??___flmul+1,w
 20331     0E5F  3DB5               	addwfc	___flmul@grs+1,f
 20332     0E60  0830               	movf	??___flmul+2,w
 20333     0E61  3DB6               	addwfc	___flmul@grs+2,f
 20334     0E62  0831               	movf	??___flmul+3,w
 20335     0E63  3DB7               	addwfc	___flmul@grs+3,f
 20336     0E64                     i1l4695:
 20337     0E64  083F               	movf	___flmul@temp+1,w
 20338     0E65  00AE               	movwf	??___flmul
 20339     0E66  01AF               	clrf	??___flmul+1
 20340     0E67  01B0               	clrf	??___flmul+2
 20341     0E68  01B1               	clrf	??___flmul+3
 20342     0E69  082E               	movf	??___flmul,w
 20343     0E6A  07BA               	addwf	___flmul@prod,f
 20344     0E6B  082F               	movf	??___flmul+1,w
 20345     0E6C  3DBB               	addwfc	___flmul@prod+1,f
 20346     0E6D  0830               	movf	??___flmul+2,w
 20347     0E6E  3DBC               	addwfc	___flmul@prod+2,f
 20348     0E6F  0831               	movf	??___flmul+3,w
 20349     0E70  3DBD               	addwfc	___flmul@prod+3,f
 20350     0E71  0828               	movf	___flmul@b+2,w
 20351     0E72  00F0               	movwf	__Umul8_16@multiplicand
 20352     0E73  082A               	movf	___flmul@a,w
 20353     0E74  319F  274A  318D   	fcall	__Umul8_16
 20354     0E77  0871               	movf	?__Umul8_16+1,w
 20355     0E78  0020               	movlb	0	; select bank0
 20356     0E79  00BF               	movwf	___flmul@temp+1
 20357     0E7A  0870               	movf	?__Umul8_16,w
 20358     0E7B  00BE               	movwf	___flmul@temp
 20359     0E7C                     i1l4697:
 20360     0E7C  083E               	movf	___flmul@temp,w
 20361     0E7D  00AE               	movwf	??___flmul
 20362     0E7E  01AF               	clrf	??___flmul+1
 20363     0E7F  01B0               	clrf	??___flmul+2
 20364     0E80  01B1               	clrf	??___flmul+3
 20365     0E81  082E               	movf	??___flmul,w
 20366     0E82  07B4               	addwf	___flmul@grs,f
 20367     0E83  082F               	movf	??___flmul+1,w
 20368     0E84  3DB5               	addwfc	___flmul@grs+1,f
 20369     0E85  0830               	movf	??___flmul+2,w
 20370     0E86  3DB6               	addwfc	___flmul@grs+2,f
 20371     0E87  0831               	movf	??___flmul+3,w
 20372     0E88  3DB7               	addwfc	___flmul@grs+3,f
 20373     0E89                     i1l4699:
 20374     0E89  083F               	movf	___flmul@temp+1,w
 20375     0E8A  00AE               	movwf	??___flmul
 20376     0E8B  01AF               	clrf	??___flmul+1
 20377     0E8C  01B0               	clrf	??___flmul+2
 20378     0E8D  01B1               	clrf	??___flmul+3
 20379     0E8E  082E               	movf	??___flmul,w
 20380     0E8F  07BA               	addwf	___flmul@prod,f
 20381     0E90  082F               	movf	??___flmul+1,w
 20382     0E91  3DBB               	addwfc	___flmul@prod+1,f
 20383     0E92  0830               	movf	??___flmul+2,w
 20384     0E93  3DBC               	addwfc	___flmul@prod+2,f
 20385     0E94  0831               	movf	??___flmul+3,w
 20386     0E95  3DBD               	addwfc	___flmul@prod+3,f
 20387     0E96                     i1l4701:
 20388     0E96  3008               	movlw	8
 20389     0E97                     u390_25:
 20390     0E97  35B4               	lslf	___flmul@grs,f
 20391     0E98  0DB5               	rlf	___flmul@grs+1,f
 20392     0E99  0DB6               	rlf	___flmul@grs+2,f
 20393     0E9A  0DB7               	rlf	___flmul@grs+3,f
 20394     0E9B  0B89               	decfsz	9,f
 20395     0E9C  2E97               	goto	u390_25
 20396     0E9D                     i1l4703:
 20397     0E9D  0827               	movf	___flmul@b+1,w
 20398     0E9E  00F0               	movwf	__Umul8_16@multiplicand
 20399     0E9F  082A               	movf	___flmul@a,w
 20400     0EA0  319F  274A  318D   	fcall	__Umul8_16
 20401     0EA3  0871               	movf	?__Umul8_16+1,w
 20402     0EA4  0020               	movlb	0	; select bank0
 20403     0EA5  00BF               	movwf	___flmul@temp+1
 20404     0EA6  0870               	movf	?__Umul8_16,w
 20405     0EA7  00BE               	movwf	___flmul@temp
 20406     0EA8                     i1l4705:
 20407     0EA8  083E               	movf	___flmul@temp,w
 20408     0EA9  07B4               	addwf	___flmul@grs,f
 20409     0EAA  083F               	movf	___flmul@temp+1,w
 20410     0EAB  3DB5               	addwfc	___flmul@grs+1,f
 20411     0EAC  3000               	movlw	0
 20412     0EAD  3DB6               	addwfc	___flmul@grs+2,f
 20413     0EAE  3DB7               	addwfc	___flmul@grs+3,f
 20414     0EAF                     i1l4707:
 20415     0EAF  0826               	movf	___flmul@b,w
 20416     0EB0  00F0               	movwf	__Umul8_16@multiplicand
 20417     0EB1  082B               	movf	___flmul@a+1,w
 20418     0EB2  319F  274A  318D   	fcall	__Umul8_16
 20419     0EB5  0871               	movf	?__Umul8_16+1,w
 20420     0EB6  0020               	movlb	0	; select bank0
 20421     0EB7  00BF               	movwf	___flmul@temp+1
 20422     0EB8  0870               	movf	?__Umul8_16,w
 20423     0EB9  00BE               	movwf	___flmul@temp
 20424     0EBA                     i1l4709:
 20425     0EBA  083E               	movf	___flmul@temp,w
 20426     0EBB  07B4               	addwf	___flmul@grs,f
 20427     0EBC  083F               	movf	___flmul@temp+1,w
 20428     0EBD  3DB5               	addwfc	___flmul@grs+1,f
 20429     0EBE  3000               	movlw	0
 20430     0EBF  3DB6               	addwfc	___flmul@grs+2,f
 20431     0EC0  3DB7               	addwfc	___flmul@grs+3,f
 20432     0EC1                     i1l4711:
 20433     0EC1  3008               	movlw	8
 20434     0EC2                     u391_25:
 20435     0EC2  35B4               	lslf	___flmul@grs,f
 20436     0EC3  0DB5               	rlf	___flmul@grs+1,f
 20437     0EC4  0DB6               	rlf	___flmul@grs+2,f
 20438     0EC5  0DB7               	rlf	___flmul@grs+3,f
 20439     0EC6  0B89               	decfsz	9,f
 20440     0EC7  2EC2               	goto	u391_25
 20441     0EC8  0826               	movf	___flmul@b,w
 20442     0EC9  00F0               	movwf	__Umul8_16@multiplicand
 20443     0ECA  082A               	movf	___flmul@a,w
 20444     0ECB  319F  274A  318D   	fcall	__Umul8_16
 20445     0ECE  0871               	movf	?__Umul8_16+1,w
 20446     0ECF  0020               	movlb	0	; select bank0
 20447     0ED0  00BF               	movwf	___flmul@temp+1
 20448     0ED1  0870               	movf	?__Umul8_16,w
 20449     0ED2  00BE               	movwf	___flmul@temp
 20450     0ED3                     i1l4713:
 20451     0ED3  083E               	movf	___flmul@temp,w
 20452     0ED4  07B4               	addwf	___flmul@grs,f
 20453     0ED5  083F               	movf	___flmul@temp+1,w
 20454     0ED6  3DB5               	addwfc	___flmul@grs+1,f
 20455     0ED7  3000               	movlw	0
 20456     0ED8  3DB6               	addwfc	___flmul@grs+2,f
 20457     0ED9  3DB7               	addwfc	___flmul@grs+3,f
 20458     0EDA                     i1l4715:
 20459     0EDA  0827               	movf	___flmul@b+1,w
 20460     0EDB  00F0               	movwf	__Umul8_16@multiplicand
 20461     0EDC  082C               	movf	___flmul@a+2,w
 20462     0EDD  319F  274A  318D   	fcall	__Umul8_16
 20463     0EE0  0871               	movf	?__Umul8_16+1,w
 20464     0EE1  0020               	movlb	0	; select bank0
 20465     0EE2  00BF               	movwf	___flmul@temp+1
 20466     0EE3  0870               	movf	?__Umul8_16,w
 20467     0EE4  00BE               	movwf	___flmul@temp
 20468     0EE5  083E               	movf	___flmul@temp,w
 20469     0EE6  07BA               	addwf	___flmul@prod,f
 20470     0EE7  083F               	movf	___flmul@temp+1,w
 20471     0EE8  3DBB               	addwfc	___flmul@prod+1,f
 20472     0EE9  3000               	movlw	0
 20473     0EEA  3DBC               	addwfc	___flmul@prod+2,f
 20474     0EEB  3DBD               	addwfc	___flmul@prod+3,f
 20475     0EEC                     i1l4717:
 20476     0EEC  0828               	movf	___flmul@b+2,w
 20477     0EED  00F0               	movwf	__Umul8_16@multiplicand
 20478     0EEE  082B               	movf	___flmul@a+1,w
 20479     0EEF  319F  274A  318D   	fcall	__Umul8_16
 20480     0EF2  0871               	movf	?__Umul8_16+1,w
 20481     0EF3  0020               	movlb	0	; select bank0
 20482     0EF4  00BF               	movwf	___flmul@temp+1
 20483     0EF5  0870               	movf	?__Umul8_16,w
 20484     0EF6  00BE               	movwf	___flmul@temp
 20485     0EF7                     i1l4719:
 20486     0EF7  083E               	movf	___flmul@temp,w
 20487     0EF8  07BA               	addwf	___flmul@prod,f
 20488     0EF9  083F               	movf	___flmul@temp+1,w
 20489     0EFA  3DBB               	addwfc	___flmul@prod+1,f
 20490     0EFB  3000               	movlw	0
 20491     0EFC  3DBC               	addwfc	___flmul@prod+2,f
 20492     0EFD  3DBD               	addwfc	___flmul@prod+3,f
 20493     0EFE  0828               	movf	___flmul@b+2,w
 20494     0EFF  00F0               	movwf	__Umul8_16@multiplicand
 20495     0F00  082C               	movf	___flmul@a+2,w
 20496     0F01  319F  274A  318D   	fcall	__Umul8_16
 20497     0F04  0871               	movf	?__Umul8_16+1,w
 20498     0F05  0020               	movlb	0	; select bank0
 20499     0F06  00BF               	movwf	___flmul@temp+1
 20500     0F07  0870               	movf	?__Umul8_16,w
 20501     0F08  00BE               	movwf	___flmul@temp
 20502     0F09                     i1l4721:
 20503     0F09  083E               	movf	___flmul@temp,w
 20504     0F0A  00AE               	movwf	??___flmul
 20505     0F0B  083F               	movf	___flmul@temp+1,w
 20506     0F0C  00AF               	movwf	??___flmul+1
 20507     0F0D  01B0               	clrf	??___flmul+2
 20508     0F0E  01B1               	clrf	??___flmul+3
 20509     0F0F  3008               	movlw	8
 20510     0F10                     u392_25:
 20511     0F10  35AE               	lslf	??___flmul,f
 20512     0F11  0DAF               	rlf	??___flmul+1,f
 20513     0F12  0DB0               	rlf	??___flmul+2,f
 20514     0F13  0DB1               	rlf	??___flmul+3,f
 20515     0F14                     u392_20:
 20516     0F14  0B89               	decfsz	9,f
 20517     0F15  2F10               	goto	u392_25
 20518     0F16  082E               	movf	??___flmul,w
 20519     0F17  07BA               	addwf	___flmul@prod,f
 20520     0F18  082F               	movf	??___flmul+1,w
 20521     0F19  3DBB               	addwfc	___flmul@prod+1,f
 20522     0F1A  0830               	movf	??___flmul+2,w
 20523     0F1B  3DBC               	addwfc	___flmul@prod+2,f
 20524     0F1C  0831               	movf	??___flmul+3,w
 20525     0F1D  3DBD               	addwfc	___flmul@prod+3,f
 20526     0F1E                     i1l4723:
 20527     0F1E  0834               	movf	___flmul@grs,w
 20528     0F1F  00AE               	movwf	??___flmul
 20529     0F20  0835               	movf	___flmul@grs+1,w
 20530     0F21  00AF               	movwf	??___flmul+1
 20531     0F22  0836               	movf	___flmul@grs+2,w
 20532     0F23  00B0               	movwf	??___flmul+2
 20533     0F24  0837               	movf	___flmul@grs+3,w
 20534     0F25  00B1               	movwf	??___flmul+3
 20535     0F26  3018               	movlw	24
 20536     0F27                     u393_25:
 20537     0F27  36B1               	lsrf	??___flmul+3,f
 20538     0F28  0CB0               	rrf	??___flmul+2,f
 20539     0F29  0CAF               	rrf	??___flmul+1,f
 20540     0F2A  0CAE               	rrf	??___flmul,f
 20541     0F2B                     u393_20:
 20542     0F2B  0B89               	decfsz	9,f
 20543     0F2C  2F27               	goto	u393_25
 20544     0F2D  082E               	movf	??___flmul,w
 20545     0F2E  07BA               	addwf	___flmul@prod,f
 20546     0F2F  082F               	movf	??___flmul+1,w
 20547     0F30  3DBB               	addwfc	___flmul@prod+1,f
 20548     0F31  0830               	movf	??___flmul+2,w
 20549     0F32  3DBC               	addwfc	___flmul@prod+2,f
 20550     0F33  0831               	movf	??___flmul+3,w
 20551     0F34  3DBD               	addwfc	___flmul@prod+3,f
 20552     0F35                     i1l4725:
 20553     0F35  3008               	movlw	8
 20554     0F36                     u394_25:
 20555     0F36  35B4               	lslf	___flmul@grs,f
 20556     0F37  0DB5               	rlf	___flmul@grs+1,f
 20557     0F38  0DB6               	rlf	___flmul@grs+2,f
 20558     0F39  0DB7               	rlf	___flmul@grs+3,f
 20559     0F3A  0B89               	decfsz	9,f
 20560     0F3B  2F36               	goto	u394_25
 20561     0F3C                     i1l4727:
 20562     0F3C  0839               	movf	___flmul@bexp,w
 20563     0F3D  0738               	addwf	___flmul@aexp,w
 20564     0F3E  00AE               	movwf	??___flmul
 20565     0F3F  01AF               	clrf	??___flmul+1
 20566     0F40  0DAF               	rlf	??___flmul+1,f
 20567     0F41  082E               	movf	??___flmul,w
 20568     0F42  3E82               	addlw	130
 20569     0F43  00BE               	movwf	___flmul@temp
 20570     0F44  30FF               	movlw	255
 20571     0F45  3D2F               	addwfc	??___flmul+1,w
 20572     0F46  00BF               	movwf	___flmul@temp+1
 20573     0F47  2F5F               	goto	i1l4739
 20574     0F48                     i1l4729:
 20575     0F48  3001               	movlw	1
 20576     0F49                     u395_25:
 20577     0F49  35BA               	lslf	___flmul@prod,f
 20578     0F4A  0DBB               	rlf	___flmul@prod+1,f
 20579     0F4B  0DBC               	rlf	___flmul@prod+2,f
 20580     0F4C  0DBD               	rlf	___flmul@prod+3,f
 20581     0F4D  0B89               	decfsz	9,f
 20582     0F4E  2F49               	goto	u395_25
 20583     0F4F                     i1l4731:
 20584     0F4F  1FB7               	btfss	___flmul@grs+3,7
 20585     0F50  2F52               	goto	u396_21
 20586     0F51  2F53               	goto	u396_20
 20587     0F52                     u396_21:
 20588     0F52  2F54               	goto	i1l4735
 20589     0F53                     u396_20:
 20590     0F53                     i1l4733:
 20591     0F53  143A               	bsf	___flmul@prod,0
 20592     0F54                     i1l4735:
 20593     0F54  3001               	movlw	1
 20594     0F55                     u397_25:
 20595     0F55  35B4               	lslf	___flmul@grs,f
 20596     0F56  0DB5               	rlf	___flmul@grs+1,f
 20597     0F57  0DB6               	rlf	___flmul@grs+2,f
 20598     0F58  0DB7               	rlf	___flmul@grs+3,f
 20599     0F59  0B89               	decfsz	9,f
 20600     0F5A  2F55               	goto	u397_25
 20601     0F5B                     i1l4737:
 20602     0F5B  30FF               	movlw	255
 20603     0F5C  07BE               	addwf	___flmul@temp,f
 20604     0F5D  30FF               	movlw	255
 20605     0F5E  3DBF               	addwfc	___flmul@temp+1,f
 20606     0F5F                     i1l4739:
 20607     0F5F  1FBC               	btfss	___flmul@prod+2,7
 20608     0F60  2F62               	goto	u398_21
 20609     0F61  2F63               	goto	u398_20
 20610     0F62                     u398_21:
 20611     0F62  2F48               	goto	i1l4729
 20612     0F63                     u398_20:
 20613     0F63                     i1l4741:
 20614     0F63  01B8               	clrf	___flmul@aexp
 20615     0F64                     i1l4743:
 20616     0F64  1FB7               	btfss	___flmul@grs+3,7
 20617     0F65  2F67               	goto	u399_21
 20618     0F66  2F68               	goto	u399_20
 20619     0F67                     u399_21:
 20620     0F67  2F84               	goto	i1l4751
 20621     0F68                     u399_20:
 20622     0F68                     i1l4745:
 20623     0F68  30FF               	movlw	255
 20624     0F69  0534               	andwf	___flmul@grs,w
 20625     0F6A  00AE               	movwf	??___flmul
 20626     0F6B  30FF               	movlw	255
 20627     0F6C  0535               	andwf	___flmul@grs+1,w
 20628     0F6D  00AF               	movwf	??___flmul+1
 20629     0F6E  30FF               	movlw	255
 20630     0F6F  0536               	andwf	___flmul@grs+2,w
 20631     0F70  00B0               	movwf	??___flmul+2
 20632     0F71  307F               	movlw	127
 20633     0F72  0537               	andwf	___flmul@grs+3,w
 20634     0F73  00B1               	movwf	??___flmul+3
 20635     0F74  0831               	movf	??___flmul+3,w
 20636     0F75  0430               	iorwf	??___flmul+2,w
 20637     0F76  042F               	iorwf	??___flmul+1,w
 20638     0F77  042E               	iorwf	??___flmul,w
 20639     0F78  1903               	skipnz
 20640     0F79  2F7B               	goto	u400_21
 20641     0F7A  2F7C               	goto	u400_20
 20642     0F7B                     u400_21:
 20643     0F7B  2F7F               	goto	i1l1671
 20644     0F7C                     u400_20:
 20645     0F7C                     i1l4747:
 20646     0F7C  01B8               	clrf	___flmul@aexp
 20647     0F7D  0AB8               	incf	___flmul@aexp,f
 20648     0F7E  2F84               	goto	i1l4751
 20649     0F7F                     i1l1671:
 20650     0F7F  1C3A               	btfss	___flmul@prod,0
 20651     0F80  2F82               	goto	u401_21
 20652     0F81  2F83               	goto	u401_20
 20653     0F82                     u401_21:
 20654     0F82  2F84               	goto	i1l4751
 20655     0F83                     u401_20:
 20656     0F83  2F7C               	goto	i1l4747
 20657     0F84                     i1l4751:
 20658     0F84  0838               	movf	___flmul@aexp,w
 20659     0F85  1903               	btfsc	3,2
 20660     0F86  2F88               	goto	u402_21
 20661     0F87  2F89               	goto	u402_20
 20662     0F88                     u402_21:
 20663     0F88  2FB1               	goto	i1l4761
 20664     0F89                     u402_20:
 20665     0F89                     i1l4753:
 20666     0F89  3001               	movlw	1
 20667     0F8A  07BA               	addwf	___flmul@prod,f
 20668     0F8B  3000               	movlw	0
 20669     0F8C  3DBB               	addwfc	___flmul@prod+1,f
 20670     0F8D  3000               	movlw	0
 20671     0F8E  3DBC               	addwfc	___flmul@prod+2,f
 20672     0F8F  3000               	movlw	0
 20673     0F90  3DBD               	addwfc	___flmul@prod+3,f
 20674     0F91                     i1l4755:
 20675     0F91  1C3D               	btfss	___flmul@prod+3,0
 20676     0F92  2F94               	goto	u403_21
 20677     0F93  2F95               	goto	u403_20
 20678     0F94                     u403_21:
 20679     0F94  2FB1               	goto	i1l4761
 20680     0F95                     u403_20:
 20681     0F95                     i1l4757:
 20682     0F95  083A               	movf	___flmul@prod,w
 20683     0F96  00AE               	movwf	??___flmul
 20684     0F97  083B               	movf	___flmul@prod+1,w
 20685     0F98  00AF               	movwf	??___flmul+1
 20686     0F99  083C               	movf	___flmul@prod+2,w
 20687     0F9A  00B0               	movwf	??___flmul+2
 20688     0F9B  083D               	movf	___flmul@prod+3,w
 20689     0F9C  00B1               	movwf	??___flmul+3
 20690     0F9D  3001               	movlw	1
 20691     0F9E  00B2               	movwf	??___flmul+4
 20692     0F9F                     u404_25:
 20693     0F9F  37B1               	asrf	??___flmul+3,f
 20694     0FA0  0CB0               	rrf	??___flmul+2,f
 20695     0FA1  0CAF               	rrf	??___flmul+1,f
 20696     0FA2  0CAE               	rrf	??___flmul,f
 20697     0FA3                     u404_20:
 20698     0FA3  0BB2               	decfsz	??___flmul+4,f
 20699     0FA4  2F9F               	goto	u404_25
 20700     0FA5  0831               	movf	??___flmul+3,w
 20701     0FA6  00BD               	movwf	___flmul@prod+3
 20702     0FA7  0830               	movf	??___flmul+2,w
 20703     0FA8  00BC               	movwf	___flmul@prod+2
 20704     0FA9  082F               	movf	??___flmul+1,w
 20705     0FAA  00BB               	movwf	___flmul@prod+1
 20706     0FAB  082E               	movf	??___flmul,w
 20707     0FAC  00BA               	movwf	___flmul@prod
 20708     0FAD                     i1l4759:
 20709     0FAD  3001               	movlw	1
 20710     0FAE  07BE               	addwf	___flmul@temp,f
 20711     0FAF  3000               	movlw	0
 20712     0FB0  3DBF               	addwfc	___flmul@temp+1,f
 20713     0FB1                     i1l4761:
 20714     0FB1  083F               	movf	___flmul@temp+1,w
 20715     0FB2  3A80               	xorlw	128
 20716     0FB3  00AE               	movwf	??___flmul
 20717     0FB4  3080               	movlw	128
 20718     0FB5  022E               	subwf	??___flmul,w
 20719     0FB6  1D03               	skipz
 20720     0FB7  2FBA               	goto	u405_25
 20721     0FB8  30FF               	movlw	255
 20722     0FB9  023E               	subwf	___flmul@temp,w
 20723     0FBA                     u405_25:
 20724     0FBA  1C03               	skipc
 20725     0FBB  2FBD               	goto	u405_21
 20726     0FBC  2FBE               	goto	u405_20
 20727     0FBD                     u405_21:
 20728     0FBD  2FC8               	goto	i1l4765
 20729     0FBE                     u405_20:
 20730     0FBE                     i1l4763:
 20731     0FBE  307F               	movlw	127
 20732     0FBF  0020               	movlb	0	; select bank0
 20733     0FC0  00BD               	movwf	___flmul@prod+3
 20734     0FC1  3080               	movlw	128
 20735     0FC2  00BC               	movwf	___flmul@prod+2
 20736     0FC3  3000               	movlw	0
 20737     0FC4  00BB               	movwf	___flmul@prod+1
 20738     0FC5  3000               	movlw	0
 20739     0FC6  00BA               	movwf	___flmul@prod
 20740     0FC7  2FF3               	goto	i1l1677
 20741     0FC8                     i1l4765:
 20742     0FC8  0020               	movlb	0	; select bank0
 20743     0FC9  083F               	movf	___flmul@temp+1,w
 20744     0FCA  3A80               	xorlw	128
 20745     0FCB  00AE               	movwf	??___flmul
 20746     0FCC  3080               	movlw	128
 20747     0FCD  022E               	subwf	??___flmul,w
 20748     0FCE  1D03               	skipz
 20749     0FCF  2FD2               	goto	u406_25
 20750     0FD0  3001               	movlw	1
 20751     0FD1  023E               	subwf	___flmul@temp,w
 20752     0FD2                     u406_25:
 20753     0FD2  1803               	skipnc
 20754     0FD3  2FD5               	goto	u406_21
 20755     0FD4  2FD6               	goto	u406_20
 20756     0FD5                     u406_21:
 20757     0FD5  2FE1               	goto	i1l4771
 20758     0FD6                     u406_20:
 20759     0FD6                     i1l4767:
 20760     0FD6  3000               	movlw	0
 20761     0FD7  0020               	movlb	0	; select bank0
 20762     0FD8  00BD               	movwf	___flmul@prod+3
 20763     0FD9  3000               	movlw	0
 20764     0FDA  00BC               	movwf	___flmul@prod+2
 20765     0FDB  3000               	movlw	0
 20766     0FDC  00BB               	movwf	___flmul@prod+1
 20767     0FDD  3000               	movlw	0
 20768     0FDE  00BA               	movwf	___flmul@prod
 20769     0FDF                     i1l4769:
 20770     0FDF  01B3               	clrf	___flmul@sign
 20771     0FE0  2FF3               	goto	i1l1677
 20772     0FE1                     i1l4771:
 20773     0FE1  0020               	movlb	0	; select bank0
 20774     0FE2  083E               	movf	___flmul@temp,w
 20775     0FE3  00B9               	movwf	___flmul@bexp
 20776     0FE4  30FF               	movlw	255
 20777     0FE5  05BA               	andwf	___flmul@prod,f
 20778     0FE6  30FF               	movlw	255
 20779     0FE7  05BB               	andwf	___flmul@prod+1,f
 20780     0FE8  307F               	movlw	127
 20781     0FE9  05BC               	andwf	___flmul@prod+2,f
 20782     0FEA  3000               	movlw	0
 20783     0FEB  05BD               	andwf	___flmul@prod+3,f
 20784     0FEC                     i1l4773:
 20785     0FEC  1C39               	btfss	___flmul@bexp,0
 20786     0FED  2FEF               	goto	u407_21
 20787     0FEE  2FF0               	goto	u407_20
 20788     0FEF                     u407_21:
 20789     0FEF  2FF1               	goto	i1l4777
 20790     0FF0                     u407_20:
 20791     0FF0                     i1l4775:
 20792     0FF0  17BC               	bsf	___flmul@prod+2,7
 20793     0FF1                     i1l4777:
 20794     0FF1  3639               	lsrf	___flmul@bexp,w
 20795     0FF2  00BD               	movwf	___flmul@prod+3
 20796     0FF3                     i1l1677:
 20797     0FF3  0833               	movf	___flmul@sign,w
 20798     0FF4  00AE               	movwf	??___flmul
 20799     0FF5  082E               	movf	??___flmul,w
 20800     0FF6  04BD               	iorwf	___flmul@prod+3,f
 20801     0FF7                     i1l4779:
 20802     0FF7  083D               	movf	___flmul@prod+3,w
 20803     0FF8  00A9               	movwf	?___flmul+3
 20804     0FF9  083C               	movf	___flmul@prod+2,w
 20805     0FFA  00A8               	movwf	?___flmul+2
 20806     0FFB  083B               	movf	___flmul@prod+1,w
 20807     0FFC  00A7               	movwf	?___flmul+1
 20808     0FFD  083A               	movf	___flmul@prod,w
 20809     0FFE  00A6               	movwf	?___flmul
 20810     0FFF                     i1l1665:
 20811     0FFF  0008               	return
 20812     1000                     __end_of___flmul:
 20813                           
 20814                           	psect	text90
 20815     1F4A                     __ptext90:	
 20816 ;; *************** function __Umul8_16 *****************
 20817 ;; Defined at:
 20818 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
 20819 ;; Parameters:    Size  Location     Type
 20820 ;;  multiplier      1    wreg     unsigned char 
 20821 ;;  multiplicand    1    0[COMMON] unsigned char 
 20822 ;; Auto vars:     Size  Location     Type
 20823 ;;  multiplier      1    8[COMMON] unsigned char 
 20824 ;;  word_mpld       2    6[COMMON] unsigned short 
 20825 ;;  product         2    4[COMMON] unsigned short 
 20826 ;; Return value:  Size  Location     Type
 20827 ;;                  2    0[COMMON] unsigned int 
 20828 ;; Registers used:
 20829 ;;		wreg, status,2, status,0
 20830 ;; Tracked objects:
 20831 ;;		On entry : 0/0
 20832 ;;		On exit  : 0/0
 20833 ;;		Unchanged: 0/0
 20834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20836 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20837 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20838 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20839 ;;Total ram usage:        9 bytes
 20840 ;; Hardware stack levels used: 1
 20841 ;; This function calls:
 20842 ;;		Nothing
 20843 ;; This function is called by:
 20844 ;;		___flmul
 20845 ;; This function uses a non-reentrant model
 20846 ;;
 20847                           
 20848     1F4A                     __Umul8_16:	
 20849                           ;psect for function __Umul8_16
 20850                           
 20851                           
 20852                           ;incstack = 0
 20853                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 20854                           ;__Umul8_16@multiplier stored from wreg
 20855     1F4A  00F8               	movwf	__Umul8_16@multiplier
 20856     1F4B                     i1l4369:
 20857     1F4B  01F4               	clrf	__Umul8_16@product
 20858     1F4C  01F5               	clrf	__Umul8_16@product+1
 20859     1F4D                     i1l4371:
 20860     1F4D  0870               	movf	__Umul8_16@multiplicand,w
 20861     1F4E  00F2               	movwf	??__Umul8_16
 20862     1F4F  01F3               	clrf	??__Umul8_16+1
 20863     1F50  0872               	movf	??__Umul8_16,w
 20864     1F51  00F6               	movwf	__Umul8_16@word_mpld
 20865     1F52  0873               	movf	??__Umul8_16+1,w
 20866     1F53  00F7               	movwf	__Umul8_16@word_mpld+1
 20867     1F54                     i1l4373:
 20868     1F54  1C78               	btfss	__Umul8_16@multiplier,0
 20869     1F55  2F57               	goto	u325_21
 20870     1F56  2F58               	goto	u325_20
 20871     1F57                     u325_21:
 20872     1F57  2F5C               	goto	i1l1684
 20873     1F58                     u325_20:
 20874     1F58                     i1l4375:
 20875     1F58  0876               	movf	__Umul8_16@word_mpld,w
 20876     1F59  07F4               	addwf	__Umul8_16@product,f
 20877     1F5A  0877               	movf	__Umul8_16@word_mpld+1,w
 20878     1F5B  3DF5               	addwfc	__Umul8_16@product+1,f
 20879     1F5C                     i1l1684:
 20880     1F5C  3001               	movlw	1
 20881     1F5D                     u326_25:
 20882     1F5D  35F6               	lslf	__Umul8_16@word_mpld,f
 20883     1F5E  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 20884     1F5F  0B89               	decfsz	9,f
 20885     1F60  2F5D               	goto	u326_25
 20886     1F61  1003               	clrc
 20887     1F62  0CF8               	rrf	__Umul8_16@multiplier,f
 20888     1F63                     i1l4377:
 20889     1F63  0878               	movf	__Umul8_16@multiplier,w
 20890     1F64  1D03               	btfss	3,2
 20891     1F65  2F67               	goto	u327_21
 20892     1F66  2F68               	goto	u327_20
 20893     1F67                     u327_21:
 20894     1F67  2F54               	goto	i1l4373
 20895     1F68                     u327_20:
 20896     1F68                     i1l4379:
 20897     1F68  0875               	movf	__Umul8_16@product+1,w
 20898     1F69  00F1               	movwf	?__Umul8_16+1
 20899     1F6A  0874               	movf	__Umul8_16@product,w
 20900     1F6B  00F0               	movwf	?__Umul8_16
 20901     1F6C                     i1l1686:
 20902     1F6C  0008               	return
 20903     1F6D                     __end_of__Umul8_16:
 20904                           
 20905                           	psect	text91
 20906     148C                     __ptext91:	
 20907 ;; *************** function ___flge *****************
 20908 ;; Defined at:
 20909 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
 20910 ;; Parameters:    Size  Location     Type
 20911 ;;  ff1             4   32[BANK0 ] unsigned int 
 20912 ;;  ff2             4   36[BANK0 ] unsigned int 
 20913 ;; Auto vars:     Size  Location     Type
 20914 ;;		None
 20915 ;; Return value:  Size  Location     Type
 20916 ;;		None               void
 20917 ;; Registers used:
 20918 ;;		wreg, status,2, status,0
 20919 ;; Tracked objects:
 20920 ;;		On entry : 0/0
 20921 ;;		On exit  : 0/0
 20922 ;;		Unchanged: 0/0
 20923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20924 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20926 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20927 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20928 ;;Total ram usage:       12 bytes
 20929 ;; Hardware stack levels used: 1
 20930 ;; This function calls:
 20931 ;;		Nothing
 20932 ;; This function is called by:
 20933 ;;		_TMR0_Custom_ISR
 20934 ;;		_efgtoa
 20935 ;; This function uses a non-reentrant model
 20936 ;;
 20937                           
 20938     148C                     ___flge:	
 20939                           ;psect for function ___flge
 20940                           
 20941     148C                     i1l4433:	
 20942                           ;incstack = 0
 20943                           ; Regs used in ___flge: [wreg+status,2+status,0]
 20944                           
 20945     148C  3000               	movlw	0
 20946     148D  0020               	movlb	0	; select bank0
 20947     148E  0540               	andwf	___flge@ff1,w
 20948     148F  00C8               	movwf	??___flge
 20949     1490  3000               	movlw	0
 20950     1491  0541               	andwf	___flge@ff1+1,w
 20951     1492  00C9               	movwf	??___flge+1
 20952     1493  3080               	movlw	128
 20953     1494  0542               	andwf	___flge@ff1+2,w
 20954     1495  00CA               	movwf	??___flge+2
 20955     1496  307F               	movlw	127
 20956     1497  0543               	andwf	___flge@ff1+3,w
 20957     1498  00CB               	movwf	??___flge+3
 20958     1499  084B               	movf	??___flge+3,w
 20959     149A  044A               	iorwf	??___flge+2,w
 20960     149B  0449               	iorwf	??___flge+1,w
 20961     149C  0448               	iorwf	??___flge,w
 20962     149D  1D03               	skipz
 20963     149E  2CA0               	goto	u337_21
 20964     149F  2CA1               	goto	u337_20
 20965     14A0                     u337_21:
 20966     14A0  2CA9               	goto	i1l1446
 20967     14A1                     u337_20:
 20968     14A1                     i1l4435:
 20969     14A1  3000               	movlw	0
 20970     14A2  00C3               	movwf	___flge@ff1+3
 20971     14A3  3000               	movlw	0
 20972     14A4  00C2               	movwf	___flge@ff1+2
 20973     14A5  3000               	movlw	0
 20974     14A6  00C1               	movwf	___flge@ff1+1
 20975     14A7  3000               	movlw	0
 20976     14A8  00C0               	movwf	___flge@ff1
 20977     14A9                     i1l1446:
 20978     14A9  3000               	movlw	0
 20979     14AA  0544               	andwf	___flge@ff2,w
 20980     14AB  00C8               	movwf	??___flge
 20981     14AC  3000               	movlw	0
 20982     14AD  0545               	andwf	___flge@ff2+1,w
 20983     14AE  00C9               	movwf	??___flge+1
 20984     14AF  3080               	movlw	128
 20985     14B0  0546               	andwf	___flge@ff2+2,w
 20986     14B1  00CA               	movwf	??___flge+2
 20987     14B2  307F               	movlw	127
 20988     14B3  0547               	andwf	___flge@ff2+3,w
 20989     14B4  00CB               	movwf	??___flge+3
 20990     14B5  084B               	movf	??___flge+3,w
 20991     14B6  044A               	iorwf	??___flge+2,w
 20992     14B7  0449               	iorwf	??___flge+1,w
 20993     14B8  0448               	iorwf	??___flge,w
 20994     14B9  1D03               	skipz
 20995     14BA  2CBC               	goto	u338_21
 20996     14BB  2CBD               	goto	u338_20
 20997     14BC                     u338_21:
 20998     14BC  2CC5               	goto	i1l4439
 20999     14BD                     u338_20:
 21000     14BD                     i1l4437:
 21001     14BD  3000               	movlw	0
 21002     14BE  00C7               	movwf	___flge@ff2+3
 21003     14BF  3000               	movlw	0
 21004     14C0  00C6               	movwf	___flge@ff2+2
 21005     14C1  3000               	movlw	0
 21006     14C2  00C5               	movwf	___flge@ff2+1
 21007     14C3  3000               	movlw	0
 21008     14C4  00C4               	movwf	___flge@ff2
 21009     14C5                     i1l4439:
 21010     14C5  1FC3               	btfss	___flge@ff1+3,7
 21011     14C6  2CC8               	goto	u339_21
 21012     14C7  2CC9               	goto	u339_20
 21013     14C8                     u339_21:
 21014     14C8  2CE1               	goto	i1l4443
 21015     14C9                     u339_20:
 21016     14C9                     i1l4441:
 21017     14C9  3000               	movlw	0
 21018     14CA  00C8               	movwf	??___flge
 21019     14CB  3000               	movlw	0
 21020     14CC  00C9               	movwf	??___flge+1
 21021     14CD  3000               	movlw	0
 21022     14CE  00CA               	movwf	??___flge+2
 21023     14CF  3080               	movlw	128
 21024     14D0  00CB               	movwf	??___flge+3
 21025     14D1  0840               	movf	___flge@ff1,w
 21026     14D2  02C8               	subwf	??___flge,f
 21027     14D3  0841               	movf	___flge@ff1+1,w
 21028     14D4  3BC9               	subwfb	??___flge+1,f
 21029     14D5  0842               	movf	___flge@ff1+2,w
 21030     14D6  3BCA               	subwfb	??___flge+2,f
 21031     14D7  0843               	movf	___flge@ff1+3,w
 21032     14D8  3BCB               	subwfb	??___flge+3,f
 21033     14D9  084B               	movf	??___flge+3,w
 21034     14DA  00C3               	movwf	___flge@ff1+3
 21035     14DB  084A               	movf	??___flge+2,w
 21036     14DC  00C2               	movwf	___flge@ff1+2
 21037     14DD  0849               	movf	??___flge+1,w
 21038     14DE  00C1               	movwf	___flge@ff1+1
 21039     14DF  0848               	movf	??___flge,w
 21040     14E0  00C0               	movwf	___flge@ff1
 21041     14E1                     i1l4443:
 21042     14E1  1FC7               	btfss	___flge@ff2+3,7
 21043     14E2  2CE4               	goto	u340_21
 21044     14E3  2CE5               	goto	u340_20
 21045     14E4                     u340_21:
 21046     14E4  2CFD               	goto	i1l1449
 21047     14E5                     u340_20:
 21048     14E5                     i1l4445:
 21049     14E5  3000               	movlw	0
 21050     14E6  00C8               	movwf	??___flge
 21051     14E7  3000               	movlw	0
 21052     14E8  00C9               	movwf	??___flge+1
 21053     14E9  3000               	movlw	0
 21054     14EA  00CA               	movwf	??___flge+2
 21055     14EB  3080               	movlw	128
 21056     14EC  00CB               	movwf	??___flge+3
 21057     14ED  0844               	movf	___flge@ff2,w
 21058     14EE  02C8               	subwf	??___flge,f
 21059     14EF  0845               	movf	___flge@ff2+1,w
 21060     14F0  3BC9               	subwfb	??___flge+1,f
 21061     14F1  0846               	movf	___flge@ff2+2,w
 21062     14F2  3BCA               	subwfb	??___flge+2,f
 21063     14F3  0847               	movf	___flge@ff2+3,w
 21064     14F4  3BCB               	subwfb	??___flge+3,f
 21065     14F5  084B               	movf	??___flge+3,w
 21066     14F6  00C7               	movwf	___flge@ff2+3
 21067     14F7  084A               	movf	??___flge+2,w
 21068     14F8  00C6               	movwf	___flge@ff2+2
 21069     14F9  0849               	movf	??___flge+1,w
 21070     14FA  00C5               	movwf	___flge@ff2+1
 21071     14FB  0848               	movf	??___flge,w
 21072     14FC  00C4               	movwf	___flge@ff2
 21073     14FD                     i1l1449:
 21074     14FD  3080               	movlw	128
 21075     14FE  06C3               	xorwf	___flge@ff1+3,f
 21076     14FF  3080               	movlw	128
 21077     1500  06C7               	xorwf	___flge@ff2+3,f
 21078     1501  0847               	movf	___flge@ff2+3,w
 21079     1502  0243               	subwf	___flge@ff1+3,w
 21080     1503  1D03               	skipz
 21081     1504  2D0F               	goto	u341_25
 21082     1505  0846               	movf	___flge@ff2+2,w
 21083     1506  0242               	subwf	___flge@ff1+2,w
 21084     1507  1D03               	skipz
 21085     1508  2D0F               	goto	u341_25
 21086     1509  0845               	movf	___flge@ff2+1,w
 21087     150A  0241               	subwf	___flge@ff1+1,w
 21088     150B  1D03               	skipz
 21089     150C  2D0F               	goto	u341_25
 21090     150D  0844               	movf	___flge@ff2,w
 21091     150E  0240               	subwf	___flge@ff1,w
 21092     150F                     u341_25:
 21093     150F  1803               	skipnc
 21094     1510  2D12               	goto	u341_21
 21095     1511  2D13               	goto	u341_20
 21096     1512                     u341_21:
 21097     1512  2D15               	goto	i1l4449
 21098     1513                     u341_20:
 21099     1513                     i1l4447:
 21100     1513  1003               	clrc
 21101     1514  2D16               	goto	i1l1454
 21102     1515                     i1l4449:
 21103     1515  1403               	setc
 21104     1516                     i1l1454:
 21105     1516  0008               	return
 21106     1517                     __end_of___flge:
 21107                           
 21108                           	psect	text92
 21109     119F                     __ptext92:	
 21110 ;; *************** function ___fleq *****************
 21111 ;; Defined at:
 21112 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
 21113 ;; Parameters:    Size  Location     Type
 21114 ;;  ff1             4    0[COMMON] unsigned int 
 21115 ;;  ff2             4    4[COMMON] unsigned int 
 21116 ;; Auto vars:     Size  Location     Type
 21117 ;;		None
 21118 ;; Return value:  Size  Location     Type
 21119 ;;		None               void
 21120 ;; Registers used:
 21121 ;;		wreg, status,2, status,0
 21122 ;; Tracked objects:
 21123 ;;		On entry : 0/0
 21124 ;;		On exit  : 0/0
 21125 ;;		Unchanged: 0/0
 21126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21127 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21129 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21130 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21131 ;;Total ram usage:       12 bytes
 21132 ;; Hardware stack levels used: 1
 21133 ;; This function calls:
 21134 ;;		Nothing
 21135 ;; This function is called by:
 21136 ;;		_efgtoa
 21137 ;; This function uses a non-reentrant model
 21138 ;;
 21139                           
 21140     119F                     ___fleq:	
 21141                           ;psect for function ___fleq
 21142                           
 21143     119F                     i1l4421:	
 21144                           ;incstack = 0
 21145                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 21146                           
 21147     119F  3000               	movlw	0
 21148     11A0  0570               	andwf	___fleq@ff1,w
 21149     11A1  00F8               	movwf	??___fleq
 21150     11A2  3000               	movlw	0
 21151     11A3  0571               	andwf	___fleq@ff1+1,w
 21152     11A4  00F9               	movwf	??___fleq+1
 21153     11A5  3080               	movlw	128
 21154     11A6  0572               	andwf	___fleq@ff1+2,w
 21155     11A7  00FA               	movwf	??___fleq+2
 21156     11A8  307F               	movlw	127
 21157     11A9  0573               	andwf	___fleq@ff1+3,w
 21158     11AA  00FB               	movwf	??___fleq+3
 21159     11AB  087B               	movf	??___fleq+3,w
 21160     11AC  047A               	iorwf	??___fleq+2,w
 21161     11AD  0479               	iorwf	??___fleq+1,w
 21162     11AE  0478               	iorwf	??___fleq,w
 21163     11AF  1D03               	skipz
 21164     11B0  29B2               	goto	u334_21
 21165     11B1  29B3               	goto	u334_20
 21166     11B2                     u334_21:
 21167     11B2  29BB               	goto	i1l1437
 21168     11B3                     u334_20:
 21169     11B3                     i1l4423:
 21170     11B3  3000               	movlw	0
 21171     11B4  00F3               	movwf	___fleq@ff1+3
 21172     11B5  3000               	movlw	0
 21173     11B6  00F2               	movwf	___fleq@ff1+2
 21174     11B7  3000               	movlw	0
 21175     11B8  00F1               	movwf	___fleq@ff1+1
 21176     11B9  3000               	movlw	0
 21177     11BA  00F0               	movwf	___fleq@ff1
 21178     11BB                     i1l1437:
 21179     11BB  3000               	movlw	0
 21180     11BC  0574               	andwf	___fleq@ff2,w
 21181     11BD  00F8               	movwf	??___fleq
 21182     11BE  3000               	movlw	0
 21183     11BF  0575               	andwf	___fleq@ff2+1,w
 21184     11C0  00F9               	movwf	??___fleq+1
 21185     11C1  3080               	movlw	128
 21186     11C2  0576               	andwf	___fleq@ff2+2,w
 21187     11C3  00FA               	movwf	??___fleq+2
 21188     11C4  307F               	movlw	127
 21189     11C5  0577               	andwf	___fleq@ff2+3,w
 21190     11C6  00FB               	movwf	??___fleq+3
 21191     11C7  087B               	movf	??___fleq+3,w
 21192     11C8  047A               	iorwf	??___fleq+2,w
 21193     11C9  0479               	iorwf	??___fleq+1,w
 21194     11CA  0478               	iorwf	??___fleq,w
 21195     11CB  1D03               	skipz
 21196     11CC  29CE               	goto	u335_21
 21197     11CD  29CF               	goto	u335_20
 21198     11CE                     u335_21:
 21199     11CE  29D7               	goto	i1l1438
 21200     11CF                     u335_20:
 21201     11CF                     i1l4425:
 21202     11CF  3000               	movlw	0
 21203     11D0  00F7               	movwf	___fleq@ff2+3
 21204     11D1  3000               	movlw	0
 21205     11D2  00F6               	movwf	___fleq@ff2+2
 21206     11D3  3000               	movlw	0
 21207     11D4  00F5               	movwf	___fleq@ff2+1
 21208     11D5  3000               	movlw	0
 21209     11D6  00F4               	movwf	___fleq@ff2
 21210     11D7                     i1l1438:
 21211     11D7  0877               	movf	___fleq@ff2+3,w
 21212     11D8  0673               	xorwf	___fleq@ff1+3,w
 21213     11D9  1D03               	skipz
 21214     11DA  29E5               	goto	u336_25
 21215     11DB  0876               	movf	___fleq@ff2+2,w
 21216     11DC  0672               	xorwf	___fleq@ff1+2,w
 21217     11DD  1D03               	skipz
 21218     11DE  29E5               	goto	u336_25
 21219     11DF  0875               	movf	___fleq@ff2+1,w
 21220     11E0  0671               	xorwf	___fleq@ff1+1,w
 21221     11E1  1D03               	skipz
 21222     11E2  29E5               	goto	u336_25
 21223     11E3  0874               	movf	___fleq@ff2,w
 21224     11E4  0670               	xorwf	___fleq@ff1,w
 21225     11E5                     u336_25:
 21226     11E5  1903               	skipnz
 21227     11E6  29E8               	goto	u336_21
 21228     11E7  29E9               	goto	u336_20
 21229     11E8                     u336_21:
 21230     11E8  29EB               	goto	i1l4429
 21231     11E9                     u336_20:
 21232     11E9                     i1l4427:
 21233     11E9  1003               	clrc
 21234     11EA  29EC               	goto	i1l1443
 21235     11EB                     i1l4429:
 21236     11EB  1403               	setc
 21237     11EC                     i1l1443:
 21238     11EC  0008               	return
 21239     11ED                     __end_of___fleq:
 21240                           
 21241                           	psect	text93
 21242     0857                     __ptext93:	
 21243 ;; *************** function ___fldiv *****************
 21244 ;; Defined at:
 21245 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
 21246 ;; Parameters:    Size  Location     Type
 21247 ;;  a               4   32[BANK0 ] unsigned int 
 21248 ;;  b               4   36[BANK0 ] unsigned int 
 21249 ;; Auto vars:     Size  Location     Type
 21250 ;;  grs             4   52[BANK0 ] unsigned long 
 21251 ;;  rem             4   45[BANK0 ] unsigned long 
 21252 ;;  new_exp         2   50[BANK0 ] short 
 21253 ;;  aexp            1   57[BANK0 ] unsigned char 
 21254 ;;  bexp            1   56[BANK0 ] unsigned char 
 21255 ;;  sign            1   49[BANK0 ] unsigned char 
 21256 ;; Return value:  Size  Location     Type
 21257 ;;                  4   32[BANK0 ] unsigned char 
 21258 ;; Registers used:
 21259 ;;		wreg, status,2, status,0
 21260 ;; Tracked objects:
 21261 ;;		On entry : 0/0
 21262 ;;		On exit  : 0/0
 21263 ;;		Unchanged: 0/0
 21264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21265 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21266 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21267 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21268 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21269 ;;Total ram usage:       26 bytes
 21270 ;; Hardware stack levels used: 1
 21271 ;; This function calls:
 21272 ;;		Nothing
 21273 ;; This function is called by:
 21274 ;;		_TMR0_Custom_ISR
 21275 ;;		_efgtoa
 21276 ;;		_get_distance_from_supersonic
 21277 ;;		_get_temperature
 21278 ;; This function uses a non-reentrant model
 21279 ;;
 21280                           
 21281     0857                     ___fldiv:	
 21282                           ;psect for function ___fldiv
 21283                           
 21284     0857                     i1l4503:	
 21285                           ;incstack = 0
 21286                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 21287                           
 21288     0857  0020               	movlb	0	; select bank0
 21289     0858  0847               	movf	___fldiv@b+3,w
 21290     0859  3980               	andlw	128
 21291     085A  00D1               	movwf	___fldiv@sign
 21292     085B                     i1l4505:
 21293     085B  3547               	lslf	___fldiv@b+3,w
 21294     085C  00D8               	movwf	___fldiv@bexp
 21295     085D                     i1l4507:
 21296     085D  1FC6               	btfss	___fldiv@b+2,7
 21297     085E  2860               	goto	u353_21
 21298     085F  2861               	goto	u353_20
 21299     0860                     u353_21:
 21300     0860  2862               	goto	i1l4511
 21301     0861                     u353_20:
 21302     0861                     i1l4509:
 21303     0861  1458               	bsf	___fldiv@bexp,0
 21304     0862                     i1l4511:
 21305     0862  0858               	movf	___fldiv@bexp,w
 21306     0863  1903               	btfsc	3,2
 21307     0864  2866               	goto	u354_21
 21308     0865  2867               	goto	u354_20
 21309     0866                     u354_21:
 21310     0866  2877               	goto	i1l4521
 21311     0867                     u354_20:
 21312     0867                     i1l4513:
 21313     0867  0A58               	incf	___fldiv@bexp,w
 21314     0868  1D03               	btfss	3,2
 21315     0869  286B               	goto	u355_21
 21316     086A  286C               	goto	u355_20
 21317     086B                     u355_21:
 21318     086B  2874               	goto	i1l4517
 21319     086C                     u355_20:
 21320     086C                     i1l4515:
 21321     086C  3000               	movlw	0
 21322     086D  00C7               	movwf	___fldiv@b+3
 21323     086E  3000               	movlw	0
 21324     086F  00C6               	movwf	___fldiv@b+2
 21325     0870  3000               	movlw	0
 21326     0871  00C5               	movwf	___fldiv@b+1
 21327     0872  3000               	movlw	0
 21328     0873  00C4               	movwf	___fldiv@b
 21329     0874                     i1l4517:
 21330     0874  17C6               	bsf	___fldiv@b+2,7
 21331     0875                     i1l4519:
 21332     0875  01C7               	clrf	___fldiv@b+3
 21333     0876  287F               	goto	i1l4523
 21334     0877                     i1l4521:
 21335     0877  3000               	movlw	0
 21336     0878  00C7               	movwf	___fldiv@b+3
 21337     0879  3000               	movlw	0
 21338     087A  00C6               	movwf	___fldiv@b+2
 21339     087B  3000               	movlw	0
 21340     087C  00C5               	movwf	___fldiv@b+1
 21341     087D  3000               	movlw	0
 21342     087E  00C4               	movwf	___fldiv@b
 21343     087F                     i1l4523:
 21344     087F  0843               	movf	___fldiv@a+3,w
 21345     0880  3980               	andlw	128
 21346     0881  00C8               	movwf	??___fldiv
 21347     0882  0848               	movf	??___fldiv,w
 21348     0883  06D1               	xorwf	___fldiv@sign,f
 21349     0884                     i1l4525:
 21350     0884  3543               	lslf	___fldiv@a+3,w
 21351     0885  00D9               	movwf	___fldiv@aexp
 21352     0886                     i1l4527:
 21353     0886  1FC2               	btfss	___fldiv@a+2,7
 21354     0887  2889               	goto	u356_21
 21355     0888  288A               	goto	u356_20
 21356     0889                     u356_21:
 21357     0889  288B               	goto	i1l4531
 21358     088A                     u356_20:
 21359     088A                     i1l4529:
 21360     088A  1459               	bsf	___fldiv@aexp,0
 21361     088B                     i1l4531:
 21362     088B  0859               	movf	___fldiv@aexp,w
 21363     088C  1903               	btfsc	3,2
 21364     088D  288F               	goto	u357_21
 21365     088E  2890               	goto	u357_20
 21366     088F                     u357_21:
 21367     088F  28A0               	goto	i1l4541
 21368     0890                     u357_20:
 21369     0890                     i1l4533:
 21370     0890  0A59               	incf	___fldiv@aexp,w
 21371     0891  1D03               	btfss	3,2
 21372     0892  2894               	goto	u358_21
 21373     0893  2895               	goto	u358_20
 21374     0894                     u358_21:
 21375     0894  289D               	goto	i1l4537
 21376     0895                     u358_20:
 21377     0895                     i1l4535:
 21378     0895  3000               	movlw	0
 21379     0896  00C3               	movwf	___fldiv@a+3
 21380     0897  3000               	movlw	0
 21381     0898  00C2               	movwf	___fldiv@a+2
 21382     0899  3000               	movlw	0
 21383     089A  00C1               	movwf	___fldiv@a+1
 21384     089B  3000               	movlw	0
 21385     089C  00C0               	movwf	___fldiv@a
 21386     089D                     i1l4537:
 21387     089D  17C2               	bsf	___fldiv@a+2,7
 21388     089E                     i1l4539:
 21389     089E  01C3               	clrf	___fldiv@a+3
 21390     089F  28A8               	goto	i1l1625
 21391     08A0                     i1l4541:
 21392     08A0  3000               	movlw	0
 21393     08A1  00C3               	movwf	___fldiv@a+3
 21394     08A2  3000               	movlw	0
 21395     08A3  00C2               	movwf	___fldiv@a+2
 21396     08A4  3000               	movlw	0
 21397     08A5  00C1               	movwf	___fldiv@a+1
 21398     08A6  3000               	movlw	0
 21399     08A7  00C0               	movwf	___fldiv@a
 21400     08A8                     i1l1625:
 21401     08A8  0843               	movf	___fldiv@a+3,w
 21402     08A9  0442               	iorwf	___fldiv@a+2,w
 21403     08AA  0441               	iorwf	___fldiv@a+1,w
 21404     08AB  0440               	iorwf	___fldiv@a,w
 21405     08AC  1D03               	skipz
 21406     08AD  28AF               	goto	u359_21
 21407     08AE  28B0               	goto	u359_20
 21408     08AF                     u359_21:
 21409     08AF  28C9               	goto	i1l4551
 21410     08B0                     u359_20:
 21411     08B0                     i1l4543:
 21412     08B0  3000               	movlw	0
 21413     08B1  00C7               	movwf	___fldiv@b+3
 21414     08B2  3000               	movlw	0
 21415     08B3  00C6               	movwf	___fldiv@b+2
 21416     08B4  3000               	movlw	0
 21417     08B5  00C5               	movwf	___fldiv@b+1
 21418     08B6  3000               	movlw	0
 21419     08B7  00C4               	movwf	___fldiv@b
 21420     08B8  3080               	movlw	128
 21421     08B9  04C6               	iorwf	___fldiv@b+2,f
 21422     08BA  307F               	movlw	127
 21423     08BB  04C7               	iorwf	___fldiv@b+3,f
 21424     08BC                     i1l4545:
 21425     08BC  0851               	movf	___fldiv@sign,w
 21426     08BD  00C8               	movwf	??___fldiv
 21427     08BE  0848               	movf	??___fldiv,w
 21428     08BF  04C7               	iorwf	___fldiv@b+3,f
 21429     08C0                     i1l4547:
 21430     08C0  0847               	movf	___fldiv@b+3,w
 21431     08C1  00C3               	movwf	?___fldiv+3
 21432     08C2  0846               	movf	___fldiv@b+2,w
 21433     08C3  00C2               	movwf	?___fldiv+2
 21434     08C4  0845               	movf	___fldiv@b+1,w
 21435     08C5  00C1               	movwf	?___fldiv+1
 21436     08C6  0844               	movf	___fldiv@b,w
 21437     08C7  00C0               	movwf	?___fldiv
 21438     08C8  2A00               	goto	i1l1627
 21439     08C9                     i1l4551:
 21440     08C9  0858               	movf	___fldiv@bexp,w
 21441     08CA  1D03               	btfss	3,2
 21442     08CB  28CD               	goto	u360_21
 21443     08CC  28CE               	goto	u360_20
 21444     08CD                     u360_21:
 21445     08CD  28D7               	goto	i1l4557
 21446     08CE                     u360_20:
 21447     08CE                     i1l4553:
 21448     08CE  3000               	movlw	0
 21449     08CF  00C3               	movwf	?___fldiv+3
 21450     08D0  3000               	movlw	0
 21451     08D1  00C2               	movwf	?___fldiv+2
 21452     08D2  3000               	movlw	0
 21453     08D3  00C1               	movwf	?___fldiv+1
 21454     08D4  3000               	movlw	0
 21455     08D5  00C0               	movwf	?___fldiv
 21456     08D6  2A00               	goto	i1l1627
 21457     08D7                     i1l4557:
 21458     08D7  0858               	movf	___fldiv@bexp,w
 21459     08D8  00C8               	movwf	??___fldiv
 21460     08D9  01C9               	clrf	??___fldiv+1
 21461     08DA  0849               	movf	??___fldiv+1,w
 21462     08DB  00CB               	movwf	??___fldiv+3
 21463     08DC  0859               	movf	___fldiv@aexp,w
 21464     08DD  0248               	subwf	??___fldiv,w
 21465     08DE  00CA               	movwf	??___fldiv+2
 21466     08DF  1C03               	skipc
 21467     08E0  03CB               	decf	??___fldiv+3,f
 21468     08E1  084A               	movf	??___fldiv+2,w
 21469     08E2  3E7F               	addlw	127
 21470     08E3  00D2               	movwf	___fldiv@new_exp
 21471     08E4  3000               	movlw	0
 21472     08E5  3D4B               	addwfc	??___fldiv+3,w
 21473     08E6  00D3               	movwf	___fldiv@new_exp+1
 21474     08E7                     i1l4559:
 21475     08E7  0847               	movf	___fldiv@b+3,w
 21476     08E8  00D0               	movwf	___fldiv@rem+3
 21477     08E9  0846               	movf	___fldiv@b+2,w
 21478     08EA  00CF               	movwf	___fldiv@rem+2
 21479     08EB  0845               	movf	___fldiv@b+1,w
 21480     08EC  00CE               	movwf	___fldiv@rem+1
 21481     08ED  0844               	movf	___fldiv@b,w
 21482     08EE  00CD               	movwf	___fldiv@rem
 21483     08EF                     i1l4561:
 21484     08EF  3000               	movlw	0
 21485     08F0  00C7               	movwf	___fldiv@b+3
 21486     08F1  3000               	movlw	0
 21487     08F2  00C6               	movwf	___fldiv@b+2
 21488     08F3  3000               	movlw	0
 21489     08F4  00C5               	movwf	___fldiv@b+1
 21490     08F5  3000               	movlw	0
 21491     08F6  00C4               	movwf	___fldiv@b
 21492     08F7                     i1l4563:
 21493     08F7  3000               	movlw	0
 21494     08F8  00D7               	movwf	___fldiv@grs+3
 21495     08F9  3000               	movlw	0
 21496     08FA  00D6               	movwf	___fldiv@grs+2
 21497     08FB  3000               	movlw	0
 21498     08FC  00D5               	movwf	___fldiv@grs+1
 21499     08FD  3000               	movlw	0
 21500     08FE  00D4               	movwf	___fldiv@grs
 21501     08FF                     i1l4565:
 21502     08FF  01D9               	clrf	___fldiv@aexp
 21503     0900  293F               	goto	i1l4585
 21504     0901                     i1l4567:
 21505     0901  0859               	movf	___fldiv@aexp,w
 21506     0902  1903               	btfsc	3,2
 21507     0903  2905               	goto	u361_21
 21508     0904  2906               	goto	u361_20
 21509     0905                     u361_21:
 21510     0905  2920               	goto	i1l4577
 21511     0906                     u361_20:
 21512     0906                     i1l4569:
 21513     0906  3001               	movlw	1
 21514     0907                     u362_25:
 21515     0907  35CD               	lslf	___fldiv@rem,f
 21516     0908  0DCE               	rlf	___fldiv@rem+1,f
 21517     0909  0DCF               	rlf	___fldiv@rem+2,f
 21518     090A  0DD0               	rlf	___fldiv@rem+3,f
 21519     090B  0B89               	decfsz	9,f
 21520     090C  2907               	goto	u362_25
 21521     090D  3001               	movlw	1
 21522     090E                     u363_25:
 21523     090E  35C4               	lslf	___fldiv@b,f
 21524     090F  0DC5               	rlf	___fldiv@b+1,f
 21525     0910  0DC6               	rlf	___fldiv@b+2,f
 21526     0911  0DC7               	rlf	___fldiv@b+3,f
 21527     0912  0B89               	decfsz	9,f
 21528     0913  290E               	goto	u363_25
 21529     0914                     i1l4571:
 21530     0914  1FD7               	btfss	___fldiv@grs+3,7
 21531     0915  2917               	goto	u364_21
 21532     0916  2918               	goto	u364_20
 21533     0917                     u364_21:
 21534     0917  2919               	goto	i1l4575
 21535     0918                     u364_20:
 21536     0918                     i1l4573:
 21537     0918  1444               	bsf	___fldiv@b,0
 21538     0919                     i1l4575:
 21539     0919  3001               	movlw	1
 21540     091A                     u365_25:
 21541     091A  35D4               	lslf	___fldiv@grs,f
 21542     091B  0DD5               	rlf	___fldiv@grs+1,f
 21543     091C  0DD6               	rlf	___fldiv@grs+2,f
 21544     091D  0DD7               	rlf	___fldiv@grs+3,f
 21545     091E  0B89               	decfsz	9,f
 21546     091F  291A               	goto	u365_25
 21547     0920                     i1l4577:
 21548     0920  0843               	movf	___fldiv@a+3,w
 21549     0921  0250               	subwf	___fldiv@rem+3,w
 21550     0922  1D03               	skipz
 21551     0923  292E               	goto	u366_25
 21552     0924  0842               	movf	___fldiv@a+2,w
 21553     0925  024F               	subwf	___fldiv@rem+2,w
 21554     0926  1D03               	skipz
 21555     0927  292E               	goto	u366_25
 21556     0928  0841               	movf	___fldiv@a+1,w
 21557     0929  024E               	subwf	___fldiv@rem+1,w
 21558     092A  1D03               	skipz
 21559     092B  292E               	goto	u366_25
 21560     092C  0840               	movf	___fldiv@a,w
 21561     092D  024D               	subwf	___fldiv@rem,w
 21562     092E                     u366_25:
 21563     092E  1C03               	skipc
 21564     092F  2931               	goto	u366_21
 21565     0930  2932               	goto	u366_20
 21566     0931                     u366_21:
 21567     0931  293B               	goto	i1l4583
 21568     0932                     u366_20:
 21569     0932                     i1l4579:
 21570     0932  1757               	bsf	___fldiv@grs+3,6
 21571     0933                     i1l4581:
 21572     0933  0840               	movf	___fldiv@a,w
 21573     0934  02CD               	subwf	___fldiv@rem,f
 21574     0935  0841               	movf	___fldiv@a+1,w
 21575     0936  3BCE               	subwfb	___fldiv@rem+1,f
 21576     0937  0842               	movf	___fldiv@a+2,w
 21577     0938  3BCF               	subwfb	___fldiv@rem+2,f
 21578     0939  0843               	movf	___fldiv@a+3,w
 21579     093A  3BD0               	subwfb	___fldiv@rem+3,f
 21580     093B                     i1l4583:
 21581     093B  3001               	movlw	1
 21582     093C  00C8               	movwf	??___fldiv
 21583     093D  0848               	movf	??___fldiv,w
 21584     093E  07D9               	addwf	___fldiv@aexp,f
 21585     093F                     i1l4585:
 21586     093F  301A               	movlw	26
 21587     0940  0259               	subwf	___fldiv@aexp,w
 21588     0941  1C03               	skipc
 21589     0942  2944               	goto	u367_21
 21590     0943  2945               	goto	u367_20
 21591     0944                     u367_21:
 21592     0944  2901               	goto	i1l4567
 21593     0945                     u367_20:
 21594     0945                     i1l4587:
 21595     0945  0850               	movf	___fldiv@rem+3,w
 21596     0946  044F               	iorwf	___fldiv@rem+2,w
 21597     0947  044E               	iorwf	___fldiv@rem+1,w
 21598     0948  044D               	iorwf	___fldiv@rem,w
 21599     0949  1903               	skipnz
 21600     094A  294C               	goto	u368_21
 21601     094B  294D               	goto	u368_20
 21602     094C                     u368_21:
 21603     094C  2966               	goto	i1l4601
 21604     094D                     u368_20:
 21605     094D                     i1l4589:
 21606     094D  1454               	bsf	___fldiv@grs,0
 21607     094E  2966               	goto	i1l4601
 21608     094F                     i1l4591:
 21609     094F  3001               	movlw	1
 21610     0950                     u369_25:
 21611     0950  35C4               	lslf	___fldiv@b,f
 21612     0951  0DC5               	rlf	___fldiv@b+1,f
 21613     0952  0DC6               	rlf	___fldiv@b+2,f
 21614     0953  0DC7               	rlf	___fldiv@b+3,f
 21615     0954  0B89               	decfsz	9,f
 21616     0955  2950               	goto	u369_25
 21617     0956                     i1l4593:
 21618     0956  1FD7               	btfss	___fldiv@grs+3,7
 21619     0957  2959               	goto	u370_21
 21620     0958  295A               	goto	u370_20
 21621     0959                     u370_21:
 21622     0959  295B               	goto	i1l4597
 21623     095A                     u370_20:
 21624     095A                     i1l4595:
 21625     095A  1444               	bsf	___fldiv@b,0
 21626     095B                     i1l4597:
 21627     095B  3001               	movlw	1
 21628     095C                     u371_25:
 21629     095C  35D4               	lslf	___fldiv@grs,f
 21630     095D  0DD5               	rlf	___fldiv@grs+1,f
 21631     095E  0DD6               	rlf	___fldiv@grs+2,f
 21632     095F  0DD7               	rlf	___fldiv@grs+3,f
 21633     0960  0B89               	decfsz	9,f
 21634     0961  295C               	goto	u371_25
 21635     0962                     i1l4599:
 21636     0962  30FF               	movlw	255
 21637     0963  07D2               	addwf	___fldiv@new_exp,f
 21638     0964  30FF               	movlw	255
 21639     0965  3DD3               	addwfc	___fldiv@new_exp+1,f
 21640     0966                     i1l4601:
 21641     0966  1FC6               	btfss	___fldiv@b+2,7
 21642     0967  2969               	goto	u372_21
 21643     0968  296A               	goto	u372_20
 21644     0969                     u372_21:
 21645     0969  294F               	goto	i1l4591
 21646     096A                     u372_20:
 21647     096A                     i1l4603:
 21648     096A  01D9               	clrf	___fldiv@aexp
 21649     096B                     i1l4605:
 21650     096B  1FD7               	btfss	___fldiv@grs+3,7
 21651     096C  296E               	goto	u373_21
 21652     096D  296F               	goto	u373_20
 21653     096E                     u373_21:
 21654     096E  298B               	goto	i1l4613
 21655     096F                     u373_20:
 21656     096F                     i1l4607:
 21657     096F  30FF               	movlw	255
 21658     0970  0554               	andwf	___fldiv@grs,w
 21659     0971  00C8               	movwf	??___fldiv
 21660     0972  30FF               	movlw	255
 21661     0973  0555               	andwf	___fldiv@grs+1,w
 21662     0974  00C9               	movwf	??___fldiv+1
 21663     0975  30FF               	movlw	255
 21664     0976  0556               	andwf	___fldiv@grs+2,w
 21665     0977  00CA               	movwf	??___fldiv+2
 21666     0978  307F               	movlw	127
 21667     0979  0557               	andwf	___fldiv@grs+3,w
 21668     097A  00CB               	movwf	??___fldiv+3
 21669     097B  084B               	movf	??___fldiv+3,w
 21670     097C  044A               	iorwf	??___fldiv+2,w
 21671     097D  0449               	iorwf	??___fldiv+1,w
 21672     097E  0448               	iorwf	??___fldiv,w
 21673     097F  1903               	skipnz
 21674     0980  2982               	goto	u374_21
 21675     0981  2983               	goto	u374_20
 21676     0982                     u374_21:
 21677     0982  2986               	goto	i1l1641
 21678     0983                     u374_20:
 21679     0983                     i1l4609:
 21680     0983  01D9               	clrf	___fldiv@aexp
 21681     0984  0AD9               	incf	___fldiv@aexp,f
 21682     0985  298B               	goto	i1l4613
 21683     0986                     i1l1641:
 21684     0986  1C44               	btfss	___fldiv@b,0
 21685     0987  2989               	goto	u375_21
 21686     0988  298A               	goto	u375_20
 21687     0989                     u375_21:
 21688     0989  298B               	goto	i1l4613
 21689     098A                     u375_20:
 21690     098A  2983               	goto	i1l4609
 21691     098B                     i1l4613:
 21692     098B  0859               	movf	___fldiv@aexp,w
 21693     098C  1903               	btfsc	3,2
 21694     098D  298F               	goto	u376_21
 21695     098E  2990               	goto	u376_20
 21696     098F                     u376_21:
 21697     098F  29B8               	goto	i1l4623
 21698     0990                     u376_20:
 21699     0990                     i1l4615:
 21700     0990  3001               	movlw	1
 21701     0991  07C4               	addwf	___fldiv@b,f
 21702     0992  3000               	movlw	0
 21703     0993  3DC5               	addwfc	___fldiv@b+1,f
 21704     0994  3000               	movlw	0
 21705     0995  3DC6               	addwfc	___fldiv@b+2,f
 21706     0996  3000               	movlw	0
 21707     0997  3DC7               	addwfc	___fldiv@b+3,f
 21708     0998                     i1l4617:
 21709     0998  1C47               	btfss	___fldiv@b+3,0
 21710     0999  299B               	goto	u377_21
 21711     099A  299C               	goto	u377_20
 21712     099B                     u377_21:
 21713     099B  29B8               	goto	i1l4623
 21714     099C                     u377_20:
 21715     099C                     i1l4619:
 21716     099C  0844               	movf	___fldiv@b,w
 21717     099D  00C8               	movwf	??___fldiv
 21718     099E  0845               	movf	___fldiv@b+1,w
 21719     099F  00C9               	movwf	??___fldiv+1
 21720     09A0  0846               	movf	___fldiv@b+2,w
 21721     09A1  00CA               	movwf	??___fldiv+2
 21722     09A2  0847               	movf	___fldiv@b+3,w
 21723     09A3  00CB               	movwf	??___fldiv+3
 21724     09A4  3001               	movlw	1
 21725     09A5  00CC               	movwf	??___fldiv+4
 21726     09A6                     u378_25:
 21727     09A6  37CB               	asrf	??___fldiv+3,f
 21728     09A7  0CCA               	rrf	??___fldiv+2,f
 21729     09A8  0CC9               	rrf	??___fldiv+1,f
 21730     09A9  0CC8               	rrf	??___fldiv,f
 21731     09AA                     u378_20:
 21732     09AA  0BCC               	decfsz	??___fldiv+4,f
 21733     09AB  29A6               	goto	u378_25
 21734     09AC  084B               	movf	??___fldiv+3,w
 21735     09AD  00C7               	movwf	___fldiv@b+3
 21736     09AE  084A               	movf	??___fldiv+2,w
 21737     09AF  00C6               	movwf	___fldiv@b+2
 21738     09B0  0849               	movf	??___fldiv+1,w
 21739     09B1  00C5               	movwf	___fldiv@b+1
 21740     09B2  0848               	movf	??___fldiv,w
 21741     09B3  00C4               	movwf	___fldiv@b
 21742     09B4                     i1l4621:
 21743     09B4  3001               	movlw	1
 21744     09B5  07D2               	addwf	___fldiv@new_exp,f
 21745     09B6  3000               	movlw	0
 21746     09B7  3DD3               	addwfc	___fldiv@new_exp+1,f
 21747     09B8                     i1l4623:
 21748     09B8  0853               	movf	___fldiv@new_exp+1,w
 21749     09B9  3A80               	xorlw	128
 21750     09BA  00C8               	movwf	??___fldiv
 21751     09BB  3080               	movlw	128
 21752     09BC  0248               	subwf	??___fldiv,w
 21753     09BD  1D03               	skipz
 21754     09BE  29C1               	goto	u379_25
 21755     09BF  30FF               	movlw	255
 21756     09C0  0252               	subwf	___fldiv@new_exp,w
 21757     09C1                     u379_25:
 21758     09C1  1C03               	skipc
 21759     09C2  29C4               	goto	u379_21
 21760     09C3  29C5               	goto	u379_20
 21761     09C4                     u379_21:
 21762     09C4  29D2               	goto	i1l1646
 21763     09C5                     u379_20:
 21764     09C5                     i1l4625:
 21765     09C5  30FF               	movlw	255
 21766     09C6  0020               	movlb	0	; select bank0
 21767     09C7  00D2               	movwf	___fldiv@new_exp
 21768     09C8  3000               	movlw	0
 21769     09C9  00D3               	movwf	___fldiv@new_exp+1
 21770     09CA  3000               	movlw	0
 21771     09CB  00C7               	movwf	___fldiv@b+3
 21772     09CC  3000               	movlw	0
 21773     09CD  00C6               	movwf	___fldiv@b+2
 21774     09CE  3000               	movlw	0
 21775     09CF  00C5               	movwf	___fldiv@b+1
 21776     09D0  3000               	movlw	0
 21777     09D1  00C4               	movwf	___fldiv@b
 21778     09D2                     i1l1646:
 21779     09D2  0020               	movlb	0	; select bank0
 21780     09D3  0853               	movf	___fldiv@new_exp+1,w
 21781     09D4  3A80               	xorlw	128
 21782     09D5  00C8               	movwf	??___fldiv
 21783     09D6  3080               	movlw	128
 21784     09D7  0248               	subwf	??___fldiv,w
 21785     09D8  1D03               	skipz
 21786     09D9  29DC               	goto	u380_25
 21787     09DA  3001               	movlw	1
 21788     09DB  0252               	subwf	___fldiv@new_exp,w
 21789     09DC                     u380_25:
 21790     09DC  1803               	skipnc
 21791     09DD  29DF               	goto	u380_21
 21792     09DE  29E0               	goto	u380_20
 21793     09DF                     u380_21:
 21794     09DF  29EC               	goto	i1l1647
 21795     09E0                     u380_20:
 21796     09E0                     i1l4627:
 21797     09E0  0020               	movlb	0	; select bank0
 21798     09E1  01D2               	clrf	___fldiv@new_exp
 21799     09E2  01D3               	clrf	___fldiv@new_exp+1
 21800     09E3                     i1l4629:
 21801     09E3  3000               	movlw	0
 21802     09E4  00C7               	movwf	___fldiv@b+3
 21803     09E5  3000               	movlw	0
 21804     09E6  00C6               	movwf	___fldiv@b+2
 21805     09E7  3000               	movlw	0
 21806     09E8  00C5               	movwf	___fldiv@b+1
 21807     09E9  3000               	movlw	0
 21808     09EA  00C4               	movwf	___fldiv@b
 21809     09EB                     i1l4631:
 21810     09EB  01D1               	clrf	___fldiv@sign
 21811     09EC                     i1l1647:
 21812     09EC  0020               	movlb	0	; select bank0
 21813     09ED  0852               	movf	___fldiv@new_exp,w
 21814     09EE  00D8               	movwf	___fldiv@bexp
 21815     09EF                     i1l4633:
 21816     09EF  1C58               	btfss	___fldiv@bexp,0
 21817     09F0  29F2               	goto	u381_21
 21818     09F1  29F3               	goto	u381_20
 21819     09F2                     u381_21:
 21820     09F2  29F5               	goto	i1l4637
 21821     09F3                     u381_20:
 21822     09F3                     i1l4635:
 21823     09F3  17C6               	bsf	___fldiv@b+2,7
 21824     09F4  29F9               	goto	i1l1649
 21825     09F5                     i1l4637:
 21826     09F5  307F               	movlw	127
 21827     09F6  00C8               	movwf	??___fldiv
 21828     09F7  0848               	movf	??___fldiv,w
 21829     09F8  05C6               	andwf	___fldiv@b+2,f
 21830     09F9                     i1l1649:
 21831     09F9  3658               	lsrf	___fldiv@bexp,w
 21832     09FA  00C7               	movwf	___fldiv@b+3
 21833     09FB  0851               	movf	___fldiv@sign,w
 21834     09FC  00C8               	movwf	??___fldiv
 21835     09FD  0848               	movf	??___fldiv,w
 21836     09FE  04C7               	iorwf	___fldiv@b+3,f
 21837     09FF  28C0               	goto	i1l4547
 21838     0A00                     i1l1627:
 21839     0A00  0008               	return
 21840     0A01                     __end_of___fldiv:
 21841                           
 21842                           	psect	text94
 21843     1EAE                     __ptext94:	
 21844 ;; *************** function _LCD_Write_String *****************
 21845 ;; Defined at:
 21846 ;;		line 90 in file "I2C_LCD.c"
 21847 ;; Parameters:    Size  Location     Type
 21848 ;;  Str             2    6[COMMON] PTR unsigned char 
 21849 ;;		 -> STR_7(13), TMR0_Custom_ISR@buffer(16), STR_5(14), STR_4(9), 
 21850 ;;		 -> UART_Custom_ISR@buffer(16), STR_2(14), STR_1(9), 
 21851 ;; Auto vars:     Size  Location     Type
 21852 ;;  i               2    9[COMMON] int 
 21853 ;; Return value:  Size  Location     Type
 21854 ;;                  1    wreg      void 
 21855 ;; Registers used:
 21856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21857 ;; Tracked objects:
 21858 ;;		On entry : 0/0
 21859 ;;		On exit  : 0/0
 21860 ;;		Unchanged: 0/0
 21861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21865 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21866 ;;Total ram usage:        5 bytes
 21867 ;; Hardware stack levels used: 1
 21868 ;; Hardware stack levels required when called: 5
 21869 ;; This function calls:
 21870 ;;		_LCD_Write_Char
 21871 ;; This function is called by:
 21872 ;;		_UART_Custom_ISR
 21873 ;;		_TMR0_Custom_ISR
 21874 ;; This function uses a non-reentrant model
 21875 ;;
 21876                           
 21877     1EAE                     _LCD_Write_String:	
 21878                           ;psect for function _LCD_Write_String
 21879                           
 21880     1EAE                     i1l5319:	
 21881                           ;incstack = 0
 21882                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 21883                           
 21884                           
 21885                           ;I2C_LCD.c: 90: void LCD_Write_String(char* Str);I2C_LCD.c: 91: {;I2C_LCD.c: 92:   for(i
      +                          nt i=0; Str[i]!='\0'; i++)
 21886     1EAE  01F9               	clrf	LCD_Write_String@i
 21887     1EAF  01FA               	clrf	LCD_Write_String@i+1
 21888     1EB0  2EBF               	goto	i1l5325
 21889     1EB1                     i1l5321:
 21890                           
 21891                           ;I2C_LCD.c: 93:     LCD_Write_Char(Str[i]);
 21892     1EB1  0876               	movf	LCD_Write_String@Str,w
 21893     1EB2  0779               	addwf	LCD_Write_String@i,w
 21894     1EB3  0084               	movwf	4
 21895     1EB4  0877               	movf	LCD_Write_String@Str+1,w
 21896     1EB5  3D7A               	addwfc	LCD_Write_String@i+1,w
 21897     1EB6  0085               	movwf	5
 21898     1EB7  0800               	movf	0,w	;code access
 21899     1EB8  319E  2619  319E   	fcall	_LCD_Write_Char
 21900     1EBB                     i1l5323:
 21901     1EBB  3001               	movlw	1
 21902     1EBC  07F9               	addwf	LCD_Write_String@i,f
 21903     1EBD  3000               	movlw	0
 21904     1EBE  3DFA               	addwfc	LCD_Write_String@i+1,f
 21905     1EBF                     i1l5325:
 21906     1EBF  0876               	movf	LCD_Write_String@Str,w
 21907     1EC0  0779               	addwf	LCD_Write_String@i,w
 21908     1EC1  0084               	movwf	4
 21909     1EC2  0877               	movf	LCD_Write_String@Str+1,w
 21910     1EC3  3D7A               	addwfc	LCD_Write_String@i+1,w
 21911     1EC4  0085               	movwf	5
 21912     1EC5  0012               	moviw fsr0++
 21913     1EC6  1D03               	btfss	3,2
 21914     1EC7  2EC9               	goto	u480_21
 21915     1EC8  2ECA               	goto	u480_20
 21916     1EC9                     u480_21:
 21917     1EC9  2EB1               	goto	i1l5321
 21918     1ECA                     u480_20:
 21919     1ECA                     i1l1063:
 21920     1ECA  0008               	return
 21921     1ECB                     __end_of_LCD_Write_String:
 21922                           
 21923                           	psect	text95
 21924     1E19                     __ptext95:	
 21925 ;; *************** function _LCD_Write_Char *****************
 21926 ;; Defined at:
 21927 ;;		line 84 in file "I2C_LCD.c"
 21928 ;; Parameters:    Size  Location     Type
 21929 ;;  Data            1    wreg     unsigned char 
 21930 ;; Auto vars:     Size  Location     Type
 21931 ;;  Data            1    5[COMMON] unsigned char 
 21932 ;; Return value:  Size  Location     Type
 21933 ;;                  1    wreg      void 
 21934 ;; Registers used:
 21935 ;;		wreg, status,2, status,0, pclath, cstack
 21936 ;; Tracked objects:
 21937 ;;		On entry : 0/0
 21938 ;;		On exit  : 0/0
 21939 ;;		Unchanged: 0/0
 21940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21945 ;;Total ram usage:        2 bytes
 21946 ;; Hardware stack levels used: 1
 21947 ;; Hardware stack levels required when called: 4
 21948 ;; This function calls:
 21949 ;;		_LCD_Write_4Bit
 21950 ;; This function is called by:
 21951 ;;		_LCD_Write_String
 21952 ;; This function uses a non-reentrant model
 21953 ;;
 21954                           
 21955     1E19                     _LCD_Write_Char:	
 21956                           ;psect for function _LCD_Write_Char
 21957                           
 21958                           
 21959                           ;incstack = 0
 21960                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 21961                           ;LCD_Write_Char@Data stored from wreg
 21962     1E19  00F5               	movwf	LCD_Write_Char@Data
 21963     1E1A                     i1l5255:
 21964                           
 21965                           ;I2C_LCD.c: 84: void LCD_Write_Char(char Data);I2C_LCD.c: 85: {;I2C_LCD.c: 86:   RS = 1;
 21966     1E1A  0022               	movlb	2	; select bank2
 21967     1E1B  01E7               	clrf	_RS^(0+256)
 21968     1E1C  0AE7               	incf	_RS^(0+256),f
 21969     1E1D                     i1l5257:
 21970                           
 21971                           ;I2C_LCD.c: 87:   LCD_Write_4Bit(Data & 0xF0);
 21972     1E1D  0875               	movf	LCD_Write_Char@Data,w
 21973     1E1E  39F0               	andlw	240
 21974     1E1F  319D  25B0  319E   	fcall	_LCD_Write_4Bit
 21975                           
 21976                           ;I2C_LCD.c: 88:   LCD_Write_4Bit((Data << 4) & 0xF0);
 21977     1E22  0875               	movf	LCD_Write_Char@Data,w
 21978     1E23  00F4               	movwf	??_LCD_Write_Char
 21979     1E24  3003               	movlw	3
 21980     1E25                     u477_25:
 21981     1E25  35F4               	lslf	??_LCD_Write_Char,f
 21982     1E26  3EFF               	addlw	-1
 21983     1E27  1D03               	skipz
 21984     1E28  2E25               	goto	u477_25
 21985     1E29  3574               	lslf	??_LCD_Write_Char,w
 21986     1E2A  39F0               	andlw	240
 21987     1E2B  319D  25B0  319E   	fcall	_LCD_Write_4Bit
 21988     1E2E                     i1l1057:
 21989     1E2E  0008               	return
 21990     1E2F                     __end_of_LCD_Write_Char:
 21991                           
 21992                           	psect	text96
 21993     1FDA                     __ptext96:	
 21994 ;; *************** function _LCD_Set_Cursor *****************
 21995 ;; Defined at:
 21996 ;;		line 95 in file "I2C_LCD.c"
 21997 ;; Parameters:    Size  Location     Type
 21998 ;;  ROW             1    wreg     unsigned char 
 21999 ;;  COL             1    6[COMMON] unsigned char 
 22000 ;; Auto vars:     Size  Location     Type
 22001 ;;  ROW             1    7[COMMON] unsigned char 
 22002 ;; Return value:  Size  Location     Type
 22003 ;;                  1    wreg      void 
 22004 ;; Registers used:
 22005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22006 ;; Tracked objects:
 22007 ;;		On entry : 0/0
 22008 ;;		On exit  : 0/0
 22009 ;;		Unchanged: 0/0
 22010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22011 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22015 ;;Total ram usage:        2 bytes
 22016 ;; Hardware stack levels used: 1
 22017 ;; Hardware stack levels required when called: 5
 22018 ;; This function calls:
 22019 ;;		_LCD_CMD
 22020 ;; This function is called by:
 22021 ;;		_UART_Custom_ISR
 22022 ;;		_TMR0_Custom_ISR
 22023 ;; This function uses a non-reentrant model
 22024 ;;
 22025                           
 22026     1FDA                     _LCD_Set_Cursor:	
 22027                           ;psect for function _LCD_Set_Cursor
 22028                           
 22029                           
 22030                           ;incstack = 0
 22031                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22032                           ;LCD_Set_Cursor@ROW stored from wreg
 22033     1FDA  00F7               	movwf	LCD_Set_Cursor@ROW
 22034     1FDB                     i1l5327:
 22035                           
 22036                           ;I2C_LCD.c: 95: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 96:
      +                           {;I2C_LCD.c: 97:   switch(ROW)
 22037     1FDB  2FF4               	goto	i1l5337
 22038     1FDC                     i1l5329:
 22039                           
 22040                           ;I2C_LCD.c: 100:       LCD_CMD(0xC0 + COL-1);
 22041     1FDC  0876               	movf	LCD_Set_Cursor@COL,w
 22042     1FDD  3EBF               	addlw	191
 22043     1FDE  319D  25C5  319F   	fcall	_LCD_CMD
 22044                           
 22045                           ;I2C_LCD.c: 101:       break;
 22046     1FE1  2FFF               	goto	i1l1072
 22047     1FE2                     i1l5331:
 22048                           
 22049                           ;I2C_LCD.c: 103:       LCD_CMD(0x94 + COL-1);
 22050     1FE2  0876               	movf	LCD_Set_Cursor@COL,w
 22051     1FE3  3E93               	addlw	147
 22052     1FE4  319D  25C5  319F   	fcall	_LCD_CMD
 22053                           
 22054                           ;I2C_LCD.c: 104:       break;
 22055     1FE7  2FFF               	goto	i1l1072
 22056     1FE8                     i1l5333:
 22057                           
 22058                           ;I2C_LCD.c: 106:       LCD_CMD(0xD4 + COL-1);
 22059     1FE8  0876               	movf	LCD_Set_Cursor@COL,w
 22060     1FE9  3ED3               	addlw	211
 22061     1FEA  319D  25C5  319F   	fcall	_LCD_CMD
 22062                           
 22063                           ;I2C_LCD.c: 107:       break;
 22064     1FED  2FFF               	goto	i1l1072
 22065     1FEE                     i1l5335:
 22066                           
 22067                           ;I2C_LCD.c: 110:       LCD_CMD(0x80 + COL-1);
 22068     1FEE  0876               	movf	LCD_Set_Cursor@COL,w
 22069     1FEF  3E7F               	addlw	127
 22070     1FF0  319D  25C5  319F   	fcall	_LCD_CMD
 22071                           
 22072                           ;I2C_LCD.c: 111:   }
 22073     1FF3  2FFF               	goto	i1l1072
 22074     1FF4                     i1l5337:
 22075     1FF4  0877               	movf	LCD_Set_Cursor@ROW,w
 22076                           
 22077                           ; Switch size 1, requested type "simple"
 22078                           ; Number of cases is 3, Range of values is 2 to 4
 22079                           ; switch strategies available:
 22080                           ; Name         Instructions Cycles
 22081                           ; simple_byte           10     6 (average)
 22082                           ; direct_byte           15     9 (fixed)
 22083                           ; jumptable            263     9 (fixed)
 22084                           ;	Chosen strategy is simple_byte
 22085     1FF5  3A02               	xorlw	2	; case 2
 22086     1FF6  1903               	skipnz
 22087     1FF7  2FDC               	goto	i1l5329
 22088     1FF8  3A01               	xorlw	1	; case 3
 22089     1FF9  1903               	skipnz
 22090     1FFA  2FE2               	goto	i1l5331
 22091     1FFB  3A07               	xorlw	7	; case 4
 22092     1FFC  1903               	skipnz
 22093     1FFD  2FE8               	goto	i1l5333
 22094     1FFE  2FEE               	goto	i1l5335
 22095     1FFF                     i1l1072:
 22096     1FFF  0008               	return
 22097     2000                     __end_of_LCD_Set_Cursor:
 22098                           
 22099                           	psect	text97
 22100     1CD0                     __ptext97:	
 22101 ;; *************** function _LCD_Clear *****************
 22102 ;; Defined at:
 22103 ;;		line 133 in file "I2C_LCD.c"
 22104 ;; Parameters:    Size  Location     Type
 22105 ;;		None
 22106 ;; Auto vars:     Size  Location     Type
 22107 ;;		None
 22108 ;; Return value:  Size  Location     Type
 22109 ;;                  1    wreg      void 
 22110 ;; Registers used:
 22111 ;;		wreg, status,2, status,0, pclath, cstack
 22112 ;; Tracked objects:
 22113 ;;		On entry : 0/0
 22114 ;;		On exit  : 0/0
 22115 ;;		Unchanged: 0/0
 22116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22121 ;;Total ram usage:        0 bytes
 22122 ;; Hardware stack levels used: 1
 22123 ;; Hardware stack levels required when called: 5
 22124 ;; This function calls:
 22125 ;;		_LCD_CMD
 22126 ;; This function is called by:
 22127 ;;		_UART_Custom_ISR
 22128 ;;		_TMR0_Custom_ISR
 22129 ;; This function uses a non-reentrant model
 22130 ;;
 22131                           
 22132     1CD0                     _LCD_Clear:	
 22133                           ;psect for function _LCD_Clear
 22134                           
 22135     1CD0                     i1l5343:	
 22136                           ;incstack = 0
 22137                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
 22138                           
 22139                           
 22140                           ;I2C_LCD.c: 135:   LCD_CMD(0x01);
 22141     1CD0  3001               	movlw	1
 22142     1CD1  319D  25C5  319C   	fcall	_LCD_CMD
 22143     1CD4                     i1l5345:
 22144                           
 22145                           ;I2C_LCD.c: 136:   _delay((unsigned long)((40)*(4000000/4000000.0)));
 22146     1CD4  300D               	movlw	13
 22147     1CD5                     u571_27:
 22148     1CD5  0B89               	decfsz	9,f
 22149     1CD6  2CD5               	goto	u571_27
 22150     1CD7  0000               	nop
 22151     1CD8                     i1l1087:
 22152     1CD8  0008               	return
 22153     1CD9                     __end_of_LCD_Clear:
 22154                           
 22155                           	psect	text98
 22156     1DC5                     __ptext98:	
 22157 ;; *************** function _LCD_CMD *****************
 22158 ;; Defined at:
 22159 ;;		line 78 in file "I2C_LCD.c"
 22160 ;; Parameters:    Size  Location     Type
 22161 ;;  CMD             1    wreg     unsigned char 
 22162 ;; Auto vars:     Size  Location     Type
 22163 ;;  CMD             1    5[COMMON] unsigned char 
 22164 ;; Return value:  Size  Location     Type
 22165 ;;                  1    wreg      void 
 22166 ;; Registers used:
 22167 ;;		wreg, status,2, status,0, pclath, cstack
 22168 ;; Tracked objects:
 22169 ;;		On entry : 0/0
 22170 ;;		On exit  : 0/0
 22171 ;;		Unchanged: 0/0
 22172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22177 ;;Total ram usage:        2 bytes
 22178 ;; Hardware stack levels used: 1
 22179 ;; Hardware stack levels required when called: 4
 22180 ;; This function calls:
 22181 ;;		_LCD_Write_4Bit
 22182 ;; This function is called by:
 22183 ;;		_LCD_Set_Cursor
 22184 ;;		_LCD_Clear
 22185 ;;		_LCD_Init
 22186 ;;		_LCD_SL
 22187 ;;		_LCD_SR
 22188 ;; This function uses a non-reentrant model
 22189 ;;
 22190                           
 22191     1DC5                     _LCD_CMD:	
 22192                           ;psect for function _LCD_CMD
 22193                           
 22194                           
 22195                           ;incstack = 0
 22196                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
 22197                           ;LCD_CMD@CMD stored from wreg
 22198     1DC5  00F5               	movwf	LCD_CMD@CMD
 22199     1DC6                     i1l5249:
 22200                           
 22201                           ;I2C_LCD.c: 78: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 79: {;I2C_LCD.c: 80:   RS = 0
      +                          ;
 22202     1DC6  0022               	movlb	2	; select bank2
 22203     1DC7  01E7               	clrf	_RS^(0+256)
 22204     1DC8                     i1l5251:
 22205                           
 22206                           ;I2C_LCD.c: 81:   LCD_Write_4Bit(CMD & 0xF0);
 22207     1DC8  0875               	movf	LCD_CMD@CMD,w
 22208     1DC9  39F0               	andlw	240
 22209     1DCA  319D  25B0  319D   	fcall	_LCD_Write_4Bit
 22210     1DCD                     i1l5253:
 22211                           
 22212                           ;I2C_LCD.c: 82:   LCD_Write_4Bit((CMD << 4) & 0xF0);
 22213     1DCD  0875               	movf	LCD_CMD@CMD,w
 22214     1DCE  00F4               	movwf	??_LCD_CMD
 22215     1DCF  3003               	movlw	3
 22216     1DD0                     u476_25:
 22217     1DD0  35F4               	lslf	??_LCD_CMD,f
 22218     1DD1  3EFF               	addlw	-1
 22219     1DD2  1D03               	skipz
 22220     1DD3  2DD0               	goto	u476_25
 22221     1DD4  3574               	lslf	??_LCD_CMD,w
 22222     1DD5  39F0               	andlw	240
 22223     1DD6  319D  25B0  319D   	fcall	_LCD_Write_4Bit
 22224     1DD9                     i1l1054:
 22225     1DD9  0008               	return
 22226     1DDA                     __end_of_LCD_CMD:
 22227                           
 22228                           	psect	text99
 22229     1DB0                     __ptext99:	
 22230 ;; *************** function _LCD_Write_4Bit *****************
 22231 ;; Defined at:
 22232 ;;		line 70 in file "I2C_LCD.c"
 22233 ;; Parameters:    Size  Location     Type
 22234 ;;  Nibble          1    wreg     unsigned char 
 22235 ;; Auto vars:     Size  Location     Type
 22236 ;;  Nibble          1    3[COMMON] unsigned char 
 22237 ;; Return value:  Size  Location     Type
 22238 ;;                  1    wreg      void 
 22239 ;; Registers used:
 22240 ;;		wreg, status,2, status,0, pclath, cstack
 22241 ;; Tracked objects:
 22242 ;;		On entry : 0/0
 22243 ;;		On exit  : 0/0
 22244 ;;		Unchanged: 0/0
 22245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22249 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22250 ;;Total ram usage:        2 bytes
 22251 ;; Hardware stack levels used: 1
 22252 ;; Hardware stack levels required when called: 3
 22253 ;; This function calls:
 22254 ;;		_IO_Expander_Write
 22255 ;; This function is called by:
 22256 ;;		_LCD_CMD
 22257 ;;		_LCD_Write_Char
 22258 ;; This function uses a non-reentrant model
 22259 ;;
 22260                           
 22261     1DB0                     _LCD_Write_4Bit:	
 22262                           ;psect for function _LCD_Write_4Bit
 22263                           
 22264                           
 22265                           ;incstack = 0
 22266                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
 22267                           ;LCD_Write_4Bit@Nibble stored from wreg
 22268     1DB0  00F3               	movwf	LCD_Write_4Bit@Nibble
 22269     1DB1                     i1l5133:
 22270                           
 22271                           ;I2C_LCD.c: 70: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 71: {;I2C_LCD.c: 73
      +                          :   Nibble |= RS;
 22272     1DB1  0022               	movlb	2	; select bank2
 22273     1DB2  0867               	movf	_RS^(0+256),w
 22274     1DB3  00F2               	movwf	??_LCD_Write_4Bit
 22275     1DB4  0872               	movf	??_LCD_Write_4Bit,w
 22276     1DB5  04F3               	iorwf	LCD_Write_4Bit@Nibble,f
 22277     1DB6                     i1l5135:
 22278                           
 22279                           ;I2C_LCD.c: 74:   IO_Expander_Write(Nibble | 0x04);
 22280     1DB6  0873               	movf	LCD_Write_4Bit@Nibble,w
 22281     1DB7  3804               	iorlw	4
 22282     1DB8  319D  2575  319D   	fcall	_IO_Expander_Write
 22283     1DBB                     i1l5137:
 22284                           
 22285                           ;I2C_LCD.c: 75:   IO_Expander_Write(Nibble & 0xFB);
 22286     1DBB  0873               	movf	LCD_Write_4Bit@Nibble,w
 22287     1DBC  39FB               	andlw	251
 22288     1DBD  319D  2575  319D   	fcall	_IO_Expander_Write
 22289                           
 22290                           ;I2C_LCD.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 22291     1DC0  3010               	movlw	16
 22292     1DC1                     u572_27:
 22293     1DC1  0B89               	decfsz	9,f
 22294     1DC2  2DC1               	goto	u572_27
 22295     1DC3  3200               	nop2
 22296     1DC4                     i1l1051:
 22297     1DC4  0008               	return
 22298     1DC5                     __end_of_LCD_Write_4Bit:
 22299                           
 22300                           	psect	text100
 22301     1CB0                     __ptext100:	
 22302 ;; *************** function _Backlight *****************
 22303 ;; Defined at:
 22304 ;;		line 113 in file "I2C_LCD.c"
 22305 ;; Parameters:    Size  Location     Type
 22306 ;;		None
 22307 ;; Auto vars:     Size  Location     Type
 22308 ;;		None
 22309 ;; Return value:  Size  Location     Type
 22310 ;;                  1    wreg      void 
 22311 ;; Registers used:
 22312 ;;		wreg, status,2, status,0, pclath, cstack
 22313 ;; Tracked objects:
 22314 ;;		On entry : 0/0
 22315 ;;		On exit  : 0/0
 22316 ;;		Unchanged: 0/0
 22317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22322 ;;Total ram usage:        0 bytes
 22323 ;; Hardware stack levels used: 1
 22324 ;; Hardware stack levels required when called: 3
 22325 ;; This function calls:
 22326 ;;		_IO_Expander_Write
 22327 ;; This function is called by:
 22328 ;;		_UART_Custom_ISR
 22329 ;;		_TMR0_Custom_ISR
 22330 ;; This function uses a non-reentrant model
 22331 ;;
 22332                           
 22333     1CB0                     _Backlight:	
 22334                           ;psect for function _Backlight
 22335                           
 22336     1CB0                     i1l5339:	
 22337                           ;incstack = 0
 22338                           ; Regs used in _Backlight: [wreg+status,2+status,0+pclath+cstack]
 22339                           
 22340                           
 22341                           ;I2C_LCD.c: 115:   BackLight_State = 0x08;
 22342     1CB0  3008               	movlw	8
 22343     1CB1  0022               	movlb	2	; select bank2
 22344     1CB2  00EC               	movwf	_BackLight_State^(0+256)
 22345     1CB3                     i1l5341:
 22346                           
 22347                           ;I2C_LCD.c: 116:   IO_Expander_Write(0);
 22348     1CB3  3000               	movlw	0
 22349     1CB4  319D  2575  319C   	fcall	_IO_Expander_Write
 22350     1CB7                     i1l1075:
 22351     1CB7  0008               	return
 22352     1CB8                     __end_of_Backlight:
 22353                           
 22354                           	psect	text101
 22355     1D75                     __ptext101:	
 22356 ;; *************** function _IO_Expander_Write *****************
 22357 ;; Defined at:
 22358 ;;		line 63 in file "I2C_LCD.c"
 22359 ;; Parameters:    Size  Location     Type
 22360 ;;  Data            1    wreg     unsigned char 
 22361 ;; Auto vars:     Size  Location     Type
 22362 ;;  Data            1    1[COMMON] unsigned char 
 22363 ;; Return value:  Size  Location     Type
 22364 ;;                  1    wreg      void 
 22365 ;; Registers used:
 22366 ;;		wreg, status,2, status,0, pclath, cstack
 22367 ;; Tracked objects:
 22368 ;;		On entry : 0/0
 22369 ;;		On exit  : 0/0
 22370 ;;		Unchanged: 0/0
 22371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22376 ;;Total ram usage:        1 bytes
 22377 ;; Hardware stack levels used: 1
 22378 ;; Hardware stack levels required when called: 2
 22379 ;; This function calls:
 22380 ;;		_I2C_Master_Start
 22381 ;;		_I2C_Master_Stop
 22382 ;;		_I2C_Master_Write
 22383 ;; This function is called by:
 22384 ;;		_LCD_Write_4Bit
 22385 ;;		_Backlight
 22386 ;;		_LCD_Init
 22387 ;;		_noBacklight
 22388 ;; This function uses a non-reentrant model
 22389 ;;
 22390                           
 22391     1D75                     _IO_Expander_Write:	
 22392                           ;psect for function _IO_Expander_Write
 22393                           
 22394                           
 22395                           ;incstack = 0
 22396                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
 22397                           ;IO_Expander_Write@Data stored from wreg
 22398     1D75  00F1               	movwf	IO_Expander_Write@Data
 22399     1D76                     i1l4869:
 22400                           
 22401                           ;I2C_LCD.c: 63: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 64: {;I2C_LCD.c: 6
      +                          5:   I2C_Master_Start();
 22402     1D76  319C  246B  319D   	fcall	_I2C_Master_Start
 22403                           
 22404                           ;I2C_LCD.c: 66:   I2C_Master_Write(i2c_add);
 22405     1D79  0022               	movlb	2	; select bank2
 22406     1D7A  0866               	movf	_i2c_add^(0+256),w
 22407     1D7B  319D  2565  319D   	fcall	_I2C_Master_Write
 22408                           
 22409                           ;I2C_LCD.c: 67:   I2C_Master_Write(Data | BackLight_State);
 22410     1D7E  0871               	movf	IO_Expander_Write@Data,w
 22411     1D7F  0022               	movlb	2	; select bank2
 22412     1D80  046C               	iorwf	_BackLight_State^(0+256),w
 22413     1D81  319D  2565  319D   	fcall	_I2C_Master_Write
 22414                           
 22415                           ;I2C_LCD.c: 68:   I2C_Master_Stop();
 22416     1D84  319C  2471  319D   	fcall	_I2C_Master_Stop
 22417     1D87                     i1l1048:
 22418     1D87  0008               	return
 22419     1D88                     __end_of_IO_Expander_Write:
 22420                           
 22421                           	psect	text102
 22422     1D65                     __ptext102:	
 22423 ;; *************** function _I2C_Master_Write *****************
 22424 ;; Defined at:
 22425 ;;		line 29 in file "I2C_LCD.c"
 22426 ;; Parameters:    Size  Location     Type
 22427 ;;  data            1    wreg     unsigned char 
 22428 ;; Auto vars:     Size  Location     Type
 22429 ;;  data            1    0[COMMON] unsigned char 
 22430 ;; Return value:  Size  Location     Type
 22431 ;;                  1    wreg      unsigned char 
 22432 ;; Registers used:
 22433 ;;		wreg, status,2, status,0, pclath, cstack
 22434 ;; Tracked objects:
 22435 ;;		On entry : 0/0
 22436 ;;		On exit  : 0/0
 22437 ;;		Unchanged: 0/0
 22438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22443 ;;Total ram usage:        1 bytes
 22444 ;; Hardware stack levels used: 1
 22445 ;; Hardware stack levels required when called: 1
 22446 ;; This function calls:
 22447 ;;		_I2C_Master_Wait
 22448 ;; This function is called by:
 22449 ;;		_IO_Expander_Write
 22450 ;; This function uses a non-reentrant model
 22451 ;;
 22452                           
 22453     1D65                     _I2C_Master_Write:	
 22454                           ;psect for function _I2C_Master_Write
 22455                           
 22456                           
 22457                           ;incstack = 0
 22458                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 22459                           ;I2C_Master_Write@data stored from wreg
 22460     1D65  00F0               	movwf	I2C_Master_Write@data
 22461     1D66                     i1l4399:
 22462                           
 22463                           ;I2C_LCD.c: 29: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 30: {;I2C_
      +                          LCD.c: 31:   I2C_Master_Wait();
 22464     1D66  319D  250B  319D   	fcall	_I2C_Master_Wait
 22465     1D69                     i1l4401:
 22466                           
 22467                           ;I2C_LCD.c: 32:   SSP1BUF = data;
 22468     1D69  0870               	movf	I2C_Master_Write@data,w
 22469     1D6A  0024               	movlb	4	; select bank4
 22470     1D6B  0091               	movwf	17	;volatile
 22471     1D6C                     i1l1039:	
 22472                           ;I2C_LCD.c: 33:   while(!PIR1bits.SSP1IF);
 22473                           
 22474     1D6C  0020               	movlb	0	; select bank0
 22475     1D6D  1D90               	btfss	16,3	;volatile
 22476     1D6E  2D70               	goto	u329_21
 22477     1D6F  2D71               	goto	u329_20
 22478     1D70                     u329_21:
 22479     1D70  2D6C               	goto	i1l1039
 22480     1D71                     u329_20:
 22481     1D71                     i1l1041:
 22482                           
 22483                           ;I2C_LCD.c: 34:   PIR1bits.SSP1IF = 0;
 22484     1D71  1190               	bcf	16,3	;volatile
 22485     1D72                     i1l4403:
 22486                           
 22487                           ;I2C_LCD.c: 35:   return SSP1CON2bits.ACKSTAT;;	Return value of _I2C_Master_Write is nev
      +                          er used
 22488     1D72  0024               	movlb	4	; select bank4
 22489     1D73  0816               	movf	22,w	;volatile
 22490     1D74                     i1l1042:
 22491     1D74  0008               	return
 22492     1D75                     __end_of_I2C_Master_Write:
 22493                           
 22494                           	psect	text103
 22495     1C71                     __ptext103:	
 22496 ;; *************** function _I2C_Master_Stop *****************
 22497 ;; Defined at:
 22498 ;;		line 24 in file "I2C_LCD.c"
 22499 ;; Parameters:    Size  Location     Type
 22500 ;;		None
 22501 ;; Auto vars:     Size  Location     Type
 22502 ;;		None
 22503 ;; Return value:  Size  Location     Type
 22504 ;;                  1    wreg      void 
 22505 ;; Registers used:
 22506 ;;		wreg, status,2, status,0, pclath, cstack
 22507 ;; Tracked objects:
 22508 ;;		On entry : 0/0
 22509 ;;		On exit  : 0/0
 22510 ;;		Unchanged: 0/0
 22511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22516 ;;Total ram usage:        0 bytes
 22517 ;; Hardware stack levels used: 1
 22518 ;; Hardware stack levels required when called: 1
 22519 ;; This function calls:
 22520 ;;		_I2C_Master_Wait
 22521 ;; This function is called by:
 22522 ;;		_IO_Expander_Write
 22523 ;; This function uses a non-reentrant model
 22524 ;;
 22525                           
 22526     1C71                     _I2C_Master_Stop:	
 22527                           ;psect for function _I2C_Master_Stop
 22528                           
 22529     1C71                     i1l4395:	
 22530                           ;incstack = 0
 22531                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 22532                           
 22533                           
 22534                           ;I2C_LCD.c: 26:   I2C_Master_Wait();
 22535     1C71  319D  250B  319C   	fcall	_I2C_Master_Wait
 22536     1C74                     i1l4397:
 22537                           
 22538                           ;I2C_LCD.c: 27:   SSP1CON2bits.PEN = 1;
 22539     1C74  0024               	movlb	4	; select bank4
 22540     1C75  1516               	bsf	22,2	;volatile
 22541     1C76                     i1l1036:
 22542     1C76  0008               	return
 22543     1C77                     __end_of_I2C_Master_Stop:
 22544                           
 22545                           	psect	text104
 22546     1C6B                     __ptext104:	
 22547 ;; *************** function _I2C_Master_Start *****************
 22548 ;; Defined at:
 22549 ;;		line 19 in file "I2C_LCD.c"
 22550 ;; Parameters:    Size  Location     Type
 22551 ;;		None
 22552 ;; Auto vars:     Size  Location     Type
 22553 ;;		None
 22554 ;; Return value:  Size  Location     Type
 22555 ;;                  1    wreg      void 
 22556 ;; Registers used:
 22557 ;;		wreg, status,2, status,0, pclath, cstack
 22558 ;; Tracked objects:
 22559 ;;		On entry : 0/0
 22560 ;;		On exit  : 0/0
 22561 ;;		Unchanged: 0/0
 22562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22567 ;;Total ram usage:        0 bytes
 22568 ;; Hardware stack levels used: 1
 22569 ;; Hardware stack levels required when called: 1
 22570 ;; This function calls:
 22571 ;;		_I2C_Master_Wait
 22572 ;; This function is called by:
 22573 ;;		_IO_Expander_Write
 22574 ;; This function uses a non-reentrant model
 22575 ;;
 22576                           
 22577     1C6B                     _I2C_Master_Start:	
 22578                           ;psect for function _I2C_Master_Start
 22579                           
 22580     1C6B                     i1l4391:	
 22581                           ;incstack = 0
 22582                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 22583                           
 22584                           
 22585                           ;I2C_LCD.c: 21:   I2C_Master_Wait();
 22586     1C6B  319D  250B  319C   	fcall	_I2C_Master_Wait
 22587     1C6E                     i1l4393:
 22588                           
 22589                           ;I2C_LCD.c: 22:   SSP1CON2bits.SEN = 1;
 22590     1C6E  0024               	movlb	4	; select bank4
 22591     1C6F  1416               	bsf	22,0	;volatile
 22592     1C70                     i1l1033:
 22593     1C70  0008               	return
 22594     1C71                     __end_of_I2C_Master_Start:
 22595                           
 22596                           	psect	text105
 22597     1D0B                     __ptext105:	
 22598 ;; *************** function _I2C_Master_Wait *****************
 22599 ;; Defined at:
 22600 ;;		line 15 in file "I2C_LCD.c"
 22601 ;; Parameters:    Size  Location     Type
 22602 ;;		None
 22603 ;; Auto vars:     Size  Location     Type
 22604 ;;		None
 22605 ;; Return value:  Size  Location     Type
 22606 ;;                  1    wreg      void 
 22607 ;; Registers used:
 22608 ;;		wreg, status,2
 22609 ;; Tracked objects:
 22610 ;;		On entry : 0/0
 22611 ;;		On exit  : 0/0
 22612 ;;		Unchanged: 0/0
 22613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22618 ;;Total ram usage:        0 bytes
 22619 ;; Hardware stack levels used: 1
 22620 ;; This function calls:
 22621 ;;		Nothing
 22622 ;; This function is called by:
 22623 ;;		_I2C_Master_Start
 22624 ;;		_I2C_Master_Stop
 22625 ;;		_I2C_Master_Write
 22626 ;; This function uses a non-reentrant model
 22627 ;;
 22628                           
 22629     1D0B                     _I2C_Master_Wait:	
 22630                           ;psect for function _I2C_Master_Wait
 22631                           
 22632     1D0B                     i1l4171:	
 22633                           ;incstack = 0
 22634                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 22635                           
 22636     1D0B                     i1l1027:	
 22637                           ;I2C_LCD.c: 17:   while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 22638                           
 22639     1D0B  0024               	movlb	4	; select bank4
 22640     1D0C  1914               	btfsc	20,2	;volatile
 22641     1D0D  2D0F               	goto	u280_21
 22642     1D0E  2D10               	goto	u280_20
 22643     1D0F                     u280_21:
 22644     1D0F  2D0B               	goto	i1l1027
 22645     1D10                     u280_20:
 22646     1D10                     i1l4173:
 22647     1D10  0816               	movf	22,w	;volatile
 22648     1D11  391F               	andlw	31
 22649     1D12  1D03               	btfss	3,2
 22650     1D13  2D15               	goto	u281_21
 22651     1D14  2D16               	goto	u281_20
 22652     1D15                     u281_21:
 22653     1D15  2D0B               	goto	i1l1027
 22654     1D16                     u281_20:
 22655     1D16                     i1l1030:
 22656     1D16  0008               	return
 22657     1D17                     __end_of_I2C_Master_Wait:
 22658                           
 22659                           	psect	text106
 22660     1C39                     __ptext106:	
 22661 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 22662 ;; Defined at:
 22663 ;;		line 323 in file "mcc_generated_files/uart/src/eusart.c"
 22664 ;; Parameters:    Size  Location     Type
 22665 ;;		None
 22666 ;; Auto vars:     Size  Location     Type
 22667 ;;		None
 22668 ;; Return value:  Size  Location     Type
 22669 ;;                  1    wreg      void 
 22670 ;; Registers used:
 22671 ;;		None
 22672 ;; Tracked objects:
 22673 ;;		On entry : 0/0
 22674 ;;		On exit  : 0/0
 22675 ;;		Unchanged: 0/0
 22676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22681 ;;Total ram usage:        0 bytes
 22682 ;; Hardware stack levels used: 1
 22683 ;; This function calls:
 22684 ;;		Nothing
 22685 ;; This function is called by:
 22686 ;;		_EUSART_Initialize
 22687 ;;		_EUSART_ReceiveISR
 22688 ;; This function uses a non-reentrant model
 22689 ;;
 22690                           
 22691     1C39                     _EUSART_DefaultOverrunErrorCallback:	
 22692                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 22693                           
 22694     1C39                     i1l5817:	
 22695                           ;incstack = 0
 22696                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 22697                           
 22698                           
 22699                           ;mcc_generated_files/uart/src/eusart.c: 326:     RC1STAbits.CREN = 0;
 22700     1C39  0023               	movlb	3	; select bank3
 22701     1C3A  121D               	bcf	29,4	;volatile
 22702                           
 22703                           ;mcc_generated_files/uart/src/eusart.c: 327:     RC1STAbits.CREN = 1;
 22704     1C3B  161D               	bsf	29,4	;volatile
 22705     1C3C                     i1l979:
 22706     1C3C  0008               	return
 22707     1C3D                     __end_of_EUSART_DefaultOverrunErrorCallback:
 22708                           
 22709                           	psect	text107
 22710     1C19                     __ptext107:	
 22711 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 22712 ;; Defined at:
 22713 ;;		line 318 in file "mcc_generated_files/uart/src/eusart.c"
 22714 ;; Parameters:    Size  Location     Type
 22715 ;;		None
 22716 ;; Auto vars:     Size  Location     Type
 22717 ;;		None
 22718 ;; Return value:  Size  Location     Type
 22719 ;;                  1    wreg      void 
 22720 ;; Registers used:
 22721 ;;		None
 22722 ;; Tracked objects:
 22723 ;;		On entry : 0/0
 22724 ;;		On exit  : 0/0
 22725 ;;		Unchanged: 0/0
 22726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22731 ;;Total ram usage:        0 bytes
 22732 ;; Hardware stack levels used: 1
 22733 ;; This function calls:
 22734 ;;		Nothing
 22735 ;; This function is called by:
 22736 ;;		_EUSART_Initialize
 22737 ;;		_EUSART_ReceiveISR
 22738 ;; This function uses a non-reentrant model
 22739 ;;
 22740                           
 22741     1C19                     _EUSART_DefaultFramingErrorCallback:	
 22742                           ;psect for function _EUSART_DefaultFramingErrorCallback
 22743                           
 22744     1C19                     i1l976:	
 22745                           ;incstack = 0
 22746                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 22747                           
 22748     1C19  0008               	return
 22749     1C1A                     __end_of_EUSART_DefaultFramingErrorCallback:
 22750     007E                     btemp	set	126	;btemp
 22751     007E                     int$flags	set	126
 22752     007E                     wtemp0	set	126
 22753     2370                     
 22754                           	psect	config
 22755                           
 22756                           ;Config register CONFIG1 @ 0x8007
 22757                           ;	Oscillator Selection Bits
 22758                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 22759                           ;	Power-up Timer Enable
 22760                           ;	PWRTE = OFF, PWRT disabled
 22761                           ;	MCLR Pin Function Select
 22762                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 22763                           ;	Flash Program Memory Code Protection
 22764                           ;	CP = ON, Program memory code protection is enabled
 22765                           ;	Brown-out Reset Enable
 22766                           ;	BOREN = ON, Brown-out Reset enabled
 22767                           ;	Clock Out Enable
 22768                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 22769                           ;	Internal/External Switch Over
 22770                           ;	IESO = ON, Internal External Switch Over mode is enabled
 22771                           ;	Fail-Safe Clock Monitor Enable
 22772                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 22773     8007                     	org	32775
 22774     8007  3F7C               	dw	16252
 22775                           
 22776                           ;Config register CONFIG2 @ 0x8008
 22777                           ;	Flash Memory Self-Write Protection
 22778                           ;	WRT = OFF, Write protection off
 22779                           ;	Peripheral Pin Select one-way control
 22780                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 22781                           ;	Zero Cross Detect Disable Bit
 22782                           ;	ZCD = OFF, ZCD disable. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 22783                           ;	PLL Enable Bit
 22784                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 22785                           ;	Stack Overflow/Underflow Reset Enable
 22786                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 22787                           ;	Brown-out Reset Voltage Selection
 22788                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 22789                           ;	Low-Power Brown Out Reset
 22790                           ;	LPBOR = OFF, Low-Power BOR is disabled
 22791                           ;	In-Circuit Debugger Mode
 22792                           ;	DEBUG = 0x1, unprogrammed default
 22793                           ;	Low-Voltage Programming Enable
 22794                           ;	LVP = ON, Low-voltage programming enabled
 22795     8008                     	org	32776
 22796     8008  3EFF               	dw	16127
 22797                           
 22798                           ;Config register CONFIG3 @ 0x8009
 22799                           ;	WDT Period Select
 22800                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 22801                           ;	Watchdog Timer Enable
 22802                           ;	WDTE = OFF, WDT disabled
 22803                           ;	WDT Window Select
 22804                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 22805                           ;	WDT Input Clock Selector
 22806                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 22807     8009                     	org	32777
 22808     8009  3F9F               	dw	16287

Data Sizes:
    Strings     98
    Constant    134
    Data        1
    BSS         211
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     39      77
    BANK3            80      7      37
    BANK4            80      0      80
    BANK5            80      0      64
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    I2C1_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), NULL(), 

    I2C1_CallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    i2c1_eventTable	const PTR FTN()enum E10210[9] size(2) Largest target is 1
		 -> I2C1_EVENT_ERROR(), I2C1_EVENT_IDLE(), I2C1_EVENT_NACK(), I2C1_EVENT_RESET(), 
		 -> I2C1_EVENT_RX(), I2C1_EVENT_SEND_RD_ADDR(), I2C1_EVENT_SEND_WR_ADDR(), I2C1_EVENT_STOP(), 
		 -> I2C1_EVENT_TX(), 

    I2C1_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C1_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C1_Host$ErrorGet	PTR FTN()enum E10201 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C1_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C1_Host$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C1_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    I2C1_Host$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C1_Host$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    I2C1_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    I2C1_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    i2c1Status$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[9]), STR_2(CODE[14]), STR_4(CODE[9]), STR_5(CODE[14]), 
		 -> STR_7(CODE[13]), TMR0_Custom_ISR@buffer(BANK2[16]), UART_Custom_ISR@buffer(BANK2[16]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    NULL$0	PTR struct . size(2) Largest target is 0

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1156$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    S1156TMR_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    S1156TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    S1156TMR_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    S1156TMR_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    S1156TMR_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    S1156TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    S132$2$1	PTR unsigned char  size(2) Largest target is 0

    S132$3$1	PTR unsigned char  size(2) Largest target is 0

    S132$4$1	PTR unsigned char  size(2) Largest target is 0

    S132$4$3	PTR unsigned char  size(2) Largest target is 0

    S132$8$0	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_DefaultCallback(), 

    S132$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S132$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S132$ErrorGet	PTR FTN()enum E10201 size(2) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S132$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Initialize(), 

    S132$IsBusy	PTR FTN()_Bool  size(2) Largest target is 1
		 -> I2C1_IsBusy(), 

    S132$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Read(), 

    S132$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S132$TransferSetup	PTR FTN(PTR struct .,unsigned long ,)_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S132$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_Write(), 

    S132$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(2) Largest target is 1
		 -> I2C1_WriteRead(), 

    S2021$18$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), 

    S2021$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S2021$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S2021$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S2021$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S2021$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S2021$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S2021$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S2021$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S2021$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S2021$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S2021$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S2021$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S2021$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S2021$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S2021$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S2021$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S2021$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S2021$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S2021$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S2021$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2021$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    S231$readPtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S231$writePtr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3024$buffer	PTR unsigned char  size(2) Largest target is 0

    S3024$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_6(CODE[15]), STR_8(CODE[14]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> TMR0_Custom_ISR@buffer(BANK2[16]), UART_Custom_ISR@buffer(BANK2[16]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_12(CODE[4]), STR_9(CODE[4]), 

    Timer0$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    Timer0$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    Timer0$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    Timer0$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    Timer0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 
		 -> NULL(), 

    Timer0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    Timer2$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    Timer2$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    Timer2$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    Timer2$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    Timer2$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    Timer2$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    Timer4$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    Timer4$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    Timer4$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    Timer4$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    Timer4$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    Timer4$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    tmr1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), TMR1_Initialize(), TMR2_Initialize(), TMR4_Initialize(), 

    tmr1$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), TMR1_Write(), TMR2_PeriodCountSet(), TMR4_PeriodCountSet(), 

    tmr1$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), TMR2_Start(), TMR4_Start(), NULL(), 

    tmr1$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), TMR2_Stop(), TMR4_Stop(), NULL(), 

    tmr1$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Tasks(), TMR2_Tasks(), TMR4_Tasks(), NULL(), 

    tmr1$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), TMR1_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), TMR4_OverflowCallbackRegister(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR1_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 
		 -> NULL(), 

    TMR1_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    TMR2_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 
		 -> NULL(), 

    TMR2_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    TMR4_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 
		 -> NULL(), 

    TMR4_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR1_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), TMR4_DefaultOverflowCallback(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_6(CODE[15]), STR_8(CODE[14]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_6(CODE[15]), STR_8(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_6(CODE[15]), STR_8(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK2[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    ___xxtofl->_ADC_GetConversion
    _I2C1_ISR->_I2C1_EventHandler
    _I2C1_EventHandler->_I2C1_EVENT_TX
    _I2C1_ERROR_ISR->_I2C1_ErrorEventHandler
    _I2C1_ErrorEventHandler->_I2C1_EVENT_TX
    _I2C1_EVENT_TX->_I2C1_DataTransmit
    _I2C1_EVENT_SEND_WR_ADDR->_I2C1_DataTransmit
    _xtoa->_pad
    _read_prec_or_width->___wmul
    _efgtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    ___flsub->___fladd
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _Backlight->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _vfprintf->_vfpfcnvrt
    _xtoa->_pad
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _TMR0_Custom_ISR->_sprintf
    _UART_Custom_ISR->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    _Timer0_DefaultOverflowCallback->_TMR0_Custom_ISR
    _TMR0_Custom_ISR->_sprintf
    _EUSART_ReceiveISR->_UART_Custom_ISR
    _UART_Custom_ISR->_sprintf

Critical Paths under _main in BANK3

    _main->_shift_out_to_motors
    _Timer0_Initialize->_Timer0_OverflowCallbackRegister
    _TMR4_Initialize->_TMR4_OverflowCallbackRegister
    _TMR2_Initialize->_TMR2_OverflowCallbackRegister
    _TMR1_Initialize->_TMR1_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _I2C1_Initialize->_I2C1_CallbackRegister
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _EUSART_Initialize->_EUSART_RxCompleteCallbackRegister

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2224
                                              5 BANK3      2     2      0
                 _CCP2_LoadDutyValue
                  _SYSTEM_Initialize
                _shift_out_to_motors
 ---------------------------------------------------------------------------------
 (1) _shift_out_to_motors                                  5     5      0     161
                                              0 BANK3      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1303
                     _ADC_Initialize
                    _CCP1_Initialize
                    _CCP2_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                  _Timer0_Initialize
 ---------------------------------------------------------------------------------
 (2) _Timer0_Initialize                                    0     0      0     121
    _Timer0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _Timer0_OverflowCallbackRegister                      2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     121
      _TMR4_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR4_OverflowCallbackRegister                        2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
      _TMR2_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR2_OverflowCallbackRegister                        2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR1_OverflowCallbackRegister                        2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     121
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     121
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0     242
              _I2C1_CallbackRegister
 ---------------------------------------------------------------------------------
 (3) _I2C1_CallbackRegister                                2     0      2     242
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     456
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
  _EUSART_RxCompleteCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_RxCompleteCallbackRegister                    2     0      2     152
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2     152
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2     152
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP2_LoadDutyValue                                   2     0      2     760
                                              0 BANK3      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   64755
                                NULL *
                  _EUSART_ReceiveISR *
                     _I2C1_ERROR_ISR
                           _I2C1_ISR
                 _Timer0_OverflowISR
 ---------------------------------------------------------------------------------
 (5) _Timer0_OverflowISR                                   0     0      0   36275
                                NULL *
       _TMR1_DefaultOverflowCallback *
       _TMR2_DefaultOverflowCallback *
       _TMR4_DefaultOverflowCallback *
     _Timer0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (6) _Timer0_DefaultOverflowCallback                       0     0      0   36275
                    _TMR0_Custom_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_Custom_ISR                                     26    26      0   36275
                                             13 BANK2     26    26      0
                  _ADC_GetConversion
                          _Backlight
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                         _TMR1_Start
                          _TMR1_Stop
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            14    10      4     626
                                              4 COMMON     8     4      4
                                              0 BANK0      6     6      0
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (8) _TMR1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _TMR4_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_ISR                                             0     0      0     164
                  _I2C1_EventHandler
 ---------------------------------------------------------------------------------
 (6) _I2C1_EventHandler                                    2     2      0     164
                                              4 COMMON     2     2      0
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
                _I2C1_InterruptClear
                        _I2C1_IsAddr
                        _I2C1_IsData
                        _I2C1_IsNack
 ---------------------------------------------------------------------------------
 (7) _I2C1_IsNack                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_IsData                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_IsAddr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_ERROR_ISR                                       0     0      0     164
             _I2C1_ErrorEventHandler
 ---------------------------------------------------------------------------------
 (6) _I2C1_ErrorEventHandler                               2     2      0     164
                                              4 COMMON     2     2      0
                                NULL *
               _I2C1_DefaultCallback *
                   _I2C1_EVENT_ERROR *
                    _I2C1_EVENT_IDLE *
                    _I2C1_EVENT_NACK *
                   _I2C1_EVENT_RESET *
                      _I2C1_EVENT_RX *
            _I2C1_EVENT_SEND_RD_ADDR *
            _I2C1_EVENT_SEND_WR_ADDR *
                    _I2C1_EVENT_STOP *
                      _I2C1_EVENT_TX *
           _I2C1_ErrorInterruptClear
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_TX                                        3     3      0      48
                                              1 COMMON     3     3      0
                  _I2C1_DataTransmit
                    _I2C1_EVENT_STOP
                 _I2C1_RestartEnable
 ---------------------------------------------------------------------------------
 (8) _I2C1_RestartEnable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_SEND_WR_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_SEND_RD_ADDR                              0     0      0      22
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (8) _I2C1_DataTransmit                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_RX                                        2     2      0      24
                                              0 COMMON     2     2      0
                       _I2C1_AckSend
                   _I2C1_DataReceive
                   _I2C1_IsRxBufFull
                      _I2C1_NackSend
                 _I2C1_ReceiveEnable
                _I2C1_RestartDisable
 ---------------------------------------------------------------------------------
 (8) _I2C1_RestartDisable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_ReceiveEnable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_NackSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_IsRxBufFull                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DataReceive                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_AckSend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_NACK                                      1     1      0      24
                                              0 COMMON     1     1      0
                    _I2C1_EVENT_STOP
 ---------------------------------------------------------------------------------
 (8) _I2C1_EVENT_STOP                                      0     0      0       0
                         _I2C1_Close
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (9) _I2C1_StopSend                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Close                                           0     0      0       0
           _I2C1_ErrorInterruptClear
                _I2C1_InterruptClear
              _I2C1_StatusFlagsClear
 ---------------------------------------------------------------------------------
 (10) _I2C1_StatusFlagsClear                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_InterruptClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ErrorInterruptClear                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_IDLE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_ERROR                                     1     1      0      24
                                              0 COMMON     1     1      0
                   _I2C1_EVENT_RESET
 ---------------------------------------------------------------------------------
 (7) _I2C1_EVENT_RESET                                     0     0      0       0
                      _I2C1_BusReset
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusReset                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DefaultCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_ReceiveISR                                    6     6      0   28152
                                             32 BANK2      6     6      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
                    _UART_Custom_ISR
 ---------------------------------------------------------------------------------
 (6) _UART_Custom_ISR                                     19    19      0   28062
                                             13 BANK2     19    19      0
                          _Backlight
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (8) _sprintf                                             22    16      6   26131
                                             73 BANK1      7     1      6
                                              0 BANK2     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (9) _vfprintf                                             7     4      3   25597
                                             66 BANK1      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (10) _vfpfcnvrt                                          15    13      2   25278
                                             78 BANK0      2     0      2
                                             54 BANK1     12    12      0
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _xtoa
 ---------------------------------------------------------------------------------
 (11) _xtoa                                               11     9      2    2829
                                              8 BANK0     11     9      2
                                _pad
 ---------------------------------------------------------------------------------
 (11) _read_prec_or_width                                  9     7      2     733
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     444
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) _efgtoa                                             55    50      5   20041
                                              0 BANK1     54    49      5
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (12) _strcpy                                              6     4      2     291
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (12) _pad                                                 7     4      3    2445
                                             11 COMMON     3     0      3
                                              4 BANK0      4     4      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (13) _fputs                                               7     6      1     888
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _fputc                                               8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (15) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (12) _memcpy                                              8     5      3     328
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (12) _labs                                                4     0      4     294
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (12) _floorf                                             20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (12) ___fpclassifyf                                      16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (12) ___fltol                                            10     6      4     533
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (12) ___flsub                                             8     0      8    2637
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fladd                                            20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (12) ___flneg                                             4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (12) ___flmul                                            26    18      8    3785
                                              6 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) __Umul8_16                                           9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (12) ___flge                                             12     4      8    1246
                                             32 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (12) ___fleq                                             12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (12) ___fldiv                                            26    18      8    2489
                                             32 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) _LCD_Write_String                                     5     3      2     831
                                              6 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (9) _LCD_Write_Char                                       2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (8) _LCD_Set_Cursor                                       2     1      1     851
                                              6 COMMON     2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (8) _LCD_Clear                                            0     0      0     133
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (9) _LCD_CMD                                              2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (10) _LCD_Write_4Bit                                      2     2      0      89
                                              2 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (8) _Backlight                                            0     0      0      44
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (11) _IO_Expander_Write                                   1     1      0      44
                                              1 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (12) _I2C_Master_Write                                    1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (12) _I2C_Master_Stop                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (12) _I2C_Master_Start                                    0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (13) _I2C_Master_Wait                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP2_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _CCP2_Initialize
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
       _EUSART_RxCompleteCallbackRegister
     _I2C1_Initialize
       _I2C1_CallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_OverflowCallbackRegister
     _TMR2_Initialize
       _TMR2_OverflowCallbackRegister
     _TMR4_Initialize
       _TMR4_OverflowCallbackRegister
     _Timer0_Initialize
       _Timer0_OverflowCallbackRegister
   _shift_out_to_motors

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
     _UART_Custom_ISR *
       _Backlight
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _LCD_Clear
         _LCD_CMD
           _LCD_Write_4Bit
             _IO_Expander_Write
       _LCD_Set_Cursor
         _LCD_CMD
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Write_4Bit
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _efgtoa
               ___fladd
               ___fldiv
                 _ADC_GetConversion (ARG)
                 ___flmul (ARG)
                   _ADC_GetConversion (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _ADC_GetConversion (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
               _strcpy
             _fputc
             _read_prec_or_width
               ___wmul
             _xtoa
               _pad
   _I2C1_ERROR_ISR *
     _I2C1_ErrorEventHandler
       NULL(Fake) *
       _I2C1_DefaultCallback *
       _I2C1_EVENT_ERROR *
         _I2C1_EVENT_RESET
           _I2C1_BusReset
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
         _I2C1_EVENT_STOP
           _I2C1_Close
             _I2C1_ErrorInterruptClear
             _I2C1_InterruptClear
             _I2C1_StatusFlagsClear
           _I2C1_StopSend
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
         _I2C1_AckSend
         _I2C1_DataReceive
         _I2C1_IsRxBufFull
         _I2C1_NackSend
         _I2C1_ReceiveEnable
         _I2C1_RestartDisable
       _I2C1_EVENT_SEND_RD_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_SEND_WR_ADDR *
         _I2C1_DataTransmit
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
         _I2C1_DataTransmit
         _I2C1_EVENT_STOP
         _I2C1_RestartEnable
       _I2C1_ErrorInterruptClear *
   _I2C1_ISR *
     _I2C1_EventHandler
       _I2C1_EVENT_ERROR *
       _I2C1_EVENT_IDLE *
       _I2C1_EVENT_NACK *
       _I2C1_EVENT_RESET *
       _I2C1_EVENT_RX *
       _I2C1_EVENT_SEND_RD_ADDR *
       _I2C1_EVENT_SEND_WR_ADDR *
       _I2C1_EVENT_STOP *
       _I2C1_EVENT_TX *
       _I2C1_InterruptClear *
       _I2C1_IsAddr *
       _I2C1_IsData *
       _I2C1_IsNack *
   _Timer0_OverflowISR *
     NULL(Fake) *
     _TMR1_DefaultOverflowCallback *
     _TMR2_DefaultOverflowCallback *
     _TMR4_DefaultOverflowCallback *
     _Timer0_DefaultOverflowCallback *
       _TMR0_Custom_ISR
         _ADC_GetConversion
         _Backlight
         _LCD_Clear
         _LCD_Set_Cursor
         _LCD_Write_String
         _TMR1_Start
         _TMR1_Stop
         ___fldiv
         ___flge
         ___flmul
         ___xxtofl
         _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     27      4D       9       96.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      7      25      11       46.2%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1B0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1B0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jun 21 16:49:22 2024

                    ?_TMR2_OverflowCallbackRegister 01BE                                        ___fldiv@aexp 0059  
                                      ___fldiv@bexp 0058                              ??_I2C1_DefaultCallback 0070  
                                      ___fldiv@sign 0051                                                  l19 1D0A  
                                                _RS 0167         __end_of_EUSART_OverrunErrorCallbackRegister 1D65  
             ??_EUSART_OverrunErrorCallbackRegister 01C0                ?_EUSART_OverrunErrorCallbackRegister 01BE  
               _EUSART_OverrunErrorCallbackRegister 1D56                                ??_Timer0_OverflowISR 007E  
                                   ??_I2C1_NackSend 0070                                     ??_I2C1_BusReset 0070  
                               ___wmul@multiplicand 0072                                     _timer0ReloadVal 016B  
                           __end_of_CCP1_Initialize 1CF5                                 __Umul8_16@word_mpld 0076  
                                               l317 1CF4                                                 l157 1D9B  
                                               l343 1E5D                                                 l503 1D3A  
                                               l184 1D2E                                                 l338 07FF  
                                               l523 1CE1                                                 l375 1FD9  
                                               l384 1CCF                                                 l720 1C8E  
                                               l802 1C9A                                                 l571 1DAF  
                                               l627 1E44                                                 l469 1242  
                                               l649 1CEA                                                 l691 1EAD  
                                               l595 1C94                                                 l778 1E18  
                                               l983 1D55                                                 l991 1D22  
                                               l896 1075                                                 l987 1D64  
                                               _PR2 001B                                                 _PR4 0414  
                                   _timer1ReloadVal 015D                                                 _pad 10A5  
                         __end_of_I2C1_DataTransmit 1C66                                     _TMR2_Initialize 1D9C  
                                               wreg 0009                            _I2C1_ErrorInterruptClear 1C1E  
                                      ___flmul@aexp 0038                                        ___flmul@bexp 0039  
                                      ___flmul@sign 0033                                        ___flmul@temp 003E  
                                      ___flmul@prod 003A                                     __end_of_LCD_CMD 1DDA  
                                      _BAUD1CONbits 019F                                 LCD_Write_String@Str 0076  
                                    _LCD_Set_Cursor 1FDA                                    __end_of_I2C1_ISR 1C5D  
                                      ___fltol@exp1 0079                                                l1151 1609  
                                              l1145 15CF                                                l1155 163B  
                                              l1147 15D7                                                l1165 1192  
                                              l1166 119E                                                l6211 1C8F  
                                              l6221 1D1E                                                l6205 1D23  
                                              l6301 1216                                                l6213 1CE2  
                                              ?_pad 007B                                                l6231 1D00  
                                              l6223 1D47                                                l6207 1D2A  
                                              l6311 1223                                                l6303 1218  
                                              l6215 1C89                                                l6241 1D08  
                                              l6233 1D03                                                l6225 1D4E  
                                              l6209 1CD9                                                l6321 1232  
                                              l6313 1226                                                l6305 121A  
                                              l6401 1DA0                                                l6217 1C95  
                                              l6235 1D04                                                l6227 1D56  
                                              l6219 1D17                                                l6251 1D99  
                                              l6243 1D88                                                l6331 123C  
                                              l6323 1235                                                l6315 1229  
                                              l6307 121D                                                l6403 1DA2  
                                              l6411 1E04                                                l6237 1D05  
                                              l6253 1CEB                                                l6261 07F9  
                                              l6229 1D5D                                                l6245 1D8D  
                                              l6341 1241                                                l6333 123D  
                                              l6325 1238                                                l6317 122C  
                                              l6309 1220                                                l6405 1DA3  
                                              l6421 1E15                                                l6413 1E08  
                                              l6501 1615                                                l6431 1E4F  
                                              l6239 1D06                                                l6255 1CF2  
                                              l6263 07FB                                                l6351 1058  
                                              l6343 1049                                                l6247 1D8E  
                                              l6423 1D2F                                                l6335 123E  
                                              l6327 123A                                                l6319 122F  
                                              l6271 11ED                                                l6407 1DAB  
                                              l6415 1E0A                                                l6511 1654  
                                              l6503 1622                                                l6433 1E55  
                                              l6257 07F5                                                l6265 1CC8  
                                              l6361 106C                                                l6353 105A  
                                              l6345 104B                                                l6249 1D91  
                                              l6425 1D32                                                l6337 123F  
                                              l6329 123B                                                l6281 11F9  
                                              l6273 11F0                                                l6409 1DAD  
                                              l6417 1E0B                                                l6441 1FB5  
                                              l6513 1658                                                l6505 1626  
                                              l6435 1E59                                                l6427 1E45  
                                              l6259 07F8                                                l6267 1CCB  
                                              l6363 106F                                                l6355 105C  
                                              l6347 1053                                                l6339 1240  
                                              l6291 120B                                                l6283 11FC  
                                              l6275 11F2                                                l6419 1E13  
                                              l6371 1E2F                                                l6451 1176  
                                              l6443 115B                                                l6515 1660  
                                              l6507 162E                                                l6429 1E4A  
                                              l6269 1CCD                                                l6365 1071  
                                              l6357 105D                                                l6349 1056  
                                              l6293 120C                                                l6285 1206  
                                              l6277 11F5                                                l6381 1E43  
                                              l6373 1E34                                                l6461 1183  
                                              l6453 117A                                                l6509 1647  
                                              l6367 1072                                                l6359 1064  
                                              l6295 120F                                                l6287 1208  
                                              l6279 11F7                                                l6391 1EA0  
                                              l6383 1E93                                                l6375 1E37  
                                              l6463 1187                                                l6455 117C  
                                              l6369 1073                                                l6297 1211  
                                              l6289 120A                                                l6393 1EA8  
                                              l6385 1E95                                                l6377 1E3A  
                                              l6465 1194                                                l6457 1180  
                                              l6449 115C                                                l6481 15C8  
                                              l6299 1213                                                l6395 1EAA  
                                              l6387 1E97                                                l6379 1E42  
                                              l6467 1198                                                l6459 1182  
                                              l6491 15CE                                                l6483 15C9  
                                              l6475 15C2                                                l6397 1EAB  
                                              l6389 1E99                                                l6493 15E3  
                                              l6485 15CA                                                l6477 15C5  
                                              l6399 1D9C                                                l6495 15F0  
                                              l6487 15CB                                                l6479 15C7  
                                              l6497 15F4                                                l6489 15CD  
                                              l6499 15FC                                                STR_1 18D7  
                                              STR_2 188F                                                STR_3 183C  
                                              STR_4 18CE                                                STR_5 188F  
                                              STR_6 1872                                                STR_7 189D  
                                              STR_8 1881                                                STR_9 18E0  
                                 _I2C1_Deinitialize 0000                                                _LATA 010C  
                                              _LATB 010D                                                _LATC 010E  
                                              _T2PR 001B                                                _T4PR 0414  
                                              u5500 1E4F                                                u5501 1E4E  
                                              i1l34 1E6F                                                u5515 1E51  
                                              u5460 1D2A                                                u5540 1192  
                                              u5524 1161                                                i1l37 1E77  
                                              u5461 1D29                                                u5541 1191  
                                              u5525 1160                                                u5470 1D1E  
                                              u5534 1169                                                u5471 1D1D  
                                              u5535 1168                                                u5607 1666  
                                              u5480 1D4E                                                u5481 1D4D  
                                              u5617 1177                                                u5490 1D5D  
                                              u5491 1D5C                                                u5627 117D  
                                              u5637 1184                                                u5557 15E9  
                                              u5647 1195                                                u5567 1602  
                                              u5657 119B                                                u5577 161B  
                                              u5587 1634                                                u5597 164D  
                                              _TMR0 0015                                                _TMR2 001A  
                                              _TMR4 0413                                                _WPUA 020C  
                                              _WPUB 020D                                                _WPUC 020E  
                         EUSART_ReceiveISR@regValue 0144                          __end_of_CCP2_LoadDutyValue 1E5E  
                                 ?_LCD_Write_String 0076                                     ??_I2C1_StopSend 0070  
                                              _dbuf 0220                             __end_of_CCP2_Initialize 0800  
                                              _labs 1DDA                                                _main 15C2  
                                              _tmr1 18B6                                                _prec 0157  
                                              pad@i 0025                                                pad@p 007C  
                                              fsr0h 0005                                                fsr1h 0007  
                                              indf0 0000                                                fsr0l 0004  
                                              indf1 0001                                                fsr1l 0006  
                                              btemp 007E                                                _xtoa 140B  
                       _INT_DefaultInterruptHandler 0000                                       ___fpclassifyf 138C  
                                              start 0041                                  ??_LCD_Write_String 0078  
        __end_of_EUSART_DefaultOverrunErrorCallback 1C3D                ??_EUSART_DefaultOverrunErrorCallback 0070  
               ?_EUSART_DefaultOverrunErrorCallback 0070                  _EUSART_DefaultOverrunErrorCallback 1C39  
                                   ___fldiv@new_exp 0052                     __end_of_INT_SetInterruptHandler 1CE2  
                              LCD_Write_4Bit@Nibble 0073                                     _I2C1_EVENT_IDLE 1C51  
                                   _I2C1_EVENT_NACK 1C77                                          _i2c1Status 0147  
                                   _I2C1_EVENT_STOP 1CC0                                               ??_pad 0024  
                                  ?_UART_Custom_ISR 0070                             __end_of_TMR0_Custom_ISR 0BB9  
                                  ?_I2C_Master_Wait 0070                                    ?_I2C_Master_Stop 0070  
                                     ___fltol@sign1 0078                      ??_TMR1_DefaultOverflowCallback 0070  
                                 __end_of_I2C1_Host 1860                                               ?_labs 0070  
                                   __end_of___fladd 0DC5                                               ?_main 0070  
                                   __end_of___fldiv 0A01                                     __end_of___flneg 1D00  
                                             STR_12 18E4                                     __end_of___flmul 1000  
                                   __end_of___flsub 1F0A                                     __end_of___fltol 1314  
                                             ?_xtoa 0028                                               _T1CON 0018  
                                             _T2CON 001C                                               _T4CON 0415  
                                             _IOCAF 0393                                               _T2HLT 001D  
                                             _IOCBF 0396                                               _IOCCF 0399  
                                             _IOCAN 0392                                               _IOCAP 0391  
                                             _IOCBN 0395                                               _IOCBP 0394  
                                             _IOCCN 0398                                               _IOCCP 0397  
                                             _T4HLT 0416                                               i1l211 1C1B  
                                             i1l220 1CA1                                               _T2TMR 001A  
                                             i1l301 1C20                                               i1l205 1158  
                                             i1l214 1C54                                               i1l304 1C44  
                                             i1l208 1F8F                                               i1l217 1CBF  
                                             i1l241 1C82                                               i1l250 1C29  
                                             _T2RST 001F                                               i1l227 10A4  
                                             i1l235 1115                                               i1l244 1CC7  
                                             i1l253 1C65                                               i1l262 1C32  
                                             i1l238 1C7C                                               i1l190 1C58  
                                             i1l271 1C26                                               i1l247 1CA8  
                                             i1l256 1C40                                               i1l280 1C88  
                                             i1l265 1C2F                                               i1l513 003F  
                                             i1l274 1C48                                               i1l259 1C2C  
                                             i1l283 1C6A                                               i1l187 1C5C  
                                             _T4TMR 0413                                               i1l277 1C50  
                                             i1l286 1CAF                                               i1l199 1E03  
                                             i1l289 1C4C                                               i1l298 1C23  
                                             _T4RST 0418                                               i1l723 1C1D  
                                             i1l652 1C60                                               i1l805 0002  
                                             i1l646 1021                                               i1l694 1C35  
                                             i1l598 1C1C                                               i1l697 1C38  
                                             i1l970 138B                                               i1l976 1C19  
                                             i1l979 1C3C                                               _UART1 1800  
                                      vfpfcnvrt@fmt 006E                                               _TMR1H 0017  
                                             _TMR1L 0016                                               _TRISA 008C  
                                             _TRISB 008D                                               _TRISC 008E  
                                             _RXPPS 0E24                            ?_I2C1_EVENT_SEND_RD_ADDR 0070  
                                   _TMR4_Initialize 1E04                              __end_of_LCD_Set_Cursor 2000  
                                 ??_I2C1_Initialize 01C0                                         ?_TMR1_Start 0070  
                                             _flags 0165                             ??_I2C1_CallbackRegister 01C0  
                               read_prec_or_width@c 0020                                 read_prec_or_width@n 0021  
                                             _fputc 0800                                               _fputs 1F90  
                                 ?_I2C1_IsRxBufFull 0070                                               labs@a 0070  
                          ?_I2C1_EVENT_SEND_WR_ADDR 0070                                               pad@fp 0027  
                                             _width 0155                                               _putch 1C1A  
                    ??_TMR4_DefaultOverflowCallback 0070                             __end_of_TMR1_Initialize 1EAE  
                                             pclath 000A                               I2C1_DataTransmit@data 0070  
                                ??_I2C1_IsRxBufFull 0070                                               status 0003  
                                             wtemp0 007E                                     __end_of_sprintf 1F4A  
                                    ?___fpclassifyf 0070                                               xtoa@c 0030  
                                             xtoa@d 0028                                               xtoa@i 0031  
                                             xtoa@p 002E                                               xtoa@w 002B  
                                      ??_I2C1_Close 0070                                      _LCD_Write_4Bit 1DB0  
                                    _LCD_Write_Char 1E19                                     __initialization 0043  
                          ??_I2C1_ErrorEventHandler 0074                                        __end_of_labs 1DEF  
                                      __end_of_main 1670                                        __end_of_tmr1 18C2  
                                      __end_of_xtoa 148C                                   _IO_Expander_Write 1D75  
                                  _I2C1_EVENT_ERROR 1C7D                                    _I2C1_EVENT_RESET 1CA2  
                           __end_of_TMR2_Initialize 1DB0                         ?_INTERRUPT_InterruptManager 0070  
                                ?_IO_Expander_Write 0070                                              ??_labs 0074  
                                            ??_main 01C3                                    ?_CCP1_Initialize 0070  
                                            ??_xtoa 002A                                   __end_of_LCD_Clear 1CD9  
                                         ??_LCD_CMD 0074                          __end_of_read_prec_or_width 12A4  
                                 ?_I2C_Master_Start 0070                                   ?_I2C_Master_Write 0070  
  EUSART_RxCompleteCallbackRegister@callbackHandler 01BE  EUSART_OverrunErrorCallbackRegister@callbackHandler 01BE  
EUSART_FramingErrorCallbackRegister@callbackHandler 01BE                I2C1_CallbackRegister@callbackHandler 01BE  
                               ??_IO_Expander_Write 0071                                     ?_LCD_Set_Cursor 0076  
                                __end_of_I2C1_Close 1E04                                  ??_I2C_Master_Start 0070  
                                            _ADCON0 009D                                              _ADCON1 009E  
                                ??_I2C_Master_Write 0070                                              _ADCON2 009F  
                        _EUSART_OverrunErrorHandler 0159                                              ?_fputc 0070  
                                            ?_fputs 0078                                              _ADRESH 009C  
                                            _ADRESL 009B                                              _CCPR1H 0292  
                                            _CCPR2H 0299                                              _CCPR1L 0291  
                                            _CCPR2L 0298               __end_of_TMR1_OverflowCallbackRegister 1C8F  
                     _TMR1_OverflowCallbackRegister 1C89                                              _ANSELA 018C  
                                            ?_putch 0070                                              _ANSELB 018D  
                                            _ANSELC 018E                                              _BORCON 0116  
                                            _T1GCON 0019                                              _RC1REG 0199  
                                            _RA2PPS 0E92                                              _RC1STA 019D  
                                            _RC3PPS 0EA3                                              i1l1030 1D16  
                                            i1l1200 0BB8                                              i1l1033 1C70  
                                            i1l1041 1D71                                              i1l1042 1D74  
                                            i1l1027 1D0B                                              i1l1051 1DC4  
                                            _RC4PPS 0EA4                                              i1l1036 1C76  
                                            i1l1054 1DD9                                              i1l1039 1D6C  
                                            i1l1063 1ECA                                              i1l1048 1D87  
                                            i1l1072 1FFF                                              i1l1057 1E2E  
                                            i1l1075 1CB7                                              _RC5PPS 0EA5  
                                            i1l1270 1EE9                                              i1l1087 1CD8  
                                            i1l1600 0D62                                              i1l1192 0A39  
                                            i1l1185 07F4                                              _ODCONA 028C  
                                            _ODCONB 028D                                              i1l1443 11EC  
                                            i1l1611 0DBD                                              i1l1603 0D9A  
                                            i1l1195 0A41                                              _RC6PPS 0EA6  
                                            _ODCONC 028E                                              i1l1612 0DC4  
                                            i1l1268 1ED5                                              i1l1437 11BB  
                                            i1l1438 11D7                                              i1l1454 1516  
                                            i1l1446 14A9                                              i1l1462 1313  
                                            i1l1615 1F09                                              i1l1711 15C1  
                                            i1l1199 0B01                                              i1l1472 1313  
                                            i1l1641 0986                                              i1l1625 08A8  
                                            i1l1449 14FD                                              i1l4201 0BEA  
                                            i1l5001 0505                                              i1l1458 1CFF  
                                            i1l1722 158D                                              i1l1627 0A00  
                                            i1l4211 0BFB                                              i1l4203 0BEC  
                                            i1l5011 0575                                              i1l5003 0506  
                                            i1l1731 1F49                                              i1l1723 1599  
                                            i1l1715 1573                                              i1l1900 078B  
                                            i1l1820 141F                                              i1l4301 0D02  
                                            i1l1573 0C8C                                              i1l4221 0C18  
                                            i1l4213 0C03                                              i1l4205 0BF0  
                                            i1l1469 12FE                                              i1l5021 058E  
                                            i1l5013 057A                                              i1l5005 0508  
                                            i1l5101 146B                                              i1l1709 153A  
                                            i1l1646 09D2                                              i1l1590 0D1E  
                                            i1l1582 0DC4                                              i1l1910 1DEE  
                                            i1l1647 09EC                                              i1l1671 0F7F  
                                            i1l4311 0D2B                                              i1l4303 0D08  
                                            i1l1575 0C6A                                              i1l4231 0C25  
                                            i1l4223 0C1D                                              i1l4215 0C04  
                                            i1l4207 0BF1                                              i1l5031 05A4  
                                            i1l5023 0592                                              i1l5015 057F  
                                            i1l5007 050B                                              i1l5111 1247  
                                            i1l5103 1472                                              i1l4401 1D69  
                                            i1l1649 09F9                                              i1l1665 0FFF  
                                            i1l4321 0D44                                              i1l4305 0D0D  
                                            i1l4241 0C2F                                              i1l4233 0C27  
                                            i1l4225 0C1F                                              i1l1569 0C0E  
                                            i1l4209 0BF6                                              i1l4217 0C06  
                                            i1l1913 103C                                              i1l4161 080F  
                                            i1l5041 05BE                                              i1l5025 0595  
                                            i1l5017 0583                                              i1l5033 05A8  
                                            i1l5009 0563                                              i1l5113 1258  
                                            i1l5121 128B                                              i1l5105 147F  
                                            i1l1594 0D40                                              i1l1762 10D4  
                                            i1l1770 00E1                                              i1l4171 1D0B  
                                            i1l4403 1D72                                              i1l4323 0D47  
                                            i1l4315 0D34                                              i1l4307 0D16  
                                            i1l4331 0D54                                              i1l4251 0C39  
                                            i1l4243 0C31                                              i1l4235 0C29  
                                            i1l4227 0C21                                              i1l4219 0C14  
                                            i1l4163 081A                                              i1l4155 0800  
                                            i1l5051 064E                                              i1l5043 060C  
                                            i1l5035 05AE                                              i1l5027 059C  
                                            i1l5019 058A                                              i1l4411 1ED1  
                                            i1l5123 129F                                              i1l5115 1260  
                                            i1l5203 1769                                              i1l5131 1C41  
                                            i1l1684 1F5C                                              i1l1916 1048  
                                            i1l1836 12A3                                              i1l1828 148B  
                                            i1l4173 1D10                                              i1l5133 1DB1  
                                            i1l4421 119F                                              i1l1677 0FF3  
                                            i1l4341 0D67                                              i1l4333 0D55  
                                            i1l4325 0D49                                              i1l4317 0D3B  
                                            i1l4309 0D26                                              i1l4261 0C72  
                                            i1l4245 0C33                                              i1l4237 0C2B  
                                            i1l4229 0C23                                              i1l4253 0C3B  
                                            i1l4181 0BC2                                              i1l4165 083A  
                                            i1l4157 0805                                              i1l5061 067C  
                                            i1l5053 065C                                              i1l5045 0638  
                                            i1l5037 05B6                                              i1l5029 05A0  
                                            i1l1773 06A8                                              i1l4413 1EDA  
                                            i1l5117 126E                                              i1l5109 1245  
                                            i1l5213 17A7                                              i1l5205 1774  
                                            i1l5141 1685                                              i1l5301 1C2D  
                                            i1l6021 0006                                              i1l1686 1F6C  
                                            i1l1758 10AD                                              i1l5135 1DB6  
                                            i1l4511 0862                                              i1l4503 0857  
                                            i1l4423 11B3                                              i1l4351 0D9F  
                                            i1l4343 0D6C                                              i1l4335 0D59  
                                            i1l4327 0D4E                                              i1l4319 0D3F  
                                            i1l4263 0C74                                              i1l4271 0C86  
                                            i1l4255 0C3C                                              i1l4247 0C35  
                                            i1l4239 0C2D                                              i1l4191 0BD6  
                                            i1l4183 0BC3                                              i1l4175 0BB9  
                                            i1l4167 084C                                              i1l4159 080A  
                                            i1l5063 0689                                              i1l5055 0661  
                                            i1l5047 063C                                              i1l5039 05BA  
                                            i1l4415 1EDF                                              i1l4407 1ECB  
                                            i1l5119 1283                                              i1l5223 17D2  
                                            i1l5215 17AF                                              i1l5207 177F  
                                            i1l5151 16B6                                              i1l5143 168E  
                                            i1l5127 1C21                                              i1l5303 1C4D  
                                            i1l5311 1CA7                                              i1l6031 001C  
                                            i1l6023 000A                                              i1l1928 0856  
                                            i1l1936 1FB4                                              i1l1856 17FF  
                   Timer0_OverflowISR@CountCallBack 015F                                              i1l5137 1DBB  
                                            i1l5321 1EB1                                              i1l4601 0966  
                                            i1l4513 0867                                              i1l4521 0877  
                                            i1l4505 085B                                              i1l4425 11CF  
                                            i1l4441 14C9                                              i1l4433 148C  
                                            i1l4361 0DB6                                              i1l4353 0DA4  
                                            i1l4345 0D74                                              i1l4337 0D5F  
                                            i1l4329 0D50                                              i1l4281 0CA6  
                                            i1l4273 0C90                                              i1l4265 0C78  
                                            i1l4257 0C54                                              i1l4249 0C37  
                                            i1l4185 0BC8                                              i1l4193 0BD8  
                                            i1l4177 0BBC                                              i1l1945 1E92  
                                            i1l5065 068E                                              i1l5057 0667  
                                            i1l5049 0640                                              i1l4417 1EE5  
                                            i1l4409 1ECD                                              i1l5081 142E  
                                            i1l5073 140D                                              i1l5217 17BF  
                                            i1l5209 1793                                              i1l5225 17DB  
                                            i1l5161 16DF                                              i1l5153 16C1  
                                            i1l5145 1696                                              i1l5129 1C1E  
                                            i1l5241 1DFD                                              i1l5305 1C2A  
                                            i1l6041 0034                                              i1l6033 0021  
                                            i1l6025 000F                                              i1l5251 1DC8  
                                            i1l5331 1FE2                                              i1l5323 1EBB  
                                            i1l4603 096A                                              i1l4531 088B  
                                            i1l4523 087F                                              i1l4515 086C  
                                            i1l4507 085D                                              i1l4427 11E9  
                                            i1l4443 14E1                                              i1l4435 14A1  
                                            i1l4371 1F4D                                              i1l4363 0DB8  
                                            i1l4355 0DAC                                              i1l4347 0D78  
                                            i1l4291 0CB8                                              i1l4283 0CAA  
                                            i1l4275 0C95                                              i1l4267 0C79  
                                            i1l4259 0C6E                                              i1l4195 0BE0  
                                            i1l4187 0BCD                                              i1l4179 0BBE  
                                            i1l1939 1C1A                                              i1l5067 0699  
                                            i1l5059 0675                                              i1l5091 1445  
                                            i1l5083 1433                                              i1l5075 1412  
                                            i1l5163 16E6                                              i1l5171 16F3  
                                            i1l5155 16CA                                              i1l5147 169A  
                                            i1l5139 1672                                              i1l5243 1E00  
                                            i1l5235 1DEF                                              i1l5307 1CA2  
                                            i1l5411 1C83                                              i1l5315 1C33  
                                            i1l6043 0038                                              i1l6035 0027  
                                            i1l6027 0014                                              i1l5341 1CB3  
                                            i1l5253 1DCD                                              i1l5333 1FE8  
                                            i1l5325 1EBF                                              i1l4621 09B4  
                                            i1l4613 098B                                              i1l4605 096B  
                                            i1l4533 0890                                              i1l4541 08A0  
                                            i1l4525 0884                                              i1l4517 0874  
                                            i1l4509 0861                                              i1l4429 11EB  
                                            i1l4445 14E5                                              i1l4437 14BD  
                                            i1l4373 1F54                                              i1l4701 0E96  
                                            i1l4453 1CF5                                              i1l4365 0DBF  
                                            i1l4357 0DB1                                              i1l4349 0D96  
                                            i1l4293 0CB9                                              i1l4285 0CAE  
                                            i1l4269 0C82                                              i1l4197 0BE3  
                                            i1l4189 0BD5                                              i1l4461 12A4  
                                            i1l5069 069D                                              i1l1789 02D1  
                                            i1l5093 144C                                              i1l5085 1436  
                                            i1l5077 1418                                              i1l5181 1729  
                                            i1l5173 16FE                                              i1l5165 16E9  
                                            i1l5157 16D1                                              i1l5149 16AD  
                                            i1l5229 17E5                                              i1l5261 1F11  
                                            i1l5237 1DF1                                              i1l5245 1C24  
                                            i1l5421 1C53                                              i1l5309 1CA5  
                                            i1l5317 1C36                                              i1l6045 003C  
                                            i1l6037 002C                                              i1l6029 0017  
                                            i1l4391 1C6B                                              i1l5343 1CD0  
                                            i1l5335 1FEE                                              i1l5327 1FDB  
                                            i1l5255 1E1A                                              i1l5319 1EAE  
                                            i1l4631 09EB                                              i1l4615 0990  
                                            i1l4623 09B8                                              i1l4607 096F  
                                            i1l4543 08B0                                              i1l4551 08C9  
                                            i1l4535 0895                                              i1l4527 0886  
                                            i1l4519 0875                                              i1l4447 1513  
                                            i1l4439 14C5                                              i1l4375 1F58  
                                            i1l4711 0EC1                                              i1l4703 0E9D  
                                            i1l4455 1CFD                                              i1l4367 0DC3  
                                            i1l4359 0DB2                                              i1l4295 0CC2  
                                            i1l4287 0CB2                                              i1l4279 0C9E  
                                            i1l4199 0BE9                                              i1l4471 12C8  
                                            i1l4463 12AD                                              i1l1895 06EA  
                                            i1l4383 1F92                                              i1l1799 04F8  
                                            i1l5095 1450                                              i1l5087 143C  
                                            i1l5079 142B                                              i1l5183 1739  
                                            i1l5175 170E                                              i1l5191 174F  
                                            i1l5159 16D5                                              i1l1879 1F29  
                                            i1l5263 1F1D                                              i1l5351 1F32  
                                            i1l5247 1C3D                                              i1l5239 1DFA  
                                            i1l5431 1C9B                                              i1l5407 1CA9  
                                            i1l5415 1C66                                              i1l5271 1E69  
                                            i1l5511 0A04                                              i1l6039 0031  
                                            u300_20 0CAA                                              i1l1896 0793  
                                            i1l4393 1C6E                                              i1l5249 1DC6  
                                            i1l5345 1CD4                                              i1l5329 1FDC  
                                            i1l5337 1FF4                                              i1l5257 1E1D  
                                            i1l4633 09EF                                              i1l4625 09C5  
                                            i1l4617 0998                                              i1l4609 0983  
                                            i1l4561 08EF                                              i1l4553 08CE  
                                            i1l4545 08BC                                              i1l4537 089D  
                                            i1l4529 088A                                              i1l4449 1515  
                                            i1l4377 1F63                                              i1l4369 1F4B  
                                            i1l4721 0F09                                              i1l4713 0ED3  
                                            i1l4705 0EA8                                              i1l4457 1CFF  
                                            i1l4289 0CB4                                              u300_21 0CA9  
                                            i1l4297 0CC7                                              i1l4473 12D0  
                                            i1l1889 140A                                              i1l4801 13BF  
                                            i1l4385 1F95                                              i1l5097 1454  
                                            i1l5089 1441                                              i1l5193 1758  
                                            i1l5169 16EB                                              i1l5265 1F27  
                                            i1l5353 1F34                                              i1l5281 1C62  
                                            i1l5441 107D                                              i1l5425 1CB8  
                                            i1l5433 1CA0                                              i1l5601 1119  
                                            i1l5273 1E6A                                              i1l5361 151E  
                                            i1l5521 0A31                                              i1l5513 0A0A  
                                            i1l4395 1C71                                              i1l5339 1CB0  
                                            i1l4635 09F3                                              i1l4627 09E0  
                                            i1l4619 099C                                              i1l4571 0914  
                                            i1l4563 08F7                                              i1l4547 08C0  
                                            i1l4539 089E                                              i1l4379 1F68  
                                            i1l4731 0F4F                                              i1l4723 0F1E  
                                            i1l4715 0EDA                                              i1l4707 0EAF  
                                            i1l4651 0DD0                                              i1l4643 0DC5  
                                            i1l4299 0CDE                                              i1l4491 12F5  
                                            i1l4483 12DE                                              i1l4475 12D2  
                                            i1l4467 12B6                                              i1l4811 13E6  
                                            i1l4803 13D6                                              i1l4387 1FA1  
                                            i1l5099 145D                                              i1l5195 175F  
                                            i1l5179 1721                                              i1l5259 1F0C  
                                            i1l5355 1F3F                                              i1l5347 1F2C  
                                            i1l5291 1C49                                              i1l5283 1C30  
                                            i1l5451 1099                                              i1l5443 1081  
                                            i1l5419 1C51                                              i1l5427 1CBE  
                                            i1l5611 113F                                              i1l5603 1121  
                                            i1l5275 1E6D                                              i1l5371 154B  
                                            i1l5363 1522                                              i1l5531 0A49  
                                            i1l5523 0A33                                              i1l5515 0A21  
                                            i1l4397 1C74                                              i1l4637 09F5  
                                            i1l4629 09E3                                              i1l4581 0933  
                                            i1l4573 0918                                              i1l4565 08FF  
                                            i1l4557 08D7                                              i1l4741 0F63  
                                            i1l4733 0F53                                              i1l4725 0F35  
                                            i1l4717 0EEC                                              i1l4709 0EBA  
                                            i1l4661 0DEC                                              i1l4653 0DD5  
                                            i1l4645 0DC9                                              i1l4493 1303  
                                            i1l4477 12D6                                              i1l4485 12EE  
                                            i1l4469 12C7                                              i1l4805 13DB  
                                            i1l4389 1FA6                                              i1l4821 1E7B  
                                            i1l4901 010F                                              i1l5197 1764  
                                            i1l5189 1746                                              i1l5349 1F30  
                                            i1l5453 109C                                              i1l5445 1090  
                                            i1l5437 1076                                              i1l5461 10D5  
                                            i1l5285 1CC0                                              i1l5621 1F89  
                                            i1l5613 1144                                              i1l5605 1129  
                                            i1l5277 1E73                                              i1l5269 1E5F  
                                            i1l5381 156C                                              i1l5373 154E  
                                            i1l5365 1532                                              i1l5541 0AD0  
                                            i1l5533 0A89                                              i1l5525 0A37  
                                            i1l5517 0A2E                                              i1l5509 0A01  
                                            i1l4399 1D66                                              i1l4591 094F  
                                            i1l4583 093B                                              i1l4575 0919  
                                            i1l4567 0901                                              i1l4559 08E7  
                                            i1l4751 0F84                                              i1l4743 0F64  
                                            i1l4735 0F54                                              i1l4727 0F3C  
                                            i1l4719 0EF7                                              i1l4671 0DFD  
                                            i1l4663 0DF1                                              i1l4655 0DDA  
                                            i1l4647 0DCB                                              i1l4495 1308  
                                            i1l4815 1406                                              i1l4831 06A9  
                                            i1l4823 1DDA                                              i1l4911 0143  
                                            i1l5199 1767                                              i1l5295 1C27  
                                            i1l5455 109F                                              i1l5447 1093  
                                            i1l5439 1076                                              i1l5471 10FA  
                                            i1l5463 10D7                                              i1l5287 1CC6  
                                            i1l5615 1F6D                                              i1l5607 112F  
                                            i1l5391 159B                                              i1l5383 157A  
                                            i1l5375 1559                                              i1l5367 1542  
                                            i1l5359 1519                                              i1l5551 0B83  
                                            i1l5543 0AE9                                              i1l5535 0AA7  
                                            i1l5527 0A3E                                              i1l5519 0A30  
                                            u301_20 0CAE                                              i1l4593 0956  
                                            i1l4569 0906                                              i1l4577 0920  
                                            i1l4585 093F                                              i1l4753 0F89  
                                            i1l4761 0FB1                                              i1l4745 0F68  
                                            i1l4737 0F5B                                              i1l4729 0F48  
                                            i1l4681 0E19                                              i1l4673 0E02  
                                            i1l4665 0DF3                                              i1l4657 0DE2  
                                            i1l4649 0DCF                                              u301_21 0CAD  
                                            i1l4497 1EEA                                              i1l4809 13E0  
                                            i1l4841 0707                                              i1l4833 06C1  
                                            i1l4825 1DDE                                              i1l4921 0167  
                                            i1l4913 014C                                              i1l4905 011F  
                                            i1l5801 0799                                              i1l5449 1098  
                                            i1l5457 10A3                                              i1l5473 10FE  
                                            i1l5465 10DF                                              i1l5481 1111  
                                            i1l5617 1F72                                              i1l5609 1137  
                                            i1l5393 15AF                                              i1l5385 1583  
                                            i1l5377 1560                                              i1l5553 0B85  
                                            i1l5537 0AC7                                              i1l5545 0AF1  
                                            i1l5529 0A46                                              i1l4595 095A  
                                            i1l4587 0945                                              i1l4579 0932  
                                            i1l4771 0FE1                                              i1l4763 0FBE  
                                            i1l4755 0F91                                              i1l4747 0F7C  
                                            i1l4739 0F5F                                              i1l4691 0E3F  
                                            i1l4683 0E1E                                              i1l4675 0E0A  
                                            i1l4667 0DF7                                              i1l4659 0DE4  
                                            i1l4499 1EED                                              i1l4851 074C  
                                            i1l4835 06DC                                              i1l4827 1DDF  
                                            i1l4819 1E79                                              i1l4931 01E0  
                                            i1l4907 0131                                              i1l5811 07CC  
                                            i1l5803 079F                                              i1l5299 1C45  
                                            i1l5483 1114                                              i1l5475 1104  
                                            i1l5467 10E6                                              i1l5491 1C7B  
                                            i1l5619 1F75                                              i1l5395 15B4  
                                            i1l5387 1587                                              i1l5379 1564  
                                            i1l5555 0B8B                                              i1l5547 0AF4  
                                            i1l5539 0ACA                                              i1l4597 095B  
                                            i1l4589 094D                                              i1l4773 0FEC  
                                            i1l4765 0FC8                                              i1l4757 0F95  
                                            i1l4693 0E57                                              i1l4677 0E0C  
                                            i1l4669 0DF8                                              i1l4853 0763  
                                            i1l4845 071C                                              i1l4837 06E9  
                                            i1l4861 1023                                              i1l4941 026A  
                                            i1l4933 0207                                              i1l4925 017F  
                                            i1l4909 0137                                              i1l4917 015C  
                                            i1l5813 07E0                                              i1l5805 07B6  
                                            i1l5477 1108                                              i1l5469 10F5  
                                            i1l5821 1C55                                              i1l5397 15B8  
                                            i1l5389 1591                                              i1l5557 0BA4  
                                            i1l5549 0AFA                                              i1l4599 0962  
                                            i1l4775 0FF0                                              i1l4767 0FD6  
                                            i1l4759 0FAD                                              i1l4695 0E64  
                                            i1l4687 0E27                                              i1l4679 0E14  
                                            i1l4855 076C                                              i1l4847 0733  
                                            i1l4839 06EF                                              i1l4863 1028  
                                            i1l4791 10BF                                              i1l4783 10A7  
                                            i1l4951 02C4                                              i1l4935 0230  
                                            i1l4927 018C                                              i1l4919 0165  
                                            i1l4871 0085                                              i1l5815 07E7  
                                            i1l5807 07C3                                              i1l5479 110E  
                                            i1l5487 1C77                                              i1l5495 1C7D  
                                            i1l5399 15B9                                              i1l5559 0BAB  
                                            u310_20 0D44                                              u302_20 0CB8  
                                            i1l5817 1C39                                              i1l4777 0FF1  
                                            i1l4769 0FDF                                              i1l4697 0E7C  
                                            i1l4689 0E32                                              u310_21 0D43  
                                            u302_21 0CB7                                              i1l4857 0783  
                                            i1l4849 073B                                              i1l4865 102E  
                                            i1l4793 10CD                                              i1l4785 10AB  
                                            i1l4961 02EB                                              i1l4953 02CC  
                                            i1l4937 023A                                              i1l4945 0293  
                                            i1l4929 01B8                                              i1l4881 00C3  
                                            i1l4873 0086                                              i1l5809 07C6  
                                            i1l5489 1C77                                              i1l5497 1C7D  
                                            i1l5841 1001                                              i1l4779 0FF7  
                                            i1l4699 0E89                                              i1l4795 138C  
                                            i1l4867 1032                                              i1l4787 10B0  
                                            i1l4971 0301                                              i1l4963 02ED  
                                            i1l4955 02D9                                              i1l4939 0266  
                                            i1l4947 02BA                                              i1l4891 00DD  
                                            i1l4883 00C6                                              i1l4875 008E  
                                            i1l5499 1C81                                              i1l5819 1C59  
                                            i1l5843 1013                                              i1l4869 1D76  
                                            i1l4797 13A4                                              i1l4789 10BA  
                                            i1l4981 0437                                              i1l4973 030A  
                                            i1l4965 02F3                                              i1l4957 02DF  
                                            i1l4949 02BF                                              i1l4893 00E3  
                                            i1l4885 00CE                                              i1l4877 00AC  
                                            i1l5845 1019                                              i1l4799 13B9  
                                            i1l4991 0483                                              i1l4983 0441  
                                            i1l4975 03D3                                              i1l4959 02E3  
                                            i1l4967 02F7                                              i1l4895 00F4  
                                            i1l4887 00D3                                              i1l4879 00AF  
                                            i1l5871 133F                                              i1l5863 1314  
                                            i1l5599 1116                                              i1l5847 101E  
                                            i1l5839 1000                                              u311_20 0D4E  
                                            u311_21 0D4D                                              i1l4993 04BD  
                                            i1l4985 0459                                              i1l4977 03D7  
                                            i1l4969 02F9                                              i1l4897 00FA  
                                            i1l4889 00D8                                              i1l5881 1366  
                                            i1l5873 1345                                              i1l5865 1316  
                                            i1l4995 04C2                                              i1l4987 045E  
                                            i1l4979 03E5                                              i1l4899 0106  
                                            i1l5891 137A                                              i1l5883 136B  
                                            i1l5875 134A                                              i1l5867 1329  
                                            u303_25 0CBC                                              i1l4997 04EE  
                                            i1l4989 0466                                              i1l5893 1381  
                                            i1l5885 136F                                              i1l5877 134F  
                                            i1l5869 132E                                              i1l5797 1C5D  
                                            i1l4999 04F4                                              i1l5799 0796  
                                            i1l5895 1383                                              i1l5887 1373  
                                            i1l5879 1360                                              u400_20 0F7C  
                                            u320_20 0D9F                                              u312_20 0D54  
                                            u304_20 0CDE                                              u400_21 0F7B  
                                            u320_21 0D9E                                              u312_21 0D53  
                                            u304_21 0CDD                                              i1l5897 1387  
                                            _INLVLA 038C                                              _INLVLB 038D  
                                            u304_23 0CDA                                              _INLVLC 038E  
                                            u401_20 0F83                                              u321_20 0DA4  
                                            u313_20 0D59                                              u305_20 0D0D  
                                            u401_21 0F82                                              u321_21 0DA3  
                                            u313_21 0D58                                              u305_21 0D0C  
                                            u402_20 0F89                                              u322_20 0DB1  
                                            u314_20 0D5F                                              u306_20 0D26  
                                            u410_20 13B1                                              u330_20 1ED1  
                                            u402_21 0F88                                              u322_21 0DB0  
                                            u314_21 0D5E                                              u306_21 0D25  
                                            u330_21 1ED0                                              u410_25 13AD  
                                            u403_20 0F95                                              u323_20 0DB6  
                                            u315_20 0D66                                              u307_20 0D2B  
                                            u411_20 13BF                                              u403_21 0F94  
                                            u323_21 0DB5                                              u315_21 0D65  
                                            u307_21 0D2A                                              u411_21 13BE  
                                            u331_25 1ED6                                              u340_20 14E5  
                                            u404_20 0FA3                                              u324_20 0DC3  
                                            u316_20 0D6C                                              u412_20 13CC  
                                            u420_20 06CE                                              u500_20 1104  
                                            u340_21 14E4                                              u324_21 0DC2  
                                            u316_21 0D6B                                              u500_21 1103  
                                            u404_25 0F9F                                              u308_25 0D35  
                                            u412_25 13C8                                              u420_25 06CA  
                                            u332_25 1EDB                                              u341_20 1513  
                                            u325_20 1F58                                              u405_20 0FBE  
                                            u317_20 0D78                                              u309_20 0D3F  
                                            u413_20 13D6                                              u421_20 06E9  
                                            u333_20 1EE5                                              u501_20 0A3E  
                                            u341_21 1512                                              u325_21 1F57  
                                            u405_21 0FBD                                              u317_21 0D77  
                                            u309_21 0D3E                                              u413_21 13D5  
                                            u421_21 06E8                                              u333_21 1EE4  
                                            u501_21 0A3D                                              u341_25 150F  
                                            u405_25 0FBA                                              u421_25 06E5  
                                            u334_20 11B3                                              u406_20 0FD6  
                                            u342_20 1CFD                                              u318_20 0D87  
                                            u414_20 13E6                                              u430_20 0783  
                                            u422_20 06EF                                              u510_20 1137  
                                            u502_20 0A46                                              u334_21 11B2  
                                            u406_21 0FD5                                              u342_21 1CFC  
                                            u414_21 13E5                                              u430_21 0782  
                                            u422_21 06EE                                              u510_21 1136  
                                            u502_21 0A45                                              u326_25 1F5D  
                                            u406_25 0FD2                                              u318_25 0D83  
                                            u350_25 12F6                                              u335_20 11CF  
                                            u327_20 1F68                                              u407_20 0FF0  
                                            u319_20 0D96                                              u351_20 1303  
                                            u343_20 12AD                                              u415_20 13F3  
                                            u423_20 06FD                                              u431_20 1048  
                                            u511_20 113F                                              u503_20 0AA7  
                                            u335_21 11CE                                              u327_21 1F67  
                                            u407_21 0FEF                                              u319_21 0D95  
                                            u351_21 1302                                              u343_21 12AC  
                                            u431_21 1047                                              u511_21 113E  
                                            u503_21 0AA6                                              u415_25 13EF  
                                            u423_25 06F9                                              u280_20 1D10  
                                            u360_20 08CE                                              u336_20 11E9  
                                            u352_20 1308                                              u344_20 12C3  
                                            u416_20 13FE                                              u424_20 071B  
                                            u328_20 1FB4                                              u408_20 10AB  
                                            u440_20 01E0                                              u432_20 00AC  
                                            u520_20 1366                                              u504_20 0AC7  
                                            u280_21 1D0F                                              u360_21 08CD  
                                            u336_21 11E8                                              u352_21 1307  
                                            u416_21 13FC                                              u424_21 071A  
                                            u328_21 1FB3                                              u408_21 10AA  
                                            u440_21 01DF                                              u432_21 00AB  
                                            u520_21 1365                                              u504_21 0AC6  
                                            u336_25 11E5                                              u344_25 12BF  
                                            u281_20 1D16                                              u329_20 1D71  
                                            u361_20 0906                                              u353_20 0861  
                                            u337_20 14A1                                              u345_20 12D6  
                                            u417_20 13FF                                              u425_20 0729  
                                            u409_20 10CD                                              u441_20 0207  
                                            u433_20 00D3                                              u521_20 1379  
                                            u281_21 1D15                                              u329_21 1D70  
                                            u361_21 0905                                              u353_21 0860  
                                            u337_21 14A0                                              u345_21 12D5  
                                            u409_21 10CC                                              u441_21 0206  
                                            u433_21 00D2                                              u521_21 1378  
                                            u425_25 0725                                              u409_25 10C9  
                                            u370_20 095A                                              u354_20 0867  
                                            u338_20 14BD                                              u290_20 0C18  
                                            u282_20 0BC2                                              u346_20 12DD  
                                            u426_20 0733                                              u418_20 1E92  
                                            u450_20 0437                                              u442_20 0230  
                                            u434_20 00D8                                              u514_20 1013  
                                            u530_20 000A                                              u370_21 0959  
                                            u354_21 0866                                              u338_21 14BC  
                                            u290_21 0C17                                              u282_21 0BC1  
                                            u346_21 12DC                                              u426_21 0732  
                                            u418_21 1E91                                              u450_21 0436  
                                            u442_21 022F                                              u434_21 00D7  
                                            u514_21 1012                                              u530_21 0009  
                                            u362_25 0907                                              u355_20 086C  
                                            u339_20 14C9                                              u291_20 0C54  
                                            u283_20 0BC8                                              u427_20 0759  
                                            u419_20 1DDE                                              u451_20 0459  
                                            u443_20 0292                                              u435_20 00F4  
                                            u515_20 1019                                              u531_20 000F  
                                            u355_21 086B                                              u339_21 14C8  
                                            u291_21 0C53                                              u283_21 0BC7  
                                            u419_21 1DDD                                              u451_21 0458  
                                            u443_21 0291                                              u435_21 00F3  
                                            u515_21 1018                                              u531_21 000E  
                                            u371_25 095C                                              u363_25 090E  
                                            u291_25 0C50                                              u347_25 12DF  
                                            u427_25 0755                                              u380_20 09E0  
                                            u372_20 096A                                              u364_20 0918  
                                            u356_20 088A                                              u292_20 0C5D  
                                            u284_20 0BCD                                              u348_20 12ED  
                                            u428_20 0763                                              u276_20 0805  
                                            u460_20 065C                                              u452_20 045E  
                                            u444_20 02BA                                              u436_20 00FA  
                                            u508_20 1121                                              u532_20 0014  
                                            u380_21 09DF                                              u372_21 0969  
                                            u364_21 0917                                              u356_21 0889  
                                            u292_21 0C5B                                              u284_21 0BCC  
                                            u348_21 12EC                                              u428_21 0762  
                                            u276_21 0804                                              u460_21 065B  
                                            u452_21 045D                                              u444_21 02B9  
                                            u436_21 00F9                                              u508_21 1120  
                                            u532_21 0013                                              u380_25 09DC  
                                            u460_25 0658                                              u381_20 09F3  
                                            u373_20 096F                                              u357_20 0890  
                                            u293_20 0C5E                                              u285_20 0BE9  
                                            u349_20 12F4                                              u429_20 0779  
                                            u277_20 080A                                              u461_20 0682  
                                            u453_20 04BD                                              u445_20 02C4  
                                            u437_20 0131                                              u517_20 132E  
                                            u509_20 1129                                              u533_20 001C  
                                            u381_21 09F2                                              u373_21 096E  
                                            u357_21 088F                                              u285_21 0BE8  
                                            u349_21 12F3                                              u277_21 0809  
                                            u461_21 0680                                              u453_21 04BC  
                                            u445_21 02C3                                              u437_21 0130  
                                            u517_21 132D                                              u509_21 1128  
                                            u533_21 001B                                              u365_25 091A  
                                            u429_25 0775                                              u374_20 0983  
                                            u366_20 0932                                              u358_20 0895  
                                            u382_20 0DCF                                              u294_20 0C6E  
                                            u286_20 0BF0                                              u278_20 081A  
                                            u462_20 0683                                              u454_20 04F4  
                                            u446_20 02DF                                              u438_20 0137  
                                            u470_20 129F                                              u518_20 1345  
                                            u534_20 0021                                              u374_21 0982  
                                            u366_21 0931                                              u358_21 0894  
                                            u382_21 0DCE                                              u294_21 0C6D  
                                            u286_21 0BEF                                              u278_21 0819  
                                            u454_21 04F3                                              u446_21 02DE  
                                            u438_21 0136                                              u470_21 129E  
                                            u518_21 1344                                              u534_21 0020  
                                            u366_25 092E                                              u390_25 0E97  
                                            u375_20 098A                                              u367_20 0945  
                                            u359_20 08B0                                              u383_20 0DD5  
                                            u295_20 0C78                                              u287_20 0BF6  
                                            u279_20 083A                                              u463_20 068E  
                                            u455_20 0563                                              u447_20 02E3  
                                            u439_20 017E                                              u471_20 1685  
                                            u519_20 134F                                              u535_20 002C  
                                            u375_21 0989                                              u367_21 0944  
                                            u359_21 08AF                                              u383_21 0DD4  
                                            u295_21 0C77                                              u287_21 0BF5  
                                            u279_21 0839                                              u463_21 068D  
                                            u455_21 0562                                              u447_21 02E2  
                                            u439_21 017D                                              u471_21 1684  
                                            u519_21 134E                                              u535_21 002B  
                                            u391_25 0EC2                                              u279_25 0836  
                                            u455_25 055F                                              u480_20 1ECA  
                                            u376_20 0990                                              u368_20 094D  
                                            u392_20 0F14                                              u384_20 0DDA  
                                            u288_20 0BFB                                              u456_20 057F  
                                            u448_20 02F3                                              u464_20 1412  
                                            u472_20 16AD                                              u536_20 0031  
                                            u480_21 1EC9                                              u376_21 098F  
                                            u368_21 094C                                              u384_21 0DD9  
                                            u288_21 0BFA                                              u456_21 057E  
                                            u448_21 02F2                                              u464_21 1411  
                                            u472_21 16AC                                              u536_21 0030  
                                            u392_25 0F10                                              u296_25 0C7C  
                                            u377_20 099C                                              u393_20 0F2B  
                                            u385_20 0DF7                                              u297_20 0C8C  
                                            u289_20 0C14                                              u457_20 0583  
                                            u449_20 03E5                                              u465_20 143C  
                                            u473_20 16DF                                              u481_20 151E  
                                            u537_20 0038                                              u377_21 099B  
                                            u385_21 0DF6                                              u297_21 0C8B  
                                            u289_21 0C13                                              u457_21 0582  
                                            u449_21 03E4                                              u465_21 143B  
                                            u473_21 16DE                                              u481_21 151D  
                                            u537_21 0037                                              u369_25 0950  
                                            u393_25 0F27                                              u449_25 03E1  
                                            u378_20 09AA                                              u386_20 0DFD  
                                            u298_20 0C90                                              u458_20 05AE  
                                            u466_20 146B                                              u474_20 16FD  
                                            u490_20 158D                                              u482_20 1522  
                                            u538_20 003C                                              _OSCCON 0099  
                                            u386_21 0DFC                                              u298_21 0C8F  
                                            u458_21 05AD                                              u466_21 146A  
                                            u474_21 16FC                                              u490_21 158C  
                                            u482_21 1521                                              u538_21 003B  
                                            u378_25 09A6                                              u394_25 0F36  
                                            u466_25 1467                                              u570_27 07ED  
                                            u379_20 09C5                                              u387_20 0E02  
                                            u299_20 0C95                                              u459_20 064E  
                                            u467_20 1472                                              u475_20 177E  
                                            u491_20 1591                                              u483_20 1542  
                                            u379_21 09C4                                              u387_21 0E01  
                                            u299_21 0C94                                              u459_21 064D  
                                            u467_21 1471                                              u475_21 177D  
                                            u491_21 1590                                              u483_21 1541  
                                            u379_25 09C1                                              u395_25 0F49  
                                            u459_25 064A                                              u571_27 1CD5  
                                            u396_20 0F53                                              u388_20 0E19  
                                            u468_20 147F                                              u492_20 15A5  
                                            u396_21 0F52                                              u388_21 0E18  
                                            u468_21 147E                                              u476_25 1DD0  
                                            u468_25 147B                                              u492_25 15A1  
                                            u484_25 1553                                              u572_27 1DC1  
                                            u389_20 0E1E                                              u469_20 1258  
                                            u493_20 15B4                                              u485_20 155F  
                                            u389_21 0E1D                                              u469_21 1257  
                                            u493_21 15B3                                              u485_21 155E  
                                            u477_25 1E25                                              u397_25 0F55  
                                            u398_20 0F63                                              u478_20 1F27  
                                            u494_20 15B8                                              u398_21 0F62  
                                            u478_21 1F26                                              u494_21 15B7  
                                            u486_25 156D                                              u566_27 0A27  
                                            u399_20 0F68                                              u479_20 1E73  
                                            u487_20 1579                                              u399_21 0F67  
                                            u479_21 1E72                                              u487_21 1578  
                                            u567_27 0A34                                              u496_20 107D  
                                            u496_21 107C                                              u488_25 157D  
                                            u568_27 0BB1                                              u497_20 1098  
                                            u489_20 1587                                              u497_21 1097  
                                            u489_21 1586                                              u569_27 07BC  
                                            u498_20 10DF                                              u498_21 10DE  
                                            u499_20 10E6                                              u499_21 10E5  
                                            _SPBRGH 019C                                              _SPBRGL 019B  
                                            _TX1REG 019A                                              _TX1STA 019E  
                                            _TRISC3 0473                                              _TRISC4 0474  
                                  ?_CCP2_Initialize 0070                              __end_of_LCD_Write_4Bit 1DC5  
                           __end_of_I2C1_EVENT_IDLE 1C55                                    __end_of___xxtofl 15C2  
                           __end_of_I2C1_EVENT_NACK 1C7D                             __end_of_I2C1_EVENT_STOP 1CC8  
                            __end_of_LCD_Write_Char 1E2F                         __end_of_I2C1_InterruptClear 1C24  
                                            _Timer0 18C2                                              _Timer2 1830  
                                            _Timer4 18AA                           __end_of_IO_Expander_Write 1D88  
                                      vfprintf@cfmt 00E7                                              ___flge 148C  
                                            ___fleq 119F                __end_of_TMR2_DefaultOverflowCallback 1C1D  
                      _TMR2_DefaultOverflowCallback 1C1C                                           ??___fladd 0020  
                                            ___wmul 1ECB                                           ??___fldiv 0048  
                                 __end_of_TMR1_Stop 1C39                                           ??___flneg 0074  
                                         ??___flmul 002E                                           ??___flsub 007C  
                                         ??___fltol 0074                                              _efgtoa 0083  
                                            _floorf 06A9                                              _memcpy 1022  
                              read_prec_or_width@ap 0076                                  _I2C1_RestartEnable 1C30  
                           shift_out_to_motors@byte 01C1                             __end_of_TMR4_Initialize 1E19  
                                         ?_I2C1_ISR 0070                                    ?_TMR0_Custom_ISR 0070  
                   __end_of_I2C1_EVENT_SEND_RD_ADDR 1CC0                                              pad@buf 007B  
                                 ?_CLOCK_Initialize 0070                                              _strcpy 1E78  
             __end_of_TMR4_OverflowCallbackRegister 1C9B                       _TMR4_OverflowCallbackRegister 1C95  
                                            fputc@c 0070                                              fputs@c 0020  
                                            fputs@i 0021                                              fputs@s 0023  
                                 __end_of_Backlight 1CB8                                  ??_CLOCK_Initialize 01BE  
                                   ___fpclassifyf@e 0020                     __end_of_I2C1_EVENT_SEND_WR_ADDR 1CA2  
                                   ___fpclassifyf@u 0022                                     ___fpclassifyf@x 0070  
                               ?_I2C1_RestartEnable 0070                            ADC_GetConversion@channel 0073  
                       CCP2_LoadDutyValue@dutyValue 01BE                                              putch@c 0070  
                       EUSART_ReceiveISR@tempRxHead 0145                                    __end_of_vfprintf 1F2A  
           INT_SetInterruptHandler@InterruptHandler 01BE                                           ??_sprintf 00EF  
                                            xtoa@fp 002D                                          ___flge@ff1 0040  
                                        ___flge@ff2 0044                                     ??___fpclassifyf 0074  
                                  ?_TMR1_Initialize 0070                                        ___xxtofl@arg 0022  
                                      ___xxtofl@exp 0021                                   _SYSTEM_Initialize 1FB5  
                                      ___xxtofl@val 0074                                          ___fleq@ff1 0070  
                                        ___fleq@ff2 0074             __end_of_Timer0_OverflowCallbackRegister 1CEB  
                 ??_Timer0_OverflowCallbackRegister 01C0                    ?_Timer0_OverflowCallbackRegister 01BE  
                   _Timer0_OverflowCallbackRegister 1CE2                             __end_of__initialization 007F  
                                     ??_I2C1_IsAddr 0070                                       ??_I2C1_IsData 0070  
                                     ??_I2C1_IsNack 0070                                          ___flneg@f1 0070  
                                   ?_LCD_Write_4Bit 0070                                  ?_SYSTEM_Initialize 0070  
                                        ___fltol@f1 0070                                     ?_LCD_Write_Char 0070  
                              ??_I2C1_RestartEnable 0070                                       __end_of_UART1 1830  
                                    __pcstackCOMMON 0070                                        __pidataBANK2 0003  
                               ??_SYSTEM_Initialize 01C0                               TMR0_Custom_ISR@buffer 0133  
                                     __end_of_fputc 0857                                       __end_of_fputs 1FB5  
                        ??_I2C1_ErrorInterruptClear 0070                       ?_TMR2_DefaultOverflowCallback 0070  
                                     __end_of_putch 1C1B                                          ??_I2C1_ISR 0076  
                                  ?_TMR2_Initialize 0070                                      _OPTION_REGbits 0095  
                              _eusartRxStatusBuffer 2370                               __end_of_I2C1_EVENT_RX 1116  
                             __end_of_I2C1_EVENT_TX 10A5                     ??_TMR2_OverflowCallbackRegister 01C0  
                                 _I2C1_EventHandler 1116                                             ??_fputc 0073  
                         __end_of_SYSTEM_Initialize 1FDA                                             ??_fputs 0079  
                                           ??_putch 0070                                          __pbssBANK2 0147  
                                        __pbssBANK3 01A0                                          __pbssBANK4 0220  
                                        __pbssBANK5 02A0                                  ?_I2C1_EventHandler 0070  
                             _I2C1_StatusFlagsClear 1C41                      ?_TMR1_OverflowCallbackRegister 01BE  
                                  ?_I2C1_EVENT_IDLE 0070                                    ?_I2C1_EVENT_NACK 0070  
                                  ?_I2C1_EVENT_STOP 0070                                   __end_of__Umul8_16 1F6D  
                               ??_I2C1_EventHandler 0074                                          __pmaintext 15C2  
                               __end_of_I2C1_IsAddr 1CB0                                             ?___flge 0040  
                                           ?___fleq 0070                                 __end_of_I2C1_IsData 1C6B  
                               __end_of_I2C1_IsNack 1C89                                             ?___wmul 0070  
                                _CCP2_LoadDutyValue 1E45                                          __pintentry 0004  
                                           ?_efgtoa 00A0                                     _I2C1_Initialize 1D88  
                              _EUSART_AutoBaudQuery 0000                                             _CCP1CON 0293  
                                           _CCP2CON 029A                                             ?_floorf 005A  
                                           _CCP1PPS 0E14                                             _CCP2PPS 0E15  
                                           ?_memcpy 0070                                    ?_TMR4_Initialize 0070  
                             __end_of_I2C1_NackSend 1C51                                             ?_strcpy 0070  
                             __end_of_I2C1_BusReset 1C41                                     _EUSART_IsTxDone 0000  
                               ?_CCP2_LoadDutyValue 01BE                                             _LCD_CMD 1DC5  
                                     _eusartRxCount 0168           __end_of_EUSART_RxCompleteCallbackRegister 1D23  
               ??_EUSART_RxCompleteCallbackRegister 01C0                  ?_EUSART_RxCompleteCallbackRegister 01BE  
                 _EUSART_RxCompleteCallbackRegister 1D17                                           ?___xxtofl 0074  
                                   _EUSART_ErrorGet 0000                                           _I2C1_Read 0000  
                                         _I2C1_Host 184C                           __end_of_I2C1_EventHandler 1159  
                            _I2C1_ErrorEventHandler 1F6D                                             _OSCTUNE 0098  
                                           _SSP1ADD 0212                                             _SLRCONA 030C  
                                           _SLRCONB 030D                                             _SLRCONC 030E  
                                      ??_TMR1_Start 0070                                             _SSP1BUF 0211  
                    ?_TMR4_OverflowCallbackRegister 01BE                            __end_of_I2C1_EVENT_ERROR 1C83  
                          __end_of_I2C1_EVENT_RESET 1CA9                       __end_of_I2C1_CallbackRegister 1D2F  
                              ??_CCP2_LoadDutyValue 01C0                                             _i2c_add 0166  
                             __end_of_I2C1_StopSend 1C27                    ??_Timer0_DefaultOverflowCallback 007E  
                   ?_Timer0_DefaultOverflowCallback 0070                                             ___fladd 0BB9  
                                           ___fldiv 0857                                             ___flneg 1CF5  
                                           ___flmul 0DC5                                             ___flsub 1EEA  
                                           ___fltol 12A4                                   _Timer0_Initialize 1E2F  
                                         ?_vfprintf 00E2                                  __end_of_TMR1_Start 1C36  
                                ?_Timer0_Initialize 0070                                    ??_LCD_Set_Cursor 0077  
                                           __ptext1 1159                                             __ptext2 1FB5  
                                           __ptext3 1E2F                                             __ptext4 1CE2  
                                           __ptext5 1E04                                             __ptext6 1C95  
                                           __ptext7 1D9C                                             __ptext8 1C8F  
                                           __ptext9 1E93                                           _T1CONbits 0018  
                                         _T2CONbits 001C                      ??_TMR2_DefaultOverflowCallback 0070  
                             read_prec_or_width@fmt 0023                                 _I2C1_RestartDisable 1C2D  
                                        ??___xxtofl 0078                                           _T4CONbits 0415  
                          ??_PIN_MANAGER_Initialize 01BE                                           _T2HLTbits 001D  
                                     ?_I2C1_AckSend 0070                             _INT_SetInterruptHandler 1CD9  
                               ??_Timer0_Initialize 01C0                                             efgtoa@c 00A4  
                                           efgtoa@d 00B4                                             efgtoa@e 00B9  
                                           efgtoa@f 00A0                                             efgtoa@g 00CE  
                                           efgtoa@h 00C3                                             efgtoa@i 00C1  
                                           efgtoa@l 00C7                                             efgtoa@m 00B6  
                                           efgtoa@n 00CC                                             efgtoa@p 00AB  
                                           efgtoa@t 00AD                                             efgtoa@u 00D2  
                                           efgtoa@w 00BB                                     _i2c1_eventTable 1860  
                                         _LCD_Clear 1CD0                                           _T4HLTbits 0416  
                                           _sprintf 1F2A                                             clrloop0 1D3C  
     TMR4_OverflowCallbackRegister@InterruptHandler 01BE       TMR2_OverflowCallbackRegister@InterruptHandler 01BE  
                              end_of_initialization 007F                                             floorf@e 0068  
                                         _T2RSTbits 001F                                             floorf@m 0064  
                                           floorf@u 006A                                             floorf@x 005A  
                                           memcpy@d 0076                                             memcpy@n 0071  
                                         _T4RSTbits 0418                                             memcpy@s 0077  
                            ?_I2C1_StatusFlagsClear 0070                                             fputc@fp 0072  
                                           fputs@fp 0078                                         _I2C1_IsAddr 1CA9  
                                       _I2C1_IsData 1C66                                         _I2C1_IsNack 1C83  
                                _read_prec_or_width 1243                                         _I2C1_IsBusy 0000  
                                 _EUSART_Initialize 1049                                ?_I2C1_RestartDisable 0070  
                           __end_of_I2C1_Initialize 1D9C                           __end_of_Timer0_Initialize 1E45  
                                ?_EUSART_Initialize 0070                                   __end_of_vfpfcnvrt 1800  
                                        efgtoa@mode 00B2                                          efgtoa@sign 00CB  
                                 _EUSART_ReceiveISR 1314                                 ?_read_prec_or_width 0076  
                                  vfpfcnvrt@convarg 00DA                                    _I2C1_DataReceive 1C27  
                                        ??_vfprintf 00E5                                  ?_EUSART_ReceiveISR 0070  
                                           strcpy@d 0074                                 ??_EUSART_Initialize 01C0  
                                         _PORTCbits 000E                                           _TMR1_Stop 1C36  
                                         _TMR2_Stop 0000                               _TMR1_OverflowCallback 01B4  
                                         _TMR4_Stop 0000                                          LCD_CMD@CMD 0075  
                                         _SSPDATPPS 0E21                                           _SSPCLKPPS 0E20  
                                       ___fladd@grs 007B                                 ??_EUSART_ReceiveISR 0140  
                                    ??_I2C1_AckSend 0070                                       ___xxtofl@sign 0020  
      TMR1_OverflowCallbackRegister@CallbackHandler 01BE      Timer0_OverflowCallbackRegister@CallbackHandler 01BE  
                                        ?_LCD_Clear 0070                                ??_read_prec_or_width 0078  
                                       ___fldiv@grs 0054                                         ___fldiv@rem 004D  
                               _EUSART_Deinitialize 0000                                           _Backlight 1CB0  
                                  ??_LCD_Write_4Bit 0072                                   LCD_Write_String@i 0079  
                                  ??_LCD_Write_Char 0074                                         ___flmul@grs 0034  
                         __end_of_EUSART_Initialize 1076                                         _CCP1CONbits 0293  
                               _shift_out_to_motors 1159                                         _CCP2CONbits 029A  
                             ??_I2C1_RestartDisable 0070                           __end_of_EUSART_ReceiveISR 138C  
                                    __end_of_Timer0 18CE                                      __end_of_Timer2 183C  
                                    __end_of_Timer4 18B6                        __end_of_INTERRUPT_Initialize 1D3B  
                                    _I2C1_ERROR_ISR 1C55                                      __end_of___flge 1517  
                                    __end_of___fleq 11ED                                         vfpfcnvrt@ap 006F  
                                       vfpfcnvrt@cp 00E0                                         vfpfcnvrt@fp 00DE  
                                    __end_of___wmul 1EEA                                    _LCD_Write_String 1EAE  
                                    __end_of_efgtoa 06A9                          __end_of_I2C1_ReceiveEnable 1C2D  
                                      _EUSART_Write 0000                             __end_of_i2c1_eventTable 1872  
                                    _ADC_Initialize 1D00                                      __end_of_floorf 0794  
                              ?_shift_out_to_motors 0070                                          ?_TMR1_Stop 0070  
                                    __end_of_memcpy 1049                                          floorf@F521 01A0  
                         ??_INT_SetInterruptHandler 01C0                                      __end_of_strcpy 1E93  
                               start_initialization 0043                                         __end_of_pad 10D5  
                                        ?_Backlight 0070                                   ??_UART_Custom_ISR 012D  
                                 ??_I2C_Master_Wait 0070                             _I2C1_EVENT_SEND_RD_ADDR 1CB8  
                                 ??_I2C_Master_Stop 0070                           _EUSART_RxInterruptHandler 01BA  
                             __end_of___fpclassifyf 140B                                    ?_I2C1_Initialize 0070  
                           _I2C1_EVENT_SEND_WR_ADDR 1C9B                              __end_of_I2C1_ERROR_ISR 1C59  
                                       vfprintf@fmt 00E2                          _EUSART_FramingErrorHandler 015B  
                                          ??___flge 0048                                            ??___fleq 0078  
                                  _I2C1_IsRxBufFull 1C49                                            ??___wmul 0074  
                                       _CCPTMRSbits 029E                                            ??_efgtoa 00A5  
                            __end_of_ADC_Initialize 1D0B                                           __Umul8_16 1F4A  
                                       __pdataBANK2 016C                                            ??_floorf 005E  
                                          ??_memcpy 0073                               ??_shift_out_to_motors 01BE  
                   ??_TMR1_OverflowCallbackRegister 01C0                                            ??_strcpy 0072  
                                         ___fladd@a 0074                                           ___fladd@b 0070  
                           ?_I2C1_ErrorEventHandler 0070                                            ?_LCD_CMD 0070  
                                         ___fldiv@a 0040                                           ___fldiv@b 0044  
                                       __pbssBIGRAM 2370                                           ___flmul@a 002A  
                                         ___flmul@b 0026                                           ___flsub@a 0040  
                                         ___flsub@b 0044                                           ___latbits 0002  
                                     __pcstackBANK0 0020                                       __pcstackBANK1 00A0  
                                     __pcstackBANK2 0120                                       __pcstackBANK3 01BE  
                                       ??_LCD_Clear 0076                           ?_I2C1_ErrorInterruptClear 0070  
                      __end_of_I2C1_DefaultCallback 1C1C                                   ?_I2C1_EVENT_ERROR 0070  
                                 ?_I2C1_EVENT_RESET 0070                                shift_out_to_motors@i 01C2  
                             _TMR2_OverflowCallback 01B8                                  ??_I2C1_EVENT_ERROR 0070  
                                 ??_CCP1_Initialize 01BE                                  ??_I2C1_EVENT_RESET 0070  
                                  _I2C_Master_Start 1C6B                                    _I2C_Master_Write 1D65  
                                       _efgtoa$3151 00AF                                __end_of_I2C1_AckSend 1C49  
                            _PIN_MANAGER_Initialize 11ED                               IO_Expander_Write@Data 0071  
                   ??_TMR4_OverflowCallbackRegister 01C0                                     ?_I2C1_ERROR_ISR 0070  
                        __end_of_Timer0_OverflowISR 1022                                            ?___fladd 0070  
                                          ?___fldiv 0040                                           __ptext100 1CB0  
                                         __ptext101 1D75                                           __ptext102 1D65  
                                          ?___flneg 0070                                           __ptext103 1C71  
                                         __ptext104 1C6B                                           __ptext105 1D0B  
                                         __ptext106 1C39                                           __ptext107 1C19  
                                          ?___flmul 0026                                            ?___flsub 0040  
                                          ?___fltol 0070                                          ?__Umul8_16 0070  
                                   ?_ADC_Initialize 0070                                        _eusartRxHead 016A  
                                      _eusartRxTail 0169                                            _I2C1_ISR 1C59  
                              I2C_Master_Write@data 0070                        ??_INTERRUPT_InterruptManager 007E  
                    __end_of_I2C1_ErrorEventHandler 1F90                                         ??_TMR1_Stop 0070  
                                          _BAUD1CON 019F                                   ??_CCP2_Initialize 01BE  
                            _EUSART_TransmitDisable 0000              __end_of_Timer0_DefaultOverflowCallback 1C61  
                    _Timer0_DefaultOverflowCallback 1C5D                       I2C1_EVENT_ERROR@retEventState 0070  
                                       ??_Backlight 0072                             ??_I2C1_StatusFlagsClear 0070  
                                          ?_sprintf 00E9                            __end_of_I2C1_DataReceive 1C2A  
                                          _T2CLKCON 001E                           ??_I2C1_EVENT_SEND_RD_ADDR 0070  
                                          _T4CLKCON 0417                                    _EUSART_IsRxReady 0000  
                              _INTERRUPT_Initialize 1D2F                                    _EUSART_IsTxReady 0000  
                                    _eusartRxBuffer 02A0                                    _CLOCK_Initialize 1CC8  
                                 ??_TMR0_Custom_ISR 012D                                        ?_I2C1_IsAddr 0070  
                                    ___wmul@product 0074                                        ?_I2C1_IsData 0070  
                                          _LATBbits 010D                                            _LATCbits 010E  
                                      ?_I2C1_IsNack 0070                           ??_I2C1_EVENT_SEND_WR_ADDR 0071  
                             _I2C1_CallbackRegister 1D23                                           clear_ram0 1D3B  
                                          _PIE1bits 0090                                            _PIE2bits 0091  
                                 _eusartRxLastError 01B0                                          _I2C1_Close 1DEF  
                                          _PIR1bits 0010                                            _PIR2bits 0011  
                                        _I2C1_Write 0000                                      _I2C1_WriteRead 0000  
                                          _SSP1CON1 0215                                            _SSP1CON2 0216  
                                          _SSP1CON3 0217                                            _SSP1STAT 0214  
                                         _vfpfcnvrt 1670                                   ??_TMR1_Initialize 01C0  
                                        _ADCON0bits 009D                                   ___wmul@multiplier 0070  
                              _TMR0_Custom_ISR$3581 0143                        I2C1_EVENT_NACK@retEventState 0070  
                                     _I2C1_EVENT_RX 10D5                                       _I2C1_EVENT_TX 1076  
                                       _EUSART_Read 0000                                          vfpfcnvrt@c 00DF  
                             ?_INTERRUPT_Initialize 0070                            __end_of_LCD_Write_String 1ECB  
                                 ??_TMR2_Initialize 01C0                                 _I2C1_InterruptClear 1C21  
                                         memcpy@tmp 0074                                          vfprintf@ap 00E4  
                                        vfprintf@fp 00E6                                   _ADC_GetConversion 1E5E  
                                     _I2C1_Callback 01BC                                         ??__Umul8_16 0072  
                                ?_ADC_GetConversion 0070                                          ?_vfpfcnvrt 006E  
                              _I2C1_DefaultCallback 1C1B                                ?_I2C1_InterruptClear 0070  
                                ___fpclassifyf@F465 01A4                               _TMR1_InterruptHandler 01B6  
                                     _I2C1_NackSend 1C4D                                       _I2C1_BusReset 1C3D  
                               ??_ADC_GetConversion 0072                                          sprintf@fmt 00E9  
                                   _UART_Custom_ISR 0794                                   ??_I2C1_EVENT_IDLE 0070  
                                 ??_I2C1_EVENT_NACK 0070                                            ___xxtofl 1517  
                                   _I2C_Master_Wait 1D0B                                     _I2C_Master_Stop 1C71  
                                 ??_I2C1_EVENT_STOP 0070                                      ?_I2C1_EVENT_RX 0070  
                                    ?_I2C1_EVENT_TX 0070                                       _I2C1_ErrorGet 0000  
                                _EUSART_AutoBaudSet 0000                                            __ptext10 1C89  
                                          __ptext11 11ED                                            __ptext20 1CC8  
                                          __ptext12 1D2F                                            __ptext21 07F5  
                                          __ptext13 1CD9                                          _T1GCONbits 0019  
                                          __ptext30 1C5D                                            __ptext22 1CEB  
                                          __ptext14 1D88                                            __ptext31 0A01  
                                          __ptext23 1D00                                            __ptext15 1D23  
                                          __ptext40 1CA9                                            __ptext32 1517  
                                          __ptext24 1E45                                            __ptext16 1049  
                                          __ptext41 1C55                                            __ptext33 1C36  
                                          __ptext17 1D17                                            __ptext50 1C51  
                                          __ptext42 1F6D                                            __ptext34 1C33  
                                          __ptext26 1000                                            __ptext18 1D56  
                                          __ptext51 1076                                            __ptext43 1CA2  
                                          __ptext35 1E5E                                            __ptext27 0002  
                                          __ptext19 1D47                                            __ptext60 1C24  
                                          __ptext52 1C30                                            __ptext44 1CC0  
                                          __ptext36 1C59                                            __ptext28 1C1D  
                                          __ptext61 1DEF                                            __ptext53 1C61  
                                          __ptext45 1C7D                                            __ptext37 1116  
                                          __ptext29 1C1C                                            __ptext70 1F0A  
                                          __ptext62 1C41                                            __ptext54 1C2D  
                                          __ptext46 1C77                                            __ptext38 1C83  
                                          __ptext71 1670                                            __ptext63 1C21  
                                          __ptext55 1C2A                                            __ptext47 10D5  
                                          __ptext39 1C66                                            __ptext80 1C1A  
                                          __ptext72 140B                                            __ptext64 1C1E  
                                          __ptext56 1C4D                                            __ptext48 1C9B  
                                          __ptext81 1022                                            __ptext73 1243  
                                          __ptext65 1C3D                                            __ptext57 1C49  
                                          __ptext49 1CB8                                            __ptext90 1F4A  
                                          __ptext82 1DDA                                            __ptext74 1ECB  
                                          __ptext66 1C1B                                            __ptext58 1C27  
                                          __ptext91 148C                                            __ptext83 06A9  
                                          __ptext75 0083                                            __ptext67 1314  
                                          __ptext59 1C45                                            __ptext92 119F  
                                          __ptext84 138C                                            __ptext76 1E78  
                                          __ptext68 0794                                            __ptext93 0857  
                                          __ptext85 12A4                                            __ptext77 10A5  
                                          __ptext69 1F2A                                            __ptext94 1EAE  
                                          __ptext86 1EEA                                            __ptext78 1F90  
                                          __ptext95 1E19                                            __ptext87 0BB9  
                                          __ptext79 0800                                            __ptext96 1FDA  
                                          __ptext88 1CF5                                            __ptext97 1CD0  
                                          __ptext89 0DC5                                            __ptext98 1DC5  
                                          __ptext99 1DB0                            __end_of_I2C1_IsRxBufFull 1C4D  
                                      _SSP1CON1bits 0215                                        _SSP1CON2bits 0216  
                       __end_of_I2C1_RestartDisable 1C30                                  _I2C1_ReceiveEnable 1C2A  
                                          _distance 01AC                               _EUSART_TransmitEnable 0000  
                                        strcpy@dest 0075                              ?_I2C1_CallbackRegister 01BE  
                                   _BackLight_State 016C                                   ??_TMR4_Initialize 01C0  
             __end_of_TMR2_OverflowCallbackRegister 1C95                       _TMR2_OverflowCallbackRegister 1C8F  
                               ?_I2C1_ReceiveEnable 0070                           __end_of_ADC_GetConversion 1E78  
                                       ?_I2C1_Close 0070                              UART_Custom_ISR@Rx_Code 013F  
                                     _I2C1_StopSend 1C24                __end_of_TMR1_DefaultOverflowCallback 1C1E  
                      _TMR1_DefaultOverflowCallback 1C1D                                          _RC1STAbits 019D  
                                          efgtoa@fp 00B8                                            efgtoa@ne 00A9  
                                          efgtoa@pp 00B1                                            efgtoa@ou 00BD  
                                          int$flags 007E                                            _vfprintf 1F0A  
                __end_of_INTERRUPT_InterruptManager 0041                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 1D56               ??_EUSART_FramingErrorCallbackRegister 01C0  
              ?_EUSART_FramingErrorCallbackRegister 01BE                 _EUSART_FramingErrorCallbackRegister 1D47  
                             ?_I2C1_DefaultCallback 0070                                        _SSP1STATbits 0214  
                             ??_I2C1_InterruptClear 0070                    __end_of_I2C1_ErrorInterruptClear 1C21  
                                    ?_I2C1_NackSend 0070                                      ?_I2C1_BusReset 0070  
              __end_of_TMR4_DefaultOverflowCallback 0003                        _TMR4_DefaultOverflowCallback 0002  
                              ??_I2C1_ReceiveEnable 0070                            __end_of_I2C_Master_Start 1C71  
                          __end_of_I2C_Master_Write 1D75                                          _INTCONbits 000B  
                                          memcpy@d1 0075                                            memcpy@s1 0070  
                                      _I2C1_AckSend 1C45                                  LCD_Write_Char@Data 0075  
                              _INT_InterruptHandler 0163                                     _CCP1_Initialize 1CEB  
                                    __pstringtext10 188F                                      __pstringtext11 189D  
                                    __pstringtext12 18CE                                      __pstringtext13 18D7  
                                    __pstringtext14 18E0                                      __pstringtext15 18E4  
                                    __pstringtext16 0000                              ??_INTERRUPT_Initialize 01C0  
                               _TMR2_PeriodCountSet 0000                          I2C1_EVENT_RX@retEventState 0071  
                           _Timer0_OverflowCallback 0161                                            intlevel1 0000  
                                         sprintf@ap 0121                                    ??_I2C1_ERROR_ISR 0076  
                           ?_PIN_MANAGER_Initialize 0070                          __end_of_I2C1_RestartEnable 1C33  
        __end_of_EUSART_DefaultFramingErrorCallback 1C1A                ??_EUSART_DefaultFramingErrorCallback 0070  
               ?_EUSART_DefaultFramingErrorCallback 0070                  _EUSART_DefaultFramingErrorCallback 1C19  
                                         strcpy@src 0070                                      ?_I2C1_StopSend 0070  
                                  ??_ADC_Initialize 01BE                         __end_of_shift_out_to_motors 119F  
                                   _CCP2_Initialize 07F5                                         efgtoa@nmode 00B3  
                     ?_TMR1_DefaultOverflowCallback 0070                               UART_Custom_ISR@buffer 012F  
                          ?_INT_SetInterruptHandler 01BE                             __end_of_UART_Custom_ISR 07F5  
                           __end_of_I2C_Master_Wait 1D17                             __end_of_I2C_Master_Stop 1C77  
                                       ??_vfpfcnvrt 00D6                            __end_of_CLOCK_Initialize 1CD0  
                                     __pstringtext1 1800                                       __pstringtext2 184C  
                                     __pstringtext3 1860                                       __pstringtext4 18AA  
                                     __pstringtext5 18B6                                       __pstringtext6 18C2  
                                     __pstringtext7 1830                                       __pstringtext8 1872  
                                     __pstringtext9 1881                              __Umul8_16@multiplicand 0070  
                                        _OPTION_REG 0095                                         _temperature 01A8  
                                          sprintf@f 0122                                            sprintf@s 0120  
                                   ??_I2C1_EVENT_RX 0070                                     ??_I2C1_EVENT_TX 0071  
                                   _TMR0_Custom_ISR 0A01                       ?_TMR4_DefaultOverflowCallback 0070  
                                _Timer0_OverflowISR 1000                                   LCD_Set_Cursor@COL 0076  
                                 _I2C1_DataTransmit 1C61                                   LCD_Set_Cursor@ROW 0077  
                             _Timer0_PeriodCountSet 0000                                          _TMR1_Tasks 0000  
                                        _TMR2_Tasks 0000                                          _TMR1_Start 1C33  
                                        _TX1STAbits 019E                                          _TMR2_Start 0000  
                                        _TMR1_Write 0000                                          _TMR4_Tasks 0000  
                                     ___fladd@signs 0078                                          _TMR4_Start 0000  
                                ?_I2C1_DataTransmit 0070                                   ?_I2C1_DataReceive 0070  
                    __end_of_PIN_MANAGER_Initialize 1243                       __end_of_I2C1_StatusFlagsClear 1C45  
                               ?_Timer0_OverflowISR 0070                                        ___fladd@aexp 0079  
                                      ___fladd@bexp 007A                                  ??_I2C1_DataReceive 0070  
                             _TMR4_OverflowCallback 01B2                                __Umul8_16@multiplier 0078  
                               _TMR4_PeriodCountSet 0000                          I2C1_EVENT_TX@retEventState 0073  
                               ??_I2C1_DataTransmit 0070                                     _TMR1_Initialize 1E93  
                                 __Umul8_16@product 0074  
